/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface ApplyArchiveRule {
  readonly analyzerArn: string;
  readonly clientToken?: string;
  readonly ruleName: string;
}

export interface CancelPolicyGeneration {
  readonly jobId: string;
}

export interface CreateAccessPreview {
  readonly analyzerArn: string;
  readonly clientToken?: string;
  readonly configurations: {[key: string]: any};
}

export interface CreateAnalyzer {
  readonly analyzerName: string;
  readonly archiveRules?: [];
  readonly clientToken?: string;
  readonly tags?: {[key: string]: any};
  readonly type: string;
}

export interface CreateArchiveRule {
  readonly analyzerName: string;
  readonly clientToken?: string;
  readonly filter: {[key: string]: any};
  readonly ruleName: string;
}

export interface DeleteAnalyzer {
  readonly analyzerName: string;
  readonly clientToken?: string;
}

export interface DeleteArchiveRule {
  readonly analyzerName: string;
  readonly clientToken?: string;
  readonly ruleName: string;
}

export interface GetAccessPreview {
  readonly accessPreviewId: string;
  readonly analyzerArn: string;
}

export interface GetAnalyzedResource {
  readonly analyzerArn: string;
  readonly resourceArn: string;
}

export interface GetAnalyzer {
  readonly analyzerName: string;
}

export interface GetArchiveRule {
  readonly analyzerName: string;
  readonly ruleName: string;
}

export interface GetFinding {
  readonly analyzerArn: string;
  readonly id: string;
}

export interface GetGeneratedPolicy {
  readonly includeResourcePlaceholders?: boolean;
  readonly includeServiceLevelTemplate?: boolean;
  readonly jobId: string;
}

export interface ListAccessPreviewFindings {
  readonly accessPreviewId: string;
  readonly analyzerArn: string;
  readonly filter?: {[key: string]: any};
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListAccessPreviews {
  readonly analyzerArn: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListAnalyzedResources {
  readonly analyzerArn: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly resourceType?: string;
}

export interface ListAnalyzers {
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly type?: string;
}

export interface ListArchiveRules {
  readonly analyzerName: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListFindings {
  readonly analyzerArn: string;
  readonly filter?: {[key: string]: any};
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly sort?: SortCriteria;
}

export interface ListPolicyGenerations {
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly principalArn?: string;
}

export interface ListTagsForResource {
  readonly resourceArn: string;
}

export interface StartPolicyGeneration {
  readonly clientToken?: string;
  readonly cloudTrailDetails?: CloudTrailDetails;
  readonly policyGenerationDetails: PolicyGenerationDetails;
}

export interface StartResourceScan {
  readonly analyzerArn: string;
  readonly resourceArn: string;
}

export interface TagResource {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

export interface UntagResource {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface UpdateArchiveRule {
  readonly analyzerName: string;
  readonly clientToken?: string;
  readonly filter: {[key: string]: any};
  readonly ruleName: string;
}

export interface UpdateFindings {
  readonly analyzerArn: string;
  readonly clientToken?: string;
  readonly ids?: [];
  readonly resourceArn?: string;
  readonly status: string;
}

export interface ValidatePolicy {
  readonly locale?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly policyDocument: string;
  readonly policyType: string;
  readonly validatePolicyResourceType?: string;
}

export interface AccessDeniedException {
  readonly message: string;
}

export interface AccessPreview {
  readonly analyzerArn: string;
  readonly configurations: {[key: string]: any};
  readonly createdAt: Date;
  readonly id: string;
  readonly status: string;
  readonly statusReason?: AccessPreviewStatusReason;
}

export interface AccessPreviewFinding {
  readonly action?: [];
  readonly changeType: string;
  readonly condition?: {[key: string]: any};
  readonly createdAt: Date;
  readonly error?: string;
  readonly existingFindingId?: string;
  readonly existingFindingStatus?: string;
  readonly id: string;
  readonly isPublic?: boolean;
  readonly principal?: {[key: string]: any};
  readonly resource?: string;
  readonly resourceOwnerAccount: string;
  readonly resourceType: string;
  readonly sources?: [];
  readonly status: string;
}

export interface AccessPreviewStatusReason {
  readonly code: string;
}

export interface AccessPreviewSummary {
  readonly analyzerArn: string;
  readonly createdAt: Date;
  readonly id: string;
  readonly status: string;
  readonly statusReason?: AccessPreviewStatusReason;
}

export interface AclGrantee {
  readonly id?: string;
  readonly uri?: string;
}

export interface AnalyzedResource {
  readonly actions?: [];
  readonly analyzedAt: Date;
  readonly createdAt: Date;
  readonly error?: string;
  readonly isPublic: boolean;
  readonly resourceArn: string;
  readonly resourceOwnerAccount: string;
  readonly resourceType: string;
  readonly sharedVia?: [];
  readonly status?: string;
  readonly updatedAt: Date;
}

export interface AnalyzedResourceSummary {
  readonly resourceArn: string;
  readonly resourceOwnerAccount: string;
  readonly resourceType: string;
}

export interface AnalyzerSummary {
  readonly arn: string;
  readonly createdAt: Date;
  readonly lastResourceAnalyzed?: string;
  readonly lastResourceAnalyzedAt?: Date;
  readonly name: string;
  readonly status: string;
  readonly statusReason?: StatusReason;
  readonly tags?: {[key: string]: any};
  readonly type: string;
}

export interface ApplyArchiveRuleRequest {
  readonly analyzerArn: string;
  readonly clientToken?: string;
  readonly ruleName: string;
}

export interface ArchiveRuleSummary {
  readonly createdAt: Date;
  readonly filter: {[key: string]: any};
  readonly ruleName: string;
  readonly updatedAt: Date;
}

export interface CancelPolicyGenerationRequest {
  readonly jobId: string;
}

export interface CancelPolicyGenerationResponse {
}

export interface CloudTrailDetails {
  readonly accessRole: string;
  readonly endTime?: Date;
  readonly startTime: Date;
  readonly trails: [];
}

export interface CloudTrailProperties {
  readonly endTime: Date;
  readonly startTime: Date;
  readonly trailProperties: [];
}

export interface Configuration {
  readonly iamRole?: IamRoleConfiguration;
  readonly kmsKey?: KmsKeyConfiguration;
  readonly s3Bucket?: S3BucketConfiguration;
  readonly secretsManagerSecret?: SecretsManagerSecretConfiguration;
  readonly sqsQueue?: SqsQueueConfiguration;
}

export interface ConflictException {
  readonly message: string;
  readonly resourceId: string;
  readonly resourceType: string;
}

export interface CreateAccessPreviewRequest {
  readonly analyzerArn: string;
  readonly clientToken?: string;
  readonly configurations: {[key: string]: any};
}

export interface CreateAccessPreviewResponse {
  readonly id: string;
}

export interface CreateAnalyzerRequest {
  readonly analyzerName: string;
  readonly archiveRules?: [];
  readonly clientToken?: string;
  readonly tags?: {[key: string]: any};
  readonly type: string;
}

export interface CreateAnalyzerResponse {
  readonly arn?: string;
}

export interface CreateArchiveRuleRequest {
  readonly analyzerName: string;
  readonly clientToken?: string;
  readonly filter: {[key: string]: any};
  readonly ruleName: string;
}

export interface Criterion {
  readonly contains?: [];
  readonly eq?: [];
  readonly exists?: boolean;
  readonly neq?: [];
}

export interface DeleteAnalyzerRequest {
  readonly analyzerName: string;
  readonly clientToken?: string;
}

export interface DeleteArchiveRuleRequest {
  readonly analyzerName: string;
  readonly clientToken?: string;
  readonly ruleName: string;
}

export interface Finding {
  readonly action?: [];
  readonly analyzedAt: Date;
  readonly condition: {[key: string]: any};
  readonly createdAt: Date;
  readonly error?: string;
  readonly id: string;
  readonly isPublic?: boolean;
  readonly principal?: {[key: string]: any};
  readonly resource?: string;
  readonly resourceOwnerAccount: string;
  readonly resourceType: string;
  readonly sources?: [];
  readonly status: string;
  readonly updatedAt: Date;
}

export interface FindingSource {
  readonly detail?: FindingSourceDetail;
  readonly type: string;
}

export interface FindingSourceDetail {
  readonly accessPointArn?: string;
}

export interface FindingSummary {
  readonly action?: [];
  readonly analyzedAt: Date;
  readonly condition: {[key: string]: any};
  readonly createdAt: Date;
  readonly error?: string;
  readonly id: string;
  readonly isPublic?: boolean;
  readonly principal?: {[key: string]: any};
  readonly resource?: string;
  readonly resourceOwnerAccount: string;
  readonly resourceType: string;
  readonly sources?: [];
  readonly status: string;
  readonly updatedAt: Date;
}

export interface GeneratedPolicy {
  readonly policy: string;
}

export interface GeneratedPolicyProperties {
  readonly cloudTrailProperties?: CloudTrailProperties;
  readonly isComplete?: boolean;
  readonly principalArn: string;
}

export interface GeneratedPolicyResult {
  readonly generatedPolicies?: [];
  readonly properties: GeneratedPolicyProperties;
}

export interface GetAccessPreviewRequest {
  readonly accessPreviewId: string;
  readonly analyzerArn: string;
}

export interface GetAccessPreviewResponse {
  readonly accessPreview: AccessPreview;
}

export interface GetAnalyzedResourceRequest {
  readonly analyzerArn: string;
  readonly resourceArn: string;
}

export interface GetAnalyzedResourceResponse {
  readonly resource?: AnalyzedResource;
}

export interface GetAnalyzerRequest {
  readonly analyzerName: string;
}

export interface GetAnalyzerResponse {
  readonly analyzer: AnalyzerSummary;
}

export interface GetArchiveRuleRequest {
  readonly analyzerName: string;
  readonly ruleName: string;
}

export interface GetArchiveRuleResponse {
  readonly archiveRule: ArchiveRuleSummary;
}

export interface GetFindingRequest {
  readonly analyzerArn: string;
  readonly id: string;
}

export interface GetFindingResponse {
  readonly finding?: Finding;
}

export interface GetGeneratedPolicyRequest {
  readonly includeResourcePlaceholders?: boolean;
  readonly includeServiceLevelTemplate?: boolean;
  readonly jobId: string;
}

export interface GetGeneratedPolicyResponse {
  readonly generatedPolicyResult: GeneratedPolicyResult;
  readonly jobDetails: JobDetails;
}

export interface IamRoleConfiguration {
  readonly trustPolicy?: string;
}

export interface InlineArchiveRule {
  readonly filter: {[key: string]: any};
  readonly ruleName: string;
}

export interface InternalServerException {
  readonly message: string;
  readonly retryAfterSeconds?: number;
}

export interface InternetConfiguration {
}

export interface JobDetails {
  readonly completedOn?: Date;
  readonly jobError?: JobError;
  readonly jobId: string;
  readonly startedOn: Date;
  readonly status: string;
}

export interface JobError {
  readonly code: string;
  readonly message: string;
}

export interface KmsGrantConfiguration {
  readonly constraints?: KmsGrantConstraints;
  readonly granteePrincipal: string;
  readonly issuingAccount: string;
  readonly operations: [];
  readonly retiringPrincipal?: string;
}

export interface KmsGrantConstraints {
  readonly encryptionContextEquals?: {[key: string]: any};
  readonly encryptionContextSubset?: {[key: string]: any};
}

export interface KmsKeyConfiguration {
  readonly grants?: [];
  readonly keyPolicies?: {[key: string]: any};
}

export interface ListAccessPreviewFindingsRequest {
  readonly accessPreviewId: string;
  readonly analyzerArn: string;
  readonly filter?: {[key: string]: any};
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListAccessPreviewFindingsResponse {
  readonly findings: [];
  readonly nextToken?: string;
}

export interface ListAccessPreviewsRequest {
  readonly analyzerArn: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListAccessPreviewsResponse {
  readonly accessPreviews: [];
  readonly nextToken?: string;
}

export interface ListAnalyzedResourcesRequest {
  readonly analyzerArn: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly resourceType?: string;
}

export interface ListAnalyzedResourcesResponse {
  readonly analyzedResources: [];
  readonly nextToken?: string;
}

export interface ListAnalyzersRequest {
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly type?: string;
}

export interface ListAnalyzersResponse {
  readonly analyzers: [];
  readonly nextToken?: string;
}

export interface ListArchiveRulesRequest {
  readonly analyzerName: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListArchiveRulesResponse {
  readonly archiveRules: [];
  readonly nextToken?: string;
}

export interface ListFindingsRequest {
  readonly analyzerArn: string;
  readonly filter?: {[key: string]: any};
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly sort?: SortCriteria;
}

export interface ListFindingsResponse {
  readonly findings: [];
  readonly nextToken?: string;
}

export interface ListPolicyGenerationsRequest {
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly principalArn?: string;
}

export interface ListPolicyGenerationsResponse {
  readonly nextToken?: string;
  readonly policyGenerations: [];
}

export interface ListTagsForResourceRequest {
  readonly resourceArn: string;
}

export interface ListTagsForResourceResponse {
  readonly tags?: {[key: string]: any};
}

export interface Location {
  readonly path: [];
  readonly span: Span;
}

export interface NetworkOriginConfiguration {
  readonly internetConfiguration?: InternetConfiguration;
  readonly vpcConfiguration?: VpcConfiguration;
}

export interface PathElement {
  readonly index?: number;
  readonly key?: string;
  readonly substring?: Substring;
  readonly value?: string;
}

export interface PolicyGeneration {
  readonly completedOn?: Date;
  readonly jobId: string;
  readonly principalArn: string;
  readonly startedOn: Date;
  readonly status: string;
}

export interface PolicyGenerationDetails {
  readonly principalArn: string;
}

export interface Position {
  readonly column: number;
  readonly line: number;
  readonly offset: number;
}

export interface ResourceNotFoundException {
  readonly message: string;
  readonly resourceId: string;
  readonly resourceType: string;
}

export interface S3AccessPointConfiguration {
  readonly accessPointPolicy?: string;
  readonly networkOrigin?: NetworkOriginConfiguration;
  readonly publicAccessBlock?: S3PublicAccessBlockConfiguration;
}

export interface S3BucketAclGrantConfiguration {
  readonly grantee: AclGrantee;
  readonly permission: string;
}

export interface S3BucketConfiguration {
  readonly accessPoints?: {[key: string]: any};
  readonly bucketAclGrants?: [];
  readonly bucketPolicy?: string;
  readonly bucketPublicAccessBlock?: S3PublicAccessBlockConfiguration;
}

export interface S3PublicAccessBlockConfiguration {
  readonly ignorePublicAcls: boolean;
  readonly restrictPublicBuckets: boolean;
}

export interface SecretsManagerSecretConfiguration {
  readonly kmsKeyId?: string;
  readonly secretPolicy?: string;
}

export interface ServiceQuotaExceededException {
  readonly message: string;
  readonly resourceId: string;
  readonly resourceType: string;
}

export interface SortCriteria {
  readonly attributeName?: string;
  readonly orderBy?: string;
}

export interface Span {
  readonly end: Position;
  readonly start: Position;
}

export interface SqsQueueConfiguration {
  readonly queuePolicy?: string;
}

export interface StartPolicyGenerationRequest {
  readonly clientToken?: string;
  readonly cloudTrailDetails?: CloudTrailDetails;
  readonly policyGenerationDetails: PolicyGenerationDetails;
}

export interface StartPolicyGenerationResponse {
  readonly jobId: string;
}

export interface StartResourceScanRequest {
  readonly analyzerArn: string;
  readonly resourceArn: string;
}

export interface StatusReason {
  readonly code: string;
}

export interface Substring {
  readonly length: number;
  readonly start: number;
}

export interface TagResourceRequest {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

export interface TagResourceResponse {
}

export interface ThrottlingException {
  readonly message: string;
  readonly retryAfterSeconds?: number;
}

export interface Trail {
  readonly allRegions?: boolean;
  readonly cloudTrailArn: string;
  readonly regions?: [];
}

export interface TrailProperties {
  readonly allRegions?: boolean;
  readonly cloudTrailArn: string;
  readonly regions?: [];
}

export interface UntagResourceRequest {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface UntagResourceResponse {
}

export interface UpdateArchiveRuleRequest {
  readonly analyzerName: string;
  readonly clientToken?: string;
  readonly filter: {[key: string]: any};
  readonly ruleName: string;
}

export interface UpdateFindingsRequest {
  readonly analyzerArn: string;
  readonly clientToken?: string;
  readonly ids?: [];
  readonly resourceArn?: string;
  readonly status: string;
}

export interface ValidatePolicyFinding {
  readonly findingDetails: string;
  readonly findingType: string;
  readonly issueCode: string;
  readonly learnMoreLink: string;
  readonly locations: [];
}

export interface ValidatePolicyRequest {
  readonly locale?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly policyDocument: string;
  readonly policyType: string;
  readonly validatePolicyResourceType?: string;
}

export interface ValidatePolicyResponse {
  readonly findings: [];
  readonly nextToken?: string;
}

export interface ValidationException {
  readonly fieldList?: [];
  readonly message: string;
  readonly reason: string;
}

export interface ValidationExceptionField {
  readonly message: string;
  readonly name: string;
}

export interface VpcConfiguration {
  readonly vpcId: string;
}


