/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CreateDataset {
  readonly ProjectName: string;
  readonly DatasetType: string;
  readonly DatasetSource?: DatasetSource;
  readonly ClientToken?: string;
}

export interface CreateModel {
  readonly ProjectName: string;
  readonly Description?: string;
  readonly ClientToken?: string;
  readonly OutputConfig: OutputConfig;
  readonly KmsKeyId?: string;
  readonly Tags?: [];
}

export interface CreateProject {
  readonly ProjectName: string;
  readonly ClientToken?: string;
}

export interface DeleteDataset {
  readonly ProjectName: string;
  readonly DatasetType: string;
  readonly ClientToken?: string;
}

export interface DeleteModel {
  readonly ProjectName: string;
  readonly ModelVersion: string;
  readonly ClientToken?: string;
}

export interface DeleteProject {
  readonly ProjectName: string;
  readonly ClientToken?: string;
}

export interface DescribeDataset {
  readonly ProjectName: string;
  readonly DatasetType: string;
}

export interface DescribeModel {
  readonly ProjectName: string;
  readonly ModelVersion: string;
}

export interface DescribeModelPackagingJob {
  readonly ProjectName: string;
  readonly JobName: string;
}

export interface DescribeProject {
  readonly ProjectName: string;
}

export interface DetectAnomalies {
  readonly ProjectName: string;
  readonly ModelVersion: string;
  readonly Body: unknown;
  readonly ContentType: string;
}

export interface ListDatasetEntries {
  readonly ProjectName: string;
  readonly DatasetType: string;
  readonly Labeled?: boolean;
  readonly AnomalyClass?: string;
  readonly BeforeCreationDate?: Date;
  readonly AfterCreationDate?: Date;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly SourceRefContains?: string;
}

export interface ListModelPackagingJobs {
  readonly ProjectName: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListModels {
  readonly ProjectName: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListProjects {
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListTagsForResource {
  readonly ResourceArn: string;
}

export interface StartModel {
  readonly ProjectName: string;
  readonly ModelVersion: string;
  readonly MinInferenceUnits: number;
  readonly ClientToken?: string;
}

export interface StartModelPackagingJob {
  readonly ProjectName: string;
  readonly ModelVersion: string;
  readonly JobName?: string;
  readonly Configuration: ModelPackagingConfiguration;
  readonly Description?: string;
  readonly ClientToken?: string;
}

export interface StopModel {
  readonly ProjectName: string;
  readonly ModelVersion: string;
  readonly ClientToken?: string;
}

export interface TagResource {
  readonly ResourceArn: string;
  readonly Tags: [];
}

export interface UntagResource {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}

export interface UpdateDatasetEntries {
  readonly ProjectName: string;
  readonly DatasetType: string;
  readonly Changes: unknown;
  readonly ClientToken?: string;
}

export interface AccessDeniedException {
  readonly Message: string;
}

export interface ConflictException {
  readonly Message: string;
  readonly ResourceId: string;
  readonly ResourceType: string;
}

export interface CreateDatasetRequest {
  readonly ProjectName: string;
  readonly DatasetType: string;
  readonly DatasetSource?: DatasetSource;
  readonly ClientToken?: string;
}

export interface CreateDatasetResponse {
  readonly DatasetMetadata?: DatasetMetadata;
}

export interface CreateModelRequest {
  readonly ProjectName: string;
  readonly Description?: string;
  readonly ClientToken?: string;
  readonly OutputConfig: OutputConfig;
  readonly KmsKeyId?: string;
  readonly Tags?: [];
}

export interface CreateModelResponse {
  readonly ModelMetadata?: ModelMetadata;
}

export interface CreateProjectRequest {
  readonly ProjectName: string;
  readonly ClientToken?: string;
}

export interface CreateProjectResponse {
  readonly ProjectMetadata?: ProjectMetadata;
}

export interface DatasetDescription {
  readonly ProjectName?: string;
  readonly DatasetType?: string;
  readonly CreationTimestamp?: Date;
  readonly LastUpdatedTimestamp?: Date;
  readonly Status?: string;
  readonly StatusMessage?: string;
  readonly ImageStats?: DatasetImageStats;
}

export interface DatasetGroundTruthManifest {
  readonly S3Object?: InputS3Object;
}

export interface DatasetImageStats {
  readonly Total?: number;
  readonly Labeled?: number;
  readonly Normal?: number;
  readonly Anomaly?: number;
}

export interface DatasetMetadata {
  readonly DatasetType?: string;
  readonly CreationTimestamp?: Date;
  readonly Status?: string;
  readonly StatusMessage?: string;
}

export interface DatasetSource {
  readonly GroundTruthManifest?: DatasetGroundTruthManifest;
}

export interface DeleteDatasetRequest {
  readonly ProjectName: string;
  readonly DatasetType: string;
  readonly ClientToken?: string;
}

export interface DeleteDatasetResponse {
}

export interface DeleteModelRequest {
  readonly ProjectName: string;
  readonly ModelVersion: string;
  readonly ClientToken?: string;
}

export interface DeleteModelResponse {
  readonly ModelArn?: string;
}

export interface DeleteProjectRequest {
  readonly ProjectName: string;
  readonly ClientToken?: string;
}

export interface DeleteProjectResponse {
  readonly ProjectArn?: string;
}

export interface DescribeDatasetRequest {
  readonly ProjectName: string;
  readonly DatasetType: string;
}

export interface DescribeDatasetResponse {
  readonly DatasetDescription?: DatasetDescription;
}

export interface DescribeModelPackagingJobRequest {
  readonly ProjectName: string;
  readonly JobName: string;
}

export interface DescribeModelPackagingJobResponse {
  readonly ModelPackagingDescription?: ModelPackagingDescription;
}

export interface DescribeModelRequest {
  readonly ProjectName: string;
  readonly ModelVersion: string;
}

export interface DescribeModelResponse {
  readonly ModelDescription?: ModelDescription;
}

export interface DescribeProjectRequest {
  readonly ProjectName: string;
}

export interface DescribeProjectResponse {
  readonly ProjectDescription?: ProjectDescription;
}

export interface DetectAnomaliesRequest {
  readonly ProjectName: string;
  readonly ModelVersion: string;
  readonly Body: unknown;
  readonly ContentType: string;
}

export interface DetectAnomaliesResponse {
  readonly DetectAnomalyResult?: DetectAnomalyResult;
}

export interface DetectAnomalyResult {
  readonly Source?: ImageSource;
  readonly IsAnomalous?: boolean;
  readonly Confidence?: unknown;
}

export interface GreengrassConfiguration {
  readonly CompilerOptions: string;
  readonly TargetDevice?: string;
  readonly TargetPlatform?: TargetPlatform;
  readonly S3OutputLocation: S3Location;
  readonly ComponentName: string;
  readonly ComponentVersion?: string;
  readonly ComponentDescription?: string;
  readonly Tags?: [];
}

export interface GreengrassOutputDetails {
  readonly ComponentVersionArn?: string;
  readonly ComponentName?: string;
  readonly ComponentVersion?: string;
}

export interface ImageSource {
  readonly Type?: string;
}

export interface InputS3Object {
  readonly Bucket: string;
  readonly Key: string;
  readonly VersionId?: string;
}

export interface InternalServerException {
  readonly Message: string;
  readonly RetryAfterSeconds?: number;
}

export interface ListDatasetEntriesRequest {
  readonly ProjectName: string;
  readonly DatasetType: string;
  readonly Labeled?: boolean;
  readonly AnomalyClass?: string;
  readonly BeforeCreationDate?: Date;
  readonly AfterCreationDate?: Date;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly SourceRefContains?: string;
}

export interface ListDatasetEntriesResponse {
  readonly DatasetEntries?: [];
  readonly NextToken?: string;
}

export interface ListModelPackagingJobsRequest {
  readonly ProjectName: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListModelPackagingJobsResponse {
  readonly ModelPackagingJobs?: [];
  readonly NextToken?: string;
}

export interface ListModelsRequest {
  readonly ProjectName: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListModelsResponse {
  readonly Models?: [];
  readonly NextToken?: string;
}

export interface ListProjectsRequest {
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListProjectsResponse {
  readonly Projects?: [];
  readonly NextToken?: string;
}

export interface ListTagsForResourceRequest {
  readonly ResourceArn: string;
}

export interface ListTagsForResourceResponse {
  readonly Tags?: [];
}

export interface ModelDescription {
  readonly ModelVersion?: string;
  readonly ModelArn?: string;
  readonly CreationTimestamp?: Date;
  readonly Description?: string;
  readonly Status?: string;
  readonly StatusMessage?: string;
  readonly Performance?: ModelPerformance;
  readonly OutputConfig?: OutputConfig;
  readonly EvaluationManifest?: OutputS3Object;
  readonly EvaluationResult?: OutputS3Object;
  readonly EvaluationEndTimestamp?: Date;
  readonly KmsKeyId?: string;
}

export interface ModelMetadata {
  readonly CreationTimestamp?: Date;
  readonly ModelVersion?: string;
  readonly ModelArn?: string;
  readonly Description?: string;
  readonly Status?: string;
  readonly StatusMessage?: string;
  readonly Performance?: ModelPerformance;
}

export interface ModelPackagingConfiguration {
  readonly Greengrass: GreengrassConfiguration;
}

export interface ModelPackagingDescription {
  readonly JobName?: string;
  readonly ProjectName?: string;
  readonly ModelVersion?: string;
  readonly ModelPackagingConfiguration?: ModelPackagingConfiguration;
  readonly ModelPackagingJobDescription?: string;
  readonly ModelPackagingMethod?: string;
  readonly ModelPackagingOutputDetails?: ModelPackagingOutputDetails;
  readonly Status?: string;
  readonly StatusMessage?: string;
  readonly CreationTimestamp?: Date;
  readonly LastUpdatedTimestamp?: Date;
}

export interface ModelPackagingJobMetadata {
  readonly JobName?: string;
  readonly ProjectName?: string;
  readonly ModelVersion?: string;
  readonly ModelPackagingJobDescription?: string;
  readonly ModelPackagingMethod?: string;
  readonly Status?: string;
  readonly StatusMessage?: string;
  readonly CreationTimestamp?: Date;
  readonly LastUpdatedTimestamp?: Date;
}

export interface ModelPackagingOutputDetails {
  readonly Greengrass?: GreengrassOutputDetails;
}

export interface ModelPerformance {
  readonly F1Score?: unknown;
  readonly Recall?: unknown;
  readonly Precision?: unknown;
}

export interface OutputConfig {
  readonly S3Location: S3Location;
}

export interface OutputS3Object {
  readonly Bucket: string;
  readonly Key: string;
}

export interface ProjectDescription {
  readonly ProjectArn?: string;
  readonly ProjectName?: string;
  readonly CreationTimestamp?: Date;
  readonly Datasets?: [];
}

export interface ProjectMetadata {
  readonly ProjectArn?: string;
  readonly ProjectName?: string;
  readonly CreationTimestamp?: Date;
}

export interface ResourceNotFoundException {
  readonly Message: string;
  readonly ResourceId: string;
  readonly ResourceType: string;
}

export interface S3Location {
  readonly Bucket: string;
  readonly Prefix?: string;
}

export interface ServiceQuotaExceededException {
  readonly Message: string;
  readonly ResourceId?: string;
  readonly ResourceType?: string;
  readonly QuotaCode: string;
  readonly ServiceCode: string;
}

export interface StartModelPackagingJobRequest {
  readonly ProjectName: string;
  readonly ModelVersion: string;
  readonly JobName?: string;
  readonly Configuration: ModelPackagingConfiguration;
  readonly Description?: string;
  readonly ClientToken?: string;
}

export interface StartModelPackagingJobResponse {
  readonly JobName?: string;
}

export interface StartModelRequest {
  readonly ProjectName: string;
  readonly ModelVersion: string;
  readonly MinInferenceUnits: number;
  readonly ClientToken?: string;
}

export interface StartModelResponse {
  readonly Status?: string;
}

export interface StopModelRequest {
  readonly ProjectName: string;
  readonly ModelVersion: string;
  readonly ClientToken?: string;
}

export interface StopModelResponse {
  readonly Status?: string;
}

export interface Tag {
  readonly Key: string;
  readonly Value: string;
}

export interface TagResourceRequest {
  readonly ResourceArn: string;
  readonly Tags: [];
}

export interface TagResourceResponse {
}

export interface TargetPlatform {
  readonly Os: string;
  readonly Arch: string;
  readonly Accelerator: string;
}

export interface ThrottlingException {
  readonly Message: string;
  readonly QuotaCode?: string;
  readonly ServiceCode?: string;
  readonly RetryAfterSeconds?: number;
}

export interface UntagResourceRequest {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}

export interface UntagResourceResponse {
}

export interface UpdateDatasetEntriesRequest {
  readonly ProjectName: string;
  readonly DatasetType: string;
  readonly Changes: unknown;
  readonly ClientToken?: string;
}

export interface UpdateDatasetEntriesResponse {
  readonly Status?: string;
}

export interface ValidationException {
  readonly Message: string;
}


