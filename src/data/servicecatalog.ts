/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AcceptPortfolioShare {
  readonly AcceptLanguage?: string;
  readonly PortfolioId: string;
  readonly PortfolioShareType?: string;
}

export interface AssociateBudgetWithResource {
  readonly BudgetName: string;
  readonly ResourceId: string;
}

export interface AssociatePrincipalWithPortfolio {
  readonly AcceptLanguage?: string;
  readonly PortfolioId: string;
  readonly PrincipalARN: string;
  readonly PrincipalType: string;
}

export interface AssociateProductWithPortfolio {
  readonly AcceptLanguage?: string;
  readonly ProductId: string;
  readonly PortfolioId: string;
  readonly SourcePortfolioId?: string;
}

export interface AssociateServiceActionWithProvisioningArtifact {
  readonly ProductId: string;
  readonly ProvisioningArtifactId: string;
  readonly ServiceActionId: string;
  readonly AcceptLanguage?: string;
}

export interface AssociateTagOptionWithResource {
  readonly ResourceId: string;
  readonly TagOptionId: string;
}

export interface BatchAssociateServiceActionWithProvisioningArtifact {
  readonly ServiceActionAssociations: [];
  readonly AcceptLanguage?: string;
}

export interface BatchDisassociateServiceActionFromProvisioningArtifact {
  readonly ServiceActionAssociations: [];
  readonly AcceptLanguage?: string;
}

export interface CopyProduct {
  readonly AcceptLanguage?: string;
  readonly SourceProductArn: string;
  readonly TargetProductId?: string;
  readonly TargetProductName?: string;
  readonly SourceProvisioningArtifactIdentifiers?: [];
  readonly CopyOptions?: [];
  readonly IdempotencyToken: string;
}

export interface CreateConstraint {
  readonly AcceptLanguage?: string;
  readonly PortfolioId: string;
  readonly ProductId: string;
  readonly Parameters: string;
  readonly Type: string;
  readonly Description?: string;
  readonly IdempotencyToken: string;
}

export interface CreatePortfolio {
  readonly AcceptLanguage?: string;
  readonly DisplayName: string;
  readonly Description?: string;
  readonly ProviderName: string;
  readonly Tags?: [];
  readonly IdempotencyToken: string;
}

export interface CreatePortfolioShare {
  readonly AcceptLanguage?: string;
  readonly PortfolioId: string;
  readonly AccountId?: string;
  readonly OrganizationNode?: OrganizationNode;
  readonly ShareTagOptions?: boolean;
}

export interface CreateProduct {
  readonly AcceptLanguage?: string;
  readonly Name: string;
  readonly Owner: string;
  readonly Description?: string;
  readonly Distributor?: string;
  readonly SupportDescription?: string;
  readonly SupportEmail?: string;
  readonly SupportUrl?: string;
  readonly ProductType: string;
  readonly Tags?: [];
  readonly ProvisioningArtifactParameters: ProvisioningArtifactProperties;
  readonly IdempotencyToken: string;
}

export interface CreateProvisionedProductPlan {
  readonly AcceptLanguage?: string;
  readonly PlanName: string;
  readonly PlanType: string;
  readonly NotificationArns?: [];
  readonly PathId?: string;
  readonly ProductId: string;
  readonly ProvisionedProductName: string;
  readonly ProvisioningArtifactId: string;
  readonly ProvisioningParameters?: [];
  readonly IdempotencyToken: string;
  readonly Tags?: [];
}

export interface CreateProvisioningArtifact {
  readonly AcceptLanguage?: string;
  readonly ProductId: string;
  readonly Parameters: ProvisioningArtifactProperties;
  readonly IdempotencyToken: string;
}

export interface CreateServiceAction {
  readonly Name: string;
  readonly DefinitionType: string;
  readonly Definition: {[key: string]: any};
  readonly Description?: string;
  readonly AcceptLanguage?: string;
  readonly IdempotencyToken: string;
}

export interface CreateTagOption {
  readonly Key: string;
  readonly Value: string;
}

export interface DeleteConstraint {
  readonly AcceptLanguage?: string;
  readonly Id: string;
}

export interface DeletePortfolio {
  readonly AcceptLanguage?: string;
  readonly Id: string;
}

export interface DeletePortfolioShare {
  readonly AcceptLanguage?: string;
  readonly PortfolioId: string;
  readonly AccountId?: string;
  readonly OrganizationNode?: OrganizationNode;
}

export interface DeleteProduct {
  readonly AcceptLanguage?: string;
  readonly Id: string;
}

export interface DeleteProvisionedProductPlan {
  readonly AcceptLanguage?: string;
  readonly PlanId: string;
  readonly IgnoreErrors?: boolean;
}

export interface DeleteProvisioningArtifact {
  readonly AcceptLanguage?: string;
  readonly ProductId: string;
  readonly ProvisioningArtifactId: string;
}

export interface DeleteServiceAction {
  readonly Id: string;
  readonly AcceptLanguage?: string;
}

export interface DeleteTagOption {
  readonly Id: string;
}

export interface DescribeConstraint {
  readonly AcceptLanguage?: string;
  readonly Id: string;
}

export interface DescribeCopyProductStatus {
  readonly AcceptLanguage?: string;
  readonly CopyProductToken: string;
}

export interface DescribePortfolio {
  readonly AcceptLanguage?: string;
  readonly Id: string;
}

export interface DescribePortfolioShareStatus {
  readonly PortfolioShareToken: string;
}

export interface DescribePortfolioShares {
  readonly PortfolioId: string;
  readonly Type: string;
  readonly PageToken?: string;
  readonly PageSize?: number;
}

export interface DescribeProduct {
  readonly AcceptLanguage?: string;
  readonly Id?: string;
  readonly Name?: string;
}

export interface DescribeProductAsAdmin {
  readonly AcceptLanguage?: string;
  readonly Id?: string;
  readonly Name?: string;
  readonly SourcePortfolioId?: string;
}

export interface DescribeProductView {
  readonly AcceptLanguage?: string;
  readonly Id: string;
}

export interface DescribeProvisionedProduct {
  readonly AcceptLanguage?: string;
  readonly Id?: string;
  readonly Name?: string;
}

export interface DescribeProvisionedProductPlan {
  readonly AcceptLanguage?: string;
  readonly PlanId: string;
  readonly PageSize?: number;
  readonly PageToken?: string;
}

export interface DescribeProvisioningArtifact {
  readonly AcceptLanguage?: string;
  readonly ProvisioningArtifactId?: string;
  readonly ProductId?: string;
  readonly ProvisioningArtifactName?: string;
  readonly ProductName?: string;
  readonly Verbose?: boolean;
}

export interface DescribeProvisioningParameters {
  readonly AcceptLanguage?: string;
  readonly ProductId?: string;
  readonly ProductName?: string;
  readonly ProvisioningArtifactId?: string;
  readonly ProvisioningArtifactName?: string;
  readonly PathId?: string;
  readonly PathName?: string;
}

export interface DescribeRecord {
  readonly AcceptLanguage?: string;
  readonly Id: string;
  readonly PageToken?: string;
  readonly PageSize?: number;
}

export interface DescribeServiceAction {
  readonly Id: string;
  readonly AcceptLanguage?: string;
}

export interface DescribeServiceActionExecutionParameters {
  readonly ProvisionedProductId: string;
  readonly ServiceActionId: string;
  readonly AcceptLanguage?: string;
}

export interface DescribeTagOption {
  readonly Id: string;
}

export interface DisableAWSOrganizationsAccess {
}

export interface DisassociateBudgetFromResource {
  readonly BudgetName: string;
  readonly ResourceId: string;
}

export interface DisassociatePrincipalFromPortfolio {
  readonly AcceptLanguage?: string;
  readonly PortfolioId: string;
  readonly PrincipalARN: string;
}

export interface DisassociateProductFromPortfolio {
  readonly AcceptLanguage?: string;
  readonly ProductId: string;
  readonly PortfolioId: string;
}

export interface DisassociateServiceActionFromProvisioningArtifact {
  readonly ProductId: string;
  readonly ProvisioningArtifactId: string;
  readonly ServiceActionId: string;
  readonly AcceptLanguage?: string;
}

export interface DisassociateTagOptionFromResource {
  readonly ResourceId: string;
  readonly TagOptionId: string;
}

export interface EnableAWSOrganizationsAccess {
}

export interface ExecuteProvisionedProductPlan {
  readonly AcceptLanguage?: string;
  readonly PlanId: string;
  readonly IdempotencyToken: string;
}

export interface ExecuteProvisionedProductServiceAction {
  readonly ProvisionedProductId: string;
  readonly ServiceActionId: string;
  readonly ExecuteToken: string;
  readonly AcceptLanguage?: string;
  readonly Parameters?: {[key: string]: any};
}

export interface GetAWSOrganizationsAccessStatus {
}

export interface GetProvisionedProductOutputs {
  readonly AcceptLanguage?: string;
  readonly ProvisionedProductId?: string;
  readonly ProvisionedProductName?: string;
  readonly OutputKeys?: [];
  readonly PageSize?: number;
  readonly PageToken?: string;
}

export interface ImportAsProvisionedProduct {
  readonly AcceptLanguage?: string;
  readonly ProductId: string;
  readonly ProvisioningArtifactId: string;
  readonly ProvisionedProductName: string;
  readonly PhysicalId: string;
  readonly IdempotencyToken: string;
}

export interface ListAcceptedPortfolioShares {
  readonly AcceptLanguage?: string;
  readonly PageToken?: string;
  readonly PageSize?: number;
  readonly PortfolioShareType?: string;
}

export interface ListBudgetsForResource {
  readonly AcceptLanguage?: string;
  readonly ResourceId: string;
  readonly PageSize?: number;
  readonly PageToken?: string;
}

export interface ListConstraintsForPortfolio {
  readonly AcceptLanguage?: string;
  readonly PortfolioId: string;
  readonly ProductId?: string;
  readonly PageSize?: number;
  readonly PageToken?: string;
}

export interface ListLaunchPaths {
  readonly AcceptLanguage?: string;
  readonly ProductId: string;
  readonly PageSize?: number;
  readonly PageToken?: string;
}

export interface ListOrganizationPortfolioAccess {
  readonly AcceptLanguage?: string;
  readonly PortfolioId: string;
  readonly OrganizationNodeType: string;
  readonly PageToken?: string;
  readonly PageSize?: number;
}

export interface ListPortfolioAccess {
  readonly AcceptLanguage?: string;
  readonly PortfolioId: string;
  readonly OrganizationParentId?: string;
  readonly PageToken?: string;
  readonly PageSize?: number;
}

export interface ListPortfolios {
  readonly AcceptLanguage?: string;
  readonly PageToken?: string;
  readonly PageSize?: number;
}

export interface ListPortfoliosForProduct {
  readonly AcceptLanguage?: string;
  readonly ProductId: string;
  readonly PageToken?: string;
  readonly PageSize?: number;
}

export interface ListPrincipalsForPortfolio {
  readonly AcceptLanguage?: string;
  readonly PortfolioId: string;
  readonly PageSize?: number;
  readonly PageToken?: string;
}

export interface ListProvisionedProductPlans {
  readonly AcceptLanguage?: string;
  readonly ProvisionProductId?: string;
  readonly PageSize?: number;
  readonly PageToken?: string;
  readonly AccessLevelFilter?: AccessLevelFilter;
}

export interface ListProvisioningArtifacts {
  readonly AcceptLanguage?: string;
  readonly ProductId: string;
}

export interface ListProvisioningArtifactsForServiceAction {
  readonly ServiceActionId: string;
  readonly PageSize?: number;
  readonly PageToken?: string;
  readonly AcceptLanguage?: string;
}

export interface ListRecordHistory {
  readonly AcceptLanguage?: string;
  readonly AccessLevelFilter?: AccessLevelFilter;
  readonly SearchFilter?: ListRecordHistorySearchFilter;
  readonly PageSize?: number;
  readonly PageToken?: string;
}

export interface ListResourcesForTagOption {
  readonly TagOptionId: string;
  readonly ResourceType?: string;
  readonly PageSize?: number;
  readonly PageToken?: string;
}

export interface ListServiceActions {
  readonly AcceptLanguage?: string;
  readonly PageSize?: number;
  readonly PageToken?: string;
}

export interface ListServiceActionsForProvisioningArtifact {
  readonly ProductId: string;
  readonly ProvisioningArtifactId: string;
  readonly PageSize?: number;
  readonly PageToken?: string;
  readonly AcceptLanguage?: string;
}

export interface ListStackInstancesForProvisionedProduct {
  readonly AcceptLanguage?: string;
  readonly ProvisionedProductId: string;
  readonly PageToken?: string;
  readonly PageSize?: number;
}

export interface ListTagOptions {
  readonly Filters?: ListTagOptionsFilters;
  readonly PageSize?: number;
  readonly PageToken?: string;
}

export interface ProvisionProduct {
  readonly AcceptLanguage?: string;
  readonly ProductId?: string;
  readonly ProductName?: string;
  readonly ProvisioningArtifactId?: string;
  readonly ProvisioningArtifactName?: string;
  readonly PathId?: string;
  readonly PathName?: string;
  readonly ProvisionedProductName: string;
  readonly ProvisioningParameters?: [];
  readonly ProvisioningPreferences?: ProvisioningPreferences;
  readonly Tags?: [];
  readonly NotificationArns?: [];
  readonly ProvisionToken: string;
}

export interface RejectPortfolioShare {
  readonly AcceptLanguage?: string;
  readonly PortfolioId: string;
  readonly PortfolioShareType?: string;
}

export interface ScanProvisionedProducts {
  readonly AcceptLanguage?: string;
  readonly AccessLevelFilter?: AccessLevelFilter;
  readonly PageSize?: number;
  readonly PageToken?: string;
}

export interface SearchProducts {
  readonly AcceptLanguage?: string;
  readonly Filters?: {[key: string]: any};
  readonly PageSize?: number;
  readonly SortBy?: string;
  readonly SortOrder?: string;
  readonly PageToken?: string;
}

export interface SearchProductsAsAdmin {
  readonly AcceptLanguage?: string;
  readonly PortfolioId?: string;
  readonly Filters?: {[key: string]: any};
  readonly SortBy?: string;
  readonly SortOrder?: string;
  readonly PageToken?: string;
  readonly PageSize?: number;
  readonly ProductSource?: string;
}

export interface SearchProvisionedProducts {
  readonly AcceptLanguage?: string;
  readonly AccessLevelFilter?: AccessLevelFilter;
  readonly Filters?: {[key: string]: any};
  readonly SortBy?: string;
  readonly SortOrder?: string;
  readonly PageSize?: number;
  readonly PageToken?: string;
}

export interface TerminateProvisionedProduct {
  readonly ProvisionedProductName?: string;
  readonly ProvisionedProductId?: string;
  readonly TerminateToken: string;
  readonly IgnoreErrors?: boolean;
  readonly AcceptLanguage?: string;
  readonly RetainPhysicalResources?: boolean;
}

export interface UpdateConstraint {
  readonly AcceptLanguage?: string;
  readonly Id: string;
  readonly Description?: string;
  readonly Parameters?: string;
}

export interface UpdatePortfolio {
  readonly AcceptLanguage?: string;
  readonly Id: string;
  readonly DisplayName?: string;
  readonly Description?: string;
  readonly ProviderName?: string;
  readonly AddTags?: [];
  readonly RemoveTags?: [];
}

export interface UpdatePortfolioShare {
  readonly AcceptLanguage?: string;
  readonly PortfolioId: string;
  readonly AccountId?: string;
  readonly OrganizationNode?: OrganizationNode;
  readonly ShareTagOptions?: boolean;
}

export interface UpdateProduct {
  readonly AcceptLanguage?: string;
  readonly Id: string;
  readonly Name?: string;
  readonly Owner?: string;
  readonly Description?: string;
  readonly Distributor?: string;
  readonly SupportDescription?: string;
  readonly SupportEmail?: string;
  readonly SupportUrl?: string;
  readonly AddTags?: [];
  readonly RemoveTags?: [];
}

export interface UpdateProvisionedProduct {
  readonly AcceptLanguage?: string;
  readonly ProvisionedProductName?: string;
  readonly ProvisionedProductId?: string;
  readonly ProductId?: string;
  readonly ProductName?: string;
  readonly ProvisioningArtifactId?: string;
  readonly ProvisioningArtifactName?: string;
  readonly PathId?: string;
  readonly PathName?: string;
  readonly ProvisioningParameters?: [];
  readonly ProvisioningPreferences?: UpdateProvisioningPreferences;
  readonly Tags?: [];
  readonly UpdateToken: string;
}

export interface UpdateProvisionedProductProperties {
  readonly AcceptLanguage?: string;
  readonly ProvisionedProductId: string;
  readonly ProvisionedProductProperties: {[key: string]: any};
  readonly IdempotencyToken: string;
}

export interface UpdateProvisioningArtifact {
  readonly AcceptLanguage?: string;
  readonly ProductId: string;
  readonly ProvisioningArtifactId: string;
  readonly Name?: string;
  readonly Description?: string;
  readonly Active?: boolean;
  readonly Guidance?: string;
}

export interface UpdateServiceAction {
  readonly Id: string;
  readonly Name?: string;
  readonly Definition?: {[key: string]: any};
  readonly Description?: string;
  readonly AcceptLanguage?: string;
}

export interface UpdateTagOption {
  readonly Id: string;
  readonly Value?: string;
  readonly Active?: boolean;
}

export interface AcceptPortfolioShareInput {
  readonly AcceptLanguage?: string;
  readonly PortfolioId: string;
  readonly PortfolioShareType?: string;
}

export interface AcceptPortfolioShareOutput {
}

export interface AccessLevelFilter {
  readonly Key?: string;
  readonly Value?: string;
}

export interface AssociateBudgetWithResourceInput {
  readonly BudgetName: string;
  readonly ResourceId: string;
}

export interface AssociateBudgetWithResourceOutput {
}

export interface AssociatePrincipalWithPortfolioInput {
  readonly AcceptLanguage?: string;
  readonly PortfolioId: string;
  readonly PrincipalARN: string;
  readonly PrincipalType: string;
}

export interface AssociatePrincipalWithPortfolioOutput {
}

export interface AssociateProductWithPortfolioInput {
  readonly AcceptLanguage?: string;
  readonly ProductId: string;
  readonly PortfolioId: string;
  readonly SourcePortfolioId?: string;
}

export interface AssociateProductWithPortfolioOutput {
}

export interface AssociateServiceActionWithProvisioningArtifactInput {
  readonly ProductId: string;
  readonly ProvisioningArtifactId: string;
  readonly ServiceActionId: string;
  readonly AcceptLanguage?: string;
}

export interface AssociateServiceActionWithProvisioningArtifactOutput {
}

export interface AssociateTagOptionWithResourceInput {
  readonly ResourceId: string;
  readonly TagOptionId: string;
}

export interface AssociateTagOptionWithResourceOutput {
}

export interface BatchAssociateServiceActionWithProvisioningArtifactInput {
  readonly ServiceActionAssociations: [];
  readonly AcceptLanguage?: string;
}

export interface BatchAssociateServiceActionWithProvisioningArtifactOutput {
  readonly FailedServiceActionAssociations?: [];
}

export interface BatchDisassociateServiceActionFromProvisioningArtifactInput {
  readonly ServiceActionAssociations: [];
  readonly AcceptLanguage?: string;
}

export interface BatchDisassociateServiceActionFromProvisioningArtifactOutput {
  readonly FailedServiceActionAssociations?: [];
}

export interface BudgetDetail {
  readonly BudgetName?: string;
}

export interface CloudWatchDashboard {
  readonly Name?: string;
}

export interface ConstraintDetail {
  readonly ConstraintId?: string;
  readonly Type?: string;
  readonly Description?: string;
  readonly Owner?: string;
  readonly ProductId?: string;
  readonly PortfolioId?: string;
}

export interface ConstraintSummary {
  readonly Type?: string;
  readonly Description?: string;
}

export interface CopyProductInput {
  readonly AcceptLanguage?: string;
  readonly SourceProductArn: string;
  readonly TargetProductId?: string;
  readonly TargetProductName?: string;
  readonly SourceProvisioningArtifactIdentifiers?: [];
  readonly CopyOptions?: [];
  readonly IdempotencyToken: string;
}

export interface CopyProductOutput {
  readonly CopyProductToken?: string;
}

export interface CreateConstraintInput {
  readonly AcceptLanguage?: string;
  readonly PortfolioId: string;
  readonly ProductId: string;
  readonly Parameters: string;
  readonly Type: string;
  readonly Description?: string;
  readonly IdempotencyToken: string;
}

export interface CreateConstraintOutput {
  readonly ConstraintDetail?: ConstraintDetail;
  readonly ConstraintParameters?: string;
  readonly Status?: string;
}

export interface CreatePortfolioInput {
  readonly AcceptLanguage?: string;
  readonly DisplayName: string;
  readonly Description?: string;
  readonly ProviderName: string;
  readonly Tags?: [];
  readonly IdempotencyToken: string;
}

export interface CreatePortfolioOutput {
  readonly PortfolioDetail?: PortfolioDetail;
  readonly Tags?: [];
}

export interface CreatePortfolioShareInput {
  readonly AcceptLanguage?: string;
  readonly PortfolioId: string;
  readonly AccountId?: string;
  readonly OrganizationNode?: OrganizationNode;
  readonly ShareTagOptions?: boolean;
}

export interface CreatePortfolioShareOutput {
  readonly PortfolioShareToken?: string;
}

export interface CreateProductInput {
  readonly AcceptLanguage?: string;
  readonly Name: string;
  readonly Owner: string;
  readonly Description?: string;
  readonly Distributor?: string;
  readonly SupportDescription?: string;
  readonly SupportEmail?: string;
  readonly SupportUrl?: string;
  readonly ProductType: string;
  readonly Tags?: [];
  readonly ProvisioningArtifactParameters: ProvisioningArtifactProperties;
  readonly IdempotencyToken: string;
}

export interface CreateProductOutput {
  readonly ProductViewDetail?: ProductViewDetail;
  readonly ProvisioningArtifactDetail?: ProvisioningArtifactDetail;
  readonly Tags?: [];
}

export interface CreateProvisionedProductPlanInput {
  readonly AcceptLanguage?: string;
  readonly PlanName: string;
  readonly PlanType: string;
  readonly NotificationArns?: [];
  readonly PathId?: string;
  readonly ProductId: string;
  readonly ProvisionedProductName: string;
  readonly ProvisioningArtifactId: string;
  readonly ProvisioningParameters?: [];
  readonly IdempotencyToken: string;
  readonly Tags?: [];
}

export interface CreateProvisionedProductPlanOutput {
  readonly PlanName?: string;
  readonly PlanId?: string;
  readonly ProvisionProductId?: string;
  readonly ProvisionedProductName?: string;
  readonly ProvisioningArtifactId?: string;
}

export interface CreateProvisioningArtifactInput {
  readonly AcceptLanguage?: string;
  readonly ProductId: string;
  readonly Parameters: ProvisioningArtifactProperties;
  readonly IdempotencyToken: string;
}

export interface CreateProvisioningArtifactOutput {
  readonly ProvisioningArtifactDetail?: ProvisioningArtifactDetail;
  readonly Info?: {[key: string]: any};
  readonly Status?: string;
}

export interface CreateServiceActionInput {
  readonly Name: string;
  readonly DefinitionType: string;
  readonly Definition: {[key: string]: any};
  readonly Description?: string;
  readonly AcceptLanguage?: string;
  readonly IdempotencyToken: string;
}

export interface CreateServiceActionOutput {
  readonly ServiceActionDetail?: ServiceActionDetail;
}

export interface CreateTagOptionInput {
  readonly Key: string;
  readonly Value: string;
}

export interface CreateTagOptionOutput {
  readonly TagOptionDetail?: TagOptionDetail;
}

export interface DeleteConstraintInput {
  readonly AcceptLanguage?: string;
  readonly Id: string;
}

export interface DeleteConstraintOutput {
}

export interface DeletePortfolioInput {
  readonly AcceptLanguage?: string;
  readonly Id: string;
}

export interface DeletePortfolioOutput {
}

export interface DeletePortfolioShareInput {
  readonly AcceptLanguage?: string;
  readonly PortfolioId: string;
  readonly AccountId?: string;
  readonly OrganizationNode?: OrganizationNode;
}

export interface DeletePortfolioShareOutput {
  readonly PortfolioShareToken?: string;
}

export interface DeleteProductInput {
  readonly AcceptLanguage?: string;
  readonly Id: string;
}

export interface DeleteProductOutput {
}

export interface DeleteProvisionedProductPlanInput {
  readonly AcceptLanguage?: string;
  readonly PlanId: string;
  readonly IgnoreErrors?: boolean;
}

export interface DeleteProvisionedProductPlanOutput {
}

export interface DeleteProvisioningArtifactInput {
  readonly AcceptLanguage?: string;
  readonly ProductId: string;
  readonly ProvisioningArtifactId: string;
}

export interface DeleteProvisioningArtifactOutput {
}

export interface DeleteServiceActionInput {
  readonly Id: string;
  readonly AcceptLanguage?: string;
}

export interface DeleteServiceActionOutput {
}

export interface DeleteTagOptionInput {
  readonly Id: string;
}

export interface DeleteTagOptionOutput {
}

export interface DescribeConstraintInput {
  readonly AcceptLanguage?: string;
  readonly Id: string;
}

export interface DescribeConstraintOutput {
  readonly ConstraintDetail?: ConstraintDetail;
  readonly ConstraintParameters?: string;
  readonly Status?: string;
}

export interface DescribeCopyProductStatusInput {
  readonly AcceptLanguage?: string;
  readonly CopyProductToken: string;
}

export interface DescribeCopyProductStatusOutput {
  readonly CopyProductStatus?: string;
  readonly TargetProductId?: string;
  readonly StatusDetail?: string;
}

export interface DescribePortfolioInput {
  readonly AcceptLanguage?: string;
  readonly Id: string;
}

export interface DescribePortfolioOutput {
  readonly PortfolioDetail?: PortfolioDetail;
  readonly Tags?: [];
  readonly TagOptions?: [];
  readonly Budgets?: [];
}

export interface DescribePortfolioShareStatusInput {
  readonly PortfolioShareToken: string;
}

export interface DescribePortfolioShareStatusOutput {
  readonly PortfolioShareToken?: string;
  readonly PortfolioId?: string;
  readonly OrganizationNodeValue?: string;
  readonly Status?: string;
  readonly ShareDetails?: ShareDetails;
}

export interface DescribePortfolioSharesInput {
  readonly PortfolioId: string;
  readonly Type: string;
  readonly PageToken?: string;
  readonly PageSize?: number;
}

export interface DescribePortfolioSharesOutput {
  readonly NextPageToken?: string;
  readonly PortfolioShareDetails?: [];
}

export interface DescribeProductAsAdminInput {
  readonly AcceptLanguage?: string;
  readonly Id?: string;
  readonly Name?: string;
  readonly SourcePortfolioId?: string;
}

export interface DescribeProductAsAdminOutput {
  readonly ProductViewDetail?: ProductViewDetail;
  readonly ProvisioningArtifactSummaries?: [];
  readonly Tags?: [];
  readonly TagOptions?: [];
  readonly Budgets?: [];
}

export interface DescribeProductInput {
  readonly AcceptLanguage?: string;
  readonly Id?: string;
  readonly Name?: string;
}

export interface DescribeProductOutput {
  readonly ProductViewSummary?: ProductViewSummary;
  readonly ProvisioningArtifacts?: [];
  readonly Budgets?: [];
  readonly LaunchPaths?: [];
}

export interface DescribeProductViewInput {
  readonly AcceptLanguage?: string;
  readonly Id: string;
}

export interface DescribeProductViewOutput {
  readonly ProductViewSummary?: ProductViewSummary;
  readonly ProvisioningArtifacts?: [];
}

export interface DescribeProvisionedProductInput {
  readonly AcceptLanguage?: string;
  readonly Id?: string;
  readonly Name?: string;
}

export interface DescribeProvisionedProductOutput {
  readonly ProvisionedProductDetail?: ProvisionedProductDetail;
  readonly CloudWatchDashboards?: [];
}

export interface DescribeProvisionedProductPlanInput {
  readonly AcceptLanguage?: string;
  readonly PlanId: string;
  readonly PageSize?: number;
  readonly PageToken?: string;
}

export interface DescribeProvisionedProductPlanOutput {
  readonly ProvisionedProductPlanDetails?: ProvisionedProductPlanDetails;
  readonly ResourceChanges?: [];
  readonly NextPageToken?: string;
}

export interface DescribeProvisioningArtifactInput {
  readonly AcceptLanguage?: string;
  readonly ProvisioningArtifactId?: string;
  readonly ProductId?: string;
  readonly ProvisioningArtifactName?: string;
  readonly ProductName?: string;
  readonly Verbose?: boolean;
}

export interface DescribeProvisioningArtifactOutput {
  readonly ProvisioningArtifactDetail?: ProvisioningArtifactDetail;
  readonly Info?: {[key: string]: any};
  readonly Status?: string;
}

export interface DescribeProvisioningParametersInput {
  readonly AcceptLanguage?: string;
  readonly ProductId?: string;
  readonly ProductName?: string;
  readonly ProvisioningArtifactId?: string;
  readonly ProvisioningArtifactName?: string;
  readonly PathId?: string;
  readonly PathName?: string;
}

export interface DescribeProvisioningParametersOutput {
  readonly ProvisioningArtifactParameters?: [];
  readonly ConstraintSummaries?: [];
  readonly UsageInstructions?: [];
  readonly TagOptions?: [];
  readonly ProvisioningArtifactPreferences?: ProvisioningArtifactPreferences;
  readonly ProvisioningArtifactOutputs?: [];
}

export interface DescribeRecordInput {
  readonly AcceptLanguage?: string;
  readonly Id: string;
  readonly PageToken?: string;
  readonly PageSize?: number;
}

export interface DescribeRecordOutput {
  readonly RecordDetail?: RecordDetail;
  readonly RecordOutputs?: [];
  readonly NextPageToken?: string;
}

export interface DescribeServiceActionExecutionParametersInput {
  readonly ProvisionedProductId: string;
  readonly ServiceActionId: string;
  readonly AcceptLanguage?: string;
}

export interface DescribeServiceActionExecutionParametersOutput {
  readonly ServiceActionParameters?: [];
}

export interface DescribeServiceActionInput {
  readonly Id: string;
  readonly AcceptLanguage?: string;
}

export interface DescribeServiceActionOutput {
  readonly ServiceActionDetail?: ServiceActionDetail;
}

export interface DescribeTagOptionInput {
  readonly Id: string;
}

export interface DescribeTagOptionOutput {
  readonly TagOptionDetail?: TagOptionDetail;
}

export interface DisableAWSOrganizationsAccessInput {
}

export interface DisableAWSOrganizationsAccessOutput {
}

export interface DisassociateBudgetFromResourceInput {
  readonly BudgetName: string;
  readonly ResourceId: string;
}

export interface DisassociateBudgetFromResourceOutput {
}

export interface DisassociatePrincipalFromPortfolioInput {
  readonly AcceptLanguage?: string;
  readonly PortfolioId: string;
  readonly PrincipalARN: string;
}

export interface DisassociatePrincipalFromPortfolioOutput {
}

export interface DisassociateProductFromPortfolioInput {
  readonly AcceptLanguage?: string;
  readonly ProductId: string;
  readonly PortfolioId: string;
}

export interface DisassociateProductFromPortfolioOutput {
}

export interface DisassociateServiceActionFromProvisioningArtifactInput {
  readonly ProductId: string;
  readonly ProvisioningArtifactId: string;
  readonly ServiceActionId: string;
  readonly AcceptLanguage?: string;
}

export interface DisassociateServiceActionFromProvisioningArtifactOutput {
}

export interface DisassociateTagOptionFromResourceInput {
  readonly ResourceId: string;
  readonly TagOptionId: string;
}

export interface DisassociateTagOptionFromResourceOutput {
}

export interface DuplicateResourceException {
}

export interface EnableAWSOrganizationsAccessInput {
}

export interface EnableAWSOrganizationsAccessOutput {
}

export interface ExecuteProvisionedProductPlanInput {
  readonly AcceptLanguage?: string;
  readonly PlanId: string;
  readonly IdempotencyToken: string;
}

export interface ExecuteProvisionedProductPlanOutput {
  readonly RecordDetail?: RecordDetail;
}

export interface ExecuteProvisionedProductServiceActionInput {
  readonly ProvisionedProductId: string;
  readonly ServiceActionId: string;
  readonly ExecuteToken: string;
  readonly AcceptLanguage?: string;
  readonly Parameters?: {[key: string]: any};
}

export interface ExecuteProvisionedProductServiceActionOutput {
  readonly RecordDetail?: RecordDetail;
}

export interface ExecutionParameter {
  readonly Name?: string;
  readonly Type?: string;
  readonly DefaultValues?: [];
}

export interface FailedServiceActionAssociation {
  readonly ServiceActionId?: string;
  readonly ProductId?: string;
  readonly ProvisioningArtifactId?: string;
  readonly ErrorCode?: string;
  readonly ErrorMessage?: string;
}

export interface GetAWSOrganizationsAccessStatusInput {
}

export interface GetAWSOrganizationsAccessStatusOutput {
  readonly AccessStatus?: string;
}

export interface GetProvisionedProductOutputsInput {
  readonly AcceptLanguage?: string;
  readonly ProvisionedProductId?: string;
  readonly ProvisionedProductName?: string;
  readonly OutputKeys?: [];
  readonly PageSize?: number;
  readonly PageToken?: string;
}

export interface GetProvisionedProductOutputsOutput {
  readonly Outputs?: [];
  readonly NextPageToken?: string;
}

export interface ImportAsProvisionedProductInput {
  readonly AcceptLanguage?: string;
  readonly ProductId: string;
  readonly ProvisioningArtifactId: string;
  readonly ProvisionedProductName: string;
  readonly PhysicalId: string;
  readonly IdempotencyToken: string;
}

export interface ImportAsProvisionedProductOutput {
  readonly RecordDetail?: RecordDetail;
}

export interface InvalidParametersException {
}

export interface InvalidStateException {
}

export interface LaunchPath {
  readonly Id?: string;
  readonly Name?: string;
}

export interface LaunchPathSummary {
  readonly Id?: string;
  readonly ConstraintSummaries?: [];
  readonly Tags?: [];
  readonly Name?: string;
}

export interface LimitExceededException {
}

export interface ListAcceptedPortfolioSharesInput {
  readonly AcceptLanguage?: string;
  readonly PageToken?: string;
  readonly PageSize?: number;
  readonly PortfolioShareType?: string;
}

export interface ListAcceptedPortfolioSharesOutput {
  readonly PortfolioDetails?: [];
  readonly NextPageToken?: string;
}

export interface ListBudgetsForResourceInput {
  readonly AcceptLanguage?: string;
  readonly ResourceId: string;
  readonly PageSize?: number;
  readonly PageToken?: string;
}

export interface ListBudgetsForResourceOutput {
  readonly Budgets?: [];
  readonly NextPageToken?: string;
}

export interface ListConstraintsForPortfolioInput {
  readonly AcceptLanguage?: string;
  readonly PortfolioId: string;
  readonly ProductId?: string;
  readonly PageSize?: number;
  readonly PageToken?: string;
}

export interface ListConstraintsForPortfolioOutput {
  readonly ConstraintDetails?: [];
  readonly NextPageToken?: string;
}

export interface ListLaunchPathsInput {
  readonly AcceptLanguage?: string;
  readonly ProductId: string;
  readonly PageSize?: number;
  readonly PageToken?: string;
}

export interface ListLaunchPathsOutput {
  readonly LaunchPathSummaries?: [];
  readonly NextPageToken?: string;
}

export interface ListOrganizationPortfolioAccessInput {
  readonly AcceptLanguage?: string;
  readonly PortfolioId: string;
  readonly OrganizationNodeType: string;
  readonly PageToken?: string;
  readonly PageSize?: number;
}

export interface ListOrganizationPortfolioAccessOutput {
  readonly OrganizationNodes?: [];
  readonly NextPageToken?: string;
}

export interface ListPortfolioAccessInput {
  readonly AcceptLanguage?: string;
  readonly PortfolioId: string;
  readonly OrganizationParentId?: string;
  readonly PageToken?: string;
  readonly PageSize?: number;
}

export interface ListPortfolioAccessOutput {
  readonly AccountIds?: [];
  readonly NextPageToken?: string;
}

export interface ListPortfoliosForProductInput {
  readonly AcceptLanguage?: string;
  readonly ProductId: string;
  readonly PageToken?: string;
  readonly PageSize?: number;
}

export interface ListPortfoliosForProductOutput {
  readonly PortfolioDetails?: [];
  readonly NextPageToken?: string;
}

export interface ListPortfoliosInput {
  readonly AcceptLanguage?: string;
  readonly PageToken?: string;
  readonly PageSize?: number;
}

export interface ListPortfoliosOutput {
  readonly PortfolioDetails?: [];
  readonly NextPageToken?: string;
}

export interface ListPrincipalsForPortfolioInput {
  readonly AcceptLanguage?: string;
  readonly PortfolioId: string;
  readonly PageSize?: number;
  readonly PageToken?: string;
}

export interface ListPrincipalsForPortfolioOutput {
  readonly Principals?: [];
  readonly NextPageToken?: string;
}

export interface ListProvisionedProductPlansInput {
  readonly AcceptLanguage?: string;
  readonly ProvisionProductId?: string;
  readonly PageSize?: number;
  readonly PageToken?: string;
  readonly AccessLevelFilter?: AccessLevelFilter;
}

export interface ListProvisionedProductPlansOutput {
  readonly ProvisionedProductPlans?: [];
  readonly NextPageToken?: string;
}

export interface ListProvisioningArtifactsForServiceActionInput {
  readonly ServiceActionId: string;
  readonly PageSize?: number;
  readonly PageToken?: string;
  readonly AcceptLanguage?: string;
}

export interface ListProvisioningArtifactsForServiceActionOutput {
  readonly ProvisioningArtifactViews?: [];
  readonly NextPageToken?: string;
}

export interface ListProvisioningArtifactsInput {
  readonly AcceptLanguage?: string;
  readonly ProductId: string;
}

export interface ListProvisioningArtifactsOutput {
  readonly ProvisioningArtifactDetails?: [];
  readonly NextPageToken?: string;
}

export interface ListRecordHistoryInput {
  readonly AcceptLanguage?: string;
  readonly AccessLevelFilter?: AccessLevelFilter;
  readonly SearchFilter?: ListRecordHistorySearchFilter;
  readonly PageSize?: number;
  readonly PageToken?: string;
}

export interface ListRecordHistoryOutput {
  readonly RecordDetails?: [];
  readonly NextPageToken?: string;
}

export interface ListRecordHistorySearchFilter {
  readonly Key?: string;
  readonly Value?: string;
}

export interface ListResourcesForTagOptionInput {
  readonly TagOptionId: string;
  readonly ResourceType?: string;
  readonly PageSize?: number;
  readonly PageToken?: string;
}

export interface ListResourcesForTagOptionOutput {
  readonly ResourceDetails?: [];
  readonly PageToken?: string;
}

export interface ListServiceActionsForProvisioningArtifactInput {
  readonly ProductId: string;
  readonly ProvisioningArtifactId: string;
  readonly PageSize?: number;
  readonly PageToken?: string;
  readonly AcceptLanguage?: string;
}

export interface ListServiceActionsForProvisioningArtifactOutput {
  readonly ServiceActionSummaries?: [];
  readonly NextPageToken?: string;
}

export interface ListServiceActionsInput {
  readonly AcceptLanguage?: string;
  readonly PageSize?: number;
  readonly PageToken?: string;
}

export interface ListServiceActionsOutput {
  readonly ServiceActionSummaries?: [];
  readonly NextPageToken?: string;
}

export interface ListStackInstancesForProvisionedProductInput {
  readonly AcceptLanguage?: string;
  readonly ProvisionedProductId: string;
  readonly PageToken?: string;
  readonly PageSize?: number;
}

export interface ListStackInstancesForProvisionedProductOutput {
  readonly StackInstances?: [];
  readonly NextPageToken?: string;
}

export interface ListTagOptionsFilters {
  readonly Key?: string;
  readonly Value?: string;
  readonly Active?: boolean;
}

export interface ListTagOptionsInput {
  readonly Filters?: ListTagOptionsFilters;
  readonly PageSize?: number;
  readonly PageToken?: string;
}

export interface ListTagOptionsOutput {
  readonly TagOptionDetails?: [];
  readonly PageToken?: string;
}

export interface OperationNotSupportedException {
}

export interface OrganizationNode {
  readonly Type?: string;
  readonly Value?: string;
}

export interface ParameterConstraints {
  readonly AllowedValues?: [];
  readonly AllowedPattern?: string;
  readonly ConstraintDescription?: string;
  readonly MaxLength?: string;
  readonly MinLength?: string;
  readonly MaxValue?: string;
  readonly MinValue?: string;
}

export interface PortfolioDetail {
  readonly Id?: string;
  readonly ARN?: string;
  readonly DisplayName?: string;
  readonly Description?: string;
  readonly CreatedTime?: Date;
  readonly ProviderName?: string;
}

export interface PortfolioShareDetail {
  readonly PrincipalId?: string;
  readonly Type?: string;
  readonly Accepted?: boolean;
  readonly ShareTagOptions?: boolean;
}

export interface Principal {
  readonly PrincipalARN?: string;
  readonly PrincipalType?: string;
}

export interface ProductViewAggregationValue {
  readonly Value?: string;
  readonly ApproximateCount?: number;
}

export interface ProductViewDetail {
  readonly ProductViewSummary?: ProductViewSummary;
  readonly Status?: string;
  readonly ProductARN?: string;
  readonly CreatedTime?: Date;
}

export interface ProductViewSummary {
  readonly Id?: string;
  readonly ProductId?: string;
  readonly Name?: string;
  readonly Owner?: string;
  readonly ShortDescription?: string;
  readonly Type?: string;
  readonly Distributor?: string;
  readonly HasDefaultPath?: boolean;
  readonly SupportEmail?: string;
  readonly SupportDescription?: string;
  readonly SupportUrl?: string;
}

export interface ProvisionProductInput {
  readonly AcceptLanguage?: string;
  readonly ProductId?: string;
  readonly ProductName?: string;
  readonly ProvisioningArtifactId?: string;
  readonly ProvisioningArtifactName?: string;
  readonly PathId?: string;
  readonly PathName?: string;
  readonly ProvisionedProductName: string;
  readonly ProvisioningParameters?: [];
  readonly ProvisioningPreferences?: ProvisioningPreferences;
  readonly Tags?: [];
  readonly NotificationArns?: [];
  readonly ProvisionToken: string;
}

export interface ProvisionProductOutput {
  readonly RecordDetail?: RecordDetail;
}

export interface ProvisionedProductAttribute {
  readonly Name?: string;
  readonly Arn?: string;
  readonly Type?: string;
  readonly Id?: string;
  readonly Status?: string;
  readonly StatusMessage?: string;
  readonly CreatedTime?: Date;
  readonly IdempotencyToken?: string;
  readonly LastRecordId?: string;
  readonly LastProvisioningRecordId?: string;
  readonly LastSuccessfulProvisioningRecordId?: string;
  readonly Tags?: [];
  readonly PhysicalId?: string;
  readonly ProductId?: string;
  readonly ProductName?: string;
  readonly ProvisioningArtifactId?: string;
  readonly ProvisioningArtifactName?: string;
  readonly UserArn?: string;
  readonly UserArnSession?: string;
}

export interface ProvisionedProductDetail {
  readonly Name?: string;
  readonly Arn?: string;
  readonly Type?: string;
  readonly Id?: string;
  readonly Status?: string;
  readonly StatusMessage?: string;
  readonly CreatedTime?: Date;
  readonly IdempotencyToken?: string;
  readonly LastRecordId?: string;
  readonly LastProvisioningRecordId?: string;
  readonly LastSuccessfulProvisioningRecordId?: string;
  readonly ProductId?: string;
  readonly ProvisioningArtifactId?: string;
  readonly LaunchRoleArn?: string;
}

export interface ProvisionedProductPlanDetails {
  readonly CreatedTime?: Date;
  readonly PathId?: string;
  readonly ProductId?: string;
  readonly PlanName?: string;
  readonly PlanId?: string;
  readonly ProvisionProductId?: string;
  readonly ProvisionProductName?: string;
  readonly PlanType?: string;
  readonly ProvisioningArtifactId?: string;
  readonly Status?: string;
  readonly UpdatedTime?: Date;
  readonly NotificationArns?: [];
  readonly ProvisioningParameters?: [];
  readonly Tags?: [];
  readonly StatusMessage?: string;
}

export interface ProvisionedProductPlanSummary {
  readonly PlanName?: string;
  readonly PlanId?: string;
  readonly ProvisionProductId?: string;
  readonly ProvisionProductName?: string;
  readonly PlanType?: string;
  readonly ProvisioningArtifactId?: string;
}

export interface ProvisioningArtifact {
  readonly Id?: string;
  readonly Name?: string;
  readonly Description?: string;
  readonly CreatedTime?: Date;
  readonly Guidance?: string;
}

export interface ProvisioningArtifactDetail {
  readonly Id?: string;
  readonly Name?: string;
  readonly Description?: string;
  readonly Type?: string;
  readonly CreatedTime?: Date;
  readonly Active?: boolean;
  readonly Guidance?: string;
}

export interface ProvisioningArtifactOutput {
  readonly Key?: string;
  readonly Description?: string;
}

export interface ProvisioningArtifactParameter {
  readonly ParameterKey?: string;
  readonly DefaultValue?: string;
  readonly ParameterType?: string;
  readonly IsNoEcho?: boolean;
  readonly Description?: string;
  readonly ParameterConstraints?: ParameterConstraints;
}

export interface ProvisioningArtifactPreferences {
  readonly StackSetAccounts?: [];
  readonly StackSetRegions?: [];
}

export interface ProvisioningArtifactProperties {
  readonly Name?: string;
  readonly Description?: string;
  readonly Info: {[key: string]: any};
  readonly Type?: string;
  readonly DisableTemplateValidation?: boolean;
}

export interface ProvisioningArtifactSummary {
  readonly Id?: string;
  readonly Name?: string;
  readonly Description?: string;
  readonly CreatedTime?: Date;
  readonly ProvisioningArtifactMetadata?: {[key: string]: any};
}

export interface ProvisioningArtifactView {
  readonly ProductViewSummary?: ProductViewSummary;
  readonly ProvisioningArtifact?: ProvisioningArtifact;
}

export interface ProvisioningParameter {
  readonly Key?: string;
  readonly Value?: string;
}

export interface ProvisioningPreferences {
  readonly StackSetAccounts?: [];
  readonly StackSetRegions?: [];
  readonly StackSetFailureToleranceCount?: number;
  readonly StackSetFailureTolerancePercentage?: number;
  readonly StackSetMaxConcurrencyCount?: number;
  readonly StackSetMaxConcurrencyPercentage?: number;
}

export interface RecordDetail {
  readonly RecordId?: string;
  readonly ProvisionedProductName?: string;
  readonly Status?: string;
  readonly CreatedTime?: Date;
  readonly UpdatedTime?: Date;
  readonly ProvisionedProductType?: string;
  readonly RecordType?: string;
  readonly ProvisionedProductId?: string;
  readonly ProductId?: string;
  readonly ProvisioningArtifactId?: string;
  readonly PathId?: string;
  readonly RecordErrors?: [];
  readonly RecordTags?: [];
  readonly LaunchRoleArn?: string;
}

export interface RecordError {
  readonly Code?: string;
  readonly Description?: string;
}

export interface RecordOutput {
  readonly OutputKey?: string;
  readonly OutputValue?: string;
  readonly Description?: string;
}

export interface RecordTag {
  readonly Key?: string;
  readonly Value?: string;
}

export interface RejectPortfolioShareInput {
  readonly AcceptLanguage?: string;
  readonly PortfolioId: string;
  readonly PortfolioShareType?: string;
}

export interface RejectPortfolioShareOutput {
}

export interface ResourceChange {
  readonly Action?: string;
  readonly LogicalResourceId?: string;
  readonly PhysicalResourceId?: string;
  readonly ResourceType?: string;
  readonly Replacement?: string;
  readonly Scope?: [];
  readonly Details?: [];
}

export interface ResourceChangeDetail {
  readonly Target?: ResourceTargetDefinition;
  readonly Evaluation?: string;
  readonly CausingEntity?: string;
}

export interface ResourceDetail {
  readonly Id?: string;
  readonly ARN?: string;
  readonly Name?: string;
  readonly Description?: string;
  readonly CreatedTime?: Date;
}

export interface ResourceInUseException {
}

export interface ResourceNotFoundException {
}

export interface ResourceTargetDefinition {
  readonly Attribute?: string;
  readonly Name?: string;
  readonly RequiresRecreation?: string;
}

export interface ScanProvisionedProductsInput {
  readonly AcceptLanguage?: string;
  readonly AccessLevelFilter?: AccessLevelFilter;
  readonly PageSize?: number;
  readonly PageToken?: string;
}

export interface ScanProvisionedProductsOutput {
  readonly ProvisionedProducts?: [];
  readonly NextPageToken?: string;
}

export interface SearchProductsAsAdminInput {
  readonly AcceptLanguage?: string;
  readonly PortfolioId?: string;
  readonly Filters?: {[key: string]: any};
  readonly SortBy?: string;
  readonly SortOrder?: string;
  readonly PageToken?: string;
  readonly PageSize?: number;
  readonly ProductSource?: string;
}

export interface SearchProductsAsAdminOutput {
  readonly ProductViewDetails?: [];
  readonly NextPageToken?: string;
}

export interface SearchProductsInput {
  readonly AcceptLanguage?: string;
  readonly Filters?: {[key: string]: any};
  readonly PageSize?: number;
  readonly SortBy?: string;
  readonly SortOrder?: string;
  readonly PageToken?: string;
}

export interface SearchProductsOutput {
  readonly ProductViewSummaries?: [];
  readonly ProductViewAggregations?: {[key: string]: any};
  readonly NextPageToken?: string;
}

export interface SearchProvisionedProductsInput {
  readonly AcceptLanguage?: string;
  readonly AccessLevelFilter?: AccessLevelFilter;
  readonly Filters?: {[key: string]: any};
  readonly SortBy?: string;
  readonly SortOrder?: string;
  readonly PageSize?: number;
  readonly PageToken?: string;
}

export interface SearchProvisionedProductsOutput {
  readonly ProvisionedProducts?: [];
  readonly TotalResultsCount?: number;
  readonly NextPageToken?: string;
}

export interface ServiceActionAssociation {
  readonly ServiceActionId: string;
  readonly ProductId: string;
  readonly ProvisioningArtifactId: string;
}

export interface ServiceActionDetail {
  readonly ServiceActionSummary?: ServiceActionSummary;
  readonly Definition?: {[key: string]: any};
}

export interface ServiceActionSummary {
  readonly Id?: string;
  readonly Name?: string;
  readonly Description?: string;
  readonly DefinitionType?: string;
}

export interface ShareDetails {
  readonly SuccessfulShares?: [];
  readonly ShareErrors?: [];
}

export interface ShareError {
  readonly Accounts?: [];
  readonly Message?: string;
  readonly Error?: string;
}

export interface StackInstance {
  readonly Account?: string;
  readonly Region?: string;
  readonly StackInstanceStatus?: string;
}

export interface Tag {
  readonly Key: string;
  readonly Value: string;
}

export interface TagOptionDetail {
  readonly Key?: string;
  readonly Value?: string;
  readonly Active?: boolean;
  readonly Id?: string;
  readonly Owner?: string;
}

export interface TagOptionNotMigratedException {
}

export interface TagOptionSummary {
  readonly Key?: string;
  readonly Values?: [];
}

export interface TerminateProvisionedProductInput {
  readonly ProvisionedProductName?: string;
  readonly ProvisionedProductId?: string;
  readonly TerminateToken: string;
  readonly IgnoreErrors?: boolean;
  readonly AcceptLanguage?: string;
  readonly RetainPhysicalResources?: boolean;
}

export interface TerminateProvisionedProductOutput {
  readonly RecordDetail?: RecordDetail;
}

export interface UpdateConstraintInput {
  readonly AcceptLanguage?: string;
  readonly Id: string;
  readonly Description?: string;
  readonly Parameters?: string;
}

export interface UpdateConstraintOutput {
  readonly ConstraintDetail?: ConstraintDetail;
  readonly ConstraintParameters?: string;
  readonly Status?: string;
}

export interface UpdatePortfolioInput {
  readonly AcceptLanguage?: string;
  readonly Id: string;
  readonly DisplayName?: string;
  readonly Description?: string;
  readonly ProviderName?: string;
  readonly AddTags?: [];
  readonly RemoveTags?: [];
}

export interface UpdatePortfolioOutput {
  readonly PortfolioDetail?: PortfolioDetail;
  readonly Tags?: [];
}

export interface UpdatePortfolioShareInput {
  readonly AcceptLanguage?: string;
  readonly PortfolioId: string;
  readonly AccountId?: string;
  readonly OrganizationNode?: OrganizationNode;
  readonly ShareTagOptions?: boolean;
}

export interface UpdatePortfolioShareOutput {
  readonly PortfolioShareToken?: string;
  readonly Status?: string;
}

export interface UpdateProductInput {
  readonly AcceptLanguage?: string;
  readonly Id: string;
  readonly Name?: string;
  readonly Owner?: string;
  readonly Description?: string;
  readonly Distributor?: string;
  readonly SupportDescription?: string;
  readonly SupportEmail?: string;
  readonly SupportUrl?: string;
  readonly AddTags?: [];
  readonly RemoveTags?: [];
}

export interface UpdateProductOutput {
  readonly ProductViewDetail?: ProductViewDetail;
  readonly Tags?: [];
}

export interface UpdateProvisionedProductInput {
  readonly AcceptLanguage?: string;
  readonly ProvisionedProductName?: string;
  readonly ProvisionedProductId?: string;
  readonly ProductId?: string;
  readonly ProductName?: string;
  readonly ProvisioningArtifactId?: string;
  readonly ProvisioningArtifactName?: string;
  readonly PathId?: string;
  readonly PathName?: string;
  readonly ProvisioningParameters?: [];
  readonly ProvisioningPreferences?: UpdateProvisioningPreferences;
  readonly Tags?: [];
  readonly UpdateToken: string;
}

export interface UpdateProvisionedProductOutput {
  readonly RecordDetail?: RecordDetail;
}

export interface UpdateProvisionedProductPropertiesInput {
  readonly AcceptLanguage?: string;
  readonly ProvisionedProductId: string;
  readonly ProvisionedProductProperties: {[key: string]: any};
  readonly IdempotencyToken: string;
}

export interface UpdateProvisionedProductPropertiesOutput {
  readonly ProvisionedProductId?: string;
  readonly ProvisionedProductProperties?: {[key: string]: any};
  readonly RecordId?: string;
  readonly Status?: string;
}

export interface UpdateProvisioningArtifactInput {
  readonly AcceptLanguage?: string;
  readonly ProductId: string;
  readonly ProvisioningArtifactId: string;
  readonly Name?: string;
  readonly Description?: string;
  readonly Active?: boolean;
  readonly Guidance?: string;
}

export interface UpdateProvisioningArtifactOutput {
  readonly ProvisioningArtifactDetail?: ProvisioningArtifactDetail;
  readonly Info?: {[key: string]: any};
  readonly Status?: string;
}

export interface UpdateProvisioningParameter {
  readonly Key?: string;
  readonly Value?: string;
  readonly UsePreviousValue?: boolean;
}

export interface UpdateProvisioningPreferences {
  readonly StackSetAccounts?: [];
  readonly StackSetRegions?: [];
  readonly StackSetFailureToleranceCount?: number;
  readonly StackSetFailureTolerancePercentage?: number;
  readonly StackSetMaxConcurrencyCount?: number;
  readonly StackSetMaxConcurrencyPercentage?: number;
  readonly StackSetOperationType?: string;
}

export interface UpdateServiceActionInput {
  readonly Id: string;
  readonly Name?: string;
  readonly Definition?: {[key: string]: any};
  readonly Description?: string;
  readonly AcceptLanguage?: string;
}

export interface UpdateServiceActionOutput {
  readonly ServiceActionDetail?: ServiceActionDetail;
}

export interface UpdateTagOptionInput {
  readonly Id: string;
  readonly Value?: string;
  readonly Active?: boolean;
}

export interface UpdateTagOptionOutput {
  readonly TagOptionDetail?: TagOptionDetail;
}

export interface UsageInstruction {
  readonly Type?: string;
  readonly Value?: string;
}


