/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AddNotificationChannel {
  readonly Config: NotificationChannelConfig;
}
export interface DescribeAccountHealth {
}
export interface DescribeAccountOverview {
  readonly FromTime: Date;
  readonly ToTime?: Date;
}
export interface DescribeAnomaly {
  readonly Id: string;
  readonly AccountId?: string;
}
export interface DescribeFeedback {
  readonly InsightId?: string;
}
export interface DescribeInsight {
  readonly Id: string;
  readonly AccountId?: string;
}
export interface DescribeOrganizationHealth {
  readonly AccountIds?: [];
  readonly OrganizationalUnitIds?: [];
}
export interface DescribeOrganizationOverview {
  readonly FromTime: Date;
  readonly ToTime?: Date;
  readonly AccountIds?: [];
  readonly OrganizationalUnitIds?: [];
}
export interface DescribeOrganizationResourceCollectionHealth {
  readonly OrganizationResourceCollectionType: string;
  readonly AccountIds?: [];
  readonly OrganizationalUnitIds?: [];
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface DescribeResourceCollectionHealth {
  readonly ResourceCollectionType: string;
  readonly NextToken?: string;
}
export interface DescribeServiceIntegration {
}
export interface GetCostEstimation {
  readonly NextToken?: string;
}
export interface GetResourceCollection {
  readonly ResourceCollectionType: string;
  readonly NextToken?: string;
}
export interface ListAnomaliesForInsight {
  readonly InsightId: string;
  readonly StartTimeRange?: StartTimeRange;
  readonly MaxResults?: number;
  readonly NextToken?: string;
  readonly AccountId?: string;
}
export interface ListEvents {
  readonly Filters: ListEventsFilters;
  readonly MaxResults?: number;
  readonly NextToken?: string;
  readonly AccountId?: string;
}
export interface ListInsights {
  readonly StatusFilter: ListInsightsStatusFilter;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface ListNotificationChannels {
  readonly NextToken?: string;
}
export interface ListOrganizationInsights {
  readonly StatusFilter: ListInsightsStatusFilter;
  readonly MaxResults?: number;
  readonly AccountIds?: [];
  readonly OrganizationalUnitIds?: [];
  readonly NextToken?: string;
}
export interface ListRecommendations {
  readonly InsightId: string;
  readonly NextToken?: string;
  readonly Locale?: string;
  readonly AccountId?: string;
}
export interface PutFeedback {
  readonly InsightFeedback?: InsightFeedback;
}
export interface RemoveNotificationChannel {
  readonly Id: string;
}
export interface SearchInsights {
  readonly StartTimeRange: StartTimeRange;
  readonly Filters?: SearchInsightsFilters;
  readonly MaxResults?: number;
  readonly NextToken?: string;
  readonly Type: string;
}
export interface SearchOrganizationInsights {
  readonly AccountIds: [];
  readonly StartTimeRange: StartTimeRange;
  readonly Filters?: SearchOrganizationInsightsFilters;
  readonly MaxResults?: number;
  readonly NextToken?: string;
  readonly Type: string;
}
export interface StartCostEstimation {
  readonly ResourceCollection: CostEstimationResourceCollectionFilter;
  readonly ClientToken?: string;
}
export interface UpdateResourceCollection {
  readonly Action: string;
  readonly ResourceCollection: UpdateResourceCollectionFilter;
}
export interface UpdateServiceIntegration {
  readonly ServiceIntegration: UpdateServiceIntegrationConfig;
}



interface AccessDeniedException {
  readonly Message: string;
}

interface AccountHealth {
  readonly AccountId: string;
  readonly Insight: AccountInsightHealth;
}

interface AccountInsightHealth {
  readonly OpenProactiveInsights: number;
  readonly OpenReactiveInsights: number;
}

interface AddNotificationChannelRequest {
  readonly Config: NotificationChannelConfig;
}

interface AddNotificationChannelResponse {
  readonly Id: string;
}

interface AnomalyReportedTimeRange {
  readonly OpenTime: Date;
  readonly CloseTime: Date;
}

interface AnomalyResource {
  readonly Name: string;
  readonly Type: string;
}

interface AnomalySourceDetails {
  readonly CloudWatchMetrics: [];
  readonly PerformanceInsightsMetrics: [];
}

interface AnomalyTimeRange {
  readonly StartTime: Date;
  readonly EndTime: Date;
}

interface CloudFormationCollection {
  readonly StackNames: [];
}

interface CloudFormationCollectionFilter {
  readonly StackNames: [];
}

interface CloudFormationCostEstimationResourceCollectionFilter {
  readonly StackNames: [];
}

interface CloudFormationHealth {
  readonly StackName: string;
  readonly Insight: InsightHealth;
}

interface CloudWatchMetricsDataSummary {
  readonly TimestampMetricValuePairList: [];
  readonly StatusCode: string;
}

interface CloudWatchMetricsDetail {
  readonly MetricName: string;
  readonly Namespace: string;
  readonly Dimensions: [];
  readonly Stat: string;
  readonly Unit: string;
  readonly Period: number;
  readonly MetricDataSummary: CloudWatchMetricsDataSummary;
}

interface CloudWatchMetricsDimension {
  readonly Name: string;
  readonly Value: string;
}

interface ConflictException {
  readonly Message: string;
  readonly ResourceId: string;
  readonly ResourceType: string;
}

interface CostEstimationResourceCollectionFilter {
  readonly CloudFormation: CloudFormationCostEstimationResourceCollectionFilter;
  readonly Tags: [];
}

interface CostEstimationTimeRange {
  readonly StartTime: Date;
  readonly EndTime: Date;
}

interface DescribeAccountHealthRequest {
}

interface DescribeAccountHealthResponse {
  readonly OpenReactiveInsights: number;
  readonly OpenProactiveInsights: number;
  readonly MetricsAnalyzed: number;
  readonly ResourceHours: number;
}

interface DescribeAccountOverviewRequest {
  readonly FromTime: Date;
  readonly ToTime: Date;
}

interface DescribeAccountOverviewResponse {
  readonly ReactiveInsights: number;
  readonly ProactiveInsights: number;
  readonly MeanTimeToRecoverInMilliseconds: number;
}

interface DescribeAnomalyRequest {
  readonly Id: string;
  readonly AccountId: string;
}

interface DescribeAnomalyResponse {
  readonly ProactiveAnomaly: ProactiveAnomaly;
  readonly ReactiveAnomaly: ReactiveAnomaly;
}

interface DescribeFeedbackRequest {
  readonly InsightId: string;
}

interface DescribeFeedbackResponse {
  readonly InsightFeedback: InsightFeedback;
}

interface DescribeInsightRequest {
  readonly Id: string;
  readonly AccountId: string;
}

interface DescribeInsightResponse {
  readonly ProactiveInsight: ProactiveInsight;
  readonly ReactiveInsight: ReactiveInsight;
}

interface DescribeOrganizationHealthRequest {
  readonly AccountIds: [];
  readonly OrganizationalUnitIds: [];
}

interface DescribeOrganizationHealthResponse {
  readonly OpenReactiveInsights: number;
  readonly OpenProactiveInsights: number;
  readonly MetricsAnalyzed: number;
  readonly ResourceHours: number;
}

interface DescribeOrganizationOverviewRequest {
  readonly FromTime: Date;
  readonly ToTime: Date;
  readonly AccountIds: [];
  readonly OrganizationalUnitIds: [];
}

interface DescribeOrganizationOverviewResponse {
  readonly ReactiveInsights: number;
  readonly ProactiveInsights: number;
}

interface DescribeOrganizationResourceCollectionHealthRequest {
  readonly OrganizationResourceCollectionType: string;
  readonly AccountIds: [];
  readonly OrganizationalUnitIds: [];
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface DescribeOrganizationResourceCollectionHealthResponse {
  readonly CloudFormation: [];
  readonly Service: [];
  readonly Account: [];
  readonly NextToken: string;
}

interface DescribeResourceCollectionHealthRequest {
  readonly ResourceCollectionType: string;
  readonly NextToken: string;
}

interface DescribeResourceCollectionHealthResponse {
  readonly CloudFormation: [];
  readonly Service: [];
  readonly NextToken: string;
  readonly Tags: [];
}

interface DescribeServiceIntegrationRequest {
}

interface DescribeServiceIntegrationResponse {
  readonly ServiceIntegration: ServiceIntegrationConfig;
}

interface EndTimeRange {
  readonly FromTime: Date;
  readonly ToTime: Date;
}

interface Event {
  readonly ResourceCollection: ResourceCollection;
  readonly Id: string;
  readonly Time: Date;
  readonly EventSource: string;
  readonly Name: string;
  readonly DataSource: string;
  readonly EventClass: string;
  readonly Resources: [];
}

interface EventResource {
  readonly Type: string;
  readonly Name: string;
  readonly Arn: string;
}

interface EventTimeRange {
  readonly FromTime: Date;
  readonly ToTime: Date;
}

interface GetCostEstimationRequest {
  readonly NextToken: string;
}

interface GetCostEstimationResponse {
  readonly ResourceCollection: CostEstimationResourceCollectionFilter;
  readonly Status: string;
  readonly Costs: [];
  readonly TimeRange: CostEstimationTimeRange;
  readonly TotalCost: unknown;
  readonly NextToken: string;
}

interface GetResourceCollectionRequest {
  readonly ResourceCollectionType: string;
  readonly NextToken: string;
}

interface GetResourceCollectionResponse {
  readonly ResourceCollection: ResourceCollectionFilter;
  readonly NextToken: string;
}

interface InsightFeedback {
  readonly Id: string;
  readonly Feedback: string;
}

interface InsightHealth {
  readonly OpenProactiveInsights: number;
  readonly OpenReactiveInsights: number;
  readonly MeanTimeToRecoverInMilliseconds: number;
}

interface InsightTimeRange {
  readonly StartTime: Date;
  readonly EndTime: Date;
}

interface InternalServerException {
  readonly Message: string;
  readonly RetryAfterSeconds: number;
}

interface ListAnomaliesForInsightRequest {
  readonly InsightId: string;
  readonly StartTimeRange: StartTimeRange;
  readonly MaxResults: number;
  readonly NextToken: string;
  readonly AccountId: string;
}

interface ListAnomaliesForInsightResponse {
  readonly ProactiveAnomalies: [];
  readonly ReactiveAnomalies: [];
  readonly NextToken: string;
}

interface ListEventsFilters {
  readonly InsightId: string;
  readonly EventTimeRange: EventTimeRange;
  readonly EventClass: string;
  readonly EventSource: string;
  readonly DataSource: string;
  readonly ResourceCollection: ResourceCollection;
}

interface ListEventsRequest {
  readonly Filters: ListEventsFilters;
  readonly MaxResults: number;
  readonly NextToken: string;
  readonly AccountId: string;
}

interface ListEventsResponse {
  readonly Events: [];
  readonly NextToken: string;
}

interface ListInsightsAnyStatusFilter {
  readonly Type: string;
  readonly StartTimeRange: StartTimeRange;
}

interface ListInsightsClosedStatusFilter {
  readonly Type: string;
  readonly EndTimeRange: EndTimeRange;
}

interface ListInsightsOngoingStatusFilter {
  readonly Type: string;
}

interface ListInsightsRequest {
  readonly StatusFilter: ListInsightsStatusFilter;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListInsightsResponse {
  readonly ProactiveInsights: [];
  readonly ReactiveInsights: [];
  readonly NextToken: string;
}

interface ListInsightsStatusFilter {
  readonly Ongoing: ListInsightsOngoingStatusFilter;
  readonly Closed: ListInsightsClosedStatusFilter;
  readonly Any: ListInsightsAnyStatusFilter;
}

interface ListNotificationChannelsRequest {
  readonly NextToken: string;
}

interface ListNotificationChannelsResponse {
  readonly Channels: [];
  readonly NextToken: string;
}

interface ListOrganizationInsightsRequest {
  readonly StatusFilter: ListInsightsStatusFilter;
  readonly MaxResults: number;
  readonly AccountIds: [];
  readonly OrganizationalUnitIds: [];
  readonly NextToken: string;
}

interface ListOrganizationInsightsResponse {
  readonly ProactiveInsights: [];
  readonly ReactiveInsights: [];
  readonly NextToken: string;
}

interface ListRecommendationsRequest {
  readonly InsightId: string;
  readonly NextToken: string;
  readonly Locale: string;
  readonly AccountId: string;
}

interface ListRecommendationsResponse {
  readonly Recommendations: [];
  readonly NextToken: string;
}

interface NotificationChannel {
  readonly Id: string;
  readonly Config: NotificationChannelConfig;
}

interface NotificationChannelConfig {
  readonly Sns: SnsChannelConfig;
}

interface OpsCenterIntegration {
  readonly OptInStatus: string;
}

interface OpsCenterIntegrationConfig {
  readonly OptInStatus: string;
}

interface PerformanceInsightsMetricDimensionGroup {
  readonly Group: string;
  readonly Dimensions: [];
  readonly Limit: number;
}

interface PerformanceInsightsMetricQuery {
  readonly Metric: string;
  readonly GroupBy: PerformanceInsightsMetricDimensionGroup;
  readonly Filter: {[key: string]: any};
}

interface PerformanceInsightsMetricsDetail {
  readonly MetricDisplayName: string;
  readonly Unit: string;
  readonly MetricQuery: PerformanceInsightsMetricQuery;
  readonly ReferenceData: [];
  readonly StatsAtAnomaly: [];
  readonly StatsAtBaseline: [];
}

interface PerformanceInsightsReferenceComparisonValues {
  readonly ReferenceScalar: PerformanceInsightsReferenceScalar;
  readonly ReferenceMetric: PerformanceInsightsReferenceMetric;
}

interface PerformanceInsightsReferenceData {
  readonly Name: string;
  readonly ComparisonValues: PerformanceInsightsReferenceComparisonValues;
}

interface PerformanceInsightsReferenceMetric {
  readonly MetricQuery: PerformanceInsightsMetricQuery;
}

interface PerformanceInsightsReferenceScalar {
  readonly Value: unknown;
}

interface PerformanceInsightsStat {
  readonly Type: string;
  readonly Value: unknown;
}

interface PredictionTimeRange {
  readonly StartTime: Date;
  readonly EndTime: Date;
}

interface ProactiveAnomaly {
  readonly Id: string;
  readonly Severity: string;
  readonly Status: string;
  readonly UpdateTime: Date;
  readonly AnomalyTimeRange: AnomalyTimeRange;
  readonly AnomalyReportedTimeRange: AnomalyReportedTimeRange;
  readonly PredictionTimeRange: PredictionTimeRange;
  readonly SourceDetails: AnomalySourceDetails;
  readonly AssociatedInsightId: string;
  readonly ResourceCollection: ResourceCollection;
  readonly Limit: unknown;
}

interface ProactiveAnomalySummary {
  readonly Id: string;
  readonly Severity: string;
  readonly Status: string;
  readonly UpdateTime: Date;
  readonly AnomalyTimeRange: AnomalyTimeRange;
  readonly AnomalyReportedTimeRange: AnomalyReportedTimeRange;
  readonly PredictionTimeRange: PredictionTimeRange;
  readonly SourceDetails: AnomalySourceDetails;
  readonly AssociatedInsightId: string;
  readonly ResourceCollection: ResourceCollection;
  readonly Limit: unknown;
}

interface ProactiveInsight {
  readonly Id: string;
  readonly Name: string;
  readonly Severity: string;
  readonly Status: string;
  readonly InsightTimeRange: InsightTimeRange;
  readonly PredictionTimeRange: PredictionTimeRange;
  readonly ResourceCollection: ResourceCollection;
  readonly SsmOpsItemId: string;
}

interface ProactiveInsightSummary {
  readonly Id: string;
  readonly Name: string;
  readonly Severity: string;
  readonly Status: string;
  readonly InsightTimeRange: InsightTimeRange;
  readonly PredictionTimeRange: PredictionTimeRange;
  readonly ResourceCollection: ResourceCollection;
  readonly ServiceCollection: ServiceCollection;
  readonly AssociatedResourceArns: [];
}

interface ProactiveOrganizationInsightSummary {
  readonly Id: string;
  readonly AccountId: string;
  readonly OrganizationalUnitId: string;
  readonly Name: string;
  readonly Severity: string;
  readonly Status: string;
  readonly InsightTimeRange: InsightTimeRange;
  readonly PredictionTimeRange: PredictionTimeRange;
  readonly ResourceCollection: ResourceCollection;
  readonly ServiceCollection: ServiceCollection;
}

interface PutFeedbackRequest {
  readonly InsightFeedback: InsightFeedback;
}

interface PutFeedbackResponse {
}

interface ReactiveAnomaly {
  readonly Id: string;
  readonly Severity: string;
  readonly Status: string;
  readonly AnomalyTimeRange: AnomalyTimeRange;
  readonly AnomalyReportedTimeRange: AnomalyReportedTimeRange;
  readonly SourceDetails: AnomalySourceDetails;
  readonly AssociatedInsightId: string;
  readonly ResourceCollection: ResourceCollection;
  readonly Type: string;
  readonly Name: string;
  readonly Description: string;
  readonly CausalAnomalyId: string;
  readonly AnomalyResources: [];
}

interface ReactiveAnomalySummary {
  readonly Id: string;
  readonly Severity: string;
  readonly Status: string;
  readonly AnomalyTimeRange: AnomalyTimeRange;
  readonly AnomalyReportedTimeRange: AnomalyReportedTimeRange;
  readonly SourceDetails: AnomalySourceDetails;
  readonly AssociatedInsightId: string;
  readonly ResourceCollection: ResourceCollection;
  readonly Type: string;
  readonly Name: string;
  readonly Description: string;
  readonly CausalAnomalyId: string;
  readonly AnomalyResources: [];
}

interface ReactiveInsight {
  readonly Id: string;
  readonly Name: string;
  readonly Severity: string;
  readonly Status: string;
  readonly InsightTimeRange: InsightTimeRange;
  readonly ResourceCollection: ResourceCollection;
  readonly SsmOpsItemId: string;
}

interface ReactiveInsightSummary {
  readonly Id: string;
  readonly Name: string;
  readonly Severity: string;
  readonly Status: string;
  readonly InsightTimeRange: InsightTimeRange;
  readonly ResourceCollection: ResourceCollection;
  readonly ServiceCollection: ServiceCollection;
  readonly AssociatedResourceArns: [];
}

interface ReactiveOrganizationInsightSummary {
  readonly Id: string;
  readonly AccountId: string;
  readonly OrganizationalUnitId: string;
  readonly Name: string;
  readonly Severity: string;
  readonly Status: string;
  readonly InsightTimeRange: InsightTimeRange;
  readonly ResourceCollection: ResourceCollection;
  readonly ServiceCollection: ServiceCollection;
}

interface Recommendation {
  readonly Description: string;
  readonly Link: string;
  readonly Name: string;
  readonly Reason: string;
  readonly RelatedEvents: [];
  readonly RelatedAnomalies: [];
}

interface RecommendationRelatedAnomaly {
  readonly Resources: [];
  readonly SourceDetails: [];
  readonly AnomalyId: string;
}

interface RecommendationRelatedAnomalyResource {
  readonly Name: string;
  readonly Type: string;
}

interface RecommendationRelatedAnomalySourceDetail {
  readonly CloudWatchMetrics: [];
}

interface RecommendationRelatedCloudWatchMetricsSourceDetail {
  readonly MetricName: string;
  readonly Namespace: string;
}

interface RecommendationRelatedEvent {
  readonly Name: string;
  readonly Resources: [];
}

interface RecommendationRelatedEventResource {
  readonly Name: string;
  readonly Type: string;
}

interface RemoveNotificationChannelRequest {
  readonly Id: string;
}

interface RemoveNotificationChannelResponse {
}

interface ResourceCollection {
  readonly CloudFormation: CloudFormationCollection;
  readonly Tags: [];
}

interface ResourceCollectionFilter {
  readonly CloudFormation: CloudFormationCollectionFilter;
  readonly Tags: [];
}

interface ResourceNotFoundException {
  readonly Message: string;
  readonly ResourceId: string;
  readonly ResourceType: string;
}

interface SearchInsightsFilters {
  readonly Severities: [];
  readonly Statuses: [];
  readonly ResourceCollection: ResourceCollection;
  readonly ServiceCollection: ServiceCollection;
}

interface SearchInsightsRequest {
  readonly StartTimeRange: StartTimeRange;
  readonly Filters: SearchInsightsFilters;
  readonly MaxResults: number;
  readonly NextToken: string;
  readonly Type: string;
}

interface SearchInsightsResponse {
  readonly ProactiveInsights: [];
  readonly ReactiveInsights: [];
  readonly NextToken: string;
}

interface SearchOrganizationInsightsFilters {
  readonly Severities: [];
  readonly Statuses: [];
  readonly ResourceCollection: ResourceCollection;
  readonly ServiceCollection: ServiceCollection;
}

interface SearchOrganizationInsightsRequest {
  readonly AccountIds: [];
  readonly StartTimeRange: StartTimeRange;
  readonly Filters: SearchOrganizationInsightsFilters;
  readonly MaxResults: number;
  readonly NextToken: string;
  readonly Type: string;
}

interface SearchOrganizationInsightsResponse {
  readonly ProactiveInsights: [];
  readonly ReactiveInsights: [];
  readonly NextToken: string;
}

interface ServiceCollection {
  readonly ServiceNames: [];
}

interface ServiceHealth {
  readonly ServiceName: string;
  readonly Insight: ServiceInsightHealth;
}

interface ServiceInsightHealth {
  readonly OpenProactiveInsights: number;
  readonly OpenReactiveInsights: number;
}

interface ServiceIntegrationConfig {
  readonly OpsCenter: OpsCenterIntegration;
}

interface ServiceQuotaExceededException {
  readonly Message: string;
}

interface ServiceResourceCost {
  readonly Type: string;
  readonly State: string;
  readonly Count: number;
  readonly UnitCost: unknown;
  readonly Cost: unknown;
}

interface SnsChannelConfig {
  readonly TopicArn: string;
}

interface StartCostEstimationRequest {
  readonly ResourceCollection: CostEstimationResourceCollectionFilter;
  readonly ClientToken: string;
}

interface StartCostEstimationResponse {
}

interface StartTimeRange {
  readonly FromTime: Date;
  readonly ToTime: Date;
}

interface TagCollection {
  readonly AppBoundaryKey: string;
  readonly TagValues: [];
}

interface TagCollectionFilter {
  readonly AppBoundaryKey: string;
  readonly TagValues: [];
}

interface TagCostEstimationResourceCollectionFilter {
  readonly AppBoundaryKey: string;
  readonly TagValues: [];
}

interface TagHealth {
  readonly AppBoundaryKey: string;
  readonly TagValue: string;
  readonly Insight: InsightHealth;
}

interface ThrottlingException {
  readonly Message: string;
  readonly QuotaCode: string;
  readonly ServiceCode: string;
  readonly RetryAfterSeconds: number;
}

interface TimestampMetricValuePair {
  readonly Timestamp: Date;
  readonly MetricValue: unknown;
}

interface UpdateCloudFormationCollectionFilter {
  readonly StackNames: [];
}

interface UpdateResourceCollectionFilter {
  readonly CloudFormation: UpdateCloudFormationCollectionFilter;
  readonly Tags: [];
}

interface UpdateResourceCollectionRequest {
  readonly Action: string;
  readonly ResourceCollection: UpdateResourceCollectionFilter;
}

interface UpdateResourceCollectionResponse {
}

interface UpdateServiceIntegrationConfig {
  readonly OpsCenter: OpsCenterIntegrationConfig;
}

interface UpdateServiceIntegrationRequest {
  readonly ServiceIntegration: UpdateServiceIntegrationConfig;
}

interface UpdateServiceIntegrationResponse {
}

interface UpdateTagCollectionFilter {
  readonly AppBoundaryKey: string;
  readonly TagValues: [];
}

interface ValidationException {
  readonly Message: string;
  readonly Reason: string;
  readonly Fields: [];
}

interface ValidationExceptionField {
  readonly Name: string;
  readonly Message: string;
}

