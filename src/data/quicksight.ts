/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CancelIngestion {
  readonly AwsAccountId: string;
  readonly DataSetId: string;
  readonly IngestionId: string;
}
export interface CreateAccountCustomization {
  readonly AwsAccountId: string;
  readonly Namespace: string;
  readonly AccountCustomization: AccountCustomization;
  readonly Tags: [];
}
export interface CreateAnalysis {
  readonly AwsAccountId: string;
  readonly AnalysisId: string;
  readonly Name: string;
  readonly Parameters: Parameters;
  readonly Permissions: [];
  readonly SourceEntity: AnalysisSourceEntity;
  readonly ThemeArn: string;
  readonly Tags: [];
}
export interface CreateDashboard {
  readonly AwsAccountId: string;
  readonly DashboardId: string;
  readonly Name: string;
  readonly Parameters: Parameters;
  readonly Permissions: [];
  readonly SourceEntity: DashboardSourceEntity;
  readonly Tags: [];
  readonly VersionDescription: string;
  readonly DashboardPublishOptions: DashboardPublishOptions;
  readonly ThemeArn: string;
}
export interface CreateDataSet {
  readonly AwsAccountId: string;
  readonly DataSetId: string;
  readonly Name: string;
  readonly PhysicalTableMap: {[key: string]: any};
  readonly LogicalTableMap: {[key: string]: any};
  readonly ImportMode: string;
  readonly ColumnGroups: [];
  readonly FieldFolders: {[key: string]: any};
  readonly Permissions: [];
  readonly RowLevelPermissionDataSet: RowLevelPermissionDataSet;
  readonly RowLevelPermissionTagConfiguration: RowLevelPermissionTagConfiguration;
  readonly ColumnLevelPermissionRules: [];
  readonly Tags: [];
  readonly DataSetUsageConfiguration: DataSetUsageConfiguration;
}
export interface CreateDataSource {
  readonly AwsAccountId: string;
  readonly DataSourceId: string;
  readonly Name: string;
  readonly Type: string;
  readonly DataSourceParameters: DataSourceParameters;
  readonly Credentials: DataSourceCredentials;
  readonly Permissions: [];
  readonly VpcConnectionProperties: VpcConnectionProperties;
  readonly SslProperties: SslProperties;
  readonly Tags: [];
}
export interface CreateFolder {
  readonly AwsAccountId: string;
  readonly FolderId: string;
  readonly Name: string;
  readonly FolderType: string;
  readonly ParentFolderArn: string;
  readonly Permissions: [];
  readonly Tags: [];
}
export interface CreateFolderMembership {
  readonly AwsAccountId: string;
  readonly FolderId: string;
  readonly MemberId: string;
  readonly MemberType: string;
}
export interface CreateGroup {
  readonly GroupName: string;
  readonly Description: string;
  readonly AwsAccountId: string;
  readonly Namespace: string;
}
export interface CreateGroupMembership {
  readonly MemberName: string;
  readonly GroupName: string;
  readonly AwsAccountId: string;
  readonly Namespace: string;
}
export interface CreateIAMPolicyAssignment {
  readonly AwsAccountId: string;
  readonly AssignmentName: string;
  readonly AssignmentStatus: string;
  readonly PolicyArn: string;
  readonly Identities: {[key: string]: any};
  readonly Namespace: string;
}
export interface CreateIngestion {
  readonly DataSetId: string;
  readonly IngestionId: string;
  readonly AwsAccountId: string;
  readonly IngestionType: string;
}
export interface CreateNamespace {
  readonly AwsAccountId: string;
  readonly Namespace: string;
  readonly IdentityStore: string;
  readonly Tags: [];
}
export interface CreateTemplate {
  readonly AwsAccountId: string;
  readonly TemplateId: string;
  readonly Name: string;
  readonly Permissions: [];
  readonly SourceEntity: TemplateSourceEntity;
  readonly Tags: [];
  readonly VersionDescription: string;
}
export interface CreateTemplateAlias {
  readonly AwsAccountId: string;
  readonly TemplateId: string;
  readonly AliasName: string;
  readonly TemplateVersionNumber: number;
}
export interface CreateTheme {
  readonly AwsAccountId: string;
  readonly ThemeId: string;
  readonly Name: string;
  readonly BaseThemeId: string;
  readonly VersionDescription: string;
  readonly Configuration: ThemeConfiguration;
  readonly Permissions: [];
  readonly Tags: [];
}
export interface CreateThemeAlias {
  readonly AwsAccountId: string;
  readonly ThemeId: string;
  readonly AliasName: string;
  readonly ThemeVersionNumber: number;
}
export interface DeleteAccountCustomization {
  readonly AwsAccountId: string;
  readonly Namespace: string;
}
export interface DeleteAnalysis {
  readonly AwsAccountId: string;
  readonly AnalysisId: string;
  readonly RecoveryWindowInDays: number;
  readonly ForceDeleteWithoutRecovery: boolean;
}
export interface DeleteDashboard {
  readonly AwsAccountId: string;
  readonly DashboardId: string;
  readonly VersionNumber: number;
}
export interface DeleteDataSet {
  readonly AwsAccountId: string;
  readonly DataSetId: string;
}
export interface DeleteDataSource {
  readonly AwsAccountId: string;
  readonly DataSourceId: string;
}
export interface DeleteFolder {
  readonly AwsAccountId: string;
  readonly FolderId: string;
}
export interface DeleteFolderMembership {
  readonly AwsAccountId: string;
  readonly FolderId: string;
  readonly MemberId: string;
  readonly MemberType: string;
}
export interface DeleteGroup {
  readonly GroupName: string;
  readonly AwsAccountId: string;
  readonly Namespace: string;
}
export interface DeleteGroupMembership {
  readonly MemberName: string;
  readonly GroupName: string;
  readonly AwsAccountId: string;
  readonly Namespace: string;
}
export interface DeleteIAMPolicyAssignment {
  readonly AwsAccountId: string;
  readonly AssignmentName: string;
  readonly Namespace: string;
}
export interface DeleteNamespace {
  readonly AwsAccountId: string;
  readonly Namespace: string;
}
export interface DeleteTemplate {
  readonly AwsAccountId: string;
  readonly TemplateId: string;
  readonly VersionNumber: number;
}
export interface DeleteTemplateAlias {
  readonly AwsAccountId: string;
  readonly TemplateId: string;
  readonly AliasName: string;
}
export interface DeleteTheme {
  readonly AwsAccountId: string;
  readonly ThemeId: string;
  readonly VersionNumber: number;
}
export interface DeleteThemeAlias {
  readonly AwsAccountId: string;
  readonly ThemeId: string;
  readonly AliasName: string;
}
export interface DeleteUser {
  readonly UserName: string;
  readonly AwsAccountId: string;
  readonly Namespace: string;
}
export interface DeleteUserByPrincipalId {
  readonly PrincipalId: string;
  readonly AwsAccountId: string;
  readonly Namespace: string;
}
export interface DescribeAccountCustomization {
  readonly AwsAccountId: string;
  readonly Namespace: string;
  readonly Resolved: boolean;
}
export interface DescribeAccountSettings {
  readonly AwsAccountId: string;
}
export interface DescribeAnalysis {
  readonly AwsAccountId: string;
  readonly AnalysisId: string;
}
export interface DescribeAnalysisPermissions {
  readonly AwsAccountId: string;
  readonly AnalysisId: string;
}
export interface DescribeDashboard {
  readonly AwsAccountId: string;
  readonly DashboardId: string;
  readonly VersionNumber: number;
  readonly AliasName: string;
}
export interface DescribeDashboardPermissions {
  readonly AwsAccountId: string;
  readonly DashboardId: string;
}
export interface DescribeDataSet {
  readonly AwsAccountId: string;
  readonly DataSetId: string;
}
export interface DescribeDataSetPermissions {
  readonly AwsAccountId: string;
  readonly DataSetId: string;
}
export interface DescribeDataSource {
  readonly AwsAccountId: string;
  readonly DataSourceId: string;
}
export interface DescribeDataSourcePermissions {
  readonly AwsAccountId: string;
  readonly DataSourceId: string;
}
export interface DescribeFolder {
  readonly AwsAccountId: string;
  readonly FolderId: string;
}
export interface DescribeFolderPermissions {
  readonly AwsAccountId: string;
  readonly FolderId: string;
}
export interface DescribeFolderResolvedPermissions {
  readonly AwsAccountId: string;
  readonly FolderId: string;
}
export interface DescribeGroup {
  readonly GroupName: string;
  readonly AwsAccountId: string;
  readonly Namespace: string;
}
export interface DescribeIAMPolicyAssignment {
  readonly AwsAccountId: string;
  readonly AssignmentName: string;
  readonly Namespace: string;
}
export interface DescribeIngestion {
  readonly AwsAccountId: string;
  readonly DataSetId: string;
  readonly IngestionId: string;
}
export interface DescribeIpRestriction {
  readonly AwsAccountId: string;
}
export interface DescribeNamespace {
  readonly AwsAccountId: string;
  readonly Namespace: string;
}
export interface DescribeTemplate {
  readonly AwsAccountId: string;
  readonly TemplateId: string;
  readonly VersionNumber: number;
  readonly AliasName: string;
}
export interface DescribeTemplateAlias {
  readonly AwsAccountId: string;
  readonly TemplateId: string;
  readonly AliasName: string;
}
export interface DescribeTemplatePermissions {
  readonly AwsAccountId: string;
  readonly TemplateId: string;
}
export interface DescribeTheme {
  readonly AwsAccountId: string;
  readonly ThemeId: string;
  readonly VersionNumber: number;
  readonly AliasName: string;
}
export interface DescribeThemeAlias {
  readonly AwsAccountId: string;
  readonly ThemeId: string;
  readonly AliasName: string;
}
export interface DescribeThemePermissions {
  readonly AwsAccountId: string;
  readonly ThemeId: string;
}
export interface DescribeUser {
  readonly UserName: string;
  readonly AwsAccountId: string;
  readonly Namespace: string;
}
export interface GenerateEmbedUrlForAnonymousUser {
  readonly AwsAccountId: string;
  readonly SessionLifetimeInMinutes: number;
  readonly Namespace: string;
  readonly SessionTags: [];
  readonly AuthorizedResourceArns: [];
  readonly ExperienceConfiguration: AnonymousUserEmbeddingExperienceConfiguration;
}
export interface GenerateEmbedUrlForRegisteredUser {
  readonly AwsAccountId: string;
  readonly SessionLifetimeInMinutes: number;
  readonly UserArn: string;
  readonly ExperienceConfiguration: RegisteredUserEmbeddingExperienceConfiguration;
}
export interface GetDashboardEmbedUrl {
  readonly AwsAccountId: string;
  readonly DashboardId: string;
  readonly IdentityType: string;
  readonly SessionLifetimeInMinutes: number;
  readonly UndoRedoDisabled: boolean;
  readonly ResetDisabled: boolean;
  readonly StatePersistenceEnabled: boolean;
  readonly UserArn: string;
  readonly Namespace: string;
  readonly AdditionalDashboardIds: [];
}
export interface GetSessionEmbedUrl {
  readonly AwsAccountId: string;
  readonly EntryPoint: string;
  readonly SessionLifetimeInMinutes: number;
  readonly UserArn: string;
}
export interface ListAnalyses {
  readonly AwsAccountId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListDashboardVersions {
  readonly AwsAccountId: string;
  readonly DashboardId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListDashboards {
  readonly AwsAccountId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListDataSets {
  readonly AwsAccountId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListDataSources {
  readonly AwsAccountId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListFolderMembers {
  readonly AwsAccountId: string;
  readonly FolderId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListFolders {
  readonly AwsAccountId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListGroupMemberships {
  readonly GroupName: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly AwsAccountId: string;
  readonly Namespace: string;
}
export interface ListGroups {
  readonly AwsAccountId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly Namespace: string;
}
export interface ListIAMPolicyAssignments {
  readonly AwsAccountId: string;
  readonly AssignmentStatus: string;
  readonly Namespace: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListIAMPolicyAssignmentsForUser {
  readonly AwsAccountId: string;
  readonly UserName: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly Namespace: string;
}
export interface ListIngestions {
  readonly DataSetId: string;
  readonly NextToken: string;
  readonly AwsAccountId: string;
  readonly MaxResults: number;
}
export interface ListNamespaces {
  readonly AwsAccountId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListTagsForResource {
  readonly ResourceArn: string;
}
export interface ListTemplateAliases {
  readonly AwsAccountId: string;
  readonly TemplateId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListTemplateVersions {
  readonly AwsAccountId: string;
  readonly TemplateId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListTemplates {
  readonly AwsAccountId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListThemeAliases {
  readonly AwsAccountId: string;
  readonly ThemeId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListThemeVersions {
  readonly AwsAccountId: string;
  readonly ThemeId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListThemes {
  readonly AwsAccountId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly Type: string;
}
export interface ListUserGroups {
  readonly UserName: string;
  readonly AwsAccountId: string;
  readonly Namespace: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListUsers {
  readonly AwsAccountId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly Namespace: string;
}
export interface RegisterUser {
  readonly IdentityType: string;
  readonly Email: string;
  readonly UserRole: string;
  readonly IamArn: string;
  readonly SessionName: string;
  readonly AwsAccountId: string;
  readonly Namespace: string;
  readonly UserName: string;
  readonly CustomPermissionsName: string;
  readonly ExternalLoginFederationProviderType: string;
  readonly CustomFederationProviderUrl: string;
  readonly ExternalLoginId: string;
}
export interface RestoreAnalysis {
  readonly AwsAccountId: string;
  readonly AnalysisId: string;
}
export interface SearchAnalyses {
  readonly AwsAccountId: string;
  readonly Filters: [];
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface SearchDashboards {
  readonly AwsAccountId: string;
  readonly Filters: [];
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface SearchFolders {
  readonly AwsAccountId: string;
  readonly Filters: [];
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface TagResource {
  readonly ResourceArn: string;
  readonly Tags: [];
}
export interface UntagResource {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}
export interface UpdateAccountCustomization {
  readonly AwsAccountId: string;
  readonly Namespace: string;
  readonly AccountCustomization: AccountCustomization;
}
export interface UpdateAccountSettings {
  readonly AwsAccountId: string;
  readonly DefaultNamespace: string;
  readonly NotificationEmail: string;
}
export interface UpdateAnalysis {
  readonly AwsAccountId: string;
  readonly AnalysisId: string;
  readonly Name: string;
  readonly Parameters: Parameters;
  readonly SourceEntity: AnalysisSourceEntity;
  readonly ThemeArn: string;
}
export interface UpdateAnalysisPermissions {
  readonly AwsAccountId: string;
  readonly AnalysisId: string;
  readonly GrantPermissions: [];
  readonly RevokePermissions: [];
}
export interface UpdateDashboard {
  readonly AwsAccountId: string;
  readonly DashboardId: string;
  readonly Name: string;
  readonly SourceEntity: DashboardSourceEntity;
  readonly Parameters: Parameters;
  readonly VersionDescription: string;
  readonly DashboardPublishOptions: DashboardPublishOptions;
  readonly ThemeArn: string;
}
export interface UpdateDashboardPermissions {
  readonly AwsAccountId: string;
  readonly DashboardId: string;
  readonly GrantPermissions: [];
  readonly RevokePermissions: [];
  readonly GrantLinkPermissions: [];
  readonly RevokeLinkPermissions: [];
}
export interface UpdateDashboardPublishedVersion {
  readonly AwsAccountId: string;
  readonly DashboardId: string;
  readonly VersionNumber: number;
}
export interface UpdateDataSet {
  readonly AwsAccountId: string;
  readonly DataSetId: string;
  readonly Name: string;
  readonly PhysicalTableMap: {[key: string]: any};
  readonly LogicalTableMap: {[key: string]: any};
  readonly ImportMode: string;
  readonly ColumnGroups: [];
  readonly FieldFolders: {[key: string]: any};
  readonly RowLevelPermissionDataSet: RowLevelPermissionDataSet;
  readonly RowLevelPermissionTagConfiguration: RowLevelPermissionTagConfiguration;
  readonly ColumnLevelPermissionRules: [];
  readonly DataSetUsageConfiguration: DataSetUsageConfiguration;
}
export interface UpdateDataSetPermissions {
  readonly AwsAccountId: string;
  readonly DataSetId: string;
  readonly GrantPermissions: [];
  readonly RevokePermissions: [];
}
export interface UpdateDataSource {
  readonly AwsAccountId: string;
  readonly DataSourceId: string;
  readonly Name: string;
  readonly DataSourceParameters: DataSourceParameters;
  readonly Credentials: DataSourceCredentials;
  readonly VpcConnectionProperties: VpcConnectionProperties;
  readonly SslProperties: SslProperties;
}
export interface UpdateDataSourcePermissions {
  readonly AwsAccountId: string;
  readonly DataSourceId: string;
  readonly GrantPermissions: [];
  readonly RevokePermissions: [];
}
export interface UpdateFolder {
  readonly AwsAccountId: string;
  readonly FolderId: string;
  readonly Name: string;
}
export interface UpdateFolderPermissions {
  readonly AwsAccountId: string;
  readonly FolderId: string;
  readonly GrantPermissions: [];
  readonly RevokePermissions: [];
}
export interface UpdateGroup {
  readonly GroupName: string;
  readonly Description: string;
  readonly AwsAccountId: string;
  readonly Namespace: string;
}
export interface UpdateIAMPolicyAssignment {
  readonly AwsAccountId: string;
  readonly AssignmentName: string;
  readonly Namespace: string;
  readonly AssignmentStatus: string;
  readonly PolicyArn: string;
  readonly Identities: {[key: string]: any};
}
export interface UpdateIpRestriction {
  readonly AwsAccountId: string;
  readonly IpRestrictionRuleMap: {[key: string]: any};
  readonly Enabled: boolean;
}
export interface UpdateTemplate {
  readonly AwsAccountId: string;
  readonly TemplateId: string;
  readonly SourceEntity: TemplateSourceEntity;
  readonly VersionDescription: string;
  readonly Name: string;
}
export interface UpdateTemplateAlias {
  readonly AwsAccountId: string;
  readonly TemplateId: string;
  readonly AliasName: string;
  readonly TemplateVersionNumber: number;
}
export interface UpdateTemplatePermissions {
  readonly AwsAccountId: string;
  readonly TemplateId: string;
  readonly GrantPermissions: [];
  readonly RevokePermissions: [];
}
export interface UpdateTheme {
  readonly AwsAccountId: string;
  readonly ThemeId: string;
  readonly Name: string;
  readonly BaseThemeId: string;
  readonly VersionDescription: string;
  readonly Configuration: ThemeConfiguration;
}
export interface UpdateThemeAlias {
  readonly AwsAccountId: string;
  readonly ThemeId: string;
  readonly AliasName: string;
  readonly ThemeVersionNumber: number;
}
export interface UpdateThemePermissions {
  readonly AwsAccountId: string;
  readonly ThemeId: string;
  readonly GrantPermissions: [];
  readonly RevokePermissions: [];
}
export interface UpdateUser {
  readonly UserName: string;
  readonly AwsAccountId: string;
  readonly Namespace: string;
  readonly Email: string;
  readonly Role: string;
  readonly CustomPermissionsName: string;
  readonly UnapplyCustomPermissions: boolean;
  readonly ExternalLoginFederationProviderType: string;
  readonly CustomFederationProviderUrl: string;
  readonly ExternalLoginId: string;
}



interface AccessDeniedException {
  readonly Message: string;
  readonly RequestId: string;
}

interface AccountCustomization {
  readonly DefaultTheme: string;
  readonly DefaultEmailCustomizationTemplate: string;
}

interface AccountSettings {
  readonly AccountName: string;
  readonly Edition: string;
  readonly DefaultNamespace: string;
  readonly NotificationEmail: string;
}

interface ActiveIAMPolicyAssignment {
  readonly AssignmentName: string;
  readonly PolicyArn: string;
}

interface AdHocFilteringOption {
  readonly AvailabilityStatus: string;
}

interface AmazonElasticsearchParameters {
  readonly Domain: string;
}

interface AmazonOpenSearchParameters {
  readonly Domain: string;
}

interface Analysis {
  readonly AnalysisId: string;
  readonly Arn: string;
  readonly Name: string;
  readonly Status: string;
  readonly Errors: [];
  readonly DataSetArns: [];
  readonly ThemeArn: string;
  readonly CreatedTime: Date;
  readonly LastUpdatedTime: Date;
  readonly Sheets: [];
}

interface AnalysisError {
  readonly Type: string;
  readonly Message: string;
}

interface AnalysisSearchFilter {
  readonly Operator: string;
  readonly Name: string;
  readonly Value: string;
}

interface AnalysisSourceEntity {
  readonly SourceTemplate: AnalysisSourceTemplate;
}

interface AnalysisSourceTemplate {
  readonly DataSetReferences: [];
  readonly Arn: string;
}

interface AnalysisSummary {
  readonly Arn: string;
  readonly AnalysisId: string;
  readonly Name: string;
  readonly Status: string;
  readonly CreatedTime: Date;
  readonly LastUpdatedTime: Date;
}

interface AnonymousUserDashboardEmbeddingConfiguration {
  readonly InitialDashboardId: string;
}

interface AnonymousUserEmbeddingExperienceConfiguration {
  readonly Dashboard: AnonymousUserDashboardEmbeddingConfiguration;
}

interface AthenaParameters {
  readonly WorkGroup: string;
}

interface AuroraParameters {
  readonly Host: string;
  readonly Port: number;
  readonly Database: string;
}

interface AuroraPostgreSqlParameters {
  readonly Host: string;
  readonly Port: number;
  readonly Database: string;
}

interface AwsIotAnalyticsParameters {
  readonly DataSetName: string;
}

interface BorderStyle {
  readonly Show: boolean;
}

interface CalculatedColumn {
  readonly ColumnName: string;
  readonly ColumnId: string;
  readonly Expression: string;
}

interface CancelIngestionRequest {
  readonly AwsAccountId: string;
  readonly DataSetId: string;
  readonly IngestionId: string;
}

interface CancelIngestionResponse {
  readonly Arn: string;
  readonly IngestionId: string;
  readonly RequestId: string;
  readonly Status: number;
}

interface CastColumnTypeOperation {
  readonly ColumnName: string;
  readonly NewColumnType: string;
  readonly Format: string;
}

interface ColumnDescription {
  readonly Text: string;
}

interface ColumnGroup {
  readonly GeoSpatialColumnGroup: GeoSpatialColumnGroup;
}

interface ColumnGroupColumnSchema {
  readonly Name: string;
}

interface ColumnGroupSchema {
  readonly Name: string;
  readonly ColumnGroupColumnSchemaList: [];
}

interface ColumnLevelPermissionRule {
  readonly Principals: [];
  readonly ColumnNames: [];
}

interface ColumnSchema {
  readonly Name: string;
  readonly DataType: string;
  readonly GeographicRole: string;
}

interface ColumnTag {
  readonly ColumnGeographicRole: string;
  readonly ColumnDescription: ColumnDescription;
}

interface ConcurrentUpdatingException {
  readonly Message: string;
  readonly RequestId: string;
}

interface ConflictException {
  readonly Message: string;
  readonly RequestId: string;
}

interface CreateAccountCustomizationRequest {
  readonly AwsAccountId: string;
  readonly Namespace: string;
  readonly AccountCustomization: AccountCustomization;
  readonly Tags: [];
}

interface CreateAccountCustomizationResponse {
  readonly Arn: string;
  readonly AwsAccountId: string;
  readonly Namespace: string;
  readonly AccountCustomization: AccountCustomization;
  readonly RequestId: string;
  readonly Status: number;
}

interface CreateAnalysisRequest {
  readonly AwsAccountId: string;
  readonly AnalysisId: string;
  readonly Name: string;
  readonly Parameters: Parameters;
  readonly Permissions: [];
  readonly SourceEntity: AnalysisSourceEntity;
  readonly ThemeArn: string;
  readonly Tags: [];
}

interface CreateAnalysisResponse {
  readonly Arn: string;
  readonly AnalysisId: string;
  readonly CreationStatus: string;
  readonly Status: number;
  readonly RequestId: string;
}

interface CreateColumnsOperation {
  readonly Columns: [];
}

interface CreateDashboardRequest {
  readonly AwsAccountId: string;
  readonly DashboardId: string;
  readonly Name: string;
  readonly Parameters: Parameters;
  readonly Permissions: [];
  readonly SourceEntity: DashboardSourceEntity;
  readonly Tags: [];
  readonly VersionDescription: string;
  readonly DashboardPublishOptions: DashboardPublishOptions;
  readonly ThemeArn: string;
}

interface CreateDashboardResponse {
  readonly Arn: string;
  readonly VersionArn: string;
  readonly DashboardId: string;
  readonly CreationStatus: string;
  readonly Status: number;
  readonly RequestId: string;
}

interface CreateDataSetRequest {
  readonly AwsAccountId: string;
  readonly DataSetId: string;
  readonly Name: string;
  readonly PhysicalTableMap: {[key: string]: any};
  readonly LogicalTableMap: {[key: string]: any};
  readonly ImportMode: string;
  readonly ColumnGroups: [];
  readonly FieldFolders: {[key: string]: any};
  readonly Permissions: [];
  readonly RowLevelPermissionDataSet: RowLevelPermissionDataSet;
  readonly RowLevelPermissionTagConfiguration: RowLevelPermissionTagConfiguration;
  readonly ColumnLevelPermissionRules: [];
  readonly Tags: [];
  readonly DataSetUsageConfiguration: DataSetUsageConfiguration;
}

interface CreateDataSetResponse {
  readonly Arn: string;
  readonly DataSetId: string;
  readonly IngestionArn: string;
  readonly IngestionId: string;
  readonly RequestId: string;
  readonly Status: number;
}

interface CreateDataSourceRequest {
  readonly AwsAccountId: string;
  readonly DataSourceId: string;
  readonly Name: string;
  readonly Type: string;
  readonly DataSourceParameters: DataSourceParameters;
  readonly Credentials: DataSourceCredentials;
  readonly Permissions: [];
  readonly VpcConnectionProperties: VpcConnectionProperties;
  readonly SslProperties: SslProperties;
  readonly Tags: [];
}

interface CreateDataSourceResponse {
  readonly Arn: string;
  readonly DataSourceId: string;
  readonly CreationStatus: string;
  readonly RequestId: string;
  readonly Status: number;
}

interface CreateFolderMembershipRequest {
  readonly AwsAccountId: string;
  readonly FolderId: string;
  readonly MemberId: string;
  readonly MemberType: string;
}

interface CreateFolderMembershipResponse {
  readonly Status: number;
  readonly FolderMember: FolderMember;
  readonly RequestId: string;
}

interface CreateFolderRequest {
  readonly AwsAccountId: string;
  readonly FolderId: string;
  readonly Name: string;
  readonly FolderType: string;
  readonly ParentFolderArn: string;
  readonly Permissions: [];
  readonly Tags: [];
}

interface CreateFolderResponse {
  readonly Status: number;
  readonly Arn: string;
  readonly FolderId: string;
  readonly RequestId: string;
}

interface CreateGroupMembershipRequest {
  readonly MemberName: string;
  readonly GroupName: string;
  readonly AwsAccountId: string;
  readonly Namespace: string;
}

interface CreateGroupMembershipResponse {
  readonly GroupMember: GroupMember;
  readonly RequestId: string;
  readonly Status: number;
}

interface CreateGroupRequest {
  readonly GroupName: string;
  readonly Description: string;
  readonly AwsAccountId: string;
  readonly Namespace: string;
}

interface CreateGroupResponse {
  readonly Group: Group;
  readonly RequestId: string;
  readonly Status: number;
}

interface CreateIAMPolicyAssignmentRequest {
  readonly AwsAccountId: string;
  readonly AssignmentName: string;
  readonly AssignmentStatus: string;
  readonly PolicyArn: string;
  readonly Identities: {[key: string]: any};
  readonly Namespace: string;
}

interface CreateIAMPolicyAssignmentResponse {
  readonly AssignmentName: string;
  readonly AssignmentId: string;
  readonly AssignmentStatus: string;
  readonly PolicyArn: string;
  readonly Identities: {[key: string]: any};
  readonly RequestId: string;
  readonly Status: number;
}

interface CreateIngestionRequest {
  readonly DataSetId: string;
  readonly IngestionId: string;
  readonly AwsAccountId: string;
  readonly IngestionType: string;
}

interface CreateIngestionResponse {
  readonly Arn: string;
  readonly IngestionId: string;
  readonly IngestionStatus: string;
  readonly RequestId: string;
  readonly Status: number;
}

interface CreateNamespaceRequest {
  readonly AwsAccountId: string;
  readonly Namespace: string;
  readonly IdentityStore: string;
  readonly Tags: [];
}

interface CreateNamespaceResponse {
  readonly Arn: string;
  readonly Name: string;
  readonly CapacityRegion: string;
  readonly CreationStatus: string;
  readonly IdentityStore: string;
  readonly RequestId: string;
  readonly Status: number;
}

interface CreateTemplateAliasRequest {
  readonly AwsAccountId: string;
  readonly TemplateId: string;
  readonly AliasName: string;
  readonly TemplateVersionNumber: number;
}

interface CreateTemplateAliasResponse {
  readonly TemplateAlias: TemplateAlias;
  readonly Status: number;
  readonly RequestId: string;
}

interface CreateTemplateRequest {
  readonly AwsAccountId: string;
  readonly TemplateId: string;
  readonly Name: string;
  readonly Permissions: [];
  readonly SourceEntity: TemplateSourceEntity;
  readonly Tags: [];
  readonly VersionDescription: string;
}

interface CreateTemplateResponse {
  readonly Arn: string;
  readonly VersionArn: string;
  readonly TemplateId: string;
  readonly CreationStatus: string;
  readonly Status: number;
  readonly RequestId: string;
}

interface CreateThemeAliasRequest {
  readonly AwsAccountId: string;
  readonly ThemeId: string;
  readonly AliasName: string;
  readonly ThemeVersionNumber: number;
}

interface CreateThemeAliasResponse {
  readonly ThemeAlias: ThemeAlias;
  readonly Status: number;
  readonly RequestId: string;
}

interface CreateThemeRequest {
  readonly AwsAccountId: string;
  readonly ThemeId: string;
  readonly Name: string;
  readonly BaseThemeId: string;
  readonly VersionDescription: string;
  readonly Configuration: ThemeConfiguration;
  readonly Permissions: [];
  readonly Tags: [];
}

interface CreateThemeResponse {
  readonly Arn: string;
  readonly VersionArn: string;
  readonly ThemeId: string;
  readonly CreationStatus: string;
  readonly Status: number;
  readonly RequestId: string;
}

interface CredentialPair {
  readonly Username: string;
  readonly Password: string;
  readonly AlternateDataSourceParameters: [];
}

interface CustomSql {
  readonly DataSourceArn: string;
  readonly Name: string;
  readonly SqlQuery: string;
  readonly Columns: [];
}

interface Dashboard {
  readonly DashboardId: string;
  readonly Arn: string;
  readonly Name: string;
  readonly Version: DashboardVersion;
  readonly CreatedTime: Date;
  readonly LastPublishedTime: Date;
  readonly LastUpdatedTime: Date;
}

interface DashboardError {
  readonly Type: string;
  readonly Message: string;
}

interface DashboardPublishOptions {
  readonly AdHocFilteringOption: AdHocFilteringOption;
  readonly ExportToCSVOption: ExportToCSVOption;
  readonly SheetControlsOption: SheetControlsOption;
}

interface DashboardSearchFilter {
  readonly Operator: string;
  readonly Name: string;
  readonly Value: string;
}

interface DashboardSourceEntity {
  readonly SourceTemplate: DashboardSourceTemplate;
}

interface DashboardSourceTemplate {
  readonly DataSetReferences: [];
  readonly Arn: string;
}

interface DashboardSummary {
  readonly Arn: string;
  readonly DashboardId: string;
  readonly Name: string;
  readonly CreatedTime: Date;
  readonly LastUpdatedTime: Date;
  readonly PublishedVersionNumber: number;
  readonly LastPublishedTime: Date;
}

interface DashboardVersion {
  readonly CreatedTime: Date;
  readonly Errors: [];
  readonly VersionNumber: number;
  readonly Status: string;
  readonly Arn: string;
  readonly SourceEntityArn: string;
  readonly DataSetArns: [];
  readonly Description: string;
  readonly ThemeArn: string;
  readonly Sheets: [];
}

interface DashboardVersionSummary {
  readonly Arn: string;
  readonly CreatedTime: Date;
  readonly VersionNumber: number;
  readonly Status: string;
  readonly SourceEntityArn: string;
  readonly Description: string;
}

interface DataColorPalette {
  readonly Colors: [];
  readonly MinMaxGradient: [];
  readonly EmptyFillColor: string;
}

interface DataSet {
  readonly Arn: string;
  readonly DataSetId: string;
  readonly Name: string;
  readonly CreatedTime: Date;
  readonly LastUpdatedTime: Date;
  readonly PhysicalTableMap: {[key: string]: any};
  readonly LogicalTableMap: {[key: string]: any};
  readonly OutputColumns: [];
  readonly ImportMode: string;
  readonly ConsumedSpiceCapacityInBytes: number;
  readonly ColumnGroups: [];
  readonly FieldFolders: {[key: string]: any};
  readonly RowLevelPermissionDataSet: RowLevelPermissionDataSet;
  readonly RowLevelPermissionTagConfiguration: RowLevelPermissionTagConfiguration;
  readonly ColumnLevelPermissionRules: [];
  readonly DataSetUsageConfiguration: DataSetUsageConfiguration;
}

interface DataSetConfiguration {
  readonly Placeholder: string;
  readonly DataSetSchema: DataSetSchema;
  readonly ColumnGroupSchemaList: [];
}

interface DataSetReference {
  readonly DataSetPlaceholder: string;
  readonly DataSetArn: string;
}

interface DataSetSchema {
  readonly ColumnSchemaList: [];
}

interface DataSetSummary {
  readonly Arn: string;
  readonly DataSetId: string;
  readonly Name: string;
  readonly CreatedTime: Date;
  readonly LastUpdatedTime: Date;
  readonly ImportMode: string;
  readonly RowLevelPermissionDataSet: RowLevelPermissionDataSet;
  readonly RowLevelPermissionTagConfigurationApplied: boolean;
  readonly ColumnLevelPermissionRulesApplied: boolean;
}

interface DataSetUsageConfiguration {
  readonly DisableUseAsDirectQuerySource: boolean;
  readonly DisableUseAsImportedSource: boolean;
}

interface DataSource {
  readonly Arn: string;
  readonly DataSourceId: string;
  readonly Name: string;
  readonly Type: string;
  readonly Status: string;
  readonly CreatedTime: Date;
  readonly LastUpdatedTime: Date;
  readonly DataSourceParameters: DataSourceParameters;
  readonly AlternateDataSourceParameters: [];
  readonly VpcConnectionProperties: VpcConnectionProperties;
  readonly SslProperties: SslProperties;
  readonly ErrorInfo: DataSourceErrorInfo;
}

interface DataSourceCredentials {
  readonly CredentialPair: CredentialPair;
  readonly CopySourceArn: string;
}

interface DataSourceErrorInfo {
  readonly Type: string;
  readonly Message: string;
}

interface DataSourceParameters {
  readonly AmazonElasticsearchParameters: AmazonElasticsearchParameters;
  readonly AthenaParameters: AthenaParameters;
  readonly AuroraParameters: AuroraParameters;
  readonly AuroraPostgreSqlParameters: AuroraPostgreSqlParameters;
  readonly AwsIotAnalyticsParameters: AwsIotAnalyticsParameters;
  readonly JiraParameters: JiraParameters;
  readonly MariaDbParameters: MariaDbParameters;
  readonly MySqlParameters: MySqlParameters;
  readonly OracleParameters: OracleParameters;
  readonly PostgreSqlParameters: PostgreSqlParameters;
  readonly PrestoParameters: PrestoParameters;
  readonly RdsParameters: RdsParameters;
  readonly RedshiftParameters: RedshiftParameters;
  readonly S3Parameters: S3Parameters;
  readonly ServiceNowParameters: ServiceNowParameters;
  readonly SnowflakeParameters: SnowflakeParameters;
  readonly SparkParameters: SparkParameters;
  readonly SqlServerParameters: SqlServerParameters;
  readonly TeradataParameters: TeradataParameters;
  readonly TwitterParameters: TwitterParameters;
  readonly AmazonOpenSearchParameters: AmazonOpenSearchParameters;
  readonly ExasolParameters: ExasolParameters;
}

interface DateTimeParameter {
  readonly Name: string;
  readonly Values: [];
}

interface DecimalParameter {
  readonly Name: string;
  readonly Values: [];
}

interface DeleteAccountCustomizationRequest {
  readonly AwsAccountId: string;
  readonly Namespace: string;
}

interface DeleteAccountCustomizationResponse {
  readonly RequestId: string;
  readonly Status: number;
}

interface DeleteAnalysisRequest {
  readonly AwsAccountId: string;
  readonly AnalysisId: string;
  readonly RecoveryWindowInDays: number;
  readonly ForceDeleteWithoutRecovery: boolean;
}

interface DeleteAnalysisResponse {
  readonly Status: number;
  readonly Arn: string;
  readonly AnalysisId: string;
  readonly DeletionTime: Date;
  readonly RequestId: string;
}

interface DeleteDashboardRequest {
  readonly AwsAccountId: string;
  readonly DashboardId: string;
  readonly VersionNumber: number;
}

interface DeleteDashboardResponse {
  readonly Status: number;
  readonly Arn: string;
  readonly DashboardId: string;
  readonly RequestId: string;
}

interface DeleteDataSetRequest {
  readonly AwsAccountId: string;
  readonly DataSetId: string;
}

interface DeleteDataSetResponse {
  readonly Arn: string;
  readonly DataSetId: string;
  readonly RequestId: string;
  readonly Status: number;
}

interface DeleteDataSourceRequest {
  readonly AwsAccountId: string;
  readonly DataSourceId: string;
}

interface DeleteDataSourceResponse {
  readonly Arn: string;
  readonly DataSourceId: string;
  readonly RequestId: string;
  readonly Status: number;
}

interface DeleteFolderMembershipRequest {
  readonly AwsAccountId: string;
  readonly FolderId: string;
  readonly MemberId: string;
  readonly MemberType: string;
}

interface DeleteFolderMembershipResponse {
  readonly Status: number;
  readonly RequestId: string;
}

interface DeleteFolderRequest {
  readonly AwsAccountId: string;
  readonly FolderId: string;
}

interface DeleteFolderResponse {
  readonly Status: number;
  readonly Arn: string;
  readonly FolderId: string;
  readonly RequestId: string;
}

interface DeleteGroupMembershipRequest {
  readonly MemberName: string;
  readonly GroupName: string;
  readonly AwsAccountId: string;
  readonly Namespace: string;
}

interface DeleteGroupMembershipResponse {
  readonly RequestId: string;
  readonly Status: number;
}

interface DeleteGroupRequest {
  readonly GroupName: string;
  readonly AwsAccountId: string;
  readonly Namespace: string;
}

interface DeleteGroupResponse {
  readonly RequestId: string;
  readonly Status: number;
}

interface DeleteIAMPolicyAssignmentRequest {
  readonly AwsAccountId: string;
  readonly AssignmentName: string;
  readonly Namespace: string;
}

interface DeleteIAMPolicyAssignmentResponse {
  readonly AssignmentName: string;
  readonly RequestId: string;
  readonly Status: number;
}

interface DeleteNamespaceRequest {
  readonly AwsAccountId: string;
  readonly Namespace: string;
}

interface DeleteNamespaceResponse {
  readonly RequestId: string;
  readonly Status: number;
}

interface DeleteTemplateAliasRequest {
  readonly AwsAccountId: string;
  readonly TemplateId: string;
  readonly AliasName: string;
}

interface DeleteTemplateAliasResponse {
  readonly Status: number;
  readonly TemplateId: string;
  readonly AliasName: string;
  readonly Arn: string;
  readonly RequestId: string;
}

interface DeleteTemplateRequest {
  readonly AwsAccountId: string;
  readonly TemplateId: string;
  readonly VersionNumber: number;
}

interface DeleteTemplateResponse {
  readonly RequestId: string;
  readonly Arn: string;
  readonly TemplateId: string;
  readonly Status: number;
}

interface DeleteThemeAliasRequest {
  readonly AwsAccountId: string;
  readonly ThemeId: string;
  readonly AliasName: string;
}

interface DeleteThemeAliasResponse {
  readonly AliasName: string;
  readonly Arn: string;
  readonly RequestId: string;
  readonly Status: number;
  readonly ThemeId: string;
}

interface DeleteThemeRequest {
  readonly AwsAccountId: string;
  readonly ThemeId: string;
  readonly VersionNumber: number;
}

interface DeleteThemeResponse {
  readonly Arn: string;
  readonly RequestId: string;
  readonly Status: number;
  readonly ThemeId: string;
}

interface DeleteUserByPrincipalIdRequest {
  readonly PrincipalId: string;
  readonly AwsAccountId: string;
  readonly Namespace: string;
}

interface DeleteUserByPrincipalIdResponse {
  readonly RequestId: string;
  readonly Status: number;
}

interface DeleteUserRequest {
  readonly UserName: string;
  readonly AwsAccountId: string;
  readonly Namespace: string;
}

interface DeleteUserResponse {
  readonly RequestId: string;
  readonly Status: number;
}

interface DescribeAccountCustomizationRequest {
  readonly AwsAccountId: string;
  readonly Namespace: string;
  readonly Resolved: boolean;
}

interface DescribeAccountCustomizationResponse {
  readonly Arn: string;
  readonly AwsAccountId: string;
  readonly Namespace: string;
  readonly AccountCustomization: AccountCustomization;
  readonly RequestId: string;
  readonly Status: number;
}

interface DescribeAccountSettingsRequest {
  readonly AwsAccountId: string;
}

interface DescribeAccountSettingsResponse {
  readonly AccountSettings: AccountSettings;
  readonly RequestId: string;
  readonly Status: number;
}

interface DescribeAnalysisPermissionsRequest {
  readonly AwsAccountId: string;
  readonly AnalysisId: string;
}

interface DescribeAnalysisPermissionsResponse {
  readonly AnalysisId: string;
  readonly AnalysisArn: string;
  readonly Permissions: [];
  readonly Status: number;
  readonly RequestId: string;
}

interface DescribeAnalysisRequest {
  readonly AwsAccountId: string;
  readonly AnalysisId: string;
}

interface DescribeAnalysisResponse {
  readonly Analysis: Analysis;
  readonly Status: number;
  readonly RequestId: string;
}

interface DescribeDashboardPermissionsRequest {
  readonly AwsAccountId: string;
  readonly DashboardId: string;
}

interface DescribeDashboardPermissionsResponse {
  readonly DashboardId: string;
  readonly DashboardArn: string;
  readonly Permissions: [];
  readonly Status: number;
  readonly RequestId: string;
  readonly LinkSharingConfiguration: LinkSharingConfiguration;
}

interface DescribeDashboardRequest {
  readonly AwsAccountId: string;
  readonly DashboardId: string;
  readonly VersionNumber: number;
  readonly AliasName: string;
}

interface DescribeDashboardResponse {
  readonly Dashboard: Dashboard;
  readonly Status: number;
  readonly RequestId: string;
}

interface DescribeDataSetPermissionsRequest {
  readonly AwsAccountId: string;
  readonly DataSetId: string;
}

interface DescribeDataSetPermissionsResponse {
  readonly DataSetArn: string;
  readonly DataSetId: string;
  readonly Permissions: [];
  readonly RequestId: string;
  readonly Status: number;
}

interface DescribeDataSetRequest {
  readonly AwsAccountId: string;
  readonly DataSetId: string;
}

interface DescribeDataSetResponse {
  readonly DataSet: DataSet;
  readonly RequestId: string;
  readonly Status: number;
}

interface DescribeDataSourcePermissionsRequest {
  readonly AwsAccountId: string;
  readonly DataSourceId: string;
}

interface DescribeDataSourcePermissionsResponse {
  readonly DataSourceArn: string;
  readonly DataSourceId: string;
  readonly Permissions: [];
  readonly RequestId: string;
  readonly Status: number;
}

interface DescribeDataSourceRequest {
  readonly AwsAccountId: string;
  readonly DataSourceId: string;
}

interface DescribeDataSourceResponse {
  readonly DataSource: DataSource;
  readonly RequestId: string;
  readonly Status: number;
}

interface DescribeFolderPermissionsRequest {
  readonly AwsAccountId: string;
  readonly FolderId: string;
}

interface DescribeFolderPermissionsResponse {
  readonly Status: number;
  readonly FolderId: string;
  readonly Arn: string;
  readonly Permissions: [];
  readonly RequestId: string;
}

interface DescribeFolderRequest {
  readonly AwsAccountId: string;
  readonly FolderId: string;
}

interface DescribeFolderResolvedPermissionsRequest {
  readonly AwsAccountId: string;
  readonly FolderId: string;
}

interface DescribeFolderResolvedPermissionsResponse {
  readonly Status: number;
  readonly FolderId: string;
  readonly Arn: string;
  readonly Permissions: [];
  readonly RequestId: string;
}

interface DescribeFolderResponse {
  readonly Status: number;
  readonly Folder: Folder;
  readonly RequestId: string;
}

interface DescribeGroupRequest {
  readonly GroupName: string;
  readonly AwsAccountId: string;
  readonly Namespace: string;
}

interface DescribeGroupResponse {
  readonly Group: Group;
  readonly RequestId: string;
  readonly Status: number;
}

interface DescribeIAMPolicyAssignmentRequest {
  readonly AwsAccountId: string;
  readonly AssignmentName: string;
  readonly Namespace: string;
}

interface DescribeIAMPolicyAssignmentResponse {
  readonly IAMPolicyAssignment: IAMPolicyAssignment;
  readonly RequestId: string;
  readonly Status: number;
}

interface DescribeIngestionRequest {
  readonly AwsAccountId: string;
  readonly DataSetId: string;
  readonly IngestionId: string;
}

interface DescribeIngestionResponse {
  readonly Ingestion: Ingestion;
  readonly RequestId: string;
  readonly Status: number;
}

interface DescribeIpRestrictionRequest {
  readonly AwsAccountId: string;
}

interface DescribeIpRestrictionResponse {
  readonly AwsAccountId: string;
  readonly IpRestrictionRuleMap: {[key: string]: any};
  readonly Enabled: boolean;
  readonly RequestId: string;
  readonly Status: number;
}

interface DescribeNamespaceRequest {
  readonly AwsAccountId: string;
  readonly Namespace: string;
}

interface DescribeNamespaceResponse {
  readonly Namespace: NamespaceInfoV2;
  readonly RequestId: string;
  readonly Status: number;
}

interface DescribeTemplateAliasRequest {
  readonly AwsAccountId: string;
  readonly TemplateId: string;
  readonly AliasName: string;
}

interface DescribeTemplateAliasResponse {
  readonly TemplateAlias: TemplateAlias;
  readonly Status: number;
  readonly RequestId: string;
}

interface DescribeTemplatePermissionsRequest {
  readonly AwsAccountId: string;
  readonly TemplateId: string;
}

interface DescribeTemplatePermissionsResponse {
  readonly TemplateId: string;
  readonly TemplateArn: string;
  readonly Permissions: [];
  readonly RequestId: string;
  readonly Status: number;
}

interface DescribeTemplateRequest {
  readonly AwsAccountId: string;
  readonly TemplateId: string;
  readonly VersionNumber: number;
  readonly AliasName: string;
}

interface DescribeTemplateResponse {
  readonly Template: Template;
  readonly Status: number;
  readonly RequestId: string;
}

interface DescribeThemeAliasRequest {
  readonly AwsAccountId: string;
  readonly ThemeId: string;
  readonly AliasName: string;
}

interface DescribeThemeAliasResponse {
  readonly ThemeAlias: ThemeAlias;
  readonly Status: number;
  readonly RequestId: string;
}

interface DescribeThemePermissionsRequest {
  readonly AwsAccountId: string;
  readonly ThemeId: string;
}

interface DescribeThemePermissionsResponse {
  readonly ThemeId: string;
  readonly ThemeArn: string;
  readonly Permissions: [];
  readonly RequestId: string;
  readonly Status: number;
}

interface DescribeThemeRequest {
  readonly AwsAccountId: string;
  readonly ThemeId: string;
  readonly VersionNumber: number;
  readonly AliasName: string;
}

interface DescribeThemeResponse {
  readonly Theme: Theme;
  readonly Status: number;
  readonly RequestId: string;
}

interface DescribeUserRequest {
  readonly UserName: string;
  readonly AwsAccountId: string;
  readonly Namespace: string;
}

interface DescribeUserResponse {
  readonly User: User;
  readonly RequestId: string;
  readonly Status: number;
}

interface DomainNotWhitelistedException {
  readonly Message: string;
  readonly RequestId: string;
}

interface ErrorInfo {
  readonly Type: string;
  readonly Message: string;
}

interface ExasolParameters {
  readonly Host: string;
  readonly Port: number;
}

interface ExportToCSVOption {
  readonly AvailabilityStatus: string;
}

interface FieldFolder {
  readonly description: string;
  readonly columns: [];
}

interface FilterOperation {
  readonly ConditionExpression: string;
}

interface Folder {
  readonly FolderId: string;
  readonly Arn: string;
  readonly Name: string;
  readonly FolderType: string;
  readonly FolderPath: [];
  readonly CreatedTime: Date;
  readonly LastUpdatedTime: Date;
}

interface FolderMember {
  readonly MemberId: string;
  readonly MemberType: string;
}

interface FolderSearchFilter {
  readonly Operator: string;
  readonly Name: string;
  readonly Value: string;
}

interface FolderSummary {
  readonly Arn: string;
  readonly FolderId: string;
  readonly Name: string;
  readonly FolderType: string;
  readonly CreatedTime: Date;
  readonly LastUpdatedTime: Date;
}

interface GenerateEmbedUrlForAnonymousUserRequest {
  readonly AwsAccountId: string;
  readonly SessionLifetimeInMinutes: number;
  readonly Namespace: string;
  readonly SessionTags: [];
  readonly AuthorizedResourceArns: [];
  readonly ExperienceConfiguration: AnonymousUserEmbeddingExperienceConfiguration;
}

interface GenerateEmbedUrlForAnonymousUserResponse {
  readonly EmbedUrl: string;
  readonly Status: number;
  readonly RequestId: string;
}

interface GenerateEmbedUrlForRegisteredUserRequest {
  readonly AwsAccountId: string;
  readonly SessionLifetimeInMinutes: number;
  readonly UserArn: string;
  readonly ExperienceConfiguration: RegisteredUserEmbeddingExperienceConfiguration;
}

interface GenerateEmbedUrlForRegisteredUserResponse {
  readonly EmbedUrl: string;
  readonly Status: number;
  readonly RequestId: string;
}

interface GeoSpatialColumnGroup {
  readonly Name: string;
  readonly CountryCode: string;
  readonly Columns: [];
}

interface GetDashboardEmbedUrlRequest {
  readonly AwsAccountId: string;
  readonly DashboardId: string;
  readonly IdentityType: string;
  readonly SessionLifetimeInMinutes: number;
  readonly UndoRedoDisabled: boolean;
  readonly ResetDisabled: boolean;
  readonly StatePersistenceEnabled: boolean;
  readonly UserArn: string;
  readonly Namespace: string;
  readonly AdditionalDashboardIds: [];
}

interface GetDashboardEmbedUrlResponse {
  readonly EmbedUrl: string;
  readonly Status: number;
  readonly RequestId: string;
}

interface GetSessionEmbedUrlRequest {
  readonly AwsAccountId: string;
  readonly EntryPoint: string;
  readonly SessionLifetimeInMinutes: number;
  readonly UserArn: string;
}

interface GetSessionEmbedUrlResponse {
  readonly EmbedUrl: string;
  readonly Status: number;
  readonly RequestId: string;
}

interface Group {
  readonly Arn: string;
  readonly GroupName: string;
  readonly Description: string;
  readonly PrincipalId: string;
}

interface GroupMember {
  readonly Arn: string;
  readonly MemberName: string;
}

interface GutterStyle {
  readonly Show: boolean;
}

interface IAMPolicyAssignment {
  readonly AwsAccountId: string;
  readonly AssignmentId: string;
  readonly AssignmentName: string;
  readonly PolicyArn: string;
  readonly Identities: {[key: string]: any};
  readonly AssignmentStatus: string;
}

interface IAMPolicyAssignmentSummary {
  readonly AssignmentName: string;
  readonly AssignmentStatus: string;
}

interface IdentityTypeNotSupportedException {
  readonly Message: string;
  readonly RequestId: string;
}

interface Ingestion {
  readonly Arn: string;
  readonly IngestionId: string;
  readonly IngestionStatus: string;
  readonly ErrorInfo: ErrorInfo;
  readonly RowInfo: RowInfo;
  readonly QueueInfo: QueueInfo;
  readonly CreatedTime: Date;
  readonly IngestionTimeInSeconds: number;
  readonly IngestionSizeInBytes: number;
  readonly RequestSource: string;
  readonly RequestType: string;
}

interface InputColumn {
  readonly Name: string;
  readonly Type: string;
}

interface IntegerParameter {
  readonly Name: string;
  readonly Values: [];
}

interface InternalFailureException {
  readonly Message: string;
  readonly RequestId: string;
}

interface InvalidNextTokenException {
  readonly Message: string;
  readonly RequestId: string;
}

interface InvalidParameterValueException {
  readonly Message: string;
  readonly RequestId: string;
}

interface JiraParameters {
  readonly SiteBaseUrl: string;
}

interface JoinInstruction {
  readonly LeftOperand: string;
  readonly RightOperand: string;
  readonly LeftJoinKeyProperties: JoinKeyProperties;
  readonly RightJoinKeyProperties: JoinKeyProperties;
  readonly Type: string;
  readonly OnClause: string;
}

interface JoinKeyProperties {
  readonly UniqueKey: boolean;
}

interface LimitExceededException {
  readonly Message: string;
  readonly ResourceType: string;
  readonly RequestId: string;
}

interface LinkSharingConfiguration {
  readonly Permissions: [];
}

interface ListAnalysesRequest {
  readonly AwsAccountId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListAnalysesResponse {
  readonly AnalysisSummaryList: [];
  readonly NextToken: string;
  readonly Status: number;
  readonly RequestId: string;
}

interface ListDashboardVersionsRequest {
  readonly AwsAccountId: string;
  readonly DashboardId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListDashboardVersionsResponse {
  readonly DashboardVersionSummaryList: [];
  readonly NextToken: string;
  readonly Status: number;
  readonly RequestId: string;
}

interface ListDashboardsRequest {
  readonly AwsAccountId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListDashboardsResponse {
  readonly DashboardSummaryList: [];
  readonly NextToken: string;
  readonly Status: number;
  readonly RequestId: string;
}

interface ListDataSetsRequest {
  readonly AwsAccountId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListDataSetsResponse {
  readonly DataSetSummaries: [];
  readonly NextToken: string;
  readonly RequestId: string;
  readonly Status: number;
}

interface ListDataSourcesRequest {
  readonly AwsAccountId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListDataSourcesResponse {
  readonly DataSources: [];
  readonly NextToken: string;
  readonly RequestId: string;
  readonly Status: number;
}

interface ListFolderMembersRequest {
  readonly AwsAccountId: string;
  readonly FolderId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListFolderMembersResponse {
  readonly Status: number;
  readonly FolderMemberList: [];
  readonly NextToken: string;
  readonly RequestId: string;
}

interface ListFoldersRequest {
  readonly AwsAccountId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListFoldersResponse {
  readonly Status: number;
  readonly FolderSummaryList: [];
  readonly NextToken: string;
  readonly RequestId: string;
}

interface ListGroupMembershipsRequest {
  readonly GroupName: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly AwsAccountId: string;
  readonly Namespace: string;
}

interface ListGroupMembershipsResponse {
  readonly GroupMemberList: [];
  readonly NextToken: string;
  readonly RequestId: string;
  readonly Status: number;
}

interface ListGroupsRequest {
  readonly AwsAccountId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly Namespace: string;
}

interface ListGroupsResponse {
  readonly GroupList: [];
  readonly NextToken: string;
  readonly RequestId: string;
  readonly Status: number;
}

interface ListIAMPolicyAssignmentsForUserRequest {
  readonly AwsAccountId: string;
  readonly UserName: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly Namespace: string;
}

interface ListIAMPolicyAssignmentsForUserResponse {
  readonly ActiveAssignments: [];
  readonly RequestId: string;
  readonly NextToken: string;
  readonly Status: number;
}

interface ListIAMPolicyAssignmentsRequest {
  readonly AwsAccountId: string;
  readonly AssignmentStatus: string;
  readonly Namespace: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListIAMPolicyAssignmentsResponse {
  readonly IAMPolicyAssignments: [];
  readonly NextToken: string;
  readonly RequestId: string;
  readonly Status: number;
}

interface ListIngestionsRequest {
  readonly DataSetId: string;
  readonly NextToken: string;
  readonly AwsAccountId: string;
  readonly MaxResults: number;
}

interface ListIngestionsResponse {
  readonly Ingestions: [];
  readonly NextToken: string;
  readonly RequestId: string;
  readonly Status: number;
}

interface ListNamespacesRequest {
  readonly AwsAccountId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListNamespacesResponse {
  readonly Namespaces: [];
  readonly NextToken: string;
  readonly RequestId: string;
  readonly Status: number;
}

interface ListTagsForResourceRequest {
  readonly ResourceArn: string;
}

interface ListTagsForResourceResponse {
  readonly Tags: [];
  readonly RequestId: string;
  readonly Status: number;
}

interface ListTemplateAliasesRequest {
  readonly AwsAccountId: string;
  readonly TemplateId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListTemplateAliasesResponse {
  readonly TemplateAliasList: [];
  readonly Status: number;
  readonly RequestId: string;
  readonly NextToken: string;
}

interface ListTemplateVersionsRequest {
  readonly AwsAccountId: string;
  readonly TemplateId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListTemplateVersionsResponse {
  readonly TemplateVersionSummaryList: [];
  readonly NextToken: string;
  readonly Status: number;
  readonly RequestId: string;
}

interface ListTemplatesRequest {
  readonly AwsAccountId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListTemplatesResponse {
  readonly TemplateSummaryList: [];
  readonly NextToken: string;
  readonly Status: number;
  readonly RequestId: string;
}

interface ListThemeAliasesRequest {
  readonly AwsAccountId: string;
  readonly ThemeId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListThemeAliasesResponse {
  readonly ThemeAliasList: [];
  readonly Status: number;
  readonly RequestId: string;
  readonly NextToken: string;
}

interface ListThemeVersionsRequest {
  readonly AwsAccountId: string;
  readonly ThemeId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListThemeVersionsResponse {
  readonly ThemeVersionSummaryList: [];
  readonly NextToken: string;
  readonly Status: number;
  readonly RequestId: string;
}

interface ListThemesRequest {
  readonly AwsAccountId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly Type: string;
}

interface ListThemesResponse {
  readonly ThemeSummaryList: [];
  readonly NextToken: string;
  readonly Status: number;
  readonly RequestId: string;
}

interface ListUserGroupsRequest {
  readonly UserName: string;
  readonly AwsAccountId: string;
  readonly Namespace: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListUserGroupsResponse {
  readonly GroupList: [];
  readonly NextToken: string;
  readonly RequestId: string;
  readonly Status: number;
}

interface ListUsersRequest {
  readonly AwsAccountId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly Namespace: string;
}

interface ListUsersResponse {
  readonly UserList: [];
  readonly NextToken: string;
  readonly RequestId: string;
  readonly Status: number;
}

interface LogicalTable {
  readonly Alias: string;
  readonly DataTransforms: [];
  readonly Source: LogicalTableSource;
}

interface LogicalTableSource {
  readonly JoinInstruction: JoinInstruction;
  readonly PhysicalTableId: string;
  readonly DataSetArn: string;
}

interface ManifestFileLocation {
  readonly Bucket: string;
  readonly Key: string;
}

interface MarginStyle {
  readonly Show: boolean;
}

interface MariaDbParameters {
  readonly Host: string;
  readonly Port: number;
  readonly Database: string;
}

interface MemberIdArnPair {
  readonly MemberId: string;
  readonly MemberArn: string;
}

interface MySqlParameters {
  readonly Host: string;
  readonly Port: number;
  readonly Database: string;
}

interface NamespaceError {
  readonly Type: string;
  readonly Message: string;
}

interface NamespaceInfoV2 {
  readonly Name: string;
  readonly Arn: string;
  readonly CapacityRegion: string;
  readonly CreationStatus: string;
  readonly IdentityStore: string;
  readonly NamespaceError: NamespaceError;
}

interface OracleParameters {
  readonly Host: string;
  readonly Port: number;
  readonly Database: string;
}

interface OutputColumn {
  readonly Name: string;
  readonly Description: string;
  readonly Type: string;
}

interface Parameters {
  readonly StringParameters: [];
  readonly IntegerParameters: [];
  readonly DecimalParameters: [];
  readonly DateTimeParameters: [];
}

interface PhysicalTable {
  readonly RelationalTable: RelationalTable;
  readonly CustomSql: CustomSql;
  readonly S3Source: S3Source;
}

interface PostgreSqlParameters {
  readonly Host: string;
  readonly Port: number;
  readonly Database: string;
}

interface PreconditionNotMetException {
  readonly Message: string;
  readonly RequestId: string;
}

interface PrestoParameters {
  readonly Host: string;
  readonly Port: number;
  readonly Catalog: string;
}

interface ProjectOperation {
  readonly ProjectedColumns: [];
}

interface QueueInfo {
  readonly WaitingOnIngestion: string;
  readonly QueuedIngestion: string;
}

interface QuickSightUserNotFoundException {
  readonly Message: string;
  readonly RequestId: string;
}

interface RdsParameters {
  readonly InstanceId: string;
  readonly Database: string;
}

interface RedshiftParameters {
  readonly Host: string;
  readonly Port: number;
  readonly Database: string;
  readonly ClusterId: string;
}

interface RegisterUserRequest {
  readonly IdentityType: string;
  readonly Email: string;
  readonly UserRole: string;
  readonly IamArn: string;
  readonly SessionName: string;
  readonly AwsAccountId: string;
  readonly Namespace: string;
  readonly UserName: string;
  readonly CustomPermissionsName: string;
  readonly ExternalLoginFederationProviderType: string;
  readonly CustomFederationProviderUrl: string;
  readonly ExternalLoginId: string;
}

interface RegisterUserResponse {
  readonly User: User;
  readonly UserInvitationUrl: string;
  readonly RequestId: string;
  readonly Status: number;
}

interface RegisteredUserDashboardEmbeddingConfiguration {
  readonly InitialDashboardId: string;
}

interface RegisteredUserEmbeddingExperienceConfiguration {
  readonly Dashboard: RegisteredUserDashboardEmbeddingConfiguration;
  readonly QuickSightConsole: RegisteredUserQuickSightConsoleEmbeddingConfiguration;
  readonly QSearchBar: RegisteredUserQSearchBarEmbeddingConfiguration;
}

interface RegisteredUserQSearchBarEmbeddingConfiguration {
  readonly InitialTopicId: string;
}

interface RegisteredUserQuickSightConsoleEmbeddingConfiguration {
  readonly InitialPath: string;
}

interface RelationalTable {
  readonly DataSourceArn: string;
  readonly Catalog: string;
  readonly Schema: string;
  readonly Name: string;
  readonly InputColumns: [];
}

interface RenameColumnOperation {
  readonly ColumnName: string;
  readonly NewColumnName: string;
}

interface ResourceExistsException {
  readonly Message: string;
  readonly ResourceType: string;
  readonly RequestId: string;
}

interface ResourceNotFoundException {
  readonly Message: string;
  readonly ResourceType: string;
  readonly RequestId: string;
}

interface ResourcePermission {
  readonly Principal: string;
  readonly Actions: [];
}

interface ResourceUnavailableException {
  readonly Message: string;
  readonly ResourceType: string;
  readonly RequestId: string;
}

interface RestoreAnalysisRequest {
  readonly AwsAccountId: string;
  readonly AnalysisId: string;
}

interface RestoreAnalysisResponse {
  readonly Status: number;
  readonly Arn: string;
  readonly AnalysisId: string;
  readonly RequestId: string;
}

interface RowInfo {
  readonly RowsIngested: number;
  readonly RowsDropped: number;
  readonly TotalRowsInDataset: number;
}

interface RowLevelPermissionDataSet {
  readonly Namespace: string;
  readonly Arn: string;
  readonly PermissionPolicy: string;
  readonly FormatVersion: string;
  readonly Status: string;
}

interface RowLevelPermissionTagConfiguration {
  readonly Status: string;
  readonly TagRules: [];
}

interface RowLevelPermissionTagRule {
  readonly TagKey: string;
  readonly ColumnName: string;
  readonly TagMultiValueDelimiter: string;
  readonly MatchAllValue: string;
}

interface S3Parameters {
  readonly ManifestFileLocation: ManifestFileLocation;
}

interface S3Source {
  readonly DataSourceArn: string;
  readonly UploadSettings: UploadSettings;
  readonly InputColumns: [];
}

interface SearchAnalysesRequest {
  readonly AwsAccountId: string;
  readonly Filters: [];
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface SearchAnalysesResponse {
  readonly AnalysisSummaryList: [];
  readonly NextToken: string;
  readonly Status: number;
  readonly RequestId: string;
}

interface SearchDashboardsRequest {
  readonly AwsAccountId: string;
  readonly Filters: [];
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface SearchDashboardsResponse {
  readonly DashboardSummaryList: [];
  readonly NextToken: string;
  readonly Status: number;
  readonly RequestId: string;
}

interface SearchFoldersRequest {
  readonly AwsAccountId: string;
  readonly Filters: [];
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface SearchFoldersResponse {
  readonly Status: number;
  readonly FolderSummaryList: [];
  readonly NextToken: string;
  readonly RequestId: string;
}

interface ServiceNowParameters {
  readonly SiteBaseUrl: string;
}

interface SessionLifetimeInMinutesInvalidException {
  readonly Message: string;
  readonly RequestId: string;
}

interface SessionTag {
  readonly Key: string;
  readonly Value: string;
}

interface Sheet {
  readonly SheetId: string;
  readonly Name: string;
}

interface SheetControlsOption {
  readonly VisibilityState: string;
}

interface SheetStyle {
  readonly Tile: TileStyle;
  readonly TileLayout: TileLayoutStyle;
}

interface SnowflakeParameters {
  readonly Host: string;
  readonly Database: string;
  readonly Warehouse: string;
}

interface SparkParameters {
  readonly Host: string;
  readonly Port: number;
}

interface SqlServerParameters {
  readonly Host: string;
  readonly Port: number;
  readonly Database: string;
}

interface SslProperties {
  readonly DisableSsl: boolean;
}

interface StringParameter {
  readonly Name: string;
  readonly Values: [];
}

interface Tag {
  readonly Key: string;
  readonly Value: string;
}

interface TagColumnOperation {
  readonly ColumnName: string;
  readonly Tags: [];
}

interface TagResourceRequest {
  readonly ResourceArn: string;
  readonly Tags: [];
}

interface TagResourceResponse {
  readonly RequestId: string;
  readonly Status: number;
}

interface Template {
  readonly Arn: string;
  readonly Name: string;
  readonly Version: TemplateVersion;
  readonly TemplateId: string;
  readonly LastUpdatedTime: Date;
  readonly CreatedTime: Date;
}

interface TemplateAlias {
  readonly AliasName: string;
  readonly Arn: string;
  readonly TemplateVersionNumber: number;
}

interface TemplateError {
  readonly Type: string;
  readonly Message: string;
}

interface TemplateSourceAnalysis {
  readonly Arn: string;
  readonly DataSetReferences: [];
}

interface TemplateSourceEntity {
  readonly SourceAnalysis: TemplateSourceAnalysis;
  readonly SourceTemplate: TemplateSourceTemplate;
}

interface TemplateSourceTemplate {
  readonly Arn: string;
}

interface TemplateSummary {
  readonly Arn: string;
  readonly TemplateId: string;
  readonly Name: string;
  readonly LatestVersionNumber: number;
  readonly CreatedTime: Date;
  readonly LastUpdatedTime: Date;
}

interface TemplateVersion {
  readonly CreatedTime: Date;
  readonly Errors: [];
  readonly VersionNumber: number;
  readonly Status: string;
  readonly DataSetConfigurations: [];
  readonly Description: string;
  readonly SourceEntityArn: string;
  readonly ThemeArn: string;
  readonly Sheets: [];
}

interface TemplateVersionSummary {
  readonly Arn: string;
  readonly VersionNumber: number;
  readonly CreatedTime: Date;
  readonly Status: string;
  readonly Description: string;
}

interface TeradataParameters {
  readonly Host: string;
  readonly Port: number;
  readonly Database: string;
}

interface Theme {
  readonly Arn: string;
  readonly Name: string;
  readonly ThemeId: string;
  readonly Version: ThemeVersion;
  readonly CreatedTime: Date;
  readonly LastUpdatedTime: Date;
  readonly Type: string;
}

interface ThemeAlias {
  readonly Arn: string;
  readonly AliasName: string;
  readonly ThemeVersionNumber: number;
}

interface ThemeConfiguration {
  readonly DataColorPalette: DataColorPalette;
  readonly UIColorPalette: UIColorPalette;
  readonly Sheet: SheetStyle;
}

interface ThemeError {
  readonly Type: string;
  readonly Message: string;
}

interface ThemeSummary {
  readonly Arn: string;
  readonly Name: string;
  readonly ThemeId: string;
  readonly LatestVersionNumber: number;
  readonly CreatedTime: Date;
  readonly LastUpdatedTime: Date;
}

interface ThemeVersion {
  readonly VersionNumber: number;
  readonly Arn: string;
  readonly Description: string;
  readonly BaseThemeId: string;
  readonly CreatedTime: Date;
  readonly Configuration: ThemeConfiguration;
  readonly Errors: [];
  readonly Status: string;
}

interface ThemeVersionSummary {
  readonly VersionNumber: number;
  readonly Arn: string;
  readonly Description: string;
  readonly CreatedTime: Date;
  readonly Status: string;
}

interface ThrottlingException {
  readonly Message: string;
  readonly RequestId: string;
}

interface TileLayoutStyle {
  readonly Gutter: GutterStyle;
  readonly Margin: MarginStyle;
}

interface TileStyle {
  readonly Border: BorderStyle;
}

interface TransformOperation {
  readonly ProjectOperation: ProjectOperation;
  readonly FilterOperation: FilterOperation;
  readonly CreateColumnsOperation: CreateColumnsOperation;
  readonly RenameColumnOperation: RenameColumnOperation;
  readonly CastColumnTypeOperation: CastColumnTypeOperation;
  readonly TagColumnOperation: TagColumnOperation;
  readonly UntagColumnOperation: UntagColumnOperation;
}

interface TwitterParameters {
  readonly Query: string;
  readonly MaxRows: number;
}

interface UIColorPalette {
  readonly PrimaryForeground: string;
  readonly PrimaryBackground: string;
  readonly SecondaryForeground: string;
  readonly SecondaryBackground: string;
  readonly Accent: string;
  readonly AccentForeground: string;
  readonly Danger: string;
  readonly DangerForeground: string;
  readonly Warning: string;
  readonly WarningForeground: string;
  readonly Success: string;
  readonly SuccessForeground: string;
  readonly Dimension: string;
  readonly DimensionForeground: string;
  readonly Measure: string;
  readonly MeasureForeground: string;
}

interface UnsupportedPricingPlanException {
  readonly Message: string;
  readonly RequestId: string;
}

interface UnsupportedUserEditionException {
  readonly Message: string;
  readonly RequestId: string;
}

interface UntagColumnOperation {
  readonly ColumnName: string;
  readonly TagNames: [];
}

interface UntagResourceRequest {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}

interface UntagResourceResponse {
  readonly RequestId: string;
  readonly Status: number;
}

interface UpdateAccountCustomizationRequest {
  readonly AwsAccountId: string;
  readonly Namespace: string;
  readonly AccountCustomization: AccountCustomization;
}

interface UpdateAccountCustomizationResponse {
  readonly Arn: string;
  readonly AwsAccountId: string;
  readonly Namespace: string;
  readonly AccountCustomization: AccountCustomization;
  readonly RequestId: string;
  readonly Status: number;
}

interface UpdateAccountSettingsRequest {
  readonly AwsAccountId: string;
  readonly DefaultNamespace: string;
  readonly NotificationEmail: string;
}

interface UpdateAccountSettingsResponse {
  readonly RequestId: string;
  readonly Status: number;
}

interface UpdateAnalysisPermissionsRequest {
  readonly AwsAccountId: string;
  readonly AnalysisId: string;
  readonly GrantPermissions: [];
  readonly RevokePermissions: [];
}

interface UpdateAnalysisPermissionsResponse {
  readonly AnalysisArn: string;
  readonly AnalysisId: string;
  readonly Permissions: [];
  readonly RequestId: string;
  readonly Status: number;
}

interface UpdateAnalysisRequest {
  readonly AwsAccountId: string;
  readonly AnalysisId: string;
  readonly Name: string;
  readonly Parameters: Parameters;
  readonly SourceEntity: AnalysisSourceEntity;
  readonly ThemeArn: string;
}

interface UpdateAnalysisResponse {
  readonly Arn: string;
  readonly AnalysisId: string;
  readonly UpdateStatus: string;
  readonly Status: number;
  readonly RequestId: string;
}

interface UpdateDashboardPermissionsRequest {
  readonly AwsAccountId: string;
  readonly DashboardId: string;
  readonly GrantPermissions: [];
  readonly RevokePermissions: [];
  readonly GrantLinkPermissions: [];
  readonly RevokeLinkPermissions: [];
}

interface UpdateDashboardPermissionsResponse {
  readonly DashboardArn: string;
  readonly DashboardId: string;
  readonly Permissions: [];
  readonly RequestId: string;
  readonly Status: number;
  readonly LinkSharingConfiguration: LinkSharingConfiguration;
}

interface UpdateDashboardPublishedVersionRequest {
  readonly AwsAccountId: string;
  readonly DashboardId: string;
  readonly VersionNumber: number;
}

interface UpdateDashboardPublishedVersionResponse {
  readonly DashboardId: string;
  readonly DashboardArn: string;
  readonly Status: number;
  readonly RequestId: string;
}

interface UpdateDashboardRequest {
  readonly AwsAccountId: string;
  readonly DashboardId: string;
  readonly Name: string;
  readonly SourceEntity: DashboardSourceEntity;
  readonly Parameters: Parameters;
  readonly VersionDescription: string;
  readonly DashboardPublishOptions: DashboardPublishOptions;
  readonly ThemeArn: string;
}

interface UpdateDashboardResponse {
  readonly Arn: string;
  readonly VersionArn: string;
  readonly DashboardId: string;
  readonly CreationStatus: string;
  readonly Status: number;
  readonly RequestId: string;
}

interface UpdateDataSetPermissionsRequest {
  readonly AwsAccountId: string;
  readonly DataSetId: string;
  readonly GrantPermissions: [];
  readonly RevokePermissions: [];
}

interface UpdateDataSetPermissionsResponse {
  readonly DataSetArn: string;
  readonly DataSetId: string;
  readonly RequestId: string;
  readonly Status: number;
}

interface UpdateDataSetRequest {
  readonly AwsAccountId: string;
  readonly DataSetId: string;
  readonly Name: string;
  readonly PhysicalTableMap: {[key: string]: any};
  readonly LogicalTableMap: {[key: string]: any};
  readonly ImportMode: string;
  readonly ColumnGroups: [];
  readonly FieldFolders: {[key: string]: any};
  readonly RowLevelPermissionDataSet: RowLevelPermissionDataSet;
  readonly RowLevelPermissionTagConfiguration: RowLevelPermissionTagConfiguration;
  readonly ColumnLevelPermissionRules: [];
  readonly DataSetUsageConfiguration: DataSetUsageConfiguration;
}

interface UpdateDataSetResponse {
  readonly Arn: string;
  readonly DataSetId: string;
  readonly IngestionArn: string;
  readonly IngestionId: string;
  readonly RequestId: string;
  readonly Status: number;
}

interface UpdateDataSourcePermissionsRequest {
  readonly AwsAccountId: string;
  readonly DataSourceId: string;
  readonly GrantPermissions: [];
  readonly RevokePermissions: [];
}

interface UpdateDataSourcePermissionsResponse {
  readonly DataSourceArn: string;
  readonly DataSourceId: string;
  readonly RequestId: string;
  readonly Status: number;
}

interface UpdateDataSourceRequest {
  readonly AwsAccountId: string;
  readonly DataSourceId: string;
  readonly Name: string;
  readonly DataSourceParameters: DataSourceParameters;
  readonly Credentials: DataSourceCredentials;
  readonly VpcConnectionProperties: VpcConnectionProperties;
  readonly SslProperties: SslProperties;
}

interface UpdateDataSourceResponse {
  readonly Arn: string;
  readonly DataSourceId: string;
  readonly UpdateStatus: string;
  readonly RequestId: string;
  readonly Status: number;
}

interface UpdateFolderPermissionsRequest {
  readonly AwsAccountId: string;
  readonly FolderId: string;
  readonly GrantPermissions: [];
  readonly RevokePermissions: [];
}

interface UpdateFolderPermissionsResponse {
  readonly Status: number;
  readonly Arn: string;
  readonly FolderId: string;
  readonly Permissions: [];
  readonly RequestId: string;
}

interface UpdateFolderRequest {
  readonly AwsAccountId: string;
  readonly FolderId: string;
  readonly Name: string;
}

interface UpdateFolderResponse {
  readonly Status: number;
  readonly Arn: string;
  readonly FolderId: string;
  readonly RequestId: string;
}

interface UpdateGroupRequest {
  readonly GroupName: string;
  readonly Description: string;
  readonly AwsAccountId: string;
  readonly Namespace: string;
}

interface UpdateGroupResponse {
  readonly Group: Group;
  readonly RequestId: string;
  readonly Status: number;
}

interface UpdateIAMPolicyAssignmentRequest {
  readonly AwsAccountId: string;
  readonly AssignmentName: string;
  readonly Namespace: string;
  readonly AssignmentStatus: string;
  readonly PolicyArn: string;
  readonly Identities: {[key: string]: any};
}

interface UpdateIAMPolicyAssignmentResponse {
  readonly AssignmentName: string;
  readonly AssignmentId: string;
  readonly PolicyArn: string;
  readonly Identities: {[key: string]: any};
  readonly AssignmentStatus: string;
  readonly RequestId: string;
  readonly Status: number;
}

interface UpdateIpRestrictionRequest {
  readonly AwsAccountId: string;
  readonly IpRestrictionRuleMap: {[key: string]: any};
  readonly Enabled: boolean;
}

interface UpdateIpRestrictionResponse {
  readonly AwsAccountId: string;
  readonly RequestId: string;
  readonly Status: number;
}

interface UpdateTemplateAliasRequest {
  readonly AwsAccountId: string;
  readonly TemplateId: string;
  readonly AliasName: string;
  readonly TemplateVersionNumber: number;
}

interface UpdateTemplateAliasResponse {
  readonly TemplateAlias: TemplateAlias;
  readonly Status: number;
  readonly RequestId: string;
}

interface UpdateTemplatePermissionsRequest {
  readonly AwsAccountId: string;
  readonly TemplateId: string;
  readonly GrantPermissions: [];
  readonly RevokePermissions: [];
}

interface UpdateTemplatePermissionsResponse {
  readonly TemplateId: string;
  readonly TemplateArn: string;
  readonly Permissions: [];
  readonly RequestId: string;
  readonly Status: number;
}

interface UpdateTemplateRequest {
  readonly AwsAccountId: string;
  readonly TemplateId: string;
  readonly SourceEntity: TemplateSourceEntity;
  readonly VersionDescription: string;
  readonly Name: string;
}

interface UpdateTemplateResponse {
  readonly TemplateId: string;
  readonly Arn: string;
  readonly VersionArn: string;
  readonly CreationStatus: string;
  readonly Status: number;
  readonly RequestId: string;
}

interface UpdateThemeAliasRequest {
  readonly AwsAccountId: string;
  readonly ThemeId: string;
  readonly AliasName: string;
  readonly ThemeVersionNumber: number;
}

interface UpdateThemeAliasResponse {
  readonly ThemeAlias: ThemeAlias;
  readonly Status: number;
  readonly RequestId: string;
}

interface UpdateThemePermissionsRequest {
  readonly AwsAccountId: string;
  readonly ThemeId: string;
  readonly GrantPermissions: [];
  readonly RevokePermissions: [];
}

interface UpdateThemePermissionsResponse {
  readonly ThemeId: string;
  readonly ThemeArn: string;
  readonly Permissions: [];
  readonly RequestId: string;
  readonly Status: number;
}

interface UpdateThemeRequest {
  readonly AwsAccountId: string;
  readonly ThemeId: string;
  readonly Name: string;
  readonly BaseThemeId: string;
  readonly VersionDescription: string;
  readonly Configuration: ThemeConfiguration;
}

interface UpdateThemeResponse {
  readonly ThemeId: string;
  readonly Arn: string;
  readonly VersionArn: string;
  readonly CreationStatus: string;
  readonly Status: number;
  readonly RequestId: string;
}

interface UpdateUserRequest {
  readonly UserName: string;
  readonly AwsAccountId: string;
  readonly Namespace: string;
  readonly Email: string;
  readonly Role: string;
  readonly CustomPermissionsName: string;
  readonly UnapplyCustomPermissions: boolean;
  readonly ExternalLoginFederationProviderType: string;
  readonly CustomFederationProviderUrl: string;
  readonly ExternalLoginId: string;
}

interface UpdateUserResponse {
  readonly User: User;
  readonly RequestId: string;
  readonly Status: number;
}

interface UploadSettings {
  readonly Format: string;
  readonly StartFromRow: number;
  readonly ContainsHeader: boolean;
  readonly TextQualifier: string;
  readonly Delimiter: string;
}

interface User {
  readonly Arn: string;
  readonly UserName: string;
  readonly Email: string;
  readonly Role: string;
  readonly IdentityType: string;
  readonly Active: boolean;
  readonly PrincipalId: string;
  readonly CustomPermissionsName: string;
  readonly ExternalLoginFederationProviderType: string;
  readonly ExternalLoginFederationProviderUrl: string;
  readonly ExternalLoginId: string;
}

interface VpcConnectionProperties {
  readonly VpcConnectionArn: string;
}

