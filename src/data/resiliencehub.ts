/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AddDraftAppVersionResourceMappings {
  readonly appArn: string;
  readonly resourceMappings: [];
}
export interface CreateApp {
  readonly clientToken: string;
  readonly description: string;
  readonly name: string;
  readonly policyArn: string;
  readonly tags: {[key: string]: any};
}
export interface CreateRecommendationTemplate {
  readonly assessmentArn: string;
  readonly bucketName: string;
  readonly clientToken: string;
  readonly format: string;
  readonly name: string;
  readonly recommendationIds: [];
  readonly recommendationTypes: [];
  readonly tags: {[key: string]: any};
}
export interface CreateResiliencyPolicy {
  readonly clientToken: string;
  readonly dataLocationConstraint: string;
  readonly policy: {[key: string]: any};
  readonly policyDescription: string;
  readonly policyName: string;
  readonly tags: {[key: string]: any};
  readonly tier: string;
}
export interface DeleteApp {
  readonly appArn: string;
  readonly clientToken: string;
  readonly forceDelete: boolean;
}
export interface DeleteAppAssessment {
  readonly assessmentArn: string;
  readonly clientToken: string;
}
export interface DeleteRecommendationTemplate {
  readonly clientToken: string;
  readonly recommendationTemplateArn: string;
}
export interface DeleteResiliencyPolicy {
  readonly clientToken: string;
  readonly policyArn: string;
}
export interface DescribeApp {
  readonly appArn: string;
}
export interface DescribeAppAssessment {
  readonly assessmentArn: string;
}
export interface DescribeAppVersionResourcesResolutionStatus {
  readonly appArn: string;
  readonly appVersion: string;
  readonly resolutionId: string;
}
export interface DescribeAppVersionTemplate {
  readonly appArn: string;
  readonly appVersion: string;
}
export interface DescribeDraftAppVersionResourcesImportStatus {
  readonly appArn: string;
}
export interface DescribeResiliencyPolicy {
  readonly policyArn: string;
}
export interface ImportResourcesToDraftAppVersion {
  readonly appArn: string;
  readonly sourceArns: [];
}
export interface ListAlarmRecommendations {
  readonly assessmentArn: string;
  readonly maxResults: number;
  readonly nextToken: string;
}
export interface ListAppAssessments {
  readonly appArn: string;
  readonly assessmentName: string;
  readonly assessmentStatus: [];
  readonly complianceStatus: string;
  readonly invoker: string;
  readonly maxResults: number;
  readonly nextToken: string;
  readonly reverseOrder: boolean;
}
export interface ListAppComponentCompliances {
  readonly assessmentArn: string;
  readonly maxResults: number;
  readonly nextToken: string;
}
export interface ListAppComponentRecommendations {
  readonly assessmentArn: string;
  readonly maxResults: number;
  readonly nextToken: string;
}
export interface ListAppVersionResourceMappings {
  readonly appArn: string;
  readonly appVersion: string;
  readonly maxResults: number;
  readonly nextToken: string;
}
export interface ListAppVersionResources {
  readonly appArn: string;
  readonly appVersion: string;
  readonly maxResults: number;
  readonly nextToken: string;
  readonly resolutionId: string;
}
export interface ListAppVersions {
  readonly appArn: string;
  readonly maxResults: number;
  readonly nextToken: string;
}
export interface ListApps {
  readonly appArn: string;
  readonly maxResults: number;
  readonly name: string;
  readonly nextToken: string;
}
export interface ListRecommendationTemplates {
  readonly assessmentArn: string;
  readonly maxResults: number;
  readonly name: string;
  readonly nextToken: string;
  readonly recommendationTemplateArn: string;
  readonly reverseOrder: boolean;
  readonly status: [];
}
export interface ListResiliencyPolicies {
  readonly maxResults: number;
  readonly nextToken: string;
  readonly policyName: string;
}
export interface ListSopRecommendations {
  readonly assessmentArn: string;
  readonly maxResults: number;
  readonly nextToken: string;
}
export interface ListSuggestedResiliencyPolicies {
  readonly maxResults: number;
  readonly nextToken: string;
}
export interface ListTagsForResource {
  readonly resourceArn: string;
}
export interface ListTestRecommendations {
  readonly assessmentArn: string;
  readonly maxResults: number;
  readonly nextToken: string;
}
export interface ListUnsupportedAppVersionResources {
  readonly appArn: string;
  readonly appVersion: string;
  readonly maxResults: number;
  readonly nextToken: string;
  readonly resolutionId: string;
}
export interface PublishAppVersion {
  readonly appArn: string;
}
export interface PutDraftAppVersionTemplate {
  readonly appArn: string;
  readonly appTemplateBody: string;
}
export interface RemoveDraftAppVersionResourceMappings {
  readonly appArn: string;
  readonly appRegistryAppNames: [];
  readonly logicalStackNames: [];
  readonly resourceGroupNames: [];
  readonly resourceNames: [];
}
export interface ResolveAppVersionResources {
  readonly appArn: string;
  readonly appVersion: string;
}
export interface StartAppAssessment {
  readonly appArn: string;
  readonly appVersion: string;
  readonly assessmentName: string;
  readonly clientToken: string;
  readonly tags: {[key: string]: any};
}
export interface TagResource {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}
export interface UntagResource {
  readonly resourceArn: string;
  readonly tagKeys: [];
}
export interface UpdateApp {
  readonly appArn: string;
  readonly clearResiliencyPolicyArn: boolean;
  readonly description: string;
  readonly policyArn: string;
}
export interface UpdateResiliencyPolicy {
  readonly dataLocationConstraint: string;
  readonly policy: {[key: string]: any};
  readonly policyArn: string;
  readonly policyDescription: string;
  readonly policyName: string;
  readonly tier: string;
}



interface AccessDeniedException {
  readonly message: string;
}

interface AddDraftAppVersionResourceMappingsRequest {
  readonly appArn: string;
  readonly resourceMappings: [];
}

interface AddDraftAppVersionResourceMappingsResponse {
  readonly appArn: string;
  readonly appVersion: string;
  readonly resourceMappings: [];
}

interface AlarmRecommendation {
  readonly appComponentName: string;
  readonly description: string;
  readonly items: [];
  readonly name: string;
  readonly prerequisite: string;
  readonly recommendationId: string;
  readonly referenceId: string;
  readonly type: string;
}

interface App {
  readonly appArn: string;
  readonly complianceStatus: string;
  readonly creationTime: Date;
  readonly description: string;
  readonly lastAppComplianceEvaluationTime: Date;
  readonly lastResiliencyScoreEvaluationTime: Date;
  readonly name: string;
  readonly policyArn: string;
  readonly resiliencyScore: unknown;
  readonly status: string;
  readonly tags: {[key: string]: any};
}

interface AppAssessment {
  readonly appArn: string;
  readonly appVersion: string;
  readonly assessmentArn: string;
  readonly assessmentName: string;
  readonly assessmentStatus: string;
  readonly compliance: {[key: string]: any};
  readonly complianceStatus: string;
  readonly cost: Cost;
  readonly endTime: Date;
  readonly invoker: string;
  readonly message: string;
  readonly policy: ResiliencyPolicy;
  readonly resiliencyScore: ResiliencyScore;
  readonly startTime: Date;
  readonly tags: {[key: string]: any};
}

interface AppAssessmentSummary {
  readonly appArn: string;
  readonly appVersion: string;
  readonly assessmentArn: string;
  readonly assessmentName: string;
  readonly assessmentStatus: string;
  readonly complianceStatus: string;
  readonly cost: Cost;
  readonly endTime: Date;
  readonly invoker: string;
  readonly message: string;
  readonly resiliencyScore: unknown;
  readonly startTime: Date;
}

interface AppComponent {
  readonly name: string;
  readonly type: string;
}

interface AppComponentCompliance {
  readonly appComponentName: string;
  readonly compliance: {[key: string]: any};
  readonly cost: Cost;
  readonly message: string;
  readonly resiliencyScore: ResiliencyScore;
  readonly status: string;
}

interface AppSummary {
  readonly appArn: string;
  readonly complianceStatus: string;
  readonly creationTime: Date;
  readonly description: string;
  readonly name: string;
  readonly resiliencyScore: unknown;
}

interface AppVersionSummary {
  readonly appVersion: string;
}

interface ComponentRecommendation {
  readonly appComponentName: string;
  readonly configRecommendations: [];
  readonly recommendationStatus: string;
}

interface ConfigRecommendation {
  readonly appComponentName: string;
  readonly compliance: {[key: string]: any};
  readonly cost: Cost;
  readonly description: string;
  readonly haArchitecture: string;
  readonly name: string;
  readonly optimizationType: string;
  readonly recommendationCompliance: {[key: string]: any};
  readonly referenceId: string;
  readonly suggestedChanges: [];
}

interface ConflictException {
  readonly message: string;
  readonly resourceId: string;
  readonly resourceType: string;
}

interface Cost {
  readonly amount: unknown;
  readonly currency: string;
  readonly frequency: string;
}

interface CreateAppRequest {
  readonly clientToken: string;
  readonly description: string;
  readonly name: string;
  readonly policyArn: string;
  readonly tags: {[key: string]: any};
}

interface CreateAppResponse {
  readonly app: App;
}

interface CreateRecommendationTemplateRequest {
  readonly assessmentArn: string;
  readonly bucketName: string;
  readonly clientToken: string;
  readonly format: string;
  readonly name: string;
  readonly recommendationIds: [];
  readonly recommendationTypes: [];
  readonly tags: {[key: string]: any};
}

interface CreateRecommendationTemplateResponse {
  readonly recommendationTemplate: RecommendationTemplate;
}

interface CreateResiliencyPolicyRequest {
  readonly clientToken: string;
  readonly dataLocationConstraint: string;
  readonly policy: {[key: string]: any};
  readonly policyDescription: string;
  readonly policyName: string;
  readonly tags: {[key: string]: any};
  readonly tier: string;
}

interface CreateResiliencyPolicyResponse {
  readonly policy: ResiliencyPolicy;
}

interface DeleteAppAssessmentRequest {
  readonly assessmentArn: string;
  readonly clientToken: string;
}

interface DeleteAppAssessmentResponse {
  readonly assessmentArn: string;
  readonly assessmentStatus: string;
}

interface DeleteAppRequest {
  readonly appArn: string;
  readonly clientToken: string;
  readonly forceDelete: boolean;
}

interface DeleteAppResponse {
  readonly appArn: string;
}

interface DeleteRecommendationTemplateRequest {
  readonly clientToken: string;
  readonly recommendationTemplateArn: string;
}

interface DeleteRecommendationTemplateResponse {
  readonly recommendationTemplateArn: string;
  readonly status: string;
}

interface DeleteResiliencyPolicyRequest {
  readonly clientToken: string;
  readonly policyArn: string;
}

interface DeleteResiliencyPolicyResponse {
  readonly policyArn: string;
}

interface DescribeAppAssessmentRequest {
  readonly assessmentArn: string;
}

interface DescribeAppAssessmentResponse {
  readonly assessment: AppAssessment;
}

interface DescribeAppRequest {
  readonly appArn: string;
}

interface DescribeAppResponse {
  readonly app: App;
}

interface DescribeAppVersionResourcesResolutionStatusRequest {
  readonly appArn: string;
  readonly appVersion: string;
  readonly resolutionId: string;
}

interface DescribeAppVersionResourcesResolutionStatusResponse {
  readonly appArn: string;
  readonly appVersion: string;
  readonly errorMessage: string;
  readonly resolutionId: string;
  readonly status: string;
}

interface DescribeAppVersionTemplateRequest {
  readonly appArn: string;
  readonly appVersion: string;
}

interface DescribeAppVersionTemplateResponse {
  readonly appArn: string;
  readonly appTemplateBody: string;
  readonly appVersion: string;
}

interface DescribeDraftAppVersionResourcesImportStatusRequest {
  readonly appArn: string;
}

interface DescribeDraftAppVersionResourcesImportStatusResponse {
  readonly appArn: string;
  readonly appVersion: string;
  readonly errorMessage: string;
  readonly status: string;
  readonly statusChangeTime: Date;
}

interface DescribeResiliencyPolicyRequest {
  readonly policyArn: string;
}

interface DescribeResiliencyPolicyResponse {
  readonly policy: ResiliencyPolicy;
}

interface DisruptionCompliance {
  readonly achievableRpoInSecs: number;
  readonly achievableRtoInSecs: number;
  readonly complianceStatus: string;
  readonly currentRpoInSecs: number;
  readonly currentRtoInSecs: number;
  readonly message: string;
  readonly rpoDescription: string;
  readonly rpoReferenceId: string;
  readonly rtoDescription: string;
  readonly rtoReferenceId: string;
}

interface FailurePolicy {
  readonly rpoInSecs: number;
  readonly rtoInSecs: number;
}

interface ImportResourcesToDraftAppVersionRequest {
  readonly appArn: string;
  readonly sourceArns: [];
}

interface ImportResourcesToDraftAppVersionResponse {
  readonly appArn: string;
  readonly appVersion: string;
  readonly sourceArns: [];
  readonly status: string;
}

interface InternalServerException {
  readonly message: string;
}

interface ListAlarmRecommendationsRequest {
  readonly assessmentArn: string;
  readonly maxResults: number;
  readonly nextToken: string;
}

interface ListAlarmRecommendationsResponse {
  readonly alarmRecommendations: [];
  readonly nextToken: string;
}

interface ListAppAssessmentsRequest {
  readonly appArn: string;
  readonly assessmentName: string;
  readonly assessmentStatus: [];
  readonly complianceStatus: string;
  readonly invoker: string;
  readonly maxResults: number;
  readonly nextToken: string;
  readonly reverseOrder: boolean;
}

interface ListAppAssessmentsResponse {
  readonly assessmentSummaries: [];
  readonly nextToken: string;
}

interface ListAppComponentCompliancesRequest {
  readonly assessmentArn: string;
  readonly maxResults: number;
  readonly nextToken: string;
}

interface ListAppComponentCompliancesResponse {
  readonly componentCompliances: [];
  readonly nextToken: string;
}

interface ListAppComponentRecommendationsRequest {
  readonly assessmentArn: string;
  readonly maxResults: number;
  readonly nextToken: string;
}

interface ListAppComponentRecommendationsResponse {
  readonly componentRecommendations: [];
  readonly nextToken: string;
}

interface ListAppVersionResourceMappingsRequest {
  readonly appArn: string;
  readonly appVersion: string;
  readonly maxResults: number;
  readonly nextToken: string;
}

interface ListAppVersionResourceMappingsResponse {
  readonly nextToken: string;
  readonly resourceMappings: [];
}

interface ListAppVersionResourcesRequest {
  readonly appArn: string;
  readonly appVersion: string;
  readonly maxResults: number;
  readonly nextToken: string;
  readonly resolutionId: string;
}

interface ListAppVersionResourcesResponse {
  readonly nextToken: string;
  readonly physicalResources: [];
  readonly resolutionId: string;
}

interface ListAppVersionsRequest {
  readonly appArn: string;
  readonly maxResults: number;
  readonly nextToken: string;
}

interface ListAppVersionsResponse {
  readonly appVersions: [];
  readonly nextToken: string;
}

interface ListAppsRequest {
  readonly appArn: string;
  readonly maxResults: number;
  readonly name: string;
  readonly nextToken: string;
}

interface ListAppsResponse {
  readonly appSummaries: [];
  readonly nextToken: string;
}

interface ListRecommendationTemplatesRequest {
  readonly assessmentArn: string;
  readonly maxResults: number;
  readonly name: string;
  readonly nextToken: string;
  readonly recommendationTemplateArn: string;
  readonly reverseOrder: boolean;
  readonly status: [];
}

interface ListRecommendationTemplatesResponse {
  readonly nextToken: string;
  readonly recommendationTemplates: [];
}

interface ListResiliencyPoliciesRequest {
  readonly maxResults: number;
  readonly nextToken: string;
  readonly policyName: string;
}

interface ListResiliencyPoliciesResponse {
  readonly nextToken: string;
  readonly resiliencyPolicies: [];
}

interface ListSopRecommendationsRequest {
  readonly assessmentArn: string;
  readonly maxResults: number;
  readonly nextToken: string;
}

interface ListSopRecommendationsResponse {
  readonly nextToken: string;
  readonly sopRecommendations: [];
}

interface ListSuggestedResiliencyPoliciesRequest {
  readonly maxResults: number;
  readonly nextToken: string;
}

interface ListSuggestedResiliencyPoliciesResponse {
  readonly nextToken: string;
  readonly resiliencyPolicies: [];
}

interface ListTagsForResourceRequest {
  readonly resourceArn: string;
}

interface ListTagsForResourceResponse {
  readonly tags: {[key: string]: any};
}

interface ListTestRecommendationsRequest {
  readonly assessmentArn: string;
  readonly maxResults: number;
  readonly nextToken: string;
}

interface ListTestRecommendationsResponse {
  readonly nextToken: string;
  readonly testRecommendations: [];
}

interface ListUnsupportedAppVersionResourcesRequest {
  readonly appArn: string;
  readonly appVersion: string;
  readonly maxResults: number;
  readonly nextToken: string;
  readonly resolutionId: string;
}

interface ListUnsupportedAppVersionResourcesResponse {
  readonly nextToken: string;
  readonly resolutionId: string;
  readonly unsupportedResources: [];
}

interface LogicalResourceId {
  readonly identifier: string;
  readonly logicalStackName: string;
  readonly resourceGroupName: string;
}

interface PhysicalResource {
  readonly appComponents: [];
  readonly logicalResourceId: LogicalResourceId;
  readonly physicalResourceId: PhysicalResourceId;
  readonly resourceName: string;
  readonly resourceType: string;
}

interface PhysicalResourceId {
  readonly awsAccountId: string;
  readonly awsRegion: string;
  readonly identifier: string;
  readonly type: string;
}

interface PublishAppVersionRequest {
  readonly appArn: string;
}

interface PublishAppVersionResponse {
  readonly appArn: string;
  readonly appVersion: string;
}

interface PutDraftAppVersionTemplateRequest {
  readonly appArn: string;
  readonly appTemplateBody: string;
}

interface PutDraftAppVersionTemplateResponse {
  readonly appArn: string;
  readonly appVersion: string;
}

interface RecommendationDisruptionCompliance {
  readonly expectedComplianceStatus: string;
  readonly expectedRpoDescription: string;
  readonly expectedRpoInSecs: number;
  readonly expectedRtoDescription: string;
  readonly expectedRtoInSecs: number;
}

interface RecommendationItem {
  readonly alreadyImplemented: boolean;
  readonly resourceId: string;
  readonly targetAccountId: string;
  readonly targetRegion: string;
}

interface RecommendationTemplate {
  readonly appArn: string;
  readonly assessmentArn: string;
  readonly endTime: Date;
  readonly format: string;
  readonly message: string;
  readonly name: string;
  readonly needsReplacements: boolean;
  readonly recommendationIds: [];
  readonly recommendationTemplateArn: string;
  readonly recommendationTypes: [];
  readonly startTime: Date;
  readonly status: string;
  readonly tags: {[key: string]: any};
  readonly templatesLocation: S3Location;
}

interface RemoveDraftAppVersionResourceMappingsRequest {
  readonly appArn: string;
  readonly appRegistryAppNames: [];
  readonly logicalStackNames: [];
  readonly resourceGroupNames: [];
  readonly resourceNames: [];
}

interface RemoveDraftAppVersionResourceMappingsResponse {
  readonly appArn: string;
  readonly appVersion: string;
}

interface ResiliencyPolicy {
  readonly creationTime: Date;
  readonly dataLocationConstraint: string;
  readonly estimatedCostTier: string;
  readonly policy: {[key: string]: any};
  readonly policyArn: string;
  readonly policyDescription: string;
  readonly policyName: string;
  readonly tags: {[key: string]: any};
  readonly tier: string;
}

interface ResiliencyScore {
  readonly disruptionScore: {[key: string]: any};
  readonly score: unknown;
}

interface ResolveAppVersionResourcesRequest {
  readonly appArn: string;
  readonly appVersion: string;
}

interface ResolveAppVersionResourcesResponse {
  readonly appArn: string;
  readonly appVersion: string;
  readonly resolutionId: string;
  readonly status: string;
}

interface ResourceMapping {
  readonly appRegistryAppName: string;
  readonly logicalStackName: string;
  readonly mappingType: string;
  readonly physicalResourceId: PhysicalResourceId;
  readonly resourceGroupName: string;
  readonly resourceName: string;
}

interface ResourceNotFoundException {
  readonly message: string;
  readonly resourceId: string;
  readonly resourceType: string;
}

interface S3Location {
  readonly bucket: string;
  readonly prefix: string;
}

interface ServiceQuotaExceededException {
  readonly message: string;
}

interface SopRecommendation {
  readonly appComponentName: string;
  readonly description: string;
  readonly items: [];
  readonly name: string;
  readonly prerequisite: string;
  readonly recommendationId: string;
  readonly referenceId: string;
  readonly serviceType: string;
}

interface StartAppAssessmentRequest {
  readonly appArn: string;
  readonly appVersion: string;
  readonly assessmentName: string;
  readonly clientToken: string;
  readonly tags: {[key: string]: any};
}

interface StartAppAssessmentResponse {
  readonly assessment: AppAssessment;
}

interface TagResourceRequest {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

interface TagResourceResponse {
}

interface TestRecommendation {
  readonly appComponentName: string;
  readonly description: string;
  readonly intent: string;
  readonly items: [];
  readonly name: string;
  readonly prerequisite: string;
  readonly recommendationId: string;
  readonly referenceId: string;
  readonly risk: string;
  readonly type: string;
}

interface ThrottlingException {
  readonly message: string;
  readonly retryAfterSeconds: number;
}

interface UnsupportedResource {
  readonly logicalResourceId: LogicalResourceId;
  readonly physicalResourceId: PhysicalResourceId;
  readonly resourceType: string;
}

interface UntagResourceRequest {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

interface UntagResourceResponse {
}

interface UpdateAppRequest {
  readonly appArn: string;
  readonly clearResiliencyPolicyArn: boolean;
  readonly description: string;
  readonly policyArn: string;
}

interface UpdateAppResponse {
  readonly app: App;
}

interface UpdateResiliencyPolicyRequest {
  readonly dataLocationConstraint: string;
  readonly policy: {[key: string]: any};
  readonly policyArn: string;
  readonly policyDescription: string;
  readonly policyName: string;
  readonly tier: string;
}

interface UpdateResiliencyPolicyResponse {
  readonly policy: ResiliencyPolicy;
}

interface ValidationException {
  readonly message: string;
}

