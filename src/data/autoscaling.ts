/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AttachInstances {
  readonly InstanceIds?: [];
  readonly AutoScalingGroupName: string;
}

export interface AttachLoadBalancerTargetGroups {
  readonly AutoScalingGroupName: string;
  readonly TargetGroupARNs: [];
}

export interface AttachLoadBalancers {
  readonly AutoScalingGroupName: string;
  readonly LoadBalancerNames: [];
}

export interface BatchDeleteScheduledAction {
  readonly AutoScalingGroupName: string;
  readonly ScheduledActionNames: [];
}

export interface BatchPutScheduledUpdateGroupAction {
  readonly AutoScalingGroupName: string;
  readonly ScheduledUpdateGroupActions: [];
}

export interface CancelInstanceRefresh {
  readonly AutoScalingGroupName: string;
}

export interface CompleteLifecycleAction {
  readonly LifecycleHookName: string;
  readonly AutoScalingGroupName: string;
  readonly LifecycleActionToken?: string;
  readonly LifecycleActionResult: string;
  readonly InstanceId?: string;
}

export interface CreateAutoScalingGroup {
  readonly AutoScalingGroupName: string;
  readonly LaunchConfigurationName?: string;
  readonly LaunchTemplate?: LaunchTemplateSpecification;
  readonly MixedInstancesPolicy?: MixedInstancesPolicy;
  readonly InstanceId?: string;
  readonly MinSize: number;
  readonly MaxSize: number;
  readonly DesiredCapacity?: number;
  readonly DefaultCooldown?: number;
  readonly AvailabilityZones?: [];
  readonly LoadBalancerNames?: [];
  readonly TargetGroupARNs?: [];
  readonly HealthCheckType?: string;
  readonly HealthCheckGracePeriod?: number;
  readonly PlacementGroup?: string;
  readonly VPCZoneIdentifier?: string;
  readonly TerminationPolicies?: [];
  readonly NewInstancesProtectedFromScaleIn?: boolean;
  readonly CapacityRebalance?: boolean;
  readonly LifecycleHookSpecificationList?: [];
  readonly Tags?: [];
  readonly ServiceLinkedRoleARN?: string;
  readonly MaxInstanceLifetime?: number;
  readonly Context?: string;
  readonly DesiredCapacityType?: string;
}

export interface CreateLaunchConfiguration {
  readonly LaunchConfigurationName: string;
  readonly ImageId?: string;
  readonly KeyName?: string;
  readonly SecurityGroups?: [];
  readonly ClassicLinkVPCId?: string;
  readonly ClassicLinkVPCSecurityGroups?: [];
  readonly UserData?: string;
  readonly InstanceId?: string;
  readonly InstanceType?: string;
  readonly KernelId?: string;
  readonly RamdiskId?: string;
  readonly BlockDeviceMappings?: [];
  readonly InstanceMonitoring?: InstanceMonitoring;
  readonly SpotPrice?: string;
  readonly IamInstanceProfile?: string;
  readonly EbsOptimized?: boolean;
  readonly AssociatePublicIpAddress?: boolean;
  readonly PlacementTenancy?: string;
  readonly MetadataOptions?: InstanceMetadataOptions;
}

export interface CreateOrUpdateTags {
  readonly Tags: [];
}

export interface DeleteAutoScalingGroup {
  readonly AutoScalingGroupName: string;
  readonly ForceDelete?: boolean;
}

export interface DeleteLaunchConfiguration {
  readonly LaunchConfigurationName: string;
}

export interface DeleteLifecycleHook {
  readonly LifecycleHookName: string;
  readonly AutoScalingGroupName: string;
}

export interface DeleteNotificationConfiguration {
  readonly AutoScalingGroupName: string;
  readonly TopicARN: string;
}

export interface DeletePolicy {
  readonly AutoScalingGroupName?: string;
  readonly PolicyName: string;
}

export interface DeleteScheduledAction {
  readonly AutoScalingGroupName: string;
  readonly ScheduledActionName: string;
}

export interface DeleteTags {
  readonly Tags: [];
}

export interface DeleteWarmPool {
  readonly AutoScalingGroupName: string;
  readonly ForceDelete?: boolean;
}

export interface DescribeAutoScalingGroups {
  readonly AutoScalingGroupNames?: [];
  readonly NextToken?: string;
  readonly MaxRecords?: number;
  readonly Filters?: [];
}

export interface DescribeAutoScalingInstances {
  readonly InstanceIds?: [];
  readonly MaxRecords?: number;
  readonly NextToken?: string;
}

export interface DescribeInstanceRefreshes {
  readonly AutoScalingGroupName: string;
  readonly InstanceRefreshIds?: [];
  readonly NextToken?: string;
  readonly MaxRecords?: number;
}

export interface DescribeLaunchConfigurations {
  readonly LaunchConfigurationNames?: [];
  readonly NextToken?: string;
  readonly MaxRecords?: number;
}

export interface DescribeLifecycleHooks {
  readonly AutoScalingGroupName: string;
  readonly LifecycleHookNames?: [];
}

export interface DescribeLoadBalancerTargetGroups {
  readonly AutoScalingGroupName: string;
  readonly NextToken?: string;
  readonly MaxRecords?: number;
}

export interface DescribeLoadBalancers {
  readonly AutoScalingGroupName: string;
  readonly NextToken?: string;
  readonly MaxRecords?: number;
}

export interface DescribeNotificationConfigurations {
  readonly AutoScalingGroupNames?: [];
  readonly NextToken?: string;
  readonly MaxRecords?: number;
}

export interface DescribePolicies {
  readonly AutoScalingGroupName?: string;
  readonly PolicyNames?: [];
  readonly PolicyTypes?: [];
  readonly NextToken?: string;
  readonly MaxRecords?: number;
}

export interface DescribeScalingActivities {
  readonly ActivityIds?: [];
  readonly AutoScalingGroupName?: string;
  readonly IncludeDeletedGroups?: boolean;
  readonly MaxRecords?: number;
  readonly NextToken?: string;
}

export interface DescribeScheduledActions {
  readonly AutoScalingGroupName?: string;
  readonly ScheduledActionNames?: [];
  readonly StartTime?: Date;
  readonly EndTime?: Date;
  readonly NextToken?: string;
  readonly MaxRecords?: number;
}

export interface DescribeTags {
  readonly Filters?: [];
  readonly NextToken?: string;
  readonly MaxRecords?: number;
}

export interface DescribeWarmPool {
  readonly AutoScalingGroupName: string;
  readonly MaxRecords?: number;
  readonly NextToken?: string;
}

export interface DetachInstances {
  readonly InstanceIds?: [];
  readonly AutoScalingGroupName: string;
  readonly ShouldDecrementDesiredCapacity: boolean;
}

export interface DetachLoadBalancerTargetGroups {
  readonly AutoScalingGroupName: string;
  readonly TargetGroupARNs: [];
}

export interface DetachLoadBalancers {
  readonly AutoScalingGroupName: string;
  readonly LoadBalancerNames: [];
}

export interface DisableMetricsCollection {
  readonly AutoScalingGroupName: string;
  readonly Metrics?: [];
}

export interface EnableMetricsCollection {
  readonly AutoScalingGroupName: string;
  readonly Metrics?: [];
  readonly Granularity: string;
}

export interface EnterStandby {
  readonly InstanceIds?: [];
  readonly AutoScalingGroupName: string;
  readonly ShouldDecrementDesiredCapacity: boolean;
}

export interface ExecutePolicy {
  readonly AutoScalingGroupName?: string;
  readonly PolicyName: string;
  readonly HonorCooldown?: boolean;
  readonly MetricValue?: unknown;
  readonly BreachThreshold?: unknown;
}

export interface ExitStandby {
  readonly InstanceIds?: [];
  readonly AutoScalingGroupName: string;
}

export interface GetPredictiveScalingForecast {
  readonly AutoScalingGroupName: string;
  readonly PolicyName: string;
  readonly StartTime: Date;
  readonly EndTime: Date;
}

export interface PutLifecycleHook {
  readonly LifecycleHookName: string;
  readonly AutoScalingGroupName: string;
  readonly LifecycleTransition?: string;
  readonly RoleARN?: string;
  readonly NotificationTargetARN?: string;
  readonly NotificationMetadata?: string;
  readonly HeartbeatTimeout?: number;
  readonly DefaultResult?: string;
}

export interface PutNotificationConfiguration {
  readonly AutoScalingGroupName: string;
  readonly TopicARN: string;
  readonly NotificationTypes: [];
}

export interface PutScalingPolicy {
  readonly AutoScalingGroupName: string;
  readonly PolicyName: string;
  readonly PolicyType?: string;
  readonly AdjustmentType?: string;
  readonly MinAdjustmentStep?: number;
  readonly MinAdjustmentMagnitude?: number;
  readonly ScalingAdjustment?: number;
  readonly Cooldown?: number;
  readonly MetricAggregationType?: string;
  readonly StepAdjustments?: [];
  readonly EstimatedInstanceWarmup?: number;
  readonly TargetTrackingConfiguration?: TargetTrackingConfiguration;
  readonly Enabled?: boolean;
  readonly PredictiveScalingConfiguration?: PredictiveScalingConfiguration;
}

export interface PutScheduledUpdateGroupAction {
  readonly AutoScalingGroupName: string;
  readonly ScheduledActionName: string;
  readonly Time?: Date;
  readonly StartTime?: Date;
  readonly EndTime?: Date;
  readonly Recurrence?: string;
  readonly MinSize?: number;
  readonly MaxSize?: number;
  readonly DesiredCapacity?: number;
  readonly TimeZone?: string;
}

export interface PutWarmPool {
  readonly AutoScalingGroupName: string;
  readonly MaxGroupPreparedCapacity?: number;
  readonly MinSize?: number;
  readonly PoolState?: string;
}

export interface RecordLifecycleActionHeartbeat {
  readonly LifecycleHookName: string;
  readonly AutoScalingGroupName: string;
  readonly LifecycleActionToken?: string;
  readonly InstanceId?: string;
}

export interface ResumeProcesses {
  readonly AutoScalingGroupName: string;
  readonly ScalingProcesses?: [];
}

export interface SetDesiredCapacity {
  readonly AutoScalingGroupName: string;
  readonly DesiredCapacity: number;
  readonly HonorCooldown?: boolean;
}

export interface SetInstanceHealth {
  readonly InstanceId: string;
  readonly HealthStatus: string;
  readonly ShouldRespectGracePeriod?: boolean;
}

export interface SetInstanceProtection {
  readonly InstanceIds: [];
  readonly AutoScalingGroupName: string;
  readonly ProtectedFromScaleIn: boolean;
}

export interface StartInstanceRefresh {
  readonly AutoScalingGroupName: string;
  readonly Strategy?: string;
  readonly DesiredConfiguration?: DesiredConfiguration;
  readonly Preferences?: RefreshPreferences;
}

export interface SuspendProcesses {
  readonly AutoScalingGroupName: string;
  readonly ScalingProcesses?: [];
}

export interface TerminateInstanceInAutoScalingGroup {
  readonly InstanceId: string;
  readonly ShouldDecrementDesiredCapacity: boolean;
}

export interface UpdateAutoScalingGroup {
  readonly AutoScalingGroupName: string;
  readonly LaunchConfigurationName?: string;
  readonly LaunchTemplate?: LaunchTemplateSpecification;
  readonly MixedInstancesPolicy?: MixedInstancesPolicy;
  readonly MinSize?: number;
  readonly MaxSize?: number;
  readonly DesiredCapacity?: number;
  readonly DefaultCooldown?: number;
  readonly AvailabilityZones?: [];
  readonly HealthCheckType?: string;
  readonly HealthCheckGracePeriod?: number;
  readonly PlacementGroup?: string;
  readonly VPCZoneIdentifier?: string;
  readonly TerminationPolicies?: [];
  readonly NewInstancesProtectedFromScaleIn?: boolean;
  readonly ServiceLinkedRoleARN?: string;
  readonly MaxInstanceLifetime?: number;
  readonly CapacityRebalance?: boolean;
  readonly Context?: string;
  readonly DesiredCapacityType?: string;
}

export interface AcceleratorCountRequest {
  readonly Min?: number;
  readonly Max?: number;
}

export interface AcceleratorTotalMemoryMiBRequest {
  readonly Min?: number;
  readonly Max?: number;
}

export interface ActiveInstanceRefreshNotFoundFault {
  readonly message?: string;
}

export interface ActivitiesType {
  readonly Activities: [];
  readonly NextToken?: string;
}

export interface Activity {
  readonly ActivityId: string;
  readonly AutoScalingGroupName: string;
  readonly Description?: string;
  readonly Cause: string;
  readonly StartTime: Date;
  readonly EndTime?: Date;
  readonly StatusCode: string;
  readonly StatusMessage?: string;
  readonly Progress?: number;
  readonly Details?: string;
  readonly AutoScalingGroupState?: string;
  readonly AutoScalingGroupARN?: string;
}

export interface ActivityType {
  readonly Activity?: Activity;
}

export interface AdjustmentType {
  readonly AdjustmentType?: string;
}

export interface Alarm {
  readonly AlarmName?: string;
  readonly AlarmARN?: string;
}

export interface AlreadyExistsFault {
  readonly message?: string;
}

export interface AttachInstancesQuery {
  readonly InstanceIds?: [];
  readonly AutoScalingGroupName: string;
}

export interface AttachLoadBalancerTargetGroupsResultType {
}

export interface AttachLoadBalancerTargetGroupsType {
  readonly AutoScalingGroupName: string;
  readonly TargetGroupARNs: [];
}

export interface AttachLoadBalancersResultType {
}

export interface AttachLoadBalancersType {
  readonly AutoScalingGroupName: string;
  readonly LoadBalancerNames: [];
}

export interface AutoScalingGroup {
  readonly AutoScalingGroupName: string;
  readonly AutoScalingGroupARN?: string;
  readonly LaunchConfigurationName?: string;
  readonly LaunchTemplate?: LaunchTemplateSpecification;
  readonly MixedInstancesPolicy?: MixedInstancesPolicy;
  readonly MinSize: number;
  readonly MaxSize: number;
  readonly DesiredCapacity: number;
  readonly PredictedCapacity?: number;
  readonly DefaultCooldown: number;
  readonly AvailabilityZones: [];
  readonly LoadBalancerNames?: [];
  readonly TargetGroupARNs?: [];
  readonly HealthCheckType: string;
  readonly HealthCheckGracePeriod?: number;
  readonly Instances?: [];
  readonly CreatedTime: Date;
  readonly SuspendedProcesses?: [];
  readonly PlacementGroup?: string;
  readonly VPCZoneIdentifier?: string;
  readonly EnabledMetrics?: [];
  readonly Status?: string;
  readonly Tags?: [];
  readonly TerminationPolicies?: [];
  readonly NewInstancesProtectedFromScaleIn?: boolean;
  readonly ServiceLinkedRoleARN?: string;
  readonly MaxInstanceLifetime?: number;
  readonly CapacityRebalance?: boolean;
  readonly WarmPoolConfiguration?: WarmPoolConfiguration;
  readonly WarmPoolSize?: number;
  readonly Context?: string;
  readonly DesiredCapacityType?: string;
}

export interface AutoScalingGroupNamesType {
  readonly AutoScalingGroupNames?: [];
  readonly NextToken?: string;
  readonly MaxRecords?: number;
  readonly Filters?: [];
}

export interface AutoScalingGroupsType {
  readonly AutoScalingGroups: [];
  readonly NextToken?: string;
}

export interface AutoScalingInstanceDetails {
  readonly InstanceId: string;
  readonly InstanceType?: string;
  readonly AutoScalingGroupName: string;
  readonly AvailabilityZone: string;
  readonly LifecycleState: string;
  readonly HealthStatus: string;
  readonly LaunchConfigurationName?: string;
  readonly LaunchTemplate?: LaunchTemplateSpecification;
  readonly ProtectedFromScaleIn: boolean;
  readonly WeightedCapacity?: string;
}

export interface AutoScalingInstancesType {
  readonly AutoScalingInstances?: [];
  readonly NextToken?: string;
}

export interface BaselineEbsBandwidthMbpsRequest {
  readonly Min?: number;
  readonly Max?: number;
}

export interface BatchDeleteScheduledActionAnswer {
  readonly FailedScheduledActions?: [];
}

export interface BatchDeleteScheduledActionType {
  readonly AutoScalingGroupName: string;
  readonly ScheduledActionNames: [];
}

export interface BatchPutScheduledUpdateGroupActionAnswer {
  readonly FailedScheduledUpdateGroupActions?: [];
}

export interface BatchPutScheduledUpdateGroupActionType {
  readonly AutoScalingGroupName: string;
  readonly ScheduledUpdateGroupActions: [];
}

export interface BlockDeviceMapping {
  readonly VirtualName?: string;
  readonly DeviceName: string;
  readonly Ebs?: Ebs;
  readonly NoDevice?: boolean;
}

export interface CancelInstanceRefreshAnswer {
  readonly InstanceRefreshId?: string;
}

export interface CancelInstanceRefreshType {
  readonly AutoScalingGroupName: string;
}

export interface CapacityForecast {
  readonly Timestamps: [];
  readonly Values: [];
}

export interface CompleteLifecycleActionAnswer {
}

export interface CompleteLifecycleActionType {
  readonly LifecycleHookName: string;
  readonly AutoScalingGroupName: string;
  readonly LifecycleActionToken?: string;
  readonly LifecycleActionResult: string;
  readonly InstanceId?: string;
}

export interface CreateAutoScalingGroupType {
  readonly AutoScalingGroupName: string;
  readonly LaunchConfigurationName?: string;
  readonly LaunchTemplate?: LaunchTemplateSpecification;
  readonly MixedInstancesPolicy?: MixedInstancesPolicy;
  readonly InstanceId?: string;
  readonly MinSize: number;
  readonly MaxSize: number;
  readonly DesiredCapacity?: number;
  readonly DefaultCooldown?: number;
  readonly AvailabilityZones?: [];
  readonly LoadBalancerNames?: [];
  readonly TargetGroupARNs?: [];
  readonly HealthCheckType?: string;
  readonly HealthCheckGracePeriod?: number;
  readonly PlacementGroup?: string;
  readonly VPCZoneIdentifier?: string;
  readonly TerminationPolicies?: [];
  readonly NewInstancesProtectedFromScaleIn?: boolean;
  readonly CapacityRebalance?: boolean;
  readonly LifecycleHookSpecificationList?: [];
  readonly Tags?: [];
  readonly ServiceLinkedRoleARN?: string;
  readonly MaxInstanceLifetime?: number;
  readonly Context?: string;
  readonly DesiredCapacityType?: string;
}

export interface CreateLaunchConfigurationType {
  readonly LaunchConfigurationName: string;
  readonly ImageId?: string;
  readonly KeyName?: string;
  readonly SecurityGroups?: [];
  readonly ClassicLinkVPCId?: string;
  readonly ClassicLinkVPCSecurityGroups?: [];
  readonly UserData?: string;
  readonly InstanceId?: string;
  readonly InstanceType?: string;
  readonly KernelId?: string;
  readonly RamdiskId?: string;
  readonly BlockDeviceMappings?: [];
  readonly InstanceMonitoring?: InstanceMonitoring;
  readonly SpotPrice?: string;
  readonly IamInstanceProfile?: string;
  readonly EbsOptimized?: boolean;
  readonly AssociatePublicIpAddress?: boolean;
  readonly PlacementTenancy?: string;
  readonly MetadataOptions?: InstanceMetadataOptions;
}

export interface CreateOrUpdateTagsType {
  readonly Tags: [];
}

export interface CustomizedMetricSpecification {
  readonly MetricName: string;
  readonly Namespace: string;
  readonly Dimensions?: [];
  readonly Statistic: string;
  readonly Unit?: string;
}

export interface DeleteAutoScalingGroupType {
  readonly AutoScalingGroupName: string;
  readonly ForceDelete?: boolean;
}

export interface DeleteLifecycleHookAnswer {
}

export interface DeleteLifecycleHookType {
  readonly LifecycleHookName: string;
  readonly AutoScalingGroupName: string;
}

export interface DeleteNotificationConfigurationType {
  readonly AutoScalingGroupName: string;
  readonly TopicARN: string;
}

export interface DeletePolicyType {
  readonly AutoScalingGroupName?: string;
  readonly PolicyName: string;
}

export interface DeleteScheduledActionType {
  readonly AutoScalingGroupName: string;
  readonly ScheduledActionName: string;
}

export interface DeleteTagsType {
  readonly Tags: [];
}

export interface DeleteWarmPoolAnswer {
}

export interface DeleteWarmPoolType {
  readonly AutoScalingGroupName: string;
  readonly ForceDelete?: boolean;
}

export interface DescribeAccountLimitsAnswer {
  readonly MaxNumberOfAutoScalingGroups?: number;
  readonly MaxNumberOfLaunchConfigurations?: number;
  readonly NumberOfAutoScalingGroups?: number;
  readonly NumberOfLaunchConfigurations?: number;
}

export interface DescribeAdjustmentTypesAnswer {
  readonly AdjustmentTypes?: [];
}

export interface DescribeAutoScalingInstancesType {
  readonly InstanceIds?: [];
  readonly MaxRecords?: number;
  readonly NextToken?: string;
}

export interface DescribeAutoScalingNotificationTypesAnswer {
  readonly AutoScalingNotificationTypes?: [];
}

export interface DescribeInstanceRefreshesAnswer {
  readonly InstanceRefreshes?: [];
  readonly NextToken?: string;
}

export interface DescribeInstanceRefreshesType {
  readonly AutoScalingGroupName: string;
  readonly InstanceRefreshIds?: [];
  readonly NextToken?: string;
  readonly MaxRecords?: number;
}

export interface DescribeLifecycleHookTypesAnswer {
  readonly LifecycleHookTypes?: [];
}

export interface DescribeLifecycleHooksAnswer {
  readonly LifecycleHooks?: [];
}

export interface DescribeLifecycleHooksType {
  readonly AutoScalingGroupName: string;
  readonly LifecycleHookNames?: [];
}

export interface DescribeLoadBalancerTargetGroupsRequest {
  readonly AutoScalingGroupName: string;
  readonly NextToken?: string;
  readonly MaxRecords?: number;
}

export interface DescribeLoadBalancerTargetGroupsResponse {
  readonly LoadBalancerTargetGroups?: [];
  readonly NextToken?: string;
}

export interface DescribeLoadBalancersRequest {
  readonly AutoScalingGroupName: string;
  readonly NextToken?: string;
  readonly MaxRecords?: number;
}

export interface DescribeLoadBalancersResponse {
  readonly LoadBalancers?: [];
  readonly NextToken?: string;
}

export interface DescribeMetricCollectionTypesAnswer {
  readonly Metrics?: [];
  readonly Granularities?: [];
}

export interface DescribeNotificationConfigurationsAnswer {
  readonly NotificationConfigurations: [];
  readonly NextToken?: string;
}

export interface DescribeNotificationConfigurationsType {
  readonly AutoScalingGroupNames?: [];
  readonly NextToken?: string;
  readonly MaxRecords?: number;
}

export interface DescribePoliciesType {
  readonly AutoScalingGroupName?: string;
  readonly PolicyNames?: [];
  readonly PolicyTypes?: [];
  readonly NextToken?: string;
  readonly MaxRecords?: number;
}

export interface DescribeScalingActivitiesType {
  readonly ActivityIds?: [];
  readonly AutoScalingGroupName?: string;
  readonly IncludeDeletedGroups?: boolean;
  readonly MaxRecords?: number;
  readonly NextToken?: string;
}

export interface DescribeScheduledActionsType {
  readonly AutoScalingGroupName?: string;
  readonly ScheduledActionNames?: [];
  readonly StartTime?: Date;
  readonly EndTime?: Date;
  readonly NextToken?: string;
  readonly MaxRecords?: number;
}

export interface DescribeTagsType {
  readonly Filters?: [];
  readonly NextToken?: string;
  readonly MaxRecords?: number;
}

export interface DescribeTerminationPolicyTypesAnswer {
  readonly TerminationPolicyTypes?: [];
}

export interface DescribeWarmPoolAnswer {
  readonly WarmPoolConfiguration?: WarmPoolConfiguration;
  readonly Instances?: [];
  readonly NextToken?: string;
}

export interface DescribeWarmPoolType {
  readonly AutoScalingGroupName: string;
  readonly MaxRecords?: number;
  readonly NextToken?: string;
}

export interface DesiredConfiguration {
  readonly LaunchTemplate?: LaunchTemplateSpecification;
  readonly MixedInstancesPolicy?: MixedInstancesPolicy;
}

export interface DetachInstancesAnswer {
  readonly Activities?: [];
}

export interface DetachInstancesQuery {
  readonly InstanceIds?: [];
  readonly AutoScalingGroupName: string;
  readonly ShouldDecrementDesiredCapacity: boolean;
}

export interface DetachLoadBalancerTargetGroupsResultType {
}

export interface DetachLoadBalancerTargetGroupsType {
  readonly AutoScalingGroupName: string;
  readonly TargetGroupARNs: [];
}

export interface DetachLoadBalancersResultType {
}

export interface DetachLoadBalancersType {
  readonly AutoScalingGroupName: string;
  readonly LoadBalancerNames: [];
}

export interface DisableMetricsCollectionQuery {
  readonly AutoScalingGroupName: string;
  readonly Metrics?: [];
}

export interface Ebs {
  readonly SnapshotId?: string;
  readonly VolumeSize?: number;
  readonly VolumeType?: string;
  readonly DeleteOnTermination?: boolean;
  readonly Iops?: number;
  readonly Encrypted?: boolean;
  readonly Throughput?: number;
}

export interface EnableMetricsCollectionQuery {
  readonly AutoScalingGroupName: string;
  readonly Metrics?: [];
  readonly Granularity: string;
}

export interface EnabledMetric {
  readonly Metric?: string;
  readonly Granularity?: string;
}

export interface EnterStandbyAnswer {
  readonly Activities?: [];
}

export interface EnterStandbyQuery {
  readonly InstanceIds?: [];
  readonly AutoScalingGroupName: string;
  readonly ShouldDecrementDesiredCapacity: boolean;
}

export interface ExecutePolicyType {
  readonly AutoScalingGroupName?: string;
  readonly PolicyName: string;
  readonly HonorCooldown?: boolean;
  readonly MetricValue?: unknown;
  readonly BreachThreshold?: unknown;
}

export interface ExitStandbyAnswer {
  readonly Activities?: [];
}

export interface ExitStandbyQuery {
  readonly InstanceIds?: [];
  readonly AutoScalingGroupName: string;
}

export interface FailedScheduledUpdateGroupActionRequest {
  readonly ScheduledActionName: string;
  readonly ErrorCode?: string;
  readonly ErrorMessage?: string;
}

export interface Filter {
  readonly Name?: string;
  readonly Values?: [];
}

export interface GetPredictiveScalingForecastAnswer {
  readonly LoadForecast: [];
  readonly CapacityForecast: CapacityForecast;
  readonly UpdateTime: Date;
}

export interface GetPredictiveScalingForecastType {
  readonly AutoScalingGroupName: string;
  readonly PolicyName: string;
  readonly StartTime: Date;
  readonly EndTime: Date;
}

export interface Instance {
  readonly InstanceId: string;
  readonly InstanceType?: string;
  readonly AvailabilityZone: string;
  readonly LifecycleState: string;
  readonly HealthStatus: string;
  readonly LaunchConfigurationName?: string;
  readonly LaunchTemplate?: LaunchTemplateSpecification;
  readonly ProtectedFromScaleIn: boolean;
  readonly WeightedCapacity?: string;
}

export interface InstanceMetadataOptions {
  readonly HttpTokens?: string;
  readonly HttpPutResponseHopLimit?: number;
  readonly HttpEndpoint?: string;
}

export interface InstanceMonitoring {
  readonly Enabled?: boolean;
}

export interface InstanceRefresh {
  readonly InstanceRefreshId?: string;
  readonly AutoScalingGroupName?: string;
  readonly Status?: string;
  readonly StatusReason?: string;
  readonly StartTime?: Date;
  readonly EndTime?: Date;
  readonly PercentageComplete?: number;
  readonly InstancesToUpdate?: number;
  readonly ProgressDetails?: InstanceRefreshProgressDetails;
  readonly Preferences?: RefreshPreferences;
  readonly DesiredConfiguration?: DesiredConfiguration;
}

export interface InstanceRefreshInProgressFault {
  readonly message?: string;
}

export interface InstanceRefreshLivePoolProgress {
  readonly PercentageComplete?: number;
  readonly InstancesToUpdate?: number;
}

export interface InstanceRefreshProgressDetails {
  readonly LivePoolProgress?: InstanceRefreshLivePoolProgress;
  readonly WarmPoolProgress?: InstanceRefreshWarmPoolProgress;
}

export interface InstanceRefreshWarmPoolProgress {
  readonly PercentageComplete?: number;
  readonly InstancesToUpdate?: number;
}

export interface InstanceRequirements {
  readonly VCpuCount: VCpuCountRequest;
  readonly MemoryMiB: MemoryMiBRequest;
  readonly CpuManufacturers?: [];
  readonly MemoryGiBPerVCpu?: MemoryGiBPerVCpuRequest;
  readonly ExcludedInstanceTypes?: [];
  readonly InstanceGenerations?: [];
  readonly SpotMaxPricePercentageOverLowestPrice?: number;
  readonly OnDemandMaxPricePercentageOverLowestPrice?: number;
  readonly BareMetal?: string;
  readonly BurstablePerformance?: string;
  readonly RequireHibernateSupport?: boolean;
  readonly NetworkInterfaceCount?: NetworkInterfaceCountRequest;
  readonly LocalStorage?: string;
  readonly LocalStorageTypes?: [];
  readonly TotalLocalStorageGB?: TotalLocalStorageGBRequest;
  readonly BaselineEbsBandwidthMbps?: BaselineEbsBandwidthMbpsRequest;
  readonly AcceleratorTypes?: [];
  readonly AcceleratorCount?: AcceleratorCountRequest;
  readonly AcceleratorManufacturers?: [];
  readonly AcceleratorNames?: [];
  readonly AcceleratorTotalMemoryMiB?: AcceleratorTotalMemoryMiBRequest;
}

export interface InstancesDistribution {
  readonly OnDemandAllocationStrategy?: string;
  readonly OnDemandBaseCapacity?: number;
  readonly OnDemandPercentageAboveBaseCapacity?: number;
  readonly SpotAllocationStrategy?: string;
  readonly SpotInstancePools?: number;
  readonly SpotMaxPrice?: string;
}

export interface InvalidNextToken {
  readonly message?: string;
}

export interface LaunchConfiguration {
  readonly LaunchConfigurationName: string;
  readonly LaunchConfigurationARN?: string;
  readonly ImageId: string;
  readonly KeyName?: string;
  readonly SecurityGroups?: [];
  readonly ClassicLinkVPCId?: string;
  readonly ClassicLinkVPCSecurityGroups?: [];
  readonly UserData?: string;
  readonly InstanceType: string;
  readonly KernelId?: string;
  readonly RamdiskId?: string;
  readonly BlockDeviceMappings?: [];
  readonly InstanceMonitoring?: InstanceMonitoring;
  readonly SpotPrice?: string;
  readonly IamInstanceProfile?: string;
  readonly CreatedTime: Date;
  readonly EbsOptimized?: boolean;
  readonly AssociatePublicIpAddress?: boolean;
  readonly PlacementTenancy?: string;
  readonly MetadataOptions?: InstanceMetadataOptions;
}

export interface LaunchConfigurationNameType {
  readonly LaunchConfigurationName: string;
}

export interface LaunchConfigurationNamesType {
  readonly LaunchConfigurationNames?: [];
  readonly NextToken?: string;
  readonly MaxRecords?: number;
}

export interface LaunchConfigurationsType {
  readonly LaunchConfigurations: [];
  readonly NextToken?: string;
}

export interface LaunchTemplate {
  readonly LaunchTemplateSpecification?: LaunchTemplateSpecification;
  readonly Overrides?: [];
}

export interface LaunchTemplateOverrides {
  readonly InstanceType?: string;
  readonly WeightedCapacity?: string;
  readonly LaunchTemplateSpecification?: LaunchTemplateSpecification;
  readonly InstanceRequirements?: InstanceRequirements;
}

export interface LaunchTemplateSpecification {
  readonly LaunchTemplateId?: string;
  readonly LaunchTemplateName?: string;
  readonly Version?: string;
}

export interface LifecycleHook {
  readonly LifecycleHookName?: string;
  readonly AutoScalingGroupName?: string;
  readonly LifecycleTransition?: string;
  readonly NotificationTargetARN?: string;
  readonly RoleARN?: string;
  readonly NotificationMetadata?: string;
  readonly HeartbeatTimeout?: number;
  readonly GlobalTimeout?: number;
  readonly DefaultResult?: string;
}

export interface LifecycleHookSpecification {
  readonly LifecycleHookName: string;
  readonly LifecycleTransition: string;
  readonly NotificationMetadata?: string;
  readonly HeartbeatTimeout?: number;
  readonly DefaultResult?: string;
  readonly NotificationTargetARN?: string;
  readonly RoleARN?: string;
}

export interface LimitExceededFault {
  readonly message?: string;
}

export interface LoadBalancerState {
  readonly LoadBalancerName?: string;
  readonly State?: string;
}

export interface LoadBalancerTargetGroupState {
  readonly LoadBalancerTargetGroupARN?: string;
  readonly State?: string;
}

export interface LoadForecast {
  readonly Timestamps: [];
  readonly Values: [];
  readonly MetricSpecification: PredictiveScalingMetricSpecification;
}

export interface MemoryGiBPerVCpuRequest {
  readonly Min?: unknown;
  readonly Max?: unknown;
}

export interface MemoryMiBRequest {
  readonly Min: number;
  readonly Max?: number;
}

export interface Metric {
  readonly Namespace: string;
  readonly MetricName: string;
  readonly Dimensions?: [];
}

export interface MetricCollectionType {
  readonly Metric?: string;
}

export interface MetricDataQuery {
  readonly Id: string;
  readonly Expression?: string;
  readonly MetricStat?: MetricStat;
  readonly Label?: string;
  readonly ReturnData?: boolean;
}

export interface MetricDimension {
  readonly Name: string;
  readonly Value: string;
}

export interface MetricGranularityType {
  readonly Granularity?: string;
}

export interface MetricStat {
  readonly Metric: Metric;
  readonly Stat: string;
  readonly Unit?: string;
}

export interface MixedInstancesPolicy {
  readonly LaunchTemplate?: LaunchTemplate;
  readonly InstancesDistribution?: InstancesDistribution;
}

export interface NetworkInterfaceCountRequest {
  readonly Min?: number;
  readonly Max?: number;
}

export interface NotificationConfiguration {
  readonly AutoScalingGroupName?: string;
  readonly TopicARN?: string;
  readonly NotificationType?: string;
}

export interface PoliciesType {
  readonly ScalingPolicies?: [];
  readonly NextToken?: string;
}

export interface PolicyARNType {
  readonly PolicyARN?: string;
  readonly Alarms?: [];
}

export interface PredefinedMetricSpecification {
  readonly PredefinedMetricType: string;
  readonly ResourceLabel?: string;
}

export interface PredictiveScalingConfiguration {
  readonly MetricSpecifications: [];
  readonly Mode?: string;
  readonly SchedulingBufferTime?: number;
  readonly MaxCapacityBreachBehavior?: string;
  readonly MaxCapacityBuffer?: number;
}

export interface PredictiveScalingCustomizedCapacityMetric {
  readonly MetricDataQueries: [];
}

export interface PredictiveScalingCustomizedLoadMetric {
  readonly MetricDataQueries: [];
}

export interface PredictiveScalingCustomizedScalingMetric {
  readonly MetricDataQueries: [];
}

export interface PredictiveScalingMetricSpecification {
  readonly TargetValue: unknown;
  readonly PredefinedMetricPairSpecification?: PredictiveScalingPredefinedMetricPair;
  readonly PredefinedScalingMetricSpecification?: PredictiveScalingPredefinedScalingMetric;
  readonly PredefinedLoadMetricSpecification?: PredictiveScalingPredefinedLoadMetric;
  readonly CustomizedScalingMetricSpecification?: PredictiveScalingCustomizedScalingMetric;
  readonly CustomizedLoadMetricSpecification?: PredictiveScalingCustomizedLoadMetric;
  readonly CustomizedCapacityMetricSpecification?: PredictiveScalingCustomizedCapacityMetric;
}

export interface PredictiveScalingPredefinedLoadMetric {
  readonly PredefinedMetricType: string;
  readonly ResourceLabel?: string;
}

export interface PredictiveScalingPredefinedMetricPair {
  readonly PredefinedMetricType: string;
  readonly ResourceLabel?: string;
}

export interface PredictiveScalingPredefinedScalingMetric {
  readonly PredefinedMetricType: string;
  readonly ResourceLabel?: string;
}

export interface ProcessType {
  readonly ProcessName: string;
}

export interface ProcessesType {
  readonly Processes?: [];
}

export interface PutLifecycleHookAnswer {
}

export interface PutLifecycleHookType {
  readonly LifecycleHookName: string;
  readonly AutoScalingGroupName: string;
  readonly LifecycleTransition?: string;
  readonly RoleARN?: string;
  readonly NotificationTargetARN?: string;
  readonly NotificationMetadata?: string;
  readonly HeartbeatTimeout?: number;
  readonly DefaultResult?: string;
}

export interface PutNotificationConfigurationType {
  readonly AutoScalingGroupName: string;
  readonly TopicARN: string;
  readonly NotificationTypes: [];
}

export interface PutScalingPolicyType {
  readonly AutoScalingGroupName: string;
  readonly PolicyName: string;
  readonly PolicyType?: string;
  readonly AdjustmentType?: string;
  readonly MinAdjustmentStep?: number;
  readonly MinAdjustmentMagnitude?: number;
  readonly ScalingAdjustment?: number;
  readonly Cooldown?: number;
  readonly MetricAggregationType?: string;
  readonly StepAdjustments?: [];
  readonly EstimatedInstanceWarmup?: number;
  readonly TargetTrackingConfiguration?: TargetTrackingConfiguration;
  readonly Enabled?: boolean;
  readonly PredictiveScalingConfiguration?: PredictiveScalingConfiguration;
}

export interface PutScheduledUpdateGroupActionType {
  readonly AutoScalingGroupName: string;
  readonly ScheduledActionName: string;
  readonly Time?: Date;
  readonly StartTime?: Date;
  readonly EndTime?: Date;
  readonly Recurrence?: string;
  readonly MinSize?: number;
  readonly MaxSize?: number;
  readonly DesiredCapacity?: number;
  readonly TimeZone?: string;
}

export interface PutWarmPoolAnswer {
}

export interface PutWarmPoolType {
  readonly AutoScalingGroupName: string;
  readonly MaxGroupPreparedCapacity?: number;
  readonly MinSize?: number;
  readonly PoolState?: string;
}

export interface RecordLifecycleActionHeartbeatAnswer {
}

export interface RecordLifecycleActionHeartbeatType {
  readonly LifecycleHookName: string;
  readonly AutoScalingGroupName: string;
  readonly LifecycleActionToken?: string;
  readonly InstanceId?: string;
}

export interface RefreshPreferences {
  readonly MinHealthyPercentage?: number;
  readonly InstanceWarmup?: number;
  readonly CheckpointPercentages?: [];
  readonly CheckpointDelay?: number;
  readonly SkipMatching?: boolean;
}

export interface ResourceContentionFault {
  readonly message?: string;
}

export interface ResourceInUseFault {
  readonly message?: string;
}

export interface ScalingActivityInProgressFault {
  readonly message?: string;
}

export interface ScalingPolicy {
  readonly AutoScalingGroupName?: string;
  readonly PolicyName?: string;
  readonly PolicyARN?: string;
  readonly PolicyType?: string;
  readonly AdjustmentType?: string;
  readonly MinAdjustmentStep?: number;
  readonly MinAdjustmentMagnitude?: number;
  readonly ScalingAdjustment?: number;
  readonly Cooldown?: number;
  readonly StepAdjustments?: [];
  readonly MetricAggregationType?: string;
  readonly EstimatedInstanceWarmup?: number;
  readonly Alarms?: [];
  readonly TargetTrackingConfiguration?: TargetTrackingConfiguration;
  readonly Enabled?: boolean;
  readonly PredictiveScalingConfiguration?: PredictiveScalingConfiguration;
}

export interface ScalingProcessQuery {
  readonly AutoScalingGroupName: string;
  readonly ScalingProcesses?: [];
}

export interface ScheduledActionsType {
  readonly ScheduledUpdateGroupActions?: [];
  readonly NextToken?: string;
}

export interface ScheduledUpdateGroupAction {
  readonly AutoScalingGroupName?: string;
  readonly ScheduledActionName?: string;
  readonly ScheduledActionARN?: string;
  readonly Time?: Date;
  readonly StartTime?: Date;
  readonly EndTime?: Date;
  readonly Recurrence?: string;
  readonly MinSize?: number;
  readonly MaxSize?: number;
  readonly DesiredCapacity?: number;
  readonly TimeZone?: string;
}

export interface ScheduledUpdateGroupActionRequest {
  readonly ScheduledActionName: string;
  readonly StartTime?: Date;
  readonly EndTime?: Date;
  readonly Recurrence?: string;
  readonly MinSize?: number;
  readonly MaxSize?: number;
  readonly DesiredCapacity?: number;
  readonly TimeZone?: string;
}

export interface ServiceLinkedRoleFailure {
  readonly message?: string;
}

export interface SetDesiredCapacityType {
  readonly AutoScalingGroupName: string;
  readonly DesiredCapacity: number;
  readonly HonorCooldown?: boolean;
}

export interface SetInstanceHealthQuery {
  readonly InstanceId: string;
  readonly HealthStatus: string;
  readonly ShouldRespectGracePeriod?: boolean;
}

export interface SetInstanceProtectionAnswer {
}

export interface SetInstanceProtectionQuery {
  readonly InstanceIds: [];
  readonly AutoScalingGroupName: string;
  readonly ProtectedFromScaleIn: boolean;
}

export interface StartInstanceRefreshAnswer {
  readonly InstanceRefreshId?: string;
}

export interface StartInstanceRefreshType {
  readonly AutoScalingGroupName: string;
  readonly Strategy?: string;
  readonly DesiredConfiguration?: DesiredConfiguration;
  readonly Preferences?: RefreshPreferences;
}

export interface StepAdjustment {
  readonly MetricIntervalLowerBound?: unknown;
  readonly MetricIntervalUpperBound?: unknown;
  readonly ScalingAdjustment: number;
}

export interface SuspendedProcess {
  readonly ProcessName?: string;
  readonly SuspensionReason?: string;
}

export interface Tag {
  readonly ResourceId?: string;
  readonly ResourceType?: string;
  readonly Key: string;
  readonly Value?: string;
  readonly PropagateAtLaunch?: boolean;
}

export interface TagDescription {
  readonly ResourceId?: string;
  readonly ResourceType?: string;
  readonly Key?: string;
  readonly Value?: string;
  readonly PropagateAtLaunch?: boolean;
}

export interface TagsType {
  readonly Tags?: [];
  readonly NextToken?: string;
}

export interface TargetTrackingConfiguration {
  readonly PredefinedMetricSpecification?: PredefinedMetricSpecification;
  readonly CustomizedMetricSpecification?: CustomizedMetricSpecification;
  readonly TargetValue: unknown;
  readonly DisableScaleIn?: boolean;
}

export interface TerminateInstanceInAutoScalingGroupType {
  readonly InstanceId: string;
  readonly ShouldDecrementDesiredCapacity: boolean;
}

export interface TotalLocalStorageGBRequest {
  readonly Min?: unknown;
  readonly Max?: unknown;
}

export interface UpdateAutoScalingGroupType {
  readonly AutoScalingGroupName: string;
  readonly LaunchConfigurationName?: string;
  readonly LaunchTemplate?: LaunchTemplateSpecification;
  readonly MixedInstancesPolicy?: MixedInstancesPolicy;
  readonly MinSize?: number;
  readonly MaxSize?: number;
  readonly DesiredCapacity?: number;
  readonly DefaultCooldown?: number;
  readonly AvailabilityZones?: [];
  readonly HealthCheckType?: string;
  readonly HealthCheckGracePeriod?: number;
  readonly PlacementGroup?: string;
  readonly VPCZoneIdentifier?: string;
  readonly TerminationPolicies?: [];
  readonly NewInstancesProtectedFromScaleIn?: boolean;
  readonly ServiceLinkedRoleARN?: string;
  readonly MaxInstanceLifetime?: number;
  readonly CapacityRebalance?: boolean;
  readonly Context?: string;
  readonly DesiredCapacityType?: string;
}

export interface VCpuCountRequest {
  readonly Min: number;
  readonly Max?: number;
}

export interface WarmPoolConfiguration {
  readonly MaxGroupPreparedCapacity?: number;
  readonly MinSize?: number;
  readonly PoolState?: string;
  readonly Status?: string;
}


