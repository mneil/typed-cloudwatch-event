/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AddAttachmentsToSet {
  readonly attachmentSetId?: string;
  readonly attachments: [];
}
export interface AddCommunicationToCase {
  readonly caseId?: string;
  readonly communicationBody: string;
  readonly ccEmailAddresses?: [];
  readonly attachmentSetId?: string;
}
export interface CreateCase {
  readonly subject: string;
  readonly serviceCode?: string;
  readonly severityCode?: string;
  readonly categoryCode?: string;
  readonly communicationBody: string;
  readonly ccEmailAddresses?: [];
  readonly language?: string;
  readonly issueType?: string;
  readonly attachmentSetId?: string;
}
export interface DescribeAttachment {
  readonly attachmentId: string;
}
export interface DescribeCases {
  readonly caseIdList?: [];
  readonly displayId?: string;
  readonly afterTime?: string;
  readonly beforeTime?: string;
  readonly includeResolvedCases?: boolean;
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly language?: string;
  readonly includeCommunications?: boolean;
}
export interface DescribeCommunications {
  readonly caseId: string;
  readonly beforeTime?: string;
  readonly afterTime?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}
export interface DescribeServices {
  readonly serviceCodeList?: [];
  readonly language?: string;
}
export interface DescribeSeverityLevels {
  readonly language?: string;
}
export interface DescribeTrustedAdvisorCheckRefreshStatuses {
  readonly checkIds: [];
}
export interface DescribeTrustedAdvisorCheckResult {
  readonly checkId: string;
  readonly language?: string;
}
export interface DescribeTrustedAdvisorCheckSummaries {
  readonly checkIds: [];
}
export interface DescribeTrustedAdvisorChecks {
  readonly language: string;
}
export interface RefreshTrustedAdvisorCheck {
  readonly checkId: string;
}
export interface ResolveCase {
  readonly caseId?: string;
}



interface AddAttachmentsToSetRequest {
  readonly attachmentSetId: string;
  readonly attachments: [];
}

interface AddAttachmentsToSetResponse {
  readonly attachmentSetId: string;
  readonly expiryTime: string;
}

interface AddCommunicationToCaseRequest {
  readonly caseId: string;
  readonly communicationBody: string;
  readonly ccEmailAddresses: [];
  readonly attachmentSetId: string;
}

interface AddCommunicationToCaseResponse {
  readonly result: boolean;
}

interface Attachment {
  readonly fileName: string;
  readonly data: unknown;
}

interface AttachmentDetails {
  readonly attachmentId: string;
  readonly fileName: string;
}

interface AttachmentIdNotFound {
  readonly message: string;
}

interface AttachmentLimitExceeded {
  readonly message: string;
}

interface AttachmentSetExpired {
  readonly message: string;
}

interface AttachmentSetIdNotFound {
  readonly message: string;
}

interface AttachmentSetSizeLimitExceeded {
  readonly message: string;
}

interface CaseCreationLimitExceeded {
  readonly message: string;
}

interface CaseDetails {
  readonly caseId: string;
  readonly displayId: string;
  readonly subject: string;
  readonly status: string;
  readonly serviceCode: string;
  readonly categoryCode: string;
  readonly severityCode: string;
  readonly submittedBy: string;
  readonly timeCreated: string;
  readonly recentCommunications: RecentCaseCommunications;
  readonly ccEmailAddresses: [];
  readonly language: string;
}

interface CaseIdNotFound {
  readonly message: string;
}

interface Category {
  readonly code: string;
  readonly name: string;
}

interface Communication {
  readonly caseId: string;
  readonly body: string;
  readonly submittedBy: string;
  readonly timeCreated: string;
  readonly attachmentSet: [];
}

interface CreateCaseRequest {
  readonly subject: string;
  readonly serviceCode: string;
  readonly severityCode: string;
  readonly categoryCode: string;
  readonly communicationBody: string;
  readonly ccEmailAddresses: [];
  readonly language: string;
  readonly issueType: string;
  readonly attachmentSetId: string;
}

interface CreateCaseResponse {
  readonly caseId: string;
}

interface DescribeAttachmentLimitExceeded {
  readonly message: string;
}

interface DescribeAttachmentRequest {
  readonly attachmentId: string;
}

interface DescribeAttachmentResponse {
  readonly attachment: Attachment;
}

interface DescribeCasesRequest {
  readonly caseIdList: [];
  readonly displayId: string;
  readonly afterTime: string;
  readonly beforeTime: string;
  readonly includeResolvedCases: boolean;
  readonly nextToken: string;
  readonly maxResults: number;
  readonly language: string;
  readonly includeCommunications: boolean;
}

interface DescribeCasesResponse {
  readonly cases: [];
  readonly nextToken: string;
}

interface DescribeCommunicationsRequest {
  readonly caseId: string;
  readonly beforeTime: string;
  readonly afterTime: string;
  readonly nextToken: string;
  readonly maxResults: number;
}

interface DescribeCommunicationsResponse {
  readonly communications: [];
  readonly nextToken: string;
}

interface DescribeServicesRequest {
  readonly serviceCodeList: [];
  readonly language: string;
}

interface DescribeServicesResponse {
  readonly services: [];
}

interface DescribeSeverityLevelsRequest {
  readonly language: string;
}

interface DescribeSeverityLevelsResponse {
  readonly severityLevels: [];
}

interface DescribeTrustedAdvisorCheckRefreshStatusesRequest {
  readonly checkIds: [];
}

interface DescribeTrustedAdvisorCheckRefreshStatusesResponse {
  readonly statuses: [];
}

interface DescribeTrustedAdvisorCheckResultRequest {
  readonly checkId: string;
  readonly language: string;
}

interface DescribeTrustedAdvisorCheckResultResponse {
  readonly result: TrustedAdvisorCheckResult;
}

interface DescribeTrustedAdvisorCheckSummariesRequest {
  readonly checkIds: [];
}

interface DescribeTrustedAdvisorCheckSummariesResponse {
  readonly summaries: [];
}

interface DescribeTrustedAdvisorChecksRequest {
  readonly language: string;
}

interface DescribeTrustedAdvisorChecksResponse {
  readonly checks: [];
}

interface InternalServerError {
  readonly message: string;
}

interface RecentCaseCommunications {
  readonly communications: [];
  readonly nextToken: string;
}

interface RefreshTrustedAdvisorCheckRequest {
  readonly checkId: string;
}

interface RefreshTrustedAdvisorCheckResponse {
  readonly status: TrustedAdvisorCheckRefreshStatus;
}

interface ResolveCaseRequest {
  readonly caseId: string;
}

interface ResolveCaseResponse {
  readonly initialCaseStatus: string;
  readonly finalCaseStatus: string;
}

interface Service {
  readonly code: string;
  readonly name: string;
  readonly categories: [];
}

interface SeverityLevel {
  readonly code: string;
  readonly name: string;
}

interface TrustedAdvisorCategorySpecificSummary {
  readonly costOptimizing: TrustedAdvisorCostOptimizingSummary;
}

interface TrustedAdvisorCheckDescription {
  readonly id: string;
  readonly name: string;
  readonly description: string;
  readonly category: string;
  readonly metadata: [];
}

interface TrustedAdvisorCheckRefreshStatus {
  readonly checkId: string;
  readonly status: string;
  readonly millisUntilNextRefreshable: number;
}

interface TrustedAdvisorCheckResult {
  readonly checkId: string;
  readonly timestamp: string;
  readonly status: string;
  readonly resourcesSummary: TrustedAdvisorResourcesSummary;
  readonly categorySpecificSummary: TrustedAdvisorCategorySpecificSummary;
  readonly flaggedResources: [];
}

interface TrustedAdvisorCheckSummary {
  readonly checkId: string;
  readonly timestamp: string;
  readonly status: string;
  readonly hasFlaggedResources: boolean;
  readonly resourcesSummary: TrustedAdvisorResourcesSummary;
  readonly categorySpecificSummary: TrustedAdvisorCategorySpecificSummary;
}

interface TrustedAdvisorCostOptimizingSummary {
  readonly estimatedMonthlySavings: unknown;
  readonly estimatedPercentMonthlySavings: unknown;
}

interface TrustedAdvisorResourceDetail {
  readonly status: string;
  readonly region: string;
  readonly resourceId: string;
  readonly isSuppressed: boolean;
  readonly metadata: [];
}

interface TrustedAdvisorResourcesSummary {
  readonly resourcesProcessed: number;
  readonly resourcesFlagged: number;
  readonly resourcesIgnored: number;
  readonly resourcesSuppressed: number;
}

