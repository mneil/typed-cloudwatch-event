/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AddTagsToResource {
  readonly ResourceType: string;
  readonly ResourceId: string;
  readonly Tags: [];
}
export interface AssociateOpsItemRelatedItem {
  readonly OpsItemId: string;
  readonly AssociationType: string;
  readonly ResourceType: string;
  readonly ResourceUri: string;
}
export interface CancelCommand {
  readonly CommandId: string;
  readonly InstanceIds?: [];
}
export interface CancelMaintenanceWindowExecution {
  readonly WindowExecutionId: string;
}
export interface CreateActivation {
  readonly Description?: string;
  readonly DefaultInstanceName?: string;
  readonly IamRole: string;
  readonly RegistrationLimit?: number;
  readonly ExpirationDate?: Date;
  readonly Tags?: [];
  readonly RegistrationMetadata?: [];
}
export interface CreateAssociation {
  readonly Name: string;
  readonly DocumentVersion?: string;
  readonly InstanceId?: string;
  readonly Parameters?: {[key: string]: any};
  readonly Targets?: [];
  readonly ScheduleExpression?: string;
  readonly OutputLocation?: InstanceAssociationOutputLocation;
  readonly AssociationName?: string;
  readonly AutomationTargetParameterName?: string;
  readonly MaxErrors?: string;
  readonly MaxConcurrency?: string;
  readonly ComplianceSeverity?: string;
  readonly SyncCompliance?: string;
  readonly ApplyOnlyAtCronInterval?: boolean;
  readonly CalendarNames?: [];
  readonly TargetLocations?: [];
}
export interface CreateAssociationBatch {
  readonly Entries: [];
}
export interface CreateDocument {
  readonly Content: string;
  readonly Requires?: [];
  readonly Attachments?: [];
  readonly Name: string;
  readonly DisplayName?: string;
  readonly VersionName?: string;
  readonly DocumentType?: string;
  readonly DocumentFormat?: string;
  readonly TargetType?: string;
  readonly Tags?: [];
}
export interface CreateMaintenanceWindow {
  readonly Name: string;
  readonly Description?: string;
  readonly StartDate?: string;
  readonly EndDate?: string;
  readonly Schedule: string;
  readonly ScheduleTimezone?: string;
  readonly ScheduleOffset?: number;
  readonly Duration: number;
  readonly Cutoff: number;
  readonly AllowUnassociatedTargets: boolean;
  readonly ClientToken?: string;
  readonly Tags?: [];
}
export interface CreateOpsItem {
  readonly Description: string;
  readonly OpsItemType?: string;
  readonly OperationalData?: {[key: string]: any};
  readonly Notifications?: [];
  readonly Priority?: number;
  readonly RelatedOpsItems?: [];
  readonly Source: string;
  readonly Title: string;
  readonly Tags?: [];
  readonly Category?: string;
  readonly Severity?: string;
  readonly ActualStartTime?: Date;
  readonly ActualEndTime?: Date;
  readonly PlannedStartTime?: Date;
  readonly PlannedEndTime?: Date;
}
export interface CreateOpsMetadata {
  readonly ResourceId: string;
  readonly Metadata?: {[key: string]: any};
  readonly Tags?: [];
}
export interface CreatePatchBaseline {
  readonly OperatingSystem?: string;
  readonly Name: string;
  readonly GlobalFilters?: PatchFilterGroup;
  readonly ApprovalRules?: PatchRuleGroup;
  readonly ApprovedPatches?: [];
  readonly ApprovedPatchesComplianceLevel?: string;
  readonly ApprovedPatchesEnableNonSecurity?: boolean;
  readonly RejectedPatches?: [];
  readonly RejectedPatchesAction?: string;
  readonly Description?: string;
  readonly Sources?: [];
  readonly ClientToken?: string;
  readonly Tags?: [];
}
export interface CreateResourceDataSync {
  readonly SyncName: string;
  readonly S3Destination?: ResourceDataSyncS3Destination;
  readonly SyncType?: string;
  readonly SyncSource?: ResourceDataSyncSource;
}
export interface DeleteActivation {
  readonly ActivationId: string;
}
export interface DeleteAssociation {
  readonly Name?: string;
  readonly InstanceId?: string;
  readonly AssociationId?: string;
}
export interface DeleteDocument {
  readonly Name: string;
  readonly DocumentVersion?: string;
  readonly VersionName?: string;
  readonly Force?: boolean;
}
export interface DeleteInventory {
  readonly TypeName: string;
  readonly SchemaDeleteOption?: string;
  readonly DryRun?: boolean;
  readonly ClientToken?: string;
}
export interface DeleteMaintenanceWindow {
  readonly WindowId: string;
}
export interface DeleteOpsMetadata {
  readonly OpsMetadataArn: string;
}
export interface DeleteParameter {
  readonly Name: string;
}
export interface DeleteParameters {
  readonly Names: [];
}
export interface DeletePatchBaseline {
  readonly BaselineId: string;
}
export interface DeleteResourceDataSync {
  readonly SyncName: string;
  readonly SyncType?: string;
}
export interface DeregisterManagedInstance {
  readonly InstanceId: string;
}
export interface DeregisterPatchBaselineForPatchGroup {
  readonly BaselineId: string;
  readonly PatchGroup: string;
}
export interface DeregisterTargetFromMaintenanceWindow {
  readonly WindowId: string;
  readonly WindowTargetId: string;
  readonly Safe?: boolean;
}
export interface DeregisterTaskFromMaintenanceWindow {
  readonly WindowId: string;
  readonly WindowTaskId: string;
}
export interface DescribeActivations {
  readonly Filters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribeAssociation {
  readonly Name?: string;
  readonly InstanceId?: string;
  readonly AssociationId?: string;
  readonly AssociationVersion?: string;
}
export interface DescribeAssociationExecutionTargets {
  readonly AssociationId: string;
  readonly ExecutionId: string;
  readonly Filters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribeAssociationExecutions {
  readonly AssociationId: string;
  readonly Filters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribeAutomationExecutions {
  readonly Filters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribeAutomationStepExecutions {
  readonly AutomationExecutionId: string;
  readonly Filters?: [];
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly ReverseOrder?: boolean;
}
export interface DescribeAvailablePatches {
  readonly Filters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribeDocument {
  readonly Name: string;
  readonly DocumentVersion?: string;
  readonly VersionName?: string;
}
export interface DescribeDocumentPermission {
  readonly Name: string;
  readonly PermissionType: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribeEffectiveInstanceAssociations {
  readonly InstanceId: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribeEffectivePatchesForPatchBaseline {
  readonly BaselineId: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribeInstanceAssociationsStatus {
  readonly InstanceId: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribeInstanceInformation {
  readonly InstanceInformationFilterList?: [];
  readonly Filters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribeInstancePatchStates {
  readonly InstanceIds: [];
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface DescribeInstancePatchStatesForPatchGroup {
  readonly PatchGroup: string;
  readonly Filters?: [];
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface DescribeInstancePatches {
  readonly InstanceId: string;
  readonly Filters?: [];
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface DescribeInventoryDeletions {
  readonly DeletionId?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface DescribeMaintenanceWindowExecutionTaskInvocations {
  readonly WindowExecutionId: string;
  readonly TaskId: string;
  readonly Filters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribeMaintenanceWindowExecutionTasks {
  readonly WindowExecutionId: string;
  readonly Filters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribeMaintenanceWindowExecutions {
  readonly WindowId: string;
  readonly Filters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribeMaintenanceWindowSchedule {
  readonly WindowId?: string;
  readonly Targets?: [];
  readonly ResourceType?: string;
  readonly Filters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribeMaintenanceWindowTargets {
  readonly WindowId: string;
  readonly Filters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribeMaintenanceWindowTasks {
  readonly WindowId: string;
  readonly Filters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribeMaintenanceWindows {
  readonly Filters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribeMaintenanceWindowsForTarget {
  readonly Targets: [];
  readonly ResourceType: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribeOpsItems {
  readonly OpsItemFilters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribeParameters {
  readonly Filters?: [];
  readonly ParameterFilters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribePatchBaselines {
  readonly Filters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribePatchGroupState {
  readonly PatchGroup: string;
}
export interface DescribePatchGroups {
  readonly MaxResults?: number;
  readonly Filters?: [];
  readonly NextToken?: string;
}
export interface DescribePatchProperties {
  readonly OperatingSystem: string;
  readonly Property: string;
  readonly PatchSet?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribeSessions {
  readonly State: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
  readonly Filters?: [];
}
export interface DisassociateOpsItemRelatedItem {
  readonly OpsItemId: string;
  readonly AssociationId: string;
}
export interface GetAutomationExecution {
  readonly AutomationExecutionId: string;
}
export interface GetCalendarState {
  readonly CalendarNames: [];
  readonly AtTime?: string;
}
export interface GetCommandInvocation {
  readonly CommandId: string;
  readonly InstanceId: string;
  readonly PluginName?: string;
}
export interface GetConnectionStatus {
  readonly Target: string;
}
export interface GetDefaultPatchBaseline {
  readonly OperatingSystem?: string;
}
export interface GetDeployablePatchSnapshotForInstance {
  readonly InstanceId: string;
  readonly SnapshotId: string;
  readonly BaselineOverride?: BaselineOverride;
}
export interface GetDocument {
  readonly Name: string;
  readonly VersionName?: string;
  readonly DocumentVersion?: string;
  readonly DocumentFormat?: string;
}
export interface GetInventory {
  readonly Filters?: [];
  readonly Aggregators?: [];
  readonly ResultAttributes?: [];
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface GetInventorySchema {
  readonly TypeName?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly Aggregator?: boolean;
  readonly SubType?: boolean;
}
export interface GetMaintenanceWindow {
  readonly WindowId: string;
}
export interface GetMaintenanceWindowExecution {
  readonly WindowExecutionId: string;
}
export interface GetMaintenanceWindowExecutionTask {
  readonly WindowExecutionId: string;
  readonly TaskId: string;
}
export interface GetMaintenanceWindowExecutionTaskInvocation {
  readonly WindowExecutionId: string;
  readonly TaskId: string;
  readonly InvocationId: string;
}
export interface GetMaintenanceWindowTask {
  readonly WindowId: string;
  readonly WindowTaskId: string;
}
export interface GetOpsItem {
  readonly OpsItemId: string;
}
export interface GetOpsMetadata {
  readonly OpsMetadataArn: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface GetOpsSummary {
  readonly SyncName?: string;
  readonly Filters?: [];
  readonly Aggregators?: [];
  readonly ResultAttributes?: [];
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface GetParameter {
  readonly Name: string;
  readonly WithDecryption?: boolean;
}
export interface GetParameterHistory {
  readonly Name: string;
  readonly WithDecryption?: boolean;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface GetParameters {
  readonly Names: [];
  readonly WithDecryption?: boolean;
}
export interface GetParametersByPath {
  readonly Path: string;
  readonly Recursive?: boolean;
  readonly ParameterFilters?: [];
  readonly WithDecryption?: boolean;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface GetPatchBaseline {
  readonly BaselineId: string;
}
export interface GetPatchBaselineForPatchGroup {
  readonly PatchGroup: string;
  readonly OperatingSystem?: string;
}
export interface GetServiceSetting {
  readonly SettingId: string;
}
export interface LabelParameterVersion {
  readonly Name: string;
  readonly ParameterVersion?: number;
  readonly Labels: [];
}
export interface ListAssociationVersions {
  readonly AssociationId: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface ListAssociations {
  readonly AssociationFilterList?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface ListCommandInvocations {
  readonly CommandId?: string;
  readonly InstanceId?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
  readonly Filters?: [];
  readonly Details?: boolean;
}
export interface ListCommands {
  readonly CommandId?: string;
  readonly InstanceId?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
  readonly Filters?: [];
}
export interface ListComplianceItems {
  readonly Filters?: [];
  readonly ResourceIds?: [];
  readonly ResourceTypes?: [];
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface ListComplianceSummaries {
  readonly Filters?: [];
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface ListDocumentMetadataHistory {
  readonly Name: string;
  readonly DocumentVersion?: string;
  readonly Metadata: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface ListDocumentVersions {
  readonly Name: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface ListDocuments {
  readonly DocumentFilterList?: [];
  readonly Filters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface ListInventoryEntries {
  readonly InstanceId: string;
  readonly TypeName: string;
  readonly Filters?: [];
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface ListOpsItemEvents {
  readonly Filters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface ListOpsItemRelatedItems {
  readonly OpsItemId?: string;
  readonly Filters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface ListOpsMetadata {
  readonly Filters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface ListResourceComplianceSummaries {
  readonly Filters?: [];
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface ListResourceDataSync {
  readonly SyncType?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface ListTagsForResource {
  readonly ResourceType: string;
  readonly ResourceId: string;
}
export interface ModifyDocumentPermission {
  readonly Name: string;
  readonly PermissionType: string;
  readonly AccountIdsToAdd?: [];
  readonly AccountIdsToRemove?: [];
  readonly SharedDocumentVersion?: string;
}
export interface PutComplianceItems {
  readonly ResourceId: string;
  readonly ResourceType: string;
  readonly ComplianceType: string;
  readonly ExecutionSummary: ComplianceExecutionSummary;
  readonly Items: [];
  readonly ItemContentHash?: string;
  readonly UploadType?: string;
}
export interface PutInventory {
  readonly InstanceId: string;
  readonly Items: [];
}
export interface PutParameter {
  readonly Name: string;
  readonly Description?: string;
  readonly Value: string;
  readonly Type?: string;
  readonly KeyId?: string;
  readonly Overwrite?: boolean;
  readonly AllowedPattern?: string;
  readonly Tags?: [];
  readonly Tier?: string;
  readonly Policies?: string;
  readonly DataType?: string;
}
export interface RegisterDefaultPatchBaseline {
  readonly BaselineId: string;
}
export interface RegisterPatchBaselineForPatchGroup {
  readonly BaselineId: string;
  readonly PatchGroup: string;
}
export interface RegisterTargetWithMaintenanceWindow {
  readonly WindowId: string;
  readonly ResourceType: string;
  readonly Targets: [];
  readonly OwnerInformation?: string;
  readonly Name?: string;
  readonly Description?: string;
  readonly ClientToken?: string;
}
export interface RegisterTaskWithMaintenanceWindow {
  readonly WindowId: string;
  readonly Targets?: [];
  readonly TaskArn: string;
  readonly ServiceRoleArn?: string;
  readonly TaskType: string;
  readonly TaskParameters?: {[key: string]: any};
  readonly TaskInvocationParameters?: MaintenanceWindowTaskInvocationParameters;
  readonly Priority?: number;
  readonly MaxConcurrency?: string;
  readonly MaxErrors?: string;
  readonly LoggingInfo?: LoggingInfo;
  readonly Name?: string;
  readonly Description?: string;
  readonly ClientToken?: string;
  readonly CutoffBehavior?: string;
}
export interface RemoveTagsFromResource {
  readonly ResourceType: string;
  readonly ResourceId: string;
  readonly TagKeys: [];
}
export interface ResetServiceSetting {
  readonly SettingId: string;
}
export interface ResumeSession {
  readonly SessionId: string;
}
export interface SendAutomationSignal {
  readonly AutomationExecutionId: string;
  readonly SignalType: string;
  readonly Payload?: {[key: string]: any};
}
export interface SendCommand {
  readonly InstanceIds?: [];
  readonly Targets?: [];
  readonly DocumentName: string;
  readonly DocumentVersion?: string;
  readonly DocumentHash?: string;
  readonly DocumentHashType?: string;
  readonly TimeoutSeconds?: number;
  readonly Comment?: string;
  readonly Parameters?: {[key: string]: any};
  readonly OutputS3Region?: string;
  readonly OutputS3BucketName?: string;
  readonly OutputS3KeyPrefix?: string;
  readonly MaxConcurrency?: string;
  readonly MaxErrors?: string;
  readonly ServiceRoleArn?: string;
  readonly NotificationConfig?: NotificationConfig;
  readonly CloudWatchOutputConfig?: CloudWatchOutputConfig;
}
export interface StartAssociationsOnce {
  readonly AssociationIds: [];
}
export interface StartAutomationExecution {
  readonly DocumentName: string;
  readonly DocumentVersion?: string;
  readonly Parameters?: {[key: string]: any};
  readonly ClientToken?: string;
  readonly Mode?: string;
  readonly TargetParameterName?: string;
  readonly Targets?: [];
  readonly TargetMaps?: [];
  readonly MaxConcurrency?: string;
  readonly MaxErrors?: string;
  readonly TargetLocations?: [];
  readonly Tags?: [];
}
export interface StartChangeRequestExecution {
  readonly ScheduledTime?: Date;
  readonly DocumentName: string;
  readonly DocumentVersion?: string;
  readonly Parameters?: {[key: string]: any};
  readonly ChangeRequestName?: string;
  readonly ClientToken?: string;
  readonly AutoApprove?: boolean;
  readonly Runbooks: [];
  readonly Tags?: [];
  readonly ScheduledEndTime?: Date;
  readonly ChangeDetails?: string;
}
export interface StartSession {
  readonly Target: string;
  readonly DocumentName?: string;
  readonly Reason?: string;
  readonly Parameters?: {[key: string]: any};
}
export interface StopAutomationExecution {
  readonly AutomationExecutionId: string;
  readonly Type?: string;
}
export interface TerminateSession {
  readonly SessionId: string;
}
export interface UnlabelParameterVersion {
  readonly Name: string;
  readonly ParameterVersion: number;
  readonly Labels: [];
}
export interface UpdateAssociation {
  readonly AssociationId: string;
  readonly Parameters?: {[key: string]: any};
  readonly DocumentVersion?: string;
  readonly ScheduleExpression?: string;
  readonly OutputLocation?: InstanceAssociationOutputLocation;
  readonly Name?: string;
  readonly Targets?: [];
  readonly AssociationName?: string;
  readonly AssociationVersion?: string;
  readonly AutomationTargetParameterName?: string;
  readonly MaxErrors?: string;
  readonly MaxConcurrency?: string;
  readonly ComplianceSeverity?: string;
  readonly SyncCompliance?: string;
  readonly ApplyOnlyAtCronInterval?: boolean;
  readonly CalendarNames?: [];
  readonly TargetLocations?: [];
}
export interface UpdateAssociationStatus {
  readonly Name: string;
  readonly InstanceId: string;
  readonly AssociationStatus: AssociationStatus;
}
export interface UpdateDocument {
  readonly Content: string;
  readonly Attachments?: [];
  readonly Name: string;
  readonly DisplayName?: string;
  readonly VersionName?: string;
  readonly DocumentVersion?: string;
  readonly DocumentFormat?: string;
  readonly TargetType?: string;
}
export interface UpdateDocumentDefaultVersion {
  readonly Name: string;
  readonly DocumentVersion: string;
}
export interface UpdateDocumentMetadata {
  readonly Name: string;
  readonly DocumentVersion?: string;
  readonly DocumentReviews: DocumentReviews;
}
export interface UpdateMaintenanceWindow {
  readonly WindowId: string;
  readonly Name?: string;
  readonly Description?: string;
  readonly StartDate?: string;
  readonly EndDate?: string;
  readonly Schedule?: string;
  readonly ScheduleTimezone?: string;
  readonly ScheduleOffset?: number;
  readonly Duration?: number;
  readonly Cutoff?: number;
  readonly AllowUnassociatedTargets?: boolean;
  readonly Enabled?: boolean;
  readonly Replace?: boolean;
}
export interface UpdateMaintenanceWindowTarget {
  readonly WindowId: string;
  readonly WindowTargetId: string;
  readonly Targets?: [];
  readonly OwnerInformation?: string;
  readonly Name?: string;
  readonly Description?: string;
  readonly Replace?: boolean;
}
export interface UpdateMaintenanceWindowTask {
  readonly WindowId: string;
  readonly WindowTaskId: string;
  readonly Targets?: [];
  readonly TaskArn?: string;
  readonly ServiceRoleArn?: string;
  readonly TaskParameters?: {[key: string]: any};
  readonly TaskInvocationParameters?: MaintenanceWindowTaskInvocationParameters;
  readonly Priority?: number;
  readonly MaxConcurrency?: string;
  readonly MaxErrors?: string;
  readonly LoggingInfo?: LoggingInfo;
  readonly Name?: string;
  readonly Description?: string;
  readonly Replace?: boolean;
  readonly CutoffBehavior?: string;
}
export interface UpdateManagedInstanceRole {
  readonly InstanceId: string;
  readonly IamRole: string;
}
export interface UpdateOpsItem {
  readonly Description?: string;
  readonly OperationalData?: {[key: string]: any};
  readonly OperationalDataToDelete?: [];
  readonly Notifications?: [];
  readonly Priority?: number;
  readonly RelatedOpsItems?: [];
  readonly Status?: string;
  readonly OpsItemId: string;
  readonly Title?: string;
  readonly Category?: string;
  readonly Severity?: string;
  readonly ActualStartTime?: Date;
  readonly ActualEndTime?: Date;
  readonly PlannedStartTime?: Date;
  readonly PlannedEndTime?: Date;
}
export interface UpdateOpsMetadata {
  readonly OpsMetadataArn: string;
  readonly MetadataToUpdate?: {[key: string]: any};
  readonly KeysToDelete?: [];
}
export interface UpdatePatchBaseline {
  readonly BaselineId: string;
  readonly Name?: string;
  readonly GlobalFilters?: PatchFilterGroup;
  readonly ApprovalRules?: PatchRuleGroup;
  readonly ApprovedPatches?: [];
  readonly ApprovedPatchesComplianceLevel?: string;
  readonly ApprovedPatchesEnableNonSecurity?: boolean;
  readonly RejectedPatches?: [];
  readonly RejectedPatchesAction?: string;
  readonly Description?: string;
  readonly Sources?: [];
  readonly Replace?: boolean;
}
export interface UpdateResourceDataSync {
  readonly SyncName: string;
  readonly SyncType: string;
  readonly SyncSource: ResourceDataSyncSource;
}
export interface UpdateServiceSetting {
  readonly SettingId: string;
  readonly SettingValue: string;
}



interface AccountSharingInfo {
  readonly AccountId: string;
  readonly SharedDocumentVersion: string;
}

interface Activation {
  readonly ActivationId: string;
  readonly Description: string;
  readonly DefaultInstanceName: string;
  readonly IamRole: string;
  readonly RegistrationLimit: number;
  readonly RegistrationsCount: number;
  readonly ExpirationDate: Date;
  readonly Expired: boolean;
  readonly CreatedDate: Date;
  readonly Tags: [];
}

interface AddTagsToResourceRequest {
  readonly ResourceType: string;
  readonly ResourceId: string;
  readonly Tags: [];
}

interface AddTagsToResourceResult {
}

interface AlreadyExistsException {
  readonly Message: string;
}

interface AssociateOpsItemRelatedItemRequest {
  readonly OpsItemId: string;
  readonly AssociationType: string;
  readonly ResourceType: string;
  readonly ResourceUri: string;
}

interface AssociateOpsItemRelatedItemResponse {
  readonly AssociationId: string;
}

interface AssociatedInstances {
}

interface Association {
  readonly Name: string;
  readonly InstanceId: string;
  readonly AssociationId: string;
  readonly AssociationVersion: string;
  readonly DocumentVersion: string;
  readonly Targets: [];
  readonly LastExecutionDate: Date;
  readonly Overview: AssociationOverview;
  readonly ScheduleExpression: string;
  readonly AssociationName: string;
}

interface AssociationAlreadyExists {
}

interface AssociationDescription {
  readonly Name: string;
  readonly InstanceId: string;
  readonly AssociationVersion: string;
  readonly Date: Date;
  readonly LastUpdateAssociationDate: Date;
  readonly Status: AssociationStatus;
  readonly Overview: AssociationOverview;
  readonly DocumentVersion: string;
  readonly AutomationTargetParameterName: string;
  readonly Parameters: {[key: string]: any};
  readonly AssociationId: string;
  readonly Targets: [];
  readonly ScheduleExpression: string;
  readonly OutputLocation: InstanceAssociationOutputLocation;
  readonly LastExecutionDate: Date;
  readonly LastSuccessfulExecutionDate: Date;
  readonly AssociationName: string;
  readonly MaxErrors: string;
  readonly MaxConcurrency: string;
  readonly ComplianceSeverity: string;
  readonly SyncCompliance: string;
  readonly ApplyOnlyAtCronInterval: boolean;
  readonly CalendarNames: [];
  readonly TargetLocations: [];
}

interface AssociationDoesNotExist {
  readonly Message: string;
}

interface AssociationExecution {
  readonly AssociationId: string;
  readonly AssociationVersion: string;
  readonly ExecutionId: string;
  readonly Status: string;
  readonly DetailedStatus: string;
  readonly CreatedTime: Date;
  readonly LastExecutionDate: Date;
  readonly ResourceCountByStatus: string;
}

interface AssociationExecutionDoesNotExist {
  readonly Message: string;
}

interface AssociationExecutionFilter {
  readonly Key: string;
  readonly Value: string;
  readonly Type: string;
}

interface AssociationExecutionTarget {
  readonly AssociationId: string;
  readonly AssociationVersion: string;
  readonly ExecutionId: string;
  readonly ResourceId: string;
  readonly ResourceType: string;
  readonly Status: string;
  readonly DetailedStatus: string;
  readonly LastExecutionDate: Date;
  readonly OutputSource: OutputSource;
}

interface AssociationExecutionTargetsFilter {
  readonly Key: string;
  readonly Value: string;
}

interface AssociationFilter {
  readonly key: string;
  readonly value: string;
}

interface AssociationLimitExceeded {
}

interface AssociationOverview {
  readonly Status: string;
  readonly DetailedStatus: string;
  readonly AssociationStatusAggregatedCount: {[key: string]: any};
}

interface AssociationStatus {
  readonly Date: Date;
  readonly Name: string;
  readonly Message: string;
  readonly AdditionalInfo: string;
}

interface AssociationVersionInfo {
  readonly AssociationId: string;
  readonly AssociationVersion: string;
  readonly CreatedDate: Date;
  readonly Name: string;
  readonly DocumentVersion: string;
  readonly Parameters: {[key: string]: any};
  readonly Targets: [];
  readonly ScheduleExpression: string;
  readonly OutputLocation: InstanceAssociationOutputLocation;
  readonly AssociationName: string;
  readonly MaxErrors: string;
  readonly MaxConcurrency: string;
  readonly ComplianceSeverity: string;
  readonly SyncCompliance: string;
  readonly ApplyOnlyAtCronInterval: boolean;
  readonly CalendarNames: [];
  readonly TargetLocations: [];
}

interface AssociationVersionLimitExceeded {
  readonly Message: string;
}

interface AttachmentContent {
  readonly Name: string;
  readonly Size: number;
  readonly Hash: string;
  readonly HashType: string;
  readonly Url: string;
}

interface AttachmentInformation {
  readonly Name: string;
}

interface AttachmentsSource {
  readonly Key: string;
  readonly Values: [];
  readonly Name: string;
}

interface AutomationDefinitionNotApprovedException {
  readonly Message: string;
}

interface AutomationDefinitionNotFoundException {
  readonly Message: string;
}

interface AutomationDefinitionVersionNotFoundException {
  readonly Message: string;
}

interface AutomationExecution {
  readonly AutomationExecutionId: string;
  readonly DocumentName: string;
  readonly DocumentVersion: string;
  readonly ExecutionStartTime: Date;
  readonly ExecutionEndTime: Date;
  readonly AutomationExecutionStatus: string;
  readonly StepExecutions: [];
  readonly StepExecutionsTruncated: boolean;
  readonly Parameters: {[key: string]: any};
  readonly Outputs: {[key: string]: any};
  readonly FailureMessage: string;
  readonly Mode: string;
  readonly ParentAutomationExecutionId: string;
  readonly ExecutedBy: string;
  readonly CurrentStepName: string;
  readonly CurrentAction: string;
  readonly TargetParameterName: string;
  readonly Targets: [];
  readonly TargetMaps: [];
  readonly ResolvedTargets: ResolvedTargets;
  readonly MaxConcurrency: string;
  readonly MaxErrors: string;
  readonly Target: string;
  readonly TargetLocations: [];
  readonly ProgressCounters: ProgressCounters;
  readonly AutomationSubtype: string;
  readonly ScheduledTime: Date;
  readonly Runbooks: [];
  readonly OpsItemId: string;
  readonly AssociationId: string;
  readonly ChangeRequestName: string;
}

interface AutomationExecutionFilter {
  readonly Key: string;
  readonly Values: [];
}

interface AutomationExecutionLimitExceededException {
  readonly Message: string;
}

interface AutomationExecutionMetadata {
  readonly AutomationExecutionId: string;
  readonly DocumentName: string;
  readonly DocumentVersion: string;
  readonly AutomationExecutionStatus: string;
  readonly ExecutionStartTime: Date;
  readonly ExecutionEndTime: Date;
  readonly ExecutedBy: string;
  readonly LogFile: string;
  readonly Outputs: {[key: string]: any};
  readonly Mode: string;
  readonly ParentAutomationExecutionId: string;
  readonly CurrentStepName: string;
  readonly CurrentAction: string;
  readonly FailureMessage: string;
  readonly TargetParameterName: string;
  readonly Targets: [];
  readonly TargetMaps: [];
  readonly ResolvedTargets: ResolvedTargets;
  readonly MaxConcurrency: string;
  readonly MaxErrors: string;
  readonly Target: string;
  readonly AutomationType: string;
  readonly AutomationSubtype: string;
  readonly ScheduledTime: Date;
  readonly Runbooks: [];
  readonly OpsItemId: string;
  readonly AssociationId: string;
  readonly ChangeRequestName: string;
}

interface AutomationExecutionNotFoundException {
  readonly Message: string;
}

interface AutomationStepNotFoundException {
  readonly Message: string;
}

interface BaselineOverride {
  readonly OperatingSystem: string;
  readonly GlobalFilters: PatchFilterGroup;
  readonly ApprovalRules: PatchRuleGroup;
  readonly ApprovedPatches: [];
  readonly ApprovedPatchesComplianceLevel: string;
  readonly RejectedPatches: [];
  readonly RejectedPatchesAction: string;
  readonly ApprovedPatchesEnableNonSecurity: boolean;
  readonly Sources: [];
}

interface CancelCommandRequest {
  readonly CommandId: string;
  readonly InstanceIds: [];
}

interface CancelCommandResult {
}

interface CancelMaintenanceWindowExecutionRequest {
  readonly WindowExecutionId: string;
}

interface CancelMaintenanceWindowExecutionResult {
  readonly WindowExecutionId: string;
}

interface CloudWatchOutputConfig {
  readonly CloudWatchLogGroupName: string;
  readonly CloudWatchOutputEnabled: boolean;
}

interface Command {
  readonly CommandId: string;
  readonly DocumentName: string;
  readonly DocumentVersion: string;
  readonly Comment: string;
  readonly ExpiresAfter: Date;
  readonly Parameters: {[key: string]: any};
  readonly InstanceIds: [];
  readonly Targets: [];
  readonly RequestedDateTime: Date;
  readonly Status: string;
  readonly StatusDetails: string;
  readonly OutputS3Region: string;
  readonly OutputS3BucketName: string;
  readonly OutputS3KeyPrefix: string;
  readonly MaxConcurrency: string;
  readonly MaxErrors: string;
  readonly TargetCount: number;
  readonly CompletedCount: number;
  readonly ErrorCount: number;
  readonly DeliveryTimedOutCount: number;
  readonly ServiceRole: string;
  readonly NotificationConfig: NotificationConfig;
  readonly CloudWatchOutputConfig: CloudWatchOutputConfig;
  readonly TimeoutSeconds: number;
}

interface CommandFilter {
  readonly key: string;
  readonly value: string;
}

interface CommandInvocation {
  readonly CommandId: string;
  readonly InstanceId: string;
  readonly InstanceName: string;
  readonly Comment: string;
  readonly DocumentName: string;
  readonly DocumentVersion: string;
  readonly RequestedDateTime: Date;
  readonly Status: string;
  readonly StatusDetails: string;
  readonly TraceOutput: string;
  readonly StandardOutputUrl: string;
  readonly StandardErrorUrl: string;
  readonly CommandPlugins: [];
  readonly ServiceRole: string;
  readonly NotificationConfig: NotificationConfig;
  readonly CloudWatchOutputConfig: CloudWatchOutputConfig;
}

interface CommandPlugin {
  readonly Name: string;
  readonly Status: string;
  readonly StatusDetails: string;
  readonly ResponseCode: number;
  readonly ResponseStartDateTime: Date;
  readonly ResponseFinishDateTime: Date;
  readonly Output: string;
  readonly StandardOutputUrl: string;
  readonly StandardErrorUrl: string;
  readonly OutputS3Region: string;
  readonly OutputS3BucketName: string;
  readonly OutputS3KeyPrefix: string;
}

interface ComplianceExecutionSummary {
  readonly ExecutionTime: Date;
  readonly ExecutionId: string;
  readonly ExecutionType: string;
}

interface ComplianceItem {
  readonly ComplianceType: string;
  readonly ResourceType: string;
  readonly ResourceId: string;
  readonly Id: string;
  readonly Title: string;
  readonly Status: string;
  readonly Severity: string;
  readonly ExecutionSummary: ComplianceExecutionSummary;
  readonly Details: {[key: string]: any};
}

interface ComplianceItemEntry {
  readonly Id: string;
  readonly Title: string;
  readonly Severity: string;
  readonly Status: string;
  readonly Details: {[key: string]: any};
}

interface ComplianceStringFilter {
  readonly Key: string;
  readonly Values: [];
  readonly Type: string;
}

interface ComplianceSummaryItem {
  readonly ComplianceType: string;
  readonly CompliantSummary: CompliantSummary;
  readonly NonCompliantSummary: NonCompliantSummary;
}

interface ComplianceTypeCountLimitExceededException {
  readonly Message: string;
}

interface CompliantSummary {
  readonly CompliantCount: number;
  readonly SeveritySummary: SeveritySummary;
}

interface CreateActivationRequest {
  readonly Description: string;
  readonly DefaultInstanceName: string;
  readonly IamRole: string;
  readonly RegistrationLimit: number;
  readonly ExpirationDate: Date;
  readonly Tags: [];
  readonly RegistrationMetadata: [];
}

interface CreateActivationResult {
  readonly ActivationId: string;
  readonly ActivationCode: string;
}

interface CreateAssociationBatchRequest {
  readonly Entries: [];
}

interface CreateAssociationBatchRequestEntry {
  readonly Name: string;
  readonly InstanceId: string;
  readonly Parameters: {[key: string]: any};
  readonly AutomationTargetParameterName: string;
  readonly DocumentVersion: string;
  readonly Targets: [];
  readonly ScheduleExpression: string;
  readonly OutputLocation: InstanceAssociationOutputLocation;
  readonly AssociationName: string;
  readonly MaxErrors: string;
  readonly MaxConcurrency: string;
  readonly ComplianceSeverity: string;
  readonly SyncCompliance: string;
  readonly ApplyOnlyAtCronInterval: boolean;
  readonly CalendarNames: [];
  readonly TargetLocations: [];
}

interface CreateAssociationBatchResult {
  readonly Successful: [];
  readonly Failed: [];
}

interface CreateAssociationRequest {
  readonly Name: string;
  readonly DocumentVersion: string;
  readonly InstanceId: string;
  readonly Parameters: {[key: string]: any};
  readonly Targets: [];
  readonly ScheduleExpression: string;
  readonly OutputLocation: InstanceAssociationOutputLocation;
  readonly AssociationName: string;
  readonly AutomationTargetParameterName: string;
  readonly MaxErrors: string;
  readonly MaxConcurrency: string;
  readonly ComplianceSeverity: string;
  readonly SyncCompliance: string;
  readonly ApplyOnlyAtCronInterval: boolean;
  readonly CalendarNames: [];
  readonly TargetLocations: [];
}

interface CreateAssociationResult {
  readonly AssociationDescription: AssociationDescription;
}

interface CreateDocumentRequest {
  readonly Content: string;
  readonly Requires: [];
  readonly Attachments: [];
  readonly Name: string;
  readonly DisplayName: string;
  readonly VersionName: string;
  readonly DocumentType: string;
  readonly DocumentFormat: string;
  readonly TargetType: string;
  readonly Tags: [];
}

interface CreateDocumentResult {
  readonly DocumentDescription: DocumentDescription;
}

interface CreateMaintenanceWindowRequest {
  readonly Name: string;
  readonly Description: string;
  readonly StartDate: string;
  readonly EndDate: string;
  readonly Schedule: string;
  readonly ScheduleTimezone: string;
  readonly ScheduleOffset: number;
  readonly Duration: number;
  readonly Cutoff: number;
  readonly AllowUnassociatedTargets: boolean;
  readonly ClientToken: string;
  readonly Tags: [];
}

interface CreateMaintenanceWindowResult {
  readonly WindowId: string;
}

interface CreateOpsItemRequest {
  readonly Description: string;
  readonly OpsItemType: string;
  readonly OperationalData: {[key: string]: any};
  readonly Notifications: [];
  readonly Priority: number;
  readonly RelatedOpsItems: [];
  readonly Source: string;
  readonly Title: string;
  readonly Tags: [];
  readonly Category: string;
  readonly Severity: string;
  readonly ActualStartTime: Date;
  readonly ActualEndTime: Date;
  readonly PlannedStartTime: Date;
  readonly PlannedEndTime: Date;
}

interface CreateOpsItemResponse {
  readonly OpsItemId: string;
}

interface CreateOpsMetadataRequest {
  readonly ResourceId: string;
  readonly Metadata: {[key: string]: any};
  readonly Tags: [];
}

interface CreateOpsMetadataResult {
  readonly OpsMetadataArn: string;
}

interface CreatePatchBaselineRequest {
  readonly OperatingSystem: string;
  readonly Name: string;
  readonly GlobalFilters: PatchFilterGroup;
  readonly ApprovalRules: PatchRuleGroup;
  readonly ApprovedPatches: [];
  readonly ApprovedPatchesComplianceLevel: string;
  readonly ApprovedPatchesEnableNonSecurity: boolean;
  readonly RejectedPatches: [];
  readonly RejectedPatchesAction: string;
  readonly Description: string;
  readonly Sources: [];
  readonly ClientToken: string;
  readonly Tags: [];
}

interface CreatePatchBaselineResult {
  readonly BaselineId: string;
}

interface CreateResourceDataSyncRequest {
  readonly SyncName: string;
  readonly S3Destination: ResourceDataSyncS3Destination;
  readonly SyncType: string;
  readonly SyncSource: ResourceDataSyncSource;
}

interface CreateResourceDataSyncResult {
}

interface CustomSchemaCountLimitExceededException {
  readonly Message: string;
}

interface DeleteActivationRequest {
  readonly ActivationId: string;
}

interface DeleteActivationResult {
}

interface DeleteAssociationRequest {
  readonly Name: string;
  readonly InstanceId: string;
  readonly AssociationId: string;
}

interface DeleteAssociationResult {
}

interface DeleteDocumentRequest {
  readonly Name: string;
  readonly DocumentVersion: string;
  readonly VersionName: string;
  readonly Force: boolean;
}

interface DeleteDocumentResult {
}

interface DeleteInventoryRequest {
  readonly TypeName: string;
  readonly SchemaDeleteOption: string;
  readonly DryRun: boolean;
  readonly ClientToken: string;
}

interface DeleteInventoryResult {
  readonly DeletionId: string;
  readonly TypeName: string;
  readonly DeletionSummary: InventoryDeletionSummary;
}

interface DeleteMaintenanceWindowRequest {
  readonly WindowId: string;
}

interface DeleteMaintenanceWindowResult {
  readonly WindowId: string;
}

interface DeleteOpsMetadataRequest {
  readonly OpsMetadataArn: string;
}

interface DeleteOpsMetadataResult {
}

interface DeleteParameterRequest {
  readonly Name: string;
}

interface DeleteParameterResult {
}

interface DeleteParametersRequest {
  readonly Names: [];
}

interface DeleteParametersResult {
  readonly DeletedParameters: [];
  readonly InvalidParameters: [];
}

interface DeletePatchBaselineRequest {
  readonly BaselineId: string;
}

interface DeletePatchBaselineResult {
  readonly BaselineId: string;
}

interface DeleteResourceDataSyncRequest {
  readonly SyncName: string;
  readonly SyncType: string;
}

interface DeleteResourceDataSyncResult {
}

interface DeregisterManagedInstanceRequest {
  readonly InstanceId: string;
}

interface DeregisterManagedInstanceResult {
}

interface DeregisterPatchBaselineForPatchGroupRequest {
  readonly BaselineId: string;
  readonly PatchGroup: string;
}

interface DeregisterPatchBaselineForPatchGroupResult {
  readonly BaselineId: string;
  readonly PatchGroup: string;
}

interface DeregisterTargetFromMaintenanceWindowRequest {
  readonly WindowId: string;
  readonly WindowTargetId: string;
  readonly Safe: boolean;
}

interface DeregisterTargetFromMaintenanceWindowResult {
  readonly WindowId: string;
  readonly WindowTargetId: string;
}

interface DeregisterTaskFromMaintenanceWindowRequest {
  readonly WindowId: string;
  readonly WindowTaskId: string;
}

interface DeregisterTaskFromMaintenanceWindowResult {
  readonly WindowId: string;
  readonly WindowTaskId: string;
}

interface DescribeActivationsFilter {
  readonly FilterKey: string;
  readonly FilterValues: [];
}

interface DescribeActivationsRequest {
  readonly Filters: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeActivationsResult {
  readonly ActivationList: [];
  readonly NextToken: string;
}

interface DescribeAssociationExecutionTargetsRequest {
  readonly AssociationId: string;
  readonly ExecutionId: string;
  readonly Filters: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeAssociationExecutionTargetsResult {
  readonly AssociationExecutionTargets: [];
  readonly NextToken: string;
}

interface DescribeAssociationExecutionsRequest {
  readonly AssociationId: string;
  readonly Filters: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeAssociationExecutionsResult {
  readonly AssociationExecutions: [];
  readonly NextToken: string;
}

interface DescribeAssociationRequest {
  readonly Name: string;
  readonly InstanceId: string;
  readonly AssociationId: string;
  readonly AssociationVersion: string;
}

interface DescribeAssociationResult {
  readonly AssociationDescription: AssociationDescription;
}

interface DescribeAutomationExecutionsRequest {
  readonly Filters: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeAutomationExecutionsResult {
  readonly AutomationExecutionMetadataList: [];
  readonly NextToken: string;
}

interface DescribeAutomationStepExecutionsRequest {
  readonly AutomationExecutionId: string;
  readonly Filters: [];
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly ReverseOrder: boolean;
}

interface DescribeAutomationStepExecutionsResult {
  readonly StepExecutions: [];
  readonly NextToken: string;
}

interface DescribeAvailablePatchesRequest {
  readonly Filters: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeAvailablePatchesResult {
  readonly Patches: [];
  readonly NextToken: string;
}

interface DescribeDocumentPermissionRequest {
  readonly Name: string;
  readonly PermissionType: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeDocumentPermissionResponse {
  readonly AccountIds: [];
  readonly AccountSharingInfoList: [];
  readonly NextToken: string;
}

interface DescribeDocumentRequest {
  readonly Name: string;
  readonly DocumentVersion: string;
  readonly VersionName: string;
}

interface DescribeDocumentResult {
  readonly Document: DocumentDescription;
}

interface DescribeEffectiveInstanceAssociationsRequest {
  readonly InstanceId: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeEffectiveInstanceAssociationsResult {
  readonly Associations: [];
  readonly NextToken: string;
}

interface DescribeEffectivePatchesForPatchBaselineRequest {
  readonly BaselineId: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeEffectivePatchesForPatchBaselineResult {
  readonly EffectivePatches: [];
  readonly NextToken: string;
}

interface DescribeInstanceAssociationsStatusRequest {
  readonly InstanceId: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeInstanceAssociationsStatusResult {
  readonly InstanceAssociationStatusInfos: [];
  readonly NextToken: string;
}

interface DescribeInstanceInformationRequest {
  readonly InstanceInformationFilterList: [];
  readonly Filters: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeInstanceInformationResult {
  readonly InstanceInformationList: [];
  readonly NextToken: string;
}

interface DescribeInstancePatchStatesForPatchGroupRequest {
  readonly PatchGroup: string;
  readonly Filters: [];
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface DescribeInstancePatchStatesForPatchGroupResult {
  readonly InstancePatchStates: [];
  readonly NextToken: string;
}

interface DescribeInstancePatchStatesRequest {
  readonly InstanceIds: [];
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface DescribeInstancePatchStatesResult {
  readonly InstancePatchStates: [];
  readonly NextToken: string;
}

interface DescribeInstancePatchesRequest {
  readonly InstanceId: string;
  readonly Filters: [];
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface DescribeInstancePatchesResult {
  readonly Patches: [];
  readonly NextToken: string;
}

interface DescribeInventoryDeletionsRequest {
  readonly DeletionId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface DescribeInventoryDeletionsResult {
  readonly InventoryDeletions: [];
  readonly NextToken: string;
}

interface DescribeMaintenanceWindowExecutionTaskInvocationsRequest {
  readonly WindowExecutionId: string;
  readonly TaskId: string;
  readonly Filters: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeMaintenanceWindowExecutionTaskInvocationsResult {
  readonly WindowExecutionTaskInvocationIdentities: [];
  readonly NextToken: string;
}

interface DescribeMaintenanceWindowExecutionTasksRequest {
  readonly WindowExecutionId: string;
  readonly Filters: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeMaintenanceWindowExecutionTasksResult {
  readonly WindowExecutionTaskIdentities: [];
  readonly NextToken: string;
}

interface DescribeMaintenanceWindowExecutionsRequest {
  readonly WindowId: string;
  readonly Filters: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeMaintenanceWindowExecutionsResult {
  readonly WindowExecutions: [];
  readonly NextToken: string;
}

interface DescribeMaintenanceWindowScheduleRequest {
  readonly WindowId: string;
  readonly Targets: [];
  readonly ResourceType: string;
  readonly Filters: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeMaintenanceWindowScheduleResult {
  readonly ScheduledWindowExecutions: [];
  readonly NextToken: string;
}

interface DescribeMaintenanceWindowTargetsRequest {
  readonly WindowId: string;
  readonly Filters: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeMaintenanceWindowTargetsResult {
  readonly Targets: [];
  readonly NextToken: string;
}

interface DescribeMaintenanceWindowTasksRequest {
  readonly WindowId: string;
  readonly Filters: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeMaintenanceWindowTasksResult {
  readonly Tasks: [];
  readonly NextToken: string;
}

interface DescribeMaintenanceWindowsForTargetRequest {
  readonly Targets: [];
  readonly ResourceType: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeMaintenanceWindowsForTargetResult {
  readonly WindowIdentities: [];
  readonly NextToken: string;
}

interface DescribeMaintenanceWindowsRequest {
  readonly Filters: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeMaintenanceWindowsResult {
  readonly WindowIdentities: [];
  readonly NextToken: string;
}

interface DescribeOpsItemsRequest {
  readonly OpsItemFilters: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeOpsItemsResponse {
  readonly NextToken: string;
  readonly OpsItemSummaries: [];
}

interface DescribeParametersRequest {
  readonly Filters: [];
  readonly ParameterFilters: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeParametersResult {
  readonly Parameters: [];
  readonly NextToken: string;
}

interface DescribePatchBaselinesRequest {
  readonly Filters: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribePatchBaselinesResult {
  readonly BaselineIdentities: [];
  readonly NextToken: string;
}

interface DescribePatchGroupStateRequest {
  readonly PatchGroup: string;
}

interface DescribePatchGroupStateResult {
  readonly Instances: number;
  readonly InstancesWithInstalledPatches: number;
  readonly InstancesWithInstalledOtherPatches: number;
  readonly InstancesWithInstalledPendingRebootPatches: number;
  readonly InstancesWithInstalledRejectedPatches: number;
  readonly InstancesWithMissingPatches: number;
  readonly InstancesWithFailedPatches: number;
  readonly InstancesWithNotApplicablePatches: number;
  readonly InstancesWithUnreportedNotApplicablePatches: number;
  readonly InstancesWithCriticalNonCompliantPatches: number;
  readonly InstancesWithSecurityNonCompliantPatches: number;
  readonly InstancesWithOtherNonCompliantPatches: number;
}

interface DescribePatchGroupsRequest {
  readonly MaxResults: number;
  readonly Filters: [];
  readonly NextToken: string;
}

interface DescribePatchGroupsResult {
  readonly Mappings: [];
  readonly NextToken: string;
}

interface DescribePatchPropertiesRequest {
  readonly OperatingSystem: string;
  readonly Property: string;
  readonly PatchSet: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribePatchPropertiesResult {
  readonly Properties: [];
  readonly NextToken: string;
}

interface DescribeSessionsRequest {
  readonly State: string;
  readonly MaxResults: number;
  readonly NextToken: string;
  readonly Filters: [];
}

interface DescribeSessionsResponse {
  readonly Sessions: [];
  readonly NextToken: string;
}

interface DisassociateOpsItemRelatedItemRequest {
  readonly OpsItemId: string;
  readonly AssociationId: string;
}

interface DisassociateOpsItemRelatedItemResponse {
}

interface DocumentAlreadyExists {
  readonly Message: string;
}

interface DocumentDefaultVersionDescription {
  readonly Name: string;
  readonly DefaultVersion: string;
  readonly DefaultVersionName: string;
}

interface DocumentDescription {
  readonly Sha1: string;
  readonly Hash: string;
  readonly HashType: string;
  readonly Name: string;
  readonly DisplayName: string;
  readonly VersionName: string;
  readonly Owner: string;
  readonly CreatedDate: Date;
  readonly Status: string;
  readonly StatusInformation: string;
  readonly DocumentVersion: string;
  readonly Description: string;
  readonly Parameters: [];
  readonly PlatformTypes: [];
  readonly DocumentType: string;
  readonly SchemaVersion: string;
  readonly LatestVersion: string;
  readonly DefaultVersion: string;
  readonly DocumentFormat: string;
  readonly TargetType: string;
  readonly Tags: [];
  readonly AttachmentsInformation: [];
  readonly Requires: [];
  readonly Author: string;
  readonly ReviewInformation: [];
  readonly ApprovedVersion: string;
  readonly PendingReviewVersion: string;
  readonly ReviewStatus: string;
}

interface DocumentFilter {
  readonly key: string;
  readonly value: string;
}

interface DocumentIdentifier {
  readonly Name: string;
  readonly CreatedDate: Date;
  readonly DisplayName: string;
  readonly Owner: string;
  readonly VersionName: string;
  readonly PlatformTypes: [];
  readonly DocumentVersion: string;
  readonly DocumentType: string;
  readonly SchemaVersion: string;
  readonly DocumentFormat: string;
  readonly TargetType: string;
  readonly Tags: [];
  readonly Requires: [];
  readonly ReviewStatus: string;
  readonly Author: string;
}

interface DocumentKeyValuesFilter {
  readonly Key: string;
  readonly Values: [];
}

interface DocumentLimitExceeded {
  readonly Message: string;
}

interface DocumentMetadataResponseInfo {
  readonly ReviewerResponse: [];
}

interface DocumentParameter {
  readonly Name: string;
  readonly Type: string;
  readonly Description: string;
  readonly DefaultValue: string;
}

interface DocumentPermissionLimit {
  readonly Message: string;
}

interface DocumentRequires {
  readonly Name: string;
  readonly Version: string;
}

interface DocumentReviewCommentSource {
  readonly Type: string;
  readonly Content: string;
}

interface DocumentReviewerResponseSource {
  readonly CreateTime: Date;
  readonly UpdatedTime: Date;
  readonly ReviewStatus: string;
  readonly Comment: [];
  readonly Reviewer: string;
}

interface DocumentReviews {
  readonly Action: string;
  readonly Comment: [];
}

interface DocumentVersionInfo {
  readonly Name: string;
  readonly DisplayName: string;
  readonly DocumentVersion: string;
  readonly VersionName: string;
  readonly CreatedDate: Date;
  readonly IsDefaultVersion: boolean;
  readonly DocumentFormat: string;
  readonly Status: string;
  readonly StatusInformation: string;
  readonly ReviewStatus: string;
}

interface DocumentVersionLimitExceeded {
  readonly Message: string;
}

interface DoesNotExistException {
  readonly Message: string;
}

interface DuplicateDocumentContent {
  readonly Message: string;
}

interface DuplicateDocumentVersionName {
  readonly Message: string;
}

interface DuplicateInstanceId {
}

interface EffectivePatch {
  readonly Patch: Patch;
  readonly PatchStatus: PatchStatus;
}

interface FailedCreateAssociation {
  readonly Entry: CreateAssociationBatchRequestEntry;
  readonly Message: string;
  readonly Fault: string;
}

interface FailureDetails {
  readonly FailureStage: string;
  readonly FailureType: string;
  readonly Details: {[key: string]: any};
}

interface FeatureNotAvailableException {
  readonly Message: string;
}

interface GetAutomationExecutionRequest {
  readonly AutomationExecutionId: string;
}

interface GetAutomationExecutionResult {
  readonly AutomationExecution: AutomationExecution;
}

interface GetCalendarStateRequest {
  readonly CalendarNames: [];
  readonly AtTime: string;
}

interface GetCalendarStateResponse {
  readonly State: string;
  readonly AtTime: string;
  readonly NextTransitionTime: string;
}

interface GetCommandInvocationRequest {
  readonly CommandId: string;
  readonly InstanceId: string;
  readonly PluginName: string;
}

interface GetCommandInvocationResult {
  readonly CommandId: string;
  readonly InstanceId: string;
  readonly Comment: string;
  readonly DocumentName: string;
  readonly DocumentVersion: string;
  readonly PluginName: string;
  readonly ResponseCode: number;
  readonly ExecutionStartDateTime: string;
  readonly ExecutionElapsedTime: string;
  readonly ExecutionEndDateTime: string;
  readonly Status: string;
  readonly StatusDetails: string;
  readonly StandardOutputContent: string;
  readonly StandardOutputUrl: string;
  readonly StandardErrorContent: string;
  readonly StandardErrorUrl: string;
  readonly CloudWatchOutputConfig: CloudWatchOutputConfig;
}

interface GetConnectionStatusRequest {
  readonly Target: string;
}

interface GetConnectionStatusResponse {
  readonly Target: string;
  readonly Status: string;
}

interface GetDefaultPatchBaselineRequest {
  readonly OperatingSystem: string;
}

interface GetDefaultPatchBaselineResult {
  readonly BaselineId: string;
  readonly OperatingSystem: string;
}

interface GetDeployablePatchSnapshotForInstanceRequest {
  readonly InstanceId: string;
  readonly SnapshotId: string;
  readonly BaselineOverride: BaselineOverride;
}

interface GetDeployablePatchSnapshotForInstanceResult {
  readonly InstanceId: string;
  readonly SnapshotId: string;
  readonly SnapshotDownloadUrl: string;
  readonly Product: string;
}

interface GetDocumentRequest {
  readonly Name: string;
  readonly VersionName: string;
  readonly DocumentVersion: string;
  readonly DocumentFormat: string;
}

interface GetDocumentResult {
  readonly Name: string;
  readonly CreatedDate: Date;
  readonly DisplayName: string;
  readonly VersionName: string;
  readonly DocumentVersion: string;
  readonly Status: string;
  readonly StatusInformation: string;
  readonly Content: string;
  readonly DocumentType: string;
  readonly DocumentFormat: string;
  readonly Requires: [];
  readonly AttachmentsContent: [];
  readonly ReviewStatus: string;
}

interface GetInventoryRequest {
  readonly Filters: [];
  readonly Aggregators: [];
  readonly ResultAttributes: [];
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface GetInventoryResult {
  readonly Entities: [];
  readonly NextToken: string;
}

interface GetInventorySchemaRequest {
  readonly TypeName: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly Aggregator: boolean;
  readonly SubType: boolean;
}

interface GetInventorySchemaResult {
  readonly Schemas: [];
  readonly NextToken: string;
}

interface GetMaintenanceWindowExecutionRequest {
  readonly WindowExecutionId: string;
}

interface GetMaintenanceWindowExecutionResult {
  readonly WindowExecutionId: string;
  readonly TaskIds: [];
  readonly Status: string;
  readonly StatusDetails: string;
  readonly StartTime: Date;
  readonly EndTime: Date;
}

interface GetMaintenanceWindowExecutionTaskInvocationRequest {
  readonly WindowExecutionId: string;
  readonly TaskId: string;
  readonly InvocationId: string;
}

interface GetMaintenanceWindowExecutionTaskInvocationResult {
  readonly WindowExecutionId: string;
  readonly TaskExecutionId: string;
  readonly InvocationId: string;
  readonly ExecutionId: string;
  readonly TaskType: string;
  readonly Parameters: string;
  readonly Status: string;
  readonly StatusDetails: string;
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly OwnerInformation: string;
  readonly WindowTargetId: string;
}

interface GetMaintenanceWindowExecutionTaskRequest {
  readonly WindowExecutionId: string;
  readonly TaskId: string;
}

interface GetMaintenanceWindowExecutionTaskResult {
  readonly WindowExecutionId: string;
  readonly TaskExecutionId: string;
  readonly TaskArn: string;
  readonly ServiceRole: string;
  readonly Type: string;
  readonly TaskParameters: [];
  readonly Priority: number;
  readonly MaxConcurrency: string;
  readonly MaxErrors: string;
  readonly Status: string;
  readonly StatusDetails: string;
  readonly StartTime: Date;
  readonly EndTime: Date;
}

interface GetMaintenanceWindowRequest {
  readonly WindowId: string;
}

interface GetMaintenanceWindowResult {
  readonly WindowId: string;
  readonly Name: string;
  readonly Description: string;
  readonly StartDate: string;
  readonly EndDate: string;
  readonly Schedule: string;
  readonly ScheduleTimezone: string;
  readonly ScheduleOffset: number;
  readonly NextExecutionTime: string;
  readonly Duration: number;
  readonly Cutoff: number;
  readonly AllowUnassociatedTargets: boolean;
  readonly Enabled: boolean;
  readonly CreatedDate: Date;
  readonly ModifiedDate: Date;
}

interface GetMaintenanceWindowTaskRequest {
  readonly WindowId: string;
  readonly WindowTaskId: string;
}

interface GetMaintenanceWindowTaskResult {
  readonly WindowId: string;
  readonly WindowTaskId: string;
  readonly Targets: [];
  readonly TaskArn: string;
  readonly ServiceRoleArn: string;
  readonly TaskType: string;
  readonly TaskParameters: {[key: string]: any};
  readonly TaskInvocationParameters: MaintenanceWindowTaskInvocationParameters;
  readonly Priority: number;
  readonly MaxConcurrency: string;
  readonly MaxErrors: string;
  readonly LoggingInfo: LoggingInfo;
  readonly Name: string;
  readonly Description: string;
  readonly CutoffBehavior: string;
}

interface GetOpsItemRequest {
  readonly OpsItemId: string;
}

interface GetOpsItemResponse {
  readonly OpsItem: OpsItem;
}

interface GetOpsMetadataRequest {
  readonly OpsMetadataArn: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface GetOpsMetadataResult {
  readonly ResourceId: string;
  readonly Metadata: {[key: string]: any};
  readonly NextToken: string;
}

interface GetOpsSummaryRequest {
  readonly SyncName: string;
  readonly Filters: [];
  readonly Aggregators: [];
  readonly ResultAttributes: [];
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface GetOpsSummaryResult {
  readonly Entities: [];
  readonly NextToken: string;
}

interface GetParameterHistoryRequest {
  readonly Name: string;
  readonly WithDecryption: boolean;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface GetParameterHistoryResult {
  readonly Parameters: [];
  readonly NextToken: string;
}

interface GetParameterRequest {
  readonly Name: string;
  readonly WithDecryption: boolean;
}

interface GetParameterResult {
  readonly Parameter: Parameter;
}

interface GetParametersByPathRequest {
  readonly Path: string;
  readonly Recursive: boolean;
  readonly ParameterFilters: [];
  readonly WithDecryption: boolean;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface GetParametersByPathResult {
  readonly Parameters: [];
  readonly NextToken: string;
}

interface GetParametersRequest {
  readonly Names: [];
  readonly WithDecryption: boolean;
}

interface GetParametersResult {
  readonly Parameters: [];
  readonly InvalidParameters: [];
}

interface GetPatchBaselineForPatchGroupRequest {
  readonly PatchGroup: string;
  readonly OperatingSystem: string;
}

interface GetPatchBaselineForPatchGroupResult {
  readonly BaselineId: string;
  readonly PatchGroup: string;
  readonly OperatingSystem: string;
}

interface GetPatchBaselineRequest {
  readonly BaselineId: string;
}

interface GetPatchBaselineResult {
  readonly BaselineId: string;
  readonly Name: string;
  readonly OperatingSystem: string;
  readonly GlobalFilters: PatchFilterGroup;
  readonly ApprovalRules: PatchRuleGroup;
  readonly ApprovedPatches: [];
  readonly ApprovedPatchesComplianceLevel: string;
  readonly ApprovedPatchesEnableNonSecurity: boolean;
  readonly RejectedPatches: [];
  readonly RejectedPatchesAction: string;
  readonly PatchGroups: [];
  readonly CreatedDate: Date;
  readonly ModifiedDate: Date;
  readonly Description: string;
  readonly Sources: [];
}

interface GetServiceSettingRequest {
  readonly SettingId: string;
}

interface GetServiceSettingResult {
  readonly ServiceSetting: ServiceSetting;
}

interface HierarchyLevelLimitExceededException {
  readonly message: string;
}

interface HierarchyTypeMismatchException {
  readonly message: string;
}

interface IdempotentParameterMismatch {
  readonly Message: string;
}

interface IncompatiblePolicyException {
  readonly message: string;
}

interface InstanceAggregatedAssociationOverview {
  readonly DetailedStatus: string;
  readonly InstanceAssociationStatusAggregatedCount: {[key: string]: any};
}

interface InstanceAssociation {
  readonly AssociationId: string;
  readonly InstanceId: string;
  readonly Content: string;
  readonly AssociationVersion: string;
}

interface InstanceAssociationOutputLocation {
  readonly S3Location: S3OutputLocation;
}

interface InstanceAssociationOutputUrl {
  readonly S3OutputUrl: S3OutputUrl;
}

interface InstanceAssociationStatusInfo {
  readonly AssociationId: string;
  readonly Name: string;
  readonly DocumentVersion: string;
  readonly AssociationVersion: string;
  readonly InstanceId: string;
  readonly ExecutionDate: Date;
  readonly Status: string;
  readonly DetailedStatus: string;
  readonly ExecutionSummary: string;
  readonly ErrorCode: string;
  readonly OutputUrl: InstanceAssociationOutputUrl;
  readonly AssociationName: string;
}

interface InstanceInformation {
  readonly InstanceId: string;
  readonly PingStatus: string;
  readonly LastPingDateTime: Date;
  readonly AgentVersion: string;
  readonly IsLatestVersion: boolean;
  readonly PlatformType: string;
  readonly PlatformName: string;
  readonly PlatformVersion: string;
  readonly ActivationId: string;
  readonly IamRole: string;
  readonly RegistrationDate: Date;
  readonly ResourceType: string;
  readonly Name: string;
  readonly IPAddress: string;
  readonly ComputerName: string;
  readonly AssociationStatus: string;
  readonly LastAssociationExecutionDate: Date;
  readonly LastSuccessfulAssociationExecutionDate: Date;
  readonly AssociationOverview: InstanceAggregatedAssociationOverview;
  readonly SourceId: string;
  readonly SourceType: string;
}

interface InstanceInformationFilter {
  readonly key: string;
  readonly valueSet: [];
}

interface InstanceInformationStringFilter {
  readonly Key: string;
  readonly Values: [];
}

interface InstancePatchState {
  readonly InstanceId: string;
  readonly PatchGroup: string;
  readonly BaselineId: string;
  readonly SnapshotId: string;
  readonly InstallOverrideList: string;
  readonly OwnerInformation: string;
  readonly InstalledCount: number;
  readonly InstalledOtherCount: number;
  readonly InstalledPendingRebootCount: number;
  readonly InstalledRejectedCount: number;
  readonly MissingCount: number;
  readonly FailedCount: number;
  readonly UnreportedNotApplicableCount: number;
  readonly NotApplicableCount: number;
  readonly OperationStartTime: Date;
  readonly OperationEndTime: Date;
  readonly Operation: string;
  readonly LastNoRebootInstallOperationTime: Date;
  readonly RebootOption: string;
  readonly CriticalNonCompliantCount: number;
  readonly SecurityNonCompliantCount: number;
  readonly OtherNonCompliantCount: number;
}

interface InstancePatchStateFilter {
  readonly Key: string;
  readonly Values: [];
  readonly Type: string;
}

interface InternalServerError {
  readonly Message: string;
}

interface InvalidActivation {
  readonly Message: string;
}

interface InvalidActivationId {
  readonly Message: string;
}

interface InvalidAggregatorException {
  readonly Message: string;
}

interface InvalidAllowedPatternException {
  readonly message: string;
}

interface InvalidAssociation {
  readonly Message: string;
}

interface InvalidAssociationVersion {
  readonly Message: string;
}

interface InvalidAutomationExecutionParametersException {
  readonly Message: string;
}

interface InvalidAutomationSignalException {
  readonly Message: string;
}

interface InvalidAutomationStatusUpdateException {
  readonly Message: string;
}

interface InvalidCommandId {
}

interface InvalidDeleteInventoryParametersException {
  readonly Message: string;
}

interface InvalidDeletionIdException {
  readonly Message: string;
}

interface InvalidDocument {
  readonly Message: string;
}

interface InvalidDocumentContent {
  readonly Message: string;
}

interface InvalidDocumentOperation {
  readonly Message: string;
}

interface InvalidDocumentSchemaVersion {
  readonly Message: string;
}

interface InvalidDocumentType {
  readonly Message: string;
}

interface InvalidDocumentVersion {
  readonly Message: string;
}

interface InvalidFilter {
  readonly Message: string;
}

interface InvalidFilterKey {
}

interface InvalidFilterOption {
  readonly message: string;
}

interface InvalidFilterValue {
  readonly Message: string;
}

interface InvalidInstanceId {
  readonly Message: string;
}

interface InvalidInstanceInformationFilterValue {
  readonly message: string;
}

interface InvalidInventoryGroupException {
  readonly Message: string;
}

interface InvalidInventoryItemContextException {
  readonly Message: string;
}

interface InvalidInventoryRequestException {
  readonly Message: string;
}

interface InvalidItemContentException {
  readonly TypeName: string;
  readonly Message: string;
}

interface InvalidKeyId {
  readonly message: string;
}

interface InvalidNextToken {
  readonly Message: string;
}

interface InvalidNotificationConfig {
  readonly Message: string;
}

interface InvalidOptionException {
  readonly Message: string;
}

interface InvalidOutputFolder {
}

interface InvalidOutputLocation {
}

interface InvalidParameters {
  readonly Message: string;
}

interface InvalidPermissionType {
  readonly Message: string;
}

interface InvalidPluginName {
}

interface InvalidPolicyAttributeException {
  readonly message: string;
}

interface InvalidPolicyTypeException {
  readonly message: string;
}

interface InvalidResourceId {
}

interface InvalidResourceType {
}

interface InvalidResultAttributeException {
  readonly Message: string;
}

interface InvalidRole {
  readonly Message: string;
}

interface InvalidSchedule {
  readonly Message: string;
}

interface InvalidTarget {
  readonly Message: string;
}

interface InvalidTypeNameException {
  readonly Message: string;
}

interface InvalidUpdate {
  readonly Message: string;
}

interface InventoryAggregator {
  readonly Expression: string;
  readonly Aggregators: [];
  readonly Groups: [];
}

interface InventoryDeletionStatusItem {
  readonly DeletionId: string;
  readonly TypeName: string;
  readonly DeletionStartTime: Date;
  readonly LastStatus: string;
  readonly LastStatusMessage: string;
  readonly DeletionSummary: InventoryDeletionSummary;
  readonly LastStatusUpdateTime: Date;
}

interface InventoryDeletionSummary {
  readonly TotalCount: number;
  readonly RemainingCount: number;
  readonly SummaryItems: [];
}

interface InventoryDeletionSummaryItem {
  readonly Version: string;
  readonly Count: number;
  readonly RemainingCount: number;
}

interface InventoryFilter {
  readonly Key: string;
  readonly Values: [];
  readonly Type: string;
}

interface InventoryGroup {
  readonly Name: string;
  readonly Filters: [];
}

interface InventoryItem {
  readonly TypeName: string;
  readonly SchemaVersion: string;
  readonly CaptureTime: string;
  readonly ContentHash: string;
  readonly Content: [];
  readonly Context: {[key: string]: any};
}

interface InventoryItemAttribute {
  readonly Name: string;
  readonly DataType: string;
}

interface InventoryItemSchema {
  readonly TypeName: string;
  readonly Version: string;
  readonly Attributes: [];
  readonly DisplayName: string;
}

interface InventoryResultEntity {
  readonly Id: string;
  readonly Data: {[key: string]: any};
}

interface InventoryResultItem {
  readonly TypeName: string;
  readonly SchemaVersion: string;
  readonly CaptureTime: string;
  readonly ContentHash: string;
  readonly Content: [];
}

interface InvocationDoesNotExist {
}

interface ItemContentMismatchException {
  readonly TypeName: string;
  readonly Message: string;
}

interface ItemSizeLimitExceededException {
  readonly TypeName: string;
  readonly Message: string;
}

interface LabelParameterVersionRequest {
  readonly Name: string;
  readonly ParameterVersion: number;
  readonly Labels: [];
}

interface LabelParameterVersionResult {
  readonly InvalidLabels: [];
  readonly ParameterVersion: number;
}

interface ListAssociationVersionsRequest {
  readonly AssociationId: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListAssociationVersionsResult {
  readonly AssociationVersions: [];
  readonly NextToken: string;
}

interface ListAssociationsRequest {
  readonly AssociationFilterList: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListAssociationsResult {
  readonly Associations: [];
  readonly NextToken: string;
}

interface ListCommandInvocationsRequest {
  readonly CommandId: string;
  readonly InstanceId: string;
  readonly MaxResults: number;
  readonly NextToken: string;
  readonly Filters: [];
  readonly Details: boolean;
}

interface ListCommandInvocationsResult {
  readonly CommandInvocations: [];
  readonly NextToken: string;
}

interface ListCommandsRequest {
  readonly CommandId: string;
  readonly InstanceId: string;
  readonly MaxResults: number;
  readonly NextToken: string;
  readonly Filters: [];
}

interface ListCommandsResult {
  readonly Commands: [];
  readonly NextToken: string;
}

interface ListComplianceItemsRequest {
  readonly Filters: [];
  readonly ResourceIds: [];
  readonly ResourceTypes: [];
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListComplianceItemsResult {
  readonly ComplianceItems: [];
  readonly NextToken: string;
}

interface ListComplianceSummariesRequest {
  readonly Filters: [];
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListComplianceSummariesResult {
  readonly ComplianceSummaryItems: [];
  readonly NextToken: string;
}

interface ListDocumentMetadataHistoryRequest {
  readonly Name: string;
  readonly DocumentVersion: string;
  readonly Metadata: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListDocumentMetadataHistoryResponse {
  readonly Name: string;
  readonly DocumentVersion: string;
  readonly Author: string;
  readonly Metadata: DocumentMetadataResponseInfo;
  readonly NextToken: string;
}

interface ListDocumentVersionsRequest {
  readonly Name: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListDocumentVersionsResult {
  readonly DocumentVersions: [];
  readonly NextToken: string;
}

interface ListDocumentsRequest {
  readonly DocumentFilterList: [];
  readonly Filters: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListDocumentsResult {
  readonly DocumentIdentifiers: [];
  readonly NextToken: string;
}

interface ListInventoryEntriesRequest {
  readonly InstanceId: string;
  readonly TypeName: string;
  readonly Filters: [];
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListInventoryEntriesResult {
  readonly TypeName: string;
  readonly InstanceId: string;
  readonly SchemaVersion: string;
  readonly CaptureTime: string;
  readonly Entries: [];
  readonly NextToken: string;
}

interface ListOpsItemEventsRequest {
  readonly Filters: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListOpsItemEventsResponse {
  readonly NextToken: string;
  readonly Summaries: [];
}

interface ListOpsItemRelatedItemsRequest {
  readonly OpsItemId: string;
  readonly Filters: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListOpsItemRelatedItemsResponse {
  readonly NextToken: string;
  readonly Summaries: [];
}

interface ListOpsMetadataRequest {
  readonly Filters: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListOpsMetadataResult {
  readonly OpsMetadataList: [];
  readonly NextToken: string;
}

interface ListResourceComplianceSummariesRequest {
  readonly Filters: [];
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListResourceComplianceSummariesResult {
  readonly ResourceComplianceSummaryItems: [];
  readonly NextToken: string;
}

interface ListResourceDataSyncRequest {
  readonly SyncType: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListResourceDataSyncResult {
  readonly ResourceDataSyncItems: [];
  readonly NextToken: string;
}

interface ListTagsForResourceRequest {
  readonly ResourceType: string;
  readonly ResourceId: string;
}

interface ListTagsForResourceResult {
  readonly TagList: [];
}

interface LoggingInfo {
  readonly S3BucketName: string;
  readonly S3KeyPrefix: string;
  readonly S3Region: string;
}

interface MaintenanceWindowAutomationParameters {
  readonly DocumentVersion: string;
  readonly Parameters: {[key: string]: any};
}

interface MaintenanceWindowExecution {
  readonly WindowId: string;
  readonly WindowExecutionId: string;
  readonly Status: string;
  readonly StatusDetails: string;
  readonly StartTime: Date;
  readonly EndTime: Date;
}

interface MaintenanceWindowExecutionTaskIdentity {
  readonly WindowExecutionId: string;
  readonly TaskExecutionId: string;
  readonly Status: string;
  readonly StatusDetails: string;
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly TaskArn: string;
  readonly TaskType: string;
}

interface MaintenanceWindowExecutionTaskInvocationIdentity {
  readonly WindowExecutionId: string;
  readonly TaskExecutionId: string;
  readonly InvocationId: string;
  readonly ExecutionId: string;
  readonly TaskType: string;
  readonly Parameters: string;
  readonly Status: string;
  readonly StatusDetails: string;
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly OwnerInformation: string;
  readonly WindowTargetId: string;
}

interface MaintenanceWindowFilter {
  readonly Key: string;
  readonly Values: [];
}

interface MaintenanceWindowIdentity {
  readonly WindowId: string;
  readonly Name: string;
  readonly Description: string;
  readonly Enabled: boolean;
  readonly Duration: number;
  readonly Cutoff: number;
  readonly Schedule: string;
  readonly ScheduleTimezone: string;
  readonly ScheduleOffset: number;
  readonly EndDate: string;
  readonly StartDate: string;
  readonly NextExecutionTime: string;
}

interface MaintenanceWindowIdentityForTarget {
  readonly WindowId: string;
  readonly Name: string;
}

interface MaintenanceWindowLambdaParameters {
  readonly ClientContext: string;
  readonly Qualifier: string;
  readonly Payload: unknown;
}

interface MaintenanceWindowRunCommandParameters {
  readonly Comment: string;
  readonly CloudWatchOutputConfig: CloudWatchOutputConfig;
  readonly DocumentHash: string;
  readonly DocumentHashType: string;
  readonly DocumentVersion: string;
  readonly NotificationConfig: NotificationConfig;
  readonly OutputS3BucketName: string;
  readonly OutputS3KeyPrefix: string;
  readonly Parameters: {[key: string]: any};
  readonly ServiceRoleArn: string;
  readonly TimeoutSeconds: number;
}

interface MaintenanceWindowStepFunctionsParameters {
  readonly Input: string;
  readonly Name: string;
}

interface MaintenanceWindowTarget {
  readonly WindowId: string;
  readonly WindowTargetId: string;
  readonly ResourceType: string;
  readonly Targets: [];
  readonly OwnerInformation: string;
  readonly Name: string;
  readonly Description: string;
}

interface MaintenanceWindowTask {
  readonly WindowId: string;
  readonly WindowTaskId: string;
  readonly TaskArn: string;
  readonly Type: string;
  readonly Targets: [];
  readonly TaskParameters: {[key: string]: any};
  readonly Priority: number;
  readonly LoggingInfo: LoggingInfo;
  readonly ServiceRoleArn: string;
  readonly MaxConcurrency: string;
  readonly MaxErrors: string;
  readonly Name: string;
  readonly Description: string;
  readonly CutoffBehavior: string;
}

interface MaintenanceWindowTaskInvocationParameters {
  readonly RunCommand: MaintenanceWindowRunCommandParameters;
  readonly Automation: MaintenanceWindowAutomationParameters;
  readonly StepFunctions: MaintenanceWindowStepFunctionsParameters;
  readonly Lambda: MaintenanceWindowLambdaParameters;
}

interface MaintenanceWindowTaskParameterValueExpression {
  readonly Values: [];
}

interface MaxDocumentSizeExceeded {
  readonly Message: string;
}

interface MetadataValue {
  readonly Value: string;
}

interface ModifyDocumentPermissionRequest {
  readonly Name: string;
  readonly PermissionType: string;
  readonly AccountIdsToAdd: [];
  readonly AccountIdsToRemove: [];
  readonly SharedDocumentVersion: string;
}

interface ModifyDocumentPermissionResponse {
}

interface NonCompliantSummary {
  readonly NonCompliantCount: number;
  readonly SeveritySummary: SeveritySummary;
}

interface NotificationConfig {
  readonly NotificationArn: string;
  readonly NotificationEvents: [];
  readonly NotificationType: string;
}

interface OpsAggregator {
  readonly AggregatorType: string;
  readonly TypeName: string;
  readonly AttributeName: string;
  readonly Values: {[key: string]: any};
  readonly Filters: [];
  readonly Aggregators: [];
}

interface OpsEntity {
  readonly Id: string;
  readonly Data: {[key: string]: any};
}

interface OpsEntityItem {
  readonly CaptureTime: string;
  readonly Content: [];
}

interface OpsFilter {
  readonly Key: string;
  readonly Values: [];
  readonly Type: string;
}

interface OpsItem {
  readonly CreatedBy: string;
  readonly OpsItemType: string;
  readonly CreatedTime: Date;
  readonly Description: string;
  readonly LastModifiedBy: string;
  readonly LastModifiedTime: Date;
  readonly Notifications: [];
  readonly Priority: number;
  readonly RelatedOpsItems: [];
  readonly Status: string;
  readonly OpsItemId: string;
  readonly Version: string;
  readonly Title: string;
  readonly Source: string;
  readonly OperationalData: {[key: string]: any};
  readonly Category: string;
  readonly Severity: string;
  readonly ActualStartTime: Date;
  readonly ActualEndTime: Date;
  readonly PlannedStartTime: Date;
  readonly PlannedEndTime: Date;
}

interface OpsItemAlreadyExistsException {
  readonly Message: string;
  readonly OpsItemId: string;
}

interface OpsItemDataValue {
  readonly Value: string;
  readonly Type: string;
}

interface OpsItemEventFilter {
  readonly Key: string;
  readonly Values: [];
  readonly Operator: string;
}

interface OpsItemEventSummary {
  readonly OpsItemId: string;
  readonly EventId: string;
  readonly Source: string;
  readonly DetailType: string;
  readonly Detail: string;
  readonly CreatedBy: OpsItemIdentity;
  readonly CreatedTime: Date;
}

interface OpsItemFilter {
  readonly Key: string;
  readonly Values: [];
  readonly Operator: string;
}

interface OpsItemIdentity {
  readonly Arn: string;
}

interface OpsItemInvalidParameterException {
  readonly ParameterNames: [];
  readonly Message: string;
}

interface OpsItemLimitExceededException {
  readonly ResourceTypes: [];
  readonly Limit: number;
  readonly LimitType: string;
  readonly Message: string;
}

interface OpsItemNotFoundException {
  readonly Message: string;
}

interface OpsItemNotification {
  readonly Arn: string;
}

interface OpsItemRelatedItemAlreadyExistsException {
  readonly Message: string;
  readonly ResourceUri: string;
  readonly OpsItemId: string;
}

interface OpsItemRelatedItemAssociationNotFoundException {
  readonly Message: string;
}

interface OpsItemRelatedItemSummary {
  readonly OpsItemId: string;
  readonly AssociationId: string;
  readonly ResourceType: string;
  readonly AssociationType: string;
  readonly ResourceUri: string;
  readonly CreatedBy: OpsItemIdentity;
  readonly CreatedTime: Date;
  readonly LastModifiedBy: OpsItemIdentity;
  readonly LastModifiedTime: Date;
}

interface OpsItemRelatedItemsFilter {
  readonly Key: string;
  readonly Values: [];
  readonly Operator: string;
}

interface OpsItemSummary {
  readonly CreatedBy: string;
  readonly CreatedTime: Date;
  readonly LastModifiedBy: string;
  readonly LastModifiedTime: Date;
  readonly Priority: number;
  readonly Source: string;
  readonly Status: string;
  readonly OpsItemId: string;
  readonly Title: string;
  readonly OperationalData: {[key: string]: any};
  readonly Category: string;
  readonly Severity: string;
  readonly OpsItemType: string;
  readonly ActualStartTime: Date;
  readonly ActualEndTime: Date;
  readonly PlannedStartTime: Date;
  readonly PlannedEndTime: Date;
}

interface OpsMetadata {
  readonly ResourceId: string;
  readonly OpsMetadataArn: string;
  readonly LastModifiedDate: Date;
  readonly LastModifiedUser: string;
  readonly CreationDate: Date;
}

interface OpsMetadataAlreadyExistsException {
  readonly message: string;
}

interface OpsMetadataFilter {
  readonly Key: string;
  readonly Values: [];
}

interface OpsMetadataInvalidArgumentException {
  readonly message: string;
}

interface OpsMetadataKeyLimitExceededException {
  readonly message: string;
}

interface OpsMetadataLimitExceededException {
  readonly message: string;
}

interface OpsMetadataNotFoundException {
  readonly message: string;
}

interface OpsMetadataTooManyUpdatesException {
  readonly message: string;
}

interface OpsResultAttribute {
  readonly TypeName: string;
}

interface OutputSource {
  readonly OutputSourceId: string;
  readonly OutputSourceType: string;
}

interface Parameter {
  readonly Name: string;
  readonly Type: string;
  readonly Value: string;
  readonly Version: number;
  readonly Selector: string;
  readonly SourceResult: string;
  readonly LastModifiedDate: Date;
  readonly ARN: string;
  readonly DataType: string;
}

interface ParameterAlreadyExists {
  readonly message: string;
}

interface ParameterHistory {
  readonly Name: string;
  readonly Type: string;
  readonly KeyId: string;
  readonly LastModifiedDate: Date;
  readonly LastModifiedUser: string;
  readonly Description: string;
  readonly Value: string;
  readonly AllowedPattern: string;
  readonly Version: number;
  readonly Labels: [];
  readonly Tier: string;
  readonly Policies: [];
  readonly DataType: string;
}

interface ParameterInlinePolicy {
  readonly PolicyText: string;
  readonly PolicyType: string;
  readonly PolicyStatus: string;
}

interface ParameterLimitExceeded {
  readonly message: string;
}

interface ParameterMaxVersionLimitExceeded {
  readonly message: string;
}

interface ParameterMetadata {
  readonly Name: string;
  readonly Type: string;
  readonly KeyId: string;
  readonly LastModifiedDate: Date;
  readonly LastModifiedUser: string;
  readonly Description: string;
  readonly AllowedPattern: string;
  readonly Version: number;
  readonly Tier: string;
  readonly Policies: [];
  readonly DataType: string;
}

interface ParameterNotFound {
  readonly message: string;
}

interface ParameterPatternMismatchException {
  readonly message: string;
}

interface ParameterStringFilter {
  readonly Key: string;
  readonly Option: string;
  readonly Values: [];
}

interface ParameterVersionLabelLimitExceeded {
  readonly message: string;
}

interface ParameterVersionNotFound {
  readonly message: string;
}

interface ParametersFilter {
  readonly Key: string;
  readonly Values: [];
}

interface Patch {
  readonly Id: string;
  readonly ReleaseDate: Date;
  readonly Title: string;
  readonly Description: string;
  readonly ContentUrl: string;
  readonly Vendor: string;
  readonly ProductFamily: string;
  readonly Product: string;
  readonly Classification: string;
  readonly MsrcSeverity: string;
  readonly KbNumber: string;
  readonly MsrcNumber: string;
  readonly Language: string;
  readonly AdvisoryIds: [];
  readonly BugzillaIds: [];
  readonly CVEIds: [];
  readonly Name: string;
  readonly Epoch: number;
  readonly Version: string;
  readonly Release: string;
  readonly Arch: string;
  readonly Severity: string;
  readonly Repository: string;
}

interface PatchBaselineIdentity {
  readonly BaselineId: string;
  readonly BaselineName: string;
  readonly OperatingSystem: string;
  readonly BaselineDescription: string;
  readonly DefaultBaseline: boolean;
}

interface PatchComplianceData {
  readonly Title: string;
  readonly KBId: string;
  readonly Classification: string;
  readonly Severity: string;
  readonly State: string;
  readonly InstalledTime: Date;
  readonly CVEIds: string;
}

interface PatchFilter {
  readonly Key: string;
  readonly Values: [];
}

interface PatchFilterGroup {
  readonly PatchFilters: [];
}

interface PatchGroupPatchBaselineMapping {
  readonly PatchGroup: string;
  readonly BaselineIdentity: PatchBaselineIdentity;
}

interface PatchOrchestratorFilter {
  readonly Key: string;
  readonly Values: [];
}

interface PatchRule {
  readonly PatchFilterGroup: PatchFilterGroup;
  readonly ComplianceLevel: string;
  readonly ApproveAfterDays: number;
  readonly ApproveUntilDate: string;
  readonly EnableNonSecurity: boolean;
}

interface PatchRuleGroup {
  readonly PatchRules: [];
}

interface PatchSource {
  readonly Name: string;
  readonly Products: [];
  readonly Configuration: string;
}

interface PatchStatus {
  readonly DeploymentStatus: string;
  readonly ComplianceLevel: string;
  readonly ApprovalDate: Date;
}

interface PoliciesLimitExceededException {
  readonly message: string;
}

interface ProgressCounters {
  readonly TotalSteps: number;
  readonly SuccessSteps: number;
  readonly FailedSteps: number;
  readonly CancelledSteps: number;
  readonly TimedOutSteps: number;
}

interface PutComplianceItemsRequest {
  readonly ResourceId: string;
  readonly ResourceType: string;
  readonly ComplianceType: string;
  readonly ExecutionSummary: ComplianceExecutionSummary;
  readonly Items: [];
  readonly ItemContentHash: string;
  readonly UploadType: string;
}

interface PutComplianceItemsResult {
}

interface PutInventoryRequest {
  readonly InstanceId: string;
  readonly Items: [];
}

interface PutInventoryResult {
  readonly Message: string;
}

interface PutParameterRequest {
  readonly Name: string;
  readonly Description: string;
  readonly Value: string;
  readonly Type: string;
  readonly KeyId: string;
  readonly Overwrite: boolean;
  readonly AllowedPattern: string;
  readonly Tags: [];
  readonly Tier: string;
  readonly Policies: string;
  readonly DataType: string;
}

interface PutParameterResult {
  readonly Version: number;
  readonly Tier: string;
}

interface RegisterDefaultPatchBaselineRequest {
  readonly BaselineId: string;
}

interface RegisterDefaultPatchBaselineResult {
  readonly BaselineId: string;
}

interface RegisterPatchBaselineForPatchGroupRequest {
  readonly BaselineId: string;
  readonly PatchGroup: string;
}

interface RegisterPatchBaselineForPatchGroupResult {
  readonly BaselineId: string;
  readonly PatchGroup: string;
}

interface RegisterTargetWithMaintenanceWindowRequest {
  readonly WindowId: string;
  readonly ResourceType: string;
  readonly Targets: [];
  readonly OwnerInformation: string;
  readonly Name: string;
  readonly Description: string;
  readonly ClientToken: string;
}

interface RegisterTargetWithMaintenanceWindowResult {
  readonly WindowTargetId: string;
}

interface RegisterTaskWithMaintenanceWindowRequest {
  readonly WindowId: string;
  readonly Targets: [];
  readonly TaskArn: string;
  readonly ServiceRoleArn: string;
  readonly TaskType: string;
  readonly TaskParameters: {[key: string]: any};
  readonly TaskInvocationParameters: MaintenanceWindowTaskInvocationParameters;
  readonly Priority: number;
  readonly MaxConcurrency: string;
  readonly MaxErrors: string;
  readonly LoggingInfo: LoggingInfo;
  readonly Name: string;
  readonly Description: string;
  readonly ClientToken: string;
  readonly CutoffBehavior: string;
}

interface RegisterTaskWithMaintenanceWindowResult {
  readonly WindowTaskId: string;
}

interface RegistrationMetadataItem {
  readonly Key: string;
  readonly Value: string;
}

interface RelatedOpsItem {
  readonly OpsItemId: string;
}

interface RemoveTagsFromResourceRequest {
  readonly ResourceType: string;
  readonly ResourceId: string;
  readonly TagKeys: [];
}

interface RemoveTagsFromResourceResult {
}

interface ResetServiceSettingRequest {
  readonly SettingId: string;
}

interface ResetServiceSettingResult {
  readonly ServiceSetting: ServiceSetting;
}

interface ResolvedTargets {
  readonly ParameterValues: [];
  readonly Truncated: boolean;
}

interface ResourceComplianceSummaryItem {
  readonly ComplianceType: string;
  readonly ResourceType: string;
  readonly ResourceId: string;
  readonly Status: string;
  readonly OverallSeverity: string;
  readonly ExecutionSummary: ComplianceExecutionSummary;
  readonly CompliantSummary: CompliantSummary;
  readonly NonCompliantSummary: NonCompliantSummary;
}

interface ResourceDataSyncAlreadyExistsException {
  readonly SyncName: string;
}

interface ResourceDataSyncAwsOrganizationsSource {
  readonly OrganizationSourceType: string;
  readonly OrganizationalUnits: [];
}

interface ResourceDataSyncConflictException {
  readonly Message: string;
}

interface ResourceDataSyncCountExceededException {
  readonly Message: string;
}

interface ResourceDataSyncDestinationDataSharing {
  readonly DestinationDataSharingType: string;
}

interface ResourceDataSyncInvalidConfigurationException {
  readonly Message: string;
}

interface ResourceDataSyncItem {
  readonly SyncName: string;
  readonly SyncType: string;
  readonly SyncSource: ResourceDataSyncSourceWithState;
  readonly S3Destination: ResourceDataSyncS3Destination;
  readonly LastSyncTime: Date;
  readonly LastSuccessfulSyncTime: Date;
  readonly SyncLastModifiedTime: Date;
  readonly LastStatus: string;
  readonly SyncCreatedTime: Date;
  readonly LastSyncStatusMessage: string;
}

interface ResourceDataSyncNotFoundException {
  readonly SyncName: string;
  readonly SyncType: string;
  readonly Message: string;
}

interface ResourceDataSyncOrganizationalUnit {
  readonly OrganizationalUnitId: string;
}

interface ResourceDataSyncS3Destination {
  readonly BucketName: string;
  readonly Prefix: string;
  readonly SyncFormat: string;
  readonly Region: string;
  readonly AWSKMSKeyARN: string;
  readonly DestinationDataSharing: ResourceDataSyncDestinationDataSharing;
}

interface ResourceDataSyncSource {
  readonly SourceType: string;
  readonly AwsOrganizationsSource: ResourceDataSyncAwsOrganizationsSource;
  readonly SourceRegions: [];
  readonly IncludeFutureRegions: boolean;
  readonly EnableAllOpsDataSources: boolean;
}

interface ResourceDataSyncSourceWithState {
  readonly SourceType: string;
  readonly AwsOrganizationsSource: ResourceDataSyncAwsOrganizationsSource;
  readonly SourceRegions: [];
  readonly IncludeFutureRegions: boolean;
  readonly State: string;
  readonly EnableAllOpsDataSources: boolean;
}

interface ResourceInUseException {
  readonly Message: string;
}

interface ResourceLimitExceededException {
  readonly Message: string;
}

interface ResultAttribute {
  readonly TypeName: string;
}

interface ResumeSessionRequest {
  readonly SessionId: string;
}

interface ResumeSessionResponse {
  readonly SessionId: string;
  readonly TokenValue: string;
  readonly StreamUrl: string;
}

interface ReviewInformation {
  readonly ReviewedTime: Date;
  readonly Status: string;
  readonly Reviewer: string;
}

interface Runbook {
  readonly DocumentName: string;
  readonly DocumentVersion: string;
  readonly Parameters: {[key: string]: any};
  readonly TargetParameterName: string;
  readonly Targets: [];
  readonly MaxConcurrency: string;
  readonly MaxErrors: string;
  readonly TargetLocations: [];
}

interface S3OutputLocation {
  readonly OutputS3Region: string;
  readonly OutputS3BucketName: string;
  readonly OutputS3KeyPrefix: string;
}

interface S3OutputUrl {
  readonly OutputUrl: string;
}

interface ScheduledWindowExecution {
  readonly WindowId: string;
  readonly Name: string;
  readonly ExecutionTime: string;
}

interface SendAutomationSignalRequest {
  readonly AutomationExecutionId: string;
  readonly SignalType: string;
  readonly Payload: {[key: string]: any};
}

interface SendAutomationSignalResult {
}

interface SendCommandRequest {
  readonly InstanceIds: [];
  readonly Targets: [];
  readonly DocumentName: string;
  readonly DocumentVersion: string;
  readonly DocumentHash: string;
  readonly DocumentHashType: string;
  readonly TimeoutSeconds: number;
  readonly Comment: string;
  readonly Parameters: {[key: string]: any};
  readonly OutputS3Region: string;
  readonly OutputS3BucketName: string;
  readonly OutputS3KeyPrefix: string;
  readonly MaxConcurrency: string;
  readonly MaxErrors: string;
  readonly ServiceRoleArn: string;
  readonly NotificationConfig: NotificationConfig;
  readonly CloudWatchOutputConfig: CloudWatchOutputConfig;
}

interface SendCommandResult {
  readonly Command: Command;
}

interface ServiceSetting {
  readonly SettingId: string;
  readonly SettingValue: string;
  readonly LastModifiedDate: Date;
  readonly LastModifiedUser: string;
  readonly ARN: string;
  readonly Status: string;
}

interface ServiceSettingNotFound {
  readonly Message: string;
}

interface Session {
  readonly SessionId: string;
  readonly Target: string;
  readonly Status: string;
  readonly StartDate: Date;
  readonly EndDate: Date;
  readonly DocumentName: string;
  readonly Owner: string;
  readonly Reason: string;
  readonly Details: string;
  readonly OutputUrl: SessionManagerOutputUrl;
  readonly MaxSessionDuration: string;
}

interface SessionFilter {
  readonly key: string;
  readonly value: string;
}

interface SessionManagerOutputUrl {
  readonly S3OutputUrl: string;
  readonly CloudWatchOutputUrl: string;
}

interface SeveritySummary {
  readonly CriticalCount: number;
  readonly HighCount: number;
  readonly MediumCount: number;
  readonly LowCount: number;
  readonly InformationalCount: number;
  readonly UnspecifiedCount: number;
}

interface StartAssociationsOnceRequest {
  readonly AssociationIds: [];
}

interface StartAssociationsOnceResult {
}

interface StartAutomationExecutionRequest {
  readonly DocumentName: string;
  readonly DocumentVersion: string;
  readonly Parameters: {[key: string]: any};
  readonly ClientToken: string;
  readonly Mode: string;
  readonly TargetParameterName: string;
  readonly Targets: [];
  readonly TargetMaps: [];
  readonly MaxConcurrency: string;
  readonly MaxErrors: string;
  readonly TargetLocations: [];
  readonly Tags: [];
}

interface StartAutomationExecutionResult {
  readonly AutomationExecutionId: string;
}

interface StartChangeRequestExecutionRequest {
  readonly ScheduledTime: Date;
  readonly DocumentName: string;
  readonly DocumentVersion: string;
  readonly Parameters: {[key: string]: any};
  readonly ChangeRequestName: string;
  readonly ClientToken: string;
  readonly AutoApprove: boolean;
  readonly Runbooks: [];
  readonly Tags: [];
  readonly ScheduledEndTime: Date;
  readonly ChangeDetails: string;
}

interface StartChangeRequestExecutionResult {
  readonly AutomationExecutionId: string;
}

interface StartSessionRequest {
  readonly Target: string;
  readonly DocumentName: string;
  readonly Reason: string;
  readonly Parameters: {[key: string]: any};
}

interface StartSessionResponse {
  readonly SessionId: string;
  readonly TokenValue: string;
  readonly StreamUrl: string;
}

interface StatusUnchanged {
}

interface StepExecution {
  readonly StepName: string;
  readonly Action: string;
  readonly TimeoutSeconds: number;
  readonly OnFailure: string;
  readonly MaxAttempts: number;
  readonly ExecutionStartTime: Date;
  readonly ExecutionEndTime: Date;
  readonly StepStatus: string;
  readonly ResponseCode: string;
  readonly Inputs: {[key: string]: any};
  readonly Outputs: {[key: string]: any};
  readonly Response: string;
  readonly FailureMessage: string;
  readonly FailureDetails: FailureDetails;
  readonly StepExecutionId: string;
  readonly OverriddenParameters: {[key: string]: any};
  readonly IsEnd: boolean;
  readonly NextStep: string;
  readonly IsCritical: boolean;
  readonly ValidNextSteps: [];
  readonly Targets: [];
  readonly TargetLocation: TargetLocation;
}

interface StepExecutionFilter {
  readonly Key: string;
  readonly Values: [];
}

interface StopAutomationExecutionRequest {
  readonly AutomationExecutionId: string;
  readonly Type: string;
}

interface StopAutomationExecutionResult {
}

interface SubTypeCountLimitExceededException {
  readonly Message: string;
}

interface Tag {
  readonly Key: string;
  readonly Value: string;
}

interface Target {
  readonly Key: string;
  readonly Values: [];
}

interface TargetInUseException {
  readonly Message: string;
}

interface TargetLocation {
  readonly Accounts: [];
  readonly Regions: [];
  readonly TargetLocationMaxConcurrency: string;
  readonly TargetLocationMaxErrors: string;
  readonly ExecutionRoleName: string;
}

interface TargetNotConnected {
  readonly Message: string;
}

interface TerminateSessionRequest {
  readonly SessionId: string;
}

interface TerminateSessionResponse {
  readonly SessionId: string;
}

interface TooManyTagsError {
}

interface TooManyUpdates {
  readonly Message: string;
}

interface TotalSizeLimitExceededException {
  readonly Message: string;
}

interface UnlabelParameterVersionRequest {
  readonly Name: string;
  readonly ParameterVersion: number;
  readonly Labels: [];
}

interface UnlabelParameterVersionResult {
  readonly RemovedLabels: [];
  readonly InvalidLabels: [];
}

interface UnsupportedCalendarException {
  readonly Message: string;
}

interface UnsupportedFeatureRequiredException {
  readonly Message: string;
}

interface UnsupportedInventoryItemContextException {
  readonly TypeName: string;
  readonly Message: string;
}

interface UnsupportedInventorySchemaVersionException {
  readonly Message: string;
}

interface UnsupportedOperatingSystem {
  readonly Message: string;
}

interface UnsupportedParameterType {
  readonly message: string;
}

interface UnsupportedPlatformType {
  readonly Message: string;
}

interface UpdateAssociationRequest {
  readonly AssociationId: string;
  readonly Parameters: {[key: string]: any};
  readonly DocumentVersion: string;
  readonly ScheduleExpression: string;
  readonly OutputLocation: InstanceAssociationOutputLocation;
  readonly Name: string;
  readonly Targets: [];
  readonly AssociationName: string;
  readonly AssociationVersion: string;
  readonly AutomationTargetParameterName: string;
  readonly MaxErrors: string;
  readonly MaxConcurrency: string;
  readonly ComplianceSeverity: string;
  readonly SyncCompliance: string;
  readonly ApplyOnlyAtCronInterval: boolean;
  readonly CalendarNames: [];
  readonly TargetLocations: [];
}

interface UpdateAssociationResult {
  readonly AssociationDescription: AssociationDescription;
}

interface UpdateAssociationStatusRequest {
  readonly Name: string;
  readonly InstanceId: string;
  readonly AssociationStatus: AssociationStatus;
}

interface UpdateAssociationStatusResult {
  readonly AssociationDescription: AssociationDescription;
}

interface UpdateDocumentDefaultVersionRequest {
  readonly Name: string;
  readonly DocumentVersion: string;
}

interface UpdateDocumentDefaultVersionResult {
  readonly Description: DocumentDefaultVersionDescription;
}

interface UpdateDocumentMetadataRequest {
  readonly Name: string;
  readonly DocumentVersion: string;
  readonly DocumentReviews: DocumentReviews;
}

interface UpdateDocumentMetadataResponse {
}

interface UpdateDocumentRequest {
  readonly Content: string;
  readonly Attachments: [];
  readonly Name: string;
  readonly DisplayName: string;
  readonly VersionName: string;
  readonly DocumentVersion: string;
  readonly DocumentFormat: string;
  readonly TargetType: string;
}

interface UpdateDocumentResult {
  readonly DocumentDescription: DocumentDescription;
}

interface UpdateMaintenanceWindowRequest {
  readonly WindowId: string;
  readonly Name: string;
  readonly Description: string;
  readonly StartDate: string;
  readonly EndDate: string;
  readonly Schedule: string;
  readonly ScheduleTimezone: string;
  readonly ScheduleOffset: number;
  readonly Duration: number;
  readonly Cutoff: number;
  readonly AllowUnassociatedTargets: boolean;
  readonly Enabled: boolean;
  readonly Replace: boolean;
}

interface UpdateMaintenanceWindowResult {
  readonly WindowId: string;
  readonly Name: string;
  readonly Description: string;
  readonly StartDate: string;
  readonly EndDate: string;
  readonly Schedule: string;
  readonly ScheduleTimezone: string;
  readonly ScheduleOffset: number;
  readonly Duration: number;
  readonly Cutoff: number;
  readonly AllowUnassociatedTargets: boolean;
  readonly Enabled: boolean;
}

interface UpdateMaintenanceWindowTargetRequest {
  readonly WindowId: string;
  readonly WindowTargetId: string;
  readonly Targets: [];
  readonly OwnerInformation: string;
  readonly Name: string;
  readonly Description: string;
  readonly Replace: boolean;
}

interface UpdateMaintenanceWindowTargetResult {
  readonly WindowId: string;
  readonly WindowTargetId: string;
  readonly Targets: [];
  readonly OwnerInformation: string;
  readonly Name: string;
  readonly Description: string;
}

interface UpdateMaintenanceWindowTaskRequest {
  readonly WindowId: string;
  readonly WindowTaskId: string;
  readonly Targets: [];
  readonly TaskArn: string;
  readonly ServiceRoleArn: string;
  readonly TaskParameters: {[key: string]: any};
  readonly TaskInvocationParameters: MaintenanceWindowTaskInvocationParameters;
  readonly Priority: number;
  readonly MaxConcurrency: string;
  readonly MaxErrors: string;
  readonly LoggingInfo: LoggingInfo;
  readonly Name: string;
  readonly Description: string;
  readonly Replace: boolean;
  readonly CutoffBehavior: string;
}

interface UpdateMaintenanceWindowTaskResult {
  readonly WindowId: string;
  readonly WindowTaskId: string;
  readonly Targets: [];
  readonly TaskArn: string;
  readonly ServiceRoleArn: string;
  readonly TaskParameters: {[key: string]: any};
  readonly TaskInvocationParameters: MaintenanceWindowTaskInvocationParameters;
  readonly Priority: number;
  readonly MaxConcurrency: string;
  readonly MaxErrors: string;
  readonly LoggingInfo: LoggingInfo;
  readonly Name: string;
  readonly Description: string;
  readonly CutoffBehavior: string;
}

interface UpdateManagedInstanceRoleRequest {
  readonly InstanceId: string;
  readonly IamRole: string;
}

interface UpdateManagedInstanceRoleResult {
}

interface UpdateOpsItemRequest {
  readonly Description: string;
  readonly OperationalData: {[key: string]: any};
  readonly OperationalDataToDelete: [];
  readonly Notifications: [];
  readonly Priority: number;
  readonly RelatedOpsItems: [];
  readonly Status: string;
  readonly OpsItemId: string;
  readonly Title: string;
  readonly Category: string;
  readonly Severity: string;
  readonly ActualStartTime: Date;
  readonly ActualEndTime: Date;
  readonly PlannedStartTime: Date;
  readonly PlannedEndTime: Date;
}

interface UpdateOpsItemResponse {
}

interface UpdateOpsMetadataRequest {
  readonly OpsMetadataArn: string;
  readonly MetadataToUpdate: {[key: string]: any};
  readonly KeysToDelete: [];
}

interface UpdateOpsMetadataResult {
  readonly OpsMetadataArn: string;
}

interface UpdatePatchBaselineRequest {
  readonly BaselineId: string;
  readonly Name: string;
  readonly GlobalFilters: PatchFilterGroup;
  readonly ApprovalRules: PatchRuleGroup;
  readonly ApprovedPatches: [];
  readonly ApprovedPatchesComplianceLevel: string;
  readonly ApprovedPatchesEnableNonSecurity: boolean;
  readonly RejectedPatches: [];
  readonly RejectedPatchesAction: string;
  readonly Description: string;
  readonly Sources: [];
  readonly Replace: boolean;
}

interface UpdatePatchBaselineResult {
  readonly BaselineId: string;
  readonly Name: string;
  readonly OperatingSystem: string;
  readonly GlobalFilters: PatchFilterGroup;
  readonly ApprovalRules: PatchRuleGroup;
  readonly ApprovedPatches: [];
  readonly ApprovedPatchesComplianceLevel: string;
  readonly ApprovedPatchesEnableNonSecurity: boolean;
  readonly RejectedPatches: [];
  readonly RejectedPatchesAction: string;
  readonly CreatedDate: Date;
  readonly ModifiedDate: Date;
  readonly Description: string;
  readonly Sources: [];
}

interface UpdateResourceDataSyncRequest {
  readonly SyncName: string;
  readonly SyncType: string;
  readonly SyncSource: ResourceDataSyncSource;
}

interface UpdateResourceDataSyncResult {
}

interface UpdateServiceSettingRequest {
  readonly SettingId: string;
  readonly SettingValue: string;
}

interface UpdateServiceSettingResult {
}

