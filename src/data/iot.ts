/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AcceptCertificateTransfer {
  readonly certificateId: string;
  readonly setAsActive?: boolean;
}

export interface AddThingToBillingGroup {
  readonly billingGroupName?: string;
  readonly billingGroupArn?: string;
  readonly thingName?: string;
  readonly thingArn?: string;
}

export interface AddThingToThingGroup {
  readonly thingGroupName?: string;
  readonly thingGroupArn?: string;
  readonly thingName?: string;
  readonly thingArn?: string;
  readonly overrideDynamicGroups?: boolean;
}

export interface AssociateTargetsWithJob {
  readonly targets: [];
  readonly jobId: string;
  readonly comment?: string;
  readonly namespaceId?: string;
}

export interface AttachPolicy {
  readonly policyName: string;
  readonly target: string;
}

export interface AttachPrincipalPolicy {
  readonly policyName: string;
  readonly principal: string;
}

export interface AttachSecurityProfile {
  readonly securityProfileName: string;
  readonly securityProfileTargetArn: string;
}

export interface AttachThingPrincipal {
  readonly thingName: string;
  readonly principal: string;
}

export interface CancelAuditMitigationActionsTask {
  readonly taskId: string;
}

export interface CancelAuditTask {
  readonly taskId: string;
}

export interface CancelCertificateTransfer {
  readonly certificateId: string;
}

export interface CancelDetectMitigationActionsTask {
  readonly taskId: string;
}

export interface CancelJob {
  readonly jobId: string;
  readonly reasonCode?: string;
  readonly comment?: string;
  readonly force?: boolean;
}

export interface CancelJobExecution {
  readonly jobId: string;
  readonly thingName: string;
  readonly force?: boolean;
  readonly expectedVersion?: number;
  readonly statusDetails?: {[key: string]: any};
}

export interface ClearDefaultAuthorizer {
}

export interface ConfirmTopicRuleDestination {
  readonly confirmationToken: string;
}

export interface CreateAuditSuppression {
  readonly checkName: string;
  readonly resourceIdentifier: ResourceIdentifier;
  readonly expirationDate?: Date;
  readonly suppressIndefinitely?: boolean;
  readonly description?: string;
  readonly clientRequestToken: string;
}

export interface CreateAuthorizer {
  readonly authorizerName: string;
  readonly authorizerFunctionArn: string;
  readonly tokenKeyName?: string;
  readonly tokenSigningPublicKeys?: {[key: string]: any};
  readonly status?: string;
  readonly tags?: [];
  readonly signingDisabled?: boolean;
  readonly enableCachingForHttp?: boolean;
}

export interface CreateBillingGroup {
  readonly billingGroupName: string;
  readonly billingGroupProperties?: BillingGroupProperties;
  readonly tags?: [];
}

export interface CreateCertificateFromCsr {
  readonly certificateSigningRequest: string;
  readonly setAsActive?: boolean;
}

export interface CreateCustomMetric {
  readonly metricName: string;
  readonly displayName?: string;
  readonly metricType: string;
  readonly tags?: [];
  readonly clientRequestToken: string;
}

export interface CreateDimension {
  readonly name: string;
  readonly type: string;
  readonly stringValues: [];
  readonly tags?: [];
  readonly clientRequestToken: string;
}

export interface CreateDomainConfiguration {
  readonly domainConfigurationName: string;
  readonly domainName?: string;
  readonly serverCertificateArns?: [];
  readonly validationCertificateArn?: string;
  readonly authorizerConfig?: AuthorizerConfig;
  readonly serviceType?: string;
  readonly tags?: [];
}

export interface CreateDynamicThingGroup {
  readonly thingGroupName: string;
  readonly thingGroupProperties?: ThingGroupProperties;
  readonly indexName?: string;
  readonly queryString: string;
  readonly queryVersion?: string;
  readonly tags?: [];
}

export interface CreateFleetMetric {
  readonly metricName: string;
  readonly queryString: string;
  readonly aggregationType: AggregationType;
  readonly period: number;
  readonly aggregationField: string;
  readonly description?: string;
  readonly queryVersion?: string;
  readonly indexName?: string;
  readonly unit?: string;
  readonly tags?: [];
}

export interface CreateJob {
  readonly jobId: string;
  readonly targets: [];
  readonly documentSource?: string;
  readonly document?: string;
  readonly description?: string;
  readonly presignedUrlConfig?: PresignedUrlConfig;
  readonly targetSelection?: string;
  readonly jobExecutionsRolloutConfig?: JobExecutionsRolloutConfig;
  readonly abortConfig?: AbortConfig;
  readonly timeoutConfig?: TimeoutConfig;
  readonly tags?: [];
  readonly namespaceId?: string;
  readonly jobTemplateArn?: string;
  readonly documentParameters?: {[key: string]: any};
}

export interface CreateJobTemplate {
  readonly jobTemplateId: string;
  readonly jobArn?: string;
  readonly documentSource?: string;
  readonly document?: string;
  readonly description: string;
  readonly presignedUrlConfig?: PresignedUrlConfig;
  readonly jobExecutionsRolloutConfig?: JobExecutionsRolloutConfig;
  readonly abortConfig?: AbortConfig;
  readonly timeoutConfig?: TimeoutConfig;
  readonly tags?: [];
}

export interface CreateKeysAndCertificate {
  readonly setAsActive?: boolean;
}

export interface CreateMitigationAction {
  readonly actionName: string;
  readonly roleArn: string;
  readonly actionParams: MitigationActionParams;
  readonly tags?: [];
}

export interface CreateOTAUpdate {
  readonly otaUpdateId: string;
  readonly description?: string;
  readonly targets: [];
  readonly protocols?: [];
  readonly targetSelection?: string;
  readonly awsJobExecutionsRolloutConfig?: AwsJobExecutionsRolloutConfig;
  readonly awsJobPresignedUrlConfig?: AwsJobPresignedUrlConfig;
  readonly awsJobAbortConfig?: AwsJobAbortConfig;
  readonly awsJobTimeoutConfig?: AwsJobTimeoutConfig;
  readonly files: [];
  readonly roleArn: string;
  readonly additionalParameters?: {[key: string]: any};
  readonly tags?: [];
}

export interface CreatePolicy {
  readonly policyName: string;
  readonly policyDocument: string;
  readonly tags?: [];
}

export interface CreatePolicyVersion {
  readonly policyName: string;
  readonly policyDocument: string;
  readonly setAsDefault?: boolean;
}

export interface CreateProvisioningClaim {
  readonly templateName: string;
}

export interface CreateProvisioningTemplate {
  readonly templateName: string;
  readonly description?: string;
  readonly templateBody: string;
  readonly enabled?: boolean;
  readonly provisioningRoleArn: string;
  readonly preProvisioningHook?: ProvisioningHook;
  readonly tags?: [];
}

export interface CreateProvisioningTemplateVersion {
  readonly templateName: string;
  readonly templateBody: string;
  readonly setAsDefault?: boolean;
}

export interface CreateRoleAlias {
  readonly roleAlias: string;
  readonly roleArn: string;
  readonly credentialDurationSeconds?: number;
  readonly tags?: [];
}

export interface CreateScheduledAudit {
  readonly frequency: string;
  readonly dayOfMonth?: string;
  readonly dayOfWeek?: string;
  readonly targetCheckNames: [];
  readonly scheduledAuditName: string;
  readonly tags?: [];
}

export interface CreateSecurityProfile {
  readonly securityProfileName: string;
  readonly securityProfileDescription?: string;
  readonly behaviors?: [];
  readonly alertTargets?: {[key: string]: any};
  readonly additionalMetricsToRetain?: [];
  readonly additionalMetricsToRetainV2?: [];
  readonly tags?: [];
}

export interface CreateStream {
  readonly streamId: string;
  readonly description?: string;
  readonly files: [];
  readonly roleArn: string;
  readonly tags?: [];
}

export interface CreateThing {
  readonly thingName: string;
  readonly thingTypeName?: string;
  readonly attributePayload?: AttributePayload;
  readonly billingGroupName?: string;
}

export interface CreateThingGroup {
  readonly thingGroupName: string;
  readonly parentGroupName?: string;
  readonly thingGroupProperties?: ThingGroupProperties;
  readonly tags?: [];
}

export interface CreateThingType {
  readonly thingTypeName: string;
  readonly thingTypeProperties?: ThingTypeProperties;
  readonly tags?: [];
}

export interface CreateTopicRule {
  readonly ruleName: string;
  readonly topicRulePayload: TopicRulePayload;
  readonly tags?: string;
}

export interface CreateTopicRuleDestination {
  readonly destinationConfiguration: TopicRuleDestinationConfiguration;
}

export interface DeleteAccountAuditConfiguration {
  readonly deleteScheduledAudits?: boolean;
}

export interface DeleteAuditSuppression {
  readonly checkName: string;
  readonly resourceIdentifier: ResourceIdentifier;
}

export interface DeleteAuthorizer {
  readonly authorizerName: string;
}

export interface DeleteBillingGroup {
  readonly billingGroupName: string;
  readonly expectedVersion?: number;
}

export interface DeleteCACertificate {
  readonly certificateId: string;
}

export interface DeleteCertificate {
  readonly certificateId: string;
  readonly forceDelete?: boolean;
}

export interface DeleteCustomMetric {
  readonly metricName: string;
}

export interface DeleteDimension {
  readonly name: string;
}

export interface DeleteDomainConfiguration {
  readonly domainConfigurationName: string;
}

export interface DeleteDynamicThingGroup {
  readonly thingGroupName: string;
  readonly expectedVersion?: number;
}

export interface DeleteFleetMetric {
  readonly metricName: string;
  readonly expectedVersion?: number;
}

export interface DeleteJob {
  readonly jobId: string;
  readonly force?: boolean;
  readonly namespaceId?: string;
}

export interface DeleteJobExecution {
  readonly jobId: string;
  readonly thingName: string;
  readonly executionNumber: number;
  readonly force?: boolean;
  readonly namespaceId?: string;
}

export interface DeleteJobTemplate {
  readonly jobTemplateId: string;
}

export interface DeleteMitigationAction {
  readonly actionName: string;
}

export interface DeleteOTAUpdate {
  readonly otaUpdateId: string;
  readonly deleteStream?: boolean;
  readonly forceDeleteAWSJob?: boolean;
}

export interface DeletePolicy {
  readonly policyName: string;
}

export interface DeletePolicyVersion {
  readonly policyName: string;
  readonly policyVersionId: string;
}

export interface DeleteProvisioningTemplate {
  readonly templateName: string;
}

export interface DeleteProvisioningTemplateVersion {
  readonly templateName: string;
  readonly versionId: number;
}

export interface DeleteRegistrationCode {
}

export interface DeleteRoleAlias {
  readonly roleAlias: string;
}

export interface DeleteScheduledAudit {
  readonly scheduledAuditName: string;
}

export interface DeleteSecurityProfile {
  readonly securityProfileName: string;
  readonly expectedVersion?: number;
}

export interface DeleteStream {
  readonly streamId: string;
}

export interface DeleteThing {
  readonly thingName: string;
  readonly expectedVersion?: number;
}

export interface DeleteThingGroup {
  readonly thingGroupName: string;
  readonly expectedVersion?: number;
}

export interface DeleteThingType {
  readonly thingTypeName: string;
}

export interface DeleteTopicRule {
  readonly ruleName: string;
}

export interface DeleteTopicRuleDestination {
  readonly arn: string;
}

export interface DeleteV2LoggingLevel {
  readonly targetType: string;
  readonly targetName: string;
}

export interface DeprecateThingType {
  readonly thingTypeName: string;
  readonly undoDeprecate?: boolean;
}

export interface DescribeAccountAuditConfiguration {
}

export interface DescribeAuditFinding {
  readonly findingId: string;
}

export interface DescribeAuditMitigationActionsTask {
  readonly taskId: string;
}

export interface DescribeAuditSuppression {
  readonly checkName: string;
  readonly resourceIdentifier: ResourceIdentifier;
}

export interface DescribeAuditTask {
  readonly taskId: string;
}

export interface DescribeAuthorizer {
  readonly authorizerName: string;
}

export interface DescribeBillingGroup {
  readonly billingGroupName: string;
}

export interface DescribeCACertificate {
  readonly certificateId: string;
}

export interface DescribeCertificate {
  readonly certificateId: string;
}

export interface DescribeCustomMetric {
  readonly metricName: string;
}

export interface DescribeDefaultAuthorizer {
}

export interface DescribeDetectMitigationActionsTask {
  readonly taskId: string;
}

export interface DescribeDimension {
  readonly name: string;
}

export interface DescribeDomainConfiguration {
  readonly domainConfigurationName: string;
}

export interface DescribeEndpoint {
  readonly endpointType?: string;
}

export interface DescribeEventConfigurations {
}

export interface DescribeFleetMetric {
  readonly metricName: string;
}

export interface DescribeIndex {
  readonly indexName: string;
}

export interface DescribeJob {
  readonly jobId: string;
}

export interface DescribeJobExecution {
  readonly jobId: string;
  readonly thingName: string;
  readonly executionNumber?: number;
}

export interface DescribeJobTemplate {
  readonly jobTemplateId: string;
}

export interface DescribeManagedJobTemplate {
  readonly templateName: string;
  readonly templateVersion?: string;
}

export interface DescribeMitigationAction {
  readonly actionName: string;
}

export interface DescribeProvisioningTemplate {
  readonly templateName: string;
}

export interface DescribeProvisioningTemplateVersion {
  readonly templateName: string;
  readonly versionId: number;
}

export interface DescribeRoleAlias {
  readonly roleAlias: string;
}

export interface DescribeScheduledAudit {
  readonly scheduledAuditName: string;
}

export interface DescribeSecurityProfile {
  readonly securityProfileName: string;
}

export interface DescribeStream {
  readonly streamId: string;
}

export interface DescribeThing {
  readonly thingName: string;
}

export interface DescribeThingGroup {
  readonly thingGroupName: string;
}

export interface DescribeThingRegistrationTask {
  readonly taskId: string;
}

export interface DescribeThingType {
  readonly thingTypeName: string;
}

export interface DetachPolicy {
  readonly policyName: string;
  readonly target: string;
}

export interface DetachPrincipalPolicy {
  readonly policyName: string;
  readonly principal: string;
}

export interface DetachSecurityProfile {
  readonly securityProfileName: string;
  readonly securityProfileTargetArn: string;
}

export interface DetachThingPrincipal {
  readonly thingName: string;
  readonly principal: string;
}

export interface DisableTopicRule {
  readonly ruleName: string;
}

export interface EnableTopicRule {
  readonly ruleName: string;
}

export interface GetBehaviorModelTrainingSummaries {
  readonly securityProfileName?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface GetBucketsAggregation {
  readonly indexName?: string;
  readonly queryString: string;
  readonly aggregationField: string;
  readonly queryVersion?: string;
  readonly bucketsAggregationType: BucketsAggregationType;
}

export interface GetCardinality {
  readonly indexName?: string;
  readonly queryString: string;
  readonly aggregationField?: string;
  readonly queryVersion?: string;
}

export interface GetEffectivePolicies {
  readonly principal?: string;
  readonly cognitoIdentityPoolId?: string;
  readonly thingName?: string;
}

export interface GetIndexingConfiguration {
}

export interface GetJobDocument {
  readonly jobId: string;
}

export interface GetLoggingOptions {
}

export interface GetOTAUpdate {
  readonly otaUpdateId: string;
}

export interface GetPercentiles {
  readonly indexName?: string;
  readonly queryString: string;
  readonly aggregationField?: string;
  readonly queryVersion?: string;
  readonly percents?: [];
}

export interface GetPolicy {
  readonly policyName: string;
}

export interface GetPolicyVersion {
  readonly policyName: string;
  readonly policyVersionId: string;
}

export interface GetRegistrationCode {
}

export interface GetStatistics {
  readonly indexName?: string;
  readonly queryString: string;
  readonly aggregationField?: string;
  readonly queryVersion?: string;
}

export interface GetTopicRule {
  readonly ruleName: string;
}

export interface GetTopicRuleDestination {
  readonly arn: string;
}

export interface GetV2LoggingOptions {
}

export interface ListActiveViolations {
  readonly thingName?: string;
  readonly securityProfileName?: string;
  readonly behaviorCriteriaType?: string;
  readonly listSuppressedAlerts?: boolean;
  readonly verificationState?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListAttachedPolicies {
  readonly target: string;
  readonly recursive?: boolean;
  readonly marker?: string;
  readonly pageSize?: number;
}

export interface ListAuditFindings {
  readonly taskId?: string;
  readonly checkName?: string;
  readonly resourceIdentifier?: ResourceIdentifier;
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly startTime?: Date;
  readonly endTime?: Date;
  readonly listSuppressedFindings?: boolean;
}

export interface ListAuditMitigationActionsExecutions {
  readonly taskId: string;
  readonly actionStatus?: string;
  readonly findingId: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListAuditMitigationActionsTasks {
  readonly auditTaskId?: string;
  readonly findingId?: string;
  readonly taskStatus?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly startTime: Date;
  readonly endTime: Date;
}

export interface ListAuditSuppressions {
  readonly checkName?: string;
  readonly resourceIdentifier?: ResourceIdentifier;
  readonly ascendingOrder?: boolean;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListAuditTasks {
  readonly startTime: Date;
  readonly endTime: Date;
  readonly taskType?: string;
  readonly taskStatus?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListAuthorizers {
  readonly pageSize?: number;
  readonly marker?: string;
  readonly ascendingOrder?: boolean;
  readonly status?: string;
}

export interface ListBillingGroups {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly namePrefixFilter?: string;
}

export interface ListCACertificates {
  readonly pageSize?: number;
  readonly marker?: string;
  readonly ascendingOrder?: boolean;
}

export interface ListCertificates {
  readonly pageSize?: number;
  readonly marker?: string;
  readonly ascendingOrder?: boolean;
}

export interface ListCertificatesByCA {
  readonly caCertificateId: string;
  readonly pageSize?: number;
  readonly marker?: string;
  readonly ascendingOrder?: boolean;
}

export interface ListCustomMetrics {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListDetectMitigationActionsExecutions {
  readonly taskId?: string;
  readonly violationId?: string;
  readonly thingName?: string;
  readonly startTime?: Date;
  readonly endTime?: Date;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListDetectMitigationActionsTasks {
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly startTime: Date;
  readonly endTime: Date;
}

export interface ListDimensions {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListDomainConfigurations {
  readonly marker?: string;
  readonly pageSize?: number;
  readonly serviceType?: string;
}

export interface ListFleetMetrics {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListIndices {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListJobExecutionsForJob {
  readonly jobId: string;
  readonly status?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListJobExecutionsForThing {
  readonly thingName: string;
  readonly status?: string;
  readonly namespaceId?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListJobTemplates {
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListJobs {
  readonly status?: string;
  readonly targetSelection?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly thingGroupName?: string;
  readonly thingGroupId?: string;
  readonly namespaceId?: string;
}

export interface ListManagedJobTemplates {
  readonly templateName?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListMitigationActions {
  readonly actionType?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListOTAUpdates {
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly otaUpdateStatus?: string;
}

export interface ListOutgoingCertificates {
  readonly pageSize?: number;
  readonly marker?: string;
  readonly ascendingOrder?: boolean;
}

export interface ListPolicies {
  readonly marker?: string;
  readonly pageSize?: number;
  readonly ascendingOrder?: boolean;
}

export interface ListPolicyPrincipals {
  readonly policyName: string;
  readonly marker?: string;
  readonly pageSize?: number;
  readonly ascendingOrder?: boolean;
}

export interface ListPolicyVersions {
  readonly policyName: string;
}

export interface ListPrincipalPolicies {
  readonly principal: string;
  readonly marker?: string;
  readonly pageSize?: number;
  readonly ascendingOrder?: boolean;
}

export interface ListPrincipalThings {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly principal: string;
}

export interface ListProvisioningTemplateVersions {
  readonly templateName: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListProvisioningTemplates {
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListRoleAliases {
  readonly pageSize?: number;
  readonly marker?: string;
  readonly ascendingOrder?: boolean;
}

export interface ListScheduledAudits {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListSecurityProfiles {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly dimensionName?: string;
  readonly metricName?: string;
}

export interface ListSecurityProfilesForTarget {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly recursive?: boolean;
  readonly securityProfileTargetArn: string;
}

export interface ListStreams {
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly ascendingOrder?: boolean;
}

export interface ListTagsForResource {
  readonly resourceArn: string;
  readonly nextToken?: string;
}

export interface ListTargetsForPolicy {
  readonly policyName: string;
  readonly marker?: string;
  readonly pageSize?: number;
}

export interface ListTargetsForSecurityProfile {
  readonly securityProfileName: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListThingGroups {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly parentGroup?: string;
  readonly namePrefixFilter?: string;
  readonly recursive?: boolean;
}

export interface ListThingGroupsForThing {
  readonly thingName: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListThingPrincipals {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly thingName: string;
}

export interface ListThingRegistrationTaskReports {
  readonly taskId: string;
  readonly reportType: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListThingRegistrationTasks {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly status?: string;
}

export interface ListThingTypes {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly thingTypeName?: string;
}

export interface ListThings {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly attributeName?: string;
  readonly attributeValue?: string;
  readonly thingTypeName?: string;
  readonly usePrefixAttributeValue?: boolean;
}

export interface ListThingsInBillingGroup {
  readonly billingGroupName: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListThingsInThingGroup {
  readonly thingGroupName: string;
  readonly recursive?: boolean;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListTopicRuleDestinations {
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListTopicRules {
  readonly topic?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly ruleDisabled?: boolean;
}

export interface ListV2LoggingLevels {
  readonly targetType?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListViolationEvents {
  readonly startTime: Date;
  readonly endTime: Date;
  readonly thingName?: string;
  readonly securityProfileName?: string;
  readonly behaviorCriteriaType?: string;
  readonly listSuppressedAlerts?: boolean;
  readonly verificationState?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface PutVerificationStateOnViolation {
  readonly violationId: string;
  readonly verificationState: string;
  readonly verificationStateDescription?: string;
}

export interface RegisterCACertificate {
  readonly caCertificate: string;
  readonly verificationCertificate: string;
  readonly setAsActive?: boolean;
  readonly allowAutoRegistration?: boolean;
  readonly registrationConfig?: RegistrationConfig;
  readonly tags?: [];
}

export interface RegisterCertificate {
  readonly certificatePem: string;
  readonly caCertificatePem?: string;
  readonly setAsActive?: boolean;
  readonly status?: string;
}

export interface RegisterCertificateWithoutCA {
  readonly certificatePem: string;
  readonly status?: string;
}

export interface RegisterThing {
  readonly templateBody: string;
  readonly parameters?: {[key: string]: any};
}

export interface RejectCertificateTransfer {
  readonly certificateId: string;
  readonly rejectReason?: string;
}

export interface RemoveThingFromBillingGroup {
  readonly billingGroupName?: string;
  readonly billingGroupArn?: string;
  readonly thingName?: string;
  readonly thingArn?: string;
}

export interface RemoveThingFromThingGroup {
  readonly thingGroupName?: string;
  readonly thingGroupArn?: string;
  readonly thingName?: string;
  readonly thingArn?: string;
}

export interface ReplaceTopicRule {
  readonly ruleName: string;
  readonly topicRulePayload: TopicRulePayload;
}

export interface SearchIndex {
  readonly indexName?: string;
  readonly queryString: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly queryVersion?: string;
}

export interface SetDefaultAuthorizer {
  readonly authorizerName: string;
}

export interface SetDefaultPolicyVersion {
  readonly policyName: string;
  readonly policyVersionId: string;
}

export interface SetLoggingOptions {
  readonly loggingOptionsPayload: LoggingOptionsPayload;
}

export interface SetV2LoggingLevel {
  readonly logTarget: LogTarget;
  readonly logLevel: string;
}

export interface SetV2LoggingOptions {
  readonly roleArn?: string;
  readonly defaultLogLevel?: string;
  readonly disableAllLogs?: boolean;
}

export interface StartAuditMitigationActionsTask {
  readonly taskId: string;
  readonly target: AuditMitigationActionsTaskTarget;
  readonly auditCheckToActionsMapping: {[key: string]: any};
  readonly clientRequestToken: string;
}

export interface StartDetectMitigationActionsTask {
  readonly taskId: string;
  readonly target: DetectMitigationActionsTaskTarget;
  readonly actions: [];
  readonly violationEventOccurrenceRange?: ViolationEventOccurrenceRange;
  readonly includeOnlyActiveViolations?: boolean;
  readonly includeSuppressedAlerts?: boolean;
  readonly clientRequestToken: string;
}

export interface StartOnDemandAuditTask {
  readonly targetCheckNames: [];
}

export interface StartThingRegistrationTask {
  readonly templateBody: string;
  readonly inputFileBucket: string;
  readonly inputFileKey: string;
  readonly roleArn: string;
}

export interface StopThingRegistrationTask {
  readonly taskId: string;
}

export interface TagResource {
  readonly resourceArn: string;
  readonly tags: [];
}

export interface TestAuthorization {
  readonly principal?: string;
  readonly cognitoIdentityPoolId?: string;
  readonly authInfos: [];
  readonly clientId?: string;
  readonly policyNamesToAdd?: [];
  readonly policyNamesToSkip?: [];
}

export interface TestInvokeAuthorizer {
  readonly authorizerName: string;
  readonly token?: string;
  readonly tokenSignature?: string;
  readonly httpContext?: HttpContext;
  readonly mqttContext?: MqttContext;
  readonly tlsContext?: TlsContext;
}

export interface TransferCertificate {
  readonly certificateId: string;
  readonly targetAwsAccount: string;
  readonly transferMessage?: string;
}

export interface UntagResource {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface UpdateAccountAuditConfiguration {
  readonly roleArn?: string;
  readonly auditNotificationTargetConfigurations?: {[key: string]: any};
  readonly auditCheckConfigurations?: {[key: string]: any};
}

export interface UpdateAuditSuppression {
  readonly checkName: string;
  readonly resourceIdentifier: ResourceIdentifier;
  readonly expirationDate?: Date;
  readonly suppressIndefinitely?: boolean;
  readonly description?: string;
}

export interface UpdateAuthorizer {
  readonly authorizerName: string;
  readonly authorizerFunctionArn?: string;
  readonly tokenKeyName?: string;
  readonly tokenSigningPublicKeys?: {[key: string]: any};
  readonly status?: string;
  readonly enableCachingForHttp?: boolean;
}

export interface UpdateBillingGroup {
  readonly billingGroupName: string;
  readonly billingGroupProperties: BillingGroupProperties;
  readonly expectedVersion?: number;
}

export interface UpdateCACertificate {
  readonly certificateId: string;
  readonly newStatus?: string;
  readonly newAutoRegistrationStatus?: string;
  readonly registrationConfig?: RegistrationConfig;
  readonly removeAutoRegistration?: boolean;
}

export interface UpdateCertificate {
  readonly certificateId: string;
  readonly newStatus: string;
}

export interface UpdateCustomMetric {
  readonly metricName: string;
  readonly displayName: string;
}

export interface UpdateDimension {
  readonly name: string;
  readonly stringValues: [];
}

export interface UpdateDomainConfiguration {
  readonly domainConfigurationName: string;
  readonly authorizerConfig?: AuthorizerConfig;
  readonly domainConfigurationStatus?: string;
  readonly removeAuthorizerConfig?: boolean;
}

export interface UpdateDynamicThingGroup {
  readonly thingGroupName: string;
  readonly thingGroupProperties: ThingGroupProperties;
  readonly expectedVersion?: number;
  readonly indexName?: string;
  readonly queryString?: string;
  readonly queryVersion?: string;
}

export interface UpdateEventConfigurations {
  readonly eventConfigurations?: {[key: string]: any};
}

export interface UpdateFleetMetric {
  readonly metricName: string;
  readonly queryString?: string;
  readonly aggregationType?: AggregationType;
  readonly period?: number;
  readonly aggregationField?: string;
  readonly description?: string;
  readonly queryVersion?: string;
  readonly indexName: string;
  readonly unit?: string;
  readonly expectedVersion?: number;
}

export interface UpdateIndexingConfiguration {
  readonly thingIndexingConfiguration?: ThingIndexingConfiguration;
  readonly thingGroupIndexingConfiguration?: ThingGroupIndexingConfiguration;
}

export interface UpdateJob {
  readonly jobId: string;
  readonly description?: string;
  readonly presignedUrlConfig?: PresignedUrlConfig;
  readonly jobExecutionsRolloutConfig?: JobExecutionsRolloutConfig;
  readonly abortConfig?: AbortConfig;
  readonly timeoutConfig?: TimeoutConfig;
  readonly namespaceId?: string;
}

export interface UpdateMitigationAction {
  readonly actionName: string;
  readonly roleArn?: string;
  readonly actionParams?: MitigationActionParams;
}

export interface UpdateProvisioningTemplate {
  readonly templateName: string;
  readonly description?: string;
  readonly enabled?: boolean;
  readonly defaultVersionId?: number;
  readonly provisioningRoleArn?: string;
  readonly preProvisioningHook?: ProvisioningHook;
  readonly removePreProvisioningHook?: boolean;
}

export interface UpdateRoleAlias {
  readonly roleAlias: string;
  readonly roleArn?: string;
  readonly credentialDurationSeconds?: number;
}

export interface UpdateScheduledAudit {
  readonly frequency?: string;
  readonly dayOfMonth?: string;
  readonly dayOfWeek?: string;
  readonly targetCheckNames?: [];
  readonly scheduledAuditName: string;
}

export interface UpdateSecurityProfile {
  readonly securityProfileName: string;
  readonly securityProfileDescription?: string;
  readonly behaviors?: [];
  readonly alertTargets?: {[key: string]: any};
  readonly additionalMetricsToRetain?: [];
  readonly additionalMetricsToRetainV2?: [];
  readonly deleteBehaviors?: boolean;
  readonly deleteAlertTargets?: boolean;
  readonly deleteAdditionalMetricsToRetain?: boolean;
  readonly expectedVersion?: number;
}

export interface UpdateStream {
  readonly streamId: string;
  readonly description?: string;
  readonly files?: [];
  readonly roleArn?: string;
}

export interface UpdateThing {
  readonly thingName: string;
  readonly thingTypeName?: string;
  readonly attributePayload?: AttributePayload;
  readonly expectedVersion?: number;
  readonly removeThingType?: boolean;
}

export interface UpdateThingGroup {
  readonly thingGroupName: string;
  readonly thingGroupProperties: ThingGroupProperties;
  readonly expectedVersion?: number;
}

export interface UpdateThingGroupsForThing {
  readonly thingName?: string;
  readonly thingGroupsToAdd?: [];
  readonly thingGroupsToRemove?: [];
  readonly overrideDynamicGroups?: boolean;
}

export interface UpdateTopicRuleDestination {
  readonly arn: string;
  readonly status: string;
}

export interface ValidateSecurityProfileBehaviors {
  readonly behaviors: [];
}

export interface AbortConfig {
  readonly criteriaList: [];
}

export interface AbortCriteria {
  readonly failureType: string;
  readonly action: string;
  readonly thresholdPercentage: unknown;
  readonly minNumberOfExecutedThings: number;
}

export interface AcceptCertificateTransferRequest {
  readonly certificateId: string;
  readonly setAsActive?: boolean;
}

export interface Action {
  readonly dynamoDB?: DynamoDBAction;
  readonly dynamoDBv2?: DynamoDBv2Action;
  readonly lambda?: LambdaAction;
  readonly sns?: SnsAction;
  readonly sqs?: SqsAction;
  readonly kinesis?: KinesisAction;
  readonly republish?: RepublishAction;
  readonly s3?: S3Action;
  readonly firehose?: FirehoseAction;
  readonly cloudwatchMetric?: CloudwatchMetricAction;
  readonly cloudwatchAlarm?: CloudwatchAlarmAction;
  readonly cloudwatchLogs?: CloudwatchLogsAction;
  readonly elasticsearch?: ElasticsearchAction;
  readonly salesforce?: SalesforceAction;
  readonly iotAnalytics?: IotAnalyticsAction;
  readonly iotEvents?: IotEventsAction;
  readonly iotSiteWise?: IotSiteWiseAction;
  readonly stepFunctions?: StepFunctionsAction;
  readonly timestream?: TimestreamAction;
  readonly http?: HttpAction;
  readonly kafka?: KafkaAction;
  readonly openSearch?: OpenSearchAction;
}

export interface ActiveViolation {
  readonly violationId?: string;
  readonly thingName?: string;
  readonly securityProfileName?: string;
  readonly behavior?: Behavior;
  readonly lastViolationValue?: MetricValue;
  readonly violationEventAdditionalInfo?: ViolationEventAdditionalInfo;
  readonly verificationState?: string;
  readonly verificationStateDescription?: string;
  readonly lastViolationTime?: Date;
  readonly violationStartTime?: Date;
}

export interface AddThingToBillingGroupRequest {
  readonly billingGroupName?: string;
  readonly billingGroupArn?: string;
  readonly thingName?: string;
  readonly thingArn?: string;
}

export interface AddThingToBillingGroupResponse {
}

export interface AddThingToThingGroupRequest {
  readonly thingGroupName?: string;
  readonly thingGroupArn?: string;
  readonly thingName?: string;
  readonly thingArn?: string;
  readonly overrideDynamicGroups?: boolean;
}

export interface AddThingToThingGroupResponse {
}

export interface AddThingsToThingGroupParams {
  readonly thingGroupNames: [];
  readonly overrideDynamicGroups?: boolean;
}

export interface AggregationType {
  readonly name: string;
  readonly values?: [];
}

export interface AlertTarget {
  readonly alertTargetArn: string;
  readonly roleArn: string;
}

export interface Allowed {
  readonly policies?: [];
}

export interface AssetPropertyTimestamp {
  readonly timeInSeconds: string;
  readonly offsetInNanos?: string;
}

export interface AssetPropertyValue {
  readonly value: AssetPropertyVariant;
  readonly timestamp: AssetPropertyTimestamp;
  readonly quality?: string;
}

export interface AssetPropertyVariant {
  readonly stringValue?: string;
  readonly integerValue?: string;
  readonly doubleValue?: string;
  readonly booleanValue?: string;
}

export interface AssociateTargetsWithJobRequest {
  readonly targets: [];
  readonly jobId: string;
  readonly comment?: string;
  readonly namespaceId?: string;
}

export interface AssociateTargetsWithJobResponse {
  readonly jobArn?: string;
  readonly jobId?: string;
  readonly description?: string;
}

export interface AttachPolicyRequest {
  readonly policyName: string;
  readonly target: string;
}

export interface AttachPrincipalPolicyRequest {
  readonly policyName: string;
  readonly principal: string;
}

export interface AttachSecurityProfileRequest {
  readonly securityProfileName: string;
  readonly securityProfileTargetArn: string;
}

export interface AttachSecurityProfileResponse {
}

export interface AttachThingPrincipalRequest {
  readonly thingName: string;
  readonly principal: string;
}

export interface AttachThingPrincipalResponse {
}

export interface AttributePayload {
  readonly attributes?: {[key: string]: any};
  readonly merge?: boolean;
}

export interface AuditCheckConfiguration {
  readonly enabled?: boolean;
}

export interface AuditCheckDetails {
  readonly checkRunStatus?: string;
  readonly checkCompliant?: boolean;
  readonly totalResourcesCount?: number;
  readonly nonCompliantResourcesCount?: number;
  readonly suppressedNonCompliantResourcesCount?: number;
  readonly errorCode?: string;
  readonly message?: string;
}

export interface AuditFinding {
  readonly findingId?: string;
  readonly taskId?: string;
  readonly checkName?: string;
  readonly taskStartTime?: Date;
  readonly findingTime?: Date;
  readonly severity?: string;
  readonly nonCompliantResource?: NonCompliantResource;
  readonly relatedResources?: [];
  readonly reasonForNonCompliance?: string;
  readonly reasonForNonComplianceCode?: string;
  readonly isSuppressed?: boolean;
}

export interface AuditMitigationActionExecutionMetadata {
  readonly taskId?: string;
  readonly findingId?: string;
  readonly actionName?: string;
  readonly actionId?: string;
  readonly status?: string;
  readonly startTime?: Date;
  readonly endTime?: Date;
  readonly errorCode?: string;
  readonly message?: string;
}

export interface AuditMitigationActionsTaskMetadata {
  readonly taskId?: string;
  readonly startTime?: Date;
  readonly taskStatus?: string;
}

export interface AuditMitigationActionsTaskTarget {
  readonly auditTaskId?: string;
  readonly findingIds?: [];
  readonly auditCheckToReasonCodeFilter?: {[key: string]: any};
}

export interface AuditNotificationTarget {
  readonly targetArn?: string;
  readonly roleArn?: string;
  readonly enabled?: boolean;
}

export interface AuditSuppression {
  readonly checkName: string;
  readonly resourceIdentifier: ResourceIdentifier;
  readonly expirationDate?: Date;
  readonly suppressIndefinitely?: boolean;
  readonly description?: string;
}

export interface AuditTaskMetadata {
  readonly taskId?: string;
  readonly taskStatus?: string;
  readonly taskType?: string;
}

export interface AuthInfo {
  readonly actionType?: string;
  readonly resources: [];
}

export interface AuthResult {
  readonly authInfo?: AuthInfo;
  readonly allowed?: Allowed;
  readonly denied?: Denied;
  readonly authDecision?: string;
  readonly missingContextValues?: [];
}

export interface AuthorizerConfig {
  readonly defaultAuthorizerName?: string;
  readonly allowAuthorizerOverride?: boolean;
}

export interface AuthorizerDescription {
  readonly authorizerName?: string;
  readonly authorizerArn?: string;
  readonly authorizerFunctionArn?: string;
  readonly tokenKeyName?: string;
  readonly tokenSigningPublicKeys?: {[key: string]: any};
  readonly status?: string;
  readonly creationDate?: Date;
  readonly lastModifiedDate?: Date;
  readonly signingDisabled?: boolean;
  readonly enableCachingForHttp?: boolean;
}

export interface AuthorizerSummary {
  readonly authorizerName?: string;
  readonly authorizerArn?: string;
}

export interface AwsJobAbortConfig {
  readonly abortCriteriaList: [];
}

export interface AwsJobAbortCriteria {
  readonly failureType: string;
  readonly action: string;
  readonly thresholdPercentage: unknown;
  readonly minNumberOfExecutedThings: number;
}

export interface AwsJobExecutionsRolloutConfig {
  readonly maximumPerMinute?: number;
  readonly exponentialRate?: AwsJobExponentialRolloutRate;
}

export interface AwsJobExponentialRolloutRate {
  readonly baseRatePerMinute: number;
  readonly incrementFactor: unknown;
  readonly rateIncreaseCriteria: AwsJobRateIncreaseCriteria;
}

export interface AwsJobPresignedUrlConfig {
  readonly expiresInSec?: number;
}

export interface AwsJobRateIncreaseCriteria {
  readonly numberOfNotifiedThings?: number;
  readonly numberOfSucceededThings?: number;
}

export interface AwsJobTimeoutConfig {
  readonly inProgressTimeoutInMinutes?: number;
}

export interface Behavior {
  readonly name: string;
  readonly metric?: string;
  readonly metricDimension?: MetricDimension;
  readonly criteria?: BehaviorCriteria;
  readonly suppressAlerts?: boolean;
}

export interface BehaviorCriteria {
  readonly comparisonOperator?: string;
  readonly value?: MetricValue;
  readonly durationSeconds?: number;
  readonly consecutiveDatapointsToAlarm?: number;
  readonly consecutiveDatapointsToClear?: number;
  readonly statisticalThreshold?: StatisticalThreshold;
  readonly mlDetectionConfig?: MachineLearningDetectionConfig;
}

export interface BehaviorModelTrainingSummary {
  readonly securityProfileName?: string;
  readonly behaviorName?: string;
  readonly trainingDataCollectionStartDate?: Date;
  readonly modelStatus?: string;
  readonly datapointsCollectionPercentage?: unknown;
  readonly lastModelRefreshDate?: Date;
}

export interface BillingGroupMetadata {
  readonly creationDate?: Date;
}

export interface BillingGroupProperties {
  readonly billingGroupDescription?: string;
}

export interface Bucket {
  readonly keyValue?: string;
  readonly count?: number;
}

export interface BucketsAggregationType {
  readonly termsAggregation?: TermsAggregation;
}

export interface CACertificate {
  readonly certificateArn?: string;
  readonly certificateId?: string;
  readonly status?: string;
  readonly creationDate?: Date;
}

export interface CACertificateDescription {
  readonly certificateArn?: string;
  readonly certificateId?: string;
  readonly status?: string;
  readonly certificatePem?: string;
  readonly ownedBy?: string;
  readonly creationDate?: Date;
  readonly autoRegistrationStatus?: string;
  readonly lastModifiedDate?: Date;
  readonly customerVersion?: number;
  readonly generationId?: string;
  readonly validity?: CertificateValidity;
}

export interface CancelAuditMitigationActionsTaskRequest {
  readonly taskId: string;
}

export interface CancelAuditMitigationActionsTaskResponse {
}

export interface CancelAuditTaskRequest {
  readonly taskId: string;
}

export interface CancelAuditTaskResponse {
}

export interface CancelCertificateTransferRequest {
  readonly certificateId: string;
}

export interface CancelDetectMitigationActionsTaskRequest {
  readonly taskId: string;
}

export interface CancelDetectMitigationActionsTaskResponse {
}

export interface CancelJobExecutionRequest {
  readonly jobId: string;
  readonly thingName: string;
  readonly force?: boolean;
  readonly expectedVersion?: number;
  readonly statusDetails?: {[key: string]: any};
}

export interface CancelJobRequest {
  readonly jobId: string;
  readonly reasonCode?: string;
  readonly comment?: string;
  readonly force?: boolean;
}

export interface CancelJobResponse {
  readonly jobArn?: string;
  readonly jobId?: string;
  readonly description?: string;
}

export interface Certificate {
  readonly certificateArn?: string;
  readonly certificateId?: string;
  readonly status?: string;
  readonly certificateMode?: string;
  readonly creationDate?: Date;
}

export interface CertificateConflictException {
  readonly message?: string;
}

export interface CertificateDescription {
  readonly certificateArn?: string;
  readonly certificateId?: string;
  readonly caCertificateId?: string;
  readonly status?: string;
  readonly certificatePem?: string;
  readonly ownedBy?: string;
  readonly previousOwnedBy?: string;
  readonly creationDate?: Date;
  readonly lastModifiedDate?: Date;
  readonly customerVersion?: number;
  readonly transferData?: TransferData;
  readonly generationId?: string;
  readonly validity?: CertificateValidity;
  readonly certificateMode?: string;
}

export interface CertificateStateException {
  readonly message?: string;
}

export interface CertificateValidationException {
  readonly message?: string;
}

export interface CertificateValidity {
  readonly notBefore?: Date;
  readonly notAfter?: Date;
}

export interface ClearDefaultAuthorizerRequest {
}

export interface ClearDefaultAuthorizerResponse {
}

export interface CloudwatchAlarmAction {
  readonly roleArn: string;
  readonly alarmName: string;
  readonly stateReason: string;
  readonly stateValue: string;
}

export interface CloudwatchLogsAction {
  readonly roleArn: string;
  readonly logGroupName: string;
}

export interface CloudwatchMetricAction {
  readonly roleArn: string;
  readonly metricNamespace: string;
  readonly metricName: string;
  readonly metricValue: string;
  readonly metricUnit: string;
  readonly metricTimestamp?: string;
}

export interface CodeSigning {
  readonly awsSignerJobId?: string;
  readonly startSigningJobParameter?: StartSigningJobParameter;
  readonly customCodeSigning?: CustomCodeSigning;
}

export interface CodeSigningCertificateChain {
  readonly certificateName?: string;
  readonly inlineDocument?: string;
}

export interface CodeSigningSignature {
  readonly inlineDocument?: unknown;
}

export interface Configuration {
  readonly Enabled?: boolean;
}

export interface ConfirmTopicRuleDestinationRequest {
  readonly confirmationToken: string;
}

export interface ConfirmTopicRuleDestinationResponse {
}

export interface ConflictException {
  readonly message?: string;
}

export interface ConflictingResourceUpdateException {
  readonly message?: string;
}

export interface CreateAuditSuppressionRequest {
  readonly checkName: string;
  readonly resourceIdentifier: ResourceIdentifier;
  readonly expirationDate?: Date;
  readonly suppressIndefinitely?: boolean;
  readonly description?: string;
  readonly clientRequestToken: string;
}

export interface CreateAuditSuppressionResponse {
}

export interface CreateAuthorizerRequest {
  readonly authorizerName: string;
  readonly authorizerFunctionArn: string;
  readonly tokenKeyName?: string;
  readonly tokenSigningPublicKeys?: {[key: string]: any};
  readonly status?: string;
  readonly tags?: [];
  readonly signingDisabled?: boolean;
  readonly enableCachingForHttp?: boolean;
}

export interface CreateAuthorizerResponse {
  readonly authorizerName?: string;
  readonly authorizerArn?: string;
}

export interface CreateBillingGroupRequest {
  readonly billingGroupName: string;
  readonly billingGroupProperties?: BillingGroupProperties;
  readonly tags?: [];
}

export interface CreateBillingGroupResponse {
  readonly billingGroupName?: string;
  readonly billingGroupArn?: string;
  readonly billingGroupId?: string;
}

export interface CreateCertificateFromCsrRequest {
  readonly certificateSigningRequest: string;
  readonly setAsActive?: boolean;
}

export interface CreateCertificateFromCsrResponse {
  readonly certificateArn?: string;
  readonly certificateId?: string;
  readonly certificatePem?: string;
}

export interface CreateCustomMetricRequest {
  readonly metricName: string;
  readonly displayName?: string;
  readonly metricType: string;
  readonly tags?: [];
  readonly clientRequestToken: string;
}

export interface CreateCustomMetricResponse {
  readonly metricName?: string;
  readonly metricArn?: string;
}

export interface CreateDimensionRequest {
  readonly name: string;
  readonly type: string;
  readonly stringValues: [];
  readonly tags?: [];
  readonly clientRequestToken: string;
}

export interface CreateDimensionResponse {
  readonly name?: string;
  readonly arn?: string;
}

export interface CreateDomainConfigurationRequest {
  readonly domainConfigurationName: string;
  readonly domainName?: string;
  readonly serverCertificateArns?: [];
  readonly validationCertificateArn?: string;
  readonly authorizerConfig?: AuthorizerConfig;
  readonly serviceType?: string;
  readonly tags?: [];
}

export interface CreateDomainConfigurationResponse {
  readonly domainConfigurationName?: string;
  readonly domainConfigurationArn?: string;
}

export interface CreateDynamicThingGroupRequest {
  readonly thingGroupName: string;
  readonly thingGroupProperties?: ThingGroupProperties;
  readonly indexName?: string;
  readonly queryString: string;
  readonly queryVersion?: string;
  readonly tags?: [];
}

export interface CreateDynamicThingGroupResponse {
  readonly thingGroupName?: string;
  readonly thingGroupArn?: string;
  readonly thingGroupId?: string;
  readonly indexName?: string;
  readonly queryString?: string;
  readonly queryVersion?: string;
}

export interface CreateFleetMetricRequest {
  readonly metricName: string;
  readonly queryString: string;
  readonly aggregationType: AggregationType;
  readonly period: number;
  readonly aggregationField: string;
  readonly description?: string;
  readonly queryVersion?: string;
  readonly indexName?: string;
  readonly unit?: string;
  readonly tags?: [];
}

export interface CreateFleetMetricResponse {
  readonly metricName?: string;
  readonly metricArn?: string;
}

export interface CreateJobRequest {
  readonly jobId: string;
  readonly targets: [];
  readonly documentSource?: string;
  readonly document?: string;
  readonly description?: string;
  readonly presignedUrlConfig?: PresignedUrlConfig;
  readonly targetSelection?: string;
  readonly jobExecutionsRolloutConfig?: JobExecutionsRolloutConfig;
  readonly abortConfig?: AbortConfig;
  readonly timeoutConfig?: TimeoutConfig;
  readonly tags?: [];
  readonly namespaceId?: string;
  readonly jobTemplateArn?: string;
  readonly documentParameters?: {[key: string]: any};
}

export interface CreateJobResponse {
  readonly jobArn?: string;
  readonly jobId?: string;
  readonly description?: string;
}

export interface CreateJobTemplateRequest {
  readonly jobTemplateId: string;
  readonly jobArn?: string;
  readonly documentSource?: string;
  readonly document?: string;
  readonly description: string;
  readonly presignedUrlConfig?: PresignedUrlConfig;
  readonly jobExecutionsRolloutConfig?: JobExecutionsRolloutConfig;
  readonly abortConfig?: AbortConfig;
  readonly timeoutConfig?: TimeoutConfig;
  readonly tags?: [];
}

export interface CreateJobTemplateResponse {
  readonly jobTemplateArn?: string;
  readonly jobTemplateId?: string;
}

export interface CreateKeysAndCertificateRequest {
  readonly setAsActive?: boolean;
}

export interface CreateKeysAndCertificateResponse {
  readonly certificateArn?: string;
  readonly certificateId?: string;
  readonly certificatePem?: string;
  readonly keyPair?: KeyPair;
}

export interface CreateMitigationActionRequest {
  readonly actionName: string;
  readonly roleArn: string;
  readonly actionParams: MitigationActionParams;
  readonly tags?: [];
}

export interface CreateMitigationActionResponse {
  readonly actionArn?: string;
  readonly actionId?: string;
}

export interface CreateOTAUpdateRequest {
  readonly otaUpdateId: string;
  readonly description?: string;
  readonly targets: [];
  readonly protocols?: [];
  readonly targetSelection?: string;
  readonly awsJobExecutionsRolloutConfig?: AwsJobExecutionsRolloutConfig;
  readonly awsJobPresignedUrlConfig?: AwsJobPresignedUrlConfig;
  readonly awsJobAbortConfig?: AwsJobAbortConfig;
  readonly awsJobTimeoutConfig?: AwsJobTimeoutConfig;
  readonly files: [];
  readonly roleArn: string;
  readonly additionalParameters?: {[key: string]: any};
  readonly tags?: [];
}

export interface CreateOTAUpdateResponse {
  readonly otaUpdateId?: string;
  readonly awsIotJobId?: string;
  readonly otaUpdateArn?: string;
  readonly awsIotJobArn?: string;
  readonly otaUpdateStatus?: string;
}

export interface CreatePolicyRequest {
  readonly policyName: string;
  readonly policyDocument: string;
  readonly tags?: [];
}

export interface CreatePolicyResponse {
  readonly policyName?: string;
  readonly policyArn?: string;
  readonly policyDocument?: string;
  readonly policyVersionId?: string;
}

export interface CreatePolicyVersionRequest {
  readonly policyName: string;
  readonly policyDocument: string;
  readonly setAsDefault?: boolean;
}

export interface CreatePolicyVersionResponse {
  readonly policyArn?: string;
  readonly policyDocument?: string;
  readonly policyVersionId?: string;
  readonly isDefaultVersion?: boolean;
}

export interface CreateProvisioningClaimRequest {
  readonly templateName: string;
}

export interface CreateProvisioningClaimResponse {
  readonly certificateId?: string;
  readonly certificatePem?: string;
  readonly keyPair?: KeyPair;
  readonly expiration?: Date;
}

export interface CreateProvisioningTemplateRequest {
  readonly templateName: string;
  readonly description?: string;
  readonly templateBody: string;
  readonly enabled?: boolean;
  readonly provisioningRoleArn: string;
  readonly preProvisioningHook?: ProvisioningHook;
  readonly tags?: [];
}

export interface CreateProvisioningTemplateResponse {
  readonly templateArn?: string;
  readonly templateName?: string;
  readonly defaultVersionId?: number;
}

export interface CreateProvisioningTemplateVersionRequest {
  readonly templateName: string;
  readonly templateBody: string;
  readonly setAsDefault?: boolean;
}

export interface CreateProvisioningTemplateVersionResponse {
  readonly templateArn?: string;
  readonly templateName?: string;
  readonly versionId?: number;
  readonly isDefaultVersion?: boolean;
}

export interface CreateRoleAliasRequest {
  readonly roleAlias: string;
  readonly roleArn: string;
  readonly credentialDurationSeconds?: number;
  readonly tags?: [];
}

export interface CreateRoleAliasResponse {
  readonly roleAlias?: string;
  readonly roleAliasArn?: string;
}

export interface CreateScheduledAuditRequest {
  readonly frequency: string;
  readonly dayOfMonth?: string;
  readonly dayOfWeek?: string;
  readonly targetCheckNames: [];
  readonly scheduledAuditName: string;
  readonly tags?: [];
}

export interface CreateScheduledAuditResponse {
  readonly scheduledAuditArn?: string;
}

export interface CreateSecurityProfileRequest {
  readonly securityProfileName: string;
  readonly securityProfileDescription?: string;
  readonly behaviors?: [];
  readonly alertTargets?: {[key: string]: any};
  readonly additionalMetricsToRetain?: [];
  readonly additionalMetricsToRetainV2?: [];
  readonly tags?: [];
}

export interface CreateSecurityProfileResponse {
  readonly securityProfileName?: string;
  readonly securityProfileArn?: string;
}

export interface CreateStreamRequest {
  readonly streamId: string;
  readonly description?: string;
  readonly files: [];
  readonly roleArn: string;
  readonly tags?: [];
}

export interface CreateStreamResponse {
  readonly streamId?: string;
  readonly streamArn?: string;
  readonly description?: string;
  readonly streamVersion?: number;
}

export interface CreateThingGroupRequest {
  readonly thingGroupName: string;
  readonly parentGroupName?: string;
  readonly thingGroupProperties?: ThingGroupProperties;
  readonly tags?: [];
}

export interface CreateThingGroupResponse {
  readonly thingGroupName?: string;
  readonly thingGroupArn?: string;
  readonly thingGroupId?: string;
}

export interface CreateThingRequest {
  readonly thingName: string;
  readonly thingTypeName?: string;
  readonly attributePayload?: AttributePayload;
  readonly billingGroupName?: string;
}

export interface CreateThingResponse {
  readonly thingName?: string;
  readonly thingArn?: string;
  readonly thingId?: string;
}

export interface CreateThingTypeRequest {
  readonly thingTypeName: string;
  readonly thingTypeProperties?: ThingTypeProperties;
  readonly tags?: [];
}

export interface CreateThingTypeResponse {
  readonly thingTypeName?: string;
  readonly thingTypeArn?: string;
  readonly thingTypeId?: string;
}

export interface CreateTopicRuleDestinationRequest {
  readonly destinationConfiguration: TopicRuleDestinationConfiguration;
}

export interface CreateTopicRuleDestinationResponse {
  readonly topicRuleDestination?: TopicRuleDestination;
}

export interface CreateTopicRuleRequest {
  readonly ruleName: string;
  readonly topicRulePayload: TopicRulePayload;
  readonly tags?: string;
}

export interface CustomCodeSigning {
  readonly signature?: CodeSigningSignature;
  readonly certificateChain?: CodeSigningCertificateChain;
  readonly hashAlgorithm?: string;
  readonly signatureAlgorithm?: string;
}

export interface DeleteAccountAuditConfigurationRequest {
  readonly deleteScheduledAudits?: boolean;
}

export interface DeleteAccountAuditConfigurationResponse {
}

export interface DeleteAuditSuppressionRequest {
  readonly checkName: string;
  readonly resourceIdentifier: ResourceIdentifier;
}

export interface DeleteAuditSuppressionResponse {
}

export interface DeleteAuthorizerRequest {
  readonly authorizerName: string;
}

export interface DeleteAuthorizerResponse {
}

export interface DeleteBillingGroupRequest {
  readonly billingGroupName: string;
  readonly expectedVersion?: number;
}

export interface DeleteBillingGroupResponse {
}

export interface DeleteCACertificateRequest {
  readonly certificateId: string;
}

export interface DeleteCACertificateResponse {
}

export interface DeleteCertificateRequest {
  readonly certificateId: string;
  readonly forceDelete?: boolean;
}

export interface DeleteConflictException {
  readonly message?: string;
}

export interface DeleteCustomMetricRequest {
  readonly metricName: string;
}

export interface DeleteCustomMetricResponse {
}

export interface DeleteDimensionRequest {
  readonly name: string;
}

export interface DeleteDimensionResponse {
}

export interface DeleteDomainConfigurationRequest {
  readonly domainConfigurationName: string;
}

export interface DeleteDomainConfigurationResponse {
}

export interface DeleteDynamicThingGroupRequest {
  readonly thingGroupName: string;
  readonly expectedVersion?: number;
}

export interface DeleteDynamicThingGroupResponse {
}

export interface DeleteFleetMetricRequest {
  readonly metricName: string;
  readonly expectedVersion?: number;
}

export interface DeleteJobExecutionRequest {
  readonly jobId: string;
  readonly thingName: string;
  readonly executionNumber: number;
  readonly force?: boolean;
  readonly namespaceId?: string;
}

export interface DeleteJobRequest {
  readonly jobId: string;
  readonly force?: boolean;
  readonly namespaceId?: string;
}

export interface DeleteJobTemplateRequest {
  readonly jobTemplateId: string;
}

export interface DeleteMitigationActionRequest {
  readonly actionName: string;
}

export interface DeleteMitigationActionResponse {
}

export interface DeleteOTAUpdateRequest {
  readonly otaUpdateId: string;
  readonly deleteStream?: boolean;
  readonly forceDeleteAWSJob?: boolean;
}

export interface DeleteOTAUpdateResponse {
}

export interface DeletePolicyRequest {
  readonly policyName: string;
}

export interface DeletePolicyVersionRequest {
  readonly policyName: string;
  readonly policyVersionId: string;
}

export interface DeleteProvisioningTemplateRequest {
  readonly templateName: string;
}

export interface DeleteProvisioningTemplateResponse {
}

export interface DeleteProvisioningTemplateVersionRequest {
  readonly templateName: string;
  readonly versionId: number;
}

export interface DeleteProvisioningTemplateVersionResponse {
}

export interface DeleteRegistrationCodeRequest {
}

export interface DeleteRegistrationCodeResponse {
}

export interface DeleteRoleAliasRequest {
  readonly roleAlias: string;
}

export interface DeleteRoleAliasResponse {
}

export interface DeleteScheduledAuditRequest {
  readonly scheduledAuditName: string;
}

export interface DeleteScheduledAuditResponse {
}

export interface DeleteSecurityProfileRequest {
  readonly securityProfileName: string;
  readonly expectedVersion?: number;
}

export interface DeleteSecurityProfileResponse {
}

export interface DeleteStreamRequest {
  readonly streamId: string;
}

export interface DeleteStreamResponse {
}

export interface DeleteThingGroupRequest {
  readonly thingGroupName: string;
  readonly expectedVersion?: number;
}

export interface DeleteThingGroupResponse {
}

export interface DeleteThingRequest {
  readonly thingName: string;
  readonly expectedVersion?: number;
}

export interface DeleteThingResponse {
}

export interface DeleteThingTypeRequest {
  readonly thingTypeName: string;
}

export interface DeleteThingTypeResponse {
}

export interface DeleteTopicRuleDestinationRequest {
  readonly arn: string;
}

export interface DeleteTopicRuleDestinationResponse {
}

export interface DeleteTopicRuleRequest {
  readonly ruleName: string;
}

export interface DeleteV2LoggingLevelRequest {
  readonly targetType: string;
  readonly targetName: string;
}

export interface Denied {
  readonly implicitDeny?: ImplicitDeny;
  readonly explicitDeny?: ExplicitDeny;
}

export interface DeprecateThingTypeRequest {
  readonly thingTypeName: string;
  readonly undoDeprecate?: boolean;
}

export interface DeprecateThingTypeResponse {
}

export interface DescribeAccountAuditConfigurationRequest {
}

export interface DescribeAccountAuditConfigurationResponse {
  readonly roleArn?: string;
  readonly auditNotificationTargetConfigurations?: {[key: string]: any};
  readonly auditCheckConfigurations?: {[key: string]: any};
}

export interface DescribeAuditFindingRequest {
  readonly findingId: string;
}

export interface DescribeAuditFindingResponse {
  readonly finding?: AuditFinding;
}

export interface DescribeAuditMitigationActionsTaskRequest {
  readonly taskId: string;
}

export interface DescribeAuditMitigationActionsTaskResponse {
  readonly taskStatus?: string;
  readonly startTime?: Date;
  readonly endTime?: Date;
  readonly taskStatistics?: {[key: string]: any};
  readonly target?: AuditMitigationActionsTaskTarget;
  readonly auditCheckToActionsMapping?: {[key: string]: any};
  readonly actionsDefinition?: [];
}

export interface DescribeAuditSuppressionRequest {
  readonly checkName: string;
  readonly resourceIdentifier: ResourceIdentifier;
}

export interface DescribeAuditSuppressionResponse {
  readonly checkName?: string;
  readonly resourceIdentifier?: ResourceIdentifier;
  readonly expirationDate?: Date;
  readonly suppressIndefinitely?: boolean;
  readonly description?: string;
}

export interface DescribeAuditTaskRequest {
  readonly taskId: string;
}

export interface DescribeAuditTaskResponse {
  readonly taskStatus?: string;
  readonly taskType?: string;
  readonly taskStartTime?: Date;
  readonly taskStatistics?: TaskStatistics;
  readonly scheduledAuditName?: string;
  readonly auditDetails?: {[key: string]: any};
}

export interface DescribeAuthorizerRequest {
  readonly authorizerName: string;
}

export interface DescribeAuthorizerResponse {
  readonly authorizerDescription?: AuthorizerDescription;
}

export interface DescribeBillingGroupRequest {
  readonly billingGroupName: string;
}

export interface DescribeBillingGroupResponse {
  readonly billingGroupName?: string;
  readonly billingGroupId?: string;
  readonly billingGroupArn?: string;
  readonly version?: number;
  readonly billingGroupProperties?: BillingGroupProperties;
  readonly billingGroupMetadata?: BillingGroupMetadata;
}

export interface DescribeCACertificateRequest {
  readonly certificateId: string;
}

export interface DescribeCACertificateResponse {
  readonly certificateDescription?: CACertificateDescription;
  readonly registrationConfig?: RegistrationConfig;
}

export interface DescribeCertificateRequest {
  readonly certificateId: string;
}

export interface DescribeCertificateResponse {
  readonly certificateDescription?: CertificateDescription;
}

export interface DescribeCustomMetricRequest {
  readonly metricName: string;
}

export interface DescribeCustomMetricResponse {
  readonly metricName?: string;
  readonly metricArn?: string;
  readonly metricType?: string;
  readonly displayName?: string;
  readonly creationDate?: Date;
  readonly lastModifiedDate?: Date;
}

export interface DescribeDefaultAuthorizerRequest {
}

export interface DescribeDefaultAuthorizerResponse {
  readonly authorizerDescription?: AuthorizerDescription;
}

export interface DescribeDetectMitigationActionsTaskRequest {
  readonly taskId: string;
}

export interface DescribeDetectMitigationActionsTaskResponse {
  readonly taskSummary?: DetectMitigationActionsTaskSummary;
}

export interface DescribeDimensionRequest {
  readonly name: string;
}

export interface DescribeDimensionResponse {
  readonly name?: string;
  readonly arn?: string;
  readonly type?: string;
  readonly stringValues?: [];
  readonly creationDate?: Date;
  readonly lastModifiedDate?: Date;
}

export interface DescribeDomainConfigurationRequest {
  readonly domainConfigurationName: string;
}

export interface DescribeDomainConfigurationResponse {
  readonly domainConfigurationName?: string;
  readonly domainConfigurationArn?: string;
  readonly domainName?: string;
  readonly serverCertificates?: [];
  readonly authorizerConfig?: AuthorizerConfig;
  readonly domainConfigurationStatus?: string;
  readonly serviceType?: string;
  readonly domainType?: string;
  readonly lastStatusChangeDate?: Date;
}

export interface DescribeEndpointRequest {
  readonly endpointType?: string;
}

export interface DescribeEndpointResponse {
  readonly endpointAddress?: string;
}

export interface DescribeEventConfigurationsRequest {
}

export interface DescribeEventConfigurationsResponse {
  readonly eventConfigurations?: {[key: string]: any};
  readonly creationDate?: Date;
  readonly lastModifiedDate?: Date;
}

export interface DescribeFleetMetricRequest {
  readonly metricName: string;
}

export interface DescribeFleetMetricResponse {
  readonly metricName?: string;
  readonly queryString?: string;
  readonly aggregationType?: AggregationType;
  readonly period?: number;
  readonly aggregationField?: string;
  readonly description?: string;
  readonly queryVersion?: string;
  readonly indexName?: string;
  readonly creationDate?: Date;
  readonly lastModifiedDate?: Date;
  readonly unit?: string;
  readonly version?: number;
  readonly metricArn?: string;
}

export interface DescribeIndexRequest {
  readonly indexName: string;
}

export interface DescribeIndexResponse {
  readonly indexName?: string;
  readonly indexStatus?: string;
  readonly schema?: string;
}

export interface DescribeJobExecutionRequest {
  readonly jobId: string;
  readonly thingName: string;
  readonly executionNumber?: number;
}

export interface DescribeJobExecutionResponse {
  readonly execution?: JobExecution;
}

export interface DescribeJobRequest {
  readonly jobId: string;
}

export interface DescribeJobResponse {
  readonly documentSource?: string;
  readonly job?: Job;
}

export interface DescribeJobTemplateRequest {
  readonly jobTemplateId: string;
}

export interface DescribeJobTemplateResponse {
  readonly jobTemplateArn?: string;
  readonly jobTemplateId?: string;
  readonly description?: string;
  readonly documentSource?: string;
  readonly document?: string;
  readonly createdAt?: Date;
  readonly presignedUrlConfig?: PresignedUrlConfig;
  readonly jobExecutionsRolloutConfig?: JobExecutionsRolloutConfig;
  readonly abortConfig?: AbortConfig;
  readonly timeoutConfig?: TimeoutConfig;
}

export interface DescribeManagedJobTemplateRequest {
  readonly templateName: string;
  readonly templateVersion?: string;
}

export interface DescribeManagedJobTemplateResponse {
  readonly templateName?: string;
  readonly templateArn?: string;
  readonly description?: string;
  readonly templateVersion?: string;
  readonly environments?: [];
  readonly documentParameters?: [];
  readonly document?: string;
}

export interface DescribeMitigationActionRequest {
  readonly actionName: string;
}

export interface DescribeMitigationActionResponse {
  readonly actionName?: string;
  readonly actionType?: string;
  readonly actionArn?: string;
  readonly actionId?: string;
  readonly roleArn?: string;
  readonly actionParams?: MitigationActionParams;
  readonly creationDate?: Date;
  readonly lastModifiedDate?: Date;
}

export interface DescribeProvisioningTemplateRequest {
  readonly templateName: string;
}

export interface DescribeProvisioningTemplateResponse {
  readonly templateArn?: string;
  readonly templateName?: string;
  readonly description?: string;
  readonly creationDate?: Date;
  readonly lastModifiedDate?: Date;
  readonly defaultVersionId?: number;
  readonly templateBody?: string;
  readonly enabled?: boolean;
  readonly provisioningRoleArn?: string;
  readonly preProvisioningHook?: ProvisioningHook;
}

export interface DescribeProvisioningTemplateVersionRequest {
  readonly templateName: string;
  readonly versionId: number;
}

export interface DescribeProvisioningTemplateVersionResponse {
  readonly versionId?: number;
  readonly creationDate?: Date;
  readonly templateBody?: string;
  readonly isDefaultVersion?: boolean;
}

export interface DescribeRoleAliasRequest {
  readonly roleAlias: string;
}

export interface DescribeRoleAliasResponse {
  readonly roleAliasDescription?: RoleAliasDescription;
}

export interface DescribeScheduledAuditRequest {
  readonly scheduledAuditName: string;
}

export interface DescribeScheduledAuditResponse {
  readonly frequency?: string;
  readonly dayOfMonth?: string;
  readonly dayOfWeek?: string;
  readonly targetCheckNames?: [];
  readonly scheduledAuditName?: string;
  readonly scheduledAuditArn?: string;
}

export interface DescribeSecurityProfileRequest {
  readonly securityProfileName: string;
}

export interface DescribeSecurityProfileResponse {
  readonly securityProfileName?: string;
  readonly securityProfileArn?: string;
  readonly securityProfileDescription?: string;
  readonly behaviors?: [];
  readonly alertTargets?: {[key: string]: any};
  readonly additionalMetricsToRetain?: [];
  readonly additionalMetricsToRetainV2?: [];
  readonly version?: number;
  readonly creationDate?: Date;
  readonly lastModifiedDate?: Date;
}

export interface DescribeStreamRequest {
  readonly streamId: string;
}

export interface DescribeStreamResponse {
  readonly streamInfo?: StreamInfo;
}

export interface DescribeThingGroupRequest {
  readonly thingGroupName: string;
}

export interface DescribeThingGroupResponse {
  readonly thingGroupName?: string;
  readonly thingGroupId?: string;
  readonly thingGroupArn?: string;
  readonly version?: number;
  readonly thingGroupProperties?: ThingGroupProperties;
  readonly thingGroupMetadata?: ThingGroupMetadata;
  readonly indexName?: string;
  readonly queryString?: string;
  readonly queryVersion?: string;
  readonly status?: string;
}

export interface DescribeThingRegistrationTaskRequest {
  readonly taskId: string;
}

export interface DescribeThingRegistrationTaskResponse {
  readonly taskId?: string;
  readonly creationDate?: Date;
  readonly lastModifiedDate?: Date;
  readonly templateBody?: string;
  readonly inputFileBucket?: string;
  readonly inputFileKey?: string;
  readonly roleArn?: string;
  readonly status?: string;
  readonly message?: string;
  readonly successCount?: number;
  readonly failureCount?: number;
  readonly percentageProgress?: number;
}

export interface DescribeThingRequest {
  readonly thingName: string;
}

export interface DescribeThingResponse {
  readonly defaultClientId?: string;
  readonly thingName?: string;
  readonly thingId?: string;
  readonly thingArn?: string;
  readonly thingTypeName?: string;
  readonly attributes?: {[key: string]: any};
  readonly version?: number;
  readonly billingGroupName?: string;
}

export interface DescribeThingTypeRequest {
  readonly thingTypeName: string;
}

export interface DescribeThingTypeResponse {
  readonly thingTypeName?: string;
  readonly thingTypeId?: string;
  readonly thingTypeArn?: string;
  readonly thingTypeProperties?: ThingTypeProperties;
  readonly thingTypeMetadata?: ThingTypeMetadata;
}

export interface Destination {
  readonly s3Destination?: S3Destination;
}

export interface DetachPolicyRequest {
  readonly policyName: string;
  readonly target: string;
}

export interface DetachPrincipalPolicyRequest {
  readonly policyName: string;
  readonly principal: string;
}

export interface DetachSecurityProfileRequest {
  readonly securityProfileName: string;
  readonly securityProfileTargetArn: string;
}

export interface DetachSecurityProfileResponse {
}

export interface DetachThingPrincipalRequest {
  readonly thingName: string;
  readonly principal: string;
}

export interface DetachThingPrincipalResponse {
}

export interface DetectMitigationActionExecution {
  readonly taskId?: string;
  readonly violationId?: string;
  readonly actionName?: string;
  readonly thingName?: string;
  readonly executionStartDate?: Date;
  readonly executionEndDate?: Date;
  readonly status?: string;
  readonly errorCode?: string;
  readonly message?: string;
}

export interface DetectMitigationActionsTaskStatistics {
  readonly actionsExecuted?: number;
  readonly actionsSkipped?: number;
  readonly actionsFailed?: number;
}

export interface DetectMitigationActionsTaskSummary {
  readonly taskId?: string;
  readonly taskStatus?: string;
  readonly taskStartTime?: Date;
  readonly taskEndTime?: Date;
  readonly target?: DetectMitigationActionsTaskTarget;
  readonly violationEventOccurrenceRange?: ViolationEventOccurrenceRange;
  readonly onlyActiveViolationsIncluded?: boolean;
  readonly suppressedAlertsIncluded?: boolean;
  readonly actionsDefinition?: [];
  readonly taskStatistics?: DetectMitigationActionsTaskStatistics;
}

export interface DetectMitigationActionsTaskTarget {
  readonly violationIds?: [];
  readonly securityProfileName?: string;
  readonly behaviorName?: string;
}

export interface DisableTopicRuleRequest {
  readonly ruleName: string;
}

export interface DocumentParameter {
  readonly key?: string;
  readonly description?: string;
  readonly regex?: string;
  readonly example?: string;
  readonly optional?: boolean;
}

export interface DomainConfigurationSummary {
  readonly domainConfigurationName?: string;
  readonly domainConfigurationArn?: string;
  readonly serviceType?: string;
}

export interface DynamoDBAction {
  readonly tableName: string;
  readonly roleArn: string;
  readonly operation?: string;
  readonly hashKeyField: string;
  readonly hashKeyValue: string;
  readonly hashKeyType?: string;
  readonly rangeKeyField?: string;
  readonly rangeKeyValue?: string;
  readonly rangeKeyType?: string;
  readonly payloadField?: string;
}

export interface DynamoDBv2Action {
  readonly roleArn: string;
  readonly putItem: PutItemInput;
}

export interface EffectivePolicy {
  readonly policyName?: string;
  readonly policyArn?: string;
  readonly policyDocument?: string;
}

export interface ElasticsearchAction {
  readonly roleArn: string;
  readonly endpoint: string;
  readonly index: string;
  readonly type: string;
  readonly id: string;
}

export interface EnableIoTLoggingParams {
  readonly roleArnForLogging: string;
  readonly logLevel: string;
}

export interface EnableTopicRuleRequest {
  readonly ruleName: string;
}

export interface ErrorInfo {
  readonly code?: string;
  readonly message?: string;
}

export interface ExplicitDeny {
  readonly policies?: [];
}

export interface ExponentialRolloutRate {
  readonly baseRatePerMinute: number;
  readonly incrementFactor: unknown;
  readonly rateIncreaseCriteria: RateIncreaseCriteria;
}

export interface Field {
  readonly name?: string;
  readonly type?: string;
}

export interface FileLocation {
  readonly stream?: Stream;
  readonly s3Location?: S3Location;
}

export interface FirehoseAction {
  readonly roleArn: string;
  readonly deliveryStreamName: string;
  readonly separator?: string;
  readonly batchMode?: boolean;
}

export interface FleetMetricNameAndArn {
  readonly metricName?: string;
  readonly metricArn?: string;
}

export interface GetBehaviorModelTrainingSummariesRequest {
  readonly securityProfileName?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface GetBehaviorModelTrainingSummariesResponse {
  readonly summaries?: [];
  readonly nextToken?: string;
}

export interface GetBucketsAggregationRequest {
  readonly indexName?: string;
  readonly queryString: string;
  readonly aggregationField: string;
  readonly queryVersion?: string;
  readonly bucketsAggregationType: BucketsAggregationType;
}

export interface GetBucketsAggregationResponse {
  readonly totalCount?: number;
  readonly buckets?: [];
}

export interface GetCardinalityRequest {
  readonly indexName?: string;
  readonly queryString: string;
  readonly aggregationField?: string;
  readonly queryVersion?: string;
}

export interface GetCardinalityResponse {
  readonly cardinality?: number;
}

export interface GetEffectivePoliciesRequest {
  readonly principal?: string;
  readonly cognitoIdentityPoolId?: string;
  readonly thingName?: string;
}

export interface GetEffectivePoliciesResponse {
  readonly effectivePolicies?: [];
}

export interface GetIndexingConfigurationRequest {
}

export interface GetIndexingConfigurationResponse {
  readonly thingIndexingConfiguration?: ThingIndexingConfiguration;
  readonly thingGroupIndexingConfiguration?: ThingGroupIndexingConfiguration;
}

export interface GetJobDocumentRequest {
  readonly jobId: string;
}

export interface GetJobDocumentResponse {
  readonly document?: string;
}

export interface GetLoggingOptionsRequest {
}

export interface GetLoggingOptionsResponse {
  readonly roleArn?: string;
  readonly logLevel?: string;
}

export interface GetOTAUpdateRequest {
  readonly otaUpdateId: string;
}

export interface GetOTAUpdateResponse {
  readonly otaUpdateInfo?: OTAUpdateInfo;
}

export interface GetPercentilesRequest {
  readonly indexName?: string;
  readonly queryString: string;
  readonly aggregationField?: string;
  readonly queryVersion?: string;
  readonly percents?: [];
}

export interface GetPercentilesResponse {
  readonly percentiles?: [];
}

export interface GetPolicyRequest {
  readonly policyName: string;
}

export interface GetPolicyResponse {
  readonly policyName?: string;
  readonly policyArn?: string;
  readonly policyDocument?: string;
  readonly defaultVersionId?: string;
  readonly creationDate?: Date;
  readonly lastModifiedDate?: Date;
  readonly generationId?: string;
}

export interface GetPolicyVersionRequest {
  readonly policyName: string;
  readonly policyVersionId: string;
}

export interface GetPolicyVersionResponse {
  readonly policyArn?: string;
  readonly policyName?: string;
  readonly policyDocument?: string;
  readonly policyVersionId?: string;
  readonly isDefaultVersion?: boolean;
  readonly creationDate?: Date;
  readonly lastModifiedDate?: Date;
  readonly generationId?: string;
}

export interface GetRegistrationCodeRequest {
}

export interface GetRegistrationCodeResponse {
  readonly registrationCode?: string;
}

export interface GetStatisticsRequest {
  readonly indexName?: string;
  readonly queryString: string;
  readonly aggregationField?: string;
  readonly queryVersion?: string;
}

export interface GetStatisticsResponse {
  readonly statistics?: Statistics;
}

export interface GetTopicRuleDestinationRequest {
  readonly arn: string;
}

export interface GetTopicRuleDestinationResponse {
  readonly topicRuleDestination?: TopicRuleDestination;
}

export interface GetTopicRuleRequest {
  readonly ruleName: string;
}

export interface GetTopicRuleResponse {
  readonly ruleArn?: string;
  readonly rule?: TopicRule;
}

export interface GetV2LoggingOptionsRequest {
}

export interface GetV2LoggingOptionsResponse {
  readonly roleArn?: string;
  readonly defaultLogLevel?: string;
  readonly disableAllLogs?: boolean;
}

export interface GroupNameAndArn {
  readonly groupName?: string;
  readonly groupArn?: string;
}

export interface HttpAction {
  readonly url: string;
  readonly confirmationUrl?: string;
  readonly headers?: [];
  readonly auth?: HttpAuthorization;
}

export interface HttpActionHeader {
  readonly key: string;
  readonly value: string;
}

export interface HttpAuthorization {
  readonly sigv4?: SigV4Authorization;
}

export interface HttpContext {
  readonly headers?: {[key: string]: any};
  readonly queryString?: string;
}

export interface HttpUrlDestinationConfiguration {
  readonly confirmationUrl: string;
}

export interface HttpUrlDestinationProperties {
  readonly confirmationUrl?: string;
}

export interface HttpUrlDestinationSummary {
  readonly confirmationUrl?: string;
}

export interface ImplicitDeny {
  readonly policies?: [];
}

export interface IndexNotReadyException {
  readonly message?: string;
}

export interface InternalException {
  readonly message?: string;
}

export interface InternalFailureException {
  readonly message?: string;
}

export interface InternalServerException {
  readonly message?: string;
}

export interface InvalidAggregationException {
  readonly message?: string;
}

export interface InvalidQueryException {
  readonly message?: string;
}

export interface InvalidRequestException {
  readonly message?: string;
}

export interface InvalidResponseException {
  readonly message?: string;
}

export interface InvalidStateTransitionException {
  readonly message?: string;
}

export interface IotAnalyticsAction {
  readonly channelArn?: string;
  readonly channelName?: string;
  readonly batchMode?: boolean;
  readonly roleArn?: string;
}

export interface IotEventsAction {
  readonly inputName: string;
  readonly messageId?: string;
  readonly batchMode?: boolean;
  readonly roleArn: string;
}

export interface IotSiteWiseAction {
  readonly putAssetPropertyValueEntries: [];
  readonly roleArn: string;
}

export interface Job {
  readonly jobArn?: string;
  readonly jobId?: string;
  readonly targetSelection?: string;
  readonly status?: string;
  readonly forceCanceled?: boolean;
  readonly reasonCode?: string;
  readonly comment?: string;
  readonly targets?: [];
  readonly description?: string;
  readonly presignedUrlConfig?: PresignedUrlConfig;
  readonly jobExecutionsRolloutConfig?: JobExecutionsRolloutConfig;
  readonly abortConfig?: AbortConfig;
  readonly createdAt?: Date;
  readonly lastUpdatedAt?: Date;
  readonly completedAt?: Date;
  readonly jobProcessDetails?: JobProcessDetails;
  readonly timeoutConfig?: TimeoutConfig;
  readonly namespaceId?: string;
  readonly jobTemplateArn?: string;
  readonly documentParameters?: {[key: string]: any};
}

export interface JobExecution {
  readonly jobId?: string;
  readonly status?: string;
  readonly forceCanceled?: boolean;
  readonly statusDetails?: JobExecutionStatusDetails;
  readonly thingArn?: string;
  readonly queuedAt?: Date;
  readonly startedAt?: Date;
  readonly lastUpdatedAt?: Date;
  readonly executionNumber?: number;
  readonly versionNumber?: number;
  readonly approximateSecondsBeforeTimedOut?: number;
}

export interface JobExecutionStatusDetails {
  readonly detailsMap?: {[key: string]: any};
}

export interface JobExecutionSummary {
  readonly status?: string;
  readonly queuedAt?: Date;
  readonly startedAt?: Date;
  readonly lastUpdatedAt?: Date;
  readonly executionNumber?: number;
}

export interface JobExecutionSummaryForJob {
  readonly thingArn?: string;
  readonly jobExecutionSummary?: JobExecutionSummary;
}

export interface JobExecutionSummaryForThing {
  readonly jobId?: string;
  readonly jobExecutionSummary?: JobExecutionSummary;
}

export interface JobExecutionsRolloutConfig {
  readonly maximumPerMinute?: number;
  readonly exponentialRate?: ExponentialRolloutRate;
}

export interface JobProcessDetails {
  readonly processingTargets?: [];
  readonly numberOfCanceledThings?: number;
  readonly numberOfSucceededThings?: number;
  readonly numberOfFailedThings?: number;
  readonly numberOfRejectedThings?: number;
  readonly numberOfQueuedThings?: number;
  readonly numberOfInProgressThings?: number;
  readonly numberOfRemovedThings?: number;
  readonly numberOfTimedOutThings?: number;
}

export interface JobSummary {
  readonly jobArn?: string;
  readonly jobId?: string;
  readonly thingGroupId?: string;
  readonly targetSelection?: string;
  readonly status?: string;
  readonly createdAt?: Date;
  readonly lastUpdatedAt?: Date;
  readonly completedAt?: Date;
}

export interface JobTemplateSummary {
  readonly jobTemplateArn?: string;
  readonly jobTemplateId?: string;
  readonly description?: string;
  readonly createdAt?: Date;
}

export interface KafkaAction {
  readonly destinationArn: string;
  readonly topic: string;
  readonly key?: string;
  readonly partition?: string;
  readonly clientProperties: {[key: string]: any};
}

export interface KeyPair {
  readonly PublicKey?: string;
  readonly PrivateKey?: string;
}

export interface KinesisAction {
  readonly roleArn: string;
  readonly streamName: string;
  readonly partitionKey?: string;
}

export interface LambdaAction {
  readonly functionArn: string;
}

export interface LimitExceededException {
  readonly message?: string;
}

export interface ListActiveViolationsRequest {
  readonly thingName?: string;
  readonly securityProfileName?: string;
  readonly behaviorCriteriaType?: string;
  readonly listSuppressedAlerts?: boolean;
  readonly verificationState?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListActiveViolationsResponse {
  readonly activeViolations?: [];
  readonly nextToken?: string;
}

export interface ListAttachedPoliciesRequest {
  readonly target: string;
  readonly recursive?: boolean;
  readonly marker?: string;
  readonly pageSize?: number;
}

export interface ListAttachedPoliciesResponse {
  readonly policies?: [];
  readonly nextMarker?: string;
}

export interface ListAuditFindingsRequest {
  readonly taskId?: string;
  readonly checkName?: string;
  readonly resourceIdentifier?: ResourceIdentifier;
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly startTime?: Date;
  readonly endTime?: Date;
  readonly listSuppressedFindings?: boolean;
}

export interface ListAuditFindingsResponse {
  readonly findings?: [];
  readonly nextToken?: string;
}

export interface ListAuditMitigationActionsExecutionsRequest {
  readonly taskId: string;
  readonly actionStatus?: string;
  readonly findingId: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListAuditMitigationActionsExecutionsResponse {
  readonly actionsExecutions?: [];
  readonly nextToken?: string;
}

export interface ListAuditMitigationActionsTasksRequest {
  readonly auditTaskId?: string;
  readonly findingId?: string;
  readonly taskStatus?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly startTime: Date;
  readonly endTime: Date;
}

export interface ListAuditMitigationActionsTasksResponse {
  readonly tasks?: [];
  readonly nextToken?: string;
}

export interface ListAuditSuppressionsRequest {
  readonly checkName?: string;
  readonly resourceIdentifier?: ResourceIdentifier;
  readonly ascendingOrder?: boolean;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListAuditSuppressionsResponse {
  readonly suppressions?: [];
  readonly nextToken?: string;
}

export interface ListAuditTasksRequest {
  readonly startTime: Date;
  readonly endTime: Date;
  readonly taskType?: string;
  readonly taskStatus?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListAuditTasksResponse {
  readonly tasks?: [];
  readonly nextToken?: string;
}

export interface ListAuthorizersRequest {
  readonly pageSize?: number;
  readonly marker?: string;
  readonly ascendingOrder?: boolean;
  readonly status?: string;
}

export interface ListAuthorizersResponse {
  readonly authorizers?: [];
  readonly nextMarker?: string;
}

export interface ListBillingGroupsRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly namePrefixFilter?: string;
}

export interface ListBillingGroupsResponse {
  readonly billingGroups?: [];
  readonly nextToken?: string;
}

export interface ListCACertificatesRequest {
  readonly pageSize?: number;
  readonly marker?: string;
  readonly ascendingOrder?: boolean;
}

export interface ListCACertificatesResponse {
  readonly certificates?: [];
  readonly nextMarker?: string;
}

export interface ListCertificatesByCARequest {
  readonly caCertificateId: string;
  readonly pageSize?: number;
  readonly marker?: string;
  readonly ascendingOrder?: boolean;
}

export interface ListCertificatesByCAResponse {
  readonly certificates?: [];
  readonly nextMarker?: string;
}

export interface ListCertificatesRequest {
  readonly pageSize?: number;
  readonly marker?: string;
  readonly ascendingOrder?: boolean;
}

export interface ListCertificatesResponse {
  readonly certificates?: [];
  readonly nextMarker?: string;
}

export interface ListCustomMetricsRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListCustomMetricsResponse {
  readonly metricNames?: [];
  readonly nextToken?: string;
}

export interface ListDetectMitigationActionsExecutionsRequest {
  readonly taskId?: string;
  readonly violationId?: string;
  readonly thingName?: string;
  readonly startTime?: Date;
  readonly endTime?: Date;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListDetectMitigationActionsExecutionsResponse {
  readonly actionsExecutions?: [];
  readonly nextToken?: string;
}

export interface ListDetectMitigationActionsTasksRequest {
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly startTime: Date;
  readonly endTime: Date;
}

export interface ListDetectMitigationActionsTasksResponse {
  readonly tasks?: [];
  readonly nextToken?: string;
}

export interface ListDimensionsRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListDimensionsResponse {
  readonly dimensionNames?: [];
  readonly nextToken?: string;
}

export interface ListDomainConfigurationsRequest {
  readonly marker?: string;
  readonly pageSize?: number;
  readonly serviceType?: string;
}

export interface ListDomainConfigurationsResponse {
  readonly domainConfigurations?: [];
  readonly nextMarker?: string;
}

export interface ListFleetMetricsRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListFleetMetricsResponse {
  readonly fleetMetrics?: [];
  readonly nextToken?: string;
}

export interface ListIndicesRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListIndicesResponse {
  readonly indexNames?: [];
  readonly nextToken?: string;
}

export interface ListJobExecutionsForJobRequest {
  readonly jobId: string;
  readonly status?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListJobExecutionsForJobResponse {
  readonly executionSummaries?: [];
  readonly nextToken?: string;
}

export interface ListJobExecutionsForThingRequest {
  readonly thingName: string;
  readonly status?: string;
  readonly namespaceId?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListJobExecutionsForThingResponse {
  readonly executionSummaries?: [];
  readonly nextToken?: string;
}

export interface ListJobTemplatesRequest {
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListJobTemplatesResponse {
  readonly jobTemplates?: [];
  readonly nextToken?: string;
}

export interface ListJobsRequest {
  readonly status?: string;
  readonly targetSelection?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly thingGroupName?: string;
  readonly thingGroupId?: string;
  readonly namespaceId?: string;
}

export interface ListJobsResponse {
  readonly jobs?: [];
  readonly nextToken?: string;
}

export interface ListManagedJobTemplatesRequest {
  readonly templateName?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListManagedJobTemplatesResponse {
  readonly managedJobTemplates?: [];
  readonly nextToken?: string;
}

export interface ListMitigationActionsRequest {
  readonly actionType?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListMitigationActionsResponse {
  readonly actionIdentifiers?: [];
  readonly nextToken?: string;
}

export interface ListOTAUpdatesRequest {
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly otaUpdateStatus?: string;
}

export interface ListOTAUpdatesResponse {
  readonly otaUpdates?: [];
  readonly nextToken?: string;
}

export interface ListOutgoingCertificatesRequest {
  readonly pageSize?: number;
  readonly marker?: string;
  readonly ascendingOrder?: boolean;
}

export interface ListOutgoingCertificatesResponse {
  readonly outgoingCertificates?: [];
  readonly nextMarker?: string;
}

export interface ListPoliciesRequest {
  readonly marker?: string;
  readonly pageSize?: number;
  readonly ascendingOrder?: boolean;
}

export interface ListPoliciesResponse {
  readonly policies?: [];
  readonly nextMarker?: string;
}

export interface ListPolicyPrincipalsRequest {
  readonly policyName: string;
  readonly marker?: string;
  readonly pageSize?: number;
  readonly ascendingOrder?: boolean;
}

export interface ListPolicyPrincipalsResponse {
  readonly principals?: [];
  readonly nextMarker?: string;
}

export interface ListPolicyVersionsRequest {
  readonly policyName: string;
}

export interface ListPolicyVersionsResponse {
  readonly policyVersions?: [];
}

export interface ListPrincipalPoliciesRequest {
  readonly principal: string;
  readonly marker?: string;
  readonly pageSize?: number;
  readonly ascendingOrder?: boolean;
}

export interface ListPrincipalPoliciesResponse {
  readonly policies?: [];
  readonly nextMarker?: string;
}

export interface ListPrincipalThingsRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly principal: string;
}

export interface ListPrincipalThingsResponse {
  readonly things?: [];
  readonly nextToken?: string;
}

export interface ListProvisioningTemplateVersionsRequest {
  readonly templateName: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListProvisioningTemplateVersionsResponse {
  readonly versions?: [];
  readonly nextToken?: string;
}

export interface ListProvisioningTemplatesRequest {
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListProvisioningTemplatesResponse {
  readonly templates?: [];
  readonly nextToken?: string;
}

export interface ListRoleAliasesRequest {
  readonly pageSize?: number;
  readonly marker?: string;
  readonly ascendingOrder?: boolean;
}

export interface ListRoleAliasesResponse {
  readonly roleAliases?: [];
  readonly nextMarker?: string;
}

export interface ListScheduledAuditsRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListScheduledAuditsResponse {
  readonly scheduledAudits?: [];
  readonly nextToken?: string;
}

export interface ListSecurityProfilesForTargetRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly recursive?: boolean;
  readonly securityProfileTargetArn: string;
}

export interface ListSecurityProfilesForTargetResponse {
  readonly securityProfileTargetMappings?: [];
  readonly nextToken?: string;
}

export interface ListSecurityProfilesRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly dimensionName?: string;
  readonly metricName?: string;
}

export interface ListSecurityProfilesResponse {
  readonly securityProfileIdentifiers?: [];
  readonly nextToken?: string;
}

export interface ListStreamsRequest {
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly ascendingOrder?: boolean;
}

export interface ListStreamsResponse {
  readonly streams?: [];
  readonly nextToken?: string;
}

export interface ListTagsForResourceRequest {
  readonly resourceArn: string;
  readonly nextToken?: string;
}

export interface ListTagsForResourceResponse {
  readonly tags?: [];
  readonly nextToken?: string;
}

export interface ListTargetsForPolicyRequest {
  readonly policyName: string;
  readonly marker?: string;
  readonly pageSize?: number;
}

export interface ListTargetsForPolicyResponse {
  readonly targets?: [];
  readonly nextMarker?: string;
}

export interface ListTargetsForSecurityProfileRequest {
  readonly securityProfileName: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListTargetsForSecurityProfileResponse {
  readonly securityProfileTargets?: [];
  readonly nextToken?: string;
}

export interface ListThingGroupsForThingRequest {
  readonly thingName: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListThingGroupsForThingResponse {
  readonly thingGroups?: [];
  readonly nextToken?: string;
}

export interface ListThingGroupsRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly parentGroup?: string;
  readonly namePrefixFilter?: string;
  readonly recursive?: boolean;
}

export interface ListThingGroupsResponse {
  readonly thingGroups?: [];
  readonly nextToken?: string;
}

export interface ListThingPrincipalsRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly thingName: string;
}

export interface ListThingPrincipalsResponse {
  readonly principals?: [];
  readonly nextToken?: string;
}

export interface ListThingRegistrationTaskReportsRequest {
  readonly taskId: string;
  readonly reportType: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListThingRegistrationTaskReportsResponse {
  readonly resourceLinks?: [];
  readonly reportType?: string;
  readonly nextToken?: string;
}

export interface ListThingRegistrationTasksRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly status?: string;
}

export interface ListThingRegistrationTasksResponse {
  readonly taskIds?: [];
  readonly nextToken?: string;
}

export interface ListThingTypesRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly thingTypeName?: string;
}

export interface ListThingTypesResponse {
  readonly thingTypes?: [];
  readonly nextToken?: string;
}

export interface ListThingsInBillingGroupRequest {
  readonly billingGroupName: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListThingsInBillingGroupResponse {
  readonly things?: [];
  readonly nextToken?: string;
}

export interface ListThingsInThingGroupRequest {
  readonly thingGroupName: string;
  readonly recursive?: boolean;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListThingsInThingGroupResponse {
  readonly things?: [];
  readonly nextToken?: string;
}

export interface ListThingsRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly attributeName?: string;
  readonly attributeValue?: string;
  readonly thingTypeName?: string;
  readonly usePrefixAttributeValue?: boolean;
}

export interface ListThingsResponse {
  readonly things?: [];
  readonly nextToken?: string;
}

export interface ListTopicRuleDestinationsRequest {
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListTopicRuleDestinationsResponse {
  readonly destinationSummaries?: [];
  readonly nextToken?: string;
}

export interface ListTopicRulesRequest {
  readonly topic?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly ruleDisabled?: boolean;
}

export interface ListTopicRulesResponse {
  readonly rules?: [];
  readonly nextToken?: string;
}

export interface ListV2LoggingLevelsRequest {
  readonly targetType?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListV2LoggingLevelsResponse {
  readonly logTargetConfigurations?: [];
  readonly nextToken?: string;
}

export interface ListViolationEventsRequest {
  readonly startTime: Date;
  readonly endTime: Date;
  readonly thingName?: string;
  readonly securityProfileName?: string;
  readonly behaviorCriteriaType?: string;
  readonly listSuppressedAlerts?: boolean;
  readonly verificationState?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListViolationEventsResponse {
  readonly violationEvents?: [];
  readonly nextToken?: string;
}

export interface LogTarget {
  readonly targetType: string;
  readonly targetName?: string;
}

export interface LogTargetConfiguration {
  readonly logTarget?: LogTarget;
  readonly logLevel?: string;
}

export interface LoggingOptionsPayload {
  readonly roleArn: string;
  readonly logLevel?: string;
}

export interface MachineLearningDetectionConfig {
  readonly confidenceLevel: string;
}

export interface MalformedPolicyException {
  readonly message?: string;
}

export interface ManagedJobTemplateSummary {
  readonly templateArn?: string;
  readonly templateName?: string;
  readonly description?: string;
  readonly environments?: [];
  readonly templateVersion?: string;
}

export interface MetricDimension {
  readonly dimensionName: string;
  readonly operator?: string;
}

export interface MetricToRetain {
  readonly metric: string;
  readonly metricDimension?: MetricDimension;
}

export interface MetricValue {
  readonly count?: number;
  readonly cidrs?: [];
  readonly ports?: [];
  readonly number?: unknown;
  readonly numbers?: [];
  readonly strings?: [];
}

export interface MitigationAction {
  readonly name?: string;
  readonly id?: string;
  readonly roleArn?: string;
  readonly actionParams?: MitigationActionParams;
}

export interface MitigationActionIdentifier {
  readonly actionName?: string;
  readonly actionArn?: string;
  readonly creationDate?: Date;
}

export interface MitigationActionParams {
  readonly updateDeviceCertificateParams?: UpdateDeviceCertificateParams;
  readonly updateCACertificateParams?: UpdateCACertificateParams;
  readonly addThingsToThingGroupParams?: AddThingsToThingGroupParams;
  readonly replaceDefaultPolicyVersionParams?: ReplaceDefaultPolicyVersionParams;
  readonly enableIoTLoggingParams?: EnableIoTLoggingParams;
  readonly publishFindingToSnsParams?: PublishFindingToSnsParams;
}

export interface MqttContext {
  readonly username?: string;
  readonly password?: unknown;
  readonly clientId?: string;
}

export interface NonCompliantResource {
  readonly resourceType?: string;
  readonly resourceIdentifier?: ResourceIdentifier;
  readonly additionalInfo?: {[key: string]: any};
}

export interface NotConfiguredException {
  readonly message?: string;
}

export interface OTAUpdateFile {
  readonly fileName?: string;
  readonly fileType?: number;
  readonly fileVersion?: string;
  readonly fileLocation?: FileLocation;
  readonly codeSigning?: CodeSigning;
  readonly attributes?: {[key: string]: any};
}

export interface OTAUpdateInfo {
  readonly otaUpdateId?: string;
  readonly otaUpdateArn?: string;
  readonly creationDate?: Date;
  readonly lastModifiedDate?: Date;
  readonly description?: string;
  readonly targets?: [];
  readonly protocols?: [];
  readonly awsJobExecutionsRolloutConfig?: AwsJobExecutionsRolloutConfig;
  readonly awsJobPresignedUrlConfig?: AwsJobPresignedUrlConfig;
  readonly targetSelection?: string;
  readonly otaUpdateFiles?: [];
  readonly otaUpdateStatus?: string;
  readonly awsIotJobId?: string;
  readonly awsIotJobArn?: string;
  readonly errorInfo?: ErrorInfo;
  readonly additionalParameters?: {[key: string]: any};
}

export interface OTAUpdateSummary {
  readonly otaUpdateId?: string;
  readonly otaUpdateArn?: string;
  readonly creationDate?: Date;
}

export interface OpenSearchAction {
  readonly roleArn: string;
  readonly endpoint: string;
  readonly index: string;
  readonly type: string;
  readonly id: string;
}

export interface OutgoingCertificate {
  readonly certificateArn?: string;
  readonly certificateId?: string;
  readonly transferredTo?: string;
  readonly transferDate?: Date;
  readonly transferMessage?: string;
  readonly creationDate?: Date;
}

export interface PercentPair {
  readonly percent?: unknown;
  readonly value?: unknown;
}

export interface Policy {
  readonly policyName?: string;
  readonly policyArn?: string;
}

export interface PolicyVersion {
  readonly versionId?: string;
  readonly isDefaultVersion?: boolean;
  readonly createDate?: Date;
}

export interface PolicyVersionIdentifier {
  readonly policyName?: string;
  readonly policyVersionId?: string;
}

export interface PresignedUrlConfig {
  readonly roleArn?: string;
  readonly expiresInSec?: number;
}

export interface ProvisioningHook {
  readonly payloadVersion?: string;
  readonly targetArn: string;
}

export interface ProvisioningTemplateSummary {
  readonly templateArn?: string;
  readonly templateName?: string;
  readonly description?: string;
  readonly creationDate?: Date;
  readonly lastModifiedDate?: Date;
  readonly enabled?: boolean;
}

export interface ProvisioningTemplateVersionSummary {
  readonly versionId?: number;
  readonly creationDate?: Date;
  readonly isDefaultVersion?: boolean;
}

export interface PublishFindingToSnsParams {
  readonly topicArn: string;
}

export interface PutAssetPropertyValueEntry {
  readonly entryId?: string;
  readonly assetId?: string;
  readonly propertyId?: string;
  readonly propertyAlias?: string;
  readonly propertyValues: [];
}

export interface PutItemInput {
  readonly tableName: string;
}

export interface PutVerificationStateOnViolationRequest {
  readonly violationId: string;
  readonly verificationState: string;
  readonly verificationStateDescription?: string;
}

export interface PutVerificationStateOnViolationResponse {
}

export interface RateIncreaseCriteria {
  readonly numberOfNotifiedThings?: number;
  readonly numberOfSucceededThings?: number;
}

export interface RegisterCACertificateRequest {
  readonly caCertificate: string;
  readonly verificationCertificate: string;
  readonly setAsActive?: boolean;
  readonly allowAutoRegistration?: boolean;
  readonly registrationConfig?: RegistrationConfig;
  readonly tags?: [];
}

export interface RegisterCACertificateResponse {
  readonly certificateArn?: string;
  readonly certificateId?: string;
}

export interface RegisterCertificateRequest {
  readonly certificatePem: string;
  readonly caCertificatePem?: string;
  readonly setAsActive?: boolean;
  readonly status?: string;
}

export interface RegisterCertificateResponse {
  readonly certificateArn?: string;
  readonly certificateId?: string;
}

export interface RegisterCertificateWithoutCARequest {
  readonly certificatePem: string;
  readonly status?: string;
}

export interface RegisterCertificateWithoutCAResponse {
  readonly certificateArn?: string;
  readonly certificateId?: string;
}

export interface RegisterThingRequest {
  readonly templateBody: string;
  readonly parameters?: {[key: string]: any};
}

export interface RegisterThingResponse {
  readonly certificatePem?: string;
  readonly resourceArns?: {[key: string]: any};
}

export interface RegistrationCodeValidationException {
  readonly message?: string;
}

export interface RegistrationConfig {
  readonly templateBody?: string;
  readonly roleArn?: string;
}

export interface RejectCertificateTransferRequest {
  readonly certificateId: string;
  readonly rejectReason?: string;
}

export interface RelatedResource {
  readonly resourceType?: string;
  readonly resourceIdentifier?: ResourceIdentifier;
  readonly additionalInfo?: {[key: string]: any};
}

export interface RemoveThingFromBillingGroupRequest {
  readonly billingGroupName?: string;
  readonly billingGroupArn?: string;
  readonly thingName?: string;
  readonly thingArn?: string;
}

export interface RemoveThingFromBillingGroupResponse {
}

export interface RemoveThingFromThingGroupRequest {
  readonly thingGroupName?: string;
  readonly thingGroupArn?: string;
  readonly thingName?: string;
  readonly thingArn?: string;
}

export interface RemoveThingFromThingGroupResponse {
}

export interface ReplaceDefaultPolicyVersionParams {
  readonly templateName: string;
}

export interface ReplaceTopicRuleRequest {
  readonly ruleName: string;
  readonly topicRulePayload: TopicRulePayload;
}

export interface RepublishAction {
  readonly roleArn: string;
  readonly topic: string;
  readonly qos?: number;
}

export interface ResourceAlreadyExistsException {
  readonly message?: string;
  readonly resourceId?: string;
  readonly resourceArn?: string;
}

export interface ResourceIdentifier {
  readonly deviceCertificateId?: string;
  readonly caCertificateId?: string;
  readonly cognitoIdentityPoolId?: string;
  readonly clientId?: string;
  readonly policyVersionIdentifier?: PolicyVersionIdentifier;
  readonly account?: string;
  readonly iamRoleArn?: string;
  readonly roleAliasArn?: string;
}

export interface ResourceNotFoundException {
  readonly message?: string;
}

export interface ResourceRegistrationFailureException {
  readonly message?: string;
}

export interface RoleAliasDescription {
  readonly roleAlias?: string;
  readonly roleAliasArn?: string;
  readonly roleArn?: string;
  readonly owner?: string;
  readonly credentialDurationSeconds?: number;
  readonly creationDate?: Date;
  readonly lastModifiedDate?: Date;
}

export interface S3Action {
  readonly roleArn: string;
  readonly bucketName: string;
  readonly key: string;
  readonly cannedAcl?: string;
}

export interface S3Destination {
  readonly bucket?: string;
  readonly prefix?: string;
}

export interface S3Location {
  readonly bucket?: string;
  readonly key?: string;
  readonly version?: string;
}

export interface SalesforceAction {
  readonly token: string;
  readonly url: string;
}

export interface ScheduledAuditMetadata {
  readonly scheduledAuditName?: string;
  readonly scheduledAuditArn?: string;
  readonly frequency?: string;
  readonly dayOfMonth?: string;
  readonly dayOfWeek?: string;
}

export interface SearchIndexRequest {
  readonly indexName?: string;
  readonly queryString: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly queryVersion?: string;
}

export interface SearchIndexResponse {
  readonly nextToken?: string;
  readonly things?: [];
  readonly thingGroups?: [];
}

export interface SecurityProfileIdentifier {
  readonly name: string;
  readonly arn: string;
}

export interface SecurityProfileTarget {
  readonly arn: string;
}

export interface SecurityProfileTargetMapping {
  readonly securityProfileIdentifier?: SecurityProfileIdentifier;
  readonly target?: SecurityProfileTarget;
}

export interface ServerCertificateSummary {
  readonly serverCertificateArn?: string;
  readonly serverCertificateStatus?: string;
  readonly serverCertificateStatusDetail?: string;
}

export interface ServiceUnavailableException {
  readonly message?: string;
}

export interface SetDefaultAuthorizerRequest {
  readonly authorizerName: string;
}

export interface SetDefaultAuthorizerResponse {
  readonly authorizerName?: string;
  readonly authorizerArn?: string;
}

export interface SetDefaultPolicyVersionRequest {
  readonly policyName: string;
  readonly policyVersionId: string;
}

export interface SetLoggingOptionsRequest {
  readonly loggingOptionsPayload: LoggingOptionsPayload;
}

export interface SetV2LoggingLevelRequest {
  readonly logTarget: LogTarget;
  readonly logLevel: string;
}

export interface SetV2LoggingOptionsRequest {
  readonly roleArn?: string;
  readonly defaultLogLevel?: string;
  readonly disableAllLogs?: boolean;
}

export interface SigV4Authorization {
  readonly signingRegion: string;
  readonly serviceName: string;
  readonly roleArn: string;
}

export interface SigningProfileParameter {
  readonly certificateArn?: string;
  readonly platform?: string;
  readonly certificatePathOnDevice?: string;
}

export interface SnsAction {
  readonly targetArn: string;
  readonly roleArn: string;
  readonly messageFormat?: string;
}

export interface SqlParseException {
  readonly message?: string;
}

export interface SqsAction {
  readonly roleArn: string;
  readonly queueUrl: string;
  readonly useBase64?: boolean;
}

export interface StartAuditMitigationActionsTaskRequest {
  readonly taskId: string;
  readonly target: AuditMitigationActionsTaskTarget;
  readonly auditCheckToActionsMapping: {[key: string]: any};
  readonly clientRequestToken: string;
}

export interface StartAuditMitigationActionsTaskResponse {
  readonly taskId?: string;
}

export interface StartDetectMitigationActionsTaskRequest {
  readonly taskId: string;
  readonly target: DetectMitigationActionsTaskTarget;
  readonly actions: [];
  readonly violationEventOccurrenceRange?: ViolationEventOccurrenceRange;
  readonly includeOnlyActiveViolations?: boolean;
  readonly includeSuppressedAlerts?: boolean;
  readonly clientRequestToken: string;
}

export interface StartDetectMitigationActionsTaskResponse {
  readonly taskId?: string;
}

export interface StartOnDemandAuditTaskRequest {
  readonly targetCheckNames: [];
}

export interface StartOnDemandAuditTaskResponse {
  readonly taskId?: string;
}

export interface StartSigningJobParameter {
  readonly signingProfileParameter?: SigningProfileParameter;
  readonly signingProfileName?: string;
  readonly destination?: Destination;
}

export interface StartThingRegistrationTaskRequest {
  readonly templateBody: string;
  readonly inputFileBucket: string;
  readonly inputFileKey: string;
  readonly roleArn: string;
}

export interface StartThingRegistrationTaskResponse {
  readonly taskId?: string;
}

export interface StatisticalThreshold {
  readonly statistic?: string;
}

export interface Statistics {
  readonly count?: number;
  readonly average?: unknown;
  readonly sum?: unknown;
  readonly minimum?: unknown;
  readonly maximum?: unknown;
  readonly sumOfSquares?: unknown;
  readonly variance?: unknown;
  readonly stdDeviation?: unknown;
}

export interface StepFunctionsAction {
  readonly executionNamePrefix?: string;
  readonly stateMachineName: string;
  readonly roleArn: string;
}

export interface StopThingRegistrationTaskRequest {
  readonly taskId: string;
}

export interface StopThingRegistrationTaskResponse {
}

export interface Stream {
  readonly streamId?: string;
  readonly fileId?: number;
}

export interface StreamFile {
  readonly fileId?: number;
  readonly s3Location?: S3Location;
}

export interface StreamInfo {
  readonly streamId?: string;
  readonly streamArn?: string;
  readonly streamVersion?: number;
  readonly description?: string;
  readonly files?: [];
  readonly createdAt?: Date;
  readonly lastUpdatedAt?: Date;
  readonly roleArn?: string;
}

export interface StreamSummary {
  readonly streamId?: string;
  readonly streamArn?: string;
  readonly streamVersion?: number;
  readonly description?: string;
}

export interface Tag {
  readonly Key: string;
  readonly Value?: string;
}

export interface TagResourceRequest {
  readonly resourceArn: string;
  readonly tags: [];
}

export interface TagResourceResponse {
}

export interface TaskAlreadyExistsException {
  readonly message?: string;
}

export interface TaskStatistics {
  readonly totalChecks?: number;
  readonly inProgressChecks?: number;
  readonly waitingForDataCollectionChecks?: number;
  readonly compliantChecks?: number;
  readonly nonCompliantChecks?: number;
  readonly failedChecks?: number;
  readonly canceledChecks?: number;
}

export interface TaskStatisticsForAuditCheck {
  readonly totalFindingsCount?: number;
  readonly failedFindingsCount?: number;
  readonly succeededFindingsCount?: number;
  readonly skippedFindingsCount?: number;
  readonly canceledFindingsCount?: number;
}

export interface TermsAggregation {
  readonly maxBuckets?: number;
}

export interface TestAuthorizationRequest {
  readonly principal?: string;
  readonly cognitoIdentityPoolId?: string;
  readonly authInfos: [];
  readonly clientId?: string;
  readonly policyNamesToAdd?: [];
  readonly policyNamesToSkip?: [];
}

export interface TestAuthorizationResponse {
  readonly authResults?: [];
}

export interface TestInvokeAuthorizerRequest {
  readonly authorizerName: string;
  readonly token?: string;
  readonly tokenSignature?: string;
  readonly httpContext?: HttpContext;
  readonly mqttContext?: MqttContext;
  readonly tlsContext?: TlsContext;
}

export interface TestInvokeAuthorizerResponse {
  readonly isAuthenticated?: boolean;
  readonly principalId?: string;
  readonly policyDocuments?: [];
  readonly refreshAfterInSeconds?: number;
  readonly disconnectAfterInSeconds?: number;
}

export interface ThingAttribute {
  readonly thingName?: string;
  readonly thingTypeName?: string;
  readonly thingArn?: string;
  readonly attributes?: {[key: string]: any};
  readonly version?: number;
}

export interface ThingConnectivity {
  readonly connected?: boolean;
  readonly timestamp?: number;
  readonly disconnectReason?: string;
}

export interface ThingDocument {
  readonly thingName?: string;
  readonly thingId?: string;
  readonly thingTypeName?: string;
  readonly thingGroupNames?: [];
  readonly attributes?: {[key: string]: any};
  readonly shadow?: string;
  readonly deviceDefender?: string;
  readonly connectivity?: ThingConnectivity;
}

export interface ThingGroupDocument {
  readonly thingGroupName?: string;
  readonly thingGroupId?: string;
  readonly thingGroupDescription?: string;
  readonly attributes?: {[key: string]: any};
  readonly parentGroupNames?: [];
}

export interface ThingGroupIndexingConfiguration {
  readonly thingGroupIndexingMode: string;
  readonly managedFields?: [];
  readonly customFields?: [];
}

export interface ThingGroupMetadata {
  readonly parentGroupName?: string;
  readonly rootToParentThingGroups?: [];
  readonly creationDate?: Date;
}

export interface ThingGroupProperties {
  readonly thingGroupDescription?: string;
  readonly attributePayload?: AttributePayload;
}

export interface ThingIndexingConfiguration {
  readonly thingIndexingMode: string;
  readonly thingConnectivityIndexingMode?: string;
  readonly deviceDefenderIndexingMode?: string;
  readonly namedShadowIndexingMode?: string;
  readonly managedFields?: [];
  readonly customFields?: [];
}

export interface ThingTypeDefinition {
  readonly thingTypeName?: string;
  readonly thingTypeArn?: string;
  readonly thingTypeProperties?: ThingTypeProperties;
  readonly thingTypeMetadata?: ThingTypeMetadata;
}

export interface ThingTypeMetadata {
  readonly deprecated?: boolean;
  readonly deprecationDate?: Date;
  readonly creationDate?: Date;
}

export interface ThingTypeProperties {
  readonly thingTypeDescription?: string;
  readonly searchableAttributes?: [];
}

export interface ThrottlingException {
  readonly message?: string;
}

export interface TimeoutConfig {
  readonly inProgressTimeoutInMinutes?: number;
}

export interface TimestreamAction {
  readonly roleArn: string;
  readonly databaseName: string;
  readonly tableName: string;
  readonly dimensions: [];
  readonly timestamp?: TimestreamTimestamp;
}

export interface TimestreamDimension {
  readonly name: string;
  readonly value: string;
}

export interface TimestreamTimestamp {
  readonly value: string;
  readonly unit: string;
}

export interface TlsContext {
  readonly serverName?: string;
}

export interface TopicRule {
  readonly ruleName?: string;
  readonly sql?: string;
  readonly description?: string;
  readonly createdAt?: Date;
  readonly actions?: [];
  readonly ruleDisabled?: boolean;
  readonly awsIotSqlVersion?: string;
  readonly errorAction?: Action;
}

export interface TopicRuleDestination {
  readonly arn?: string;
  readonly status?: string;
  readonly createdAt?: Date;
  readonly lastUpdatedAt?: Date;
  readonly statusReason?: string;
  readonly httpUrlProperties?: HttpUrlDestinationProperties;
  readonly vpcProperties?: VpcDestinationProperties;
}

export interface TopicRuleDestinationConfiguration {
  readonly httpUrlConfiguration?: HttpUrlDestinationConfiguration;
  readonly vpcConfiguration?: VpcDestinationConfiguration;
}

export interface TopicRuleDestinationSummary {
  readonly arn?: string;
  readonly status?: string;
  readonly createdAt?: Date;
  readonly lastUpdatedAt?: Date;
  readonly statusReason?: string;
  readonly httpUrlSummary?: HttpUrlDestinationSummary;
  readonly vpcDestinationSummary?: VpcDestinationSummary;
}

export interface TopicRuleListItem {
  readonly ruleArn?: string;
  readonly ruleName?: string;
  readonly topicPattern?: string;
  readonly createdAt?: Date;
  readonly ruleDisabled?: boolean;
}

export interface TopicRulePayload {
  readonly sql: string;
  readonly description?: string;
  readonly actions: [];
  readonly ruleDisabled?: boolean;
  readonly awsIotSqlVersion?: string;
  readonly errorAction?: Action;
}

export interface TransferAlreadyCompletedException {
  readonly message?: string;
}

export interface TransferCertificateRequest {
  readonly certificateId: string;
  readonly targetAwsAccount: string;
  readonly transferMessage?: string;
}

export interface TransferCertificateResponse {
  readonly transferredCertificateArn?: string;
}

export interface TransferConflictException {
  readonly message?: string;
}

export interface TransferData {
  readonly transferMessage?: string;
  readonly rejectReason?: string;
  readonly transferDate?: Date;
  readonly acceptDate?: Date;
  readonly rejectDate?: Date;
}

export interface UnauthorizedException {
  readonly message?: string;
}

export interface UntagResourceRequest {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface UntagResourceResponse {
}

export interface UpdateAccountAuditConfigurationRequest {
  readonly roleArn?: string;
  readonly auditNotificationTargetConfigurations?: {[key: string]: any};
  readonly auditCheckConfigurations?: {[key: string]: any};
}

export interface UpdateAccountAuditConfigurationResponse {
}

export interface UpdateAuditSuppressionRequest {
  readonly checkName: string;
  readonly resourceIdentifier: ResourceIdentifier;
  readonly expirationDate?: Date;
  readonly suppressIndefinitely?: boolean;
  readonly description?: string;
}

export interface UpdateAuditSuppressionResponse {
}

export interface UpdateAuthorizerRequest {
  readonly authorizerName: string;
  readonly authorizerFunctionArn?: string;
  readonly tokenKeyName?: string;
  readonly tokenSigningPublicKeys?: {[key: string]: any};
  readonly status?: string;
  readonly enableCachingForHttp?: boolean;
}

export interface UpdateAuthorizerResponse {
  readonly authorizerName?: string;
  readonly authorizerArn?: string;
}

export interface UpdateBillingGroupRequest {
  readonly billingGroupName: string;
  readonly billingGroupProperties: BillingGroupProperties;
  readonly expectedVersion?: number;
}

export interface UpdateBillingGroupResponse {
  readonly version?: number;
}

export interface UpdateCACertificateParams {
  readonly action: string;
}

export interface UpdateCACertificateRequest {
  readonly certificateId: string;
  readonly newStatus?: string;
  readonly newAutoRegistrationStatus?: string;
  readonly registrationConfig?: RegistrationConfig;
  readonly removeAutoRegistration?: boolean;
}

export interface UpdateCertificateRequest {
  readonly certificateId: string;
  readonly newStatus: string;
}

export interface UpdateCustomMetricRequest {
  readonly metricName: string;
  readonly displayName: string;
}

export interface UpdateCustomMetricResponse {
  readonly metricName?: string;
  readonly metricArn?: string;
  readonly metricType?: string;
  readonly displayName?: string;
  readonly creationDate?: Date;
  readonly lastModifiedDate?: Date;
}

export interface UpdateDeviceCertificateParams {
  readonly action: string;
}

export interface UpdateDimensionRequest {
  readonly name: string;
  readonly stringValues: [];
}

export interface UpdateDimensionResponse {
  readonly name?: string;
  readonly arn?: string;
  readonly type?: string;
  readonly stringValues?: [];
  readonly creationDate?: Date;
  readonly lastModifiedDate?: Date;
}

export interface UpdateDomainConfigurationRequest {
  readonly domainConfigurationName: string;
  readonly authorizerConfig?: AuthorizerConfig;
  readonly domainConfigurationStatus?: string;
  readonly removeAuthorizerConfig?: boolean;
}

export interface UpdateDomainConfigurationResponse {
  readonly domainConfigurationName?: string;
  readonly domainConfigurationArn?: string;
}

export interface UpdateDynamicThingGroupRequest {
  readonly thingGroupName: string;
  readonly thingGroupProperties: ThingGroupProperties;
  readonly expectedVersion?: number;
  readonly indexName?: string;
  readonly queryString?: string;
  readonly queryVersion?: string;
}

export interface UpdateDynamicThingGroupResponse {
  readonly version?: number;
}

export interface UpdateEventConfigurationsRequest {
  readonly eventConfigurations?: {[key: string]: any};
}

export interface UpdateEventConfigurationsResponse {
}

export interface UpdateFleetMetricRequest {
  readonly metricName: string;
  readonly queryString?: string;
  readonly aggregationType?: AggregationType;
  readonly period?: number;
  readonly aggregationField?: string;
  readonly description?: string;
  readonly queryVersion?: string;
  readonly indexName: string;
  readonly unit?: string;
  readonly expectedVersion?: number;
}

export interface UpdateIndexingConfigurationRequest {
  readonly thingIndexingConfiguration?: ThingIndexingConfiguration;
  readonly thingGroupIndexingConfiguration?: ThingGroupIndexingConfiguration;
}

export interface UpdateIndexingConfigurationResponse {
}

export interface UpdateJobRequest {
  readonly jobId: string;
  readonly description?: string;
  readonly presignedUrlConfig?: PresignedUrlConfig;
  readonly jobExecutionsRolloutConfig?: JobExecutionsRolloutConfig;
  readonly abortConfig?: AbortConfig;
  readonly timeoutConfig?: TimeoutConfig;
  readonly namespaceId?: string;
}

export interface UpdateMitigationActionRequest {
  readonly actionName: string;
  readonly roleArn?: string;
  readonly actionParams?: MitigationActionParams;
}

export interface UpdateMitigationActionResponse {
  readonly actionArn?: string;
  readonly actionId?: string;
}

export interface UpdateProvisioningTemplateRequest {
  readonly templateName: string;
  readonly description?: string;
  readonly enabled?: boolean;
  readonly defaultVersionId?: number;
  readonly provisioningRoleArn?: string;
  readonly preProvisioningHook?: ProvisioningHook;
  readonly removePreProvisioningHook?: boolean;
}

export interface UpdateProvisioningTemplateResponse {
}

export interface UpdateRoleAliasRequest {
  readonly roleAlias: string;
  readonly roleArn?: string;
  readonly credentialDurationSeconds?: number;
}

export interface UpdateRoleAliasResponse {
  readonly roleAlias?: string;
  readonly roleAliasArn?: string;
}

export interface UpdateScheduledAuditRequest {
  readonly frequency?: string;
  readonly dayOfMonth?: string;
  readonly dayOfWeek?: string;
  readonly targetCheckNames?: [];
  readonly scheduledAuditName: string;
}

export interface UpdateScheduledAuditResponse {
  readonly scheduledAuditArn?: string;
}

export interface UpdateSecurityProfileRequest {
  readonly securityProfileName: string;
  readonly securityProfileDescription?: string;
  readonly behaviors?: [];
  readonly alertTargets?: {[key: string]: any};
  readonly additionalMetricsToRetain?: [];
  readonly additionalMetricsToRetainV2?: [];
  readonly deleteBehaviors?: boolean;
  readonly deleteAlertTargets?: boolean;
  readonly deleteAdditionalMetricsToRetain?: boolean;
  readonly expectedVersion?: number;
}

export interface UpdateSecurityProfileResponse {
  readonly securityProfileName?: string;
  readonly securityProfileArn?: string;
  readonly securityProfileDescription?: string;
  readonly behaviors?: [];
  readonly alertTargets?: {[key: string]: any};
  readonly additionalMetricsToRetain?: [];
  readonly additionalMetricsToRetainV2?: [];
  readonly version?: number;
  readonly creationDate?: Date;
  readonly lastModifiedDate?: Date;
}

export interface UpdateStreamRequest {
  readonly streamId: string;
  readonly description?: string;
  readonly files?: [];
  readonly roleArn?: string;
}

export interface UpdateStreamResponse {
  readonly streamId?: string;
  readonly streamArn?: string;
  readonly description?: string;
  readonly streamVersion?: number;
}

export interface UpdateThingGroupRequest {
  readonly thingGroupName: string;
  readonly thingGroupProperties: ThingGroupProperties;
  readonly expectedVersion?: number;
}

export interface UpdateThingGroupResponse {
  readonly version?: number;
}

export interface UpdateThingGroupsForThingRequest {
  readonly thingName?: string;
  readonly thingGroupsToAdd?: [];
  readonly thingGroupsToRemove?: [];
  readonly overrideDynamicGroups?: boolean;
}

export interface UpdateThingGroupsForThingResponse {
}

export interface UpdateThingRequest {
  readonly thingName: string;
  readonly thingTypeName?: string;
  readonly attributePayload?: AttributePayload;
  readonly expectedVersion?: number;
  readonly removeThingType?: boolean;
}

export interface UpdateThingResponse {
}

export interface UpdateTopicRuleDestinationRequest {
  readonly arn: string;
  readonly status: string;
}

export interface UpdateTopicRuleDestinationResponse {
}

export interface ValidateSecurityProfileBehaviorsRequest {
  readonly behaviors: [];
}

export interface ValidateSecurityProfileBehaviorsResponse {
  readonly valid?: boolean;
  readonly validationErrors?: [];
}

export interface ValidationError {
  readonly errorMessage?: string;
}

export interface VersionConflictException {
  readonly message?: string;
}

export interface VersionsLimitExceededException {
  readonly message?: string;
}

export interface ViolationEvent {
  readonly violationId?: string;
  readonly thingName?: string;
  readonly securityProfileName?: string;
  readonly behavior?: Behavior;
  readonly metricValue?: MetricValue;
  readonly violationEventAdditionalInfo?: ViolationEventAdditionalInfo;
  readonly violationEventType?: string;
  readonly verificationState?: string;
  readonly verificationStateDescription?: string;
  readonly violationEventTime?: Date;
}

export interface ViolationEventAdditionalInfo {
  readonly confidenceLevel?: string;
}

export interface ViolationEventOccurrenceRange {
  readonly startTime: Date;
  readonly endTime: Date;
}

export interface VpcDestinationConfiguration {
  readonly subnetIds: [];
  readonly securityGroups?: [];
  readonly vpcId: string;
  readonly roleArn: string;
}

export interface VpcDestinationProperties {
  readonly subnetIds?: [];
  readonly securityGroups?: [];
  readonly vpcId?: string;
  readonly roleArn?: string;
}

export interface VpcDestinationSummary {
  readonly subnetIds?: [];
  readonly securityGroups?: [];
  readonly vpcId?: string;
  readonly roleArn?: string;
}


