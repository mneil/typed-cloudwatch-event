/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AssociateDeviceWithPlacement {
  readonly projectName: string;
  readonly placementName: string;
  readonly deviceId: string;
  readonly deviceTemplateName: string;
}
export interface CreatePlacement {
  readonly placementName: string;
  readonly projectName: string;
  readonly attributes: {[key: string]: any};
}
export interface CreateProject {
  readonly projectName: string;
  readonly description: string;
  readonly placementTemplate: PlacementTemplate;
  readonly tags: {[key: string]: any};
}
export interface DeletePlacement {
  readonly placementName: string;
  readonly projectName: string;
}
export interface DeleteProject {
  readonly projectName: string;
}
export interface DescribePlacement {
  readonly placementName: string;
  readonly projectName: string;
}
export interface DescribeProject {
  readonly projectName: string;
}
export interface DisassociateDeviceFromPlacement {
  readonly projectName: string;
  readonly placementName: string;
  readonly deviceTemplateName: string;
}
export interface GetDevicesInPlacement {
  readonly projectName: string;
  readonly placementName: string;
}
export interface ListPlacements {
  readonly projectName: string;
  readonly nextToken: string;
  readonly maxResults: number;
}
export interface ListProjects {
  readonly nextToken: string;
  readonly maxResults: number;
}
export interface ListTagsForResource {
  readonly resourceArn: string;
}
export interface TagResource {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}
export interface UntagResource {
  readonly resourceArn: string;
  readonly tagKeys: [];
}
export interface UpdatePlacement {
  readonly placementName: string;
  readonly projectName: string;
  readonly attributes: {[key: string]: any};
}
export interface UpdateProject {
  readonly projectName: string;
  readonly description: string;
  readonly placementTemplate: PlacementTemplate;
}



interface AssociateDeviceWithPlacementRequest {
  readonly projectName: string;
  readonly placementName: string;
  readonly deviceId: string;
  readonly deviceTemplateName: string;
}

interface AssociateDeviceWithPlacementResponse {
}

interface CreatePlacementRequest {
  readonly placementName: string;
  readonly projectName: string;
  readonly attributes: {[key: string]: any};
}

interface CreatePlacementResponse {
}

interface CreateProjectRequest {
  readonly projectName: string;
  readonly description: string;
  readonly placementTemplate: PlacementTemplate;
  readonly tags: {[key: string]: any};
}

interface CreateProjectResponse {
}

interface DeletePlacementRequest {
  readonly placementName: string;
  readonly projectName: string;
}

interface DeletePlacementResponse {
}

interface DeleteProjectRequest {
  readonly projectName: string;
}

interface DeleteProjectResponse {
}

interface DescribePlacementRequest {
  readonly placementName: string;
  readonly projectName: string;
}

interface DescribePlacementResponse {
  readonly placement: PlacementDescription;
}

interface DescribeProjectRequest {
  readonly projectName: string;
}

interface DescribeProjectResponse {
  readonly project: ProjectDescription;
}

interface DeviceTemplate {
  readonly deviceType: string;
  readonly callbackOverrides: {[key: string]: any};
}

interface DisassociateDeviceFromPlacementRequest {
  readonly projectName: string;
  readonly placementName: string;
  readonly deviceTemplateName: string;
}

interface DisassociateDeviceFromPlacementResponse {
}

interface GetDevicesInPlacementRequest {
  readonly projectName: string;
  readonly placementName: string;
}

interface GetDevicesInPlacementResponse {
  readonly devices: {[key: string]: any};
}

interface InternalFailureException {
  readonly code: string;
  readonly message: string;
}

interface InvalidRequestException {
  readonly code: string;
  readonly message: string;
}

interface ListPlacementsRequest {
  readonly projectName: string;
  readonly nextToken: string;
  readonly maxResults: number;
}

interface ListPlacementsResponse {
  readonly placements: [];
  readonly nextToken: string;
}

interface ListProjectsRequest {
  readonly nextToken: string;
  readonly maxResults: number;
}

interface ListProjectsResponse {
  readonly projects: [];
  readonly nextToken: string;
}

interface ListTagsForResourceRequest {
  readonly resourceArn: string;
}

interface ListTagsForResourceResponse {
  readonly tags: {[key: string]: any};
}

interface PlacementDescription {
  readonly projectName: string;
  readonly placementName: string;
  readonly attributes: {[key: string]: any};
  readonly createdDate: Date;
  readonly updatedDate: Date;
}

interface PlacementSummary {
  readonly projectName: string;
  readonly placementName: string;
  readonly createdDate: Date;
  readonly updatedDate: Date;
}

interface PlacementTemplate {
  readonly defaultAttributes: {[key: string]: any};
  readonly deviceTemplates: {[key: string]: any};
}

interface ProjectDescription {
  readonly arn: string;
  readonly projectName: string;
  readonly description: string;
  readonly createdDate: Date;
  readonly updatedDate: Date;
  readonly placementTemplate: PlacementTemplate;
  readonly tags: {[key: string]: any};
}

interface ProjectSummary {
  readonly arn: string;
  readonly projectName: string;
  readonly createdDate: Date;
  readonly updatedDate: Date;
  readonly tags: {[key: string]: any};
}

interface ResourceConflictException {
  readonly code: string;
  readonly message: string;
}

interface ResourceNotFoundException {
  readonly code: string;
  readonly message: string;
}

interface TagResourceRequest {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

interface TagResourceResponse {
}

interface TooManyRequestsException {
  readonly code: string;
  readonly message: string;
}

interface UntagResourceRequest {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

interface UntagResourceResponse {
}

interface UpdatePlacementRequest {
  readonly placementName: string;
  readonly projectName: string;
  readonly attributes: {[key: string]: any};
}

interface UpdatePlacementResponse {
}

interface UpdateProjectRequest {
  readonly projectName: string;
  readonly description: string;
  readonly placementTemplate: PlacementTemplate;
}

interface UpdateProjectResponse {
}

