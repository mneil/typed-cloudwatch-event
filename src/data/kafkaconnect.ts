/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CreateConnector {
  readonly capacity: Capacity;
  readonly connectorConfiguration: {[key: string]: any};
  readonly connectorDescription?: string;
  readonly connectorName: string;
  readonly kafkaCluster: KafkaCluster;
  readonly kafkaClusterClientAuthentication: KafkaClusterClientAuthentication;
  readonly kafkaClusterEncryptionInTransit: KafkaClusterEncryptionInTransit;
  readonly kafkaConnectVersion: string;
  readonly logDelivery?: LogDelivery;
  readonly plugins: [];
  readonly serviceExecutionRoleArn: string;
  readonly workerConfiguration?: WorkerConfiguration;
}

export interface CreateCustomPlugin {
  readonly contentType: string;
  readonly description?: string;
  readonly location: CustomPluginLocation;
  readonly name: string;
}

export interface CreateWorkerConfiguration {
  readonly description?: string;
  readonly name: string;
  readonly propertiesFileContent: string;
}

export interface DeleteConnector {
  readonly connectorArn: string;
  readonly currentVersion?: string;
}

export interface DescribeConnector {
  readonly connectorArn: string;
}

export interface DescribeCustomPlugin {
  readonly customPluginArn: string;
}

export interface DescribeWorkerConfiguration {
  readonly workerConfigurationArn: string;
}

export interface ListConnectors {
  readonly connectorNamePrefix?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListCustomPlugins {
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListWorkerConfigurations {
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface UpdateConnector {
  readonly capacity: CapacityUpdate;
  readonly connectorArn: string;
  readonly currentVersion: string;
}

export interface ApacheKafkaCluster {
  readonly bootstrapServers: string;
  readonly vpc: Vpc;
}

export interface ApacheKafkaClusterDescription {
  readonly bootstrapServers?: string;
  readonly vpc?: VpcDescription;
}

export interface AutoScaling {
  readonly maxWorkerCount: number;
  readonly mcuCount: number;
  readonly minWorkerCount: number;
  readonly scaleInPolicy?: ScaleInPolicy;
  readonly scaleOutPolicy?: ScaleOutPolicy;
}

export interface AutoScalingDescription {
  readonly maxWorkerCount?: number;
  readonly mcuCount?: number;
  readonly minWorkerCount?: number;
  readonly scaleInPolicy?: ScaleInPolicyDescription;
  readonly scaleOutPolicy?: ScaleOutPolicyDescription;
}

export interface AutoScalingUpdate {
  readonly maxWorkerCount: number;
  readonly mcuCount: number;
  readonly minWorkerCount: number;
  readonly scaleInPolicy: ScaleInPolicyUpdate;
  readonly scaleOutPolicy: ScaleOutPolicyUpdate;
}

export interface BadRequestException {
  readonly message?: string;
}

export interface Capacity {
  readonly autoScaling?: AutoScaling;
  readonly provisionedCapacity?: ProvisionedCapacity;
}

export interface CapacityDescription {
  readonly autoScaling?: AutoScalingDescription;
  readonly provisionedCapacity?: ProvisionedCapacityDescription;
}

export interface CapacityUpdate {
  readonly autoScaling?: AutoScalingUpdate;
  readonly provisionedCapacity?: ProvisionedCapacityUpdate;
}

export interface CloudWatchLogsLogDelivery {
  readonly enabled: boolean;
  readonly logGroup?: string;
}

export interface CloudWatchLogsLogDeliveryDescription {
  readonly enabled?: boolean;
  readonly logGroup?: string;
}

export interface ConflictException {
  readonly message?: string;
}

export interface ConnectorSummary {
  readonly capacity?: CapacityDescription;
  readonly connectorArn?: string;
  readonly connectorDescription?: string;
  readonly connectorName?: string;
  readonly connectorState?: string;
  readonly creationTime?: Date;
  readonly currentVersion?: string;
  readonly kafkaCluster?: KafkaClusterDescription;
  readonly kafkaClusterClientAuthentication?: KafkaClusterClientAuthenticationDescription;
  readonly kafkaClusterEncryptionInTransit?: KafkaClusterEncryptionInTransitDescription;
  readonly kafkaConnectVersion?: string;
  readonly logDelivery?: LogDeliveryDescription;
  readonly plugins?: [];
  readonly serviceExecutionRoleArn?: string;
  readonly workerConfiguration?: WorkerConfigurationDescription;
}

export interface CreateConnectorRequest {
  readonly capacity: Capacity;
  readonly connectorConfiguration: {[key: string]: any};
  readonly connectorDescription?: string;
  readonly connectorName: string;
  readonly kafkaCluster: KafkaCluster;
  readonly kafkaClusterClientAuthentication: KafkaClusterClientAuthentication;
  readonly kafkaClusterEncryptionInTransit: KafkaClusterEncryptionInTransit;
  readonly kafkaConnectVersion: string;
  readonly logDelivery?: LogDelivery;
  readonly plugins: [];
  readonly serviceExecutionRoleArn: string;
  readonly workerConfiguration?: WorkerConfiguration;
}

export interface CreateConnectorResponse {
  readonly connectorArn?: string;
  readonly connectorName?: string;
  readonly connectorState?: string;
}

export interface CreateCustomPluginRequest {
  readonly contentType: string;
  readonly description?: string;
  readonly location: CustomPluginLocation;
  readonly name: string;
}

export interface CreateCustomPluginResponse {
  readonly customPluginArn?: string;
  readonly customPluginState?: string;
  readonly name?: string;
  readonly revision?: number;
}

export interface CreateWorkerConfigurationRequest {
  readonly description?: string;
  readonly name: string;
  readonly propertiesFileContent: string;
}

export interface CreateWorkerConfigurationResponse {
  readonly creationTime?: Date;
  readonly latestRevision?: WorkerConfigurationRevisionSummary;
  readonly name?: string;
  readonly workerConfigurationArn?: string;
}

export interface CustomPlugin {
  readonly customPluginArn: string;
  readonly revision: number;
}

export interface CustomPluginDescription {
  readonly customPluginArn?: string;
  readonly revision?: number;
}

export interface CustomPluginFileDescription {
  readonly fileMd5?: string;
  readonly fileSize?: number;
}

export interface CustomPluginLocation {
  readonly s3Location: S3Location;
}

export interface CustomPluginLocationDescription {
  readonly s3Location?: S3LocationDescription;
}

export interface CustomPluginRevisionSummary {
  readonly contentType?: string;
  readonly creationTime?: Date;
  readonly description?: string;
  readonly fileDescription?: CustomPluginFileDescription;
  readonly location?: CustomPluginLocationDescription;
  readonly revision?: number;
}

export interface CustomPluginSummary {
  readonly creationTime?: Date;
  readonly customPluginArn?: string;
  readonly customPluginState?: string;
  readonly description?: string;
  readonly latestRevision?: CustomPluginRevisionSummary;
  readonly name?: string;
}

export interface DeleteConnectorRequest {
  readonly connectorArn: string;
  readonly currentVersion?: string;
}

export interface DeleteConnectorResponse {
  readonly connectorArn?: string;
  readonly connectorState?: string;
}

export interface DescribeConnectorRequest {
  readonly connectorArn: string;
}

export interface DescribeConnectorResponse {
  readonly capacity?: CapacityDescription;
  readonly connectorArn?: string;
  readonly connectorConfiguration?: {[key: string]: any};
  readonly connectorDescription?: string;
  readonly connectorName?: string;
  readonly connectorState?: string;
  readonly creationTime?: Date;
  readonly currentVersion?: string;
  readonly kafkaCluster?: KafkaClusterDescription;
  readonly kafkaClusterClientAuthentication?: KafkaClusterClientAuthenticationDescription;
  readonly kafkaClusterEncryptionInTransit?: KafkaClusterEncryptionInTransitDescription;
  readonly kafkaConnectVersion?: string;
  readonly logDelivery?: LogDeliveryDescription;
  readonly plugins?: [];
  readonly serviceExecutionRoleArn?: string;
  readonly workerConfiguration?: WorkerConfigurationDescription;
}

export interface DescribeCustomPluginRequest {
  readonly customPluginArn: string;
}

export interface DescribeCustomPluginResponse {
  readonly creationTime?: Date;
  readonly customPluginArn?: string;
  readonly customPluginState?: string;
  readonly description?: string;
  readonly latestRevision?: CustomPluginRevisionSummary;
  readonly name?: string;
}

export interface DescribeWorkerConfigurationRequest {
  readonly workerConfigurationArn: string;
}

export interface DescribeWorkerConfigurationResponse {
  readonly creationTime?: Date;
  readonly description?: string;
  readonly latestRevision?: WorkerConfigurationRevisionDescription;
  readonly name?: string;
  readonly workerConfigurationArn?: string;
}

export interface FirehoseLogDelivery {
  readonly deliveryStream?: string;
  readonly enabled: boolean;
}

export interface FirehoseLogDeliveryDescription {
  readonly deliveryStream?: string;
  readonly enabled?: boolean;
}

export interface ForbiddenException {
  readonly message?: string;
}

export interface InternalServerErrorException {
  readonly message?: string;
}

export interface KafkaCluster {
  readonly apacheKafkaCluster: ApacheKafkaCluster;
}

export interface KafkaClusterClientAuthentication {
  readonly authenticationType: string;
}

export interface KafkaClusterClientAuthenticationDescription {
  readonly authenticationType?: string;
}

export interface KafkaClusterDescription {
  readonly apacheKafkaCluster?: ApacheKafkaClusterDescription;
}

export interface KafkaClusterEncryptionInTransit {
  readonly encryptionType: string;
}

export interface KafkaClusterEncryptionInTransitDescription {
  readonly encryptionType?: string;
}

export interface ListConnectorsRequest {
  readonly connectorNamePrefix?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListConnectorsResponse {
  readonly connectors?: [];
  readonly nextToken?: string;
}

export interface ListCustomPluginsRequest {
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListCustomPluginsResponse {
  readonly customPlugins?: [];
  readonly nextToken?: string;
}

export interface ListWorkerConfigurationsRequest {
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListWorkerConfigurationsResponse {
  readonly nextToken?: string;
  readonly workerConfigurations?: [];
}

export interface LogDelivery {
  readonly workerLogDelivery: WorkerLogDelivery;
}

export interface LogDeliveryDescription {
  readonly workerLogDelivery?: WorkerLogDeliveryDescription;
}

export interface NotFoundException {
  readonly message?: string;
}

export interface Plugin {
  readonly customPlugin: CustomPlugin;
}

export interface PluginDescription {
  readonly customPlugin?: CustomPluginDescription;
}

export interface ProvisionedCapacity {
  readonly mcuCount: number;
  readonly workerCount: number;
}

export interface ProvisionedCapacityDescription {
  readonly mcuCount?: number;
  readonly workerCount?: number;
}

export interface ProvisionedCapacityUpdate {
  readonly mcuCount: number;
  readonly workerCount: number;
}

export interface S3Location {
  readonly bucketArn: string;
  readonly fileKey: string;
  readonly objectVersion?: string;
}

export interface S3LocationDescription {
  readonly bucketArn?: string;
  readonly fileKey?: string;
  readonly objectVersion?: string;
}

export interface S3LogDelivery {
  readonly bucket?: string;
  readonly enabled: boolean;
  readonly prefix?: string;
}

export interface S3LogDeliveryDescription {
  readonly bucket?: string;
  readonly enabled?: boolean;
  readonly prefix?: string;
}

export interface ScaleInPolicy {
  readonly cpuUtilizationPercentage: number;
}

export interface ScaleInPolicyDescription {
  readonly cpuUtilizationPercentage?: number;
}

export interface ScaleInPolicyUpdate {
  readonly cpuUtilizationPercentage: number;
}

export interface ScaleOutPolicy {
  readonly cpuUtilizationPercentage: number;
}

export interface ScaleOutPolicyDescription {
  readonly cpuUtilizationPercentage?: number;
}

export interface ScaleOutPolicyUpdate {
  readonly cpuUtilizationPercentage: number;
}

export interface ServiceUnavailableException {
  readonly message?: string;
}

export interface TooManyRequestsException {
  readonly message?: string;
}

export interface UnauthorizedException {
  readonly message?: string;
}

export interface UpdateConnectorRequest {
  readonly capacity: CapacityUpdate;
  readonly connectorArn: string;
  readonly currentVersion: string;
}

export interface UpdateConnectorResponse {
  readonly connectorArn?: string;
  readonly connectorState?: string;
}

export interface Vpc {
  readonly securityGroups?: [];
  readonly subnets: [];
}

export interface VpcDescription {
  readonly securityGroups?: [];
  readonly subnets?: [];
}

export interface WorkerConfiguration {
  readonly revision: number;
  readonly workerConfigurationArn: string;
}

export interface WorkerConfigurationDescription {
  readonly revision?: number;
  readonly workerConfigurationArn?: string;
}

export interface WorkerConfigurationRevisionDescription {
  readonly creationTime?: Date;
  readonly description?: string;
  readonly propertiesFileContent?: string;
  readonly revision?: number;
}

export interface WorkerConfigurationRevisionSummary {
  readonly creationTime?: Date;
  readonly description?: string;
  readonly revision?: number;
}

export interface WorkerConfigurationSummary {
  readonly creationTime?: Date;
  readonly description?: string;
  readonly latestRevision?: WorkerConfigurationRevisionSummary;
  readonly name?: string;
  readonly workerConfigurationArn?: string;
}

export interface WorkerLogDelivery {
  readonly cloudWatchLogs?: CloudWatchLogsLogDelivery;
  readonly firehose?: FirehoseLogDelivery;
  readonly s3?: S3LogDelivery;
}

export interface WorkerLogDeliveryDescription {
  readonly cloudWatchLogs?: CloudWatchLogsLogDeliveryDescription;
  readonly firehose?: FirehoseLogDeliveryDescription;
  readonly s3?: S3LogDeliveryDescription;
}


