/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AcceptEnvironmentAccountConnection {
  readonly id: string;
}

export interface CancelEnvironmentDeployment {
  readonly environmentName: string;
}

export interface CancelServiceInstanceDeployment {
  readonly serviceInstanceName: string;
  readonly serviceName: string;
}

export interface CancelServicePipelineDeployment {
  readonly serviceName: string;
}

export interface CreateEnvironment {
  readonly description?: string;
  readonly environmentAccountConnectionId?: string;
  readonly name: string;
  readonly protonServiceRoleArn?: string;
  readonly provisioningRepository?: RepositoryBranchInput;
  readonly spec: string;
  readonly tags?: [];
  readonly templateMajorVersion: string;
  readonly templateMinorVersion?: string;
  readonly templateName: string;
}

export interface CreateEnvironmentAccountConnection {
  readonly clientToken?: string;
  readonly environmentName: string;
  readonly managementAccountId: string;
  readonly roleArn: string;
  readonly tags?: [];
}

export interface CreateEnvironmentTemplate {
  readonly description?: string;
  readonly displayName?: string;
  readonly encryptionKey?: string;
  readonly name: string;
  readonly provisioning?: string;
  readonly tags?: [];
}

export interface CreateEnvironmentTemplateVersion {
  readonly clientToken?: string;
  readonly description?: string;
  readonly majorVersion?: string;
  readonly source: TemplateVersionSourceInput;
  readonly tags?: [];
  readonly templateName: string;
}

export interface CreateRepository {
  readonly connectionArn: string;
  readonly encryptionKey?: string;
  readonly name: string;
  readonly provider: string;
}

export interface CreateService {
  readonly branchName?: string;
  readonly description?: string;
  readonly name: string;
  readonly repositoryConnectionArn?: string;
  readonly repositoryId?: string;
  readonly spec: string;
  readonly tags?: [];
  readonly templateMajorVersion: string;
  readonly templateMinorVersion?: string;
  readonly templateName: string;
}

export interface CreateServiceTemplate {
  readonly description?: string;
  readonly displayName?: string;
  readonly encryptionKey?: string;
  readonly name: string;
  readonly pipelineProvisioning?: string;
  readonly tags?: [];
}

export interface CreateServiceTemplateVersion {
  readonly clientToken?: string;
  readonly compatibleEnvironmentTemplates: [];
  readonly description?: string;
  readonly majorVersion?: string;
  readonly source: TemplateVersionSourceInput;
  readonly tags?: [];
  readonly templateName: string;
}

export interface CreateTemplateSyncConfig {
  readonly branch: string;
  readonly repositoryName: string;
  readonly repositoryProvider: string;
  readonly subdirectory?: string;
  readonly templateName: string;
  readonly templateType: string;
}

export interface DeleteEnvironment {
  readonly name: string;
}

export interface DeleteEnvironmentAccountConnection {
  readonly id: string;
}

export interface DeleteEnvironmentTemplate {
  readonly name: string;
}

export interface DeleteEnvironmentTemplateVersion {
  readonly majorVersion: string;
  readonly minorVersion: string;
  readonly templateName: string;
}

export interface DeleteRepository {
  readonly name: string;
  readonly provider: string;
}

export interface DeleteService {
  readonly name: string;
}

export interface DeleteServiceTemplate {
  readonly name: string;
}

export interface DeleteServiceTemplateVersion {
  readonly majorVersion: string;
  readonly minorVersion: string;
  readonly templateName: string;
}

export interface DeleteTemplateSyncConfig {
  readonly templateName: string;
  readonly templateType: string;
}

export interface GetAccountSettings {
}

export interface GetEnvironment {
  readonly name: string;
}

export interface GetEnvironmentAccountConnection {
  readonly id: string;
}

export interface GetEnvironmentTemplate {
  readonly name: string;
}

export interface GetEnvironmentTemplateVersion {
  readonly majorVersion: string;
  readonly minorVersion: string;
  readonly templateName: string;
}

export interface GetRepository {
  readonly name: string;
  readonly provider: string;
}

export interface GetRepositorySyncStatus {
  readonly branch: string;
  readonly repositoryName: string;
  readonly repositoryProvider: string;
  readonly syncType: string;
}

export interface GetService {
  readonly name: string;
}

export interface GetServiceInstance {
  readonly name: string;
  readonly serviceName: string;
}

export interface GetServiceTemplate {
  readonly name: string;
}

export interface GetServiceTemplateVersion {
  readonly majorVersion: string;
  readonly minorVersion: string;
  readonly templateName: string;
}

export interface GetTemplateSyncConfig {
  readonly templateName: string;
  readonly templateType: string;
}

export interface GetTemplateSyncStatus {
  readonly templateName: string;
  readonly templateType: string;
  readonly templateVersion: string;
}

export interface ListEnvironmentAccountConnections {
  readonly environmentName?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly requestedBy: string;
  readonly statuses?: [];
}

export interface ListEnvironmentOutputs {
  readonly environmentName: string;
  readonly nextToken?: string;
}

export interface ListEnvironmentProvisionedResources {
  readonly environmentName: string;
  readonly nextToken?: string;
}

export interface ListEnvironmentTemplateVersions {
  readonly majorVersion?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly templateName: string;
}

export interface ListEnvironmentTemplates {
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListEnvironments {
  readonly environmentTemplates?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListRepositories {
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListRepositorySyncDefinitions {
  readonly nextToken?: string;
  readonly repositoryName: string;
  readonly repositoryProvider: string;
  readonly syncType: string;
}

export interface ListServiceInstanceOutputs {
  readonly nextToken?: string;
  readonly serviceInstanceName: string;
  readonly serviceName: string;
}

export interface ListServiceInstanceProvisionedResources {
  readonly nextToken?: string;
  readonly serviceInstanceName: string;
  readonly serviceName: string;
}

export interface ListServiceInstances {
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly serviceName?: string;
}

export interface ListServicePipelineOutputs {
  readonly nextToken?: string;
  readonly serviceName: string;
}

export interface ListServicePipelineProvisionedResources {
  readonly nextToken?: string;
  readonly serviceName: string;
}

export interface ListServiceTemplateVersions {
  readonly majorVersion?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly templateName: string;
}

export interface ListServiceTemplates {
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListServices {
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListTagsForResource {
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly resourceArn: string;
}

export interface NotifyResourceDeploymentStatusChange {
  readonly deploymentId?: string;
  readonly outputs?: [];
  readonly resourceArn: string;
  readonly status: string;
  readonly statusMessage?: string;
}

export interface RejectEnvironmentAccountConnection {
  readonly id: string;
}

export interface TagResource {
  readonly resourceArn: string;
  readonly tags: [];
}

export interface UntagResource {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface UpdateAccountSettings {
  readonly pipelineProvisioningRepository?: RepositoryBranchInput;
  readonly pipelineServiceRoleArn?: string;
}

export interface UpdateEnvironment {
  readonly deploymentType: string;
  readonly description?: string;
  readonly environmentAccountConnectionId?: string;
  readonly name: string;
  readonly protonServiceRoleArn?: string;
  readonly provisioningRepository?: RepositoryBranchInput;
  readonly spec?: string;
  readonly templateMajorVersion?: string;
  readonly templateMinorVersion?: string;
}

export interface UpdateEnvironmentAccountConnection {
  readonly id: string;
  readonly roleArn: string;
}

export interface UpdateEnvironmentTemplate {
  readonly description?: string;
  readonly displayName?: string;
  readonly name: string;
}

export interface UpdateEnvironmentTemplateVersion {
  readonly description?: string;
  readonly majorVersion: string;
  readonly minorVersion: string;
  readonly status?: string;
  readonly templateName: string;
}

export interface UpdateService {
  readonly description?: string;
  readonly name: string;
  readonly spec?: string;
}

export interface UpdateServiceInstance {
  readonly deploymentType: string;
  readonly name: string;
  readonly serviceName: string;
  readonly spec?: string;
  readonly templateMajorVersion?: string;
  readonly templateMinorVersion?: string;
}

export interface UpdateServicePipeline {
  readonly deploymentType: string;
  readonly serviceName: string;
  readonly spec: string;
  readonly templateMajorVersion?: string;
  readonly templateMinorVersion?: string;
}

export interface UpdateServiceTemplate {
  readonly description?: string;
  readonly displayName?: string;
  readonly name: string;
}

export interface UpdateServiceTemplateVersion {
  readonly compatibleEnvironmentTemplates?: [];
  readonly description?: string;
  readonly majorVersion: string;
  readonly minorVersion: string;
  readonly status?: string;
  readonly templateName: string;
}

export interface UpdateTemplateSyncConfig {
  readonly branch: string;
  readonly repositoryName: string;
  readonly repositoryProvider: string;
  readonly subdirectory?: string;
  readonly templateName: string;
  readonly templateType: string;
}

export interface AcceptEnvironmentAccountConnectionInput {
  readonly id: string;
}

export interface AcceptEnvironmentAccountConnectionOutput {
  readonly environmentAccountConnection: EnvironmentAccountConnection;
}

export interface AccessDeniedException {
  readonly message: string;
}

export interface AccountSettings {
  readonly pipelineProvisioningRepository?: RepositoryBranch;
  readonly pipelineServiceRoleArn?: string;
}

export interface CancelEnvironmentDeploymentInput {
  readonly environmentName: string;
}

export interface CancelEnvironmentDeploymentOutput {
  readonly environment: Environment;
}

export interface CancelServiceInstanceDeploymentInput {
  readonly serviceInstanceName: string;
  readonly serviceName: string;
}

export interface CancelServiceInstanceDeploymentOutput {
  readonly serviceInstance: ServiceInstance;
}

export interface CancelServicePipelineDeploymentInput {
  readonly serviceName: string;
}

export interface CancelServicePipelineDeploymentOutput {
  readonly pipeline: ServicePipeline;
}

export interface CompatibleEnvironmentTemplate {
  readonly majorVersion: string;
  readonly templateName: string;
}

export interface CompatibleEnvironmentTemplateInput {
  readonly majorVersion: string;
  readonly templateName: string;
}

export interface ConflictException {
  readonly message: string;
}

export interface CreateEnvironmentAccountConnectionInput {
  readonly clientToken?: string;
  readonly environmentName: string;
  readonly managementAccountId: string;
  readonly roleArn: string;
  readonly tags?: [];
}

export interface CreateEnvironmentAccountConnectionOutput {
  readonly environmentAccountConnection: EnvironmentAccountConnection;
}

export interface CreateEnvironmentInput {
  readonly description?: string;
  readonly environmentAccountConnectionId?: string;
  readonly name: string;
  readonly protonServiceRoleArn?: string;
  readonly provisioningRepository?: RepositoryBranchInput;
  readonly spec: string;
  readonly tags?: [];
  readonly templateMajorVersion: string;
  readonly templateMinorVersion?: string;
  readonly templateName: string;
}

export interface CreateEnvironmentOutput {
  readonly environment: Environment;
}

export interface CreateEnvironmentTemplateInput {
  readonly description?: string;
  readonly displayName?: string;
  readonly encryptionKey?: string;
  readonly name: string;
  readonly provisioning?: string;
  readonly tags?: [];
}

export interface CreateEnvironmentTemplateOutput {
  readonly environmentTemplate: EnvironmentTemplate;
}

export interface CreateEnvironmentTemplateVersionInput {
  readonly clientToken?: string;
  readonly description?: string;
  readonly majorVersion?: string;
  readonly source: TemplateVersionSourceInput;
  readonly tags?: [];
  readonly templateName: string;
}

export interface CreateEnvironmentTemplateVersionOutput {
  readonly environmentTemplateVersion: EnvironmentTemplateVersion;
}

export interface CreateRepositoryInput {
  readonly connectionArn: string;
  readonly encryptionKey?: string;
  readonly name: string;
  readonly provider: string;
}

export interface CreateRepositoryOutput {
  readonly repository: Repository;
}

export interface CreateServiceInput {
  readonly branchName?: string;
  readonly description?: string;
  readonly name: string;
  readonly repositoryConnectionArn?: string;
  readonly repositoryId?: string;
  readonly spec: string;
  readonly tags?: [];
  readonly templateMajorVersion: string;
  readonly templateMinorVersion?: string;
  readonly templateName: string;
}

export interface CreateServiceOutput {
  readonly service: Service;
}

export interface CreateServiceTemplateInput {
  readonly description?: string;
  readonly displayName?: string;
  readonly encryptionKey?: string;
  readonly name: string;
  readonly pipelineProvisioning?: string;
  readonly tags?: [];
}

export interface CreateServiceTemplateOutput {
  readonly serviceTemplate: ServiceTemplate;
}

export interface CreateServiceTemplateVersionInput {
  readonly clientToken?: string;
  readonly compatibleEnvironmentTemplates: [];
  readonly description?: string;
  readonly majorVersion?: string;
  readonly source: TemplateVersionSourceInput;
  readonly tags?: [];
  readonly templateName: string;
}

export interface CreateServiceTemplateVersionOutput {
  readonly serviceTemplateVersion: ServiceTemplateVersion;
}

export interface CreateTemplateSyncConfigInput {
  readonly branch: string;
  readonly repositoryName: string;
  readonly repositoryProvider: string;
  readonly subdirectory?: string;
  readonly templateName: string;
  readonly templateType: string;
}

export interface CreateTemplateSyncConfigOutput {
  readonly templateSyncConfig?: TemplateSyncConfig;
}

export interface DeleteEnvironmentAccountConnectionInput {
  readonly id: string;
}

export interface DeleteEnvironmentAccountConnectionOutput {
  readonly environmentAccountConnection?: EnvironmentAccountConnection;
}

export interface DeleteEnvironmentInput {
  readonly name: string;
}

export interface DeleteEnvironmentOutput {
  readonly environment?: Environment;
}

export interface DeleteEnvironmentTemplateInput {
  readonly name: string;
}

export interface DeleteEnvironmentTemplateOutput {
  readonly environmentTemplate?: EnvironmentTemplate;
}

export interface DeleteEnvironmentTemplateVersionInput {
  readonly majorVersion: string;
  readonly minorVersion: string;
  readonly templateName: string;
}

export interface DeleteEnvironmentTemplateVersionOutput {
  readonly environmentTemplateVersion?: EnvironmentTemplateVersion;
}

export interface DeleteRepositoryInput {
  readonly name: string;
  readonly provider: string;
}

export interface DeleteRepositoryOutput {
  readonly repository?: Repository;
}

export interface DeleteServiceInput {
  readonly name: string;
}

export interface DeleteServiceOutput {
  readonly service?: Service;
}

export interface DeleteServiceTemplateInput {
  readonly name: string;
}

export interface DeleteServiceTemplateOutput {
  readonly serviceTemplate?: ServiceTemplate;
}

export interface DeleteServiceTemplateVersionInput {
  readonly majorVersion: string;
  readonly minorVersion: string;
  readonly templateName: string;
}

export interface DeleteServiceTemplateVersionOutput {
  readonly serviceTemplateVersion?: ServiceTemplateVersion;
}

export interface DeleteTemplateSyncConfigInput {
  readonly templateName: string;
  readonly templateType: string;
}

export interface DeleteTemplateSyncConfigOutput {
  readonly templateSyncConfig?: TemplateSyncConfig;
}

export interface Environment {
  readonly arn: string;
  readonly createdAt: Date;
  readonly deploymentStatus: string;
  readonly deploymentStatusMessage?: string;
  readonly description?: string;
  readonly environmentAccountConnectionId?: string;
  readonly environmentAccountId?: string;
  readonly lastDeploymentAttemptedAt: Date;
  readonly lastDeploymentSucceededAt: Date;
  readonly name: string;
  readonly protonServiceRoleArn?: string;
  readonly provisioning?: string;
  readonly provisioningRepository?: RepositoryBranch;
  readonly spec?: string;
  readonly templateMajorVersion: string;
  readonly templateMinorVersion: string;
  readonly templateName: string;
}

export interface EnvironmentAccountConnection {
  readonly arn: string;
  readonly environmentAccountId: string;
  readonly environmentName: string;
  readonly id: string;
  readonly lastModifiedAt: Date;
  readonly managementAccountId: string;
  readonly requestedAt: Date;
  readonly roleArn: string;
  readonly status: string;
}

export interface EnvironmentAccountConnectionSummary {
  readonly arn: string;
  readonly environmentAccountId: string;
  readonly environmentName: string;
  readonly id: string;
  readonly lastModifiedAt: Date;
  readonly managementAccountId: string;
  readonly requestedAt: Date;
  readonly roleArn: string;
  readonly status: string;
}

export interface EnvironmentSummary {
  readonly arn: string;
  readonly createdAt: Date;
  readonly deploymentStatus: string;
  readonly deploymentStatusMessage?: string;
  readonly description?: string;
  readonly environmentAccountConnectionId?: string;
  readonly environmentAccountId?: string;
  readonly lastDeploymentAttemptedAt: Date;
  readonly lastDeploymentSucceededAt: Date;
  readonly name: string;
  readonly protonServiceRoleArn?: string;
  readonly provisioning?: string;
  readonly templateMajorVersion: string;
  readonly templateMinorVersion: string;
  readonly templateName: string;
}

export interface EnvironmentTemplate {
  readonly arn: string;
  readonly createdAt: Date;
  readonly description?: string;
  readonly displayName?: string;
  readonly encryptionKey?: string;
  readonly lastModifiedAt: Date;
  readonly name: string;
  readonly provisioning?: string;
  readonly recommendedVersion?: string;
}

export interface EnvironmentTemplateFilter {
  readonly majorVersion: string;
  readonly templateName: string;
}

export interface EnvironmentTemplateSummary {
  readonly arn: string;
  readonly createdAt: Date;
  readonly description?: string;
  readonly displayName?: string;
  readonly lastModifiedAt: Date;
  readonly name: string;
  readonly provisioning?: string;
  readonly recommendedVersion?: string;
}

export interface EnvironmentTemplateVersion {
  readonly arn: string;
  readonly createdAt: Date;
  readonly description?: string;
  readonly lastModifiedAt: Date;
  readonly majorVersion: string;
  readonly minorVersion: string;
  readonly recommendedMinorVersion?: string;
  readonly schema?: string;
  readonly status: string;
  readonly statusMessage?: string;
  readonly templateName: string;
}

export interface EnvironmentTemplateVersionSummary {
  readonly arn: string;
  readonly createdAt: Date;
  readonly description?: string;
  readonly lastModifiedAt: Date;
  readonly majorVersion: string;
  readonly minorVersion: string;
  readonly recommendedMinorVersion?: string;
  readonly status: string;
  readonly statusMessage?: string;
  readonly templateName: string;
}

export interface GetAccountSettingsInput {
}

export interface GetAccountSettingsOutput {
  readonly accountSettings?: AccountSettings;
}

export interface GetEnvironmentAccountConnectionInput {
  readonly id: string;
}

export interface GetEnvironmentAccountConnectionOutput {
  readonly environmentAccountConnection: EnvironmentAccountConnection;
}

export interface GetEnvironmentInput {
  readonly name: string;
}

export interface GetEnvironmentOutput {
  readonly environment: Environment;
}

export interface GetEnvironmentTemplateInput {
  readonly name: string;
}

export interface GetEnvironmentTemplateOutput {
  readonly environmentTemplate: EnvironmentTemplate;
}

export interface GetEnvironmentTemplateVersionInput {
  readonly majorVersion: string;
  readonly minorVersion: string;
  readonly templateName: string;
}

export interface GetEnvironmentTemplateVersionOutput {
  readonly environmentTemplateVersion: EnvironmentTemplateVersion;
}

export interface GetRepositoryInput {
  readonly name: string;
  readonly provider: string;
}

export interface GetRepositoryOutput {
  readonly repository: Repository;
}

export interface GetRepositorySyncStatusInput {
  readonly branch: string;
  readonly repositoryName: string;
  readonly repositoryProvider: string;
  readonly syncType: string;
}

export interface GetRepositorySyncStatusOutput {
  readonly latestSync?: RepositorySyncAttempt;
}

export interface GetServiceInput {
  readonly name: string;
}

export interface GetServiceInstanceInput {
  readonly name: string;
  readonly serviceName: string;
}

export interface GetServiceInstanceOutput {
  readonly serviceInstance: ServiceInstance;
}

export interface GetServiceOutput {
  readonly service?: Service;
}

export interface GetServiceTemplateInput {
  readonly name: string;
}

export interface GetServiceTemplateOutput {
  readonly serviceTemplate: ServiceTemplate;
}

export interface GetServiceTemplateVersionInput {
  readonly majorVersion: string;
  readonly minorVersion: string;
  readonly templateName: string;
}

export interface GetServiceTemplateVersionOutput {
  readonly serviceTemplateVersion: ServiceTemplateVersion;
}

export interface GetTemplateSyncConfigInput {
  readonly templateName: string;
  readonly templateType: string;
}

export interface GetTemplateSyncConfigOutput {
  readonly templateSyncConfig?: TemplateSyncConfig;
}

export interface GetTemplateSyncStatusInput {
  readonly templateName: string;
  readonly templateType: string;
  readonly templateVersion: string;
}

export interface GetTemplateSyncStatusOutput {
  readonly desiredState?: Revision;
  readonly latestSuccessfulSync?: ResourceSyncAttempt;
  readonly latestSync?: ResourceSyncAttempt;
}

export interface InternalServerException {
  readonly message: string;
}

export interface ListEnvironmentAccountConnectionsInput {
  readonly environmentName?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly requestedBy: string;
  readonly statuses?: [];
}

export interface ListEnvironmentAccountConnectionsOutput {
  readonly environmentAccountConnections: [];
  readonly nextToken?: string;
}

export interface ListEnvironmentOutputsInput {
  readonly environmentName: string;
  readonly nextToken?: string;
}

export interface ListEnvironmentOutputsOutput {
  readonly nextToken?: string;
  readonly outputs: [];
}

export interface ListEnvironmentProvisionedResourcesInput {
  readonly environmentName: string;
  readonly nextToken?: string;
}

export interface ListEnvironmentProvisionedResourcesOutput {
  readonly nextToken?: string;
  readonly provisionedResources: [];
}

export interface ListEnvironmentTemplateVersionsInput {
  readonly majorVersion?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly templateName: string;
}

export interface ListEnvironmentTemplateVersionsOutput {
  readonly nextToken?: string;
  readonly templateVersions: [];
}

export interface ListEnvironmentTemplatesInput {
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListEnvironmentTemplatesOutput {
  readonly nextToken?: string;
  readonly templates: [];
}

export interface ListEnvironmentsInput {
  readonly environmentTemplates?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListEnvironmentsOutput {
  readonly environments: [];
  readonly nextToken?: string;
}

export interface ListRepositoriesInput {
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListRepositoriesOutput {
  readonly nextToken?: string;
  readonly repositories: [];
}

export interface ListRepositorySyncDefinitionsInput {
  readonly nextToken?: string;
  readonly repositoryName: string;
  readonly repositoryProvider: string;
  readonly syncType: string;
}

export interface ListRepositorySyncDefinitionsOutput {
  readonly nextToken?: string;
  readonly syncDefinitions: [];
}

export interface ListServiceInstanceOutputsInput {
  readonly nextToken?: string;
  readonly serviceInstanceName: string;
  readonly serviceName: string;
}

export interface ListServiceInstanceOutputsOutput {
  readonly nextToken?: string;
  readonly outputs: [];
}

export interface ListServiceInstanceProvisionedResourcesInput {
  readonly nextToken?: string;
  readonly serviceInstanceName: string;
  readonly serviceName: string;
}

export interface ListServiceInstanceProvisionedResourcesOutput {
  readonly nextToken?: string;
  readonly provisionedResources: [];
}

export interface ListServiceInstancesInput {
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly serviceName?: string;
}

export interface ListServiceInstancesOutput {
  readonly nextToken?: string;
  readonly serviceInstances: [];
}

export interface ListServicePipelineOutputsInput {
  readonly nextToken?: string;
  readonly serviceName: string;
}

export interface ListServicePipelineOutputsOutput {
  readonly nextToken?: string;
  readonly outputs: [];
}

export interface ListServicePipelineProvisionedResourcesInput {
  readonly nextToken?: string;
  readonly serviceName: string;
}

export interface ListServicePipelineProvisionedResourcesOutput {
  readonly nextToken?: string;
  readonly provisionedResources: [];
}

export interface ListServiceTemplateVersionsInput {
  readonly majorVersion?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly templateName: string;
}

export interface ListServiceTemplateVersionsOutput {
  readonly nextToken?: string;
  readonly templateVersions: [];
}

export interface ListServiceTemplatesInput {
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListServiceTemplatesOutput {
  readonly nextToken?: string;
  readonly templates: [];
}

export interface ListServicesInput {
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListServicesOutput {
  readonly nextToken?: string;
  readonly services: [];
}

export interface ListTagsForResourceInput {
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly resourceArn: string;
}

export interface ListTagsForResourceOutput {
  readonly nextToken?: string;
  readonly tags: [];
}

export interface NotifyResourceDeploymentStatusChangeInput {
  readonly deploymentId?: string;
  readonly outputs?: [];
  readonly resourceArn: string;
  readonly status: string;
  readonly statusMessage?: string;
}

export interface NotifyResourceDeploymentStatusChangeOutput {
}

export interface Output {
  readonly key?: string;
  readonly valueString?: string;
}

export interface ProvisionedResource {
  readonly identifier?: string;
  readonly name?: string;
  readonly provisioningEngine?: string;
}

export interface RejectEnvironmentAccountConnectionInput {
  readonly id: string;
}

export interface RejectEnvironmentAccountConnectionOutput {
  readonly environmentAccountConnection: EnvironmentAccountConnection;
}

export interface Repository {
  readonly arn: string;
  readonly connectionArn: string;
  readonly encryptionKey?: string;
  readonly name: string;
  readonly provider: string;
}

export interface RepositoryBranch {
  readonly arn: string;
  readonly branch: string;
  readonly name: string;
  readonly provider: string;
}

export interface RepositoryBranchInput {
  readonly branch: string;
  readonly name: string;
  readonly provider: string;
}

export interface RepositorySummary {
  readonly arn: string;
  readonly name: string;
  readonly provider: string;
}

export interface RepositorySyncAttempt {
  readonly events: [];
  readonly startedAt: Date;
  readonly status: string;
}

export interface RepositorySyncDefinition {
  readonly branch: string;
  readonly directory: string;
  readonly parent: string;
  readonly target: string;
}

export interface RepositorySyncEvent {
  readonly event: string;
  readonly externalId?: string;
  readonly time: Date;
  readonly type: string;
}

export interface ResourceNotFoundException {
  readonly message: string;
}

export interface ResourceSyncAttempt {
  readonly events: [];
  readonly initialRevision: Revision;
  readonly startedAt: Date;
  readonly status: string;
  readonly target: string;
  readonly targetRevision: Revision;
}

export interface ResourceSyncEvent {
  readonly event: string;
  readonly externalId?: string;
  readonly time: Date;
  readonly type: string;
}

export interface Revision {
  readonly branch: string;
  readonly directory: string;
  readonly repositoryName: string;
  readonly repositoryProvider: string;
  readonly sha: string;
}

export interface S3ObjectSource {
  readonly bucket: string;
  readonly key: string;
}

export interface Service {
  readonly arn: string;
  readonly branchName?: string;
  readonly createdAt: Date;
  readonly description?: string;
  readonly lastModifiedAt: Date;
  readonly name: string;
  readonly pipeline?: ServicePipeline;
  readonly repositoryConnectionArn?: string;
  readonly repositoryId?: string;
  readonly spec: string;
  readonly status: string;
  readonly statusMessage?: string;
  readonly templateName: string;
}

export interface ServiceInstance {
  readonly arn: string;
  readonly createdAt: Date;
  readonly deploymentStatus: string;
  readonly deploymentStatusMessage?: string;
  readonly environmentName: string;
  readonly lastDeploymentAttemptedAt: Date;
  readonly lastDeploymentSucceededAt: Date;
  readonly name: string;
  readonly serviceName: string;
  readonly spec?: string;
  readonly templateMajorVersion: string;
  readonly templateMinorVersion: string;
  readonly templateName: string;
}

export interface ServiceInstanceSummary {
  readonly arn: string;
  readonly createdAt: Date;
  readonly deploymentStatus: string;
  readonly deploymentStatusMessage?: string;
  readonly environmentName: string;
  readonly lastDeploymentAttemptedAt: Date;
  readonly lastDeploymentSucceededAt: Date;
  readonly name: string;
  readonly serviceName: string;
  readonly templateMajorVersion: string;
  readonly templateMinorVersion: string;
  readonly templateName: string;
}

export interface ServicePipeline {
  readonly arn: string;
  readonly createdAt: Date;
  readonly deploymentStatus: string;
  readonly deploymentStatusMessage?: string;
  readonly lastDeploymentAttemptedAt: Date;
  readonly lastDeploymentSucceededAt: Date;
  readonly spec?: string;
  readonly templateMajorVersion: string;
  readonly templateMinorVersion: string;
  readonly templateName: string;
}

export interface ServiceQuotaExceededException {
  readonly message: string;
}

export interface ServiceSummary {
  readonly arn: string;
  readonly createdAt: Date;
  readonly description?: string;
  readonly lastModifiedAt: Date;
  readonly name: string;
  readonly status: string;
  readonly statusMessage?: string;
  readonly templateName: string;
}

export interface ServiceTemplate {
  readonly arn: string;
  readonly createdAt: Date;
  readonly description?: string;
  readonly displayName?: string;
  readonly encryptionKey?: string;
  readonly lastModifiedAt: Date;
  readonly name: string;
  readonly pipelineProvisioning?: string;
  readonly recommendedVersion?: string;
}

export interface ServiceTemplateSummary {
  readonly arn: string;
  readonly createdAt: Date;
  readonly description?: string;
  readonly displayName?: string;
  readonly lastModifiedAt: Date;
  readonly name: string;
  readonly pipelineProvisioning?: string;
  readonly recommendedVersion?: string;
}

export interface ServiceTemplateVersion {
  readonly arn: string;
  readonly compatibleEnvironmentTemplates: [];
  readonly createdAt: Date;
  readonly description?: string;
  readonly lastModifiedAt: Date;
  readonly majorVersion: string;
  readonly minorVersion: string;
  readonly recommendedMinorVersion?: string;
  readonly schema?: string;
  readonly status: string;
  readonly statusMessage?: string;
  readonly templateName: string;
}

export interface ServiceTemplateVersionSummary {
  readonly arn: string;
  readonly createdAt: Date;
  readonly description?: string;
  readonly lastModifiedAt: Date;
  readonly majorVersion: string;
  readonly minorVersion: string;
  readonly recommendedMinorVersion?: string;
  readonly status: string;
  readonly statusMessage?: string;
  readonly templateName: string;
}

export interface Tag {
  readonly key: string;
  readonly value: string;
}

export interface TagResourceInput {
  readonly resourceArn: string;
  readonly tags: [];
}

export interface TagResourceOutput {
}

export interface TemplateSyncConfig {
  readonly branch: string;
  readonly repositoryName: string;
  readonly repositoryProvider: string;
  readonly subdirectory?: string;
  readonly templateName: string;
  readonly templateType: string;
}

export interface TemplateVersionSourceInput {
  readonly s3?: S3ObjectSource;
}

export interface ThrottlingException {
  readonly message: string;
}

export interface UntagResourceInput {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface UntagResourceOutput {
}

export interface UpdateAccountSettingsInput {
  readonly pipelineProvisioningRepository?: RepositoryBranchInput;
  readonly pipelineServiceRoleArn?: string;
}

export interface UpdateAccountSettingsOutput {
  readonly accountSettings: AccountSettings;
}

export interface UpdateEnvironmentAccountConnectionInput {
  readonly id: string;
  readonly roleArn: string;
}

export interface UpdateEnvironmentAccountConnectionOutput {
  readonly environmentAccountConnection: EnvironmentAccountConnection;
}

export interface UpdateEnvironmentInput {
  readonly deploymentType: string;
  readonly description?: string;
  readonly environmentAccountConnectionId?: string;
  readonly name: string;
  readonly protonServiceRoleArn?: string;
  readonly provisioningRepository?: RepositoryBranchInput;
  readonly spec?: string;
  readonly templateMajorVersion?: string;
  readonly templateMinorVersion?: string;
}

export interface UpdateEnvironmentOutput {
  readonly environment: Environment;
}

export interface UpdateEnvironmentTemplateInput {
  readonly description?: string;
  readonly displayName?: string;
  readonly name: string;
}

export interface UpdateEnvironmentTemplateOutput {
  readonly environmentTemplate: EnvironmentTemplate;
}

export interface UpdateEnvironmentTemplateVersionInput {
  readonly description?: string;
  readonly majorVersion: string;
  readonly minorVersion: string;
  readonly status?: string;
  readonly templateName: string;
}

export interface UpdateEnvironmentTemplateVersionOutput {
  readonly environmentTemplateVersion: EnvironmentTemplateVersion;
}

export interface UpdateServiceInput {
  readonly description?: string;
  readonly name: string;
  readonly spec?: string;
}

export interface UpdateServiceInstanceInput {
  readonly deploymentType: string;
  readonly name: string;
  readonly serviceName: string;
  readonly spec?: string;
  readonly templateMajorVersion?: string;
  readonly templateMinorVersion?: string;
}

export interface UpdateServiceInstanceOutput {
  readonly serviceInstance: ServiceInstance;
}

export interface UpdateServiceOutput {
  readonly service: Service;
}

export interface UpdateServicePipelineInput {
  readonly deploymentType: string;
  readonly serviceName: string;
  readonly spec: string;
  readonly templateMajorVersion?: string;
  readonly templateMinorVersion?: string;
}

export interface UpdateServicePipelineOutput {
  readonly pipeline: ServicePipeline;
}

export interface UpdateServiceTemplateInput {
  readonly description?: string;
  readonly displayName?: string;
  readonly name: string;
}

export interface UpdateServiceTemplateOutput {
  readonly serviceTemplate: ServiceTemplate;
}

export interface UpdateServiceTemplateVersionInput {
  readonly compatibleEnvironmentTemplates?: [];
  readonly description?: string;
  readonly majorVersion: string;
  readonly minorVersion: string;
  readonly status?: string;
  readonly templateName: string;
}

export interface UpdateServiceTemplateVersionOutput {
  readonly serviceTemplateVersion: ServiceTemplateVersion;
}

export interface UpdateTemplateSyncConfigInput {
  readonly branch: string;
  readonly repositoryName: string;
  readonly repositoryProvider: string;
  readonly subdirectory?: string;
  readonly templateName: string;
  readonly templateType: string;
}

export interface UpdateTemplateSyncConfigOutput {
  readonly templateSyncConfig?: TemplateSyncConfig;
}

export interface ValidationException {
  readonly message: string;
}


