/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AcceptSharedDirectory {
  readonly SharedDirectoryId: string;
}

export interface AddIpRoutes {
  readonly DirectoryId: string;
  readonly IpRoutes: [];
  readonly UpdateSecurityGroupForDirectoryControllers?: boolean;
}

export interface AddRegion {
  readonly DirectoryId: string;
  readonly RegionName: string;
  readonly VPCSettings: DirectoryVpcSettings;
}

export interface AddTagsToResource {
  readonly ResourceId: string;
  readonly Tags: [];
}

export interface CancelSchemaExtension {
  readonly DirectoryId: string;
  readonly SchemaExtensionId: string;
}

export interface ConnectDirectory {
  readonly Name: string;
  readonly ShortName?: string;
  readonly Password: string;
  readonly Description?: string;
  readonly Size: string;
  readonly ConnectSettings: DirectoryConnectSettings;
  readonly Tags?: [];
}

export interface CreateAlias {
  readonly DirectoryId: string;
  readonly Alias: string;
}

export interface CreateComputer {
  readonly DirectoryId: string;
  readonly ComputerName: string;
  readonly Password: string;
  readonly OrganizationalUnitDistinguishedName?: string;
  readonly ComputerAttributes?: [];
}

export interface CreateConditionalForwarder {
  readonly DirectoryId: string;
  readonly RemoteDomainName: string;
  readonly DnsIpAddrs: [];
}

export interface CreateDirectory {
  readonly Name: string;
  readonly ShortName?: string;
  readonly Password: string;
  readonly Description?: string;
  readonly Size: string;
  readonly VpcSettings?: DirectoryVpcSettings;
  readonly Tags?: [];
}

export interface CreateLogSubscription {
  readonly DirectoryId: string;
  readonly LogGroupName: string;
}

export interface CreateMicrosoftAD {
  readonly Name: string;
  readonly ShortName?: string;
  readonly Password: string;
  readonly Description?: string;
  readonly VpcSettings: DirectoryVpcSettings;
  readonly Edition?: string;
  readonly Tags?: [];
}

export interface CreateSnapshot {
  readonly DirectoryId: string;
  readonly Name?: string;
}

export interface CreateTrust {
  readonly DirectoryId: string;
  readonly RemoteDomainName: string;
  readonly TrustPassword: string;
  readonly TrustDirection: string;
  readonly TrustType?: string;
  readonly ConditionalForwarderIpAddrs?: [];
  readonly SelectiveAuth?: string;
}

export interface DeleteConditionalForwarder {
  readonly DirectoryId: string;
  readonly RemoteDomainName: string;
}

export interface DeleteDirectory {
  readonly DirectoryId: string;
}

export interface DeleteLogSubscription {
  readonly DirectoryId: string;
}

export interface DeleteSnapshot {
  readonly SnapshotId: string;
}

export interface DeleteTrust {
  readonly TrustId: string;
  readonly DeleteAssociatedConditionalForwarder?: boolean;
}

export interface DeregisterCertificate {
  readonly DirectoryId: string;
  readonly CertificateId: string;
}

export interface DeregisterEventTopic {
  readonly DirectoryId: string;
  readonly TopicName: string;
}

export interface DescribeCertificate {
  readonly DirectoryId: string;
  readonly CertificateId: string;
}

export interface DescribeClientAuthenticationSettings {
  readonly DirectoryId: string;
  readonly Type?: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface DescribeConditionalForwarders {
  readonly DirectoryId: string;
  readonly RemoteDomainNames?: [];
}

export interface DescribeDirectories {
  readonly DirectoryIds?: [];
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface DescribeDomainControllers {
  readonly DirectoryId: string;
  readonly DomainControllerIds?: [];
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface DescribeEventTopics {
  readonly DirectoryId?: string;
  readonly TopicNames?: [];
}

export interface DescribeLDAPSSettings {
  readonly DirectoryId: string;
  readonly Type?: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface DescribeRegions {
  readonly DirectoryId: string;
  readonly RegionName?: string;
  readonly NextToken?: string;
}

export interface DescribeSharedDirectories {
  readonly OwnerDirectoryId: string;
  readonly SharedDirectoryIds?: [];
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface DescribeSnapshots {
  readonly DirectoryId?: string;
  readonly SnapshotIds?: [];
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface DescribeTrusts {
  readonly DirectoryId?: string;
  readonly TrustIds?: [];
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface DisableClientAuthentication {
  readonly DirectoryId: string;
  readonly Type: string;
}

export interface DisableLDAPS {
  readonly DirectoryId: string;
  readonly Type: string;
}

export interface DisableRadius {
  readonly DirectoryId: string;
}

export interface DisableSso {
  readonly DirectoryId: string;
  readonly UserName?: string;
  readonly Password?: string;
}

export interface EnableClientAuthentication {
  readonly DirectoryId: string;
  readonly Type: string;
}

export interface EnableLDAPS {
  readonly DirectoryId: string;
  readonly Type: string;
}

export interface EnableRadius {
  readonly DirectoryId: string;
  readonly RadiusSettings: RadiusSettings;
}

export interface EnableSso {
  readonly DirectoryId: string;
  readonly UserName?: string;
  readonly Password?: string;
}

export interface GetDirectoryLimits {
}

export interface GetSnapshotLimits {
  readonly DirectoryId: string;
}

export interface ListCertificates {
  readonly DirectoryId: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface ListIpRoutes {
  readonly DirectoryId: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface ListLogSubscriptions {
  readonly DirectoryId?: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface ListSchemaExtensions {
  readonly DirectoryId: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface ListTagsForResource {
  readonly ResourceId: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface RegisterCertificate {
  readonly DirectoryId: string;
  readonly CertificateData: string;
  readonly Type?: string;
  readonly ClientCertAuthSettings?: ClientCertAuthSettings;
}

export interface RegisterEventTopic {
  readonly DirectoryId: string;
  readonly TopicName: string;
}

export interface RejectSharedDirectory {
  readonly SharedDirectoryId: string;
}

export interface RemoveIpRoutes {
  readonly DirectoryId: string;
  readonly CidrIps: [];
}

export interface RemoveRegion {
  readonly DirectoryId: string;
}

export interface RemoveTagsFromResource {
  readonly ResourceId: string;
  readonly TagKeys: [];
}

export interface ResetUserPassword {
  readonly DirectoryId: string;
  readonly UserName: string;
  readonly NewPassword: string;
}

export interface RestoreFromSnapshot {
  readonly SnapshotId: string;
}

export interface ShareDirectory {
  readonly DirectoryId: string;
  readonly ShareNotes?: string;
  readonly ShareTarget: ShareTarget;
  readonly ShareMethod: string;
}

export interface StartSchemaExtension {
  readonly DirectoryId: string;
  readonly CreateSnapshotBeforeSchemaExtension: boolean;
  readonly LdifContent: string;
  readonly Description: string;
}

export interface UnshareDirectory {
  readonly DirectoryId: string;
  readonly UnshareTarget: UnshareTarget;
}

export interface UpdateConditionalForwarder {
  readonly DirectoryId: string;
  readonly RemoteDomainName: string;
  readonly DnsIpAddrs: [];
}

export interface UpdateNumberOfDomainControllers {
  readonly DirectoryId: string;
  readonly DesiredNumber: number;
}

export interface UpdateRadius {
  readonly DirectoryId: string;
  readonly RadiusSettings: RadiusSettings;
}

export interface UpdateTrust {
  readonly TrustId: string;
  readonly SelectiveAuth?: string;
}

export interface VerifyTrust {
  readonly TrustId: string;
}

export interface AcceptSharedDirectoryRequest {
  readonly SharedDirectoryId: string;
}

export interface AcceptSharedDirectoryResult {
  readonly SharedDirectory?: SharedDirectory;
}

export interface AccessDeniedException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface AddIpRoutesRequest {
  readonly DirectoryId: string;
  readonly IpRoutes: [];
  readonly UpdateSecurityGroupForDirectoryControllers?: boolean;
}

export interface AddIpRoutesResult {
}

export interface AddRegionRequest {
  readonly DirectoryId: string;
  readonly RegionName: string;
  readonly VPCSettings: DirectoryVpcSettings;
}

export interface AddRegionResult {
}

export interface AddTagsToResourceRequest {
  readonly ResourceId: string;
  readonly Tags: [];
}

export interface AddTagsToResourceResult {
}

export interface Attribute {
  readonly Name?: string;
  readonly Value?: string;
}

export interface AuthenticationFailedException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface CancelSchemaExtensionRequest {
  readonly DirectoryId: string;
  readonly SchemaExtensionId: string;
}

export interface CancelSchemaExtensionResult {
}

export interface Certificate {
  readonly CertificateId?: string;
  readonly State?: string;
  readonly StateReason?: string;
  readonly CommonName?: string;
  readonly RegisteredDateTime?: Date;
  readonly ExpiryDateTime?: Date;
  readonly Type?: string;
  readonly ClientCertAuthSettings?: ClientCertAuthSettings;
}

export interface CertificateAlreadyExistsException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface CertificateDoesNotExistException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface CertificateInUseException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface CertificateInfo {
  readonly CertificateId?: string;
  readonly CommonName?: string;
  readonly State?: string;
  readonly ExpiryDateTime?: Date;
  readonly Type?: string;
}

export interface CertificateLimitExceededException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface ClientAuthenticationSettingInfo {
  readonly Type?: string;
  readonly Status?: string;
  readonly LastUpdatedDateTime?: Date;
}

export interface ClientCertAuthSettings {
  readonly OCSPUrl?: string;
}

export interface ClientException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface Computer {
  readonly ComputerId?: string;
  readonly ComputerName?: string;
  readonly ComputerAttributes?: [];
}

export interface ConditionalForwarder {
  readonly RemoteDomainName?: string;
  readonly DnsIpAddrs?: [];
  readonly ReplicationScope?: string;
}

export interface ConnectDirectoryRequest {
  readonly Name: string;
  readonly ShortName?: string;
  readonly Password: string;
  readonly Description?: string;
  readonly Size: string;
  readonly ConnectSettings: DirectoryConnectSettings;
  readonly Tags?: [];
}

export interface ConnectDirectoryResult {
  readonly DirectoryId?: string;
}

export interface CreateAliasRequest {
  readonly DirectoryId: string;
  readonly Alias: string;
}

export interface CreateAliasResult {
  readonly DirectoryId?: string;
  readonly Alias?: string;
}

export interface CreateComputerRequest {
  readonly DirectoryId: string;
  readonly ComputerName: string;
  readonly Password: string;
  readonly OrganizationalUnitDistinguishedName?: string;
  readonly ComputerAttributes?: [];
}

export interface CreateComputerResult {
  readonly Computer?: Computer;
}

export interface CreateConditionalForwarderRequest {
  readonly DirectoryId: string;
  readonly RemoteDomainName: string;
  readonly DnsIpAddrs: [];
}

export interface CreateConditionalForwarderResult {
}

export interface CreateDirectoryRequest {
  readonly Name: string;
  readonly ShortName?: string;
  readonly Password: string;
  readonly Description?: string;
  readonly Size: string;
  readonly VpcSettings?: DirectoryVpcSettings;
  readonly Tags?: [];
}

export interface CreateDirectoryResult {
  readonly DirectoryId?: string;
}

export interface CreateLogSubscriptionRequest {
  readonly DirectoryId: string;
  readonly LogGroupName: string;
}

export interface CreateLogSubscriptionResult {
}

export interface CreateMicrosoftADRequest {
  readonly Name: string;
  readonly ShortName?: string;
  readonly Password: string;
  readonly Description?: string;
  readonly VpcSettings: DirectoryVpcSettings;
  readonly Edition?: string;
  readonly Tags?: [];
}

export interface CreateMicrosoftADResult {
  readonly DirectoryId?: string;
}

export interface CreateSnapshotRequest {
  readonly DirectoryId: string;
  readonly Name?: string;
}

export interface CreateSnapshotResult {
  readonly SnapshotId?: string;
}

export interface CreateTrustRequest {
  readonly DirectoryId: string;
  readonly RemoteDomainName: string;
  readonly TrustPassword: string;
  readonly TrustDirection: string;
  readonly TrustType?: string;
  readonly ConditionalForwarderIpAddrs?: [];
  readonly SelectiveAuth?: string;
}

export interface CreateTrustResult {
  readonly TrustId?: string;
}

export interface DeleteConditionalForwarderRequest {
  readonly DirectoryId: string;
  readonly RemoteDomainName: string;
}

export interface DeleteConditionalForwarderResult {
}

export interface DeleteDirectoryRequest {
  readonly DirectoryId: string;
}

export interface DeleteDirectoryResult {
  readonly DirectoryId?: string;
}

export interface DeleteLogSubscriptionRequest {
  readonly DirectoryId: string;
}

export interface DeleteLogSubscriptionResult {
}

export interface DeleteSnapshotRequest {
  readonly SnapshotId: string;
}

export interface DeleteSnapshotResult {
  readonly SnapshotId?: string;
}

export interface DeleteTrustRequest {
  readonly TrustId: string;
  readonly DeleteAssociatedConditionalForwarder?: boolean;
}

export interface DeleteTrustResult {
  readonly TrustId?: string;
}

export interface DeregisterCertificateRequest {
  readonly DirectoryId: string;
  readonly CertificateId: string;
}

export interface DeregisterCertificateResult {
}

export interface DeregisterEventTopicRequest {
  readonly DirectoryId: string;
  readonly TopicName: string;
}

export interface DeregisterEventTopicResult {
}

export interface DescribeCertificateRequest {
  readonly DirectoryId: string;
  readonly CertificateId: string;
}

export interface DescribeCertificateResult {
  readonly Certificate?: Certificate;
}

export interface DescribeClientAuthenticationSettingsRequest {
  readonly DirectoryId: string;
  readonly Type?: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface DescribeClientAuthenticationSettingsResult {
  readonly ClientAuthenticationSettingsInfo?: [];
  readonly NextToken?: string;
}

export interface DescribeConditionalForwardersRequest {
  readonly DirectoryId: string;
  readonly RemoteDomainNames?: [];
}

export interface DescribeConditionalForwardersResult {
  readonly ConditionalForwarders?: [];
}

export interface DescribeDirectoriesRequest {
  readonly DirectoryIds?: [];
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface DescribeDirectoriesResult {
  readonly DirectoryDescriptions?: [];
  readonly NextToken?: string;
}

export interface DescribeDomainControllersRequest {
  readonly DirectoryId: string;
  readonly DomainControllerIds?: [];
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface DescribeDomainControllersResult {
  readonly DomainControllers?: [];
  readonly NextToken?: string;
}

export interface DescribeEventTopicsRequest {
  readonly DirectoryId?: string;
  readonly TopicNames?: [];
}

export interface DescribeEventTopicsResult {
  readonly EventTopics?: [];
}

export interface DescribeLDAPSSettingsRequest {
  readonly DirectoryId: string;
  readonly Type?: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface DescribeLDAPSSettingsResult {
  readonly LDAPSSettingsInfo?: [];
  readonly NextToken?: string;
}

export interface DescribeRegionsRequest {
  readonly DirectoryId: string;
  readonly RegionName?: string;
  readonly NextToken?: string;
}

export interface DescribeRegionsResult {
  readonly RegionsDescription?: [];
  readonly NextToken?: string;
}

export interface DescribeSharedDirectoriesRequest {
  readonly OwnerDirectoryId: string;
  readonly SharedDirectoryIds?: [];
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface DescribeSharedDirectoriesResult {
  readonly SharedDirectories?: [];
  readonly NextToken?: string;
}

export interface DescribeSnapshotsRequest {
  readonly DirectoryId?: string;
  readonly SnapshotIds?: [];
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface DescribeSnapshotsResult {
  readonly Snapshots?: [];
  readonly NextToken?: string;
}

export interface DescribeTrustsRequest {
  readonly DirectoryId?: string;
  readonly TrustIds?: [];
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface DescribeTrustsResult {
  readonly Trusts?: [];
  readonly NextToken?: string;
}

export interface DirectoryAlreadyInRegionException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface DirectoryAlreadySharedException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface DirectoryConnectSettings {
  readonly VpcId: string;
  readonly SubnetIds: [];
  readonly CustomerDnsIps: [];
  readonly CustomerUserName: string;
}

export interface DirectoryConnectSettingsDescription {
  readonly VpcId?: string;
  readonly SubnetIds?: [];
  readonly CustomerUserName?: string;
  readonly SecurityGroupId?: string;
  readonly AvailabilityZones?: [];
  readonly ConnectIps?: [];
}

export interface DirectoryDescription {
  readonly DirectoryId?: string;
  readonly Name?: string;
  readonly ShortName?: string;
  readonly Size?: string;
  readonly Edition?: string;
  readonly Alias?: string;
  readonly AccessUrl?: string;
  readonly Description?: string;
  readonly DnsIpAddrs?: [];
  readonly Stage?: string;
  readonly ShareStatus?: string;
  readonly ShareMethod?: string;
  readonly ShareNotes?: string;
  readonly LaunchTime?: Date;
  readonly StageLastUpdatedDateTime?: Date;
  readonly Type?: string;
  readonly VpcSettings?: DirectoryVpcSettingsDescription;
  readonly ConnectSettings?: DirectoryConnectSettingsDescription;
  readonly RadiusSettings?: RadiusSettings;
  readonly RadiusStatus?: string;
  readonly StageReason?: string;
  readonly SsoEnabled?: boolean;
  readonly DesiredNumberOfDomainControllers?: number;
  readonly OwnerDirectoryDescription?: OwnerDirectoryDescription;
  readonly RegionsInfo?: RegionsInfo;
}

export interface DirectoryDoesNotExistException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface DirectoryLimitExceededException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface DirectoryLimits {
  readonly CloudOnlyDirectoriesLimit?: number;
  readonly CloudOnlyDirectoriesCurrentCount?: number;
  readonly CloudOnlyDirectoriesLimitReached?: boolean;
  readonly CloudOnlyMicrosoftADLimit?: number;
  readonly CloudOnlyMicrosoftADCurrentCount?: number;
  readonly CloudOnlyMicrosoftADLimitReached?: boolean;
  readonly ConnectedDirectoriesLimit?: number;
  readonly ConnectedDirectoriesCurrentCount?: number;
  readonly ConnectedDirectoriesLimitReached?: boolean;
}

export interface DirectoryNotSharedException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface DirectoryUnavailableException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface DirectoryVpcSettings {
  readonly VpcId: string;
  readonly SubnetIds: [];
}

export interface DirectoryVpcSettingsDescription {
  readonly VpcId?: string;
  readonly SubnetIds?: [];
  readonly SecurityGroupId?: string;
  readonly AvailabilityZones?: [];
}

export interface DisableClientAuthenticationRequest {
  readonly DirectoryId: string;
  readonly Type: string;
}

export interface DisableClientAuthenticationResult {
}

export interface DisableLDAPSRequest {
  readonly DirectoryId: string;
  readonly Type: string;
}

export interface DisableLDAPSResult {
}

export interface DisableRadiusRequest {
  readonly DirectoryId: string;
}

export interface DisableRadiusResult {
}

export interface DisableSsoRequest {
  readonly DirectoryId: string;
  readonly UserName?: string;
  readonly Password?: string;
}

export interface DisableSsoResult {
}

export interface DomainController {
  readonly DirectoryId?: string;
  readonly DomainControllerId?: string;
  readonly DnsIpAddr?: string;
  readonly VpcId?: string;
  readonly SubnetId?: string;
  readonly AvailabilityZone?: string;
  readonly Status?: string;
  readonly StatusReason?: string;
  readonly LaunchTime?: Date;
  readonly StatusLastUpdatedDateTime?: Date;
}

export interface DomainControllerLimitExceededException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface EnableClientAuthenticationRequest {
  readonly DirectoryId: string;
  readonly Type: string;
}

export interface EnableClientAuthenticationResult {
}

export interface EnableLDAPSRequest {
  readonly DirectoryId: string;
  readonly Type: string;
}

export interface EnableLDAPSResult {
}

export interface EnableRadiusRequest {
  readonly DirectoryId: string;
  readonly RadiusSettings: RadiusSettings;
}

export interface EnableRadiusResult {
}

export interface EnableSsoRequest {
  readonly DirectoryId: string;
  readonly UserName?: string;
  readonly Password?: string;
}

export interface EnableSsoResult {
}

export interface EntityAlreadyExistsException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface EntityDoesNotExistException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface EventTopic {
  readonly DirectoryId?: string;
  readonly TopicName?: string;
  readonly TopicArn?: string;
  readonly CreatedDateTime?: Date;
  readonly Status?: string;
}

export interface GetDirectoryLimitsRequest {
}

export interface GetDirectoryLimitsResult {
  readonly DirectoryLimits?: DirectoryLimits;
}

export interface GetSnapshotLimitsRequest {
  readonly DirectoryId: string;
}

export interface GetSnapshotLimitsResult {
  readonly SnapshotLimits?: SnapshotLimits;
}

export interface InsufficientPermissionsException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface InvalidCertificateException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface InvalidClientAuthStatusException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface InvalidLDAPSStatusException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface InvalidNextTokenException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface InvalidParameterException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface InvalidPasswordException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface InvalidTargetException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface IpRoute {
  readonly CidrIp?: string;
  readonly Description?: string;
}

export interface IpRouteInfo {
  readonly DirectoryId?: string;
  readonly CidrIp?: string;
  readonly IpRouteStatusMsg?: string;
  readonly AddedDateTime?: Date;
  readonly IpRouteStatusReason?: string;
  readonly Description?: string;
}

export interface IpRouteLimitExceededException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface LDAPSSettingInfo {
  readonly LDAPSStatus?: string;
  readonly LDAPSStatusReason?: string;
  readonly LastUpdatedDateTime?: Date;
}

export interface ListCertificatesRequest {
  readonly DirectoryId: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface ListCertificatesResult {
  readonly NextToken?: string;
  readonly CertificatesInfo?: [];
}

export interface ListIpRoutesRequest {
  readonly DirectoryId: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface ListIpRoutesResult {
  readonly IpRoutesInfo?: [];
  readonly NextToken?: string;
}

export interface ListLogSubscriptionsRequest {
  readonly DirectoryId?: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface ListLogSubscriptionsResult {
  readonly LogSubscriptions?: [];
  readonly NextToken?: string;
}

export interface ListSchemaExtensionsRequest {
  readonly DirectoryId: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface ListSchemaExtensionsResult {
  readonly SchemaExtensionsInfo?: [];
  readonly NextToken?: string;
}

export interface ListTagsForResourceRequest {
  readonly ResourceId: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface ListTagsForResourceResult {
  readonly Tags?: [];
  readonly NextToken?: string;
}

export interface LogSubscription {
  readonly DirectoryId?: string;
  readonly LogGroupName?: string;
  readonly SubscriptionCreatedDateTime?: Date;
}

export interface NoAvailableCertificateException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface OrganizationsException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface OwnerDirectoryDescription {
  readonly DirectoryId?: string;
  readonly AccountId?: string;
  readonly DnsIpAddrs?: [];
  readonly VpcSettings?: DirectoryVpcSettingsDescription;
  readonly RadiusSettings?: RadiusSettings;
  readonly RadiusStatus?: string;
}

export interface RadiusSettings {
  readonly RadiusServers?: [];
  readonly RadiusPort?: number;
  readonly RadiusTimeout?: number;
  readonly RadiusRetries?: number;
  readonly SharedSecret?: string;
  readonly AuthenticationProtocol?: string;
  readonly DisplayLabel?: string;
  readonly UseSameUsername?: boolean;
}

export interface RegionDescription {
  readonly DirectoryId?: string;
  readonly RegionName?: string;
  readonly RegionType?: string;
  readonly Status?: string;
  readonly VpcSettings?: DirectoryVpcSettings;
  readonly DesiredNumberOfDomainControllers?: number;
  readonly LaunchTime?: Date;
  readonly StatusLastUpdatedDateTime?: Date;
  readonly LastUpdatedDateTime?: Date;
}

export interface RegionLimitExceededException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface RegionsInfo {
  readonly PrimaryRegion?: string;
  readonly AdditionalRegions?: [];
}

export interface RegisterCertificateRequest {
  readonly DirectoryId: string;
  readonly CertificateData: string;
  readonly Type?: string;
  readonly ClientCertAuthSettings?: ClientCertAuthSettings;
}

export interface RegisterCertificateResult {
  readonly CertificateId?: string;
}

export interface RegisterEventTopicRequest {
  readonly DirectoryId: string;
  readonly TopicName: string;
}

export interface RegisterEventTopicResult {
}

export interface RejectSharedDirectoryRequest {
  readonly SharedDirectoryId: string;
}

export interface RejectSharedDirectoryResult {
  readonly SharedDirectoryId?: string;
}

export interface RemoveIpRoutesRequest {
  readonly DirectoryId: string;
  readonly CidrIps: [];
}

export interface RemoveIpRoutesResult {
}

export interface RemoveRegionRequest {
  readonly DirectoryId: string;
}

export interface RemoveRegionResult {
}

export interface RemoveTagsFromResourceRequest {
  readonly ResourceId: string;
  readonly TagKeys: [];
}

export interface RemoveTagsFromResourceResult {
}

export interface ResetUserPasswordRequest {
  readonly DirectoryId: string;
  readonly UserName: string;
  readonly NewPassword: string;
}

export interface ResetUserPasswordResult {
}

export interface RestoreFromSnapshotRequest {
  readonly SnapshotId: string;
}

export interface RestoreFromSnapshotResult {
}

export interface SchemaExtensionInfo {
  readonly DirectoryId?: string;
  readonly SchemaExtensionId?: string;
  readonly Description?: string;
  readonly SchemaExtensionStatus?: string;
  readonly SchemaExtensionStatusReason?: string;
  readonly StartDateTime?: Date;
  readonly EndDateTime?: Date;
}

export interface ServiceException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface ShareDirectoryRequest {
  readonly DirectoryId: string;
  readonly ShareNotes?: string;
  readonly ShareTarget: ShareTarget;
  readonly ShareMethod: string;
}

export interface ShareDirectoryResult {
  readonly SharedDirectoryId?: string;
}

export interface ShareLimitExceededException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface ShareTarget {
  readonly Id: string;
  readonly Type: string;
}

export interface SharedDirectory {
  readonly OwnerAccountId?: string;
  readonly OwnerDirectoryId?: string;
  readonly ShareMethod?: string;
  readonly SharedAccountId?: string;
  readonly SharedDirectoryId?: string;
  readonly ShareStatus?: string;
  readonly ShareNotes?: string;
  readonly CreatedDateTime?: Date;
  readonly LastUpdatedDateTime?: Date;
}

export interface Snapshot {
  readonly DirectoryId?: string;
  readonly SnapshotId?: string;
  readonly Type?: string;
  readonly Name?: string;
  readonly Status?: string;
  readonly StartTime?: Date;
}

export interface SnapshotLimitExceededException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface SnapshotLimits {
  readonly ManualSnapshotsLimit?: number;
  readonly ManualSnapshotsCurrentCount?: number;
  readonly ManualSnapshotsLimitReached?: boolean;
}

export interface StartSchemaExtensionRequest {
  readonly DirectoryId: string;
  readonly CreateSnapshotBeforeSchemaExtension: boolean;
  readonly LdifContent: string;
  readonly Description: string;
}

export interface StartSchemaExtensionResult {
  readonly SchemaExtensionId?: string;
}

export interface Tag {
  readonly Key: string;
  readonly Value: string;
}

export interface TagLimitExceededException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface Trust {
  readonly DirectoryId?: string;
  readonly TrustId?: string;
  readonly RemoteDomainName?: string;
  readonly TrustType?: string;
  readonly TrustDirection?: string;
  readonly TrustState?: string;
  readonly CreatedDateTime?: Date;
  readonly LastUpdatedDateTime?: Date;
  readonly StateLastUpdatedDateTime?: Date;
  readonly TrustStateReason?: string;
  readonly SelectiveAuth?: string;
}

export interface UnshareDirectoryRequest {
  readonly DirectoryId: string;
  readonly UnshareTarget: UnshareTarget;
}

export interface UnshareDirectoryResult {
  readonly SharedDirectoryId?: string;
}

export interface UnshareTarget {
  readonly Id: string;
  readonly Type: string;
}

export interface UnsupportedOperationException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface UpdateConditionalForwarderRequest {
  readonly DirectoryId: string;
  readonly RemoteDomainName: string;
  readonly DnsIpAddrs: [];
}

export interface UpdateConditionalForwarderResult {
}

export interface UpdateNumberOfDomainControllersRequest {
  readonly DirectoryId: string;
  readonly DesiredNumber: number;
}

export interface UpdateNumberOfDomainControllersResult {
}

export interface UpdateRadiusRequest {
  readonly DirectoryId: string;
  readonly RadiusSettings: RadiusSettings;
}

export interface UpdateRadiusResult {
}

export interface UpdateTrustRequest {
  readonly TrustId: string;
  readonly SelectiveAuth?: string;
}

export interface UpdateTrustResult {
  readonly RequestId?: string;
  readonly TrustId?: string;
}

export interface UserDoesNotExistException {
  readonly Message?: string;
  readonly RequestId?: string;
}

export interface VerifyTrustRequest {
  readonly TrustId: string;
}

export interface VerifyTrustResult {
  readonly TrustId?: string;
}


