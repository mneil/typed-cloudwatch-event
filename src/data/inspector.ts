/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AddAttributesToFindings {
  readonly findingArns: [];
  readonly attributes: [];
}
export interface CreateAssessmentTarget {
  readonly assessmentTargetName: string;
  readonly resourceGroupArn: string;
}
export interface CreateAssessmentTemplate {
  readonly assessmentTargetArn: string;
  readonly assessmentTemplateName: string;
  readonly durationInSeconds: number;
  readonly rulesPackageArns: [];
  readonly userAttributesForFindings: [];
}
export interface CreateExclusionsPreview {
  readonly assessmentTemplateArn: string;
}
export interface CreateResourceGroup {
  readonly resourceGroupTags: [];
}
export interface DeleteAssessmentRun {
  readonly assessmentRunArn: string;
}
export interface DeleteAssessmentTarget {
  readonly assessmentTargetArn: string;
}
export interface DeleteAssessmentTemplate {
  readonly assessmentTemplateArn: string;
}
export interface DescribeAssessmentRuns {
  readonly assessmentRunArns: [];
}
export interface DescribeAssessmentTargets {
  readonly assessmentTargetArns: [];
}
export interface DescribeAssessmentTemplates {
  readonly assessmentTemplateArns: [];
}
export interface DescribeExclusions {
  readonly exclusionArns: [];
  readonly locale: string;
}
export interface DescribeFindings {
  readonly findingArns: [];
  readonly locale: string;
}
export interface DescribeResourceGroups {
  readonly resourceGroupArns: [];
}
export interface DescribeRulesPackages {
  readonly rulesPackageArns: [];
  readonly locale: string;
}
export interface GetAssessmentReport {
  readonly assessmentRunArn: string;
  readonly reportFileFormat: string;
  readonly reportType: string;
}
export interface GetExclusionsPreview {
  readonly assessmentTemplateArn: string;
  readonly previewToken: string;
  readonly nextToken: string;
  readonly maxResults: number;
  readonly locale: string;
}
export interface GetTelemetryMetadata {
  readonly assessmentRunArn: string;
}
export interface ListAssessmentRunAgents {
  readonly assessmentRunArn: string;
  readonly filter: AgentFilter;
  readonly nextToken: string;
  readonly maxResults: number;
}
export interface ListAssessmentRuns {
  readonly assessmentTemplateArns: [];
  readonly filter: AssessmentRunFilter;
  readonly nextToken: string;
  readonly maxResults: number;
}
export interface ListAssessmentTargets {
  readonly filter: AssessmentTargetFilter;
  readonly nextToken: string;
  readonly maxResults: number;
}
export interface ListAssessmentTemplates {
  readonly assessmentTargetArns: [];
  readonly filter: AssessmentTemplateFilter;
  readonly nextToken: string;
  readonly maxResults: number;
}
export interface ListEventSubscriptions {
  readonly resourceArn: string;
  readonly nextToken: string;
  readonly maxResults: number;
}
export interface ListExclusions {
  readonly assessmentRunArn: string;
  readonly nextToken: string;
  readonly maxResults: number;
}
export interface ListFindings {
  readonly assessmentRunArns: [];
  readonly filter: FindingFilter;
  readonly nextToken: string;
  readonly maxResults: number;
}
export interface ListRulesPackages {
  readonly nextToken: string;
  readonly maxResults: number;
}
export interface ListTagsForResource {
  readonly resourceArn: string;
}
export interface PreviewAgents {
  readonly previewAgentsArn: string;
  readonly nextToken: string;
  readonly maxResults: number;
}
export interface RegisterCrossAccountAccessRole {
  readonly roleArn: string;
}
export interface RemoveAttributesFromFindings {
  readonly findingArns: [];
  readonly attributeKeys: [];
}
export interface SetTagsForResource {
  readonly resourceArn: string;
  readonly tags: [];
}
export interface StartAssessmentRun {
  readonly assessmentTemplateArn: string;
  readonly assessmentRunName: string;
}
export interface StopAssessmentRun {
  readonly assessmentRunArn: string;
  readonly stopAction: string;
}
export interface SubscribeToEvent {
  readonly resourceArn: string;
  readonly event: string;
  readonly topicArn: string;
}
export interface UnsubscribeFromEvent {
  readonly resourceArn: string;
  readonly event: string;
  readonly topicArn: string;
}
export interface UpdateAssessmentTarget {
  readonly assessmentTargetArn: string;
  readonly assessmentTargetName: string;
  readonly resourceGroupArn: string;
}



interface AccessDeniedException {
  readonly message: string;
  readonly errorCode: string;
  readonly canRetry: boolean;
}

interface AddAttributesToFindingsRequest {
  readonly findingArns: [];
  readonly attributes: [];
}

interface AddAttributesToFindingsResponse {
  readonly failedItems: {[key: string]: any};
}

interface AgentAlreadyRunningAssessment {
  readonly agentId: string;
  readonly assessmentRunArn: string;
}

interface AgentFilter {
  readonly agentHealths: [];
  readonly agentHealthCodes: [];
}

interface AgentPreview {
  readonly hostname: string;
  readonly agentId: string;
  readonly autoScalingGroup: string;
  readonly agentHealth: string;
  readonly agentVersion: string;
  readonly operatingSystem: string;
  readonly kernelVersion: string;
  readonly ipv4Address: string;
}

interface AgentsAlreadyRunningAssessmentException {
  readonly message: string;
  readonly agents: [];
  readonly agentsTruncated: boolean;
  readonly canRetry: boolean;
}

interface AssessmentRun {
  readonly arn: string;
  readonly name: string;
  readonly assessmentTemplateArn: string;
  readonly state: string;
  readonly durationInSeconds: number;
  readonly rulesPackageArns: [];
  readonly userAttributesForFindings: [];
  readonly createdAt: Date;
  readonly startedAt: Date;
  readonly completedAt: Date;
  readonly stateChangedAt: Date;
  readonly dataCollected: boolean;
  readonly stateChanges: [];
  readonly notifications: [];
  readonly findingCounts: {[key: string]: any};
}

interface AssessmentRunAgent {
  readonly agentId: string;
  readonly assessmentRunArn: string;
  readonly agentHealth: string;
  readonly agentHealthCode: string;
  readonly agentHealthDetails: string;
  readonly autoScalingGroup: string;
  readonly telemetryMetadata: [];
}

interface AssessmentRunFilter {
  readonly namePattern: string;
  readonly states: [];
  readonly durationRange: DurationRange;
  readonly rulesPackageArns: [];
  readonly startTimeRange: TimestampRange;
  readonly completionTimeRange: TimestampRange;
  readonly stateChangeTimeRange: TimestampRange;
}

interface AssessmentRunInProgressException {
  readonly message: string;
  readonly assessmentRunArns: [];
  readonly assessmentRunArnsTruncated: boolean;
  readonly canRetry: boolean;
}

interface AssessmentRunNotification {
  readonly date: Date;
  readonly event: string;
  readonly message: string;
  readonly error: boolean;
  readonly snsTopicArn: string;
  readonly snsPublishStatusCode: string;
}

interface AssessmentRunStateChange {
  readonly stateChangedAt: Date;
  readonly state: string;
}

interface AssessmentTarget {
  readonly arn: string;
  readonly name: string;
  readonly resourceGroupArn: string;
  readonly createdAt: Date;
  readonly updatedAt: Date;
}

interface AssessmentTargetFilter {
  readonly assessmentTargetNamePattern: string;
}

interface AssessmentTemplate {
  readonly arn: string;
  readonly name: string;
  readonly assessmentTargetArn: string;
  readonly durationInSeconds: number;
  readonly rulesPackageArns: [];
  readonly userAttributesForFindings: [];
  readonly lastAssessmentRunArn: string;
  readonly assessmentRunCount: number;
  readonly createdAt: Date;
}

interface AssessmentTemplateFilter {
  readonly namePattern: string;
  readonly durationRange: DurationRange;
  readonly rulesPackageArns: [];
}

interface AssetAttributes {
  readonly schemaVersion: number;
  readonly agentId: string;
  readonly autoScalingGroup: string;
  readonly amiId: string;
  readonly hostname: string;
  readonly ipv4Addresses: [];
  readonly tags: [];
  readonly networkInterfaces: [];
}

interface Attribute {
  readonly key: string;
  readonly value: string;
}

interface CreateAssessmentTargetRequest {
  readonly assessmentTargetName: string;
  readonly resourceGroupArn: string;
}

interface CreateAssessmentTargetResponse {
  readonly assessmentTargetArn: string;
}

interface CreateAssessmentTemplateRequest {
  readonly assessmentTargetArn: string;
  readonly assessmentTemplateName: string;
  readonly durationInSeconds: number;
  readonly rulesPackageArns: [];
  readonly userAttributesForFindings: [];
}

interface CreateAssessmentTemplateResponse {
  readonly assessmentTemplateArn: string;
}

interface CreateExclusionsPreviewRequest {
  readonly assessmentTemplateArn: string;
}

interface CreateExclusionsPreviewResponse {
  readonly previewToken: string;
}

interface CreateResourceGroupRequest {
  readonly resourceGroupTags: [];
}

interface CreateResourceGroupResponse {
  readonly resourceGroupArn: string;
}

interface DeleteAssessmentRunRequest {
  readonly assessmentRunArn: string;
}

interface DeleteAssessmentTargetRequest {
  readonly assessmentTargetArn: string;
}

interface DeleteAssessmentTemplateRequest {
  readonly assessmentTemplateArn: string;
}

interface DescribeAssessmentRunsRequest {
  readonly assessmentRunArns: [];
}

interface DescribeAssessmentRunsResponse {
  readonly assessmentRuns: [];
  readonly failedItems: {[key: string]: any};
}

interface DescribeAssessmentTargetsRequest {
  readonly assessmentTargetArns: [];
}

interface DescribeAssessmentTargetsResponse {
  readonly assessmentTargets: [];
  readonly failedItems: {[key: string]: any};
}

interface DescribeAssessmentTemplatesRequest {
  readonly assessmentTemplateArns: [];
}

interface DescribeAssessmentTemplatesResponse {
  readonly assessmentTemplates: [];
  readonly failedItems: {[key: string]: any};
}

interface DescribeCrossAccountAccessRoleResponse {
  readonly roleArn: string;
  readonly valid: boolean;
  readonly registeredAt: Date;
}

interface DescribeExclusionsRequest {
  readonly exclusionArns: [];
  readonly locale: string;
}

interface DescribeExclusionsResponse {
  readonly exclusions: {[key: string]: any};
  readonly failedItems: {[key: string]: any};
}

interface DescribeFindingsRequest {
  readonly findingArns: [];
  readonly locale: string;
}

interface DescribeFindingsResponse {
  readonly findings: [];
  readonly failedItems: {[key: string]: any};
}

interface DescribeResourceGroupsRequest {
  readonly resourceGroupArns: [];
}

interface DescribeResourceGroupsResponse {
  readonly resourceGroups: [];
  readonly failedItems: {[key: string]: any};
}

interface DescribeRulesPackagesRequest {
  readonly rulesPackageArns: [];
  readonly locale: string;
}

interface DescribeRulesPackagesResponse {
  readonly rulesPackages: [];
  readonly failedItems: {[key: string]: any};
}

interface DurationRange {
  readonly minSeconds: number;
  readonly maxSeconds: number;
}

interface EventSubscription {
  readonly event: string;
  readonly subscribedAt: Date;
}

interface Exclusion {
  readonly arn: string;
  readonly title: string;
  readonly description: string;
  readonly recommendation: string;
  readonly scopes: [];
  readonly attributes: [];
}

interface ExclusionPreview {
  readonly title: string;
  readonly description: string;
  readonly recommendation: string;
  readonly scopes: [];
  readonly attributes: [];
}

interface FailedItemDetails {
  readonly failureCode: string;
  readonly retryable: boolean;
}

interface Finding {
  readonly arn: string;
  readonly schemaVersion: number;
  readonly service: string;
  readonly serviceAttributes: InspectorServiceAttributes;
  readonly assetType: string;
  readonly assetAttributes: AssetAttributes;
  readonly id: string;
  readonly title: string;
  readonly description: string;
  readonly recommendation: string;
  readonly severity: string;
  readonly numericSeverity: unknown;
  readonly confidence: number;
  readonly indicatorOfCompromise: boolean;
  readonly attributes: [];
  readonly userAttributes: [];
  readonly createdAt: Date;
  readonly updatedAt: Date;
}

interface FindingFilter {
  readonly agentIds: [];
  readonly autoScalingGroups: [];
  readonly ruleNames: [];
  readonly severities: [];
  readonly rulesPackageArns: [];
  readonly attributes: [];
  readonly userAttributes: [];
  readonly creationTimeRange: TimestampRange;
}

interface GetAssessmentReportRequest {
  readonly assessmentRunArn: string;
  readonly reportFileFormat: string;
  readonly reportType: string;
}

interface GetAssessmentReportResponse {
  readonly status: string;
  readonly url: string;
}

interface GetExclusionsPreviewRequest {
  readonly assessmentTemplateArn: string;
  readonly previewToken: string;
  readonly nextToken: string;
  readonly maxResults: number;
  readonly locale: string;
}

interface GetExclusionsPreviewResponse {
  readonly previewStatus: string;
  readonly exclusionPreviews: [];
  readonly nextToken: string;
}

interface GetTelemetryMetadataRequest {
  readonly assessmentRunArn: string;
}

interface GetTelemetryMetadataResponse {
  readonly telemetryMetadata: [];
}

interface InspectorServiceAttributes {
  readonly schemaVersion: number;
  readonly assessmentRunArn: string;
  readonly rulesPackageArn: string;
}

interface InternalException {
  readonly message: string;
  readonly canRetry: boolean;
}

interface InvalidCrossAccountRoleException {
  readonly message: string;
  readonly errorCode: string;
  readonly canRetry: boolean;
}

interface InvalidInputException {
  readonly message: string;
  readonly errorCode: string;
  readonly canRetry: boolean;
}

interface LimitExceededException {
  readonly message: string;
  readonly errorCode: string;
  readonly canRetry: boolean;
}

interface ListAssessmentRunAgentsRequest {
  readonly assessmentRunArn: string;
  readonly filter: AgentFilter;
  readonly nextToken: string;
  readonly maxResults: number;
}

interface ListAssessmentRunAgentsResponse {
  readonly assessmentRunAgents: [];
  readonly nextToken: string;
}

interface ListAssessmentRunsRequest {
  readonly assessmentTemplateArns: [];
  readonly filter: AssessmentRunFilter;
  readonly nextToken: string;
  readonly maxResults: number;
}

interface ListAssessmentRunsResponse {
  readonly assessmentRunArns: [];
  readonly nextToken: string;
}

interface ListAssessmentTargetsRequest {
  readonly filter: AssessmentTargetFilter;
  readonly nextToken: string;
  readonly maxResults: number;
}

interface ListAssessmentTargetsResponse {
  readonly assessmentTargetArns: [];
  readonly nextToken: string;
}

interface ListAssessmentTemplatesRequest {
  readonly assessmentTargetArns: [];
  readonly filter: AssessmentTemplateFilter;
  readonly nextToken: string;
  readonly maxResults: number;
}

interface ListAssessmentTemplatesResponse {
  readonly assessmentTemplateArns: [];
  readonly nextToken: string;
}

interface ListEventSubscriptionsRequest {
  readonly resourceArn: string;
  readonly nextToken: string;
  readonly maxResults: number;
}

interface ListEventSubscriptionsResponse {
  readonly subscriptions: [];
  readonly nextToken: string;
}

interface ListExclusionsRequest {
  readonly assessmentRunArn: string;
  readonly nextToken: string;
  readonly maxResults: number;
}

interface ListExclusionsResponse {
  readonly exclusionArns: [];
  readonly nextToken: string;
}

interface ListFindingsRequest {
  readonly assessmentRunArns: [];
  readonly filter: FindingFilter;
  readonly nextToken: string;
  readonly maxResults: number;
}

interface ListFindingsResponse {
  readonly findingArns: [];
  readonly nextToken: string;
}

interface ListRulesPackagesRequest {
  readonly nextToken: string;
  readonly maxResults: number;
}

interface ListRulesPackagesResponse {
  readonly rulesPackageArns: [];
  readonly nextToken: string;
}

interface ListTagsForResourceRequest {
  readonly resourceArn: string;
}

interface ListTagsForResourceResponse {
  readonly tags: [];
}

interface NetworkInterface {
  readonly networkInterfaceId: string;
  readonly subnetId: string;
  readonly vpcId: string;
  readonly privateDnsName: string;
  readonly privateIpAddress: string;
  readonly privateIpAddresses: [];
  readonly publicDnsName: string;
  readonly publicIp: string;
  readonly ipv6Addresses: [];
  readonly securityGroups: [];
}

interface NoSuchEntityException {
  readonly message: string;
  readonly errorCode: string;
  readonly canRetry: boolean;
}

interface PreviewAgentsRequest {
  readonly previewAgentsArn: string;
  readonly nextToken: string;
  readonly maxResults: number;
}

interface PreviewAgentsResponse {
  readonly agentPreviews: [];
  readonly nextToken: string;
}

interface PreviewGenerationInProgressException {
  readonly message: string;
}

interface PrivateIp {
  readonly privateDnsName: string;
  readonly privateIpAddress: string;
}

interface RegisterCrossAccountAccessRoleRequest {
  readonly roleArn: string;
}

interface RemoveAttributesFromFindingsRequest {
  readonly findingArns: [];
  readonly attributeKeys: [];
}

interface RemoveAttributesFromFindingsResponse {
  readonly failedItems: {[key: string]: any};
}

interface ResourceGroup {
  readonly arn: string;
  readonly tags: [];
  readonly createdAt: Date;
}

interface ResourceGroupTag {
  readonly key: string;
  readonly value: string;
}

interface RulesPackage {
  readonly arn: string;
  readonly name: string;
  readonly version: string;
  readonly provider: string;
  readonly description: string;
}

interface Scope {
  readonly key: string;
  readonly value: string;
}

interface SecurityGroup {
  readonly groupName: string;
  readonly groupId: string;
}

interface ServiceTemporarilyUnavailableException {
  readonly message: string;
  readonly canRetry: boolean;
}

interface SetTagsForResourceRequest {
  readonly resourceArn: string;
  readonly tags: [];
}

interface StartAssessmentRunRequest {
  readonly assessmentTemplateArn: string;
  readonly assessmentRunName: string;
}

interface StartAssessmentRunResponse {
  readonly assessmentRunArn: string;
}

interface StopAssessmentRunRequest {
  readonly assessmentRunArn: string;
  readonly stopAction: string;
}

interface SubscribeToEventRequest {
  readonly resourceArn: string;
  readonly event: string;
  readonly topicArn: string;
}

interface Subscription {
  readonly resourceArn: string;
  readonly topicArn: string;
  readonly eventSubscriptions: [];
}

interface Tag {
  readonly key: string;
  readonly value: string;
}

interface TelemetryMetadata {
  readonly messageType: string;
  readonly count: number;
  readonly dataSize: number;
}

interface TimestampRange {
  readonly beginDate: Date;
  readonly endDate: Date;
}

interface UnsubscribeFromEventRequest {
  readonly resourceArn: string;
  readonly event: string;
  readonly topicArn: string;
}

interface UnsupportedFeatureException {
  readonly message: string;
  readonly canRetry: boolean;
}

interface UpdateAssessmentTargetRequest {
  readonly assessmentTargetArn: string;
  readonly assessmentTargetName: string;
  readonly resourceGroupArn: string;
}

