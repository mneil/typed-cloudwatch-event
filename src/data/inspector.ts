/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AddAttributesToFindings {
  readonly findingArns: [];
  readonly attributes: [];
}

export interface CreateAssessmentTarget {
  readonly assessmentTargetName: string;
  readonly resourceGroupArn?: string;
}

export interface CreateAssessmentTemplate {
  readonly assessmentTargetArn: string;
  readonly assessmentTemplateName: string;
  readonly durationInSeconds: number;
  readonly rulesPackageArns: [];
  readonly userAttributesForFindings?: [];
}

export interface CreateExclusionsPreview {
  readonly assessmentTemplateArn: string;
}

export interface CreateResourceGroup {
  readonly resourceGroupTags: [];
}

export interface DeleteAssessmentRun {
  readonly assessmentRunArn: string;
}

export interface DeleteAssessmentTarget {
  readonly assessmentTargetArn: string;
}

export interface DeleteAssessmentTemplate {
  readonly assessmentTemplateArn: string;
}

export interface DescribeAssessmentRuns {
  readonly assessmentRunArns: [];
}

export interface DescribeAssessmentTargets {
  readonly assessmentTargetArns: [];
}

export interface DescribeAssessmentTemplates {
  readonly assessmentTemplateArns: [];
}

export interface DescribeExclusions {
  readonly exclusionArns: [];
  readonly locale?: string;
}

export interface DescribeFindings {
  readonly findingArns: [];
  readonly locale?: string;
}

export interface DescribeResourceGroups {
  readonly resourceGroupArns: [];
}

export interface DescribeRulesPackages {
  readonly rulesPackageArns: [];
  readonly locale?: string;
}

export interface GetAssessmentReport {
  readonly assessmentRunArn: string;
  readonly reportFileFormat: string;
  readonly reportType: string;
}

export interface GetExclusionsPreview {
  readonly assessmentTemplateArn: string;
  readonly previewToken: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly locale?: string;
}

export interface GetTelemetryMetadata {
  readonly assessmentRunArn: string;
}

export interface ListAssessmentRunAgents {
  readonly assessmentRunArn: string;
  readonly filter?: AgentFilter;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListAssessmentRuns {
  readonly assessmentTemplateArns?: [];
  readonly filter?: AssessmentRunFilter;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListAssessmentTargets {
  readonly filter?: AssessmentTargetFilter;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListAssessmentTemplates {
  readonly assessmentTargetArns?: [];
  readonly filter?: AssessmentTemplateFilter;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListEventSubscriptions {
  readonly resourceArn?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListExclusions {
  readonly assessmentRunArn: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListFindings {
  readonly assessmentRunArns?: [];
  readonly filter?: FindingFilter;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListRulesPackages {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListTagsForResource {
  readonly resourceArn: string;
}

export interface PreviewAgents {
  readonly previewAgentsArn: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface RegisterCrossAccountAccessRole {
  readonly roleArn: string;
}

export interface RemoveAttributesFromFindings {
  readonly findingArns: [];
  readonly attributeKeys: [];
}

export interface SetTagsForResource {
  readonly resourceArn: string;
  readonly tags?: [];
}

export interface StartAssessmentRun {
  readonly assessmentTemplateArn: string;
  readonly assessmentRunName?: string;
}

export interface StopAssessmentRun {
  readonly assessmentRunArn: string;
  readonly stopAction?: string;
}

export interface SubscribeToEvent {
  readonly resourceArn: string;
  readonly event: string;
  readonly topicArn: string;
}

export interface UnsubscribeFromEvent {
  readonly resourceArn: string;
  readonly event: string;
  readonly topicArn: string;
}

export interface UpdateAssessmentTarget {
  readonly assessmentTargetArn: string;
  readonly assessmentTargetName: string;
  readonly resourceGroupArn?: string;
}

export interface AccessDeniedException {
  readonly message: string;
  readonly errorCode: string;
  readonly canRetry: boolean;
}

export interface AddAttributesToFindingsRequest {
  readonly findingArns: [];
  readonly attributes: [];
}

export interface AddAttributesToFindingsResponse {
  readonly failedItems: {[key: string]: any};
}

export interface AgentAlreadyRunningAssessment {
  readonly agentId: string;
  readonly assessmentRunArn: string;
}

export interface AgentFilter {
  readonly agentHealths: [];
  readonly agentHealthCodes: [];
}

export interface AgentPreview {
  readonly hostname?: string;
  readonly agentId: string;
  readonly autoScalingGroup?: string;
  readonly agentHealth?: string;
  readonly agentVersion?: string;
  readonly operatingSystem?: string;
  readonly kernelVersion?: string;
  readonly ipv4Address?: string;
}

export interface AgentsAlreadyRunningAssessmentException {
  readonly message: string;
  readonly agents: [];
  readonly agentsTruncated: boolean;
  readonly canRetry: boolean;
}

export interface AssessmentRun {
  readonly arn: string;
  readonly name: string;
  readonly assessmentTemplateArn: string;
  readonly state: string;
  readonly durationInSeconds: number;
  readonly rulesPackageArns: [];
  readonly userAttributesForFindings: [];
  readonly createdAt: Date;
  readonly startedAt?: Date;
  readonly completedAt?: Date;
  readonly stateChangedAt: Date;
  readonly dataCollected: boolean;
  readonly stateChanges: [];
  readonly notifications: [];
  readonly findingCounts: {[key: string]: any};
}

export interface AssessmentRunAgent {
  readonly agentId: string;
  readonly assessmentRunArn: string;
  readonly agentHealth: string;
  readonly agentHealthCode: string;
  readonly agentHealthDetails?: string;
  readonly autoScalingGroup?: string;
  readonly telemetryMetadata: [];
}

export interface AssessmentRunFilter {
  readonly namePattern?: string;
  readonly states?: [];
  readonly durationRange?: DurationRange;
  readonly rulesPackageArns?: [];
  readonly startTimeRange?: TimestampRange;
  readonly completionTimeRange?: TimestampRange;
  readonly stateChangeTimeRange?: TimestampRange;
}

export interface AssessmentRunInProgressException {
  readonly message: string;
  readonly assessmentRunArns: [];
  readonly assessmentRunArnsTruncated: boolean;
  readonly canRetry: boolean;
}

export interface AssessmentRunNotification {
  readonly date: Date;
  readonly event: string;
  readonly message?: string;
  readonly error: boolean;
  readonly snsTopicArn?: string;
  readonly snsPublishStatusCode?: string;
}

export interface AssessmentRunStateChange {
  readonly stateChangedAt: Date;
  readonly state: string;
}

export interface AssessmentTarget {
  readonly arn: string;
  readonly name: string;
  readonly resourceGroupArn?: string;
  readonly createdAt: Date;
  readonly updatedAt: Date;
}

export interface AssessmentTargetFilter {
  readonly assessmentTargetNamePattern?: string;
}

export interface AssessmentTemplate {
  readonly arn: string;
  readonly name: string;
  readonly assessmentTargetArn: string;
  readonly durationInSeconds: number;
  readonly rulesPackageArns: [];
  readonly userAttributesForFindings: [];
  readonly lastAssessmentRunArn?: string;
  readonly assessmentRunCount: number;
  readonly createdAt: Date;
}

export interface AssessmentTemplateFilter {
  readonly namePattern?: string;
  readonly durationRange?: DurationRange;
  readonly rulesPackageArns?: [];
}

export interface AssetAttributes {
  readonly schemaVersion: number;
  readonly agentId?: string;
  readonly autoScalingGroup?: string;
  readonly amiId?: string;
  readonly hostname?: string;
  readonly ipv4Addresses?: [];
  readonly tags?: [];
  readonly networkInterfaces?: [];
}

export interface Attribute {
  readonly key: string;
  readonly value?: string;
}

export interface CreateAssessmentTargetRequest {
  readonly assessmentTargetName: string;
  readonly resourceGroupArn?: string;
}

export interface CreateAssessmentTargetResponse {
  readonly assessmentTargetArn: string;
}

export interface CreateAssessmentTemplateRequest {
  readonly assessmentTargetArn: string;
  readonly assessmentTemplateName: string;
  readonly durationInSeconds: number;
  readonly rulesPackageArns: [];
  readonly userAttributesForFindings?: [];
}

export interface CreateAssessmentTemplateResponse {
  readonly assessmentTemplateArn: string;
}

export interface CreateExclusionsPreviewRequest {
  readonly assessmentTemplateArn: string;
}

export interface CreateExclusionsPreviewResponse {
  readonly previewToken: string;
}

export interface CreateResourceGroupRequest {
  readonly resourceGroupTags: [];
}

export interface CreateResourceGroupResponse {
  readonly resourceGroupArn: string;
}

export interface DeleteAssessmentRunRequest {
  readonly assessmentRunArn: string;
}

export interface DeleteAssessmentTargetRequest {
  readonly assessmentTargetArn: string;
}

export interface DeleteAssessmentTemplateRequest {
  readonly assessmentTemplateArn: string;
}

export interface DescribeAssessmentRunsRequest {
  readonly assessmentRunArns: [];
}

export interface DescribeAssessmentRunsResponse {
  readonly assessmentRuns: [];
  readonly failedItems: {[key: string]: any};
}

export interface DescribeAssessmentTargetsRequest {
  readonly assessmentTargetArns: [];
}

export interface DescribeAssessmentTargetsResponse {
  readonly assessmentTargets: [];
  readonly failedItems: {[key: string]: any};
}

export interface DescribeAssessmentTemplatesRequest {
  readonly assessmentTemplateArns: [];
}

export interface DescribeAssessmentTemplatesResponse {
  readonly assessmentTemplates: [];
  readonly failedItems: {[key: string]: any};
}

export interface DescribeCrossAccountAccessRoleResponse {
  readonly roleArn: string;
  readonly valid: boolean;
  readonly registeredAt: Date;
}

export interface DescribeExclusionsRequest {
  readonly exclusionArns: [];
  readonly locale?: string;
}

export interface DescribeExclusionsResponse {
  readonly exclusions: {[key: string]: any};
  readonly failedItems: {[key: string]: any};
}

export interface DescribeFindingsRequest {
  readonly findingArns: [];
  readonly locale?: string;
}

export interface DescribeFindingsResponse {
  readonly findings: [];
  readonly failedItems: {[key: string]: any};
}

export interface DescribeResourceGroupsRequest {
  readonly resourceGroupArns: [];
}

export interface DescribeResourceGroupsResponse {
  readonly resourceGroups: [];
  readonly failedItems: {[key: string]: any};
}

export interface DescribeRulesPackagesRequest {
  readonly rulesPackageArns: [];
  readonly locale?: string;
}

export interface DescribeRulesPackagesResponse {
  readonly rulesPackages: [];
  readonly failedItems: {[key: string]: any};
}

export interface DurationRange {
  readonly minSeconds?: number;
  readonly maxSeconds?: number;
}

export interface EventSubscription {
  readonly event: string;
  readonly subscribedAt: Date;
}

export interface Exclusion {
  readonly arn: string;
  readonly title: string;
  readonly description: string;
  readonly recommendation: string;
  readonly scopes: [];
  readonly attributes?: [];
}

export interface ExclusionPreview {
  readonly title: string;
  readonly description: string;
  readonly recommendation: string;
  readonly scopes: [];
  readonly attributes?: [];
}

export interface FailedItemDetails {
  readonly failureCode: string;
  readonly retryable: boolean;
}

export interface Finding {
  readonly arn: string;
  readonly schemaVersion?: number;
  readonly service?: string;
  readonly serviceAttributes?: InspectorServiceAttributes;
  readonly assetType?: string;
  readonly assetAttributes?: AssetAttributes;
  readonly id?: string;
  readonly title?: string;
  readonly description?: string;
  readonly recommendation?: string;
  readonly severity?: string;
  readonly numericSeverity?: unknown;
  readonly confidence?: number;
  readonly indicatorOfCompromise?: boolean;
  readonly attributes: [];
  readonly userAttributes: [];
  readonly createdAt: Date;
  readonly updatedAt: Date;
}

export interface FindingFilter {
  readonly agentIds?: [];
  readonly autoScalingGroups?: [];
  readonly ruleNames?: [];
  readonly severities?: [];
  readonly rulesPackageArns?: [];
  readonly attributes?: [];
  readonly userAttributes?: [];
  readonly creationTimeRange?: TimestampRange;
}

export interface GetAssessmentReportRequest {
  readonly assessmentRunArn: string;
  readonly reportFileFormat: string;
  readonly reportType: string;
}

export interface GetAssessmentReportResponse {
  readonly status: string;
  readonly url?: string;
}

export interface GetExclusionsPreviewRequest {
  readonly assessmentTemplateArn: string;
  readonly previewToken: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly locale?: string;
}

export interface GetExclusionsPreviewResponse {
  readonly previewStatus: string;
  readonly exclusionPreviews?: [];
  readonly nextToken?: string;
}

export interface GetTelemetryMetadataRequest {
  readonly assessmentRunArn: string;
}

export interface GetTelemetryMetadataResponse {
  readonly telemetryMetadata: [];
}

export interface InspectorServiceAttributes {
  readonly schemaVersion: number;
  readonly assessmentRunArn?: string;
  readonly rulesPackageArn?: string;
}

export interface InternalException {
  readonly message: string;
  readonly canRetry: boolean;
}

export interface InvalidCrossAccountRoleException {
  readonly message: string;
  readonly errorCode: string;
  readonly canRetry: boolean;
}

export interface InvalidInputException {
  readonly message: string;
  readonly errorCode: string;
  readonly canRetry: boolean;
}

export interface LimitExceededException {
  readonly message: string;
  readonly errorCode: string;
  readonly canRetry: boolean;
}

export interface ListAssessmentRunAgentsRequest {
  readonly assessmentRunArn: string;
  readonly filter?: AgentFilter;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListAssessmentRunAgentsResponse {
  readonly assessmentRunAgents: [];
  readonly nextToken?: string;
}

export interface ListAssessmentRunsRequest {
  readonly assessmentTemplateArns?: [];
  readonly filter?: AssessmentRunFilter;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListAssessmentRunsResponse {
  readonly assessmentRunArns: [];
  readonly nextToken?: string;
}

export interface ListAssessmentTargetsRequest {
  readonly filter?: AssessmentTargetFilter;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListAssessmentTargetsResponse {
  readonly assessmentTargetArns: [];
  readonly nextToken?: string;
}

export interface ListAssessmentTemplatesRequest {
  readonly assessmentTargetArns?: [];
  readonly filter?: AssessmentTemplateFilter;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListAssessmentTemplatesResponse {
  readonly assessmentTemplateArns: [];
  readonly nextToken?: string;
}

export interface ListEventSubscriptionsRequest {
  readonly resourceArn?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListEventSubscriptionsResponse {
  readonly subscriptions: [];
  readonly nextToken?: string;
}

export interface ListExclusionsRequest {
  readonly assessmentRunArn: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListExclusionsResponse {
  readonly exclusionArns: [];
  readonly nextToken?: string;
}

export interface ListFindingsRequest {
  readonly assessmentRunArns?: [];
  readonly filter?: FindingFilter;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListFindingsResponse {
  readonly findingArns: [];
  readonly nextToken?: string;
}

export interface ListRulesPackagesRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListRulesPackagesResponse {
  readonly rulesPackageArns: [];
  readonly nextToken?: string;
}

export interface ListTagsForResourceRequest {
  readonly resourceArn: string;
}

export interface ListTagsForResourceResponse {
  readonly tags: [];
}

export interface NetworkInterface {
  readonly networkInterfaceId?: string;
  readonly subnetId?: string;
  readonly vpcId?: string;
  readonly privateDnsName?: string;
  readonly privateIpAddress?: string;
  readonly privateIpAddresses?: [];
  readonly publicDnsName?: string;
  readonly publicIp?: string;
  readonly ipv6Addresses?: [];
  readonly securityGroups?: [];
}

export interface NoSuchEntityException {
  readonly message: string;
  readonly errorCode: string;
  readonly canRetry: boolean;
}

export interface PreviewAgentsRequest {
  readonly previewAgentsArn: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface PreviewAgentsResponse {
  readonly agentPreviews: [];
  readonly nextToken?: string;
}

export interface PreviewGenerationInProgressException {
  readonly message: string;
}

export interface PrivateIp {
  readonly privateDnsName?: string;
  readonly privateIpAddress?: string;
}

export interface RegisterCrossAccountAccessRoleRequest {
  readonly roleArn: string;
}

export interface RemoveAttributesFromFindingsRequest {
  readonly findingArns: [];
  readonly attributeKeys: [];
}

export interface RemoveAttributesFromFindingsResponse {
  readonly failedItems: {[key: string]: any};
}

export interface ResourceGroup {
  readonly arn: string;
  readonly tags: [];
  readonly createdAt: Date;
}

export interface ResourceGroupTag {
  readonly key: string;
  readonly value?: string;
}

export interface RulesPackage {
  readonly arn: string;
  readonly name: string;
  readonly version: string;
  readonly provider: string;
  readonly description?: string;
}

export interface Scope {
  readonly key?: string;
  readonly value?: string;
}

export interface SecurityGroup {
  readonly groupName?: string;
  readonly groupId?: string;
}

export interface ServiceTemporarilyUnavailableException {
  readonly message: string;
  readonly canRetry: boolean;
}

export interface SetTagsForResourceRequest {
  readonly resourceArn: string;
  readonly tags?: [];
}

export interface StartAssessmentRunRequest {
  readonly assessmentTemplateArn: string;
  readonly assessmentRunName?: string;
}

export interface StartAssessmentRunResponse {
  readonly assessmentRunArn: string;
}

export interface StopAssessmentRunRequest {
  readonly assessmentRunArn: string;
  readonly stopAction?: string;
}

export interface SubscribeToEventRequest {
  readonly resourceArn: string;
  readonly event: string;
  readonly topicArn: string;
}

export interface Subscription {
  readonly resourceArn: string;
  readonly topicArn: string;
  readonly eventSubscriptions: [];
}

export interface Tag {
  readonly key: string;
  readonly value?: string;
}

export interface TelemetryMetadata {
  readonly messageType: string;
  readonly count: number;
  readonly dataSize?: number;
}

export interface TimestampRange {
  readonly beginDate?: Date;
  readonly endDate?: Date;
}

export interface UnsubscribeFromEventRequest {
  readonly resourceArn: string;
  readonly event: string;
  readonly topicArn: string;
}

export interface UnsupportedFeatureException {
  readonly message: string;
  readonly canRetry: boolean;
}

export interface UpdateAssessmentTargetRequest {
  readonly assessmentTargetArn: string;
  readonly assessmentTargetName: string;
  readonly resourceGroupArn?: string;
}


