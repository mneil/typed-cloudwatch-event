/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AcceptReservedNodeExchange {
  readonly ReservedNodeId: string;
  readonly TargetReservedNodeOfferingId: string;
}
export interface AddPartner {
  readonly AccountId: string;
  readonly ClusterIdentifier: string;
  readonly DatabaseName: string;
  readonly PartnerName: string;
}
export interface AssociateDataShareConsumer {
  readonly DataShareArn: string;
  readonly AssociateEntireAccount?: boolean;
  readonly ConsumerArn?: string;
}
export interface AuthorizeClusterSecurityGroupIngress {
  readonly ClusterSecurityGroupName: string;
  readonly CIDRIP?: string;
  readonly EC2SecurityGroupName?: string;
  readonly EC2SecurityGroupOwnerId?: string;
}
export interface AuthorizeDataShare {
  readonly DataShareArn: string;
  readonly ConsumerIdentifier: string;
}
export interface AuthorizeEndpointAccess {
  readonly ClusterIdentifier?: string;
  readonly Account: string;
  readonly VpcIds?: [];
}
export interface AuthorizeSnapshotAccess {
  readonly SnapshotIdentifier: string;
  readonly SnapshotClusterIdentifier?: string;
  readonly AccountWithRestoreAccess: string;
}
export interface BatchDeleteClusterSnapshots {
  readonly Identifiers: [];
}
export interface BatchModifyClusterSnapshots {
  readonly SnapshotIdentifierList: [];
  readonly ManualSnapshotRetentionPeriod?: number;
  readonly Force?: boolean;
}
export interface CancelResize {
  readonly ClusterIdentifier: string;
}
export interface CopyClusterSnapshot {
  readonly SourceSnapshotIdentifier: string;
  readonly SourceSnapshotClusterIdentifier?: string;
  readonly TargetSnapshotIdentifier: string;
  readonly ManualSnapshotRetentionPeriod?: number;
}
export interface CreateAuthenticationProfile {
  readonly AuthenticationProfileName: string;
  readonly AuthenticationProfileContent: string;
}
export interface CreateCluster {
  readonly DBName?: string;
  readonly ClusterIdentifier: string;
  readonly ClusterType?: string;
  readonly NodeType: string;
  readonly MasterUsername: string;
  readonly MasterUserPassword: string;
  readonly ClusterSecurityGroups?: [];
  readonly VpcSecurityGroupIds?: [];
  readonly ClusterSubnetGroupName?: string;
  readonly AvailabilityZone?: string;
  readonly PreferredMaintenanceWindow?: string;
  readonly ClusterParameterGroupName?: string;
  readonly AutomatedSnapshotRetentionPeriod?: number;
  readonly ManualSnapshotRetentionPeriod?: number;
  readonly Port?: number;
  readonly ClusterVersion?: string;
  readonly AllowVersionUpgrade?: boolean;
  readonly NumberOfNodes?: number;
  readonly PubliclyAccessible?: boolean;
  readonly Encrypted?: boolean;
  readonly HsmClientCertificateIdentifier?: string;
  readonly HsmConfigurationIdentifier?: string;
  readonly ElasticIp?: string;
  readonly Tags?: [];
  readonly KmsKeyId?: string;
  readonly EnhancedVpcRouting?: boolean;
  readonly AdditionalInfo?: string;
  readonly IamRoles?: [];
  readonly MaintenanceTrackName?: string;
  readonly SnapshotScheduleIdentifier?: string;
  readonly AvailabilityZoneRelocation?: boolean;
  readonly AquaConfigurationStatus?: string;
  readonly DefaultIamRoleArn?: string;
}
export interface CreateClusterParameterGroup {
  readonly ParameterGroupName: string;
  readonly ParameterGroupFamily: string;
  readonly Description: string;
  readonly Tags?: [];
}
export interface CreateClusterSecurityGroup {
  readonly ClusterSecurityGroupName: string;
  readonly Description: string;
  readonly Tags?: [];
}
export interface CreateClusterSnapshot {
  readonly SnapshotIdentifier: string;
  readonly ClusterIdentifier: string;
  readonly ManualSnapshotRetentionPeriod?: number;
  readonly Tags?: [];
}
export interface CreateClusterSubnetGroup {
  readonly ClusterSubnetGroupName: string;
  readonly Description: string;
  readonly SubnetIds: [];
  readonly Tags?: [];
}
export interface CreateEndpointAccess {
  readonly ClusterIdentifier?: string;
  readonly ResourceOwner?: string;
  readonly EndpointName: string;
  readonly SubnetGroupName: string;
  readonly VpcSecurityGroupIds?: [];
}
export interface CreateEventSubscription {
  readonly SubscriptionName: string;
  readonly SnsTopicArn: string;
  readonly SourceType?: string;
  readonly SourceIds?: [];
  readonly EventCategories?: [];
  readonly Severity?: string;
  readonly Enabled?: boolean;
  readonly Tags?: [];
}
export interface CreateHsmClientCertificate {
  readonly HsmClientCertificateIdentifier: string;
  readonly Tags?: [];
}
export interface CreateHsmConfiguration {
  readonly HsmConfigurationIdentifier: string;
  readonly Description: string;
  readonly HsmIpAddress: string;
  readonly HsmPartitionName: string;
  readonly HsmPartitionPassword: string;
  readonly HsmServerPublicCertificate: string;
  readonly Tags?: [];
}
export interface CreateScheduledAction {
  readonly ScheduledActionName: string;
  readonly TargetAction: ScheduledActionType;
  readonly Schedule: string;
  readonly IamRole: string;
  readonly ScheduledActionDescription?: string;
  readonly StartTime?: Date;
  readonly EndTime?: Date;
  readonly Enable?: boolean;
}
export interface CreateSnapshotCopyGrant {
  readonly SnapshotCopyGrantName: string;
  readonly KmsKeyId?: string;
  readonly Tags?: [];
}
export interface CreateSnapshotSchedule {
  readonly ScheduleDefinitions?: [];
  readonly ScheduleIdentifier?: string;
  readonly ScheduleDescription?: string;
  readonly Tags?: [];
  readonly DryRun?: boolean;
  readonly NextInvocations?: number;
}
export interface CreateTags {
  readonly ResourceName: string;
  readonly Tags: [];
}
export interface CreateUsageLimit {
  readonly ClusterIdentifier: string;
  readonly FeatureType: string;
  readonly LimitType: string;
  readonly Amount: number;
  readonly Period?: string;
  readonly BreachAction?: string;
  readonly Tags?: [];
}
export interface DeauthorizeDataShare {
  readonly DataShareArn: string;
  readonly ConsumerIdentifier: string;
}
export interface DeleteAuthenticationProfile {
  readonly AuthenticationProfileName: string;
}
export interface DeleteCluster {
  readonly ClusterIdentifier: string;
  readonly SkipFinalClusterSnapshot?: boolean;
  readonly FinalClusterSnapshotIdentifier?: string;
  readonly FinalClusterSnapshotRetentionPeriod?: number;
}
export interface DeleteClusterParameterGroup {
  readonly ParameterGroupName: string;
}
export interface DeleteClusterSecurityGroup {
  readonly ClusterSecurityGroupName: string;
}
export interface DeleteClusterSnapshot {
  readonly SnapshotIdentifier: string;
  readonly SnapshotClusterIdentifier?: string;
}
export interface DeleteClusterSubnetGroup {
  readonly ClusterSubnetGroupName: string;
}
export interface DeleteEndpointAccess {
  readonly EndpointName: string;
}
export interface DeleteEventSubscription {
  readonly SubscriptionName: string;
}
export interface DeleteHsmClientCertificate {
  readonly HsmClientCertificateIdentifier: string;
}
export interface DeleteHsmConfiguration {
  readonly HsmConfigurationIdentifier: string;
}
export interface DeletePartner {
  readonly AccountId: string;
  readonly ClusterIdentifier: string;
  readonly DatabaseName: string;
  readonly PartnerName: string;
}
export interface DeleteScheduledAction {
  readonly ScheduledActionName: string;
}
export interface DeleteSnapshotCopyGrant {
  readonly SnapshotCopyGrantName: string;
}
export interface DeleteSnapshotSchedule {
  readonly ScheduleIdentifier: string;
}
export interface DeleteTags {
  readonly ResourceName: string;
  readonly TagKeys: [];
}
export interface DeleteUsageLimit {
  readonly UsageLimitId: string;
}
export interface DescribeAccountAttributes {
  readonly AttributeNames?: [];
}
export interface DescribeAuthenticationProfiles {
  readonly AuthenticationProfileName?: string;
}
export interface DescribeClusterDbRevisions {
  readonly ClusterIdentifier?: string;
  readonly MaxRecords?: number;
  readonly Marker?: string;
}
export interface DescribeClusterParameterGroups {
  readonly ParameterGroupName?: string;
  readonly MaxRecords?: number;
  readonly Marker?: string;
  readonly TagKeys?: [];
  readonly TagValues?: [];
}
export interface DescribeClusterParameters {
  readonly ParameterGroupName: string;
  readonly Source?: string;
  readonly MaxRecords?: number;
  readonly Marker?: string;
}
export interface DescribeClusterSecurityGroups {
  readonly ClusterSecurityGroupName?: string;
  readonly MaxRecords?: number;
  readonly Marker?: string;
  readonly TagKeys?: [];
  readonly TagValues?: [];
}
export interface DescribeClusterSnapshots {
  readonly ClusterIdentifier?: string;
  readonly SnapshotIdentifier?: string;
  readonly SnapshotType?: string;
  readonly StartTime?: Date;
  readonly EndTime?: Date;
  readonly MaxRecords?: number;
  readonly Marker?: string;
  readonly OwnerAccount?: string;
  readonly TagKeys?: [];
  readonly TagValues?: [];
  readonly ClusterExists?: boolean;
  readonly SortingEntities?: [];
}
export interface DescribeClusterSubnetGroups {
  readonly ClusterSubnetGroupName?: string;
  readonly MaxRecords?: number;
  readonly Marker?: string;
  readonly TagKeys?: [];
  readonly TagValues?: [];
}
export interface DescribeClusterTracks {
  readonly MaintenanceTrackName?: string;
  readonly MaxRecords?: number;
  readonly Marker?: string;
}
export interface DescribeClusterVersions {
  readonly ClusterVersion?: string;
  readonly ClusterParameterGroupFamily?: string;
  readonly MaxRecords?: number;
  readonly Marker?: string;
}
export interface DescribeClusters {
  readonly ClusterIdentifier?: string;
  readonly MaxRecords?: number;
  readonly Marker?: string;
  readonly TagKeys?: [];
  readonly TagValues?: [];
}
export interface DescribeDataShares {
  readonly DataShareArn?: string;
  readonly MaxRecords?: number;
  readonly Marker?: string;
}
export interface DescribeDataSharesForConsumer {
  readonly ConsumerArn?: string;
  readonly Status?: string;
  readonly MaxRecords?: number;
  readonly Marker?: string;
}
export interface DescribeDataSharesForProducer {
  readonly ProducerArn?: string;
  readonly Status?: string;
  readonly MaxRecords?: number;
  readonly Marker?: string;
}
export interface DescribeDefaultClusterParameters {
  readonly ParameterGroupFamily: string;
  readonly MaxRecords?: number;
  readonly Marker?: string;
}
export interface DescribeEndpointAccess {
  readonly ClusterIdentifier?: string;
  readonly ResourceOwner?: string;
  readonly EndpointName?: string;
  readonly VpcId?: string;
  readonly MaxRecords?: number;
  readonly Marker?: string;
}
export interface DescribeEndpointAuthorization {
  readonly ClusterIdentifier?: string;
  readonly Account?: string;
  readonly Grantee?: boolean;
  readonly MaxRecords?: number;
  readonly Marker?: string;
}
export interface DescribeEventCategories {
  readonly SourceType?: string;
}
export interface DescribeEventSubscriptions {
  readonly SubscriptionName?: string;
  readonly MaxRecords?: number;
  readonly Marker?: string;
  readonly TagKeys?: [];
  readonly TagValues?: [];
}
export interface DescribeEvents {
  readonly SourceIdentifier?: string;
  readonly SourceType?: string;
  readonly StartTime?: Date;
  readonly EndTime?: Date;
  readonly Duration?: number;
  readonly MaxRecords?: number;
  readonly Marker?: string;
}
export interface DescribeHsmClientCertificates {
  readonly HsmClientCertificateIdentifier?: string;
  readonly MaxRecords?: number;
  readonly Marker?: string;
  readonly TagKeys?: [];
  readonly TagValues?: [];
}
export interface DescribeHsmConfigurations {
  readonly HsmConfigurationIdentifier?: string;
  readonly MaxRecords?: number;
  readonly Marker?: string;
  readonly TagKeys?: [];
  readonly TagValues?: [];
}
export interface DescribeLoggingStatus {
  readonly ClusterIdentifier: string;
}
export interface DescribeNodeConfigurationOptions {
  readonly ActionType: string;
  readonly ClusterIdentifier?: string;
  readonly SnapshotIdentifier?: string;
  readonly OwnerAccount?: string;
  readonly Filters?: [];
  readonly Marker?: string;
  readonly MaxRecords?: number;
}
export interface DescribeOrderableClusterOptions {
  readonly ClusterVersion?: string;
  readonly NodeType?: string;
  readonly MaxRecords?: number;
  readonly Marker?: string;
}
export interface DescribePartners {
  readonly AccountId: string;
  readonly ClusterIdentifier: string;
  readonly DatabaseName?: string;
  readonly PartnerName?: string;
}
export interface DescribeReservedNodeExchangeStatus {
  readonly ReservedNodeId?: string;
  readonly ReservedNodeExchangeRequestId?: string;
  readonly MaxRecords?: number;
  readonly Marker?: string;
}
export interface DescribeReservedNodeOfferings {
  readonly ReservedNodeOfferingId?: string;
  readonly MaxRecords?: number;
  readonly Marker?: string;
}
export interface DescribeReservedNodes {
  readonly ReservedNodeId?: string;
  readonly MaxRecords?: number;
  readonly Marker?: string;
}
export interface DescribeResize {
  readonly ClusterIdentifier: string;
}
export interface DescribeScheduledActions {
  readonly ScheduledActionName?: string;
  readonly TargetActionType?: string;
  readonly StartTime?: Date;
  readonly EndTime?: Date;
  readonly Active?: boolean;
  readonly Filters?: [];
  readonly Marker?: string;
  readonly MaxRecords?: number;
}
export interface DescribeSnapshotCopyGrants {
  readonly SnapshotCopyGrantName?: string;
  readonly MaxRecords?: number;
  readonly Marker?: string;
  readonly TagKeys?: [];
  readonly TagValues?: [];
}
export interface DescribeSnapshotSchedules {
  readonly ClusterIdentifier?: string;
  readonly ScheduleIdentifier?: string;
  readonly TagKeys?: [];
  readonly TagValues?: [];
  readonly Marker?: string;
  readonly MaxRecords?: number;
}
export interface DescribeTableRestoreStatus {
  readonly ClusterIdentifier?: string;
  readonly TableRestoreRequestId?: string;
  readonly MaxRecords?: number;
  readonly Marker?: string;
}
export interface DescribeTags {
  readonly ResourceName?: string;
  readonly ResourceType?: string;
  readonly MaxRecords?: number;
  readonly Marker?: string;
  readonly TagKeys?: [];
  readonly TagValues?: [];
}
export interface DescribeUsageLimits {
  readonly UsageLimitId?: string;
  readonly ClusterIdentifier?: string;
  readonly FeatureType?: string;
  readonly MaxRecords?: number;
  readonly Marker?: string;
  readonly TagKeys?: [];
  readonly TagValues?: [];
}
export interface DisableLogging {
  readonly ClusterIdentifier: string;
}
export interface DisableSnapshotCopy {
  readonly ClusterIdentifier: string;
}
export interface DisassociateDataShareConsumer {
  readonly DataShareArn: string;
  readonly DisassociateEntireAccount?: boolean;
  readonly ConsumerArn?: string;
}
export interface EnableLogging {
  readonly ClusterIdentifier: string;
  readonly BucketName: string;
  readonly S3KeyPrefix?: string;
}
export interface EnableSnapshotCopy {
  readonly ClusterIdentifier: string;
  readonly DestinationRegion: string;
  readonly RetentionPeriod?: number;
  readonly SnapshotCopyGrantName?: string;
  readonly ManualSnapshotRetentionPeriod?: number;
}
export interface GetClusterCredentials {
  readonly DbUser: string;
  readonly DbName?: string;
  readonly ClusterIdentifier: string;
  readonly DurationSeconds?: number;
  readonly AutoCreate?: boolean;
  readonly DbGroups?: [];
}
export interface GetReservedNodeExchangeConfigurationOptions {
  readonly ActionType: string;
  readonly ClusterIdentifier?: string;
  readonly SnapshotIdentifier?: string;
  readonly MaxRecords?: number;
  readonly Marker?: string;
}
export interface GetReservedNodeExchangeOfferings {
  readonly ReservedNodeId: string;
  readonly MaxRecords?: number;
  readonly Marker?: string;
}
export interface ModifyAquaConfiguration {
  readonly ClusterIdentifier: string;
  readonly AquaConfigurationStatus?: string;
}
export interface ModifyAuthenticationProfile {
  readonly AuthenticationProfileName: string;
  readonly AuthenticationProfileContent: string;
}
export interface ModifyCluster {
  readonly ClusterIdentifier: string;
  readonly ClusterType?: string;
  readonly NodeType?: string;
  readonly NumberOfNodes?: number;
  readonly ClusterSecurityGroups?: [];
  readonly VpcSecurityGroupIds?: [];
  readonly MasterUserPassword?: string;
  readonly ClusterParameterGroupName?: string;
  readonly AutomatedSnapshotRetentionPeriod?: number;
  readonly ManualSnapshotRetentionPeriod?: number;
  readonly PreferredMaintenanceWindow?: string;
  readonly ClusterVersion?: string;
  readonly AllowVersionUpgrade?: boolean;
  readonly HsmClientCertificateIdentifier?: string;
  readonly HsmConfigurationIdentifier?: string;
  readonly NewClusterIdentifier?: string;
  readonly PubliclyAccessible?: boolean;
  readonly ElasticIp?: string;
  readonly EnhancedVpcRouting?: boolean;
  readonly MaintenanceTrackName?: string;
  readonly Encrypted?: boolean;
  readonly KmsKeyId?: string;
  readonly AvailabilityZoneRelocation?: boolean;
  readonly AvailabilityZone?: string;
  readonly Port?: number;
}
export interface ModifyClusterDbRevision {
  readonly ClusterIdentifier: string;
  readonly RevisionTarget: string;
}
export interface ModifyClusterIamRoles {
  readonly ClusterIdentifier: string;
  readonly AddIamRoles?: [];
  readonly RemoveIamRoles?: [];
  readonly DefaultIamRoleArn?: string;
}
export interface ModifyClusterMaintenance {
  readonly ClusterIdentifier: string;
  readonly DeferMaintenance?: boolean;
  readonly DeferMaintenanceIdentifier?: string;
  readonly DeferMaintenanceStartTime?: Date;
  readonly DeferMaintenanceEndTime?: Date;
  readonly DeferMaintenanceDuration?: number;
}
export interface ModifyClusterParameterGroup {
  readonly ParameterGroupName: string;
  readonly Parameters: [];
}
export interface ModifyClusterSnapshot {
  readonly SnapshotIdentifier: string;
  readonly ManualSnapshotRetentionPeriod?: number;
  readonly Force?: boolean;
}
export interface ModifyClusterSnapshotSchedule {
  readonly ClusterIdentifier: string;
  readonly ScheduleIdentifier?: string;
  readonly DisassociateSchedule?: boolean;
}
export interface ModifyClusterSubnetGroup {
  readonly ClusterSubnetGroupName: string;
  readonly Description?: string;
  readonly SubnetIds: [];
}
export interface ModifyEndpointAccess {
  readonly EndpointName: string;
  readonly VpcSecurityGroupIds?: [];
}
export interface ModifyEventSubscription {
  readonly SubscriptionName: string;
  readonly SnsTopicArn?: string;
  readonly SourceType?: string;
  readonly SourceIds?: [];
  readonly EventCategories?: [];
  readonly Severity?: string;
  readonly Enabled?: boolean;
}
export interface ModifyScheduledAction {
  readonly ScheduledActionName: string;
  readonly TargetAction?: ScheduledActionType;
  readonly Schedule?: string;
  readonly IamRole?: string;
  readonly ScheduledActionDescription?: string;
  readonly StartTime?: Date;
  readonly EndTime?: Date;
  readonly Enable?: boolean;
}
export interface ModifySnapshotCopyRetentionPeriod {
  readonly ClusterIdentifier: string;
  readonly RetentionPeriod: number;
  readonly Manual?: boolean;
}
export interface ModifySnapshotSchedule {
  readonly ScheduleIdentifier: string;
  readonly ScheduleDefinitions: [];
}
export interface ModifyUsageLimit {
  readonly UsageLimitId: string;
  readonly Amount?: number;
  readonly BreachAction?: string;
}
export interface PauseCluster {
  readonly ClusterIdentifier: string;
}
export interface PurchaseReservedNodeOffering {
  readonly ReservedNodeOfferingId: string;
  readonly NodeCount?: number;
}
export interface RebootCluster {
  readonly ClusterIdentifier: string;
}
export interface RejectDataShare {
  readonly DataShareArn: string;
}
export interface ResetClusterParameterGroup {
  readonly ParameterGroupName: string;
  readonly ResetAllParameters?: boolean;
  readonly Parameters?: [];
}
export interface ResizeCluster {
  readonly ClusterIdentifier: string;
  readonly ClusterType?: string;
  readonly NodeType?: string;
  readonly NumberOfNodes?: number;
  readonly Classic?: boolean;
  readonly ReservedNodeId?: string;
  readonly TargetReservedNodeOfferingId?: string;
}
export interface RestoreFromClusterSnapshot {
  readonly ClusterIdentifier: string;
  readonly SnapshotIdentifier: string;
  readonly SnapshotClusterIdentifier?: string;
  readonly Port?: number;
  readonly AvailabilityZone?: string;
  readonly AllowVersionUpgrade?: boolean;
  readonly ClusterSubnetGroupName?: string;
  readonly PubliclyAccessible?: boolean;
  readonly OwnerAccount?: string;
  readonly HsmClientCertificateIdentifier?: string;
  readonly HsmConfigurationIdentifier?: string;
  readonly ElasticIp?: string;
  readonly ClusterParameterGroupName?: string;
  readonly ClusterSecurityGroups?: [];
  readonly VpcSecurityGroupIds?: [];
  readonly PreferredMaintenanceWindow?: string;
  readonly AutomatedSnapshotRetentionPeriod?: number;
  readonly ManualSnapshotRetentionPeriod?: number;
  readonly KmsKeyId?: string;
  readonly NodeType?: string;
  readonly EnhancedVpcRouting?: boolean;
  readonly AdditionalInfo?: string;
  readonly IamRoles?: [];
  readonly MaintenanceTrackName?: string;
  readonly SnapshotScheduleIdentifier?: string;
  readonly NumberOfNodes?: number;
  readonly AvailabilityZoneRelocation?: boolean;
  readonly AquaConfigurationStatus?: string;
  readonly DefaultIamRoleArn?: string;
  readonly ReservedNodeId?: string;
  readonly TargetReservedNodeOfferingId?: string;
}
export interface RestoreTableFromClusterSnapshot {
  readonly ClusterIdentifier: string;
  readonly SnapshotIdentifier: string;
  readonly SourceDatabaseName: string;
  readonly SourceSchemaName?: string;
  readonly SourceTableName: string;
  readonly TargetDatabaseName?: string;
  readonly TargetSchemaName?: string;
  readonly NewTableName: string;
  readonly EnableCaseSensitiveIdentifier?: boolean;
}
export interface ResumeCluster {
  readonly ClusterIdentifier: string;
}
export interface RevokeClusterSecurityGroupIngress {
  readonly ClusterSecurityGroupName: string;
  readonly CIDRIP?: string;
  readonly EC2SecurityGroupName?: string;
  readonly EC2SecurityGroupOwnerId?: string;
}
export interface RevokeEndpointAccess {
  readonly ClusterIdentifier?: string;
  readonly Account?: string;
  readonly VpcIds?: [];
  readonly Force?: boolean;
}
export interface RevokeSnapshotAccess {
  readonly SnapshotIdentifier: string;
  readonly SnapshotClusterIdentifier?: string;
  readonly AccountWithRestoreAccess: string;
}
export interface RotateEncryptionKey {
  readonly ClusterIdentifier: string;
}
export interface UpdatePartnerStatus {
  readonly AccountId: string;
  readonly ClusterIdentifier: string;
  readonly DatabaseName: string;
  readonly PartnerName: string;
  readonly Status: string;
  readonly StatusMessage?: string;
}



interface AcceptReservedNodeExchangeInputMessage {
  readonly ReservedNodeId: string;
  readonly TargetReservedNodeOfferingId: string;
}

interface AcceptReservedNodeExchangeOutputMessage {
  readonly ExchangedReservedNode: ReservedNode;
}

interface AccessToClusterDeniedFault {
}

interface AccessToSnapshotDeniedFault {
}

interface AccountAttribute {
  readonly AttributeName: string;
  readonly AttributeValues: [];
}

interface AccountAttributeList {
  readonly AccountAttributes: [];
}

interface AccountWithRestoreAccess {
  readonly AccountId: string;
  readonly AccountAlias: string;
}

interface AquaConfiguration {
  readonly AquaStatus: string;
  readonly AquaConfigurationStatus: string;
}

interface AssociateDataShareConsumerMessage {
  readonly DataShareArn: string;
  readonly AssociateEntireAccount: boolean;
  readonly ConsumerArn: string;
}

interface AttributeValueTarget {
  readonly AttributeValue: string;
}

interface AuthenticationProfile {
  readonly AuthenticationProfileName: string;
  readonly AuthenticationProfileContent: string;
}

interface AuthenticationProfileAlreadyExistsFault {
}

interface AuthenticationProfileNotFoundFault {
}

interface AuthenticationProfileQuotaExceededFault {
}

interface AuthorizationAlreadyExistsFault {
}

interface AuthorizationNotFoundFault {
}

interface AuthorizationQuotaExceededFault {
}

interface AuthorizeClusterSecurityGroupIngressMessage {
  readonly ClusterSecurityGroupName: string;
  readonly CIDRIP: string;
  readonly EC2SecurityGroupName: string;
  readonly EC2SecurityGroupOwnerId: string;
}

interface AuthorizeClusterSecurityGroupIngressResult {
  readonly ClusterSecurityGroup: ClusterSecurityGroup;
}

interface AuthorizeDataShareMessage {
  readonly DataShareArn: string;
  readonly ConsumerIdentifier: string;
}

interface AuthorizeEndpointAccessMessage {
  readonly ClusterIdentifier: string;
  readonly Account: string;
  readonly VpcIds: [];
}

interface AuthorizeSnapshotAccessMessage {
  readonly SnapshotIdentifier: string;
  readonly SnapshotClusterIdentifier: string;
  readonly AccountWithRestoreAccess: string;
}

interface AuthorizeSnapshotAccessResult {
  readonly Snapshot: Snapshot;
}

interface AvailabilityZone {
  readonly Name: string;
  readonly SupportedPlatforms: [];
}

interface BatchDeleteClusterSnapshotsRequest {
  readonly Identifiers: [];
}

interface BatchDeleteClusterSnapshotsResult {
  readonly Resources: [];
  readonly Errors: [];
}

interface BatchDeleteRequestSizeExceededFault {
}

interface BatchModifyClusterSnapshotsLimitExceededFault {
}

interface BatchModifyClusterSnapshotsMessage {
  readonly SnapshotIdentifierList: [];
  readonly ManualSnapshotRetentionPeriod: number;
  readonly Force: boolean;
}

interface BatchModifyClusterSnapshotsOutputMessage {
  readonly Resources: [];
  readonly Errors: [];
}

interface BucketNotFoundFault {
}

interface CancelResizeMessage {
  readonly ClusterIdentifier: string;
}

interface Cluster {
  readonly ClusterIdentifier: string;
  readonly NodeType: string;
  readonly ClusterStatus: string;
  readonly ClusterAvailabilityStatus: string;
  readonly ModifyStatus: string;
  readonly MasterUsername: string;
  readonly DBName: string;
  readonly Endpoint: Endpoint;
  readonly ClusterCreateTime: Date;
  readonly AutomatedSnapshotRetentionPeriod: number;
  readonly ManualSnapshotRetentionPeriod: number;
  readonly ClusterSecurityGroups: [];
  readonly VpcSecurityGroups: [];
  readonly ClusterParameterGroups: [];
  readonly ClusterSubnetGroupName: string;
  readonly VpcId: string;
  readonly AvailabilityZone: string;
  readonly PreferredMaintenanceWindow: string;
  readonly PendingModifiedValues: PendingModifiedValues;
  readonly ClusterVersion: string;
  readonly AllowVersionUpgrade: boolean;
  readonly NumberOfNodes: number;
  readonly PubliclyAccessible: boolean;
  readonly Encrypted: boolean;
  readonly RestoreStatus: RestoreStatus;
  readonly DataTransferProgress: DataTransferProgress;
  readonly HsmStatus: HsmStatus;
  readonly ClusterSnapshotCopyStatus: ClusterSnapshotCopyStatus;
  readonly ClusterPublicKey: string;
  readonly ClusterNodes: [];
  readonly ElasticIpStatus: ElasticIpStatus;
  readonly ClusterRevisionNumber: string;
  readonly Tags: [];
  readonly KmsKeyId: string;
  readonly EnhancedVpcRouting: boolean;
  readonly IamRoles: [];
  readonly PendingActions: [];
  readonly MaintenanceTrackName: string;
  readonly ElasticResizeNumberOfNodeOptions: string;
  readonly DeferredMaintenanceWindows: [];
  readonly SnapshotScheduleIdentifier: string;
  readonly SnapshotScheduleState: string;
  readonly ExpectedNextSnapshotScheduleTime: Date;
  readonly ExpectedNextSnapshotScheduleTimeStatus: string;
  readonly NextMaintenanceWindowStartTime: Date;
  readonly ResizeInfo: ResizeInfo;
  readonly AvailabilityZoneRelocationStatus: string;
  readonly ClusterNamespaceArn: string;
  readonly TotalStorageCapacityInMegaBytes: number;
  readonly AquaConfiguration: AquaConfiguration;
  readonly DefaultIamRoleArn: string;
  readonly ReservedNodeExchangeStatus: ReservedNodeExchangeStatus;
}

interface ClusterAlreadyExistsFault {
}

interface ClusterAssociatedToSchedule {
  readonly ClusterIdentifier: string;
  readonly ScheduleAssociationState: string;
}

interface ClusterCredentials {
  readonly DbUser: string;
  readonly DbPassword: string;
  readonly Expiration: Date;
}

interface ClusterDbRevision {
  readonly ClusterIdentifier: string;
  readonly CurrentDatabaseRevision: string;
  readonly DatabaseRevisionReleaseDate: Date;
  readonly RevisionTargets: [];
}

interface ClusterDbRevisionsMessage {
  readonly Marker: string;
  readonly ClusterDbRevisions: [];
}

interface ClusterIamRole {
  readonly IamRoleArn: string;
  readonly ApplyStatus: string;
}

interface ClusterNode {
  readonly NodeRole: string;
  readonly PrivateIPAddress: string;
  readonly PublicIPAddress: string;
}

interface ClusterNotFoundFault {
}

interface ClusterOnLatestRevisionFault {
}

interface ClusterParameterGroup {
  readonly ParameterGroupName: string;
  readonly ParameterGroupFamily: string;
  readonly Description: string;
  readonly Tags: [];
}

interface ClusterParameterGroupAlreadyExistsFault {
}

interface ClusterParameterGroupDetails {
  readonly Parameters: [];
  readonly Marker: string;
}

interface ClusterParameterGroupNameMessage {
  readonly ParameterGroupName: string;
  readonly ParameterGroupStatus: string;
}

interface ClusterParameterGroupNotFoundFault {
}

interface ClusterParameterGroupQuotaExceededFault {
}

interface ClusterParameterGroupStatus {
  readonly ParameterGroupName: string;
  readonly ParameterApplyStatus: string;
  readonly ClusterParameterStatusList: [];
}

interface ClusterParameterGroupsMessage {
  readonly Marker: string;
  readonly ParameterGroups: [];
}

interface ClusterParameterStatus {
  readonly ParameterName: string;
  readonly ParameterApplyStatus: string;
  readonly ParameterApplyErrorDescription: string;
}

interface ClusterQuotaExceededFault {
}

interface ClusterSecurityGroup {
  readonly ClusterSecurityGroupName: string;
  readonly Description: string;
  readonly EC2SecurityGroups: [];
  readonly IPRanges: [];
  readonly Tags: [];
}

interface ClusterSecurityGroupAlreadyExistsFault {
}

interface ClusterSecurityGroupMembership {
  readonly ClusterSecurityGroupName: string;
  readonly Status: string;
}

interface ClusterSecurityGroupMessage {
  readonly Marker: string;
  readonly ClusterSecurityGroups: [];
}

interface ClusterSecurityGroupNotFoundFault {
}

interface ClusterSecurityGroupQuotaExceededFault {
}

interface ClusterSnapshotAlreadyExistsFault {
}

interface ClusterSnapshotCopyStatus {
  readonly DestinationRegion: string;
  readonly RetentionPeriod: number;
  readonly ManualSnapshotRetentionPeriod: number;
  readonly SnapshotCopyGrantName: string;
}

interface ClusterSnapshotNotFoundFault {
}

interface ClusterSnapshotQuotaExceededFault {
}

interface ClusterSubnetGroup {
  readonly ClusterSubnetGroupName: string;
  readonly Description: string;
  readonly VpcId: string;
  readonly SubnetGroupStatus: string;
  readonly Subnets: [];
  readonly Tags: [];
}

interface ClusterSubnetGroupAlreadyExistsFault {
}

interface ClusterSubnetGroupMessage {
  readonly Marker: string;
  readonly ClusterSubnetGroups: [];
}

interface ClusterSubnetGroupNotFoundFault {
}

interface ClusterSubnetGroupQuotaExceededFault {
}

interface ClusterSubnetQuotaExceededFault {
}

interface ClusterVersion {
  readonly ClusterVersion: string;
  readonly ClusterParameterGroupFamily: string;
  readonly Description: string;
}

interface ClusterVersionsMessage {
  readonly Marker: string;
  readonly ClusterVersions: [];
}

interface ClustersMessage {
  readonly Marker: string;
  readonly Clusters: [];
}

interface CopyClusterSnapshotMessage {
  readonly SourceSnapshotIdentifier: string;
  readonly SourceSnapshotClusterIdentifier: string;
  readonly TargetSnapshotIdentifier: string;
  readonly ManualSnapshotRetentionPeriod: number;
}

interface CopyClusterSnapshotResult {
  readonly Snapshot: Snapshot;
}

interface CopyToRegionDisabledFault {
}

interface CreateAuthenticationProfileMessage {
  readonly AuthenticationProfileName: string;
  readonly AuthenticationProfileContent: string;
}

interface CreateAuthenticationProfileResult {
  readonly AuthenticationProfileName: string;
  readonly AuthenticationProfileContent: string;
}

interface CreateClusterMessage {
  readonly DBName: string;
  readonly ClusterIdentifier: string;
  readonly ClusterType: string;
  readonly NodeType: string;
  readonly MasterUsername: string;
  readonly MasterUserPassword: string;
  readonly ClusterSecurityGroups: [];
  readonly VpcSecurityGroupIds: [];
  readonly ClusterSubnetGroupName: string;
  readonly AvailabilityZone: string;
  readonly PreferredMaintenanceWindow: string;
  readonly ClusterParameterGroupName: string;
  readonly AutomatedSnapshotRetentionPeriod: number;
  readonly ManualSnapshotRetentionPeriod: number;
  readonly Port: number;
  readonly ClusterVersion: string;
  readonly AllowVersionUpgrade: boolean;
  readonly NumberOfNodes: number;
  readonly PubliclyAccessible: boolean;
  readonly Encrypted: boolean;
  readonly HsmClientCertificateIdentifier: string;
  readonly HsmConfigurationIdentifier: string;
  readonly ElasticIp: string;
  readonly Tags: [];
  readonly KmsKeyId: string;
  readonly EnhancedVpcRouting: boolean;
  readonly AdditionalInfo: string;
  readonly IamRoles: [];
  readonly MaintenanceTrackName: string;
  readonly SnapshotScheduleIdentifier: string;
  readonly AvailabilityZoneRelocation: boolean;
  readonly AquaConfigurationStatus: string;
  readonly DefaultIamRoleArn: string;
}

interface CreateClusterParameterGroupMessage {
  readonly ParameterGroupName: string;
  readonly ParameterGroupFamily: string;
  readonly Description: string;
  readonly Tags: [];
}

interface CreateClusterParameterGroupResult {
  readonly ClusterParameterGroup: ClusterParameterGroup;
}

interface CreateClusterResult {
  readonly Cluster: Cluster;
}

interface CreateClusterSecurityGroupMessage {
  readonly ClusterSecurityGroupName: string;
  readonly Description: string;
  readonly Tags: [];
}

interface CreateClusterSecurityGroupResult {
  readonly ClusterSecurityGroup: ClusterSecurityGroup;
}

interface CreateClusterSnapshotMessage {
  readonly SnapshotIdentifier: string;
  readonly ClusterIdentifier: string;
  readonly ManualSnapshotRetentionPeriod: number;
  readonly Tags: [];
}

interface CreateClusterSnapshotResult {
  readonly Snapshot: Snapshot;
}

interface CreateClusterSubnetGroupMessage {
  readonly ClusterSubnetGroupName: string;
  readonly Description: string;
  readonly SubnetIds: [];
  readonly Tags: [];
}

interface CreateClusterSubnetGroupResult {
  readonly ClusterSubnetGroup: ClusterSubnetGroup;
}

interface CreateEndpointAccessMessage {
  readonly ClusterIdentifier: string;
  readonly ResourceOwner: string;
  readonly EndpointName: string;
  readonly SubnetGroupName: string;
  readonly VpcSecurityGroupIds: [];
}

interface CreateEventSubscriptionMessage {
  readonly SubscriptionName: string;
  readonly SnsTopicArn: string;
  readonly SourceType: string;
  readonly SourceIds: [];
  readonly EventCategories: [];
  readonly Severity: string;
  readonly Enabled: boolean;
  readonly Tags: [];
}

interface CreateEventSubscriptionResult {
  readonly EventSubscription: EventSubscription;
}

interface CreateHsmClientCertificateMessage {
  readonly HsmClientCertificateIdentifier: string;
  readonly Tags: [];
}

interface CreateHsmClientCertificateResult {
  readonly HsmClientCertificate: HsmClientCertificate;
}

interface CreateHsmConfigurationMessage {
  readonly HsmConfigurationIdentifier: string;
  readonly Description: string;
  readonly HsmIpAddress: string;
  readonly HsmPartitionName: string;
  readonly HsmPartitionPassword: string;
  readonly HsmServerPublicCertificate: string;
  readonly Tags: [];
}

interface CreateHsmConfigurationResult {
  readonly HsmConfiguration: HsmConfiguration;
}

interface CreateScheduledActionMessage {
  readonly ScheduledActionName: string;
  readonly TargetAction: ScheduledActionType;
  readonly Schedule: string;
  readonly IamRole: string;
  readonly ScheduledActionDescription: string;
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly Enable: boolean;
}

interface CreateSnapshotCopyGrantMessage {
  readonly SnapshotCopyGrantName: string;
  readonly KmsKeyId: string;
  readonly Tags: [];
}

interface CreateSnapshotCopyGrantResult {
  readonly SnapshotCopyGrant: SnapshotCopyGrant;
}

interface CreateSnapshotScheduleMessage {
  readonly ScheduleDefinitions: [];
  readonly ScheduleIdentifier: string;
  readonly ScheduleDescription: string;
  readonly Tags: [];
  readonly DryRun: boolean;
  readonly NextInvocations: number;
}

interface CreateTagsMessage {
  readonly ResourceName: string;
  readonly Tags: [];
}

interface CreateUsageLimitMessage {
  readonly ClusterIdentifier: string;
  readonly FeatureType: string;
  readonly LimitType: string;
  readonly Amount: number;
  readonly Period: string;
  readonly BreachAction: string;
  readonly Tags: [];
}

interface CustomerStorageMessage {
  readonly TotalBackupSizeInMegaBytes: unknown;
  readonly TotalProvisionedStorageInMegaBytes: unknown;
}

interface DataShare {
  readonly DataShareArn: string;
  readonly ProducerArn: string;
  readonly AllowPubliclyAccessibleConsumers: boolean;
  readonly DataShareAssociations: [];
}

interface DataShareAssociation {
  readonly ConsumerIdentifier: string;
  readonly Status: string;
  readonly CreatedDate: Date;
  readonly StatusChangeDate: Date;
}

interface DataTransferProgress {
  readonly Status: string;
  readonly CurrentRateInMegaBytesPerSecond: unknown;
  readonly TotalDataInMegaBytes: number;
  readonly DataTransferredInMegaBytes: number;
  readonly EstimatedTimeToCompletionInSeconds: number;
  readonly ElapsedTimeInSeconds: number;
}

interface DeauthorizeDataShareMessage {
  readonly DataShareArn: string;
  readonly ConsumerIdentifier: string;
}

interface DefaultClusterParameters {
  readonly ParameterGroupFamily: string;
  readonly Marker: string;
  readonly Parameters: [];
}

interface DeferredMaintenanceWindow {
  readonly DeferMaintenanceIdentifier: string;
  readonly DeferMaintenanceStartTime: Date;
  readonly DeferMaintenanceEndTime: Date;
}

interface DeleteAuthenticationProfileMessage {
  readonly AuthenticationProfileName: string;
}

interface DeleteAuthenticationProfileResult {
  readonly AuthenticationProfileName: string;
}

interface DeleteClusterMessage {
  readonly ClusterIdentifier: string;
  readonly SkipFinalClusterSnapshot: boolean;
  readonly FinalClusterSnapshotIdentifier: string;
  readonly FinalClusterSnapshotRetentionPeriod: number;
}

interface DeleteClusterParameterGroupMessage {
  readonly ParameterGroupName: string;
}

interface DeleteClusterResult {
  readonly Cluster: Cluster;
}

interface DeleteClusterSecurityGroupMessage {
  readonly ClusterSecurityGroupName: string;
}

interface DeleteClusterSnapshotMessage {
  readonly SnapshotIdentifier: string;
  readonly SnapshotClusterIdentifier: string;
}

interface DeleteClusterSnapshotResult {
  readonly Snapshot: Snapshot;
}

interface DeleteClusterSubnetGroupMessage {
  readonly ClusterSubnetGroupName: string;
}

interface DeleteEndpointAccessMessage {
  readonly EndpointName: string;
}

interface DeleteEventSubscriptionMessage {
  readonly SubscriptionName: string;
}

interface DeleteHsmClientCertificateMessage {
  readonly HsmClientCertificateIdentifier: string;
}

interface DeleteHsmConfigurationMessage {
  readonly HsmConfigurationIdentifier: string;
}

interface DeleteScheduledActionMessage {
  readonly ScheduledActionName: string;
}

interface DeleteSnapshotCopyGrantMessage {
  readonly SnapshotCopyGrantName: string;
}

interface DeleteSnapshotScheduleMessage {
  readonly ScheduleIdentifier: string;
}

interface DeleteTagsMessage {
  readonly ResourceName: string;
  readonly TagKeys: [];
}

interface DeleteUsageLimitMessage {
  readonly UsageLimitId: string;
}

interface DependentServiceRequestThrottlingFault {
}

interface DependentServiceUnavailableFault {
}

interface DescribeAccountAttributesMessage {
  readonly AttributeNames: [];
}

interface DescribeAuthenticationProfilesMessage {
  readonly AuthenticationProfileName: string;
}

interface DescribeAuthenticationProfilesResult {
  readonly AuthenticationProfiles: [];
}

interface DescribeClusterDbRevisionsMessage {
  readonly ClusterIdentifier: string;
  readonly MaxRecords: number;
  readonly Marker: string;
}

interface DescribeClusterParameterGroupsMessage {
  readonly ParameterGroupName: string;
  readonly MaxRecords: number;
  readonly Marker: string;
  readonly TagKeys: [];
  readonly TagValues: [];
}

interface DescribeClusterParametersMessage {
  readonly ParameterGroupName: string;
  readonly Source: string;
  readonly MaxRecords: number;
  readonly Marker: string;
}

interface DescribeClusterSecurityGroupsMessage {
  readonly ClusterSecurityGroupName: string;
  readonly MaxRecords: number;
  readonly Marker: string;
  readonly TagKeys: [];
  readonly TagValues: [];
}

interface DescribeClusterSnapshotsMessage {
  readonly ClusterIdentifier: string;
  readonly SnapshotIdentifier: string;
  readonly SnapshotType: string;
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly MaxRecords: number;
  readonly Marker: string;
  readonly OwnerAccount: string;
  readonly TagKeys: [];
  readonly TagValues: [];
  readonly ClusterExists: boolean;
  readonly SortingEntities: [];
}

interface DescribeClusterSubnetGroupsMessage {
  readonly ClusterSubnetGroupName: string;
  readonly MaxRecords: number;
  readonly Marker: string;
  readonly TagKeys: [];
  readonly TagValues: [];
}

interface DescribeClusterTracksMessage {
  readonly MaintenanceTrackName: string;
  readonly MaxRecords: number;
  readonly Marker: string;
}

interface DescribeClusterVersionsMessage {
  readonly ClusterVersion: string;
  readonly ClusterParameterGroupFamily: string;
  readonly MaxRecords: number;
  readonly Marker: string;
}

interface DescribeClustersMessage {
  readonly ClusterIdentifier: string;
  readonly MaxRecords: number;
  readonly Marker: string;
  readonly TagKeys: [];
  readonly TagValues: [];
}

interface DescribeDataSharesForConsumerMessage {
  readonly ConsumerArn: string;
  readonly Status: string;
  readonly MaxRecords: number;
  readonly Marker: string;
}

interface DescribeDataSharesForConsumerResult {
  readonly DataShares: [];
  readonly Marker: string;
}

interface DescribeDataSharesForProducerMessage {
  readonly ProducerArn: string;
  readonly Status: string;
  readonly MaxRecords: number;
  readonly Marker: string;
}

interface DescribeDataSharesForProducerResult {
  readonly DataShares: [];
  readonly Marker: string;
}

interface DescribeDataSharesMessage {
  readonly DataShareArn: string;
  readonly MaxRecords: number;
  readonly Marker: string;
}

interface DescribeDataSharesResult {
  readonly DataShares: [];
  readonly Marker: string;
}

interface DescribeDefaultClusterParametersMessage {
  readonly ParameterGroupFamily: string;
  readonly MaxRecords: number;
  readonly Marker: string;
}

interface DescribeDefaultClusterParametersResult {
  readonly DefaultClusterParameters: DefaultClusterParameters;
}

interface DescribeEndpointAccessMessage {
  readonly ClusterIdentifier: string;
  readonly ResourceOwner: string;
  readonly EndpointName: string;
  readonly VpcId: string;
  readonly MaxRecords: number;
  readonly Marker: string;
}

interface DescribeEndpointAuthorizationMessage {
  readonly ClusterIdentifier: string;
  readonly Account: string;
  readonly Grantee: boolean;
  readonly MaxRecords: number;
  readonly Marker: string;
}

interface DescribeEventCategoriesMessage {
  readonly SourceType: string;
}

interface DescribeEventSubscriptionsMessage {
  readonly SubscriptionName: string;
  readonly MaxRecords: number;
  readonly Marker: string;
  readonly TagKeys: [];
  readonly TagValues: [];
}

interface DescribeEventsMessage {
  readonly SourceIdentifier: string;
  readonly SourceType: string;
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly Duration: number;
  readonly MaxRecords: number;
  readonly Marker: string;
}

interface DescribeHsmClientCertificatesMessage {
  readonly HsmClientCertificateIdentifier: string;
  readonly MaxRecords: number;
  readonly Marker: string;
  readonly TagKeys: [];
  readonly TagValues: [];
}

interface DescribeHsmConfigurationsMessage {
  readonly HsmConfigurationIdentifier: string;
  readonly MaxRecords: number;
  readonly Marker: string;
  readonly TagKeys: [];
  readonly TagValues: [];
}

interface DescribeLoggingStatusMessage {
  readonly ClusterIdentifier: string;
}

interface DescribeNodeConfigurationOptionsMessage {
  readonly ActionType: string;
  readonly ClusterIdentifier: string;
  readonly SnapshotIdentifier: string;
  readonly OwnerAccount: string;
  readonly Filters: [];
  readonly Marker: string;
  readonly MaxRecords: number;
}

interface DescribeOrderableClusterOptionsMessage {
  readonly ClusterVersion: string;
  readonly NodeType: string;
  readonly MaxRecords: number;
  readonly Marker: string;
}

interface DescribePartnersInputMessage {
  readonly AccountId: string;
  readonly ClusterIdentifier: string;
  readonly DatabaseName: string;
  readonly PartnerName: string;
}

interface DescribePartnersOutputMessage {
  readonly PartnerIntegrationInfoList: [];
}

interface DescribeReservedNodeExchangeStatusInputMessage {
  readonly ReservedNodeId: string;
  readonly ReservedNodeExchangeRequestId: string;
  readonly MaxRecords: number;
  readonly Marker: string;
}

interface DescribeReservedNodeExchangeStatusOutputMessage {
  readonly ReservedNodeExchangeStatusDetails: [];
  readonly Marker: string;
}

interface DescribeReservedNodeOfferingsMessage {
  readonly ReservedNodeOfferingId: string;
  readonly MaxRecords: number;
  readonly Marker: string;
}

interface DescribeReservedNodesMessage {
  readonly ReservedNodeId: string;
  readonly MaxRecords: number;
  readonly Marker: string;
}

interface DescribeResizeMessage {
  readonly ClusterIdentifier: string;
}

interface DescribeScheduledActionsMessage {
  readonly ScheduledActionName: string;
  readonly TargetActionType: string;
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly Active: boolean;
  readonly Filters: [];
  readonly Marker: string;
  readonly MaxRecords: number;
}

interface DescribeSnapshotCopyGrantsMessage {
  readonly SnapshotCopyGrantName: string;
  readonly MaxRecords: number;
  readonly Marker: string;
  readonly TagKeys: [];
  readonly TagValues: [];
}

interface DescribeSnapshotSchedulesMessage {
  readonly ClusterIdentifier: string;
  readonly ScheduleIdentifier: string;
  readonly TagKeys: [];
  readonly TagValues: [];
  readonly Marker: string;
  readonly MaxRecords: number;
}

interface DescribeSnapshotSchedulesOutputMessage {
  readonly SnapshotSchedules: [];
  readonly Marker: string;
}

interface DescribeTableRestoreStatusMessage {
  readonly ClusterIdentifier: string;
  readonly TableRestoreRequestId: string;
  readonly MaxRecords: number;
  readonly Marker: string;
}

interface DescribeTagsMessage {
  readonly ResourceName: string;
  readonly ResourceType: string;
  readonly MaxRecords: number;
  readonly Marker: string;
  readonly TagKeys: [];
  readonly TagValues: [];
}

interface DescribeUsageLimitsMessage {
  readonly UsageLimitId: string;
  readonly ClusterIdentifier: string;
  readonly FeatureType: string;
  readonly MaxRecords: number;
  readonly Marker: string;
  readonly TagKeys: [];
  readonly TagValues: [];
}

interface DisableLoggingMessage {
  readonly ClusterIdentifier: string;
}

interface DisableSnapshotCopyMessage {
  readonly ClusterIdentifier: string;
}

interface DisableSnapshotCopyResult {
  readonly Cluster: Cluster;
}

interface DisassociateDataShareConsumerMessage {
  readonly DataShareArn: string;
  readonly DisassociateEntireAccount: boolean;
  readonly ConsumerArn: string;
}

interface EC2SecurityGroup {
  readonly Status: string;
  readonly EC2SecurityGroupName: string;
  readonly EC2SecurityGroupOwnerId: string;
  readonly Tags: [];
}

interface ElasticIpStatus {
  readonly ElasticIp: string;
  readonly Status: string;
}

interface EnableLoggingMessage {
  readonly ClusterIdentifier: string;
  readonly BucketName: string;
  readonly S3KeyPrefix: string;
}

interface EnableSnapshotCopyMessage {
  readonly ClusterIdentifier: string;
  readonly DestinationRegion: string;
  readonly RetentionPeriod: number;
  readonly SnapshotCopyGrantName: string;
  readonly ManualSnapshotRetentionPeriod: number;
}

interface EnableSnapshotCopyResult {
  readonly Cluster: Cluster;
}

interface Endpoint {
  readonly Address: string;
  readonly Port: number;
  readonly VpcEndpoints: [];
}

interface EndpointAccess {
  readonly ClusterIdentifier: string;
  readonly ResourceOwner: string;
  readonly SubnetGroupName: string;
  readonly EndpointStatus: string;
  readonly EndpointName: string;
  readonly EndpointCreateTime: Date;
  readonly Port: number;
  readonly Address: string;
  readonly VpcSecurityGroups: [];
  readonly VpcEndpoint: VpcEndpoint;
}

interface EndpointAccessList {
  readonly EndpointAccessList: [];
  readonly Marker: string;
}

interface EndpointAlreadyExistsFault {
}

interface EndpointAuthorization {
  readonly Grantor: string;
  readonly Grantee: string;
  readonly ClusterIdentifier: string;
  readonly AuthorizeTime: Date;
  readonly ClusterStatus: string;
  readonly Status: string;
  readonly AllowedAllVPCs: boolean;
  readonly AllowedVPCs: [];
  readonly EndpointCount: number;
}

interface EndpointAuthorizationAlreadyExistsFault {
}

interface EndpointAuthorizationList {
  readonly EndpointAuthorizationList: [];
  readonly Marker: string;
}

interface EndpointAuthorizationNotFoundFault {
}

interface EndpointAuthorizationsPerClusterLimitExceededFault {
}

interface EndpointNotFoundFault {
}

interface EndpointsPerAuthorizationLimitExceededFault {
}

interface EndpointsPerClusterLimitExceededFault {
}

interface Event {
  readonly SourceIdentifier: string;
  readonly SourceType: string;
  readonly Message: string;
  readonly EventCategories: [];
  readonly Severity: string;
  readonly Date: Date;
  readonly EventId: string;
}

interface EventCategoriesMap {
  readonly SourceType: string;
  readonly Events: [];
}

interface EventCategoriesMessage {
  readonly EventCategoriesMapList: [];
}

interface EventInfoMap {
  readonly EventId: string;
  readonly EventCategories: [];
  readonly EventDescription: string;
  readonly Severity: string;
}

interface EventSubscription {
  readonly CustomerAwsId: string;
  readonly CustSubscriptionId: string;
  readonly SnsTopicArn: string;
  readonly Status: string;
  readonly SubscriptionCreationTime: Date;
  readonly SourceType: string;
  readonly SourceIdsList: [];
  readonly EventCategoriesList: [];
  readonly Severity: string;
  readonly Enabled: boolean;
  readonly Tags: [];
}

interface EventSubscriptionQuotaExceededFault {
}

interface EventSubscriptionsMessage {
  readonly Marker: string;
  readonly EventSubscriptionsList: [];
}

interface EventsMessage {
  readonly Marker: string;
  readonly Events: [];
}

interface GetClusterCredentialsMessage {
  readonly DbUser: string;
  readonly DbName: string;
  readonly ClusterIdentifier: string;
  readonly DurationSeconds: number;
  readonly AutoCreate: boolean;
  readonly DbGroups: [];
}

interface GetReservedNodeExchangeConfigurationOptionsInputMessage {
  readonly ActionType: string;
  readonly ClusterIdentifier: string;
  readonly SnapshotIdentifier: string;
  readonly MaxRecords: number;
  readonly Marker: string;
}

interface GetReservedNodeExchangeConfigurationOptionsOutputMessage {
  readonly Marker: string;
  readonly ReservedNodeConfigurationOptionList: [];
}

interface GetReservedNodeExchangeOfferingsInputMessage {
  readonly ReservedNodeId: string;
  readonly MaxRecords: number;
  readonly Marker: string;
}

interface GetReservedNodeExchangeOfferingsOutputMessage {
  readonly Marker: string;
  readonly ReservedNodeOfferings: [];
}

interface HsmClientCertificate {
  readonly HsmClientCertificateIdentifier: string;
  readonly HsmClientCertificatePublicKey: string;
  readonly Tags: [];
}

interface HsmClientCertificateAlreadyExistsFault {
}

interface HsmClientCertificateMessage {
  readonly Marker: string;
  readonly HsmClientCertificates: [];
}

interface HsmClientCertificateNotFoundFault {
}

interface HsmClientCertificateQuotaExceededFault {
}

interface HsmConfiguration {
  readonly HsmConfigurationIdentifier: string;
  readonly Description: string;
  readonly HsmIpAddress: string;
  readonly HsmPartitionName: string;
  readonly Tags: [];
}

interface HsmConfigurationAlreadyExistsFault {
}

interface HsmConfigurationMessage {
  readonly Marker: string;
  readonly HsmConfigurations: [];
}

interface HsmConfigurationNotFoundFault {
}

interface HsmConfigurationQuotaExceededFault {
}

interface HsmStatus {
  readonly HsmClientCertificateIdentifier: string;
  readonly HsmConfigurationIdentifier: string;
  readonly Status: string;
}

interface IPRange {
  readonly Status: string;
  readonly CIDRIP: string;
  readonly Tags: [];
}

interface InProgressTableRestoreQuotaExceededFault {
}

interface IncompatibleOrderableOptions {
}

interface InsufficientClusterCapacityFault {
}

interface InsufficientS3BucketPolicyFault {
}

interface InvalidAuthenticationProfileRequestFault {
}

interface InvalidAuthorizationStateFault {
}

interface InvalidClusterParameterGroupStateFault {
}

interface InvalidClusterSecurityGroupStateFault {
}

interface InvalidClusterSnapshotScheduleStateFault {
}

interface InvalidClusterSnapshotStateFault {
}

interface InvalidClusterStateFault {
}

interface InvalidClusterSubnetGroupStateFault {
}

interface InvalidClusterSubnetStateFault {
}

interface InvalidClusterTrackFault {
}

interface InvalidDataShareFault {
}

interface InvalidElasticIpFault {
}

interface InvalidEndpointStateFault {
}

interface InvalidHsmClientCertificateStateFault {
}

interface InvalidHsmConfigurationStateFault {
}

interface InvalidNamespaceFault {
}

interface InvalidReservedNodeStateFault {
}

interface InvalidRestoreFault {
}

interface InvalidRetentionPeriodFault {
}

interface InvalidS3BucketNameFault {
}

interface InvalidS3KeyPrefixFault {
}

interface InvalidScheduleFault {
}

interface InvalidScheduledActionFault {
}

interface InvalidSnapshotCopyGrantStateFault {
}

interface InvalidSubnet {
}

interface InvalidSubscriptionStateFault {
}

interface InvalidTableRestoreArgumentFault {
}

interface InvalidTagFault {
}

interface InvalidUsageLimitFault {
}

interface InvalidVPCNetworkStateFault {
}

interface LimitExceededFault {
}

interface LoggingStatus {
  readonly LoggingEnabled: boolean;
  readonly BucketName: string;
  readonly S3KeyPrefix: string;
  readonly LastSuccessfulDeliveryTime: Date;
  readonly LastFailureTime: Date;
  readonly LastFailureMessage: string;
}

interface MaintenanceTrack {
  readonly MaintenanceTrackName: string;
  readonly DatabaseVersion: string;
  readonly UpdateTargets: [];
}

interface ModifyAquaInputMessage {
  readonly ClusterIdentifier: string;
  readonly AquaConfigurationStatus: string;
}

interface ModifyAquaOutputMessage {
  readonly AquaConfiguration: AquaConfiguration;
}

interface ModifyAuthenticationProfileMessage {
  readonly AuthenticationProfileName: string;
  readonly AuthenticationProfileContent: string;
}

interface ModifyAuthenticationProfileResult {
  readonly AuthenticationProfileName: string;
  readonly AuthenticationProfileContent: string;
}

interface ModifyClusterDbRevisionMessage {
  readonly ClusterIdentifier: string;
  readonly RevisionTarget: string;
}

interface ModifyClusterDbRevisionResult {
  readonly Cluster: Cluster;
}

interface ModifyClusterIamRolesMessage {
  readonly ClusterIdentifier: string;
  readonly AddIamRoles: [];
  readonly RemoveIamRoles: [];
  readonly DefaultIamRoleArn: string;
}

interface ModifyClusterIamRolesResult {
  readonly Cluster: Cluster;
}

interface ModifyClusterMaintenanceMessage {
  readonly ClusterIdentifier: string;
  readonly DeferMaintenance: boolean;
  readonly DeferMaintenanceIdentifier: string;
  readonly DeferMaintenanceStartTime: Date;
  readonly DeferMaintenanceEndTime: Date;
  readonly DeferMaintenanceDuration: number;
}

interface ModifyClusterMaintenanceResult {
  readonly Cluster: Cluster;
}

interface ModifyClusterMessage {
  readonly ClusterIdentifier: string;
  readonly ClusterType: string;
  readonly NodeType: string;
  readonly NumberOfNodes: number;
  readonly ClusterSecurityGroups: [];
  readonly VpcSecurityGroupIds: [];
  readonly MasterUserPassword: string;
  readonly ClusterParameterGroupName: string;
  readonly AutomatedSnapshotRetentionPeriod: number;
  readonly ManualSnapshotRetentionPeriod: number;
  readonly PreferredMaintenanceWindow: string;
  readonly ClusterVersion: string;
  readonly AllowVersionUpgrade: boolean;
  readonly HsmClientCertificateIdentifier: string;
  readonly HsmConfigurationIdentifier: string;
  readonly NewClusterIdentifier: string;
  readonly PubliclyAccessible: boolean;
  readonly ElasticIp: string;
  readonly EnhancedVpcRouting: boolean;
  readonly MaintenanceTrackName: string;
  readonly Encrypted: boolean;
  readonly KmsKeyId: string;
  readonly AvailabilityZoneRelocation: boolean;
  readonly AvailabilityZone: string;
  readonly Port: number;
}

interface ModifyClusterParameterGroupMessage {
  readonly ParameterGroupName: string;
  readonly Parameters: [];
}

interface ModifyClusterResult {
  readonly Cluster: Cluster;
}

interface ModifyClusterSnapshotMessage {
  readonly SnapshotIdentifier: string;
  readonly ManualSnapshotRetentionPeriod: number;
  readonly Force: boolean;
}

interface ModifyClusterSnapshotResult {
  readonly Snapshot: Snapshot;
}

interface ModifyClusterSnapshotScheduleMessage {
  readonly ClusterIdentifier: string;
  readonly ScheduleIdentifier: string;
  readonly DisassociateSchedule: boolean;
}

interface ModifyClusterSubnetGroupMessage {
  readonly ClusterSubnetGroupName: string;
  readonly Description: string;
  readonly SubnetIds: [];
}

interface ModifyClusterSubnetGroupResult {
  readonly ClusterSubnetGroup: ClusterSubnetGroup;
}

interface ModifyEndpointAccessMessage {
  readonly EndpointName: string;
  readonly VpcSecurityGroupIds: [];
}

interface ModifyEventSubscriptionMessage {
  readonly SubscriptionName: string;
  readonly SnsTopicArn: string;
  readonly SourceType: string;
  readonly SourceIds: [];
  readonly EventCategories: [];
  readonly Severity: string;
  readonly Enabled: boolean;
}

interface ModifyEventSubscriptionResult {
  readonly EventSubscription: EventSubscription;
}

interface ModifyScheduledActionMessage {
  readonly ScheduledActionName: string;
  readonly TargetAction: ScheduledActionType;
  readonly Schedule: string;
  readonly IamRole: string;
  readonly ScheduledActionDescription: string;
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly Enable: boolean;
}

interface ModifySnapshotCopyRetentionPeriodMessage {
  readonly ClusterIdentifier: string;
  readonly RetentionPeriod: number;
  readonly Manual: boolean;
}

interface ModifySnapshotCopyRetentionPeriodResult {
  readonly Cluster: Cluster;
}

interface ModifySnapshotScheduleMessage {
  readonly ScheduleIdentifier: string;
  readonly ScheduleDefinitions: [];
}

interface ModifyUsageLimitMessage {
  readonly UsageLimitId: string;
  readonly Amount: number;
  readonly BreachAction: string;
}

interface NetworkInterface {
  readonly NetworkInterfaceId: string;
  readonly SubnetId: string;
  readonly PrivateIpAddress: string;
  readonly AvailabilityZone: string;
}

interface NodeConfigurationOption {
  readonly NodeType: string;
  readonly NumberOfNodes: number;
  readonly EstimatedDiskUtilizationPercent: unknown;
  readonly Mode: string;
}

interface NodeConfigurationOptionsFilter {
  readonly Name: string;
  readonly Operator: string;
  readonly Values: [];
}

interface NodeConfigurationOptionsMessage {
  readonly NodeConfigurationOptionList: [];
  readonly Marker: string;
}

interface NumberOfNodesPerClusterLimitExceededFault {
}

interface NumberOfNodesQuotaExceededFault {
}

interface OrderableClusterOption {
  readonly ClusterVersion: string;
  readonly ClusterType: string;
  readonly NodeType: string;
  readonly AvailabilityZones: [];
}

interface OrderableClusterOptionsMessage {
  readonly OrderableClusterOptions: [];
  readonly Marker: string;
}

interface Parameter {
  readonly ParameterName: string;
  readonly ParameterValue: string;
  readonly Description: string;
  readonly Source: string;
  readonly DataType: string;
  readonly AllowedValues: string;
  readonly ApplyType: string;
  readonly IsModifiable: boolean;
  readonly MinimumEngineVersion: string;
}

interface PartnerIntegrationInfo {
  readonly DatabaseName: string;
  readonly PartnerName: string;
  readonly Status: string;
  readonly StatusMessage: string;
  readonly CreatedAt: Date;
  readonly UpdatedAt: Date;
}

interface PartnerIntegrationInputMessage {
  readonly AccountId: string;
  readonly ClusterIdentifier: string;
  readonly DatabaseName: string;
  readonly PartnerName: string;
}

interface PartnerIntegrationOutputMessage {
  readonly DatabaseName: string;
  readonly PartnerName: string;
}

interface PartnerNotFoundFault {
}

interface PauseClusterMessage {
  readonly ClusterIdentifier: string;
}

interface PauseClusterResult {
  readonly Cluster: Cluster;
}

interface PendingModifiedValues {
  readonly MasterUserPassword: string;
  readonly NodeType: string;
  readonly NumberOfNodes: number;
  readonly ClusterType: string;
  readonly ClusterVersion: string;
  readonly AutomatedSnapshotRetentionPeriod: number;
  readonly ClusterIdentifier: string;
  readonly PubliclyAccessible: boolean;
  readonly EnhancedVpcRouting: boolean;
  readonly MaintenanceTrackName: string;
  readonly EncryptionType: string;
}

interface PurchaseReservedNodeOfferingMessage {
  readonly ReservedNodeOfferingId: string;
  readonly NodeCount: number;
}

interface PurchaseReservedNodeOfferingResult {
  readonly ReservedNode: ReservedNode;
}

interface RebootClusterMessage {
  readonly ClusterIdentifier: string;
}

interface RebootClusterResult {
  readonly Cluster: Cluster;
}

interface RecurringCharge {
  readonly RecurringChargeAmount: unknown;
  readonly RecurringChargeFrequency: string;
}

interface RejectDataShareMessage {
  readonly DataShareArn: string;
}

interface ReservedNode {
  readonly ReservedNodeId: string;
  readonly ReservedNodeOfferingId: string;
  readonly NodeType: string;
  readonly StartTime: Date;
  readonly Duration: number;
  readonly FixedPrice: unknown;
  readonly UsagePrice: unknown;
  readonly CurrencyCode: string;
  readonly NodeCount: number;
  readonly State: string;
  readonly OfferingType: string;
  readonly RecurringCharges: [];
  readonly ReservedNodeOfferingType: string;
}

interface ReservedNodeAlreadyExistsFault {
}

interface ReservedNodeAlreadyMigratedFault {
}

interface ReservedNodeConfigurationOption {
  readonly SourceReservedNode: ReservedNode;
  readonly TargetReservedNodeCount: number;
  readonly TargetReservedNodeOffering: ReservedNodeOffering;
}

interface ReservedNodeExchangeNotFoundFault {
}

interface ReservedNodeExchangeStatus {
  readonly ReservedNodeExchangeRequestId: string;
  readonly Status: string;
  readonly RequestTime: Date;
  readonly SourceReservedNodeId: string;
  readonly SourceReservedNodeType: string;
  readonly SourceReservedNodeCount: number;
  readonly TargetReservedNodeOfferingId: string;
  readonly TargetReservedNodeType: string;
  readonly TargetReservedNodeCount: number;
}

interface ReservedNodeNotFoundFault {
}

interface ReservedNodeOffering {
  readonly ReservedNodeOfferingId: string;
  readonly NodeType: string;
  readonly Duration: number;
  readonly FixedPrice: unknown;
  readonly UsagePrice: unknown;
  readonly CurrencyCode: string;
  readonly OfferingType: string;
  readonly RecurringCharges: [];
  readonly ReservedNodeOfferingType: string;
}

interface ReservedNodeOfferingNotFoundFault {
}

interface ReservedNodeOfferingsMessage {
  readonly Marker: string;
  readonly ReservedNodeOfferings: [];
}

interface ReservedNodeQuotaExceededFault {
}

interface ReservedNodesMessage {
  readonly Marker: string;
  readonly ReservedNodes: [];
}

interface ResetClusterParameterGroupMessage {
  readonly ParameterGroupName: string;
  readonly ResetAllParameters: boolean;
  readonly Parameters: [];
}

interface ResizeClusterMessage {
  readonly ClusterIdentifier: string;
  readonly ClusterType: string;
  readonly NodeType: string;
  readonly NumberOfNodes: number;
  readonly Classic: boolean;
  readonly ReservedNodeId: string;
  readonly TargetReservedNodeOfferingId: string;
}

interface ResizeClusterResult {
  readonly Cluster: Cluster;
}

interface ResizeInfo {
  readonly ResizeType: string;
  readonly AllowCancelResize: boolean;
}

interface ResizeNotFoundFault {
}

interface ResizeProgressMessage {
  readonly TargetNodeType: string;
  readonly TargetNumberOfNodes: number;
  readonly TargetClusterType: string;
  readonly Status: string;
  readonly ImportTablesCompleted: [];
  readonly ImportTablesInProgress: [];
  readonly ImportTablesNotStarted: [];
  readonly AvgResizeRateInMegaBytesPerSecond: unknown;
  readonly TotalResizeDataInMegaBytes: number;
  readonly ProgressInMegaBytes: number;
  readonly ElapsedTimeInSeconds: number;
  readonly EstimatedTimeToCompletionInSeconds: number;
  readonly ResizeType: string;
  readonly Message: string;
  readonly TargetEncryptionType: string;
  readonly DataTransferProgressPercent: unknown;
}

interface ResourceNotFoundFault {
}

interface RestoreFromClusterSnapshotMessage {
  readonly ClusterIdentifier: string;
  readonly SnapshotIdentifier: string;
  readonly SnapshotClusterIdentifier: string;
  readonly Port: number;
  readonly AvailabilityZone: string;
  readonly AllowVersionUpgrade: boolean;
  readonly ClusterSubnetGroupName: string;
  readonly PubliclyAccessible: boolean;
  readonly OwnerAccount: string;
  readonly HsmClientCertificateIdentifier: string;
  readonly HsmConfigurationIdentifier: string;
  readonly ElasticIp: string;
  readonly ClusterParameterGroupName: string;
  readonly ClusterSecurityGroups: [];
  readonly VpcSecurityGroupIds: [];
  readonly PreferredMaintenanceWindow: string;
  readonly AutomatedSnapshotRetentionPeriod: number;
  readonly ManualSnapshotRetentionPeriod: number;
  readonly KmsKeyId: string;
  readonly NodeType: string;
  readonly EnhancedVpcRouting: boolean;
  readonly AdditionalInfo: string;
  readonly IamRoles: [];
  readonly MaintenanceTrackName: string;
  readonly SnapshotScheduleIdentifier: string;
  readonly NumberOfNodes: number;
  readonly AvailabilityZoneRelocation: boolean;
  readonly AquaConfigurationStatus: string;
  readonly DefaultIamRoleArn: string;
  readonly ReservedNodeId: string;
  readonly TargetReservedNodeOfferingId: string;
}

interface RestoreFromClusterSnapshotResult {
  readonly Cluster: Cluster;
}

interface RestoreStatus {
  readonly Status: string;
  readonly CurrentRestoreRateInMegaBytesPerSecond: unknown;
  readonly SnapshotSizeInMegaBytes: number;
  readonly ProgressInMegaBytes: number;
  readonly ElapsedTimeInSeconds: number;
  readonly EstimatedTimeToCompletionInSeconds: number;
}

interface RestoreTableFromClusterSnapshotMessage {
  readonly ClusterIdentifier: string;
  readonly SnapshotIdentifier: string;
  readonly SourceDatabaseName: string;
  readonly SourceSchemaName: string;
  readonly SourceTableName: string;
  readonly TargetDatabaseName: string;
  readonly TargetSchemaName: string;
  readonly NewTableName: string;
  readonly EnableCaseSensitiveIdentifier: boolean;
}

interface RestoreTableFromClusterSnapshotResult {
  readonly TableRestoreStatus: TableRestoreStatus;
}

interface ResumeClusterMessage {
  readonly ClusterIdentifier: string;
}

interface ResumeClusterResult {
  readonly Cluster: Cluster;
}

interface RevisionTarget {
  readonly DatabaseRevision: string;
  readonly Description: string;
  readonly DatabaseRevisionReleaseDate: Date;
}

interface RevokeClusterSecurityGroupIngressMessage {
  readonly ClusterSecurityGroupName: string;
  readonly CIDRIP: string;
  readonly EC2SecurityGroupName: string;
  readonly EC2SecurityGroupOwnerId: string;
}

interface RevokeClusterSecurityGroupIngressResult {
  readonly ClusterSecurityGroup: ClusterSecurityGroup;
}

interface RevokeEndpointAccessMessage {
  readonly ClusterIdentifier: string;
  readonly Account: string;
  readonly VpcIds: [];
  readonly Force: boolean;
}

interface RevokeSnapshotAccessMessage {
  readonly SnapshotIdentifier: string;
  readonly SnapshotClusterIdentifier: string;
  readonly AccountWithRestoreAccess: string;
}

interface RevokeSnapshotAccessResult {
  readonly Snapshot: Snapshot;
}

interface RotateEncryptionKeyMessage {
  readonly ClusterIdentifier: string;
}

interface RotateEncryptionKeyResult {
  readonly Cluster: Cluster;
}

interface SNSInvalidTopicFault {
}

interface SNSNoAuthorizationFault {
}

interface SNSTopicArnNotFoundFault {
}

interface ScheduleDefinitionTypeUnsupportedFault {
}

interface ScheduledAction {
  readonly ScheduledActionName: string;
  readonly TargetAction: ScheduledActionType;
  readonly Schedule: string;
  readonly IamRole: string;
  readonly ScheduledActionDescription: string;
  readonly State: string;
  readonly NextInvocations: [];
  readonly StartTime: Date;
  readonly EndTime: Date;
}

interface ScheduledActionAlreadyExistsFault {
}

interface ScheduledActionFilter {
  readonly Name: string;
  readonly Values: [];
}

interface ScheduledActionNotFoundFault {
}

interface ScheduledActionQuotaExceededFault {
}

interface ScheduledActionType {
  readonly ResizeCluster: ResizeClusterMessage;
  readonly PauseCluster: PauseClusterMessage;
  readonly ResumeCluster: ResumeClusterMessage;
}

interface ScheduledActionTypeUnsupportedFault {
}

interface ScheduledActionsMessage {
  readonly Marker: string;
  readonly ScheduledActions: [];
}

interface Snapshot {
  readonly SnapshotIdentifier: string;
  readonly ClusterIdentifier: string;
  readonly SnapshotCreateTime: Date;
  readonly Status: string;
  readonly Port: number;
  readonly AvailabilityZone: string;
  readonly ClusterCreateTime: Date;
  readonly MasterUsername: string;
  readonly ClusterVersion: string;
  readonly EngineFullVersion: string;
  readonly SnapshotType: string;
  readonly NodeType: string;
  readonly NumberOfNodes: number;
  readonly DBName: string;
  readonly VpcId: string;
  readonly Encrypted: boolean;
  readonly KmsKeyId: string;
  readonly EncryptedWithHSM: boolean;
  readonly AccountsWithRestoreAccess: [];
  readonly OwnerAccount: string;
  readonly TotalBackupSizeInMegaBytes: unknown;
  readonly ActualIncrementalBackupSizeInMegaBytes: unknown;
  readonly BackupProgressInMegaBytes: unknown;
  readonly CurrentBackupRateInMegaBytesPerSecond: unknown;
  readonly EstimatedSecondsToCompletion: number;
  readonly ElapsedTimeInSeconds: number;
  readonly SourceRegion: string;
  readonly Tags: [];
  readonly RestorableNodeTypes: [];
  readonly EnhancedVpcRouting: boolean;
  readonly MaintenanceTrackName: string;
  readonly ManualSnapshotRetentionPeriod: number;
  readonly ManualSnapshotRemainingDays: number;
  readonly SnapshotRetentionStartTime: Date;
}

interface SnapshotCopyAlreadyDisabledFault {
}

interface SnapshotCopyAlreadyEnabledFault {
}

interface SnapshotCopyDisabledFault {
}

interface SnapshotCopyGrant {
  readonly SnapshotCopyGrantName: string;
  readonly KmsKeyId: string;
  readonly Tags: [];
}

interface SnapshotCopyGrantAlreadyExistsFault {
}

interface SnapshotCopyGrantMessage {
  readonly Marker: string;
  readonly SnapshotCopyGrants: [];
}

interface SnapshotCopyGrantNotFoundFault {
}

interface SnapshotCopyGrantQuotaExceededFault {
}

interface SnapshotErrorMessage {
  readonly SnapshotIdentifier: string;
  readonly SnapshotClusterIdentifier: string;
  readonly FailureCode: string;
  readonly FailureReason: string;
}

interface SnapshotMessage {
  readonly Marker: string;
  readonly Snapshots: [];
}

interface SnapshotSchedule {
  readonly ScheduleDefinitions: [];
  readonly ScheduleIdentifier: string;
  readonly ScheduleDescription: string;
  readonly Tags: [];
  readonly NextInvocations: [];
  readonly AssociatedClusterCount: number;
  readonly AssociatedClusters: [];
}

interface SnapshotScheduleAlreadyExistsFault {
}

interface SnapshotScheduleNotFoundFault {
}

interface SnapshotScheduleQuotaExceededFault {
}

interface SnapshotScheduleUpdateInProgressFault {
}

interface SnapshotSortingEntity {
  readonly Attribute: string;
  readonly SortOrder: string;
}

interface SourceNotFoundFault {
}

interface Subnet {
  readonly SubnetIdentifier: string;
  readonly SubnetAvailabilityZone: AvailabilityZone;
  readonly SubnetStatus: string;
}

interface SubnetAlreadyInUse {
}

interface SubscriptionAlreadyExistFault {
}

interface SubscriptionCategoryNotFoundFault {
}

interface SubscriptionEventIdNotFoundFault {
}

interface SubscriptionNotFoundFault {
}

interface SubscriptionSeverityNotFoundFault {
}

interface SupportedOperation {
  readonly OperationName: string;
}

interface SupportedPlatform {
  readonly Name: string;
}

interface TableLimitExceededFault {
}

interface TableRestoreNotFoundFault {
}

interface TableRestoreStatus {
  readonly TableRestoreRequestId: string;
  readonly Status: string;
  readonly Message: string;
  readonly RequestTime: Date;
  readonly ProgressInMegaBytes: number;
  readonly TotalDataInMegaBytes: number;
  readonly ClusterIdentifier: string;
  readonly SnapshotIdentifier: string;
  readonly SourceDatabaseName: string;
  readonly SourceSchemaName: string;
  readonly SourceTableName: string;
  readonly TargetDatabaseName: string;
  readonly TargetSchemaName: string;
  readonly NewTableName: string;
}

interface TableRestoreStatusMessage {
  readonly TableRestoreStatusDetails: [];
  readonly Marker: string;
}

interface Tag {
  readonly Key: string;
  readonly Value: string;
}

interface TagLimitExceededFault {
}

interface TaggedResource {
  readonly Tag: Tag;
  readonly ResourceName: string;
  readonly ResourceType: string;
}

interface TaggedResourceListMessage {
  readonly TaggedResources: [];
  readonly Marker: string;
}

interface TrackListMessage {
  readonly MaintenanceTracks: [];
  readonly Marker: string;
}

interface UnauthorizedOperation {
}

interface UnauthorizedPartnerIntegrationFault {
}

interface UnknownSnapshotCopyRegionFault {
}

interface UnsupportedOperationFault {
}

interface UnsupportedOptionFault {
}

interface UpdatePartnerStatusInputMessage {
  readonly AccountId: string;
  readonly ClusterIdentifier: string;
  readonly DatabaseName: string;
  readonly PartnerName: string;
  readonly Status: string;
  readonly StatusMessage: string;
}

interface UpdateTarget {
  readonly MaintenanceTrackName: string;
  readonly DatabaseVersion: string;
  readonly SupportedOperations: [];
}

interface UsageLimit {
  readonly UsageLimitId: string;
  readonly ClusterIdentifier: string;
  readonly FeatureType: string;
  readonly LimitType: string;
  readonly Amount: number;
  readonly Period: string;
  readonly BreachAction: string;
  readonly Tags: [];
}

interface UsageLimitAlreadyExistsFault {
}

interface UsageLimitList {
  readonly UsageLimits: [];
  readonly Marker: string;
}

interface UsageLimitNotFoundFault {
}

interface VpcEndpoint {
  readonly VpcEndpointId: string;
  readonly VpcId: string;
  readonly NetworkInterfaces: [];
}

interface VpcSecurityGroupMembership {
  readonly VpcSecurityGroupId: string;
  readonly Status: string;
}

