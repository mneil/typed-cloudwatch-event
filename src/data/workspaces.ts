/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AssociateConnectionAlias {
  readonly AliasId: string;
  readonly ResourceId: string;
}

export interface AssociateIpGroups {
  readonly DirectoryId: string;
  readonly GroupIds: [];
}

export interface AuthorizeIpRules {
  readonly GroupId: string;
  readonly UserRules: [];
}

export interface CopyWorkspaceImage {
  readonly Name: string;
  readonly Description?: string;
  readonly SourceImageId: string;
  readonly SourceRegion: string;
  readonly Tags?: [];
}

export interface CreateConnectionAlias {
  readonly ConnectionString: string;
  readonly Tags?: [];
}

export interface CreateIpGroup {
  readonly GroupName: string;
  readonly GroupDesc?: string;
  readonly UserRules?: [];
  readonly Tags?: [];
}

export interface CreateTags {
  readonly ResourceId: string;
  readonly Tags: [];
}

export interface CreateUpdatedWorkspaceImage {
  readonly Name: string;
  readonly Description: string;
  readonly SourceImageId: string;
  readonly Tags?: [];
}

export interface CreateWorkspaceBundle {
  readonly BundleName: string;
  readonly BundleDescription: string;
  readonly ImageId: string;
  readonly ComputeType: ComputeType;
  readonly UserStorage: UserStorage;
  readonly RootStorage?: RootStorage;
  readonly Tags?: [];
}

export interface CreateWorkspaces {
  readonly Workspaces: [];
}

export interface DeleteConnectionAlias {
  readonly AliasId: string;
}

export interface DeleteIpGroup {
  readonly GroupId: string;
}

export interface DeleteTags {
  readonly ResourceId: string;
  readonly TagKeys: [];
}

export interface DeleteWorkspaceBundle {
  readonly BundleId?: string;
}

export interface DeleteWorkspaceImage {
  readonly ImageId: string;
}

export interface DeregisterWorkspaceDirectory {
  readonly DirectoryId: string;
}

export interface DescribeAccount {
}

export interface DescribeAccountModifications {
  readonly NextToken?: string;
}

export interface DescribeClientProperties {
  readonly ResourceIds: [];
}

export interface DescribeConnectionAliasPermissions {
  readonly AliasId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface DescribeConnectionAliases {
  readonly AliasIds?: [];
  readonly ResourceId?: string;
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeIpGroups {
  readonly GroupIds?: [];
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface DescribeTags {
  readonly ResourceId: string;
}

export interface DescribeWorkspaceBundles {
  readonly BundleIds?: [];
  readonly Owner?: string;
  readonly NextToken?: string;
}

export interface DescribeWorkspaceDirectories {
  readonly DirectoryIds?: [];
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeWorkspaceImagePermissions {
  readonly ImageId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface DescribeWorkspaceImages {
  readonly ImageIds?: [];
  readonly ImageType?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface DescribeWorkspaceSnapshots {
  readonly WorkspaceId: string;
}

export interface DescribeWorkspaces {
  readonly WorkspaceIds?: [];
  readonly DirectoryId?: string;
  readonly UserName?: string;
  readonly BundleId?: string;
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeWorkspacesConnectionStatus {
  readonly WorkspaceIds?: [];
  readonly NextToken?: string;
}

export interface DisassociateConnectionAlias {
  readonly AliasId: string;
}

export interface DisassociateIpGroups {
  readonly DirectoryId: string;
  readonly GroupIds: [];
}

export interface ImportWorkspaceImage {
  readonly Ec2ImageId: string;
  readonly IngestionProcess: string;
  readonly ImageName: string;
  readonly ImageDescription: string;
  readonly Tags?: [];
  readonly Applications?: [];
}

export interface ListAvailableManagementCidrRanges {
  readonly ManagementCidrRangeConstraint: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface MigrateWorkspace {
  readonly SourceWorkspaceId: string;
  readonly BundleId: string;
}

export interface ModifyAccount {
  readonly DedicatedTenancySupport?: string;
  readonly DedicatedTenancyManagementCidrRange?: string;
}

export interface ModifyClientProperties {
  readonly ResourceId: string;
  readonly ClientProperties: ClientProperties;
}

export interface ModifySelfservicePermissions {
  readonly ResourceId: string;
  readonly SelfservicePermissions: SelfservicePermissions;
}

export interface ModifyWorkspaceAccessProperties {
  readonly ResourceId: string;
  readonly WorkspaceAccessProperties: WorkspaceAccessProperties;
}

export interface ModifyWorkspaceCreationProperties {
  readonly ResourceId: string;
  readonly WorkspaceCreationProperties: WorkspaceCreationProperties;
}

export interface ModifyWorkspaceProperties {
  readonly WorkspaceId: string;
  readonly WorkspaceProperties: WorkspaceProperties;
}

export interface ModifyWorkspaceState {
  readonly WorkspaceId: string;
  readonly WorkspaceState: string;
}

export interface RebootWorkspaces {
  readonly RebootWorkspaceRequests: [];
}

export interface RebuildWorkspaces {
  readonly RebuildWorkspaceRequests: [];
}

export interface RegisterWorkspaceDirectory {
  readonly DirectoryId: string;
  readonly SubnetIds?: [];
  readonly EnableWorkDocs: boolean;
  readonly EnableSelfService?: boolean;
  readonly Tenancy?: string;
  readonly Tags?: [];
}

export interface RestoreWorkspace {
  readonly WorkspaceId: string;
}

export interface RevokeIpRules {
  readonly GroupId: string;
  readonly UserRules: [];
}

export interface StartWorkspaces {
  readonly StartWorkspaceRequests: [];
}

export interface StopWorkspaces {
  readonly StopWorkspaceRequests: [];
}

export interface TerminateWorkspaces {
  readonly TerminateWorkspaceRequests: [];
}

export interface UpdateConnectionAliasPermission {
  readonly AliasId: string;
  readonly ConnectionAliasPermission: ConnectionAliasPermission;
}

export interface UpdateRulesOfIpGroup {
  readonly GroupId: string;
  readonly UserRules: [];
}

export interface UpdateWorkspaceBundle {
  readonly BundleId?: string;
  readonly ImageId?: string;
}

export interface UpdateWorkspaceImagePermission {
  readonly ImageId: string;
  readonly AllowCopyImage: boolean;
  readonly SharedAccountId: string;
}

export interface AccessDeniedException {
  readonly message?: string;
}

export interface AccountModification {
  readonly ModificationState?: string;
  readonly DedicatedTenancySupport?: string;
  readonly DedicatedTenancyManagementCidrRange?: string;
  readonly StartTime?: Date;
  readonly ErrorCode?: string;
  readonly ErrorMessage?: string;
}

export interface AssociateConnectionAliasRequest {
  readonly AliasId: string;
  readonly ResourceId: string;
}

export interface AssociateConnectionAliasResult {
  readonly ConnectionIdentifier?: string;
}

export interface AssociateIpGroupsRequest {
  readonly DirectoryId: string;
  readonly GroupIds: [];
}

export interface AssociateIpGroupsResult {
}

export interface AuthorizeIpRulesRequest {
  readonly GroupId: string;
  readonly UserRules: [];
}

export interface AuthorizeIpRulesResult {
}

export interface ClientProperties {
  readonly ReconnectEnabled?: string;
}

export interface ClientPropertiesResult {
  readonly ResourceId?: string;
  readonly ClientProperties?: ClientProperties;
}

export interface ComputeType {
  readonly Name?: string;
}

export interface ConnectionAlias {
  readonly ConnectionString?: string;
  readonly AliasId?: string;
  readonly State?: string;
  readonly OwnerAccountId?: string;
  readonly Associations?: [];
}

export interface ConnectionAliasAssociation {
  readonly AssociationStatus?: string;
  readonly AssociatedAccountId?: string;
  readonly ResourceId?: string;
  readonly ConnectionIdentifier?: string;
}

export interface ConnectionAliasPermission {
  readonly SharedAccountId: string;
  readonly AllowAssociation: boolean;
}

export interface CopyWorkspaceImageRequest {
  readonly Name: string;
  readonly Description?: string;
  readonly SourceImageId: string;
  readonly SourceRegion: string;
  readonly Tags?: [];
}

export interface CopyWorkspaceImageResult {
  readonly ImageId?: string;
}

export interface CreateConnectionAliasRequest {
  readonly ConnectionString: string;
  readonly Tags?: [];
}

export interface CreateConnectionAliasResult {
  readonly AliasId?: string;
}

export interface CreateIpGroupRequest {
  readonly GroupName: string;
  readonly GroupDesc?: string;
  readonly UserRules?: [];
  readonly Tags?: [];
}

export interface CreateIpGroupResult {
  readonly GroupId?: string;
}

export interface CreateTagsRequest {
  readonly ResourceId: string;
  readonly Tags: [];
}

export interface CreateTagsResult {
}

export interface CreateUpdatedWorkspaceImageRequest {
  readonly Name: string;
  readonly Description: string;
  readonly SourceImageId: string;
  readonly Tags?: [];
}

export interface CreateUpdatedWorkspaceImageResult {
  readonly ImageId?: string;
}

export interface CreateWorkspaceBundleRequest {
  readonly BundleName: string;
  readonly BundleDescription: string;
  readonly ImageId: string;
  readonly ComputeType: ComputeType;
  readonly UserStorage: UserStorage;
  readonly RootStorage?: RootStorage;
  readonly Tags?: [];
}

export interface CreateWorkspaceBundleResult {
  readonly WorkspaceBundle?: WorkspaceBundle;
}

export interface CreateWorkspacesRequest {
  readonly Workspaces: [];
}

export interface CreateWorkspacesResult {
  readonly FailedRequests?: [];
  readonly PendingRequests?: [];
}

export interface DefaultWorkspaceCreationProperties {
  readonly EnableWorkDocs?: boolean;
  readonly EnableInternetAccess?: boolean;
  readonly DefaultOu?: string;
  readonly CustomSecurityGroupId?: string;
  readonly UserEnabledAsLocalAdministrator?: boolean;
  readonly EnableMaintenanceMode?: boolean;
}

export interface DeleteConnectionAliasRequest {
  readonly AliasId: string;
}

export interface DeleteConnectionAliasResult {
}

export interface DeleteIpGroupRequest {
  readonly GroupId: string;
}

export interface DeleteIpGroupResult {
}

export interface DeleteTagsRequest {
  readonly ResourceId: string;
  readonly TagKeys: [];
}

export interface DeleteTagsResult {
}

export interface DeleteWorkspaceBundleRequest {
  readonly BundleId?: string;
}

export interface DeleteWorkspaceBundleResult {
}

export interface DeleteWorkspaceImageRequest {
  readonly ImageId: string;
}

export interface DeleteWorkspaceImageResult {
}

export interface DeregisterWorkspaceDirectoryRequest {
  readonly DirectoryId: string;
}

export interface DeregisterWorkspaceDirectoryResult {
}

export interface DescribeAccountModificationsRequest {
  readonly NextToken?: string;
}

export interface DescribeAccountModificationsResult {
  readonly AccountModifications?: [];
  readonly NextToken?: string;
}

export interface DescribeAccountRequest {
}

export interface DescribeAccountResult {
  readonly DedicatedTenancySupport?: string;
  readonly DedicatedTenancyManagementCidrRange?: string;
}

export interface DescribeClientPropertiesRequest {
  readonly ResourceIds: [];
}

export interface DescribeClientPropertiesResult {
  readonly ClientPropertiesList?: [];
}

export interface DescribeConnectionAliasPermissionsRequest {
  readonly AliasId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface DescribeConnectionAliasPermissionsResult {
  readonly AliasId?: string;
  readonly ConnectionAliasPermissions?: [];
  readonly NextToken?: string;
}

export interface DescribeConnectionAliasesRequest {
  readonly AliasIds?: [];
  readonly ResourceId?: string;
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeConnectionAliasesResult {
  readonly ConnectionAliases?: [];
  readonly NextToken?: string;
}

export interface DescribeIpGroupsRequest {
  readonly GroupIds?: [];
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface DescribeIpGroupsResult {
  readonly Result?: [];
  readonly NextToken?: string;
}

export interface DescribeTagsRequest {
  readonly ResourceId: string;
}

export interface DescribeTagsResult {
  readonly TagList?: [];
}

export interface DescribeWorkspaceBundlesRequest {
  readonly BundleIds?: [];
  readonly Owner?: string;
  readonly NextToken?: string;
}

export interface DescribeWorkspaceBundlesResult {
  readonly Bundles?: [];
  readonly NextToken?: string;
}

export interface DescribeWorkspaceDirectoriesRequest {
  readonly DirectoryIds?: [];
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeWorkspaceDirectoriesResult {
  readonly Directories?: [];
  readonly NextToken?: string;
}

export interface DescribeWorkspaceImagePermissionsRequest {
  readonly ImageId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface DescribeWorkspaceImagePermissionsResult {
  readonly ImageId?: string;
  readonly ImagePermissions?: [];
  readonly NextToken?: string;
}

export interface DescribeWorkspaceImagesRequest {
  readonly ImageIds?: [];
  readonly ImageType?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface DescribeWorkspaceImagesResult {
  readonly Images?: [];
  readonly NextToken?: string;
}

export interface DescribeWorkspaceSnapshotsRequest {
  readonly WorkspaceId: string;
}

export interface DescribeWorkspaceSnapshotsResult {
  readonly RebuildSnapshots?: [];
  readonly RestoreSnapshots?: [];
}

export interface DescribeWorkspacesConnectionStatusRequest {
  readonly WorkspaceIds?: [];
  readonly NextToken?: string;
}

export interface DescribeWorkspacesConnectionStatusResult {
  readonly WorkspacesConnectionStatus?: [];
  readonly NextToken?: string;
}

export interface DescribeWorkspacesRequest {
  readonly WorkspaceIds?: [];
  readonly DirectoryId?: string;
  readonly UserName?: string;
  readonly BundleId?: string;
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeWorkspacesResult {
  readonly Workspaces?: [];
  readonly NextToken?: string;
}

export interface DisassociateConnectionAliasRequest {
  readonly AliasId: string;
}

export interface DisassociateConnectionAliasResult {
}

export interface DisassociateIpGroupsRequest {
  readonly DirectoryId: string;
  readonly GroupIds: [];
}

export interface DisassociateIpGroupsResult {
}

export interface FailedCreateWorkspaceRequest {
  readonly WorkspaceRequest?: WorkspaceRequest;
  readonly ErrorCode?: string;
  readonly ErrorMessage?: string;
}

export interface FailedWorkspaceChangeRequest {
  readonly WorkspaceId?: string;
  readonly ErrorCode?: string;
  readonly ErrorMessage?: string;
}

export interface ImagePermission {
  readonly SharedAccountId?: string;
}

export interface ImportWorkspaceImageRequest {
  readonly Ec2ImageId: string;
  readonly IngestionProcess: string;
  readonly ImageName: string;
  readonly ImageDescription: string;
  readonly Tags?: [];
  readonly Applications?: [];
}

export interface ImportWorkspaceImageResult {
  readonly ImageId?: string;
}

export interface InvalidParameterValuesException {
  readonly message?: string;
}

export interface InvalidResourceStateException {
  readonly message?: string;
}

export interface IpRuleItem {
  readonly ipRule?: string;
  readonly ruleDesc?: string;
}

export interface ListAvailableManagementCidrRangesRequest {
  readonly ManagementCidrRangeConstraint: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListAvailableManagementCidrRangesResult {
  readonly ManagementCidrRanges?: [];
  readonly NextToken?: string;
}

export interface MigrateWorkspaceRequest {
  readonly SourceWorkspaceId: string;
  readonly BundleId: string;
}

export interface MigrateWorkspaceResult {
  readonly SourceWorkspaceId?: string;
  readonly TargetWorkspaceId?: string;
}

export interface ModificationState {
  readonly Resource?: string;
  readonly State?: string;
}

export interface ModifyAccountRequest {
  readonly DedicatedTenancySupport?: string;
  readonly DedicatedTenancyManagementCidrRange?: string;
}

export interface ModifyAccountResult {
}

export interface ModifyClientPropertiesRequest {
  readonly ResourceId: string;
  readonly ClientProperties: ClientProperties;
}

export interface ModifyClientPropertiesResult {
}

export interface ModifySelfservicePermissionsRequest {
  readonly ResourceId: string;
  readonly SelfservicePermissions: SelfservicePermissions;
}

export interface ModifySelfservicePermissionsResult {
}

export interface ModifyWorkspaceAccessPropertiesRequest {
  readonly ResourceId: string;
  readonly WorkspaceAccessProperties: WorkspaceAccessProperties;
}

export interface ModifyWorkspaceAccessPropertiesResult {
}

export interface ModifyWorkspaceCreationPropertiesRequest {
  readonly ResourceId: string;
  readonly WorkspaceCreationProperties: WorkspaceCreationProperties;
}

export interface ModifyWorkspaceCreationPropertiesResult {
}

export interface ModifyWorkspacePropertiesRequest {
  readonly WorkspaceId: string;
  readonly WorkspaceProperties: WorkspaceProperties;
}

export interface ModifyWorkspacePropertiesResult {
}

export interface ModifyWorkspaceStateRequest {
  readonly WorkspaceId: string;
  readonly WorkspaceState: string;
}

export interface ModifyWorkspaceStateResult {
}

export interface OperatingSystem {
  readonly Type?: string;
}

export interface OperationInProgressException {
  readonly message?: string;
}

export interface OperationNotSupportedException {
  readonly message?: string;
}

export interface RebootRequest {
  readonly WorkspaceId: string;
}

export interface RebootWorkspacesRequest {
  readonly RebootWorkspaceRequests: [];
}

export interface RebootWorkspacesResult {
  readonly FailedRequests?: [];
}

export interface RebuildRequest {
  readonly WorkspaceId: string;
}

export interface RebuildWorkspacesRequest {
  readonly RebuildWorkspaceRequests: [];
}

export interface RebuildWorkspacesResult {
  readonly FailedRequests?: [];
}

export interface RegisterWorkspaceDirectoryRequest {
  readonly DirectoryId: string;
  readonly SubnetIds?: [];
  readonly EnableWorkDocs: boolean;
  readonly EnableSelfService?: boolean;
  readonly Tenancy?: string;
  readonly Tags?: [];
}

export interface RegisterWorkspaceDirectoryResult {
}

export interface ResourceAlreadyExistsException {
  readonly message?: string;
}

export interface ResourceAssociatedException {
  readonly message?: string;
}

export interface ResourceCreationFailedException {
  readonly message?: string;
}

export interface ResourceLimitExceededException {
  readonly message?: string;
}

export interface ResourceNotFoundException {
  readonly message?: string;
  readonly ResourceId?: string;
}

export interface ResourceUnavailableException {
  readonly message?: string;
  readonly ResourceId?: string;
}

export interface RestoreWorkspaceRequest {
  readonly WorkspaceId: string;
}

export interface RestoreWorkspaceResult {
}

export interface RevokeIpRulesRequest {
  readonly GroupId: string;
  readonly UserRules: [];
}

export interface RevokeIpRulesResult {
}

export interface RootStorage {
  readonly Capacity?: string;
}

export interface SelfservicePermissions {
  readonly RestartWorkspace?: string;
  readonly IncreaseVolumeSize?: string;
  readonly ChangeComputeType?: string;
  readonly SwitchRunningMode?: string;
  readonly RebuildWorkspace?: string;
}

export interface Snapshot {
  readonly SnapshotTime?: Date;
}

export interface StartRequest {
  readonly WorkspaceId?: string;
}

export interface StartWorkspacesRequest {
  readonly StartWorkspaceRequests: [];
}

export interface StartWorkspacesResult {
  readonly FailedRequests?: [];
}

export interface StopRequest {
  readonly WorkspaceId?: string;
}

export interface StopWorkspacesRequest {
  readonly StopWorkspaceRequests: [];
}

export interface StopWorkspacesResult {
  readonly FailedRequests?: [];
}

export interface Tag {
  readonly Key: string;
  readonly Value?: string;
}

export interface TerminateRequest {
  readonly WorkspaceId: string;
}

export interface TerminateWorkspacesRequest {
  readonly TerminateWorkspaceRequests: [];
}

export interface TerminateWorkspacesResult {
  readonly FailedRequests?: [];
}

export interface UnsupportedNetworkConfigurationException {
  readonly message?: string;
}

export interface UnsupportedWorkspaceConfigurationException {
  readonly message?: string;
}

export interface UpdateConnectionAliasPermissionRequest {
  readonly AliasId: string;
  readonly ConnectionAliasPermission: ConnectionAliasPermission;
}

export interface UpdateConnectionAliasPermissionResult {
}

export interface UpdateResult {
  readonly UpdateAvailable?: boolean;
  readonly Description?: string;
}

export interface UpdateRulesOfIpGroupRequest {
  readonly GroupId: string;
  readonly UserRules: [];
}

export interface UpdateRulesOfIpGroupResult {
}

export interface UpdateWorkspaceBundleRequest {
  readonly BundleId?: string;
  readonly ImageId?: string;
}

export interface UpdateWorkspaceBundleResult {
}

export interface UpdateWorkspaceImagePermissionRequest {
  readonly ImageId: string;
  readonly AllowCopyImage: boolean;
  readonly SharedAccountId: string;
}

export interface UpdateWorkspaceImagePermissionResult {
}

export interface UserStorage {
  readonly Capacity?: string;
}

export interface Workspace {
  readonly WorkspaceId?: string;
  readonly DirectoryId?: string;
  readonly UserName?: string;
  readonly IpAddress?: string;
  readonly State?: string;
  readonly BundleId?: string;
  readonly SubnetId?: string;
  readonly ErrorMessage?: string;
  readonly ErrorCode?: string;
  readonly ComputerName?: string;
  readonly VolumeEncryptionKey?: string;
  readonly UserVolumeEncryptionEnabled?: boolean;
  readonly RootVolumeEncryptionEnabled?: boolean;
  readonly WorkspaceProperties?: WorkspaceProperties;
  readonly ModificationStates?: [];
}

export interface WorkspaceAccessProperties {
  readonly DeviceTypeWindows?: string;
  readonly DeviceTypeOsx?: string;
  readonly DeviceTypeWeb?: string;
  readonly DeviceTypeIos?: string;
  readonly DeviceTypeAndroid?: string;
  readonly DeviceTypeChromeOs?: string;
  readonly DeviceTypeZeroClient?: string;
  readonly DeviceTypeLinux?: string;
}

export interface WorkspaceBundle {
  readonly BundleId?: string;
  readonly Name?: string;
  readonly Owner?: string;
  readonly Description?: string;
  readonly ImageId?: string;
  readonly RootStorage?: RootStorage;
  readonly UserStorage?: UserStorage;
  readonly ComputeType?: ComputeType;
  readonly LastUpdatedTime?: Date;
  readonly CreationTime?: Date;
}

export interface WorkspaceConnectionStatus {
  readonly WorkspaceId?: string;
  readonly ConnectionState?: string;
  readonly ConnectionStateCheckTimestamp?: Date;
  readonly LastKnownUserConnectionTimestamp?: Date;
}

export interface WorkspaceCreationProperties {
  readonly EnableWorkDocs?: boolean;
  readonly EnableInternetAccess?: boolean;
  readonly DefaultOu?: string;
  readonly CustomSecurityGroupId?: string;
  readonly UserEnabledAsLocalAdministrator?: boolean;
  readonly EnableMaintenanceMode?: boolean;
}

export interface WorkspaceDirectory {
  readonly DirectoryId?: string;
  readonly Alias?: string;
  readonly DirectoryName?: string;
  readonly RegistrationCode?: string;
  readonly SubnetIds?: [];
  readonly DnsIpAddresses?: [];
  readonly CustomerUserName?: string;
  readonly IamRoleId?: string;
  readonly DirectoryType?: string;
  readonly WorkspaceSecurityGroupId?: string;
  readonly State?: string;
  readonly WorkspaceCreationProperties?: DefaultWorkspaceCreationProperties;
  readonly ipGroupIds?: [];
  readonly WorkspaceAccessProperties?: WorkspaceAccessProperties;
  readonly Tenancy?: string;
  readonly SelfservicePermissions?: SelfservicePermissions;
}

export interface WorkspaceImage {
  readonly ImageId?: string;
  readonly Name?: string;
  readonly Description?: string;
  readonly OperatingSystem?: OperatingSystem;
  readonly State?: string;
  readonly RequiredTenancy?: string;
  readonly ErrorCode?: string;
  readonly ErrorMessage?: string;
  readonly Created?: Date;
  readonly OwnerAccountId?: string;
  readonly Updates?: UpdateResult;
}

export interface WorkspaceProperties {
  readonly RunningMode?: string;
  readonly RunningModeAutoStopTimeoutInMinutes?: number;
  readonly RootVolumeSizeGib?: number;
  readonly UserVolumeSizeGib?: number;
  readonly ComputeTypeName?: string;
}

export interface WorkspaceRequest {
  readonly DirectoryId: string;
  readonly UserName: string;
  readonly BundleId: string;
  readonly VolumeEncryptionKey?: string;
  readonly UserVolumeEncryptionEnabled?: boolean;
  readonly RootVolumeEncryptionEnabled?: boolean;
  readonly WorkspaceProperties?: WorkspaceProperties;
  readonly Tags?: [];
}

export interface WorkspacesDefaultRoleNotFoundException {
  readonly message?: string;
}

export interface WorkspacesIpGroup {
  readonly groupId?: string;
  readonly groupName?: string;
  readonly groupDesc?: string;
  readonly userRules?: [];
}


