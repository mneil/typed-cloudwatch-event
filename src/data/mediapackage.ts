/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface ConfigureLogs {
  readonly EgressAccessLogs?: EgressAccessLogs;
  readonly Id: string;
  readonly IngressAccessLogs?: IngressAccessLogs;
}

export interface CreateChannel {
  readonly Description?: string;
  readonly Id: string;
  readonly Tags?: {[key: string]: any};
}

export interface CreateHarvestJob {
  readonly EndTime: string;
  readonly Id: string;
  readonly OriginEndpointId: string;
  readonly S3Destination: S3Destination;
  readonly StartTime: string;
}

export interface CreateOriginEndpoint {
  readonly Authorization?: Authorization;
  readonly ChannelId: string;
  readonly CmafPackage?: CmafPackageCreateOrUpdateParameters;
  readonly DashPackage?: DashPackage;
  readonly Description?: string;
  readonly HlsPackage?: HlsPackage;
  readonly Id: string;
  readonly ManifestName?: string;
  readonly MssPackage?: MssPackage;
  readonly Origination?: string;
  readonly StartoverWindowSeconds?: number;
  readonly Tags?: {[key: string]: any};
  readonly TimeDelaySeconds?: number;
  readonly Whitelist?: [];
}

export interface DeleteChannel {
  readonly Id: string;
}

export interface DeleteOriginEndpoint {
  readonly Id: string;
}

export interface DescribeChannel {
  readonly Id: string;
}

export interface DescribeHarvestJob {
  readonly Id: string;
}

export interface DescribeOriginEndpoint {
  readonly Id: string;
}

export interface ListChannels {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListHarvestJobs {
  readonly IncludeChannelId?: string;
  readonly IncludeStatus?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListOriginEndpoints {
  readonly ChannelId?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListTagsForResource {
  readonly ResourceArn: string;
}

export interface RotateChannelCredentials {
  readonly Id: string;
}

export interface RotateIngestEndpointCredentials {
  readonly Id: string;
  readonly IngestEndpointId: string;
}

export interface TagResource {
  readonly ResourceArn: string;
  readonly Tags: {[key: string]: any};
}

export interface UntagResource {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}

export interface UpdateChannel {
  readonly Description?: string;
  readonly Id: string;
}

export interface UpdateOriginEndpoint {
  readonly Authorization?: Authorization;
  readonly CmafPackage?: CmafPackageCreateOrUpdateParameters;
  readonly DashPackage?: DashPackage;
  readonly Description?: string;
  readonly HlsPackage?: HlsPackage;
  readonly Id: string;
  readonly ManifestName?: string;
  readonly MssPackage?: MssPackage;
  readonly Origination?: string;
  readonly StartoverWindowSeconds?: number;
  readonly TimeDelaySeconds?: number;
  readonly Whitelist?: [];
}

export interface Authorization {
  readonly CdnIdentifierSecret: string;
  readonly SecretsRoleArn: string;
}

export interface Channel {
  readonly Arn?: string;
  readonly Description?: string;
  readonly EgressAccessLogs?: EgressAccessLogs;
  readonly HlsIngest?: HlsIngest;
  readonly Id?: string;
  readonly IngressAccessLogs?: IngressAccessLogs;
  readonly Tags?: {[key: string]: any};
}

export interface ChannelCreateParameters {
  readonly Description?: string;
  readonly Id: string;
  readonly Tags?: {[key: string]: any};
}

export interface ChannelList {
  readonly Channels?: [];
  readonly NextToken?: string;
}

export interface ChannelUpdateParameters {
  readonly Description?: string;
}

export interface CmafEncryption {
  readonly ConstantInitializationVector?: string;
  readonly KeyRotationIntervalSeconds?: number;
  readonly SpekeKeyProvider: SpekeKeyProvider;
}

export interface CmafPackage {
  readonly Encryption?: CmafEncryption;
  readonly HlsManifests?: [];
  readonly SegmentDurationSeconds?: number;
  readonly SegmentPrefix?: string;
  readonly StreamSelection?: StreamSelection;
}

export interface CmafPackageCreateOrUpdateParameters {
  readonly Encryption?: CmafEncryption;
  readonly HlsManifests?: [];
  readonly SegmentDurationSeconds?: number;
  readonly SegmentPrefix?: string;
  readonly StreamSelection?: StreamSelection;
}

export interface ConfigureLogsParameters {
  readonly EgressAccessLogs?: EgressAccessLogs;
  readonly IngressAccessLogs?: IngressAccessLogs;
}

export interface ConfigureLogsRequest {
  readonly EgressAccessLogs?: EgressAccessLogs;
  readonly Id: string;
  readonly IngressAccessLogs?: IngressAccessLogs;
}

export interface ConfigureLogsResponse {
  readonly Arn?: string;
  readonly Description?: string;
  readonly EgressAccessLogs?: EgressAccessLogs;
  readonly HlsIngest?: HlsIngest;
  readonly Id?: string;
  readonly IngressAccessLogs?: IngressAccessLogs;
  readonly Tags?: {[key: string]: any};
}

export interface CreateChannelRequest {
  readonly Description?: string;
  readonly Id: string;
  readonly Tags?: {[key: string]: any};
}

export interface CreateChannelResponse {
  readonly Arn?: string;
  readonly Description?: string;
  readonly EgressAccessLogs?: EgressAccessLogs;
  readonly HlsIngest?: HlsIngest;
  readonly Id?: string;
  readonly IngressAccessLogs?: IngressAccessLogs;
  readonly Tags?: {[key: string]: any};
}

export interface CreateHarvestJobRequest {
  readonly EndTime: string;
  readonly Id: string;
  readonly OriginEndpointId: string;
  readonly S3Destination: S3Destination;
  readonly StartTime: string;
}

export interface CreateHarvestJobResponse {
  readonly Arn?: string;
  readonly ChannelId?: string;
  readonly CreatedAt?: string;
  readonly EndTime?: string;
  readonly Id?: string;
  readonly OriginEndpointId?: string;
  readonly S3Destination?: S3Destination;
  readonly StartTime?: string;
  readonly Status?: string;
}

export interface CreateOriginEndpointRequest {
  readonly Authorization?: Authorization;
  readonly ChannelId: string;
  readonly CmafPackage?: CmafPackageCreateOrUpdateParameters;
  readonly DashPackage?: DashPackage;
  readonly Description?: string;
  readonly HlsPackage?: HlsPackage;
  readonly Id: string;
  readonly ManifestName?: string;
  readonly MssPackage?: MssPackage;
  readonly Origination?: string;
  readonly StartoverWindowSeconds?: number;
  readonly Tags?: {[key: string]: any};
  readonly TimeDelaySeconds?: number;
  readonly Whitelist?: [];
}

export interface CreateOriginEndpointResponse {
  readonly Arn?: string;
  readonly Authorization?: Authorization;
  readonly ChannelId?: string;
  readonly CmafPackage?: CmafPackage;
  readonly DashPackage?: DashPackage;
  readonly Description?: string;
  readonly HlsPackage?: HlsPackage;
  readonly Id?: string;
  readonly ManifestName?: string;
  readonly MssPackage?: MssPackage;
  readonly Origination?: string;
  readonly StartoverWindowSeconds?: number;
  readonly Tags?: {[key: string]: any};
  readonly TimeDelaySeconds?: number;
  readonly Url?: string;
  readonly Whitelist?: [];
}

export interface DashEncryption {
  readonly KeyRotationIntervalSeconds?: number;
  readonly SpekeKeyProvider: SpekeKeyProvider;
}

export interface DashPackage {
  readonly AdTriggers?: [];
  readonly AdsOnDeliveryRestrictions?: string;
  readonly Encryption?: DashEncryption;
  readonly ManifestLayout?: string;
  readonly ManifestWindowSeconds?: number;
  readonly MinBufferTimeSeconds?: number;
  readonly MinUpdatePeriodSeconds?: number;
  readonly PeriodTriggers?: [];
  readonly Profile?: string;
  readonly SegmentDurationSeconds?: number;
  readonly SegmentTemplateFormat?: string;
  readonly StreamSelection?: StreamSelection;
  readonly SuggestedPresentationDelaySeconds?: number;
  readonly UtcTiming?: string;
  readonly UtcTimingUri?: string;
}

export interface DeleteChannelRequest {
  readonly Id: string;
}

export interface DeleteChannelResponse {
}

export interface DeleteOriginEndpointRequest {
  readonly Id: string;
}

export interface DeleteOriginEndpointResponse {
}

export interface DescribeChannelRequest {
  readonly Id: string;
}

export interface DescribeChannelResponse {
  readonly Arn?: string;
  readonly Description?: string;
  readonly EgressAccessLogs?: EgressAccessLogs;
  readonly HlsIngest?: HlsIngest;
  readonly Id?: string;
  readonly IngressAccessLogs?: IngressAccessLogs;
  readonly Tags?: {[key: string]: any};
}

export interface DescribeHarvestJobRequest {
  readonly Id: string;
}

export interface DescribeHarvestJobResponse {
  readonly Arn?: string;
  readonly ChannelId?: string;
  readonly CreatedAt?: string;
  readonly EndTime?: string;
  readonly Id?: string;
  readonly OriginEndpointId?: string;
  readonly S3Destination?: S3Destination;
  readonly StartTime?: string;
  readonly Status?: string;
}

export interface DescribeOriginEndpointRequest {
  readonly Id: string;
}

export interface DescribeOriginEndpointResponse {
  readonly Arn?: string;
  readonly Authorization?: Authorization;
  readonly ChannelId?: string;
  readonly CmafPackage?: CmafPackage;
  readonly DashPackage?: DashPackage;
  readonly Description?: string;
  readonly HlsPackage?: HlsPackage;
  readonly Id?: string;
  readonly ManifestName?: string;
  readonly MssPackage?: MssPackage;
  readonly Origination?: string;
  readonly StartoverWindowSeconds?: number;
  readonly Tags?: {[key: string]: any};
  readonly TimeDelaySeconds?: number;
  readonly Url?: string;
  readonly Whitelist?: [];
}

export interface EgressAccessLogs {
  readonly LogGroupName?: string;
}

export interface EncryptionContractConfiguration {
  readonly PresetSpeke20Audio: string;
  readonly PresetSpeke20Video: string;
}

export interface ForbiddenException {
  readonly Message?: string;
}

export interface HarvestJob {
  readonly Arn?: string;
  readonly ChannelId?: string;
  readonly CreatedAt?: string;
  readonly EndTime?: string;
  readonly Id?: string;
  readonly OriginEndpointId?: string;
  readonly S3Destination?: S3Destination;
  readonly StartTime?: string;
  readonly Status?: string;
}

export interface HarvestJobCreateParameters {
  readonly EndTime: string;
  readonly Id: string;
  readonly OriginEndpointId: string;
  readonly S3Destination: S3Destination;
  readonly StartTime: string;
}

export interface HarvestJobList {
  readonly HarvestJobs?: [];
  readonly NextToken?: string;
}

export interface HlsEncryption {
  readonly ConstantInitializationVector?: string;
  readonly EncryptionMethod?: string;
  readonly KeyRotationIntervalSeconds?: number;
  readonly RepeatExtXKey?: boolean;
  readonly SpekeKeyProvider: SpekeKeyProvider;
}

export interface HlsIngest {
  readonly IngestEndpoints?: [];
}

export interface HlsManifest {
  readonly AdMarkers?: string;
  readonly Id: string;
  readonly IncludeIframeOnlyStream?: boolean;
  readonly ManifestName?: string;
  readonly PlaylistType?: string;
  readonly PlaylistWindowSeconds?: number;
  readonly ProgramDateTimeIntervalSeconds?: number;
  readonly Url?: string;
}

export interface HlsManifestCreateOrUpdateParameters {
  readonly AdMarkers?: string;
  readonly AdTriggers?: [];
  readonly AdsOnDeliveryRestrictions?: string;
  readonly Id: string;
  readonly IncludeIframeOnlyStream?: boolean;
  readonly ManifestName?: string;
  readonly PlaylistType?: string;
  readonly PlaylistWindowSeconds?: number;
  readonly ProgramDateTimeIntervalSeconds?: number;
}

export interface HlsPackage {
  readonly AdMarkers?: string;
  readonly AdTriggers?: [];
  readonly AdsOnDeliveryRestrictions?: string;
  readonly Encryption?: HlsEncryption;
  readonly IncludeDvbSubtitles?: boolean;
  readonly IncludeIframeOnlyStream?: boolean;
  readonly PlaylistType?: string;
  readonly PlaylistWindowSeconds?: number;
  readonly ProgramDateTimeIntervalSeconds?: number;
  readonly SegmentDurationSeconds?: number;
  readonly StreamSelection?: StreamSelection;
  readonly UseAudioRenditionGroup?: boolean;
}

export interface IngestEndpoint {
  readonly Id?: string;
  readonly Password?: string;
  readonly Url?: string;
  readonly Username?: string;
}

export interface IngressAccessLogs {
  readonly LogGroupName?: string;
}

export interface InternalServerErrorException {
  readonly Message?: string;
}

export interface ListChannelsRequest {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListChannelsResponse {
  readonly Channels?: [];
  readonly NextToken?: string;
}

export interface ListHarvestJobsRequest {
  readonly IncludeChannelId?: string;
  readonly IncludeStatus?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListHarvestJobsResponse {
  readonly HarvestJobs?: [];
  readonly NextToken?: string;
}

export interface ListOriginEndpointsRequest {
  readonly ChannelId?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListOriginEndpointsResponse {
  readonly NextToken?: string;
  readonly OriginEndpoints?: [];
}

export interface ListTagsForResourceRequest {
  readonly ResourceArn: string;
}

export interface ListTagsForResourceResponse {
  readonly Tags?: {[key: string]: any};
}

export interface MssEncryption {
  readonly SpekeKeyProvider: SpekeKeyProvider;
}

export interface MssPackage {
  readonly Encryption?: MssEncryption;
  readonly ManifestWindowSeconds?: number;
  readonly SegmentDurationSeconds?: number;
  readonly StreamSelection?: StreamSelection;
}

export interface NotFoundException {
  readonly Message?: string;
}

export interface OriginEndpoint {
  readonly Arn?: string;
  readonly Authorization?: Authorization;
  readonly ChannelId?: string;
  readonly CmafPackage?: CmafPackage;
  readonly DashPackage?: DashPackage;
  readonly Description?: string;
  readonly HlsPackage?: HlsPackage;
  readonly Id?: string;
  readonly ManifestName?: string;
  readonly MssPackage?: MssPackage;
  readonly Origination?: string;
  readonly StartoverWindowSeconds?: number;
  readonly Tags?: {[key: string]: any};
  readonly TimeDelaySeconds?: number;
  readonly Url?: string;
  readonly Whitelist?: [];
}

export interface OriginEndpointCreateParameters {
  readonly Authorization?: Authorization;
  readonly ChannelId: string;
  readonly CmafPackage?: CmafPackageCreateOrUpdateParameters;
  readonly DashPackage?: DashPackage;
  readonly Description?: string;
  readonly HlsPackage?: HlsPackage;
  readonly Id: string;
  readonly ManifestName?: string;
  readonly MssPackage?: MssPackage;
  readonly Origination?: string;
  readonly StartoverWindowSeconds?: number;
  readonly Tags?: {[key: string]: any};
  readonly TimeDelaySeconds?: number;
  readonly Whitelist?: [];
}

export interface OriginEndpointList {
  readonly NextToken?: string;
  readonly OriginEndpoints?: [];
}

export interface OriginEndpointUpdateParameters {
  readonly Authorization?: Authorization;
  readonly CmafPackage?: CmafPackageCreateOrUpdateParameters;
  readonly DashPackage?: DashPackage;
  readonly Description?: string;
  readonly HlsPackage?: HlsPackage;
  readonly ManifestName?: string;
  readonly MssPackage?: MssPackage;
  readonly Origination?: string;
  readonly StartoverWindowSeconds?: number;
  readonly TimeDelaySeconds?: number;
  readonly Whitelist?: [];
}

export interface RotateChannelCredentialsRequest {
  readonly Id: string;
}

export interface RotateChannelCredentialsResponse {
  readonly Arn?: string;
  readonly Description?: string;
  readonly EgressAccessLogs?: EgressAccessLogs;
  readonly HlsIngest?: HlsIngest;
  readonly Id?: string;
  readonly IngressAccessLogs?: IngressAccessLogs;
  readonly Tags?: {[key: string]: any};
}

export interface RotateIngestEndpointCredentialsRequest {
  readonly Id: string;
  readonly IngestEndpointId: string;
}

export interface RotateIngestEndpointCredentialsResponse {
  readonly Arn?: string;
  readonly Description?: string;
  readonly EgressAccessLogs?: EgressAccessLogs;
  readonly HlsIngest?: HlsIngest;
  readonly Id?: string;
  readonly IngressAccessLogs?: IngressAccessLogs;
  readonly Tags?: {[key: string]: any};
}

export interface S3Destination {
  readonly BucketName: string;
  readonly ManifestKey: string;
  readonly RoleArn: string;
}

export interface ServiceUnavailableException {
  readonly Message?: string;
}

export interface SpekeKeyProvider {
  readonly CertificateArn?: string;
  readonly EncryptionContractConfiguration?: EncryptionContractConfiguration;
  readonly ResourceId: string;
  readonly RoleArn: string;
  readonly SystemIds: [];
  readonly Url: string;
}

export interface StreamSelection {
  readonly MaxVideoBitsPerSecond?: number;
  readonly MinVideoBitsPerSecond?: number;
  readonly StreamOrder?: string;
}

export interface TagResourceRequest {
  readonly ResourceArn: string;
  readonly Tags: {[key: string]: any};
}

export interface TagsModel {
  readonly Tags: {[key: string]: any};
}

export interface TooManyRequestsException {
  readonly Message?: string;
}

export interface UnprocessableEntityException {
  readonly Message?: string;
}

export interface UntagResourceRequest {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}

export interface UpdateChannelRequest {
  readonly Description?: string;
  readonly Id: string;
}

export interface UpdateChannelResponse {
  readonly Arn?: string;
  readonly Description?: string;
  readonly EgressAccessLogs?: EgressAccessLogs;
  readonly HlsIngest?: HlsIngest;
  readonly Id?: string;
  readonly IngressAccessLogs?: IngressAccessLogs;
  readonly Tags?: {[key: string]: any};
}

export interface UpdateOriginEndpointRequest {
  readonly Authorization?: Authorization;
  readonly CmafPackage?: CmafPackageCreateOrUpdateParameters;
  readonly DashPackage?: DashPackage;
  readonly Description?: string;
  readonly HlsPackage?: HlsPackage;
  readonly Id: string;
  readonly ManifestName?: string;
  readonly MssPackage?: MssPackage;
  readonly Origination?: string;
  readonly StartoverWindowSeconds?: number;
  readonly TimeDelaySeconds?: number;
  readonly Whitelist?: [];
}

export interface UpdateOriginEndpointResponse {
  readonly Arn?: string;
  readonly Authorization?: Authorization;
  readonly ChannelId?: string;
  readonly CmafPackage?: CmafPackage;
  readonly DashPackage?: DashPackage;
  readonly Description?: string;
  readonly HlsPackage?: HlsPackage;
  readonly Id?: string;
  readonly ManifestName?: string;
  readonly MssPackage?: MssPackage;
  readonly Origination?: string;
  readonly StartoverWindowSeconds?: number;
  readonly Tags?: {[key: string]: any};
  readonly TimeDelaySeconds?: number;
  readonly Url?: string;
  readonly Whitelist?: [];
}


