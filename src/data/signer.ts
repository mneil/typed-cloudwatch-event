/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AddProfilePermission {
  readonly profileName: string;
  readonly profileVersion?: string;
  readonly action: string;
  readonly principal: string;
  readonly revisionId?: string;
  readonly statementId: string;
}

export interface CancelSigningProfile {
  readonly profileName: string;
}

export interface DescribeSigningJob {
  readonly jobId: string;
}

export interface GetSigningPlatform {
  readonly platformId: string;
}

export interface GetSigningProfile {
  readonly profileName: string;
  readonly profileOwner?: string;
}

export interface ListProfilePermissions {
  readonly profileName: string;
  readonly nextToken?: string;
}

export interface ListSigningJobs {
  readonly status?: string;
  readonly platformId?: string;
  readonly requestedBy?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly isRevoked?: boolean;
  readonly signatureExpiresBefore?: Date;
  readonly signatureExpiresAfter?: Date;
  readonly jobInvoker?: string;
}

export interface ListSigningPlatforms {
  readonly category?: string;
  readonly partner?: string;
  readonly target?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListSigningProfiles {
  readonly includeCanceled?: boolean;
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly platformId?: string;
  readonly statuses?: [];
}

export interface ListTagsForResource {
  readonly resourceArn: string;
}

export interface PutSigningProfile {
  readonly profileName: string;
  readonly signingMaterial?: SigningMaterial;
  readonly signatureValidityPeriod?: SignatureValidityPeriod;
  readonly platformId: string;
  readonly overrides?: SigningPlatformOverrides;
  readonly signingParameters?: {[key: string]: any};
  readonly tags?: {[key: string]: any};
}

export interface RemoveProfilePermission {
  readonly profileName: string;
  readonly revisionId: string;
  readonly statementId: string;
}

export interface RevokeSignature {
  readonly jobId: string;
  readonly jobOwner?: string;
  readonly reason: string;
}

export interface RevokeSigningProfile {
  readonly profileName: string;
  readonly profileVersion: string;
  readonly reason: string;
  readonly effectiveTime: Date;
}

export interface StartSigningJob {
  readonly source: Source;
  readonly destination: Destination;
  readonly profileName: string;
  readonly clientRequestToken: string;
  readonly profileOwner?: string;
}

export interface TagResource {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

export interface UntagResource {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface AccessDeniedException {
  readonly message?: string;
  readonly code?: string;
}

export interface AddProfilePermissionRequest {
  readonly profileName: string;
  readonly profileVersion?: string;
  readonly action: string;
  readonly principal: string;
  readonly revisionId?: string;
  readonly statementId: string;
}

export interface AddProfilePermissionResponse {
  readonly revisionId?: string;
}

export interface BadRequestException {
  readonly message?: string;
  readonly code?: string;
}

export interface CancelSigningProfileRequest {
  readonly profileName: string;
}

export interface ConflictException {
  readonly message?: string;
  readonly code?: string;
}

export interface DescribeSigningJobRequest {
  readonly jobId: string;
}

export interface DescribeSigningJobResponse {
  readonly jobId?: string;
  readonly source?: Source;
  readonly signingMaterial?: SigningMaterial;
  readonly platformId?: string;
  readonly platformDisplayName?: string;
  readonly profileName?: string;
  readonly profileVersion?: string;
  readonly overrides?: SigningPlatformOverrides;
  readonly signingParameters?: {[key: string]: any};
  readonly createdAt?: Date;
  readonly completedAt?: Date;
  readonly signatureExpiresAt?: Date;
  readonly requestedBy?: string;
  readonly status?: string;
  readonly statusReason?: string;
  readonly revocationRecord?: SigningJobRevocationRecord;
  readonly signedObject?: SignedObject;
  readonly jobOwner?: string;
  readonly jobInvoker?: string;
}

export interface Destination {
  readonly s3?: S3Destination;
}

export interface EncryptionAlgorithmOptions {
  readonly allowedValues: [];
  readonly defaultValue: string;
}

export interface GetSigningPlatformRequest {
  readonly platformId: string;
}

export interface GetSigningPlatformResponse {
  readonly platformId?: string;
  readonly displayName?: string;
  readonly partner?: string;
  readonly target?: string;
  readonly category?: string;
  readonly signingConfiguration?: SigningConfiguration;
  readonly signingImageFormat?: SigningImageFormat;
  readonly maxSizeInMB?: number;
  readonly revocationSupported?: boolean;
}

export interface GetSigningProfileRequest {
  readonly profileName: string;
  readonly profileOwner?: string;
}

export interface GetSigningProfileResponse {
  readonly profileName?: string;
  readonly profileVersion?: string;
  readonly profileVersionArn?: string;
  readonly revocationRecord?: SigningProfileRevocationRecord;
  readonly signingMaterial?: SigningMaterial;
  readonly platformId?: string;
  readonly platformDisplayName?: string;
  readonly signatureValidityPeriod?: SignatureValidityPeriod;
  readonly overrides?: SigningPlatformOverrides;
  readonly signingParameters?: {[key: string]: any};
  readonly status?: string;
  readonly statusReason?: string;
  readonly arn?: string;
  readonly tags?: {[key: string]: any};
}

export interface HashAlgorithmOptions {
  readonly allowedValues: [];
  readonly defaultValue: string;
}

export interface InternalServiceErrorException {
  readonly message?: string;
  readonly code?: string;
}

export interface ListProfilePermissionsRequest {
  readonly profileName: string;
  readonly nextToken?: string;
}

export interface ListProfilePermissionsResponse {
  readonly revisionId?: string;
  readonly policySizeBytes?: number;
  readonly permissions?: [];
  readonly nextToken?: string;
}

export interface ListSigningJobsRequest {
  readonly status?: string;
  readonly platformId?: string;
  readonly requestedBy?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly isRevoked?: boolean;
  readonly signatureExpiresBefore?: Date;
  readonly signatureExpiresAfter?: Date;
  readonly jobInvoker?: string;
}

export interface ListSigningJobsResponse {
  readonly jobs?: [];
  readonly nextToken?: string;
}

export interface ListSigningPlatformsRequest {
  readonly category?: string;
  readonly partner?: string;
  readonly target?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListSigningPlatformsResponse {
  readonly platforms?: [];
  readonly nextToken?: string;
}

export interface ListSigningProfilesRequest {
  readonly includeCanceled?: boolean;
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly platformId?: string;
  readonly statuses?: [];
}

export interface ListSigningProfilesResponse {
  readonly profiles?: [];
  readonly nextToken?: string;
}

export interface ListTagsForResourceRequest {
  readonly resourceArn: string;
}

export interface ListTagsForResourceResponse {
  readonly tags?: {[key: string]: any};
}

export interface NotFoundException {
  readonly message?: string;
  readonly code?: string;
}

export interface Permission {
  readonly action?: string;
  readonly principal?: string;
  readonly statementId?: string;
  readonly profileVersion?: string;
}

export interface PutSigningProfileRequest {
  readonly profileName: string;
  readonly signingMaterial?: SigningMaterial;
  readonly signatureValidityPeriod?: SignatureValidityPeriod;
  readonly platformId: string;
  readonly overrides?: SigningPlatformOverrides;
  readonly signingParameters?: {[key: string]: any};
  readonly tags?: {[key: string]: any};
}

export interface PutSigningProfileResponse {
  readonly arn?: string;
  readonly profileVersion?: string;
  readonly profileVersionArn?: string;
}

export interface RemoveProfilePermissionRequest {
  readonly profileName: string;
  readonly revisionId: string;
  readonly statementId: string;
}

export interface RemoveProfilePermissionResponse {
  readonly revisionId?: string;
}

export interface ResourceNotFoundException {
  readonly message?: string;
  readonly code?: string;
}

export interface RevokeSignatureRequest {
  readonly jobId: string;
  readonly jobOwner?: string;
  readonly reason: string;
}

export interface RevokeSigningProfileRequest {
  readonly profileName: string;
  readonly profileVersion: string;
  readonly reason: string;
  readonly effectiveTime: Date;
}

export interface S3Destination {
  readonly bucketName?: string;
  readonly prefix?: string;
}

export interface S3SignedObject {
  readonly bucketName?: string;
  readonly key?: string;
}

export interface S3Source {
  readonly bucketName: string;
  readonly key: string;
  readonly version: string;
}

export interface ServiceLimitExceededException {
  readonly message?: string;
  readonly code?: string;
}

export interface SignatureValidityPeriod {
  readonly value?: number;
  readonly type?: string;
}

export interface SignedObject {
  readonly s3?: S3SignedObject;
}

export interface SigningConfiguration {
  readonly encryptionAlgorithmOptions: EncryptionAlgorithmOptions;
  readonly hashAlgorithmOptions: HashAlgorithmOptions;
}

export interface SigningConfigurationOverrides {
  readonly encryptionAlgorithm?: string;
  readonly hashAlgorithm?: string;
}

export interface SigningImageFormat {
  readonly supportedFormats: [];
  readonly defaultFormat: string;
}

export interface SigningJob {
  readonly jobId?: string;
  readonly source?: Source;
  readonly signedObject?: SignedObject;
  readonly signingMaterial?: SigningMaterial;
  readonly createdAt?: Date;
  readonly status?: string;
  readonly isRevoked?: boolean;
  readonly profileName?: string;
  readonly profileVersion?: string;
  readonly platformId?: string;
  readonly platformDisplayName?: string;
  readonly signatureExpiresAt?: Date;
  readonly jobOwner?: string;
  readonly jobInvoker?: string;
}

export interface SigningJobRevocationRecord {
  readonly reason?: string;
  readonly revokedAt?: Date;
  readonly revokedBy?: string;
}

export interface SigningMaterial {
  readonly certificateArn: string;
}

export interface SigningPlatform {
  readonly platformId?: string;
  readonly displayName?: string;
  readonly partner?: string;
  readonly target?: string;
  readonly category?: string;
  readonly signingConfiguration?: SigningConfiguration;
  readonly signingImageFormat?: SigningImageFormat;
  readonly maxSizeInMB?: number;
  readonly revocationSupported?: boolean;
}

export interface SigningPlatformOverrides {
  readonly signingConfiguration?: SigningConfigurationOverrides;
  readonly signingImageFormat?: string;
}

export interface SigningProfile {
  readonly profileName?: string;
  readonly profileVersion?: string;
  readonly profileVersionArn?: string;
  readonly signingMaterial?: SigningMaterial;
  readonly signatureValidityPeriod?: SignatureValidityPeriod;
  readonly platformId?: string;
  readonly platformDisplayName?: string;
  readonly signingParameters?: {[key: string]: any};
  readonly status?: string;
  readonly arn?: string;
  readonly tags?: {[key: string]: any};
}

export interface SigningProfileRevocationRecord {
  readonly revocationEffectiveFrom?: Date;
  readonly revokedAt?: Date;
  readonly revokedBy?: string;
}

export interface Source {
  readonly s3?: S3Source;
}

export interface StartSigningJobRequest {
  readonly source: Source;
  readonly destination: Destination;
  readonly profileName: string;
  readonly clientRequestToken: string;
  readonly profileOwner?: string;
}

export interface StartSigningJobResponse {
  readonly jobId?: string;
  readonly jobOwner?: string;
}

export interface TagResourceRequest {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

export interface TagResourceResponse {
}

export interface ThrottlingException {
  readonly message?: string;
  readonly code?: string;
}

export interface TooManyRequestsException {
  readonly message?: string;
  readonly code?: string;
}

export interface UntagResourceRequest {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface UntagResourceResponse {
}

export interface ValidationException {
  readonly message?: string;
  readonly code?: string;
}


