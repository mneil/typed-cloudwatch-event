/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CreateAccessPoint {
  readonly AccountId: string;
  readonly Name: string;
  readonly Bucket: string;
  readonly VpcConfiguration?: VpcConfiguration;
  readonly PublicAccessBlockConfiguration?: PublicAccessBlockConfiguration;
}
export interface CreateAccessPointForObjectLambda {
  readonly AccountId: string;
  readonly Name: string;
  readonly Configuration: ObjectLambdaConfiguration;
}
export interface CreateBucket {
  readonly ACL?: string;
  readonly Bucket: string;
  readonly CreateBucketConfiguration?: CreateBucketConfiguration;
  readonly GrantFullControl?: string;
  readonly GrantRead?: string;
  readonly GrantReadACP?: string;
  readonly GrantWrite?: string;
  readonly GrantWriteACP?: string;
  readonly ObjectLockEnabledForBucket?: boolean;
  readonly OutpostId?: string;
}
export interface CreateJob {
  readonly AccountId: string;
  readonly ConfirmationRequired?: boolean;
  readonly Operation: JobOperation;
  readonly Report: JobReport;
  readonly ClientRequestToken: string;
  readonly Manifest: JobManifest;
  readonly Description?: string;
  readonly Priority: number;
  readonly RoleArn: string;
  readonly Tags?: [];
}
export interface CreateMultiRegionAccessPoint {
  readonly AccountId: string;
  readonly ClientToken: string;
  readonly Details: CreateMultiRegionAccessPointInput;
}
export interface DeleteAccessPoint {
  readonly AccountId: string;
  readonly Name: string;
}
export interface DeleteAccessPointForObjectLambda {
  readonly AccountId: string;
  readonly Name: string;
}
export interface DeleteAccessPointPolicy {
  readonly AccountId: string;
  readonly Name: string;
}
export interface DeleteAccessPointPolicyForObjectLambda {
  readonly AccountId: string;
  readonly Name: string;
}
export interface DeleteBucket {
  readonly AccountId: string;
  readonly Bucket: string;
}
export interface DeleteBucketLifecycleConfiguration {
  readonly AccountId: string;
  readonly Bucket: string;
}
export interface DeleteBucketPolicy {
  readonly AccountId: string;
  readonly Bucket: string;
}
export interface DeleteBucketTagging {
  readonly AccountId: string;
  readonly Bucket: string;
}
export interface DeleteJobTagging {
  readonly AccountId: string;
  readonly JobId: string;
}
export interface DeleteMultiRegionAccessPoint {
  readonly AccountId: string;
  readonly ClientToken: string;
  readonly Details: DeleteMultiRegionAccessPointInput;
}
export interface DeletePublicAccessBlock {
  readonly AccountId: string;
}
export interface DeleteStorageLensConfiguration {
  readonly ConfigId: string;
  readonly AccountId: string;
}
export interface DeleteStorageLensConfigurationTagging {
  readonly ConfigId: string;
  readonly AccountId: string;
}
export interface DescribeJob {
  readonly AccountId: string;
  readonly JobId: string;
}
export interface DescribeMultiRegionAccessPointOperation {
  readonly AccountId: string;
  readonly RequestTokenARN: string;
}
export interface GetAccessPoint {
  readonly AccountId: string;
  readonly Name: string;
}
export interface GetAccessPointConfigurationForObjectLambda {
  readonly AccountId: string;
  readonly Name: string;
}
export interface GetAccessPointForObjectLambda {
  readonly AccountId: string;
  readonly Name: string;
}
export interface GetAccessPointPolicy {
  readonly AccountId: string;
  readonly Name: string;
}
export interface GetAccessPointPolicyForObjectLambda {
  readonly AccountId: string;
  readonly Name: string;
}
export interface GetAccessPointPolicyStatus {
  readonly AccountId: string;
  readonly Name: string;
}
export interface GetAccessPointPolicyStatusForObjectLambda {
  readonly AccountId: string;
  readonly Name: string;
}
export interface GetBucket {
  readonly AccountId: string;
  readonly Bucket: string;
}
export interface GetBucketLifecycleConfiguration {
  readonly AccountId: string;
  readonly Bucket: string;
}
export interface GetBucketPolicy {
  readonly AccountId: string;
  readonly Bucket: string;
}
export interface GetBucketTagging {
  readonly AccountId: string;
  readonly Bucket: string;
}
export interface GetJobTagging {
  readonly AccountId: string;
  readonly JobId: string;
}
export interface GetMultiRegionAccessPoint {
  readonly AccountId: string;
  readonly Name: string;
}
export interface GetMultiRegionAccessPointPolicy {
  readonly AccountId: string;
  readonly Name: string;
}
export interface GetMultiRegionAccessPointPolicyStatus {
  readonly AccountId: string;
  readonly Name: string;
}
export interface GetPublicAccessBlock {
  readonly AccountId: string;
}
export interface GetStorageLensConfiguration {
  readonly ConfigId: string;
  readonly AccountId: string;
}
export interface GetStorageLensConfigurationTagging {
  readonly ConfigId: string;
  readonly AccountId: string;
}
export interface ListAccessPoints {
  readonly AccountId: string;
  readonly Bucket?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface ListAccessPointsForObjectLambda {
  readonly AccountId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface ListJobs {
  readonly AccountId: string;
  readonly JobStatuses?: [];
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface ListMultiRegionAccessPoints {
  readonly AccountId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface ListRegionalBuckets {
  readonly AccountId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly OutpostId?: string;
}
export interface ListStorageLensConfigurations {
  readonly AccountId: string;
  readonly NextToken?: string;
}
export interface PutAccessPointConfigurationForObjectLambda {
  readonly AccountId: string;
  readonly Name: string;
  readonly Configuration: ObjectLambdaConfiguration;
}
export interface PutAccessPointPolicy {
  readonly AccountId: string;
  readonly Name: string;
  readonly Policy: string;
}
export interface PutAccessPointPolicyForObjectLambda {
  readonly AccountId: string;
  readonly Name: string;
  readonly Policy: string;
}
export interface PutBucketLifecycleConfiguration {
  readonly AccountId: string;
  readonly Bucket: string;
  readonly LifecycleConfiguration?: LifecycleConfiguration;
}
export interface PutBucketPolicy {
  readonly AccountId: string;
  readonly Bucket: string;
  readonly ConfirmRemoveSelfBucketAccess?: boolean;
  readonly Policy: string;
}
export interface PutBucketTagging {
  readonly AccountId: string;
  readonly Bucket: string;
  readonly Tagging: Tagging;
}
export interface PutJobTagging {
  readonly AccountId: string;
  readonly JobId: string;
  readonly Tags: [];
}
export interface PutMultiRegionAccessPointPolicy {
  readonly AccountId: string;
  readonly ClientToken: string;
  readonly Details: PutMultiRegionAccessPointPolicyInput;
}
export interface PutPublicAccessBlock {
  readonly PublicAccessBlockConfiguration: PublicAccessBlockConfiguration;
  readonly AccountId: string;
}
export interface PutStorageLensConfiguration {
  readonly ConfigId: string;
  readonly AccountId: string;
  readonly StorageLensConfiguration: StorageLensConfiguration;
  readonly Tags?: [];
}
export interface PutStorageLensConfigurationTagging {
  readonly ConfigId: string;
  readonly AccountId: string;
  readonly Tags: [];
}
export interface UpdateJobPriority {
  readonly AccountId: string;
  readonly JobId: string;
  readonly Priority: number;
}
export interface UpdateJobStatus {
  readonly AccountId: string;
  readonly JobId: string;
  readonly RequestedJobStatus: string;
  readonly StatusUpdateReason?: string;
}



interface AbortIncompleteMultipartUpload {
  readonly DaysAfterInitiation: number;
}

interface AccessPoint {
  readonly Name: string;
  readonly NetworkOrigin: string;
  readonly VpcConfiguration: VpcConfiguration;
  readonly Bucket: string;
  readonly AccessPointArn: string;
  readonly Alias: string;
}

interface AccountLevel {
  readonly ActivityMetrics: ActivityMetrics;
  readonly BucketLevel: BucketLevel;
}

interface ActivityMetrics {
  readonly IsEnabled: boolean;
}

interface AsyncErrorDetails {
  readonly Code: string;
  readonly Message: string;
  readonly Resource: string;
  readonly RequestId: string;
}

interface AsyncOperation {
  readonly CreationTime: Date;
  readonly Operation: string;
  readonly RequestTokenARN: string;
  readonly RequestParameters: AsyncRequestParameters;
  readonly RequestStatus: string;
  readonly ResponseDetails: AsyncResponseDetails;
}

interface AsyncRequestParameters {
  readonly CreateMultiRegionAccessPointRequest: CreateMultiRegionAccessPointInput;
  readonly DeleteMultiRegionAccessPointRequest: DeleteMultiRegionAccessPointInput;
  readonly PutMultiRegionAccessPointPolicyRequest: PutMultiRegionAccessPointPolicyInput;
}

interface AsyncResponseDetails {
  readonly MultiRegionAccessPointDetails: MultiRegionAccessPointsAsyncResponse;
  readonly ErrorDetails: AsyncErrorDetails;
}

interface AwsLambdaTransformation {
  readonly FunctionArn: string;
  readonly FunctionPayload: string;
}

interface BadRequestException {
  readonly Message: string;
}

interface BucketAlreadyExists {
}

interface BucketAlreadyOwnedByYou {
}

interface BucketLevel {
  readonly ActivityMetrics: ActivityMetrics;
  readonly PrefixLevel: PrefixLevel;
}

interface CloudWatchMetrics {
  readonly IsEnabled: boolean;
}

interface CreateAccessPointForObjectLambdaRequest {
  readonly AccountId: string;
  readonly Name: string;
  readonly Configuration: ObjectLambdaConfiguration;
}

interface CreateAccessPointForObjectLambdaResult {
  readonly ObjectLambdaAccessPointArn: string;
}

interface CreateAccessPointRequest {
  readonly AccountId: string;
  readonly Name: string;
  readonly Bucket: string;
  readonly VpcConfiguration: VpcConfiguration;
  readonly PublicAccessBlockConfiguration: PublicAccessBlockConfiguration;
}

interface CreateAccessPointResult {
  readonly AccessPointArn: string;
  readonly Alias: string;
}

interface CreateBucketConfiguration {
  readonly LocationConstraint: string;
}

interface CreateBucketRequest {
  readonly ACL: string;
  readonly Bucket: string;
  readonly CreateBucketConfiguration: CreateBucketConfiguration;
  readonly GrantFullControl: string;
  readonly GrantRead: string;
  readonly GrantReadACP: string;
  readonly GrantWrite: string;
  readonly GrantWriteACP: string;
  readonly ObjectLockEnabledForBucket: boolean;
  readonly OutpostId: string;
}

interface CreateBucketResult {
  readonly Location: string;
  readonly BucketArn: string;
}

interface CreateJobRequest {
  readonly AccountId: string;
  readonly ConfirmationRequired: boolean;
  readonly Operation: JobOperation;
  readonly Report: JobReport;
  readonly ClientRequestToken: string;
  readonly Manifest: JobManifest;
  readonly Description: string;
  readonly Priority: number;
  readonly RoleArn: string;
  readonly Tags: [];
}

interface CreateJobResult {
  readonly JobId: string;
}

interface CreateMultiRegionAccessPointInput {
  readonly Name: string;
  readonly PublicAccessBlock: PublicAccessBlockConfiguration;
  readonly Regions: [];
}

interface CreateMultiRegionAccessPointRequest {
  readonly AccountId: string;
  readonly ClientToken: string;
  readonly Details: CreateMultiRegionAccessPointInput;
}

interface CreateMultiRegionAccessPointResult {
  readonly RequestTokenARN: string;
}

interface DeleteAccessPointForObjectLambdaRequest {
  readonly AccountId: string;
  readonly Name: string;
}

interface DeleteAccessPointPolicyForObjectLambdaRequest {
  readonly AccountId: string;
  readonly Name: string;
}

interface DeleteAccessPointPolicyRequest {
  readonly AccountId: string;
  readonly Name: string;
}

interface DeleteAccessPointRequest {
  readonly AccountId: string;
  readonly Name: string;
}

interface DeleteBucketLifecycleConfigurationRequest {
  readonly AccountId: string;
  readonly Bucket: string;
}

interface DeleteBucketPolicyRequest {
  readonly AccountId: string;
  readonly Bucket: string;
}

interface DeleteBucketRequest {
  readonly AccountId: string;
  readonly Bucket: string;
}

interface DeleteBucketTaggingRequest {
  readonly AccountId: string;
  readonly Bucket: string;
}

interface DeleteJobTaggingRequest {
  readonly AccountId: string;
  readonly JobId: string;
}

interface DeleteJobTaggingResult {
}

interface DeleteMultiRegionAccessPointInput {
  readonly Name: string;
}

interface DeleteMultiRegionAccessPointRequest {
  readonly AccountId: string;
  readonly ClientToken: string;
  readonly Details: DeleteMultiRegionAccessPointInput;
}

interface DeleteMultiRegionAccessPointResult {
  readonly RequestTokenARN: string;
}

interface DeletePublicAccessBlockRequest {
  readonly AccountId: string;
}

interface DeleteStorageLensConfigurationRequest {
  readonly ConfigId: string;
  readonly AccountId: string;
}

interface DeleteStorageLensConfigurationTaggingRequest {
  readonly ConfigId: string;
  readonly AccountId: string;
}

interface DeleteStorageLensConfigurationTaggingResult {
}

interface DescribeJobRequest {
  readonly AccountId: string;
  readonly JobId: string;
}

interface DescribeJobResult {
  readonly Job: JobDescriptor;
}

interface DescribeMultiRegionAccessPointOperationRequest {
  readonly AccountId: string;
  readonly RequestTokenARN: string;
}

interface DescribeMultiRegionAccessPointOperationResult {
  readonly AsyncOperation: AsyncOperation;
}

interface EstablishedMultiRegionAccessPointPolicy {
  readonly Policy: string;
}

interface Exclude {
  readonly Buckets: [];
  readonly Regions: [];
}

interface GetAccessPointConfigurationForObjectLambdaRequest {
  readonly AccountId: string;
  readonly Name: string;
}

interface GetAccessPointConfigurationForObjectLambdaResult {
  readonly Configuration: ObjectLambdaConfiguration;
}

interface GetAccessPointForObjectLambdaRequest {
  readonly AccountId: string;
  readonly Name: string;
}

interface GetAccessPointForObjectLambdaResult {
  readonly Name: string;
  readonly PublicAccessBlockConfiguration: PublicAccessBlockConfiguration;
  readonly CreationDate: Date;
}

interface GetAccessPointPolicyForObjectLambdaRequest {
  readonly AccountId: string;
  readonly Name: string;
}

interface GetAccessPointPolicyForObjectLambdaResult {
  readonly Policy: string;
}

interface GetAccessPointPolicyRequest {
  readonly AccountId: string;
  readonly Name: string;
}

interface GetAccessPointPolicyResult {
  readonly Policy: string;
}

interface GetAccessPointPolicyStatusForObjectLambdaRequest {
  readonly AccountId: string;
  readonly Name: string;
}

interface GetAccessPointPolicyStatusForObjectLambdaResult {
  readonly PolicyStatus: PolicyStatus;
}

interface GetAccessPointPolicyStatusRequest {
  readonly AccountId: string;
  readonly Name: string;
}

interface GetAccessPointPolicyStatusResult {
  readonly PolicyStatus: PolicyStatus;
}

interface GetAccessPointRequest {
  readonly AccountId: string;
  readonly Name: string;
}

interface GetAccessPointResult {
  readonly Name: string;
  readonly Bucket: string;
  readonly NetworkOrigin: string;
  readonly VpcConfiguration: VpcConfiguration;
  readonly PublicAccessBlockConfiguration: PublicAccessBlockConfiguration;
  readonly CreationDate: Date;
  readonly Alias: string;
  readonly AccessPointArn: string;
  readonly Endpoints: {[key: string]: any};
}

interface GetBucketLifecycleConfigurationRequest {
  readonly AccountId: string;
  readonly Bucket: string;
}

interface GetBucketLifecycleConfigurationResult {
  readonly Rules: [];
}

interface GetBucketPolicyRequest {
  readonly AccountId: string;
  readonly Bucket: string;
}

interface GetBucketPolicyResult {
  readonly Policy: string;
}

interface GetBucketRequest {
  readonly AccountId: string;
  readonly Bucket: string;
}

interface GetBucketResult {
  readonly Bucket: string;
  readonly PublicAccessBlockEnabled: boolean;
  readonly CreationDate: Date;
}

interface GetBucketTaggingRequest {
  readonly AccountId: string;
  readonly Bucket: string;
}

interface GetBucketTaggingResult {
  readonly TagSet: [];
}

interface GetJobTaggingRequest {
  readonly AccountId: string;
  readonly JobId: string;
}

interface GetJobTaggingResult {
  readonly Tags: [];
}

interface GetMultiRegionAccessPointPolicyRequest {
  readonly AccountId: string;
  readonly Name: string;
}

interface GetMultiRegionAccessPointPolicyResult {
  readonly Policy: MultiRegionAccessPointPolicyDocument;
}

interface GetMultiRegionAccessPointPolicyStatusRequest {
  readonly AccountId: string;
  readonly Name: string;
}

interface GetMultiRegionAccessPointPolicyStatusResult {
  readonly Established: PolicyStatus;
}

interface GetMultiRegionAccessPointRequest {
  readonly AccountId: string;
  readonly Name: string;
}

interface GetMultiRegionAccessPointResult {
  readonly AccessPoint: MultiRegionAccessPointReport;
}

interface GetPublicAccessBlockOutput {
  readonly PublicAccessBlockConfiguration: PublicAccessBlockConfiguration;
}

interface GetPublicAccessBlockRequest {
  readonly AccountId: string;
}

interface GetStorageLensConfigurationRequest {
  readonly ConfigId: string;
  readonly AccountId: string;
}

interface GetStorageLensConfigurationResult {
  readonly StorageLensConfiguration: StorageLensConfiguration;
}

interface GetStorageLensConfigurationTaggingRequest {
  readonly ConfigId: string;
  readonly AccountId: string;
}

interface GetStorageLensConfigurationTaggingResult {
  readonly Tags: [];
}

interface IdempotencyException {
  readonly Message: string;
}

interface Include {
  readonly Buckets: [];
  readonly Regions: [];
}

interface InternalServiceException {
  readonly Message: string;
}

interface InvalidNextTokenException {
  readonly Message: string;
}

interface InvalidRequestException {
  readonly Message: string;
}

interface JobDescriptor {
  readonly JobId: string;
  readonly ConfirmationRequired: boolean;
  readonly Description: string;
  readonly JobArn: string;
  readonly Status: string;
  readonly Manifest: JobManifest;
  readonly Operation: JobOperation;
  readonly Priority: number;
  readonly ProgressSummary: JobProgressSummary;
  readonly StatusUpdateReason: string;
  readonly FailureReasons: [];
  readonly Report: JobReport;
  readonly CreationTime: Date;
  readonly TerminationDate: Date;
  readonly RoleArn: string;
  readonly SuspendedDate: Date;
  readonly SuspendedCause: string;
}

interface JobFailure {
  readonly FailureCode: string;
  readonly FailureReason: string;
}

interface JobListDescriptor {
  readonly JobId: string;
  readonly Description: string;
  readonly Operation: string;
  readonly Priority: number;
  readonly Status: string;
  readonly CreationTime: Date;
  readonly TerminationDate: Date;
  readonly ProgressSummary: JobProgressSummary;
}

interface JobManifest {
  readonly Spec: JobManifestSpec;
  readonly Location: JobManifestLocation;
}

interface JobManifestLocation {
  readonly ObjectArn: string;
  readonly ObjectVersionId: string;
  readonly ETag: string;
}

interface JobManifestSpec {
  readonly Format: string;
  readonly Fields: [];
}

interface JobOperation {
  readonly LambdaInvoke: LambdaInvokeOperation;
  readonly S3PutObjectCopy: S3CopyObjectOperation;
  readonly S3PutObjectAcl: S3SetObjectAclOperation;
  readonly S3PutObjectTagging: S3SetObjectTaggingOperation;
  readonly S3DeleteObjectTagging: S3DeleteObjectTaggingOperation;
  readonly S3InitiateRestoreObject: S3InitiateRestoreObjectOperation;
  readonly S3PutObjectLegalHold: S3SetObjectLegalHoldOperation;
  readonly S3PutObjectRetention: S3SetObjectRetentionOperation;
}

interface JobProgressSummary {
  readonly TotalNumberOfTasks: number;
  readonly NumberOfTasksSucceeded: number;
  readonly NumberOfTasksFailed: number;
}

interface JobReport {
  readonly Bucket: string;
  readonly Format: string;
  readonly Enabled: boolean;
  readonly Prefix: string;
  readonly ReportScope: string;
}

interface JobStatusException {
  readonly Message: string;
}

interface LambdaInvokeOperation {
  readonly FunctionArn: string;
}

interface LifecycleConfiguration {
  readonly Rules: [];
}

interface LifecycleExpiration {
  readonly Date: Date;
  readonly Days: number;
  readonly ExpiredObjectDeleteMarker: boolean;
}

interface LifecycleRule {
  readonly Expiration: LifecycleExpiration;
  readonly ID: string;
  readonly Filter: LifecycleRuleFilter;
  readonly Status: string;
  readonly Transitions: [];
  readonly NoncurrentVersionTransitions: [];
  readonly NoncurrentVersionExpiration: NoncurrentVersionExpiration;
  readonly AbortIncompleteMultipartUpload: AbortIncompleteMultipartUpload;
}

interface LifecycleRuleAndOperator {
  readonly Prefix: string;
  readonly Tags: [];
}

interface LifecycleRuleFilter {
  readonly Prefix: string;
  readonly Tag: S3Tag;
  readonly And: LifecycleRuleAndOperator;
}

interface ListAccessPointsForObjectLambdaRequest {
  readonly AccountId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListAccessPointsForObjectLambdaResult {
  readonly ObjectLambdaAccessPointList: [];
  readonly NextToken: string;
}

interface ListAccessPointsRequest {
  readonly AccountId: string;
  readonly Bucket: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListAccessPointsResult {
  readonly AccessPointList: [];
  readonly NextToken: string;
}

interface ListJobsRequest {
  readonly AccountId: string;
  readonly JobStatuses: [];
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListJobsResult {
  readonly NextToken: string;
  readonly Jobs: [];
}

interface ListMultiRegionAccessPointsRequest {
  readonly AccountId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListMultiRegionAccessPointsResult {
  readonly AccessPoints: [];
  readonly NextToken: string;
}

interface ListRegionalBucketsRequest {
  readonly AccountId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly OutpostId: string;
}

interface ListRegionalBucketsResult {
  readonly RegionalBucketList: [];
  readonly NextToken: string;
}

interface ListStorageLensConfigurationEntry {
  readonly Id: string;
  readonly StorageLensArn: string;
  readonly HomeRegion: string;
  readonly IsEnabled: boolean;
}

interface ListStorageLensConfigurationsRequest {
  readonly AccountId: string;
  readonly NextToken: string;
}

interface ListStorageLensConfigurationsResult {
  readonly NextToken: string;
  readonly StorageLensConfigurationList: [];
}

interface MultiRegionAccessPointPolicyDocument {
  readonly Established: EstablishedMultiRegionAccessPointPolicy;
  readonly Proposed: ProposedMultiRegionAccessPointPolicy;
}

interface MultiRegionAccessPointRegionalResponse {
  readonly Name: string;
  readonly RequestStatus: string;
}

interface MultiRegionAccessPointReport {
  readonly Name: string;
  readonly Alias: string;
  readonly CreatedAt: Date;
  readonly PublicAccessBlock: PublicAccessBlockConfiguration;
  readonly Status: string;
  readonly Regions: [];
}

interface MultiRegionAccessPointsAsyncResponse {
  readonly Regions: [];
}

interface NoSuchPublicAccessBlockConfiguration {
  readonly Message: string;
}

interface NoncurrentVersionExpiration {
  readonly NoncurrentDays: number;
}

interface NoncurrentVersionTransition {
  readonly NoncurrentDays: number;
  readonly StorageClass: string;
}

interface NotFoundException {
  readonly Message: string;
}

interface ObjectLambdaAccessPoint {
  readonly Name: string;
  readonly ObjectLambdaAccessPointArn: string;
}

interface ObjectLambdaConfiguration {
  readonly SupportingAccessPoint: string;
  readonly CloudWatchMetricsEnabled: boolean;
  readonly AllowedFeatures: [];
  readonly TransformationConfigurations: [];
}

interface ObjectLambdaContentTransformation {
  readonly AwsLambda: AwsLambdaTransformation;
}

interface ObjectLambdaTransformationConfiguration {
  readonly Actions: [];
  readonly ContentTransformation: ObjectLambdaContentTransformation;
}

interface PolicyStatus {
  readonly IsPublic: boolean;
}

interface PrefixLevel {
  readonly StorageMetrics: PrefixLevelStorageMetrics;
}

interface PrefixLevelStorageMetrics {
  readonly IsEnabled: boolean;
  readonly SelectionCriteria: SelectionCriteria;
}

interface ProposedMultiRegionAccessPointPolicy {
  readonly Policy: string;
}

interface PublicAccessBlockConfiguration {
  readonly BlockPublicAcls: boolean;
  readonly IgnorePublicAcls: boolean;
  readonly BlockPublicPolicy: boolean;
  readonly RestrictPublicBuckets: boolean;
}

interface PutAccessPointConfigurationForObjectLambdaRequest {
  readonly AccountId: string;
  readonly Name: string;
  readonly Configuration: ObjectLambdaConfiguration;
}

interface PutAccessPointPolicyForObjectLambdaRequest {
  readonly AccountId: string;
  readonly Name: string;
  readonly Policy: string;
}

interface PutAccessPointPolicyRequest {
  readonly AccountId: string;
  readonly Name: string;
  readonly Policy: string;
}

interface PutBucketLifecycleConfigurationRequest {
  readonly AccountId: string;
  readonly Bucket: string;
  readonly LifecycleConfiguration: LifecycleConfiguration;
}

interface PutBucketPolicyRequest {
  readonly AccountId: string;
  readonly Bucket: string;
  readonly ConfirmRemoveSelfBucketAccess: boolean;
  readonly Policy: string;
}

interface PutBucketTaggingRequest {
  readonly AccountId: string;
  readonly Bucket: string;
  readonly Tagging: Tagging;
}

interface PutJobTaggingRequest {
  readonly AccountId: string;
  readonly JobId: string;
  readonly Tags: [];
}

interface PutJobTaggingResult {
}

interface PutMultiRegionAccessPointPolicyInput {
  readonly Name: string;
  readonly Policy: string;
}

interface PutMultiRegionAccessPointPolicyRequest {
  readonly AccountId: string;
  readonly ClientToken: string;
  readonly Details: PutMultiRegionAccessPointPolicyInput;
}

interface PutMultiRegionAccessPointPolicyResult {
  readonly RequestTokenARN: string;
}

interface PutPublicAccessBlockRequest {
  readonly PublicAccessBlockConfiguration: PublicAccessBlockConfiguration;
  readonly AccountId: string;
}

interface PutStorageLensConfigurationRequest {
  readonly ConfigId: string;
  readonly AccountId: string;
  readonly StorageLensConfiguration: StorageLensConfiguration;
  readonly Tags: [];
}

interface PutStorageLensConfigurationTaggingRequest {
  readonly ConfigId: string;
  readonly AccountId: string;
  readonly Tags: [];
}

interface PutStorageLensConfigurationTaggingResult {
}

interface Region {
  readonly Bucket: string;
}

interface RegionReport {
  readonly Bucket: string;
  readonly Region: string;
}

interface RegionalBucket {
  readonly Bucket: string;
  readonly BucketArn: string;
  readonly PublicAccessBlockEnabled: boolean;
  readonly CreationDate: Date;
  readonly OutpostId: string;
}

interface S3AccessControlList {
  readonly Owner: S3ObjectOwner;
  readonly Grants: [];
}

interface S3AccessControlPolicy {
  readonly AccessControlList: S3AccessControlList;
  readonly CannedAccessControlList: string;
}

interface S3BucketDestination {
  readonly Format: string;
  readonly OutputSchemaVersion: string;
  readonly AccountId: string;
  readonly Arn: string;
  readonly Prefix: string;
  readonly Encryption: StorageLensDataExportEncryption;
}

interface S3CopyObjectOperation {
  readonly TargetResource: string;
  readonly CannedAccessControlList: string;
  readonly AccessControlGrants: [];
  readonly MetadataDirective: string;
  readonly ModifiedSinceConstraint: Date;
  readonly NewObjectMetadata: S3ObjectMetadata;
  readonly NewObjectTagging: [];
  readonly RedirectLocation: string;
  readonly RequesterPays: boolean;
  readonly StorageClass: string;
  readonly UnModifiedSinceConstraint: Date;
  readonly SSEAwsKmsKeyId: string;
  readonly TargetKeyPrefix: string;
  readonly ObjectLockLegalHoldStatus: string;
  readonly ObjectLockMode: string;
  readonly ObjectLockRetainUntilDate: Date;
  readonly BucketKeyEnabled: boolean;
}

interface S3DeleteObjectTaggingOperation {
}

interface S3Grant {
  readonly Grantee: S3Grantee;
  readonly Permission: string;
}

interface S3Grantee {
  readonly TypeIdentifier: string;
  readonly Identifier: string;
  readonly DisplayName: string;
}

interface S3InitiateRestoreObjectOperation {
  readonly ExpirationInDays: number;
  readonly GlacierJobTier: string;
}

interface S3ObjectLockLegalHold {
  readonly Status: string;
}

interface S3ObjectMetadata {
  readonly CacheControl: string;
  readonly ContentDisposition: string;
  readonly ContentEncoding: string;
  readonly ContentLanguage: string;
  readonly UserMetadata: {[key: string]: any};
  readonly ContentLength: number;
  readonly ContentMD5: string;
  readonly ContentType: string;
  readonly HttpExpiresDate: Date;
  readonly RequesterCharged: boolean;
  readonly SSEAlgorithm: string;
}

interface S3ObjectOwner {
  readonly ID: string;
  readonly DisplayName: string;
}

interface S3Retention {
  readonly RetainUntilDate: Date;
  readonly Mode: string;
}

interface S3SetObjectAclOperation {
  readonly AccessControlPolicy: S3AccessControlPolicy;
}

interface S3SetObjectLegalHoldOperation {
  readonly LegalHold: S3ObjectLockLegalHold;
}

interface S3SetObjectRetentionOperation {
  readonly BypassGovernanceRetention: boolean;
  readonly Retention: S3Retention;
}

interface S3SetObjectTaggingOperation {
  readonly TagSet: [];
}

interface S3Tag {
  readonly Key: string;
  readonly Value: string;
}

interface SSEKMS {
  readonly KeyId: string;
}

interface SSES3 {
}

interface SelectionCriteria {
  readonly Delimiter: string;
  readonly MaxDepth: number;
  readonly MinStorageBytesPercentage: unknown;
}

interface StorageLensAwsOrg {
  readonly Arn: string;
}

interface StorageLensConfiguration {
  readonly Id: string;
  readonly AccountLevel: AccountLevel;
  readonly Include: Include;
  readonly Exclude: Exclude;
  readonly DataExport: StorageLensDataExport;
  readonly IsEnabled: boolean;
  readonly AwsOrg: StorageLensAwsOrg;
  readonly StorageLensArn: string;
}

interface StorageLensDataExport {
  readonly S3BucketDestination: S3BucketDestination;
  readonly CloudWatchMetrics: CloudWatchMetrics;
}

interface StorageLensDataExportEncryption {
  readonly SSES3: SSES3;
  readonly SSEKMS: SSEKMS;
}

interface StorageLensTag {
  readonly Key: string;
  readonly Value: string;
}

interface Tagging {
  readonly TagSet: [];
}

interface TooManyRequestsException {
  readonly Message: string;
}

interface TooManyTagsException {
  readonly Message: string;
}

interface Transition {
  readonly Date: Date;
  readonly Days: number;
  readonly StorageClass: string;
}

interface UpdateJobPriorityRequest {
  readonly AccountId: string;
  readonly JobId: string;
  readonly Priority: number;
}

interface UpdateJobPriorityResult {
  readonly JobId: string;
  readonly Priority: number;
}

interface UpdateJobStatusRequest {
  readonly AccountId: string;
  readonly JobId: string;
  readonly RequestedJobStatus: string;
  readonly StatusUpdateReason: string;
}

interface UpdateJobStatusResult {
  readonly JobId: string;
  readonly Status: string;
  readonly StatusUpdateReason: string;
}

interface VpcConfiguration {
  readonly VpcId: string;
}

