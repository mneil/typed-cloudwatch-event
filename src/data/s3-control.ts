/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CreateAccessPoint {
  readonly AccountId: string;
  readonly Name: string;
  readonly Bucket: string;
  readonly VpcConfiguration?: VpcConfiguration;
  readonly PublicAccessBlockConfiguration?: PublicAccessBlockConfiguration;
}

export interface CreateAccessPointForObjectLambda {
  readonly AccountId: string;
  readonly Name: string;
  readonly Configuration: ObjectLambdaConfiguration;
}

export interface CreateBucket {
  readonly ACL?: string;
  readonly Bucket: string;
  readonly CreateBucketConfiguration?: CreateBucketConfiguration;
  readonly GrantFullControl?: string;
  readonly GrantRead?: string;
  readonly GrantReadACP?: string;
  readonly GrantWrite?: string;
  readonly GrantWriteACP?: string;
  readonly ObjectLockEnabledForBucket?: boolean;
  readonly OutpostId?: string;
}

export interface CreateJob {
  readonly AccountId: string;
  readonly ConfirmationRequired?: boolean;
  readonly Operation: JobOperation;
  readonly Report: JobReport;
  readonly ClientRequestToken: string;
  readonly Manifest: JobManifest;
  readonly Description?: string;
  readonly Priority: number;
  readonly RoleArn: string;
  readonly Tags?: [];
}

export interface CreateMultiRegionAccessPoint {
  readonly AccountId: string;
  readonly ClientToken: string;
  readonly Details: CreateMultiRegionAccessPointInput;
}

export interface DeleteAccessPoint {
  readonly AccountId: string;
  readonly Name: string;
}

export interface DeleteAccessPointForObjectLambda {
  readonly AccountId: string;
  readonly Name: string;
}

export interface DeleteAccessPointPolicy {
  readonly AccountId: string;
  readonly Name: string;
}

export interface DeleteAccessPointPolicyForObjectLambda {
  readonly AccountId: string;
  readonly Name: string;
}

export interface DeleteBucket {
  readonly AccountId: string;
  readonly Bucket: string;
}

export interface DeleteBucketLifecycleConfiguration {
  readonly AccountId: string;
  readonly Bucket: string;
}

export interface DeleteBucketPolicy {
  readonly AccountId: string;
  readonly Bucket: string;
}

export interface DeleteBucketTagging {
  readonly AccountId: string;
  readonly Bucket: string;
}

export interface DeleteJobTagging {
  readonly AccountId: string;
  readonly JobId: string;
}

export interface DeleteMultiRegionAccessPoint {
  readonly AccountId: string;
  readonly ClientToken: string;
  readonly Details: DeleteMultiRegionAccessPointInput;
}

export interface DeletePublicAccessBlock {
  readonly AccountId: string;
}

export interface DeleteStorageLensConfiguration {
  readonly ConfigId: string;
  readonly AccountId: string;
}

export interface DeleteStorageLensConfigurationTagging {
  readonly ConfigId: string;
  readonly AccountId: string;
}

export interface DescribeJob {
  readonly AccountId: string;
  readonly JobId: string;
}

export interface DescribeMultiRegionAccessPointOperation {
  readonly AccountId: string;
  readonly RequestTokenARN: string;
}

export interface GetAccessPoint {
  readonly AccountId: string;
  readonly Name: string;
}

export interface GetAccessPointConfigurationForObjectLambda {
  readonly AccountId: string;
  readonly Name: string;
}

export interface GetAccessPointForObjectLambda {
  readonly AccountId: string;
  readonly Name: string;
}

export interface GetAccessPointPolicy {
  readonly AccountId: string;
  readonly Name: string;
}

export interface GetAccessPointPolicyForObjectLambda {
  readonly AccountId: string;
  readonly Name: string;
}

export interface GetAccessPointPolicyStatus {
  readonly AccountId: string;
  readonly Name: string;
}

export interface GetAccessPointPolicyStatusForObjectLambda {
  readonly AccountId: string;
  readonly Name: string;
}

export interface GetBucket {
  readonly AccountId: string;
  readonly Bucket: string;
}

export interface GetBucketLifecycleConfiguration {
  readonly AccountId: string;
  readonly Bucket: string;
}

export interface GetBucketPolicy {
  readonly AccountId: string;
  readonly Bucket: string;
}

export interface GetBucketTagging {
  readonly AccountId: string;
  readonly Bucket: string;
}

export interface GetJobTagging {
  readonly AccountId: string;
  readonly JobId: string;
}

export interface GetMultiRegionAccessPoint {
  readonly AccountId: string;
  readonly Name: string;
}

export interface GetMultiRegionAccessPointPolicy {
  readonly AccountId: string;
  readonly Name: string;
}

export interface GetMultiRegionAccessPointPolicyStatus {
  readonly AccountId: string;
  readonly Name: string;
}

export interface GetPublicAccessBlock {
  readonly AccountId: string;
}

export interface GetStorageLensConfiguration {
  readonly ConfigId: string;
  readonly AccountId: string;
}

export interface GetStorageLensConfigurationTagging {
  readonly ConfigId: string;
  readonly AccountId: string;
}

export interface ListAccessPoints {
  readonly AccountId: string;
  readonly Bucket?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListAccessPointsForObjectLambda {
  readonly AccountId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListJobs {
  readonly AccountId: string;
  readonly JobStatuses?: [];
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListMultiRegionAccessPoints {
  readonly AccountId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListRegionalBuckets {
  readonly AccountId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly OutpostId?: string;
}

export interface ListStorageLensConfigurations {
  readonly AccountId: string;
  readonly NextToken?: string;
}

export interface PutAccessPointConfigurationForObjectLambda {
  readonly AccountId: string;
  readonly Name: string;
  readonly Configuration: ObjectLambdaConfiguration;
}

export interface PutAccessPointPolicy {
  readonly AccountId: string;
  readonly Name: string;
  readonly Policy: string;
}

export interface PutAccessPointPolicyForObjectLambda {
  readonly AccountId: string;
  readonly Name: string;
  readonly Policy: string;
}

export interface PutBucketLifecycleConfiguration {
  readonly AccountId: string;
  readonly Bucket: string;
  readonly LifecycleConfiguration?: LifecycleConfiguration;
}

export interface PutBucketPolicy {
  readonly AccountId: string;
  readonly Bucket: string;
  readonly ConfirmRemoveSelfBucketAccess?: boolean;
  readonly Policy: string;
}

export interface PutBucketTagging {
  readonly AccountId: string;
  readonly Bucket: string;
  readonly Tagging: Tagging;
}

export interface PutJobTagging {
  readonly AccountId: string;
  readonly JobId: string;
  readonly Tags: [];
}

export interface PutMultiRegionAccessPointPolicy {
  readonly AccountId: string;
  readonly ClientToken: string;
  readonly Details: PutMultiRegionAccessPointPolicyInput;
}

export interface PutPublicAccessBlock {
  readonly PublicAccessBlockConfiguration: PublicAccessBlockConfiguration;
  readonly AccountId: string;
}

export interface PutStorageLensConfiguration {
  readonly ConfigId: string;
  readonly AccountId: string;
  readonly StorageLensConfiguration: StorageLensConfiguration;
  readonly Tags?: [];
}

export interface PutStorageLensConfigurationTagging {
  readonly ConfigId: string;
  readonly AccountId: string;
  readonly Tags: [];
}

export interface UpdateJobPriority {
  readonly AccountId: string;
  readonly JobId: string;
  readonly Priority: number;
}

export interface UpdateJobStatus {
  readonly AccountId: string;
  readonly JobId: string;
  readonly RequestedJobStatus: string;
  readonly StatusUpdateReason?: string;
}

export interface AbortIncompleteMultipartUpload {
  readonly DaysAfterInitiation?: number;
}

export interface AccessPoint {
  readonly Name: string;
  readonly NetworkOrigin: string;
  readonly VpcConfiguration?: VpcConfiguration;
  readonly Bucket: string;
  readonly AccessPointArn?: string;
  readonly Alias?: string;
}

export interface AccountLevel {
  readonly ActivityMetrics?: ActivityMetrics;
  readonly BucketLevel: BucketLevel;
}

export interface ActivityMetrics {
  readonly IsEnabled?: boolean;
}

export interface AsyncErrorDetails {
  readonly Code?: string;
  readonly Message?: string;
  readonly Resource?: string;
  readonly RequestId?: string;
}

export interface AsyncOperation {
  readonly CreationTime?: Date;
  readonly Operation?: string;
  readonly RequestTokenARN?: string;
  readonly RequestParameters?: AsyncRequestParameters;
  readonly RequestStatus?: string;
  readonly ResponseDetails?: AsyncResponseDetails;
}

export interface AsyncRequestParameters {
  readonly CreateMultiRegionAccessPointRequest?: CreateMultiRegionAccessPointInput;
  readonly DeleteMultiRegionAccessPointRequest?: DeleteMultiRegionAccessPointInput;
  readonly PutMultiRegionAccessPointPolicyRequest?: PutMultiRegionAccessPointPolicyInput;
}

export interface AsyncResponseDetails {
  readonly MultiRegionAccessPointDetails?: MultiRegionAccessPointsAsyncResponse;
  readonly ErrorDetails?: AsyncErrorDetails;
}

export interface AwsLambdaTransformation {
  readonly FunctionArn: string;
  readonly FunctionPayload?: string;
}

export interface BadRequestException {
  readonly Message?: string;
}

export interface BucketAlreadyExists {
}

export interface BucketAlreadyOwnedByYou {
}

export interface BucketLevel {
  readonly ActivityMetrics?: ActivityMetrics;
  readonly PrefixLevel?: PrefixLevel;
}

export interface CloudWatchMetrics {
  readonly IsEnabled: boolean;
}

export interface CreateAccessPointForObjectLambdaRequest {
  readonly AccountId: string;
  readonly Name: string;
  readonly Configuration: ObjectLambdaConfiguration;
}

export interface CreateAccessPointForObjectLambdaResult {
  readonly ObjectLambdaAccessPointArn?: string;
}

export interface CreateAccessPointRequest {
  readonly AccountId: string;
  readonly Name: string;
  readonly Bucket: string;
  readonly VpcConfiguration?: VpcConfiguration;
  readonly PublicAccessBlockConfiguration?: PublicAccessBlockConfiguration;
}

export interface CreateAccessPointResult {
  readonly AccessPointArn?: string;
  readonly Alias?: string;
}

export interface CreateBucketConfiguration {
  readonly LocationConstraint?: string;
}

export interface CreateBucketRequest {
  readonly ACL?: string;
  readonly Bucket: string;
  readonly CreateBucketConfiguration?: CreateBucketConfiguration;
  readonly GrantFullControl?: string;
  readonly GrantRead?: string;
  readonly GrantReadACP?: string;
  readonly GrantWrite?: string;
  readonly GrantWriteACP?: string;
  readonly ObjectLockEnabledForBucket?: boolean;
  readonly OutpostId?: string;
}

export interface CreateBucketResult {
  readonly Location?: string;
  readonly BucketArn?: string;
}

export interface CreateJobRequest {
  readonly AccountId: string;
  readonly ConfirmationRequired?: boolean;
  readonly Operation: JobOperation;
  readonly Report: JobReport;
  readonly ClientRequestToken: string;
  readonly Manifest: JobManifest;
  readonly Description?: string;
  readonly Priority: number;
  readonly RoleArn: string;
  readonly Tags?: [];
}

export interface CreateJobResult {
  readonly JobId?: string;
}

export interface CreateMultiRegionAccessPointInput {
  readonly Name: string;
  readonly PublicAccessBlock?: PublicAccessBlockConfiguration;
  readonly Regions: [];
}

export interface CreateMultiRegionAccessPointRequest {
  readonly AccountId: string;
  readonly ClientToken: string;
  readonly Details: CreateMultiRegionAccessPointInput;
}

export interface CreateMultiRegionAccessPointResult {
  readonly RequestTokenARN?: string;
}

export interface DeleteAccessPointForObjectLambdaRequest {
  readonly AccountId: string;
  readonly Name: string;
}

export interface DeleteAccessPointPolicyForObjectLambdaRequest {
  readonly AccountId: string;
  readonly Name: string;
}

export interface DeleteAccessPointPolicyRequest {
  readonly AccountId: string;
  readonly Name: string;
}

export interface DeleteAccessPointRequest {
  readonly AccountId: string;
  readonly Name: string;
}

export interface DeleteBucketLifecycleConfigurationRequest {
  readonly AccountId: string;
  readonly Bucket: string;
}

export interface DeleteBucketPolicyRequest {
  readonly AccountId: string;
  readonly Bucket: string;
}

export interface DeleteBucketRequest {
  readonly AccountId: string;
  readonly Bucket: string;
}

export interface DeleteBucketTaggingRequest {
  readonly AccountId: string;
  readonly Bucket: string;
}

export interface DeleteJobTaggingRequest {
  readonly AccountId: string;
  readonly JobId: string;
}

export interface DeleteJobTaggingResult {
}

export interface DeleteMultiRegionAccessPointInput {
  readonly Name: string;
}

export interface DeleteMultiRegionAccessPointRequest {
  readonly AccountId: string;
  readonly ClientToken: string;
  readonly Details: DeleteMultiRegionAccessPointInput;
}

export interface DeleteMultiRegionAccessPointResult {
  readonly RequestTokenARN?: string;
}

export interface DeletePublicAccessBlockRequest {
  readonly AccountId: string;
}

export interface DeleteStorageLensConfigurationRequest {
  readonly ConfigId: string;
  readonly AccountId: string;
}

export interface DeleteStorageLensConfigurationTaggingRequest {
  readonly ConfigId: string;
  readonly AccountId: string;
}

export interface DeleteStorageLensConfigurationTaggingResult {
}

export interface DescribeJobRequest {
  readonly AccountId: string;
  readonly JobId: string;
}

export interface DescribeJobResult {
  readonly Job?: JobDescriptor;
}

export interface DescribeMultiRegionAccessPointOperationRequest {
  readonly AccountId: string;
  readonly RequestTokenARN: string;
}

export interface DescribeMultiRegionAccessPointOperationResult {
  readonly AsyncOperation?: AsyncOperation;
}

export interface EstablishedMultiRegionAccessPointPolicy {
  readonly Policy?: string;
}

export interface Exclude {
  readonly Buckets?: [];
  readonly Regions?: [];
}

export interface GetAccessPointConfigurationForObjectLambdaRequest {
  readonly AccountId: string;
  readonly Name: string;
}

export interface GetAccessPointConfigurationForObjectLambdaResult {
  readonly Configuration?: ObjectLambdaConfiguration;
}

export interface GetAccessPointForObjectLambdaRequest {
  readonly AccountId: string;
  readonly Name: string;
}

export interface GetAccessPointForObjectLambdaResult {
  readonly Name?: string;
  readonly PublicAccessBlockConfiguration?: PublicAccessBlockConfiguration;
  readonly CreationDate?: Date;
}

export interface GetAccessPointPolicyForObjectLambdaRequest {
  readonly AccountId: string;
  readonly Name: string;
}

export interface GetAccessPointPolicyForObjectLambdaResult {
  readonly Policy?: string;
}

export interface GetAccessPointPolicyRequest {
  readonly AccountId: string;
  readonly Name: string;
}

export interface GetAccessPointPolicyResult {
  readonly Policy?: string;
}

export interface GetAccessPointPolicyStatusForObjectLambdaRequest {
  readonly AccountId: string;
  readonly Name: string;
}

export interface GetAccessPointPolicyStatusForObjectLambdaResult {
  readonly PolicyStatus?: PolicyStatus;
}

export interface GetAccessPointPolicyStatusRequest {
  readonly AccountId: string;
  readonly Name: string;
}

export interface GetAccessPointPolicyStatusResult {
  readonly PolicyStatus?: PolicyStatus;
}

export interface GetAccessPointRequest {
  readonly AccountId: string;
  readonly Name: string;
}

export interface GetAccessPointResult {
  readonly Name?: string;
  readonly Bucket?: string;
  readonly NetworkOrigin?: string;
  readonly VpcConfiguration?: VpcConfiguration;
  readonly PublicAccessBlockConfiguration?: PublicAccessBlockConfiguration;
  readonly CreationDate?: Date;
  readonly Alias?: string;
  readonly AccessPointArn?: string;
  readonly Endpoints?: {[key: string]: any};
}

export interface GetBucketLifecycleConfigurationRequest {
  readonly AccountId: string;
  readonly Bucket: string;
}

export interface GetBucketLifecycleConfigurationResult {
  readonly Rules?: [];
}

export interface GetBucketPolicyRequest {
  readonly AccountId: string;
  readonly Bucket: string;
}

export interface GetBucketPolicyResult {
  readonly Policy?: string;
}

export interface GetBucketRequest {
  readonly AccountId: string;
  readonly Bucket: string;
}

export interface GetBucketResult {
  readonly Bucket?: string;
  readonly PublicAccessBlockEnabled?: boolean;
  readonly CreationDate?: Date;
}

export interface GetBucketTaggingRequest {
  readonly AccountId: string;
  readonly Bucket: string;
}

export interface GetBucketTaggingResult {
  readonly TagSet: [];
}

export interface GetJobTaggingRequest {
  readonly AccountId: string;
  readonly JobId: string;
}

export interface GetJobTaggingResult {
  readonly Tags?: [];
}

export interface GetMultiRegionAccessPointPolicyRequest {
  readonly AccountId: string;
  readonly Name: string;
}

export interface GetMultiRegionAccessPointPolicyResult {
  readonly Policy?: MultiRegionAccessPointPolicyDocument;
}

export interface GetMultiRegionAccessPointPolicyStatusRequest {
  readonly AccountId: string;
  readonly Name: string;
}

export interface GetMultiRegionAccessPointPolicyStatusResult {
  readonly Established?: PolicyStatus;
}

export interface GetMultiRegionAccessPointRequest {
  readonly AccountId: string;
  readonly Name: string;
}

export interface GetMultiRegionAccessPointResult {
  readonly AccessPoint?: MultiRegionAccessPointReport;
}

export interface GetPublicAccessBlockOutput {
  readonly PublicAccessBlockConfiguration?: PublicAccessBlockConfiguration;
}

export interface GetPublicAccessBlockRequest {
  readonly AccountId: string;
}

export interface GetStorageLensConfigurationRequest {
  readonly ConfigId: string;
  readonly AccountId: string;
}

export interface GetStorageLensConfigurationResult {
  readonly StorageLensConfiguration?: StorageLensConfiguration;
}

export interface GetStorageLensConfigurationTaggingRequest {
  readonly ConfigId: string;
  readonly AccountId: string;
}

export interface GetStorageLensConfigurationTaggingResult {
  readonly Tags?: [];
}

export interface IdempotencyException {
  readonly Message?: string;
}

export interface Include {
  readonly Buckets?: [];
  readonly Regions?: [];
}

export interface InternalServiceException {
  readonly Message?: string;
}

export interface InvalidNextTokenException {
  readonly Message?: string;
}

export interface InvalidRequestException {
  readonly Message?: string;
}

export interface JobDescriptor {
  readonly JobId?: string;
  readonly ConfirmationRequired?: boolean;
  readonly Description?: string;
  readonly JobArn?: string;
  readonly Status?: string;
  readonly Manifest?: JobManifest;
  readonly Operation?: JobOperation;
  readonly Priority?: number;
  readonly ProgressSummary?: JobProgressSummary;
  readonly StatusUpdateReason?: string;
  readonly FailureReasons?: [];
  readonly Report?: JobReport;
  readonly CreationTime?: Date;
  readonly TerminationDate?: Date;
  readonly RoleArn?: string;
  readonly SuspendedDate?: Date;
  readonly SuspendedCause?: string;
}

export interface JobFailure {
  readonly FailureCode?: string;
  readonly FailureReason?: string;
}

export interface JobListDescriptor {
  readonly JobId?: string;
  readonly Description?: string;
  readonly Operation?: string;
  readonly Priority?: number;
  readonly Status?: string;
  readonly CreationTime?: Date;
  readonly TerminationDate?: Date;
  readonly ProgressSummary?: JobProgressSummary;
}

export interface JobManifest {
  readonly Spec: JobManifestSpec;
  readonly Location: JobManifestLocation;
}

export interface JobManifestLocation {
  readonly ObjectArn: string;
  readonly ObjectVersionId?: string;
  readonly ETag: string;
}

export interface JobManifestSpec {
  readonly Format: string;
  readonly Fields?: [];
}

export interface JobOperation {
  readonly LambdaInvoke?: LambdaInvokeOperation;
  readonly S3PutObjectCopy?: S3CopyObjectOperation;
  readonly S3PutObjectAcl?: S3SetObjectAclOperation;
  readonly S3PutObjectTagging?: S3SetObjectTaggingOperation;
  readonly S3DeleteObjectTagging?: S3DeleteObjectTaggingOperation;
  readonly S3InitiateRestoreObject?: S3InitiateRestoreObjectOperation;
  readonly S3PutObjectLegalHold?: S3SetObjectLegalHoldOperation;
  readonly S3PutObjectRetention?: S3SetObjectRetentionOperation;
}

export interface JobProgressSummary {
  readonly TotalNumberOfTasks?: number;
  readonly NumberOfTasksSucceeded?: number;
  readonly NumberOfTasksFailed?: number;
}

export interface JobReport {
  readonly Bucket?: string;
  readonly Format?: string;
  readonly Enabled: boolean;
  readonly Prefix?: string;
  readonly ReportScope?: string;
}

export interface JobStatusException {
  readonly Message?: string;
}

export interface LambdaInvokeOperation {
  readonly FunctionArn?: string;
}

export interface LifecycleConfiguration {
  readonly Rules?: [];
}

export interface LifecycleExpiration {
  readonly Date?: Date;
  readonly Days?: number;
  readonly ExpiredObjectDeleteMarker?: boolean;
}

export interface LifecycleRule {
  readonly Expiration?: LifecycleExpiration;
  readonly ID?: string;
  readonly Filter?: LifecycleRuleFilter;
  readonly Status: string;
  readonly Transitions?: [];
  readonly NoncurrentVersionTransitions?: [];
  readonly NoncurrentVersionExpiration?: NoncurrentVersionExpiration;
  readonly AbortIncompleteMultipartUpload?: AbortIncompleteMultipartUpload;
}

export interface LifecycleRuleAndOperator {
  readonly Prefix?: string;
  readonly Tags?: [];
}

export interface LifecycleRuleFilter {
  readonly Prefix?: string;
  readonly Tag?: S3Tag;
  readonly And?: LifecycleRuleAndOperator;
}

export interface ListAccessPointsForObjectLambdaRequest {
  readonly AccountId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListAccessPointsForObjectLambdaResult {
  readonly ObjectLambdaAccessPointList?: [];
  readonly NextToken?: string;
}

export interface ListAccessPointsRequest {
  readonly AccountId: string;
  readonly Bucket?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListAccessPointsResult {
  readonly AccessPointList?: [];
  readonly NextToken?: string;
}

export interface ListJobsRequest {
  readonly AccountId: string;
  readonly JobStatuses?: [];
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListJobsResult {
  readonly NextToken?: string;
  readonly Jobs?: [];
}

export interface ListMultiRegionAccessPointsRequest {
  readonly AccountId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListMultiRegionAccessPointsResult {
  readonly AccessPoints?: [];
  readonly NextToken?: string;
}

export interface ListRegionalBucketsRequest {
  readonly AccountId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly OutpostId?: string;
}

export interface ListRegionalBucketsResult {
  readonly RegionalBucketList?: [];
  readonly NextToken?: string;
}

export interface ListStorageLensConfigurationEntry {
  readonly Id: string;
  readonly StorageLensArn: string;
  readonly HomeRegion: string;
  readonly IsEnabled?: boolean;
}

export interface ListStorageLensConfigurationsRequest {
  readonly AccountId: string;
  readonly NextToken?: string;
}

export interface ListStorageLensConfigurationsResult {
  readonly NextToken?: string;
  readonly StorageLensConfigurationList?: [];
}

export interface MultiRegionAccessPointPolicyDocument {
  readonly Established?: EstablishedMultiRegionAccessPointPolicy;
  readonly Proposed?: ProposedMultiRegionAccessPointPolicy;
}

export interface MultiRegionAccessPointRegionalResponse {
  readonly Name?: string;
  readonly RequestStatus?: string;
}

export interface MultiRegionAccessPointReport {
  readonly Name?: string;
  readonly Alias?: string;
  readonly CreatedAt?: Date;
  readonly PublicAccessBlock?: PublicAccessBlockConfiguration;
  readonly Status?: string;
  readonly Regions?: [];
}

export interface MultiRegionAccessPointsAsyncResponse {
  readonly Regions?: [];
}

export interface NoSuchPublicAccessBlockConfiguration {
  readonly Message?: string;
}

export interface NoncurrentVersionExpiration {
  readonly NoncurrentDays?: number;
}

export interface NoncurrentVersionTransition {
  readonly NoncurrentDays?: number;
  readonly StorageClass?: string;
}

export interface NotFoundException {
  readonly Message?: string;
}

export interface ObjectLambdaAccessPoint {
  readonly Name: string;
  readonly ObjectLambdaAccessPointArn?: string;
}

export interface ObjectLambdaConfiguration {
  readonly SupportingAccessPoint: string;
  readonly CloudWatchMetricsEnabled?: boolean;
  readonly AllowedFeatures?: [];
  readonly TransformationConfigurations: [];
}

export interface ObjectLambdaContentTransformation {
  readonly AwsLambda?: AwsLambdaTransformation;
}

export interface ObjectLambdaTransformationConfiguration {
  readonly Actions: [];
  readonly ContentTransformation: ObjectLambdaContentTransformation;
}

export interface PolicyStatus {
  readonly IsPublic?: boolean;
}

export interface PrefixLevel {
  readonly StorageMetrics: PrefixLevelStorageMetrics;
}

export interface PrefixLevelStorageMetrics {
  readonly IsEnabled?: boolean;
  readonly SelectionCriteria?: SelectionCriteria;
}

export interface ProposedMultiRegionAccessPointPolicy {
  readonly Policy?: string;
}

export interface PublicAccessBlockConfiguration {
  readonly BlockPublicAcls?: boolean;
  readonly IgnorePublicAcls?: boolean;
  readonly BlockPublicPolicy?: boolean;
  readonly RestrictPublicBuckets?: boolean;
}

export interface PutAccessPointConfigurationForObjectLambdaRequest {
  readonly AccountId: string;
  readonly Name: string;
  readonly Configuration: ObjectLambdaConfiguration;
}

export interface PutAccessPointPolicyForObjectLambdaRequest {
  readonly AccountId: string;
  readonly Name: string;
  readonly Policy: string;
}

export interface PutAccessPointPolicyRequest {
  readonly AccountId: string;
  readonly Name: string;
  readonly Policy: string;
}

export interface PutBucketLifecycleConfigurationRequest {
  readonly AccountId: string;
  readonly Bucket: string;
  readonly LifecycleConfiguration?: LifecycleConfiguration;
}

export interface PutBucketPolicyRequest {
  readonly AccountId: string;
  readonly Bucket: string;
  readonly ConfirmRemoveSelfBucketAccess?: boolean;
  readonly Policy: string;
}

export interface PutBucketTaggingRequest {
  readonly AccountId: string;
  readonly Bucket: string;
  readonly Tagging: Tagging;
}

export interface PutJobTaggingRequest {
  readonly AccountId: string;
  readonly JobId: string;
  readonly Tags: [];
}

export interface PutJobTaggingResult {
}

export interface PutMultiRegionAccessPointPolicyInput {
  readonly Name: string;
  readonly Policy: string;
}

export interface PutMultiRegionAccessPointPolicyRequest {
  readonly AccountId: string;
  readonly ClientToken: string;
  readonly Details: PutMultiRegionAccessPointPolicyInput;
}

export interface PutMultiRegionAccessPointPolicyResult {
  readonly RequestTokenARN?: string;
}

export interface PutPublicAccessBlockRequest {
  readonly PublicAccessBlockConfiguration: PublicAccessBlockConfiguration;
  readonly AccountId: string;
}

export interface PutStorageLensConfigurationRequest {
  readonly ConfigId: string;
  readonly AccountId: string;
  readonly StorageLensConfiguration: StorageLensConfiguration;
  readonly Tags?: [];
}

export interface PutStorageLensConfigurationTaggingRequest {
  readonly ConfigId: string;
  readonly AccountId: string;
  readonly Tags: [];
}

export interface PutStorageLensConfigurationTaggingResult {
}

export interface Region {
  readonly Bucket: string;
}

export interface RegionReport {
  readonly Bucket?: string;
  readonly Region?: string;
}

export interface RegionalBucket {
  readonly Bucket: string;
  readonly BucketArn?: string;
  readonly PublicAccessBlockEnabled: boolean;
  readonly CreationDate: Date;
  readonly OutpostId?: string;
}

export interface S3AccessControlList {
  readonly Owner: S3ObjectOwner;
  readonly Grants?: [];
}

export interface S3AccessControlPolicy {
  readonly AccessControlList?: S3AccessControlList;
  readonly CannedAccessControlList?: string;
}

export interface S3BucketDestination {
  readonly Format: string;
  readonly OutputSchemaVersion: string;
  readonly AccountId: string;
  readonly Arn: string;
  readonly Prefix?: string;
  readonly Encryption?: StorageLensDataExportEncryption;
}

export interface S3CopyObjectOperation {
  readonly TargetResource?: string;
  readonly CannedAccessControlList?: string;
  readonly AccessControlGrants?: [];
  readonly MetadataDirective?: string;
  readonly ModifiedSinceConstraint?: Date;
  readonly NewObjectMetadata?: S3ObjectMetadata;
  readonly NewObjectTagging?: [];
  readonly RedirectLocation?: string;
  readonly RequesterPays?: boolean;
  readonly StorageClass?: string;
  readonly UnModifiedSinceConstraint?: Date;
  readonly SSEAwsKmsKeyId?: string;
  readonly TargetKeyPrefix?: string;
  readonly ObjectLockLegalHoldStatus?: string;
  readonly ObjectLockMode?: string;
  readonly ObjectLockRetainUntilDate?: Date;
  readonly BucketKeyEnabled?: boolean;
}

export interface S3DeleteObjectTaggingOperation {
}

export interface S3Grant {
  readonly Grantee?: S3Grantee;
  readonly Permission?: string;
}

export interface S3Grantee {
  readonly TypeIdentifier?: string;
  readonly Identifier?: string;
  readonly DisplayName?: string;
}

export interface S3InitiateRestoreObjectOperation {
  readonly ExpirationInDays?: number;
  readonly GlacierJobTier?: string;
}

export interface S3ObjectLockLegalHold {
  readonly Status: string;
}

export interface S3ObjectMetadata {
  readonly CacheControl?: string;
  readonly ContentDisposition?: string;
  readonly ContentEncoding?: string;
  readonly ContentLanguage?: string;
  readonly UserMetadata?: {[key: string]: any};
  readonly ContentLength?: number;
  readonly ContentMD5?: string;
  readonly ContentType?: string;
  readonly HttpExpiresDate?: Date;
  readonly RequesterCharged?: boolean;
  readonly SSEAlgorithm?: string;
}

export interface S3ObjectOwner {
  readonly ID?: string;
  readonly DisplayName?: string;
}

export interface S3Retention {
  readonly RetainUntilDate?: Date;
  readonly Mode?: string;
}

export interface S3SetObjectAclOperation {
  readonly AccessControlPolicy?: S3AccessControlPolicy;
}

export interface S3SetObjectLegalHoldOperation {
  readonly LegalHold: S3ObjectLockLegalHold;
}

export interface S3SetObjectRetentionOperation {
  readonly BypassGovernanceRetention?: boolean;
  readonly Retention: S3Retention;
}

export interface S3SetObjectTaggingOperation {
  readonly TagSet?: [];
}

export interface S3Tag {
  readonly Key: string;
  readonly Value: string;
}

export interface SSEKMS {
  readonly KeyId: string;
}

export interface SSES3 {
}

export interface SelectionCriteria {
  readonly Delimiter?: string;
  readonly MaxDepth?: number;
  readonly MinStorageBytesPercentage?: unknown;
}

export interface StorageLensAwsOrg {
  readonly Arn: string;
}

export interface StorageLensConfiguration {
  readonly Id: string;
  readonly AccountLevel: AccountLevel;
  readonly Include?: Include;
  readonly Exclude?: Exclude;
  readonly DataExport?: StorageLensDataExport;
  readonly IsEnabled: boolean;
  readonly AwsOrg?: StorageLensAwsOrg;
  readonly StorageLensArn?: string;
}

export interface StorageLensDataExport {
  readonly S3BucketDestination?: S3BucketDestination;
  readonly CloudWatchMetrics?: CloudWatchMetrics;
}

export interface StorageLensDataExportEncryption {
  readonly SSES3?: SSES3;
  readonly SSEKMS?: SSEKMS;
}

export interface StorageLensTag {
  readonly Key: string;
  readonly Value: string;
}

export interface Tagging {
  readonly TagSet: [];
}

export interface TooManyRequestsException {
  readonly Message?: string;
}

export interface TooManyTagsException {
  readonly Message?: string;
}

export interface Transition {
  readonly Date?: Date;
  readonly Days?: number;
  readonly StorageClass?: string;
}

export interface UpdateJobPriorityRequest {
  readonly AccountId: string;
  readonly JobId: string;
  readonly Priority: number;
}

export interface UpdateJobPriorityResult {
  readonly JobId: string;
  readonly Priority: number;
}

export interface UpdateJobStatusRequest {
  readonly AccountId: string;
  readonly JobId: string;
  readonly RequestedJobStatus: string;
  readonly StatusUpdateReason?: string;
}

export interface UpdateJobStatusResult {
  readonly JobId?: string;
  readonly Status?: string;
  readonly StatusUpdateReason?: string;
}

export interface VpcConfiguration {
  readonly VpcId: string;
}


