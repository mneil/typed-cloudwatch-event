/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AssociateApplicationFleet {
  readonly FleetName: string;
  readonly ApplicationArn: string;
}

export interface AssociateFleet {
  readonly FleetName: string;
  readonly StackName: string;
}

export interface BatchAssociateUserStack {
  readonly UserStackAssociations: [];
}

export interface BatchDisassociateUserStack {
  readonly UserStackAssociations: [];
}

export interface CopyImage {
  readonly SourceImageName: string;
  readonly DestinationImageName: string;
  readonly DestinationRegion: string;
  readonly DestinationImageDescription?: string;
}

export interface CreateAppBlock {
  readonly Name: string;
  readonly Description?: string;
  readonly DisplayName?: string;
  readonly SourceS3Location: S3Location;
  readonly SetupScriptDetails: ScriptDetails;
  readonly Tags?: {[key: string]: any};
}

export interface CreateApplication {
  readonly Name: string;
  readonly DisplayName?: string;
  readonly Description?: string;
  readonly IconS3Location: S3Location;
  readonly LaunchPath: string;
  readonly WorkingDirectory?: string;
  readonly LaunchParameters?: string;
  readonly Platforms: [];
  readonly InstanceFamilies: [];
  readonly AppBlockArn: string;
  readonly Tags?: {[key: string]: any};
}

export interface CreateDirectoryConfig {
  readonly DirectoryName: string;
  readonly OrganizationalUnitDistinguishedNames: [];
  readonly ServiceAccountCredentials?: ServiceAccountCredentials;
}

export interface CreateFleet {
  readonly Name: string;
  readonly ImageName?: string;
  readonly ImageArn?: string;
  readonly InstanceType: string;
  readonly FleetType?: string;
  readonly ComputeCapacity?: ComputeCapacity;
  readonly VpcConfig?: VpcConfig;
  readonly MaxUserDurationInSeconds?: number;
  readonly DisconnectTimeoutInSeconds?: number;
  readonly Description?: string;
  readonly DisplayName?: string;
  readonly EnableDefaultInternetAccess?: boolean;
  readonly DomainJoinInfo?: DomainJoinInfo;
  readonly Tags?: {[key: string]: any};
  readonly IdleDisconnectTimeoutInSeconds?: number;
  readonly IamRoleArn?: string;
  readonly StreamView?: string;
  readonly Platform?: string;
  readonly MaxConcurrentSessions?: number;
  readonly UsbDeviceFilterStrings?: [];
}

export interface CreateImageBuilder {
  readonly Name: string;
  readonly ImageName?: string;
  readonly ImageArn?: string;
  readonly InstanceType: string;
  readonly Description?: string;
  readonly DisplayName?: string;
  readonly VpcConfig?: VpcConfig;
  readonly IamRoleArn?: string;
  readonly EnableDefaultInternetAccess?: boolean;
  readonly DomainJoinInfo?: DomainJoinInfo;
  readonly AppstreamAgentVersion?: string;
  readonly Tags?: {[key: string]: any};
  readonly AccessEndpoints?: [];
}

export interface CreateImageBuilderStreamingURL {
  readonly Name: string;
  readonly Validity?: number;
}

export interface CreateStack {
  readonly Name: string;
  readonly Description?: string;
  readonly DisplayName?: string;
  readonly StorageConnectors?: [];
  readonly RedirectURL?: string;
  readonly FeedbackURL?: string;
  readonly UserSettings?: [];
  readonly ApplicationSettings?: ApplicationSettings;
  readonly Tags?: {[key: string]: any};
  readonly AccessEndpoints?: [];
  readonly EmbedHostDomains?: [];
}

export interface CreateStreamingURL {
  readonly StackName: string;
  readonly FleetName: string;
  readonly UserId: string;
  readonly ApplicationId?: string;
  readonly Validity?: number;
  readonly SessionContext?: string;
}

export interface CreateUpdatedImage {
  readonly existingImageName: string;
  readonly newImageName: string;
  readonly newImageDescription?: string;
  readonly newImageDisplayName?: string;
  readonly newImageTags?: {[key: string]: any};
  readonly dryRun?: boolean;
}

export interface CreateUsageReportSubscription {
}

export interface CreateUser {
  readonly UserName: string;
  readonly MessageAction?: string;
  readonly FirstName?: string;
  readonly LastName?: string;
  readonly AuthenticationType: string;
}

export interface DeleteAppBlock {
  readonly Name: string;
}

export interface DeleteApplication {
  readonly Name: string;
}

export interface DeleteDirectoryConfig {
  readonly DirectoryName: string;
}

export interface DeleteFleet {
  readonly Name: string;
}

export interface DeleteImage {
  readonly Name: string;
}

export interface DeleteImageBuilder {
  readonly Name: string;
}

export interface DeleteImagePermissions {
  readonly Name: string;
  readonly SharedAccountId: string;
}

export interface DeleteStack {
  readonly Name: string;
}

export interface DeleteUsageReportSubscription {
}

export interface DeleteUser {
  readonly UserName: string;
  readonly AuthenticationType: string;
}

export interface DescribeAppBlocks {
  readonly Arns?: [];
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface DescribeApplicationFleetAssociations {
  readonly FleetName?: string;
  readonly ApplicationArn?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface DescribeApplications {
  readonly Arns?: [];
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface DescribeDirectoryConfigs {
  readonly DirectoryNames?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface DescribeFleets {
  readonly Names?: [];
  readonly NextToken?: string;
}

export interface DescribeImageBuilders {
  readonly Names?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface DescribeImagePermissions {
  readonly Name: string;
  readonly MaxResults?: number;
  readonly SharedAwsAccountIds?: [];
  readonly NextToken?: string;
}

export interface DescribeImages {
  readonly Names?: [];
  readonly Arns?: [];
  readonly Type?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface DescribeSessions {
  readonly StackName: string;
  readonly FleetName: string;
  readonly UserId?: string;
  readonly NextToken?: string;
  readonly Limit?: number;
  readonly AuthenticationType?: string;
}

export interface DescribeStacks {
  readonly Names?: [];
  readonly NextToken?: string;
}

export interface DescribeUsageReportSubscriptions {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface DescribeUserStackAssociations {
  readonly StackName?: string;
  readonly UserName?: string;
  readonly AuthenticationType?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface DescribeUsers {
  readonly AuthenticationType: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface DisableUser {
  readonly UserName: string;
  readonly AuthenticationType: string;
}

export interface DisassociateApplicationFleet {
  readonly FleetName: string;
  readonly ApplicationArn: string;
}

export interface DisassociateFleet {
  readonly FleetName: string;
  readonly StackName: string;
}

export interface EnableUser {
  readonly UserName: string;
  readonly AuthenticationType: string;
}

export interface ExpireSession {
  readonly SessionId: string;
}

export interface ListAssociatedFleets {
  readonly StackName: string;
  readonly NextToken?: string;
}

export interface ListAssociatedStacks {
  readonly FleetName: string;
  readonly NextToken?: string;
}

export interface ListTagsForResource {
  readonly ResourceArn: string;
}

export interface StartFleet {
  readonly Name: string;
}

export interface StartImageBuilder {
  readonly Name: string;
  readonly AppstreamAgentVersion?: string;
}

export interface StopFleet {
  readonly Name: string;
}

export interface StopImageBuilder {
  readonly Name: string;
}

export interface TagResource {
  readonly ResourceArn: string;
  readonly Tags: {[key: string]: any};
}

export interface UntagResource {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}

export interface UpdateApplication {
  readonly Name: string;
  readonly DisplayName?: string;
  readonly Description?: string;
  readonly IconS3Location?: S3Location;
  readonly LaunchPath?: string;
  readonly WorkingDirectory?: string;
  readonly LaunchParameters?: string;
  readonly AppBlockArn?: string;
  readonly AttributesToDelete?: [];
}

export interface UpdateDirectoryConfig {
  readonly DirectoryName: string;
  readonly OrganizationalUnitDistinguishedNames?: [];
  readonly ServiceAccountCredentials?: ServiceAccountCredentials;
}

export interface UpdateFleet {
  readonly ImageName?: string;
  readonly ImageArn?: string;
  readonly Name?: string;
  readonly InstanceType?: string;
  readonly ComputeCapacity?: ComputeCapacity;
  readonly VpcConfig?: VpcConfig;
  readonly MaxUserDurationInSeconds?: number;
  readonly DisconnectTimeoutInSeconds?: number;
  readonly DeleteVpcConfig?: boolean;
  readonly Description?: string;
  readonly DisplayName?: string;
  readonly EnableDefaultInternetAccess?: boolean;
  readonly DomainJoinInfo?: DomainJoinInfo;
  readonly IdleDisconnectTimeoutInSeconds?: number;
  readonly AttributesToDelete?: [];
  readonly IamRoleArn?: string;
  readonly StreamView?: string;
  readonly Platform?: string;
  readonly MaxConcurrentSessions?: number;
  readonly UsbDeviceFilterStrings?: [];
}

export interface UpdateImagePermissions {
  readonly Name: string;
  readonly SharedAccountId: string;
  readonly ImagePermissions: ImagePermissions;
}

export interface UpdateStack {
  readonly DisplayName?: string;
  readonly Description?: string;
  readonly Name: string;
  readonly StorageConnectors?: [];
  readonly DeleteStorageConnectors?: boolean;
  readonly RedirectURL?: string;
  readonly FeedbackURL?: string;
  readonly AttributesToDelete?: [];
  readonly UserSettings?: [];
  readonly ApplicationSettings?: ApplicationSettings;
  readonly AccessEndpoints?: [];
  readonly EmbedHostDomains?: [];
}

export interface AccessEndpoint {
  readonly EndpointType: string;
  readonly VpceId?: string;
}

export interface AppBlock {
  readonly Name: string;
  readonly Arn: string;
  readonly Description?: string;
  readonly DisplayName?: string;
  readonly SourceS3Location?: S3Location;
  readonly SetupScriptDetails: ScriptDetails;
  readonly CreatedTime?: Date;
}

export interface Application {
  readonly Name?: string;
  readonly DisplayName?: string;
  readonly IconURL?: string;
  readonly LaunchPath?: string;
  readonly LaunchParameters?: string;
  readonly Enabled?: boolean;
  readonly Metadata?: {[key: string]: any};
  readonly WorkingDirectory?: string;
  readonly Description?: string;
  readonly Arn?: string;
  readonly AppBlockArn?: string;
  readonly IconS3Location?: S3Location;
  readonly Platforms?: [];
  readonly InstanceFamilies?: [];
  readonly CreatedTime?: Date;
}

export interface ApplicationFleetAssociation {
  readonly FleetName: string;
  readonly ApplicationArn: string;
}

export interface ApplicationSettings {
  readonly Enabled: boolean;
  readonly SettingsGroup?: string;
}

export interface ApplicationSettingsResponse {
  readonly Enabled?: boolean;
  readonly SettingsGroup?: string;
  readonly S3BucketName?: string;
}

export interface AssociateApplicationFleetRequest {
  readonly FleetName: string;
  readonly ApplicationArn: string;
}

export interface AssociateApplicationFleetResult {
  readonly ApplicationFleetAssociation?: ApplicationFleetAssociation;
}

export interface AssociateFleetRequest {
  readonly FleetName: string;
  readonly StackName: string;
}

export interface AssociateFleetResult {
}

export interface BatchAssociateUserStackRequest {
  readonly UserStackAssociations: [];
}

export interface BatchAssociateUserStackResult {
  readonly errors?: [];
}

export interface BatchDisassociateUserStackRequest {
  readonly UserStackAssociations: [];
}

export interface BatchDisassociateUserStackResult {
  readonly errors?: [];
}

export interface ComputeCapacity {
  readonly DesiredInstances: number;
}

export interface ComputeCapacityStatus {
  readonly Desired: number;
  readonly Running?: number;
  readonly InUse?: number;
  readonly Available?: number;
}

export interface ConcurrentModificationException {
  readonly Message?: string;
}

export interface CopyImageRequest {
  readonly SourceImageName: string;
  readonly DestinationImageName: string;
  readonly DestinationRegion: string;
  readonly DestinationImageDescription?: string;
}

export interface CopyImageResponse {
  readonly DestinationImageName?: string;
}

export interface CreateAppBlockRequest {
  readonly Name: string;
  readonly Description?: string;
  readonly DisplayName?: string;
  readonly SourceS3Location: S3Location;
  readonly SetupScriptDetails: ScriptDetails;
  readonly Tags?: {[key: string]: any};
}

export interface CreateAppBlockResult {
  readonly AppBlock?: AppBlock;
}

export interface CreateApplicationRequest {
  readonly Name: string;
  readonly DisplayName?: string;
  readonly Description?: string;
  readonly IconS3Location: S3Location;
  readonly LaunchPath: string;
  readonly WorkingDirectory?: string;
  readonly LaunchParameters?: string;
  readonly Platforms: [];
  readonly InstanceFamilies: [];
  readonly AppBlockArn: string;
  readonly Tags?: {[key: string]: any};
}

export interface CreateApplicationResult {
  readonly Application?: Application;
}

export interface CreateDirectoryConfigRequest {
  readonly DirectoryName: string;
  readonly OrganizationalUnitDistinguishedNames: [];
  readonly ServiceAccountCredentials?: ServiceAccountCredentials;
}

export interface CreateDirectoryConfigResult {
  readonly DirectoryConfig?: DirectoryConfig;
}

export interface CreateFleetRequest {
  readonly Name: string;
  readonly ImageName?: string;
  readonly ImageArn?: string;
  readonly InstanceType: string;
  readonly FleetType?: string;
  readonly ComputeCapacity?: ComputeCapacity;
  readonly VpcConfig?: VpcConfig;
  readonly MaxUserDurationInSeconds?: number;
  readonly DisconnectTimeoutInSeconds?: number;
  readonly Description?: string;
  readonly DisplayName?: string;
  readonly EnableDefaultInternetAccess?: boolean;
  readonly DomainJoinInfo?: DomainJoinInfo;
  readonly Tags?: {[key: string]: any};
  readonly IdleDisconnectTimeoutInSeconds?: number;
  readonly IamRoleArn?: string;
  readonly StreamView?: string;
  readonly Platform?: string;
  readonly MaxConcurrentSessions?: number;
  readonly UsbDeviceFilterStrings?: [];
}

export interface CreateFleetResult {
  readonly Fleet?: Fleet;
}

export interface CreateImageBuilderRequest {
  readonly Name: string;
  readonly ImageName?: string;
  readonly ImageArn?: string;
  readonly InstanceType: string;
  readonly Description?: string;
  readonly DisplayName?: string;
  readonly VpcConfig?: VpcConfig;
  readonly IamRoleArn?: string;
  readonly EnableDefaultInternetAccess?: boolean;
  readonly DomainJoinInfo?: DomainJoinInfo;
  readonly AppstreamAgentVersion?: string;
  readonly Tags?: {[key: string]: any};
  readonly AccessEndpoints?: [];
}

export interface CreateImageBuilderResult {
  readonly ImageBuilder?: ImageBuilder;
}

export interface CreateImageBuilderStreamingURLRequest {
  readonly Name: string;
  readonly Validity?: number;
}

export interface CreateImageBuilderStreamingURLResult {
  readonly StreamingURL?: string;
  readonly Expires?: Date;
}

export interface CreateStackRequest {
  readonly Name: string;
  readonly Description?: string;
  readonly DisplayName?: string;
  readonly StorageConnectors?: [];
  readonly RedirectURL?: string;
  readonly FeedbackURL?: string;
  readonly UserSettings?: [];
  readonly ApplicationSettings?: ApplicationSettings;
  readonly Tags?: {[key: string]: any};
  readonly AccessEndpoints?: [];
  readonly EmbedHostDomains?: [];
}

export interface CreateStackResult {
  readonly Stack?: Stack;
}

export interface CreateStreamingURLRequest {
  readonly StackName: string;
  readonly FleetName: string;
  readonly UserId: string;
  readonly ApplicationId?: string;
  readonly Validity?: number;
  readonly SessionContext?: string;
}

export interface CreateStreamingURLResult {
  readonly StreamingURL?: string;
  readonly Expires?: Date;
}

export interface CreateUpdatedImageRequest {
  readonly existingImageName: string;
  readonly newImageName: string;
  readonly newImageDescription?: string;
  readonly newImageDisplayName?: string;
  readonly newImageTags?: {[key: string]: any};
  readonly dryRun?: boolean;
}

export interface CreateUpdatedImageResult {
  readonly image?: Image;
  readonly canUpdateImage?: boolean;
}

export interface CreateUsageReportSubscriptionRequest {
}

export interface CreateUsageReportSubscriptionResult {
  readonly S3BucketName?: string;
  readonly Schedule?: string;
}

export interface CreateUserRequest {
  readonly UserName: string;
  readonly MessageAction?: string;
  readonly FirstName?: string;
  readonly LastName?: string;
  readonly AuthenticationType: string;
}

export interface CreateUserResult {
}

export interface DeleteAppBlockRequest {
  readonly Name: string;
}

export interface DeleteAppBlockResult {
}

export interface DeleteApplicationRequest {
  readonly Name: string;
}

export interface DeleteApplicationResult {
}

export interface DeleteDirectoryConfigRequest {
  readonly DirectoryName: string;
}

export interface DeleteDirectoryConfigResult {
}

export interface DeleteFleetRequest {
  readonly Name: string;
}

export interface DeleteFleetResult {
}

export interface DeleteImageBuilderRequest {
  readonly Name: string;
}

export interface DeleteImageBuilderResult {
  readonly ImageBuilder?: ImageBuilder;
}

export interface DeleteImagePermissionsRequest {
  readonly Name: string;
  readonly SharedAccountId: string;
}

export interface DeleteImagePermissionsResult {
}

export interface DeleteImageRequest {
  readonly Name: string;
}

export interface DeleteImageResult {
  readonly Image?: Image;
}

export interface DeleteStackRequest {
  readonly Name: string;
}

export interface DeleteStackResult {
}

export interface DeleteUsageReportSubscriptionRequest {
}

export interface DeleteUsageReportSubscriptionResult {
}

export interface DeleteUserRequest {
  readonly UserName: string;
  readonly AuthenticationType: string;
}

export interface DeleteUserResult {
}

export interface DescribeAppBlocksRequest {
  readonly Arns?: [];
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface DescribeAppBlocksResult {
  readonly AppBlocks?: [];
  readonly NextToken?: string;
}

export interface DescribeApplicationFleetAssociationsRequest {
  readonly FleetName?: string;
  readonly ApplicationArn?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface DescribeApplicationFleetAssociationsResult {
  readonly ApplicationFleetAssociations?: [];
  readonly NextToken?: string;
}

export interface DescribeApplicationsRequest {
  readonly Arns?: [];
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface DescribeApplicationsResult {
  readonly Applications?: [];
  readonly NextToken?: string;
}

export interface DescribeDirectoryConfigsRequest {
  readonly DirectoryNames?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface DescribeDirectoryConfigsResult {
  readonly DirectoryConfigs?: [];
  readonly NextToken?: string;
}

export interface DescribeFleetsRequest {
  readonly Names?: [];
  readonly NextToken?: string;
}

export interface DescribeFleetsResult {
  readonly Fleets?: [];
  readonly NextToken?: string;
}

export interface DescribeImageBuildersRequest {
  readonly Names?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface DescribeImageBuildersResult {
  readonly ImageBuilders?: [];
  readonly NextToken?: string;
}

export interface DescribeImagePermissionsRequest {
  readonly Name: string;
  readonly MaxResults?: number;
  readonly SharedAwsAccountIds?: [];
  readonly NextToken?: string;
}

export interface DescribeImagePermissionsResult {
  readonly Name?: string;
  readonly SharedImagePermissionsList?: [];
  readonly NextToken?: string;
}

export interface DescribeImagesRequest {
  readonly Names?: [];
  readonly Arns?: [];
  readonly Type?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface DescribeImagesResult {
  readonly Images?: [];
  readonly NextToken?: string;
}

export interface DescribeSessionsRequest {
  readonly StackName: string;
  readonly FleetName: string;
  readonly UserId?: string;
  readonly NextToken?: string;
  readonly Limit?: number;
  readonly AuthenticationType?: string;
}

export interface DescribeSessionsResult {
  readonly Sessions?: [];
  readonly NextToken?: string;
}

export interface DescribeStacksRequest {
  readonly Names?: [];
  readonly NextToken?: string;
}

export interface DescribeStacksResult {
  readonly Stacks?: [];
  readonly NextToken?: string;
}

export interface DescribeUsageReportSubscriptionsRequest {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface DescribeUsageReportSubscriptionsResult {
  readonly UsageReportSubscriptions?: [];
  readonly NextToken?: string;
}

export interface DescribeUserStackAssociationsRequest {
  readonly StackName?: string;
  readonly UserName?: string;
  readonly AuthenticationType?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface DescribeUserStackAssociationsResult {
  readonly UserStackAssociations?: [];
  readonly NextToken?: string;
}

export interface DescribeUsersRequest {
  readonly AuthenticationType: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface DescribeUsersResult {
  readonly Users?: [];
  readonly NextToken?: string;
}

export interface DirectoryConfig {
  readonly DirectoryName: string;
  readonly OrganizationalUnitDistinguishedNames?: [];
  readonly ServiceAccountCredentials?: ServiceAccountCredentials;
  readonly CreatedTime?: Date;
}

export interface DisableUserRequest {
  readonly UserName: string;
  readonly AuthenticationType: string;
}

export interface DisableUserResult {
}

export interface DisassociateApplicationFleetRequest {
  readonly FleetName: string;
  readonly ApplicationArn: string;
}

export interface DisassociateApplicationFleetResult {
}

export interface DisassociateFleetRequest {
  readonly FleetName: string;
  readonly StackName: string;
}

export interface DisassociateFleetResult {
}

export interface DomainJoinInfo {
  readonly DirectoryName?: string;
  readonly OrganizationalUnitDistinguishedName?: string;
}

export interface EnableUserRequest {
  readonly UserName: string;
  readonly AuthenticationType: string;
}

export interface EnableUserResult {
}

export interface ExpireSessionRequest {
  readonly SessionId: string;
}

export interface ExpireSessionResult {
}

export interface Fleet {
  readonly Arn: string;
  readonly Name: string;
  readonly DisplayName?: string;
  readonly Description?: string;
  readonly ImageName?: string;
  readonly ImageArn?: string;
  readonly InstanceType: string;
  readonly FleetType?: string;
  readonly ComputeCapacityStatus: ComputeCapacityStatus;
  readonly MaxUserDurationInSeconds?: number;
  readonly DisconnectTimeoutInSeconds?: number;
  readonly State: string;
  readonly VpcConfig?: VpcConfig;
  readonly CreatedTime?: Date;
  readonly FleetErrors?: [];
  readonly EnableDefaultInternetAccess?: boolean;
  readonly DomainJoinInfo?: DomainJoinInfo;
  readonly IdleDisconnectTimeoutInSeconds?: number;
  readonly IamRoleArn?: string;
  readonly StreamView?: string;
  readonly Platform?: string;
  readonly MaxConcurrentSessions?: number;
  readonly UsbDeviceFilterStrings?: [];
}

export interface FleetError {
  readonly ErrorCode?: string;
  readonly ErrorMessage?: string;
}

export interface Image {
  readonly Name: string;
  readonly Arn?: string;
  readonly BaseImageArn?: string;
  readonly DisplayName?: string;
  readonly State?: string;
  readonly Visibility?: string;
  readonly ImageBuilderSupported?: boolean;
  readonly ImageBuilderName?: string;
  readonly Platform?: string;
  readonly Description?: string;
  readonly StateChangeReason?: ImageStateChangeReason;
  readonly Applications?: [];
  readonly CreatedTime?: Date;
  readonly PublicBaseImageReleasedDate?: Date;
  readonly AppstreamAgentVersion?: string;
  readonly ImagePermissions?: ImagePermissions;
  readonly ImageErrors?: [];
}

export interface ImageBuilder {
  readonly Name: string;
  readonly Arn?: string;
  readonly ImageArn?: string;
  readonly Description?: string;
  readonly DisplayName?: string;
  readonly VpcConfig?: VpcConfig;
  readonly InstanceType?: string;
  readonly Platform?: string;
  readonly IamRoleArn?: string;
  readonly State?: string;
  readonly StateChangeReason?: ImageBuilderStateChangeReason;
  readonly CreatedTime?: Date;
  readonly EnableDefaultInternetAccess?: boolean;
  readonly DomainJoinInfo?: DomainJoinInfo;
  readonly NetworkAccessConfiguration?: NetworkAccessConfiguration;
  readonly ImageBuilderErrors?: [];
  readonly AppstreamAgentVersion?: string;
  readonly AccessEndpoints?: [];
}

export interface ImageBuilderStateChangeReason {
  readonly Code?: string;
  readonly Message?: string;
}

export interface ImagePermissions {
  readonly allowFleet?: boolean;
  readonly allowImageBuilder?: boolean;
}

export interface ImageStateChangeReason {
  readonly Code?: string;
  readonly Message?: string;
}

export interface IncompatibleImageException {
  readonly Message?: string;
}

export interface InvalidAccountStatusException {
  readonly Message?: string;
}

export interface InvalidParameterCombinationException {
  readonly Message?: string;
}

export interface InvalidRoleException {
  readonly Message?: string;
}

export interface LastReportGenerationExecutionError {
  readonly ErrorCode?: string;
  readonly ErrorMessage?: string;
}

export interface LimitExceededException {
  readonly Message?: string;
}

export interface ListAssociatedFleetsRequest {
  readonly StackName: string;
  readonly NextToken?: string;
}

export interface ListAssociatedFleetsResult {
  readonly Names?: [];
  readonly NextToken?: string;
}

export interface ListAssociatedStacksRequest {
  readonly FleetName: string;
  readonly NextToken?: string;
}

export interface ListAssociatedStacksResult {
  readonly Names?: [];
  readonly NextToken?: string;
}

export interface ListTagsForResourceRequest {
  readonly ResourceArn: string;
}

export interface ListTagsForResourceResponse {
  readonly Tags?: {[key: string]: any};
}

export interface NetworkAccessConfiguration {
  readonly EniPrivateIpAddress?: string;
  readonly EniId?: string;
}

export interface OperationNotPermittedException {
  readonly Message?: string;
}

export interface RequestLimitExceededException {
  readonly Message?: string;
}

export interface ResourceAlreadyExistsException {
  readonly Message?: string;
}

export interface ResourceError {
  readonly ErrorCode?: string;
  readonly ErrorMessage?: string;
  readonly ErrorTimestamp?: Date;
}

export interface ResourceInUseException {
  readonly Message?: string;
}

export interface ResourceNotAvailableException {
  readonly Message?: string;
}

export interface ResourceNotFoundException {
  readonly Message?: string;
}

export interface S3Location {
  readonly S3Bucket: string;
  readonly S3Key: string;
}

export interface ScriptDetails {
  readonly ScriptS3Location: S3Location;
  readonly ExecutablePath: string;
  readonly ExecutableParameters?: string;
  readonly TimeoutInSeconds: number;
}

export interface ServiceAccountCredentials {
  readonly AccountName: string;
  readonly AccountPassword: string;
}

export interface Session {
  readonly Id: string;
  readonly UserId: string;
  readonly StackName: string;
  readonly FleetName: string;
  readonly State: string;
  readonly ConnectionState?: string;
  readonly StartTime?: Date;
  readonly MaxExpirationTime?: Date;
  readonly AuthenticationType?: string;
  readonly NetworkAccessConfiguration?: NetworkAccessConfiguration;
}

export interface SharedImagePermissions {
  readonly sharedAccountId: string;
  readonly imagePermissions: ImagePermissions;
}

export interface Stack {
  readonly Arn?: string;
  readonly Name: string;
  readonly Description?: string;
  readonly DisplayName?: string;
  readonly CreatedTime?: Date;
  readonly StorageConnectors?: [];
  readonly RedirectURL?: string;
  readonly FeedbackURL?: string;
  readonly StackErrors?: [];
  readonly UserSettings?: [];
  readonly ApplicationSettings?: ApplicationSettingsResponse;
  readonly AccessEndpoints?: [];
  readonly EmbedHostDomains?: [];
}

export interface StackError {
  readonly ErrorCode?: string;
  readonly ErrorMessage?: string;
}

export interface StartFleetRequest {
  readonly Name: string;
}

export interface StartFleetResult {
}

export interface StartImageBuilderRequest {
  readonly Name: string;
  readonly AppstreamAgentVersion?: string;
}

export interface StartImageBuilderResult {
  readonly ImageBuilder?: ImageBuilder;
}

export interface StopFleetRequest {
  readonly Name: string;
}

export interface StopFleetResult {
}

export interface StopImageBuilderRequest {
  readonly Name: string;
}

export interface StopImageBuilderResult {
  readonly ImageBuilder?: ImageBuilder;
}

export interface StorageConnector {
  readonly ConnectorType: string;
  readonly ResourceIdentifier?: string;
  readonly Domains?: [];
}

export interface TagResourceRequest {
  readonly ResourceArn: string;
  readonly Tags: {[key: string]: any};
}

export interface TagResourceResponse {
}

export interface UntagResourceRequest {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}

export interface UntagResourceResponse {
}

export interface UpdateApplicationRequest {
  readonly Name: string;
  readonly DisplayName?: string;
  readonly Description?: string;
  readonly IconS3Location?: S3Location;
  readonly LaunchPath?: string;
  readonly WorkingDirectory?: string;
  readonly LaunchParameters?: string;
  readonly AppBlockArn?: string;
  readonly AttributesToDelete?: [];
}

export interface UpdateApplicationResult {
  readonly Application?: Application;
}

export interface UpdateDirectoryConfigRequest {
  readonly DirectoryName: string;
  readonly OrganizationalUnitDistinguishedNames?: [];
  readonly ServiceAccountCredentials?: ServiceAccountCredentials;
}

export interface UpdateDirectoryConfigResult {
  readonly DirectoryConfig?: DirectoryConfig;
}

export interface UpdateFleetRequest {
  readonly ImageName?: string;
  readonly ImageArn?: string;
  readonly Name?: string;
  readonly InstanceType?: string;
  readonly ComputeCapacity?: ComputeCapacity;
  readonly VpcConfig?: VpcConfig;
  readonly MaxUserDurationInSeconds?: number;
  readonly DisconnectTimeoutInSeconds?: number;
  readonly DeleteVpcConfig?: boolean;
  readonly Description?: string;
  readonly DisplayName?: string;
  readonly EnableDefaultInternetAccess?: boolean;
  readonly DomainJoinInfo?: DomainJoinInfo;
  readonly IdleDisconnectTimeoutInSeconds?: number;
  readonly AttributesToDelete?: [];
  readonly IamRoleArn?: string;
  readonly StreamView?: string;
  readonly Platform?: string;
  readonly MaxConcurrentSessions?: number;
  readonly UsbDeviceFilterStrings?: [];
}

export interface UpdateFleetResult {
  readonly Fleet?: Fleet;
}

export interface UpdateImagePermissionsRequest {
  readonly Name: string;
  readonly SharedAccountId: string;
  readonly ImagePermissions: ImagePermissions;
}

export interface UpdateImagePermissionsResult {
}

export interface UpdateStackRequest {
  readonly DisplayName?: string;
  readonly Description?: string;
  readonly Name: string;
  readonly StorageConnectors?: [];
  readonly DeleteStorageConnectors?: boolean;
  readonly RedirectURL?: string;
  readonly FeedbackURL?: string;
  readonly AttributesToDelete?: [];
  readonly UserSettings?: [];
  readonly ApplicationSettings?: ApplicationSettings;
  readonly AccessEndpoints?: [];
  readonly EmbedHostDomains?: [];
}

export interface UpdateStackResult {
  readonly Stack?: Stack;
}

export interface UsageReportSubscription {
  readonly S3BucketName?: string;
  readonly Schedule?: string;
  readonly LastGeneratedReportDate?: Date;
  readonly SubscriptionErrors?: [];
}

export interface User {
  readonly Arn?: string;
  readonly UserName?: string;
  readonly Enabled?: boolean;
  readonly Status?: string;
  readonly FirstName?: string;
  readonly LastName?: string;
  readonly CreatedTime?: Date;
  readonly AuthenticationType: string;
}

export interface UserSetting {
  readonly Action: string;
  readonly Permission: string;
}

export interface UserStackAssociation {
  readonly StackName: string;
  readonly UserName: string;
  readonly AuthenticationType: string;
  readonly SendEmailNotification?: boolean;
}

export interface UserStackAssociationError {
  readonly UserStackAssociation?: UserStackAssociation;
  readonly ErrorCode?: string;
  readonly ErrorMessage?: string;
}

export interface VpcConfig {
  readonly SubnetIds?: [];
  readonly SecurityGroupIds?: [];
}


