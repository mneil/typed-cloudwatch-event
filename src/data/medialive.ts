/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AcceptInputDeviceTransfer {
  readonly InputDeviceId: string;
}
export interface BatchDelete {
  readonly ChannelIds: [];
  readonly InputIds: [];
  readonly InputSecurityGroupIds: [];
  readonly MultiplexIds: [];
}
export interface BatchStart {
  readonly ChannelIds: [];
  readonly MultiplexIds: [];
}
export interface BatchStop {
  readonly ChannelIds: [];
  readonly MultiplexIds: [];
}
export interface BatchUpdateSchedule {
  readonly ChannelId: string;
  readonly Creates: BatchScheduleActionCreateRequest;
  readonly Deletes: BatchScheduleActionDeleteRequest;
}
export interface CancelInputDeviceTransfer {
  readonly InputDeviceId: string;
}
export interface ClaimDevice {
  readonly Id: string;
}
export interface CreateChannel {
  readonly CdiInputSpecification: CdiInputSpecification;
  readonly ChannelClass: string;
  readonly Destinations: [];
  readonly EncoderSettings: EncoderSettings;
  readonly InputAttachments: [];
  readonly InputSpecification: InputSpecification;
  readonly LogLevel: string;
  readonly Name: string;
  readonly RequestId: string;
  readonly Reserved: string;
  readonly RoleArn: string;
  readonly Tags: {[key: string]: any};
  readonly Vpc: VpcOutputSettings;
}
export interface CreateInput {
  readonly Destinations: [];
  readonly InputDevices: [];
  readonly InputSecurityGroups: [];
  readonly MediaConnectFlows: [];
  readonly Name: string;
  readonly RequestId: string;
  readonly RoleArn: string;
  readonly Sources: [];
  readonly Tags: {[key: string]: any};
  readonly Type: string;
  readonly Vpc: InputVpcRequest;
}
export interface CreateInputSecurityGroup {
  readonly Tags: {[key: string]: any};
  readonly WhitelistRules: [];
}
export interface CreateMultiplex {
  readonly AvailabilityZones: [];
  readonly MultiplexSettings: MultiplexSettings;
  readonly Name: string;
  readonly RequestId: string;
  readonly Tags: {[key: string]: any};
}
export interface CreateMultiplexProgram {
  readonly MultiplexId: string;
  readonly MultiplexProgramSettings: MultiplexProgramSettings;
  readonly ProgramName: string;
  readonly RequestId: string;
}
export interface CreatePartnerInput {
  readonly InputId: string;
  readonly RequestId: string;
  readonly Tags: {[key: string]: any};
}
export interface CreateTags {
  readonly ResourceArn: string;
  readonly Tags: {[key: string]: any};
}
export interface DeleteChannel {
  readonly ChannelId: string;
}
export interface DeleteInput {
  readonly InputId: string;
}
export interface DeleteInputSecurityGroup {
  readonly InputSecurityGroupId: string;
}
export interface DeleteMultiplex {
  readonly MultiplexId: string;
}
export interface DeleteMultiplexProgram {
  readonly MultiplexId: string;
  readonly ProgramName: string;
}
export interface DeleteReservation {
  readonly ReservationId: string;
}
export interface DeleteSchedule {
  readonly ChannelId: string;
}
export interface DeleteTags {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}
export interface DescribeChannel {
  readonly ChannelId: string;
}
export interface DescribeInput {
  readonly InputId: string;
}
export interface DescribeInputDevice {
  readonly InputDeviceId: string;
}
export interface DescribeInputDeviceThumbnail {
  readonly InputDeviceId: string;
  readonly Accept: string;
}
export interface DescribeInputSecurityGroup {
  readonly InputSecurityGroupId: string;
}
export interface DescribeMultiplex {
  readonly MultiplexId: string;
}
export interface DescribeMultiplexProgram {
  readonly MultiplexId: string;
  readonly ProgramName: string;
}
export interface DescribeOffering {
  readonly OfferingId: string;
}
export interface DescribeReservation {
  readonly ReservationId: string;
}
export interface DescribeSchedule {
  readonly ChannelId: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface ListChannels {
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface ListInputDeviceTransfers {
  readonly MaxResults: number;
  readonly NextToken: string;
  readonly TransferType: string;
}
export interface ListInputDevices {
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface ListInputSecurityGroups {
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface ListInputs {
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface ListMultiplexPrograms {
  readonly MaxResults: number;
  readonly MultiplexId: string;
  readonly NextToken: string;
}
export interface ListMultiplexes {
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface ListOfferings {
  readonly ChannelClass: string;
  readonly ChannelConfiguration: string;
  readonly Codec: string;
  readonly Duration: string;
  readonly MaxResults: number;
  readonly MaximumBitrate: string;
  readonly MaximumFramerate: string;
  readonly NextToken: string;
  readonly Resolution: string;
  readonly ResourceType: string;
  readonly SpecialFeature: string;
  readonly VideoQuality: string;
}
export interface ListReservations {
  readonly ChannelClass: string;
  readonly Codec: string;
  readonly MaxResults: number;
  readonly MaximumBitrate: string;
  readonly MaximumFramerate: string;
  readonly NextToken: string;
  readonly Resolution: string;
  readonly ResourceType: string;
  readonly SpecialFeature: string;
  readonly VideoQuality: string;
}
export interface ListTagsForResource {
  readonly ResourceArn: string;
}
export interface PurchaseOffering {
  readonly Count: number;
  readonly Name: string;
  readonly OfferingId: string;
  readonly RequestId: string;
  readonly Start: string;
  readonly Tags: {[key: string]: any};
}
export interface RejectInputDeviceTransfer {
  readonly InputDeviceId: string;
}
export interface StartChannel {
  readonly ChannelId: string;
}
export interface StartMultiplex {
  readonly MultiplexId: string;
}
export interface StopChannel {
  readonly ChannelId: string;
}
export interface StopMultiplex {
  readonly MultiplexId: string;
}
export interface TransferInputDevice {
  readonly InputDeviceId: string;
  readonly TargetCustomerId: string;
  readonly TargetRegion: string;
  readonly TransferMessage: string;
}
export interface UpdateChannel {
  readonly CdiInputSpecification: CdiInputSpecification;
  readonly ChannelId: string;
  readonly Destinations: [];
  readonly EncoderSettings: EncoderSettings;
  readonly InputAttachments: [];
  readonly InputSpecification: InputSpecification;
  readonly LogLevel: string;
  readonly Name: string;
  readonly RoleArn: string;
}
export interface UpdateChannelClass {
  readonly ChannelClass: string;
  readonly ChannelId: string;
  readonly Destinations: [];
}
export interface UpdateInput {
  readonly Destinations: [];
  readonly InputDevices: [];
  readonly InputId: string;
  readonly InputSecurityGroups: [];
  readonly MediaConnectFlows: [];
  readonly Name: string;
  readonly RoleArn: string;
  readonly Sources: [];
}
export interface UpdateInputDevice {
  readonly HdDeviceSettings: InputDeviceConfigurableSettings;
  readonly InputDeviceId: string;
  readonly Name: string;
  readonly UhdDeviceSettings: InputDeviceConfigurableSettings;
}
export interface UpdateInputSecurityGroup {
  readonly InputSecurityGroupId: string;
  readonly Tags: {[key: string]: any};
  readonly WhitelistRules: [];
}
export interface UpdateMultiplex {
  readonly MultiplexId: string;
  readonly MultiplexSettings: MultiplexSettings;
  readonly Name: string;
}
export interface UpdateMultiplexProgram {
  readonly MultiplexId: string;
  readonly MultiplexProgramSettings: MultiplexProgramSettings;
  readonly ProgramName: string;
}
export interface UpdateReservation {
  readonly Name: string;
  readonly ReservationId: string;
}



interface AacSettings {
  readonly Bitrate: unknown;
  readonly CodingMode: string;
  readonly InputType: string;
  readonly Profile: string;
  readonly RateControlMode: string;
  readonly RawFormat: string;
  readonly SampleRate: unknown;
  readonly Spec: string;
  readonly VbrQuality: string;
}

interface Ac3Settings {
  readonly Bitrate: unknown;
  readonly BitstreamMode: string;
  readonly CodingMode: string;
  readonly Dialnorm: number;
  readonly DrcProfile: string;
  readonly LfeFilter: string;
  readonly MetadataControl: string;
}

interface AcceptInputDeviceTransferRequest {
  readonly InputDeviceId: string;
}

interface AcceptInputDeviceTransferResponse {
}

interface AccessDenied {
  readonly Message: string;
}

interface AncillarySourceSettings {
  readonly SourceAncillaryChannelNumber: number;
}

interface ArchiveCdnSettings {
  readonly ArchiveS3Settings: ArchiveS3Settings;
}

interface ArchiveContainerSettings {
  readonly M2tsSettings: M2tsSettings;
  readonly RawSettings: RawSettings;
}

interface ArchiveGroupSettings {
  readonly ArchiveCdnSettings: ArchiveCdnSettings;
  readonly Destination: OutputLocationRef;
  readonly RolloverInterval: number;
}

interface ArchiveOutputSettings {
  readonly ContainerSettings: ArchiveContainerSettings;
  readonly Extension: string;
  readonly NameModifier: string;
}

interface ArchiveS3Settings {
  readonly CannedAcl: string;
}

interface AribDestinationSettings {
}

interface AribSourceSettings {
}

interface AudioChannelMapping {
  readonly InputChannelLevels: [];
  readonly OutputChannel: number;
}

interface AudioCodecSettings {
  readonly AacSettings: AacSettings;
  readonly Ac3Settings: Ac3Settings;
  readonly Eac3Settings: Eac3Settings;
  readonly Mp2Settings: Mp2Settings;
  readonly PassThroughSettings: PassThroughSettings;
  readonly WavSettings: WavSettings;
}

interface AudioDescription {
  readonly AudioNormalizationSettings: AudioNormalizationSettings;
  readonly AudioSelectorName: string;
  readonly AudioType: string;
  readonly AudioTypeControl: string;
  readonly AudioWatermarkingSettings: AudioWatermarkSettings;
  readonly CodecSettings: AudioCodecSettings;
  readonly LanguageCode: string;
  readonly LanguageCodeControl: string;
  readonly Name: string;
  readonly RemixSettings: RemixSettings;
  readonly StreamName: string;
}

interface AudioHlsRenditionSelection {
  readonly GroupId: string;
  readonly Name: string;
}

interface AudioLanguageSelection {
  readonly LanguageCode: string;
  readonly LanguageSelectionPolicy: string;
}

interface AudioNormalizationSettings {
  readonly Algorithm: string;
  readonly AlgorithmControl: string;
  readonly TargetLkfs: unknown;
}

interface AudioOnlyHlsSettings {
  readonly AudioGroupId: string;
  readonly AudioOnlyImage: InputLocation;
  readonly AudioTrackType: string;
  readonly SegmentType: string;
}

interface AudioPidSelection {
  readonly Pid: number;
}

interface AudioSelector {
  readonly Name: string;
  readonly SelectorSettings: AudioSelectorSettings;
}

interface AudioSelectorSettings {
  readonly AudioHlsRenditionSelection: AudioHlsRenditionSelection;
  readonly AudioLanguageSelection: AudioLanguageSelection;
  readonly AudioPidSelection: AudioPidSelection;
  readonly AudioTrackSelection: AudioTrackSelection;
}

interface AudioSilenceFailoverSettings {
  readonly AudioSelectorName: string;
  readonly AudioSilenceThresholdMsec: number;
}

interface AudioTrack {
  readonly Track: number;
}

interface AudioTrackSelection {
  readonly Tracks: [];
}

interface AudioWatermarkSettings {
  readonly NielsenWatermarksSettings: NielsenWatermarksSettings;
}

interface AutomaticInputFailoverSettings {
  readonly ErrorClearTimeMsec: number;
  readonly FailoverConditions: [];
  readonly InputPreference: string;
  readonly SecondaryInputId: string;
}

interface AvailBlanking {
  readonly AvailBlankingImage: InputLocation;
  readonly State: string;
}

interface AvailConfiguration {
  readonly AvailSettings: AvailSettings;
}

interface AvailSettings {
  readonly Scte35SpliceInsert: Scte35SpliceInsert;
  readonly Scte35TimeSignalApos: Scte35TimeSignalApos;
}

interface BadGatewayException {
  readonly Message: string;
}

interface BadRequestException {
  readonly Message: string;
}

interface BatchDelete {
  readonly ChannelIds: [];
  readonly InputIds: [];
  readonly InputSecurityGroupIds: [];
  readonly MultiplexIds: [];
}

interface BatchDeleteRequest {
  readonly ChannelIds: [];
  readonly InputIds: [];
  readonly InputSecurityGroupIds: [];
  readonly MultiplexIds: [];
}

interface BatchDeleteResponse {
  readonly Failed: [];
  readonly Successful: [];
}

interface BatchDeleteResultModel {
  readonly Failed: [];
  readonly Successful: [];
}

interface BatchFailedResultModel {
  readonly Arn: string;
  readonly Code: string;
  readonly Id: string;
  readonly Message: string;
}

interface BatchScheduleActionCreateRequest {
  readonly ScheduleActions: [];
}

interface BatchScheduleActionCreateResult {
  readonly ScheduleActions: [];
}

interface BatchScheduleActionDeleteRequest {
  readonly ActionNames: [];
}

interface BatchScheduleActionDeleteResult {
  readonly ScheduleActions: [];
}

interface BatchStart {
  readonly ChannelIds: [];
  readonly MultiplexIds: [];
}

interface BatchStartRequest {
  readonly ChannelIds: [];
  readonly MultiplexIds: [];
}

interface BatchStartResponse {
  readonly Failed: [];
  readonly Successful: [];
}

interface BatchStartResultModel {
  readonly Failed: [];
  readonly Successful: [];
}

interface BatchStop {
  readonly ChannelIds: [];
  readonly MultiplexIds: [];
}

interface BatchStopRequest {
  readonly ChannelIds: [];
  readonly MultiplexIds: [];
}

interface BatchStopResponse {
  readonly Failed: [];
  readonly Successful: [];
}

interface BatchStopResultModel {
  readonly Failed: [];
  readonly Successful: [];
}

interface BatchSuccessfulResultModel {
  readonly Arn: string;
  readonly Id: string;
  readonly State: string;
}

interface BatchUpdateScheduleRequest {
  readonly ChannelId: string;
  readonly Creates: BatchScheduleActionCreateRequest;
  readonly Deletes: BatchScheduleActionDeleteRequest;
}

interface BatchUpdateScheduleResponse {
  readonly Creates: BatchScheduleActionCreateResult;
  readonly Deletes: BatchScheduleActionDeleteResult;
}

interface BatchUpdateScheduleResult {
  readonly Creates: BatchScheduleActionCreateResult;
  readonly Deletes: BatchScheduleActionDeleteResult;
}

interface BlackoutSlate {
  readonly BlackoutSlateImage: InputLocation;
  readonly NetworkEndBlackout: string;
  readonly NetworkEndBlackoutImage: InputLocation;
  readonly NetworkId: string;
  readonly State: string;
}

interface BurnInDestinationSettings {
  readonly Alignment: string;
  readonly BackgroundColor: string;
  readonly BackgroundOpacity: number;
  readonly Font: InputLocation;
  readonly FontColor: string;
  readonly FontOpacity: number;
  readonly FontResolution: number;
  readonly FontSize: string;
  readonly OutlineColor: string;
  readonly OutlineSize: number;
  readonly ShadowColor: string;
  readonly ShadowOpacity: number;
  readonly ShadowXOffset: number;
  readonly ShadowYOffset: number;
  readonly TeletextGridControl: string;
  readonly XPosition: number;
  readonly YPosition: number;
}

interface CancelInputDeviceTransferRequest {
  readonly InputDeviceId: string;
}

interface CancelInputDeviceTransferResponse {
}

interface CaptionDescription {
  readonly CaptionSelectorName: string;
  readonly DestinationSettings: CaptionDestinationSettings;
  readonly LanguageCode: string;
  readonly LanguageDescription: string;
  readonly Name: string;
}

interface CaptionDestinationSettings {
  readonly AribDestinationSettings: AribDestinationSettings;
  readonly BurnInDestinationSettings: BurnInDestinationSettings;
  readonly DvbSubDestinationSettings: DvbSubDestinationSettings;
  readonly EbuTtDDestinationSettings: EbuTtDDestinationSettings;
  readonly EmbeddedDestinationSettings: EmbeddedDestinationSettings;
  readonly EmbeddedPlusScte20DestinationSettings: EmbeddedPlusScte20DestinationSettings;
  readonly RtmpCaptionInfoDestinationSettings: RtmpCaptionInfoDestinationSettings;
  readonly Scte20PlusEmbeddedDestinationSettings: Scte20PlusEmbeddedDestinationSettings;
  readonly Scte27DestinationSettings: Scte27DestinationSettings;
  readonly SmpteTtDestinationSettings: SmpteTtDestinationSettings;
  readonly TeletextDestinationSettings: TeletextDestinationSettings;
  readonly TtmlDestinationSettings: TtmlDestinationSettings;
  readonly WebvttDestinationSettings: WebvttDestinationSettings;
}

interface CaptionLanguageMapping {
  readonly CaptionChannel: number;
  readonly LanguageCode: string;
  readonly LanguageDescription: string;
}

interface CaptionRectangle {
  readonly Height: unknown;
  readonly LeftOffset: unknown;
  readonly TopOffset: unknown;
  readonly Width: unknown;
}

interface CaptionSelector {
  readonly LanguageCode: string;
  readonly Name: string;
  readonly SelectorSettings: CaptionSelectorSettings;
}

interface CaptionSelectorSettings {
  readonly AncillarySourceSettings: AncillarySourceSettings;
  readonly AribSourceSettings: AribSourceSettings;
  readonly DvbSubSourceSettings: DvbSubSourceSettings;
  readonly EmbeddedSourceSettings: EmbeddedSourceSettings;
  readonly Scte20SourceSettings: Scte20SourceSettings;
  readonly Scte27SourceSettings: Scte27SourceSettings;
  readonly TeletextSourceSettings: TeletextSourceSettings;
}

interface CdiInputSpecification {
  readonly Resolution: string;
}

interface Channel {
  readonly Arn: string;
  readonly CdiInputSpecification: CdiInputSpecification;
  readonly ChannelClass: string;
  readonly Destinations: [];
  readonly EgressEndpoints: [];
  readonly EncoderSettings: EncoderSettings;
  readonly Id: string;
  readonly InputAttachments: [];
  readonly InputSpecification: InputSpecification;
  readonly LogLevel: string;
  readonly Name: string;
  readonly PipelineDetails: [];
  readonly PipelinesRunningCount: number;
  readonly RoleArn: string;
  readonly State: string;
  readonly Tags: {[key: string]: any};
  readonly Vpc: VpcOutputSettingsDescription;
}

interface ChannelConfigurationValidationError {
  readonly Message: string;
  readonly ValidationErrors: [];
}

interface ChannelEgressEndpoint {
  readonly SourceIp: string;
}

interface ChannelSummary {
  readonly Arn: string;
  readonly CdiInputSpecification: CdiInputSpecification;
  readonly ChannelClass: string;
  readonly Destinations: [];
  readonly EgressEndpoints: [];
  readonly Id: string;
  readonly InputAttachments: [];
  readonly InputSpecification: InputSpecification;
  readonly LogLevel: string;
  readonly Name: string;
  readonly PipelinesRunningCount: number;
  readonly RoleArn: string;
  readonly State: string;
  readonly Tags: {[key: string]: any};
  readonly Vpc: VpcOutputSettingsDescription;
}

interface ClaimDeviceRequest {
  readonly Id: string;
}

interface ClaimDeviceResponse {
}

interface ColorSpacePassthroughSettings {
}

interface ConflictException {
  readonly Message: string;
}

interface CreateChannel {
  readonly CdiInputSpecification: CdiInputSpecification;
  readonly ChannelClass: string;
  readonly Destinations: [];
  readonly EncoderSettings: EncoderSettings;
  readonly InputAttachments: [];
  readonly InputSpecification: InputSpecification;
  readonly LogLevel: string;
  readonly Name: string;
  readonly RequestId: string;
  readonly Reserved: string;
  readonly RoleArn: string;
  readonly Tags: {[key: string]: any};
  readonly Vpc: VpcOutputSettings;
}

interface CreateChannelRequest {
  readonly CdiInputSpecification: CdiInputSpecification;
  readonly ChannelClass: string;
  readonly Destinations: [];
  readonly EncoderSettings: EncoderSettings;
  readonly InputAttachments: [];
  readonly InputSpecification: InputSpecification;
  readonly LogLevel: string;
  readonly Name: string;
  readonly RequestId: string;
  readonly Reserved: string;
  readonly RoleArn: string;
  readonly Tags: {[key: string]: any};
  readonly Vpc: VpcOutputSettings;
}

interface CreateChannelResponse {
  readonly Channel: Channel;
}

interface CreateChannelResultModel {
  readonly Channel: Channel;
}

interface CreateInput {
  readonly Destinations: [];
  readonly InputDevices: [];
  readonly InputSecurityGroups: [];
  readonly MediaConnectFlows: [];
  readonly Name: string;
  readonly RequestId: string;
  readonly RoleArn: string;
  readonly Sources: [];
  readonly Tags: {[key: string]: any};
  readonly Type: string;
  readonly Vpc: InputVpcRequest;
}

interface CreateInputRequest {
  readonly Destinations: [];
  readonly InputDevices: [];
  readonly InputSecurityGroups: [];
  readonly MediaConnectFlows: [];
  readonly Name: string;
  readonly RequestId: string;
  readonly RoleArn: string;
  readonly Sources: [];
  readonly Tags: {[key: string]: any};
  readonly Type: string;
  readonly Vpc: InputVpcRequest;
}

interface CreateInputResponse {
  readonly Input: Input;
}

interface CreateInputResultModel {
  readonly Input: Input;
}

interface CreateInputSecurityGroupRequest {
  readonly Tags: {[key: string]: any};
  readonly WhitelistRules: [];
}

interface CreateInputSecurityGroupResponse {
  readonly SecurityGroup: InputSecurityGroup;
}

interface CreateInputSecurityGroupResultModel {
  readonly SecurityGroup: InputSecurityGroup;
}

interface CreateMultiplex {
  readonly AvailabilityZones: [];
  readonly MultiplexSettings: MultiplexSettings;
  readonly Name: string;
  readonly RequestId: string;
  readonly Tags: {[key: string]: any};
}

interface CreateMultiplexProgram {
  readonly MultiplexProgramSettings: MultiplexProgramSettings;
  readonly ProgramName: string;
  readonly RequestId: string;
}

interface CreateMultiplexProgramRequest {
  readonly MultiplexId: string;
  readonly MultiplexProgramSettings: MultiplexProgramSettings;
  readonly ProgramName: string;
  readonly RequestId: string;
}

interface CreateMultiplexProgramResponse {
  readonly MultiplexProgram: MultiplexProgram;
}

interface CreateMultiplexProgramResultModel {
  readonly MultiplexProgram: MultiplexProgram;
}

interface CreateMultiplexRequest {
  readonly AvailabilityZones: [];
  readonly MultiplexSettings: MultiplexSettings;
  readonly Name: string;
  readonly RequestId: string;
  readonly Tags: {[key: string]: any};
}

interface CreateMultiplexResponse {
  readonly Multiplex: Multiplex;
}

interface CreateMultiplexResultModel {
  readonly Multiplex: Multiplex;
}

interface CreatePartnerInput {
  readonly RequestId: string;
  readonly Tags: {[key: string]: any};
}

interface CreatePartnerInputRequest {
  readonly InputId: string;
  readonly RequestId: string;
  readonly Tags: {[key: string]: any};
}

interface CreatePartnerInputResponse {
  readonly Input: Input;
}

interface CreatePartnerInputResultModel {
  readonly Input: Input;
}

interface CreateTagsRequest {
  readonly ResourceArn: string;
  readonly Tags: {[key: string]: any};
}

interface DeleteChannelRequest {
  readonly ChannelId: string;
}

interface DeleteChannelResponse {
  readonly Arn: string;
  readonly CdiInputSpecification: CdiInputSpecification;
  readonly ChannelClass: string;
  readonly Destinations: [];
  readonly EgressEndpoints: [];
  readonly EncoderSettings: EncoderSettings;
  readonly Id: string;
  readonly InputAttachments: [];
  readonly InputSpecification: InputSpecification;
  readonly LogLevel: string;
  readonly Name: string;
  readonly PipelineDetails: [];
  readonly PipelinesRunningCount: number;
  readonly RoleArn: string;
  readonly State: string;
  readonly Tags: {[key: string]: any};
  readonly Vpc: VpcOutputSettingsDescription;
}

interface DeleteInputRequest {
  readonly InputId: string;
}

interface DeleteInputResponse {
}

interface DeleteInputSecurityGroupRequest {
  readonly InputSecurityGroupId: string;
}

interface DeleteInputSecurityGroupResponse {
}

interface DeleteMultiplexProgramRequest {
  readonly MultiplexId: string;
  readonly ProgramName: string;
}

interface DeleteMultiplexProgramResponse {
  readonly ChannelId: string;
  readonly MultiplexProgramSettings: MultiplexProgramSettings;
  readonly PacketIdentifiersMap: MultiplexProgramPacketIdentifiersMap;
  readonly PipelineDetails: [];
  readonly ProgramName: string;
}

interface DeleteMultiplexRequest {
  readonly MultiplexId: string;
}

interface DeleteMultiplexResponse {
  readonly Arn: string;
  readonly AvailabilityZones: [];
  readonly Destinations: [];
  readonly Id: string;
  readonly MultiplexSettings: MultiplexSettings;
  readonly Name: string;
  readonly PipelinesRunningCount: number;
  readonly ProgramCount: number;
  readonly State: string;
  readonly Tags: {[key: string]: any};
}

interface DeleteReservationRequest {
  readonly ReservationId: string;
}

interface DeleteReservationResponse {
  readonly Arn: string;
  readonly Count: number;
  readonly CurrencyCode: string;
  readonly Duration: number;
  readonly DurationUnits: string;
  readonly End: string;
  readonly FixedPrice: unknown;
  readonly Name: string;
  readonly OfferingDescription: string;
  readonly OfferingId: string;
  readonly OfferingType: string;
  readonly Region: string;
  readonly ReservationId: string;
  readonly ResourceSpecification: ReservationResourceSpecification;
  readonly Start: string;
  readonly State: string;
  readonly Tags: {[key: string]: any};
  readonly UsagePrice: unknown;
}

interface DeleteScheduleRequest {
  readonly ChannelId: string;
}

interface DeleteScheduleResponse {
}

interface DeleteTagsRequest {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}

interface DescribeChannelRequest {
  readonly ChannelId: string;
}

interface DescribeChannelResponse {
  readonly Arn: string;
  readonly CdiInputSpecification: CdiInputSpecification;
  readonly ChannelClass: string;
  readonly Destinations: [];
  readonly EgressEndpoints: [];
  readonly EncoderSettings: EncoderSettings;
  readonly Id: string;
  readonly InputAttachments: [];
  readonly InputSpecification: InputSpecification;
  readonly LogLevel: string;
  readonly Name: string;
  readonly PipelineDetails: [];
  readonly PipelinesRunningCount: number;
  readonly RoleArn: string;
  readonly State: string;
  readonly Tags: {[key: string]: any};
  readonly Vpc: VpcOutputSettingsDescription;
}

interface DescribeInputDeviceRequest {
  readonly InputDeviceId: string;
}

interface DescribeInputDeviceResponse {
  readonly Arn: string;
  readonly ConnectionState: string;
  readonly DeviceSettingsSyncState: string;
  readonly DeviceUpdateStatus: string;
  readonly HdDeviceSettings: InputDeviceHdSettings;
  readonly Id: string;
  readonly MacAddress: string;
  readonly Name: string;
  readonly NetworkSettings: InputDeviceNetworkSettings;
  readonly SerialNumber: string;
  readonly Type: string;
  readonly UhdDeviceSettings: InputDeviceUhdSettings;
}

interface DescribeInputDeviceThumbnailRequest {
  readonly InputDeviceId: string;
  readonly Accept: string;
}

interface DescribeInputDeviceThumbnailResponse {
  readonly Body: unknown;
  readonly ContentType: string;
  readonly ContentLength: number;
  readonly ETag: string;
  readonly LastModified: Date;
}

interface DescribeInputRequest {
  readonly InputId: string;
}

interface DescribeInputResponse {
  readonly Arn: string;
  readonly AttachedChannels: [];
  readonly Destinations: [];
  readonly Id: string;
  readonly InputClass: string;
  readonly InputDevices: [];
  readonly InputPartnerIds: [];
  readonly InputSourceType: string;
  readonly MediaConnectFlows: [];
  readonly Name: string;
  readonly RoleArn: string;
  readonly SecurityGroups: [];
  readonly Sources: [];
  readonly State: string;
  readonly Tags: {[key: string]: any};
  readonly Type: string;
}

interface DescribeInputSecurityGroupRequest {
  readonly InputSecurityGroupId: string;
}

interface DescribeInputSecurityGroupResponse {
  readonly Arn: string;
  readonly Id: string;
  readonly Inputs: [];
  readonly State: string;
  readonly Tags: {[key: string]: any};
  readonly WhitelistRules: [];
}

interface DescribeMultiplexProgramRequest {
  readonly MultiplexId: string;
  readonly ProgramName: string;
}

interface DescribeMultiplexProgramResponse {
  readonly ChannelId: string;
  readonly MultiplexProgramSettings: MultiplexProgramSettings;
  readonly PacketIdentifiersMap: MultiplexProgramPacketIdentifiersMap;
  readonly PipelineDetails: [];
  readonly ProgramName: string;
}

interface DescribeMultiplexRequest {
  readonly MultiplexId: string;
}

interface DescribeMultiplexResponse {
  readonly Arn: string;
  readonly AvailabilityZones: [];
  readonly Destinations: [];
  readonly Id: string;
  readonly MultiplexSettings: MultiplexSettings;
  readonly Name: string;
  readonly PipelinesRunningCount: number;
  readonly ProgramCount: number;
  readonly State: string;
  readonly Tags: {[key: string]: any};
}

interface DescribeOfferingRequest {
  readonly OfferingId: string;
}

interface DescribeOfferingResponse {
  readonly Arn: string;
  readonly CurrencyCode: string;
  readonly Duration: number;
  readonly DurationUnits: string;
  readonly FixedPrice: unknown;
  readonly OfferingDescription: string;
  readonly OfferingId: string;
  readonly OfferingType: string;
  readonly Region: string;
  readonly ResourceSpecification: ReservationResourceSpecification;
  readonly UsagePrice: unknown;
}

interface DescribeReservationRequest {
  readonly ReservationId: string;
}

interface DescribeReservationResponse {
  readonly Arn: string;
  readonly Count: number;
  readonly CurrencyCode: string;
  readonly Duration: number;
  readonly DurationUnits: string;
  readonly End: string;
  readonly FixedPrice: unknown;
  readonly Name: string;
  readonly OfferingDescription: string;
  readonly OfferingId: string;
  readonly OfferingType: string;
  readonly Region: string;
  readonly ReservationId: string;
  readonly ResourceSpecification: ReservationResourceSpecification;
  readonly Start: string;
  readonly State: string;
  readonly Tags: {[key: string]: any};
  readonly UsagePrice: unknown;
}

interface DescribeScheduleRequest {
  readonly ChannelId: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeScheduleResponse {
  readonly NextToken: string;
  readonly ScheduleActions: [];
}

interface DvbNitSettings {
  readonly NetworkId: number;
  readonly NetworkName: string;
  readonly RepInterval: number;
}

interface DvbSdtSettings {
  readonly OutputSdt: string;
  readonly RepInterval: number;
  readonly ServiceName: string;
  readonly ServiceProviderName: string;
}

interface DvbSubDestinationSettings {
  readonly Alignment: string;
  readonly BackgroundColor: string;
  readonly BackgroundOpacity: number;
  readonly Font: InputLocation;
  readonly FontColor: string;
  readonly FontOpacity: number;
  readonly FontResolution: number;
  readonly FontSize: string;
  readonly OutlineColor: string;
  readonly OutlineSize: number;
  readonly ShadowColor: string;
  readonly ShadowOpacity: number;
  readonly ShadowXOffset: number;
  readonly ShadowYOffset: number;
  readonly TeletextGridControl: string;
  readonly XPosition: number;
  readonly YPosition: number;
}

interface DvbSubSourceSettings {
  readonly OcrLanguage: string;
  readonly Pid: number;
}

interface DvbTdtSettings {
  readonly RepInterval: number;
}

interface Eac3Settings {
  readonly AttenuationControl: string;
  readonly Bitrate: unknown;
  readonly BitstreamMode: string;
  readonly CodingMode: string;
  readonly DcFilter: string;
  readonly Dialnorm: number;
  readonly DrcLine: string;
  readonly DrcRf: string;
  readonly LfeControl: string;
  readonly LfeFilter: string;
  readonly LoRoCenterMixLevel: unknown;
  readonly LoRoSurroundMixLevel: unknown;
  readonly LtRtCenterMixLevel: unknown;
  readonly LtRtSurroundMixLevel: unknown;
  readonly MetadataControl: string;
  readonly PassthroughControl: string;
  readonly PhaseControl: string;
  readonly StereoDownmix: string;
  readonly SurroundExMode: string;
  readonly SurroundMode: string;
}

interface EbuTtDDestinationSettings {
  readonly CopyrightHolder: string;
  readonly FillLineGap: string;
  readonly FontFamily: string;
  readonly StyleControl: string;
}

interface EmbeddedDestinationSettings {
}

interface EmbeddedPlusScte20DestinationSettings {
}

interface EmbeddedSourceSettings {
  readonly Convert608To708: string;
  readonly Scte20Detection: string;
  readonly Source608ChannelNumber: number;
  readonly Source608TrackNumber: number;
}

interface Empty {
}

interface EncoderSettings {
  readonly AudioDescriptions: [];
  readonly AvailBlanking: AvailBlanking;
  readonly AvailConfiguration: AvailConfiguration;
  readonly BlackoutSlate: BlackoutSlate;
  readonly CaptionDescriptions: [];
  readonly FeatureActivations: FeatureActivations;
  readonly GlobalConfiguration: GlobalConfiguration;
  readonly MotionGraphicsConfiguration: MotionGraphicsConfiguration;
  readonly NielsenConfiguration: NielsenConfiguration;
  readonly OutputGroups: [];
  readonly TimecodeConfig: TimecodeConfig;
  readonly VideoDescriptions: [];
}

interface FailoverCondition {
  readonly FailoverConditionSettings: FailoverConditionSettings;
}

interface FailoverConditionSettings {
  readonly AudioSilenceSettings: AudioSilenceFailoverSettings;
  readonly InputLossSettings: InputLossFailoverSettings;
  readonly VideoBlackSettings: VideoBlackFailoverSettings;
}

interface FeatureActivations {
  readonly InputPrepareScheduleActions: string;
}

interface FecOutputSettings {
  readonly ColumnDepth: number;
  readonly IncludeFec: string;
  readonly RowLength: number;
}

interface FixedModeScheduleActionStartSettings {
  readonly Time: string;
}

interface Fmp4HlsSettings {
  readonly AudioRenditionSets: string;
  readonly NielsenId3Behavior: string;
  readonly TimedMetadataBehavior: string;
}

interface FollowModeScheduleActionStartSettings {
  readonly FollowPoint: string;
  readonly ReferenceActionName: string;
}

interface ForbiddenException {
  readonly Message: string;
}

interface FrameCaptureCdnSettings {
  readonly FrameCaptureS3Settings: FrameCaptureS3Settings;
}

interface FrameCaptureGroupSettings {
  readonly Destination: OutputLocationRef;
  readonly FrameCaptureCdnSettings: FrameCaptureCdnSettings;
}

interface FrameCaptureHlsSettings {
}

interface FrameCaptureOutputSettings {
  readonly NameModifier: string;
}

interface FrameCaptureS3Settings {
  readonly CannedAcl: string;
}

interface FrameCaptureSettings {
  readonly CaptureInterval: number;
  readonly CaptureIntervalUnits: string;
}

interface GatewayTimeoutException {
  readonly Message: string;
}

interface GlobalConfiguration {
  readonly InitialAudioGain: number;
  readonly InputEndAction: string;
  readonly InputLossBehavior: InputLossBehavior;
  readonly OutputLockingMode: string;
  readonly OutputTimingSource: string;
  readonly SupportLowFramerateInputs: string;
}

interface H264ColorSpaceSettings {
  readonly ColorSpacePassthroughSettings: ColorSpacePassthroughSettings;
  readonly Rec601Settings: Rec601Settings;
  readonly Rec709Settings: Rec709Settings;
}

interface H264FilterSettings {
  readonly TemporalFilterSettings: TemporalFilterSettings;
}

interface H264Settings {
  readonly AdaptiveQuantization: string;
  readonly AfdSignaling: string;
  readonly Bitrate: number;
  readonly BufFillPct: number;
  readonly BufSize: number;
  readonly ColorMetadata: string;
  readonly ColorSpaceSettings: H264ColorSpaceSettings;
  readonly EntropyEncoding: string;
  readonly FilterSettings: H264FilterSettings;
  readonly FixedAfd: string;
  readonly FlickerAq: string;
  readonly ForceFieldPictures: string;
  readonly FramerateControl: string;
  readonly FramerateDenominator: number;
  readonly FramerateNumerator: number;
  readonly GopBReference: string;
  readonly GopClosedCadence: number;
  readonly GopNumBFrames: number;
  readonly GopSize: unknown;
  readonly GopSizeUnits: string;
  readonly Level: string;
  readonly LookAheadRateControl: string;
  readonly MaxBitrate: number;
  readonly MinIInterval: number;
  readonly NumRefFrames: number;
  readonly ParControl: string;
  readonly ParDenominator: number;
  readonly ParNumerator: number;
  readonly Profile: string;
  readonly QualityLevel: string;
  readonly QvbrQualityLevel: number;
  readonly RateControlMode: string;
  readonly ScanType: string;
  readonly SceneChangeDetect: string;
  readonly Slices: number;
  readonly Softness: number;
  readonly SpatialAq: string;
  readonly SubgopLength: string;
  readonly Syntax: string;
  readonly TemporalAq: string;
  readonly TimecodeInsertion: string;
}

interface H265ColorSpaceSettings {
  readonly ColorSpacePassthroughSettings: ColorSpacePassthroughSettings;
  readonly Hdr10Settings: Hdr10Settings;
  readonly Rec601Settings: Rec601Settings;
  readonly Rec709Settings: Rec709Settings;
}

interface H265FilterSettings {
  readonly TemporalFilterSettings: TemporalFilterSettings;
}

interface H265Settings {
  readonly AdaptiveQuantization: string;
  readonly AfdSignaling: string;
  readonly AlternativeTransferFunction: string;
  readonly Bitrate: number;
  readonly BufSize: number;
  readonly ColorMetadata: string;
  readonly ColorSpaceSettings: H265ColorSpaceSettings;
  readonly FilterSettings: H265FilterSettings;
  readonly FixedAfd: string;
  readonly FlickerAq: string;
  readonly FramerateDenominator: number;
  readonly FramerateNumerator: number;
  readonly GopClosedCadence: number;
  readonly GopSize: unknown;
  readonly GopSizeUnits: string;
  readonly Level: string;
  readonly LookAheadRateControl: string;
  readonly MaxBitrate: number;
  readonly MinIInterval: number;
  readonly ParDenominator: number;
  readonly ParNumerator: number;
  readonly Profile: string;
  readonly QvbrQualityLevel: number;
  readonly RateControlMode: string;
  readonly ScanType: string;
  readonly SceneChangeDetect: string;
  readonly Slices: number;
  readonly Tier: string;
  readonly TimecodeInsertion: string;
}

interface Hdr10Settings {
  readonly MaxCll: number;
  readonly MaxFall: number;
}

interface HlsAkamaiSettings {
  readonly ConnectionRetryInterval: number;
  readonly FilecacheDuration: number;
  readonly HttpTransferMode: string;
  readonly NumRetries: number;
  readonly RestartDelay: number;
  readonly Salt: string;
  readonly Token: string;
}

interface HlsBasicPutSettings {
  readonly ConnectionRetryInterval: number;
  readonly FilecacheDuration: number;
  readonly NumRetries: number;
  readonly RestartDelay: number;
}

interface HlsCdnSettings {
  readonly HlsAkamaiSettings: HlsAkamaiSettings;
  readonly HlsBasicPutSettings: HlsBasicPutSettings;
  readonly HlsMediaStoreSettings: HlsMediaStoreSettings;
  readonly HlsS3Settings: HlsS3Settings;
  readonly HlsWebdavSettings: HlsWebdavSettings;
}

interface HlsGroupSettings {
  readonly AdMarkers: [];
  readonly BaseUrlContent: string;
  readonly BaseUrlContent1: string;
  readonly BaseUrlManifest: string;
  readonly BaseUrlManifest1: string;
  readonly CaptionLanguageMappings: [];
  readonly CaptionLanguageSetting: string;
  readonly ClientCache: string;
  readonly CodecSpecification: string;
  readonly ConstantIv: string;
  readonly Destination: OutputLocationRef;
  readonly DirectoryStructure: string;
  readonly DiscontinuityTags: string;
  readonly EncryptionType: string;
  readonly HlsCdnSettings: HlsCdnSettings;
  readonly HlsId3SegmentTagging: string;
  readonly IFrameOnlyPlaylists: string;
  readonly IncompleteSegmentBehavior: string;
  readonly IndexNSegments: number;
  readonly InputLossAction: string;
  readonly IvInManifest: string;
  readonly IvSource: string;
  readonly KeepSegments: number;
  readonly KeyFormat: string;
  readonly KeyFormatVersions: string;
  readonly KeyProviderSettings: KeyProviderSettings;
  readonly ManifestCompression: string;
  readonly ManifestDurationFormat: string;
  readonly MinSegmentLength: number;
  readonly Mode: string;
  readonly OutputSelection: string;
  readonly ProgramDateTime: string;
  readonly ProgramDateTimePeriod: number;
  readonly RedundantManifest: string;
  readonly SegmentLength: number;
  readonly SegmentationMode: string;
  readonly SegmentsPerSubdirectory: number;
  readonly StreamInfResolution: string;
  readonly TimedMetadataId3Frame: string;
  readonly TimedMetadataId3Period: number;
  readonly TimestampDeltaMilliseconds: number;
  readonly TsFileMode: string;
}

interface HlsId3SegmentTaggingScheduleActionSettings {
  readonly Tag: string;
}

interface HlsInputSettings {
  readonly Bandwidth: number;
  readonly BufferSegments: number;
  readonly Retries: number;
  readonly RetryInterval: number;
  readonly Scte35Source: string;
}

interface HlsMediaStoreSettings {
  readonly ConnectionRetryInterval: number;
  readonly FilecacheDuration: number;
  readonly MediaStoreStorageClass: string;
  readonly NumRetries: number;
  readonly RestartDelay: number;
}

interface HlsOutputSettings {
  readonly H265PackagingType: string;
  readonly HlsSettings: HlsSettings;
  readonly NameModifier: string;
  readonly SegmentModifier: string;
}

interface HlsS3Settings {
  readonly CannedAcl: string;
}

interface HlsSettings {
  readonly AudioOnlyHlsSettings: AudioOnlyHlsSettings;
  readonly Fmp4HlsSettings: Fmp4HlsSettings;
  readonly FrameCaptureHlsSettings: FrameCaptureHlsSettings;
  readonly StandardHlsSettings: StandardHlsSettings;
}

interface HlsTimedMetadataScheduleActionSettings {
  readonly Id3: string;
}

interface HlsWebdavSettings {
  readonly ConnectionRetryInterval: number;
  readonly FilecacheDuration: number;
  readonly HttpTransferMode: string;
  readonly NumRetries: number;
  readonly RestartDelay: number;
}

interface HtmlMotionGraphicsSettings {
}

interface ImmediateModeScheduleActionStartSettings {
}

interface Input {
  readonly Arn: string;
  readonly AttachedChannels: [];
  readonly Destinations: [];
  readonly Id: string;
  readonly InputClass: string;
  readonly InputDevices: [];
  readonly InputPartnerIds: [];
  readonly InputSourceType: string;
  readonly MediaConnectFlows: [];
  readonly Name: string;
  readonly RoleArn: string;
  readonly SecurityGroups: [];
  readonly Sources: [];
  readonly State: string;
  readonly Tags: {[key: string]: any};
  readonly Type: string;
}

interface InputAttachment {
  readonly AutomaticInputFailoverSettings: AutomaticInputFailoverSettings;
  readonly InputAttachmentName: string;
  readonly InputId: string;
  readonly InputSettings: InputSettings;
}

interface InputChannelLevel {
  readonly Gain: number;
  readonly InputChannel: number;
}

interface InputClippingSettings {
  readonly InputTimecodeSource: string;
  readonly StartTimecode: StartTimecode;
  readonly StopTimecode: StopTimecode;
}

interface InputDestination {
  readonly Ip: string;
  readonly Port: string;
  readonly Url: string;
  readonly Vpc: InputDestinationVpc;
}

interface InputDestinationRequest {
  readonly StreamName: string;
}

interface InputDestinationVpc {
  readonly AvailabilityZone: string;
  readonly NetworkInterfaceId: string;
}

interface InputDevice {
  readonly Arn: string;
  readonly ConnectionState: string;
  readonly DeviceSettingsSyncState: string;
  readonly DeviceUpdateStatus: string;
  readonly HdDeviceSettings: InputDeviceHdSettings;
  readonly Id: string;
  readonly MacAddress: string;
  readonly Name: string;
  readonly NetworkSettings: InputDeviceNetworkSettings;
  readonly SerialNumber: string;
  readonly Type: string;
  readonly UhdDeviceSettings: InputDeviceUhdSettings;
}

interface InputDeviceConfigurableSettings {
  readonly ConfiguredInput: string;
  readonly MaxBitrate: number;
}

interface InputDeviceConfigurationValidationError {
  readonly Message: string;
  readonly ValidationErrors: [];
}

interface InputDeviceHdSettings {
  readonly ActiveInput: string;
  readonly ConfiguredInput: string;
  readonly DeviceState: string;
  readonly Framerate: unknown;
  readonly Height: number;
  readonly MaxBitrate: number;
  readonly ScanType: string;
  readonly Width: number;
}

interface InputDeviceNetworkSettings {
  readonly DnsAddresses: [];
  readonly Gateway: string;
  readonly IpAddress: string;
  readonly IpScheme: string;
  readonly SubnetMask: string;
}

interface InputDeviceRequest {
  readonly Id: string;
}

interface InputDeviceSettings {
  readonly Id: string;
}

interface InputDeviceSummary {
  readonly Arn: string;
  readonly ConnectionState: string;
  readonly DeviceSettingsSyncState: string;
  readonly DeviceUpdateStatus: string;
  readonly HdDeviceSettings: InputDeviceHdSettings;
  readonly Id: string;
  readonly MacAddress: string;
  readonly Name: string;
  readonly NetworkSettings: InputDeviceNetworkSettings;
  readonly SerialNumber: string;
  readonly Type: string;
  readonly UhdDeviceSettings: InputDeviceUhdSettings;
}

interface InputDeviceUhdSettings {
  readonly ActiveInput: string;
  readonly ConfiguredInput: string;
  readonly DeviceState: string;
  readonly Framerate: unknown;
  readonly Height: number;
  readonly MaxBitrate: number;
  readonly ScanType: string;
  readonly Width: number;
}

interface InputLocation {
  readonly PasswordParam: string;
  readonly Uri: string;
  readonly Username: string;
}

interface InputLossBehavior {
  readonly BlackFrameMsec: number;
  readonly InputLossImageColor: string;
  readonly InputLossImageSlate: InputLocation;
  readonly InputLossImageType: string;
  readonly RepeatFrameMsec: number;
}

interface InputLossFailoverSettings {
  readonly InputLossThresholdMsec: number;
}

interface InputPrepareScheduleActionSettings {
  readonly InputAttachmentNameReference: string;
  readonly InputClippingSettings: InputClippingSettings;
  readonly UrlPath: [];
}

interface InputSecurityGroup {
  readonly Arn: string;
  readonly Id: string;
  readonly Inputs: [];
  readonly State: string;
  readonly Tags: {[key: string]: any};
  readonly WhitelistRules: [];
}

interface InputSecurityGroupWhitelistRequest {
  readonly Tags: {[key: string]: any};
  readonly WhitelistRules: [];
}

interface InputSettings {
  readonly AudioSelectors: [];
  readonly CaptionSelectors: [];
  readonly DeblockFilter: string;
  readonly DenoiseFilter: string;
  readonly FilterStrength: number;
  readonly InputFilter: string;
  readonly NetworkInputSettings: NetworkInputSettings;
  readonly Scte35Pid: number;
  readonly Smpte2038DataPreference: string;
  readonly SourceEndBehavior: string;
  readonly VideoSelector: VideoSelector;
}

interface InputSource {
  readonly PasswordParam: string;
  readonly Url: string;
  readonly Username: string;
}

interface InputSourceRequest {
  readonly PasswordParam: string;
  readonly Url: string;
  readonly Username: string;
}

interface InputSpecification {
  readonly Codec: string;
  readonly MaximumBitrate: string;
  readonly Resolution: string;
}

interface InputSwitchScheduleActionSettings {
  readonly InputAttachmentNameReference: string;
  readonly InputClippingSettings: InputClippingSettings;
  readonly UrlPath: [];
}

interface InputVpcRequest {
  readonly SecurityGroupIds: [];
  readonly SubnetIds: [];
}

interface InputWhitelistRule {
  readonly Cidr: string;
}

interface InputWhitelistRuleCidr {
  readonly Cidr: string;
}

interface InternalServerErrorException {
  readonly Message: string;
}

interface InternalServiceError {
  readonly Message: string;
}

interface InvalidRequest {
  readonly Message: string;
}

interface KeyProviderSettings {
  readonly StaticKeySettings: StaticKeySettings;
}

interface LimitExceeded {
  readonly Message: string;
}

interface ListChannelsRequest {
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListChannelsResponse {
  readonly Channels: [];
  readonly NextToken: string;
}

interface ListChannelsResultModel {
  readonly Channels: [];
  readonly NextToken: string;
}

interface ListInputDeviceTransfersRequest {
  readonly MaxResults: number;
  readonly NextToken: string;
  readonly TransferType: string;
}

interface ListInputDeviceTransfersResponse {
  readonly InputDeviceTransfers: [];
  readonly NextToken: string;
}

interface ListInputDeviceTransfersResultModel {
  readonly InputDeviceTransfers: [];
  readonly NextToken: string;
}

interface ListInputDevicesRequest {
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListInputDevicesResponse {
  readonly InputDevices: [];
  readonly NextToken: string;
}

interface ListInputDevicesResultModel {
  readonly InputDevices: [];
  readonly NextToken: string;
}

interface ListInputSecurityGroupsRequest {
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListInputSecurityGroupsResponse {
  readonly InputSecurityGroups: [];
  readonly NextToken: string;
}

interface ListInputSecurityGroupsResultModel {
  readonly InputSecurityGroups: [];
  readonly NextToken: string;
}

interface ListInputsRequest {
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListInputsResponse {
  readonly Inputs: [];
  readonly NextToken: string;
}

interface ListInputsResultModel {
  readonly Inputs: [];
  readonly NextToken: string;
}

interface ListMultiplexProgramsRequest {
  readonly MaxResults: number;
  readonly MultiplexId: string;
  readonly NextToken: string;
}

interface ListMultiplexProgramsResponse {
  readonly MultiplexPrograms: [];
  readonly NextToken: string;
}

interface ListMultiplexProgramsResultModel {
  readonly MultiplexPrograms: [];
  readonly NextToken: string;
}

interface ListMultiplexesRequest {
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListMultiplexesResponse {
  readonly Multiplexes: [];
  readonly NextToken: string;
}

interface ListMultiplexesResultModel {
  readonly Multiplexes: [];
  readonly NextToken: string;
}

interface ListOfferingsRequest {
  readonly ChannelClass: string;
  readonly ChannelConfiguration: string;
  readonly Codec: string;
  readonly Duration: string;
  readonly MaxResults: number;
  readonly MaximumBitrate: string;
  readonly MaximumFramerate: string;
  readonly NextToken: string;
  readonly Resolution: string;
  readonly ResourceType: string;
  readonly SpecialFeature: string;
  readonly VideoQuality: string;
}

interface ListOfferingsResponse {
  readonly NextToken: string;
  readonly Offerings: [];
}

interface ListOfferingsResultModel {
  readonly NextToken: string;
  readonly Offerings: [];
}

interface ListReservationsRequest {
  readonly ChannelClass: string;
  readonly Codec: string;
  readonly MaxResults: number;
  readonly MaximumBitrate: string;
  readonly MaximumFramerate: string;
  readonly NextToken: string;
  readonly Resolution: string;
  readonly ResourceType: string;
  readonly SpecialFeature: string;
  readonly VideoQuality: string;
}

interface ListReservationsResponse {
  readonly NextToken: string;
  readonly Reservations: [];
}

interface ListReservationsResultModel {
  readonly NextToken: string;
  readonly Reservations: [];
}

interface ListTagsForResourceRequest {
  readonly ResourceArn: string;
}

interface ListTagsForResourceResponse {
  readonly Tags: {[key: string]: any};
}

interface M2tsSettings {
  readonly AbsentInputAudioBehavior: string;
  readonly Arib: string;
  readonly AribCaptionsPid: string;
  readonly AribCaptionsPidControl: string;
  readonly AudioBufferModel: string;
  readonly AudioFramesPerPes: number;
  readonly AudioPids: string;
  readonly AudioStreamType: string;
  readonly Bitrate: number;
  readonly BufferModel: string;
  readonly CcDescriptor: string;
  readonly DvbNitSettings: DvbNitSettings;
  readonly DvbSdtSettings: DvbSdtSettings;
  readonly DvbSubPids: string;
  readonly DvbTdtSettings: DvbTdtSettings;
  readonly DvbTeletextPid: string;
  readonly Ebif: string;
  readonly EbpAudioInterval: string;
  readonly EbpLookaheadMs: number;
  readonly EbpPlacement: string;
  readonly EcmPid: string;
  readonly EsRateInPes: string;
  readonly EtvPlatformPid: string;
  readonly EtvSignalPid: string;
  readonly FragmentTime: unknown;
  readonly Klv: string;
  readonly KlvDataPids: string;
  readonly NielsenId3Behavior: string;
  readonly NullPacketBitrate: unknown;
  readonly PatInterval: number;
  readonly PcrControl: string;
  readonly PcrPeriod: number;
  readonly PcrPid: string;
  readonly PmtInterval: number;
  readonly PmtPid: string;
  readonly ProgramNum: number;
  readonly RateMode: string;
  readonly Scte27Pids: string;
  readonly Scte35Control: string;
  readonly Scte35Pid: string;
  readonly SegmentationMarkers: string;
  readonly SegmentationStyle: string;
  readonly SegmentationTime: unknown;
  readonly TimedMetadataBehavior: string;
  readonly TimedMetadataPid: string;
  readonly TransportStreamId: number;
  readonly VideoPid: string;
}

interface M3u8Settings {
  readonly AudioFramesPerPes: number;
  readonly AudioPids: string;
  readonly EcmPid: string;
  readonly NielsenId3Behavior: string;
  readonly PatInterval: number;
  readonly PcrControl: string;
  readonly PcrPeriod: number;
  readonly PcrPid: string;
  readonly PmtInterval: number;
  readonly PmtPid: string;
  readonly ProgramNum: number;
  readonly Scte35Behavior: string;
  readonly Scte35Pid: string;
  readonly TimedMetadataBehavior: string;
  readonly TimedMetadataPid: string;
  readonly TransportStreamId: number;
  readonly VideoPid: string;
}

interface MediaConnectFlow {
  readonly FlowArn: string;
}

interface MediaConnectFlowRequest {
  readonly FlowArn: string;
}

interface MediaPackageGroupSettings {
  readonly Destination: OutputLocationRef;
}

interface MediaPackageOutputDestinationSettings {
  readonly ChannelId: string;
}

interface MediaPackageOutputSettings {
}

interface MotionGraphicsActivateScheduleActionSettings {
  readonly Duration: number;
  readonly PasswordParam: string;
  readonly Url: string;
  readonly Username: string;
}

interface MotionGraphicsConfiguration {
  readonly MotionGraphicsInsertion: string;
  readonly MotionGraphicsSettings: MotionGraphicsSettings;
}

interface MotionGraphicsDeactivateScheduleActionSettings {
}

interface MotionGraphicsSettings {
  readonly HtmlMotionGraphicsSettings: HtmlMotionGraphicsSettings;
}

interface Mp2Settings {
  readonly Bitrate: unknown;
  readonly CodingMode: string;
  readonly SampleRate: unknown;
}

interface Mpeg2FilterSettings {
  readonly TemporalFilterSettings: TemporalFilterSettings;
}

interface Mpeg2Settings {
  readonly AdaptiveQuantization: string;
  readonly AfdSignaling: string;
  readonly ColorMetadata: string;
  readonly ColorSpace: string;
  readonly DisplayAspectRatio: string;
  readonly FilterSettings: Mpeg2FilterSettings;
  readonly FixedAfd: string;
  readonly FramerateDenominator: number;
  readonly FramerateNumerator: number;
  readonly GopClosedCadence: number;
  readonly GopNumBFrames: number;
  readonly GopSize: unknown;
  readonly GopSizeUnits: string;
  readonly ScanType: string;
  readonly SubgopLength: string;
  readonly TimecodeInsertion: string;
}

interface MsSmoothGroupSettings {
  readonly AcquisitionPointId: string;
  readonly AudioOnlyTimecodeControl: string;
  readonly CertificateMode: string;
  readonly ConnectionRetryInterval: number;
  readonly Destination: OutputLocationRef;
  readonly EventId: string;
  readonly EventIdMode: string;
  readonly EventStopBehavior: string;
  readonly FilecacheDuration: number;
  readonly FragmentLength: number;
  readonly InputLossAction: string;
  readonly NumRetries: number;
  readonly RestartDelay: number;
  readonly SegmentationMode: string;
  readonly SendDelayMs: number;
  readonly SparseTrackType: string;
  readonly StreamManifestBehavior: string;
  readonly TimestampOffset: string;
  readonly TimestampOffsetMode: string;
}

interface MsSmoothOutputSettings {
  readonly H265PackagingType: string;
  readonly NameModifier: string;
}

interface Multiplex {
  readonly Arn: string;
  readonly AvailabilityZones: [];
  readonly Destinations: [];
  readonly Id: string;
  readonly MultiplexSettings: MultiplexSettings;
  readonly Name: string;
  readonly PipelinesRunningCount: number;
  readonly ProgramCount: number;
  readonly State: string;
  readonly Tags: {[key: string]: any};
}

interface MultiplexConfigurationValidationError {
  readonly Message: string;
  readonly ValidationErrors: [];
}

interface MultiplexGroupSettings {
}

interface MultiplexMediaConnectOutputDestinationSettings {
  readonly EntitlementArn: string;
}

interface MultiplexOutputDestination {
  readonly MediaConnectSettings: MultiplexMediaConnectOutputDestinationSettings;
}

interface MultiplexOutputSettings {
  readonly Destination: OutputLocationRef;
}

interface MultiplexProgram {
  readonly ChannelId: string;
  readonly MultiplexProgramSettings: MultiplexProgramSettings;
  readonly PacketIdentifiersMap: MultiplexProgramPacketIdentifiersMap;
  readonly PipelineDetails: [];
  readonly ProgramName: string;
}

interface MultiplexProgramChannelDestinationSettings {
  readonly MultiplexId: string;
  readonly ProgramName: string;
}

interface MultiplexProgramPacketIdentifiersMap {
  readonly AudioPids: [];
  readonly DvbSubPids: [];
  readonly DvbTeletextPid: number;
  readonly EtvPlatformPid: number;
  readonly EtvSignalPid: number;
  readonly KlvDataPids: [];
  readonly PcrPid: number;
  readonly PmtPid: number;
  readonly PrivateMetadataPid: number;
  readonly Scte27Pids: [];
  readonly Scte35Pid: number;
  readonly TimedMetadataPid: number;
  readonly VideoPid: number;
}

interface MultiplexProgramPipelineDetail {
  readonly ActiveChannelPipeline: string;
  readonly PipelineId: string;
}

interface MultiplexProgramServiceDescriptor {
  readonly ProviderName: string;
  readonly ServiceName: string;
}

interface MultiplexProgramSettings {
  readonly PreferredChannelPipeline: string;
  readonly ProgramNumber: number;
  readonly ServiceDescriptor: MultiplexProgramServiceDescriptor;
  readonly VideoSettings: MultiplexVideoSettings;
}

interface MultiplexProgramSummary {
  readonly ChannelId: string;
  readonly ProgramName: string;
}

interface MultiplexSettings {
  readonly MaximumVideoBufferDelayMilliseconds: number;
  readonly TransportStreamBitrate: number;
  readonly TransportStreamId: number;
  readonly TransportStreamReservedBitrate: number;
}

interface MultiplexSettingsSummary {
  readonly TransportStreamBitrate: number;
}

interface MultiplexStatmuxVideoSettings {
  readonly MaximumBitrate: number;
  readonly MinimumBitrate: number;
  readonly Priority: number;
}

interface MultiplexSummary {
  readonly Arn: string;
  readonly AvailabilityZones: [];
  readonly Id: string;
  readonly MultiplexSettings: MultiplexSettingsSummary;
  readonly Name: string;
  readonly PipelinesRunningCount: number;
  readonly ProgramCount: number;
  readonly State: string;
  readonly Tags: {[key: string]: any};
}

interface MultiplexVideoSettings {
  readonly ConstantBitrate: number;
  readonly StatmuxSettings: MultiplexStatmuxVideoSettings;
}

interface NetworkInputSettings {
  readonly HlsInputSettings: HlsInputSettings;
  readonly ServerValidation: string;
}

interface NielsenCBET {
  readonly CbetCheckDigitString: string;
  readonly CbetStepaside: string;
  readonly Csid: string;
}

interface NielsenConfiguration {
  readonly DistributorId: string;
  readonly NielsenPcmToId3Tagging: string;
}

interface NielsenNaesIiNw {
  readonly CheckDigitString: string;
  readonly Sid: unknown;
}

interface NielsenWatermarksSettings {
  readonly NielsenCbetSettings: NielsenCBET;
  readonly NielsenDistributionType: string;
  readonly NielsenNaesIiNwSettings: NielsenNaesIiNw;
}

interface NotFoundException {
  readonly Message: string;
}

interface Offering {
  readonly Arn: string;
  readonly CurrencyCode: string;
  readonly Duration: number;
  readonly DurationUnits: string;
  readonly FixedPrice: unknown;
  readonly OfferingDescription: string;
  readonly OfferingId: string;
  readonly OfferingType: string;
  readonly Region: string;
  readonly ResourceSpecification: ReservationResourceSpecification;
  readonly UsagePrice: unknown;
}

interface Output {
  readonly AudioDescriptionNames: [];
  readonly CaptionDescriptionNames: [];
  readonly OutputName: string;
  readonly OutputSettings: OutputSettings;
  readonly VideoDescriptionName: string;
}

interface OutputDestination {
  readonly Id: string;
  readonly MediaPackageSettings: [];
  readonly MultiplexSettings: MultiplexProgramChannelDestinationSettings;
  readonly Settings: [];
}

interface OutputDestinationSettings {
  readonly PasswordParam: string;
  readonly StreamName: string;
  readonly Url: string;
  readonly Username: string;
}

interface OutputGroup {
  readonly Name: string;
  readonly OutputGroupSettings: OutputGroupSettings;
  readonly Outputs: [];
}

interface OutputGroupSettings {
  readonly ArchiveGroupSettings: ArchiveGroupSettings;
  readonly FrameCaptureGroupSettings: FrameCaptureGroupSettings;
  readonly HlsGroupSettings: HlsGroupSettings;
  readonly MediaPackageGroupSettings: MediaPackageGroupSettings;
  readonly MsSmoothGroupSettings: MsSmoothGroupSettings;
  readonly MultiplexGroupSettings: MultiplexGroupSettings;
  readonly RtmpGroupSettings: RtmpGroupSettings;
  readonly UdpGroupSettings: UdpGroupSettings;
}

interface OutputLocationRef {
  readonly DestinationRefId: string;
}

interface OutputSettings {
  readonly ArchiveOutputSettings: ArchiveOutputSettings;
  readonly FrameCaptureOutputSettings: FrameCaptureOutputSettings;
  readonly HlsOutputSettings: HlsOutputSettings;
  readonly MediaPackageOutputSettings: MediaPackageOutputSettings;
  readonly MsSmoothOutputSettings: MsSmoothOutputSettings;
  readonly MultiplexOutputSettings: MultiplexOutputSettings;
  readonly RtmpOutputSettings: RtmpOutputSettings;
  readonly UdpOutputSettings: UdpOutputSettings;
}

interface PassThroughSettings {
}

interface PauseStateScheduleActionSettings {
  readonly Pipelines: [];
}

interface PipelineDetail {
  readonly ActiveInputAttachmentName: string;
  readonly ActiveInputSwitchActionName: string;
  readonly ActiveMotionGraphicsActionName: string;
  readonly ActiveMotionGraphicsUri: string;
  readonly PipelineId: string;
}

interface PipelinePauseStateSettings {
  readonly PipelineId: string;
}

interface PurchaseOffering {
  readonly Count: number;
  readonly Name: string;
  readonly RequestId: string;
  readonly Start: string;
  readonly Tags: {[key: string]: any};
}

interface PurchaseOfferingRequest {
  readonly Count: number;
  readonly Name: string;
  readonly OfferingId: string;
  readonly RequestId: string;
  readonly Start: string;
  readonly Tags: {[key: string]: any};
}

interface PurchaseOfferingResponse {
  readonly Reservation: Reservation;
}

interface PurchaseOfferingResultModel {
  readonly Reservation: Reservation;
}

interface RawSettings {
}

interface Rec601Settings {
}

interface Rec709Settings {
}

interface RejectInputDeviceTransferRequest {
  readonly InputDeviceId: string;
}

interface RejectInputDeviceTransferResponse {
}

interface RemixSettings {
  readonly ChannelMappings: [];
  readonly ChannelsIn: number;
  readonly ChannelsOut: number;
}

interface Reservation {
  readonly Arn: string;
  readonly Count: number;
  readonly CurrencyCode: string;
  readonly Duration: number;
  readonly DurationUnits: string;
  readonly End: string;
  readonly FixedPrice: unknown;
  readonly Name: string;
  readonly OfferingDescription: string;
  readonly OfferingId: string;
  readonly OfferingType: string;
  readonly Region: string;
  readonly ReservationId: string;
  readonly ResourceSpecification: ReservationResourceSpecification;
  readonly Start: string;
  readonly State: string;
  readonly Tags: {[key: string]: any};
  readonly UsagePrice: unknown;
}

interface ReservationResourceSpecification {
  readonly ChannelClass: string;
  readonly Codec: string;
  readonly MaximumBitrate: string;
  readonly MaximumFramerate: string;
  readonly Resolution: string;
  readonly ResourceType: string;
  readonly SpecialFeature: string;
  readonly VideoQuality: string;
}

interface ResourceConflict {
  readonly Message: string;
}

interface ResourceNotFound {
  readonly Message: string;
}

interface RtmpCaptionInfoDestinationSettings {
}

interface RtmpGroupSettings {
  readonly AdMarkers: [];
  readonly AuthenticationScheme: string;
  readonly CacheFullBehavior: string;
  readonly CacheLength: number;
  readonly CaptionData: string;
  readonly InputLossAction: string;
  readonly RestartDelay: number;
}

interface RtmpOutputSettings {
  readonly CertificateMode: string;
  readonly ConnectionRetryInterval: number;
  readonly Destination: OutputLocationRef;
  readonly NumRetries: number;
}

interface ScheduleAction {
  readonly ActionName: string;
  readonly ScheduleActionSettings: ScheduleActionSettings;
  readonly ScheduleActionStartSettings: ScheduleActionStartSettings;
}

interface ScheduleActionSettings {
  readonly HlsId3SegmentTaggingSettings: HlsId3SegmentTaggingScheduleActionSettings;
  readonly HlsTimedMetadataSettings: HlsTimedMetadataScheduleActionSettings;
  readonly InputPrepareSettings: InputPrepareScheduleActionSettings;
  readonly InputSwitchSettings: InputSwitchScheduleActionSettings;
  readonly MotionGraphicsImageActivateSettings: MotionGraphicsActivateScheduleActionSettings;
  readonly MotionGraphicsImageDeactivateSettings: MotionGraphicsDeactivateScheduleActionSettings;
  readonly PauseStateSettings: PauseStateScheduleActionSettings;
  readonly Scte35ReturnToNetworkSettings: Scte35ReturnToNetworkScheduleActionSettings;
  readonly Scte35SpliceInsertSettings: Scte35SpliceInsertScheduleActionSettings;
  readonly Scte35TimeSignalSettings: Scte35TimeSignalScheduleActionSettings;
  readonly StaticImageActivateSettings: StaticImageActivateScheduleActionSettings;
  readonly StaticImageDeactivateSettings: StaticImageDeactivateScheduleActionSettings;
}

interface ScheduleActionStartSettings {
  readonly FixedModeScheduleActionStartSettings: FixedModeScheduleActionStartSettings;
  readonly FollowModeScheduleActionStartSettings: FollowModeScheduleActionStartSettings;
  readonly ImmediateModeScheduleActionStartSettings: ImmediateModeScheduleActionStartSettings;
}

interface ScheduleDeleteResultModel {
}

interface ScheduleDescribeResultModel {
  readonly NextToken: string;
  readonly ScheduleActions: [];
}

interface Scte20PlusEmbeddedDestinationSettings {
}

interface Scte20SourceSettings {
  readonly Convert608To708: string;
  readonly Source608ChannelNumber: number;
}

interface Scte27DestinationSettings {
}

interface Scte27SourceSettings {
  readonly OcrLanguage: string;
  readonly Pid: number;
}

interface Scte35DeliveryRestrictions {
  readonly ArchiveAllowedFlag: string;
  readonly DeviceRestrictions: string;
  readonly NoRegionalBlackoutFlag: string;
  readonly WebDeliveryAllowedFlag: string;
}

interface Scte35Descriptor {
  readonly Scte35DescriptorSettings: Scte35DescriptorSettings;
}

interface Scte35DescriptorSettings {
  readonly SegmentationDescriptorScte35DescriptorSettings: Scte35SegmentationDescriptor;
}

interface Scte35ReturnToNetworkScheduleActionSettings {
  readonly SpliceEventId: number;
}

interface Scte35SegmentationDescriptor {
  readonly DeliveryRestrictions: Scte35DeliveryRestrictions;
  readonly SegmentNum: number;
  readonly SegmentationCancelIndicator: string;
  readonly SegmentationDuration: number;
  readonly SegmentationEventId: number;
  readonly SegmentationTypeId: number;
  readonly SegmentationUpid: string;
  readonly SegmentationUpidType: number;
  readonly SegmentsExpected: number;
  readonly SubSegmentNum: number;
  readonly SubSegmentsExpected: number;
}

interface Scte35SpliceInsert {
  readonly AdAvailOffset: number;
  readonly NoRegionalBlackoutFlag: string;
  readonly WebDeliveryAllowedFlag: string;
}

interface Scte35SpliceInsertScheduleActionSettings {
  readonly Duration: number;
  readonly SpliceEventId: number;
}

interface Scte35TimeSignalApos {
  readonly AdAvailOffset: number;
  readonly NoRegionalBlackoutFlag: string;
  readonly WebDeliveryAllowedFlag: string;
}

interface Scte35TimeSignalScheduleActionSettings {
  readonly Scte35Descriptors: [];
}

interface SmpteTtDestinationSettings {
}

interface StandardHlsSettings {
  readonly AudioRenditionSets: string;
  readonly M3u8Settings: M3u8Settings;
}

interface StartChannelRequest {
  readonly ChannelId: string;
}

interface StartChannelResponse {
  readonly Arn: string;
  readonly CdiInputSpecification: CdiInputSpecification;
  readonly ChannelClass: string;
  readonly Destinations: [];
  readonly EgressEndpoints: [];
  readonly EncoderSettings: EncoderSettings;
  readonly Id: string;
  readonly InputAttachments: [];
  readonly InputSpecification: InputSpecification;
  readonly LogLevel: string;
  readonly Name: string;
  readonly PipelineDetails: [];
  readonly PipelinesRunningCount: number;
  readonly RoleArn: string;
  readonly State: string;
  readonly Tags: {[key: string]: any};
  readonly Vpc: VpcOutputSettingsDescription;
}

interface StartMultiplexRequest {
  readonly MultiplexId: string;
}

interface StartMultiplexResponse {
  readonly Arn: string;
  readonly AvailabilityZones: [];
  readonly Destinations: [];
  readonly Id: string;
  readonly MultiplexSettings: MultiplexSettings;
  readonly Name: string;
  readonly PipelinesRunningCount: number;
  readonly ProgramCount: number;
  readonly State: string;
  readonly Tags: {[key: string]: any};
}

interface StartTimecode {
  readonly Timecode: string;
}

interface StaticImageActivateScheduleActionSettings {
  readonly Duration: number;
  readonly FadeIn: number;
  readonly FadeOut: number;
  readonly Height: number;
  readonly Image: InputLocation;
  readonly ImageX: number;
  readonly ImageY: number;
  readonly Layer: number;
  readonly Opacity: number;
  readonly Width: number;
}

interface StaticImageDeactivateScheduleActionSettings {
  readonly FadeOut: number;
  readonly Layer: number;
}

interface StaticKeySettings {
  readonly KeyProviderServer: InputLocation;
  readonly StaticKeyValue: string;
}

interface StopChannelRequest {
  readonly ChannelId: string;
}

interface StopChannelResponse {
  readonly Arn: string;
  readonly CdiInputSpecification: CdiInputSpecification;
  readonly ChannelClass: string;
  readonly Destinations: [];
  readonly EgressEndpoints: [];
  readonly EncoderSettings: EncoderSettings;
  readonly Id: string;
  readonly InputAttachments: [];
  readonly InputSpecification: InputSpecification;
  readonly LogLevel: string;
  readonly Name: string;
  readonly PipelineDetails: [];
  readonly PipelinesRunningCount: number;
  readonly RoleArn: string;
  readonly State: string;
  readonly Tags: {[key: string]: any};
  readonly Vpc: VpcOutputSettingsDescription;
}

interface StopMultiplexRequest {
  readonly MultiplexId: string;
}

interface StopMultiplexResponse {
  readonly Arn: string;
  readonly AvailabilityZones: [];
  readonly Destinations: [];
  readonly Id: string;
  readonly MultiplexSettings: MultiplexSettings;
  readonly Name: string;
  readonly PipelinesRunningCount: number;
  readonly ProgramCount: number;
  readonly State: string;
  readonly Tags: {[key: string]: any};
}

interface StopTimecode {
  readonly LastFrameClippingBehavior: string;
  readonly Timecode: string;
}

interface TagsModel {
  readonly Tags: {[key: string]: any};
}

interface TeletextDestinationSettings {
}

interface TeletextSourceSettings {
  readonly OutputRectangle: CaptionRectangle;
  readonly PageNumber: string;
}

interface TemporalFilterSettings {
  readonly PostFilterSharpening: string;
  readonly Strength: string;
}

interface ThumbnailData {
  readonly Body: string;
}

interface TimecodeConfig {
  readonly Source: string;
  readonly SyncThreshold: number;
}

interface TooManyRequestsException {
  readonly Message: string;
}

interface TransferInputDevice {
  readonly TargetCustomerId: string;
  readonly TargetRegion: string;
  readonly TransferMessage: string;
}

interface TransferInputDeviceRequest {
  readonly InputDeviceId: string;
  readonly TargetCustomerId: string;
  readonly TargetRegion: string;
  readonly TransferMessage: string;
}

interface TransferInputDeviceResponse {
}

interface TransferringInputDeviceSummary {
  readonly Id: string;
  readonly Message: string;
  readonly TargetCustomerId: string;
  readonly TransferType: string;
}

interface TtmlDestinationSettings {
  readonly StyleControl: string;
}

interface UdpContainerSettings {
  readonly M2tsSettings: M2tsSettings;
}

interface UdpGroupSettings {
  readonly InputLossAction: string;
  readonly TimedMetadataId3Frame: string;
  readonly TimedMetadataId3Period: number;
}

interface UdpOutputSettings {
  readonly BufferMsec: number;
  readonly ContainerSettings: UdpContainerSettings;
  readonly Destination: OutputLocationRef;
  readonly FecOutputSettings: FecOutputSettings;
}

interface UnprocessableEntityException {
  readonly Message: string;
  readonly ValidationErrors: [];
}

interface UpdateChannel {
  readonly CdiInputSpecification: CdiInputSpecification;
  readonly Destinations: [];
  readonly EncoderSettings: EncoderSettings;
  readonly InputAttachments: [];
  readonly InputSpecification: InputSpecification;
  readonly LogLevel: string;
  readonly Name: string;
  readonly RoleArn: string;
}

interface UpdateChannelClass {
  readonly ChannelClass: string;
  readonly Destinations: [];
}

interface UpdateChannelClassRequest {
  readonly ChannelClass: string;
  readonly ChannelId: string;
  readonly Destinations: [];
}

interface UpdateChannelClassResponse {
  readonly Channel: Channel;
}

interface UpdateChannelRequest {
  readonly CdiInputSpecification: CdiInputSpecification;
  readonly ChannelId: string;
  readonly Destinations: [];
  readonly EncoderSettings: EncoderSettings;
  readonly InputAttachments: [];
  readonly InputSpecification: InputSpecification;
  readonly LogLevel: string;
  readonly Name: string;
  readonly RoleArn: string;
}

interface UpdateChannelResponse {
  readonly Channel: Channel;
}

interface UpdateChannelResultModel {
  readonly Channel: Channel;
}

interface UpdateInput {
  readonly Destinations: [];
  readonly InputDevices: [];
  readonly InputSecurityGroups: [];
  readonly MediaConnectFlows: [];
  readonly Name: string;
  readonly RoleArn: string;
  readonly Sources: [];
}

interface UpdateInputDevice {
  readonly HdDeviceSettings: InputDeviceConfigurableSettings;
  readonly Name: string;
  readonly UhdDeviceSettings: InputDeviceConfigurableSettings;
}

interface UpdateInputDeviceRequest {
  readonly HdDeviceSettings: InputDeviceConfigurableSettings;
  readonly InputDeviceId: string;
  readonly Name: string;
  readonly UhdDeviceSettings: InputDeviceConfigurableSettings;
}

interface UpdateInputDeviceResponse {
  readonly Arn: string;
  readonly ConnectionState: string;
  readonly DeviceSettingsSyncState: string;
  readonly DeviceUpdateStatus: string;
  readonly HdDeviceSettings: InputDeviceHdSettings;
  readonly Id: string;
  readonly MacAddress: string;
  readonly Name: string;
  readonly NetworkSettings: InputDeviceNetworkSettings;
  readonly SerialNumber: string;
  readonly Type: string;
  readonly UhdDeviceSettings: InputDeviceUhdSettings;
}

interface UpdateInputRequest {
  readonly Destinations: [];
  readonly InputDevices: [];
  readonly InputId: string;
  readonly InputSecurityGroups: [];
  readonly MediaConnectFlows: [];
  readonly Name: string;
  readonly RoleArn: string;
  readonly Sources: [];
}

interface UpdateInputResponse {
  readonly Input: Input;
}

interface UpdateInputResultModel {
  readonly Input: Input;
}

interface UpdateInputSecurityGroupRequest {
  readonly InputSecurityGroupId: string;
  readonly Tags: {[key: string]: any};
  readonly WhitelistRules: [];
}

interface UpdateInputSecurityGroupResponse {
  readonly SecurityGroup: InputSecurityGroup;
}

interface UpdateInputSecurityGroupResultModel {
  readonly SecurityGroup: InputSecurityGroup;
}

interface UpdateMultiplex {
  readonly MultiplexSettings: MultiplexSettings;
  readonly Name: string;
}

interface UpdateMultiplexProgram {
  readonly MultiplexProgramSettings: MultiplexProgramSettings;
}

interface UpdateMultiplexProgramRequest {
  readonly MultiplexId: string;
  readonly MultiplexProgramSettings: MultiplexProgramSettings;
  readonly ProgramName: string;
}

interface UpdateMultiplexProgramResponse {
  readonly MultiplexProgram: MultiplexProgram;
}

interface UpdateMultiplexProgramResultModel {
  readonly MultiplexProgram: MultiplexProgram;
}

interface UpdateMultiplexRequest {
  readonly MultiplexId: string;
  readonly MultiplexSettings: MultiplexSettings;
  readonly Name: string;
}

interface UpdateMultiplexResponse {
  readonly Multiplex: Multiplex;
}

interface UpdateMultiplexResultModel {
  readonly Multiplex: Multiplex;
}

interface UpdateReservation {
  readonly Name: string;
}

interface UpdateReservationRequest {
  readonly Name: string;
  readonly ReservationId: string;
}

interface UpdateReservationResponse {
  readonly Reservation: Reservation;
}

interface UpdateReservationResultModel {
  readonly Reservation: Reservation;
}

interface ValidationError {
  readonly ElementPath: string;
  readonly ErrorMessage: string;
}

interface VideoBlackFailoverSettings {
  readonly BlackDetectThreshold: unknown;
  readonly VideoBlackThresholdMsec: number;
}

interface VideoCodecSettings {
  readonly FrameCaptureSettings: FrameCaptureSettings;
  readonly H264Settings: H264Settings;
  readonly H265Settings: H265Settings;
  readonly Mpeg2Settings: Mpeg2Settings;
}

interface VideoDescription {
  readonly CodecSettings: VideoCodecSettings;
  readonly Height: number;
  readonly Name: string;
  readonly RespondToAfd: string;
  readonly ScalingBehavior: string;
  readonly Sharpness: number;
  readonly Width: number;
}

interface VideoSelector {
  readonly ColorSpace: string;
  readonly ColorSpaceSettings: VideoSelectorColorSpaceSettings;
  readonly ColorSpaceUsage: string;
  readonly SelectorSettings: VideoSelectorSettings;
}

interface VideoSelectorColorSpaceSettings {
  readonly Hdr10Settings: Hdr10Settings;
}

interface VideoSelectorPid {
  readonly Pid: number;
}

interface VideoSelectorProgramId {
  readonly ProgramId: number;
}

interface VideoSelectorSettings {
  readonly VideoSelectorPid: VideoSelectorPid;
  readonly VideoSelectorProgramId: VideoSelectorProgramId;
}

interface VpcOutputSettings {
  readonly PublicAddressAllocationIds: [];
  readonly SecurityGroupIds: [];
  readonly SubnetIds: [];
}

interface VpcOutputSettingsDescription {
  readonly AvailabilityZones: [];
  readonly NetworkInterfaceIds: [];
  readonly SecurityGroupIds: [];
  readonly SubnetIds: [];
}

interface WavSettings {
  readonly BitDepth: unknown;
  readonly CodingMode: string;
  readonly SampleRate: unknown;
}

interface WebvttDestinationSettings {
  readonly StyleControl: string;
}

