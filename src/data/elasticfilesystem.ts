/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CreateAccessPoint {
  readonly ClientToken: string;
  readonly Tags: [];
  readonly FileSystemId: string;
  readonly PosixUser: PosixUser;
  readonly RootDirectory: RootDirectory;
}
export interface CreateFileSystem {
  readonly CreationToken: string;
  readonly PerformanceMode: string;
  readonly Encrypted: boolean;
  readonly KmsKeyId: string;
  readonly ThroughputMode: string;
  readonly ProvisionedThroughputInMibps: unknown;
  readonly AvailabilityZoneName: string;
  readonly Backup: boolean;
  readonly Tags: [];
}
export interface CreateMountTarget {
  readonly FileSystemId: string;
  readonly SubnetId: string;
  readonly IpAddress: string;
  readonly SecurityGroups: [];
}
export interface CreateTags {
  readonly FileSystemId: string;
  readonly Tags: [];
}
export interface DeleteAccessPoint {
  readonly AccessPointId: string;
}
export interface DeleteFileSystem {
  readonly FileSystemId: string;
}
export interface DeleteFileSystemPolicy {
  readonly FileSystemId: string;
}
export interface DeleteMountTarget {
  readonly MountTargetId: string;
}
export interface DeleteTags {
  readonly FileSystemId: string;
  readonly TagKeys: [];
}
export interface DescribeAccessPoints {
  readonly MaxResults: number;
  readonly NextToken: string;
  readonly AccessPointId: string;
  readonly FileSystemId: string;
}
export interface DescribeAccountPreferences {
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface DescribeBackupPolicy {
  readonly FileSystemId: string;
}
export interface DescribeFileSystemPolicy {
  readonly FileSystemId: string;
}
export interface DescribeFileSystems {
  readonly MaxItems: number;
  readonly Marker: string;
  readonly CreationToken: string;
  readonly FileSystemId: string;
}
export interface DescribeLifecycleConfiguration {
  readonly FileSystemId: string;
}
export interface DescribeMountTargetSecurityGroups {
  readonly MountTargetId: string;
}
export interface DescribeMountTargets {
  readonly MaxItems: number;
  readonly Marker: string;
  readonly FileSystemId: string;
  readonly MountTargetId: string;
  readonly AccessPointId: string;
}
export interface DescribeTags {
  readonly MaxItems: number;
  readonly Marker: string;
  readonly FileSystemId: string;
}
export interface ListTagsForResource {
  readonly ResourceId: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface ModifyMountTargetSecurityGroups {
  readonly MountTargetId: string;
  readonly SecurityGroups: [];
}
export interface PutAccountPreferences {
  readonly ResourceIdType: string;
}
export interface PutBackupPolicy {
  readonly FileSystemId: string;
  readonly BackupPolicy: BackupPolicy;
}
export interface PutFileSystemPolicy {
  readonly FileSystemId: string;
  readonly Policy: string;
  readonly BypassPolicyLockoutSafetyCheck: boolean;
}
export interface PutLifecycleConfiguration {
  readonly FileSystemId: string;
  readonly LifecyclePolicies: [];
}
export interface TagResource {
  readonly ResourceId: string;
  readonly Tags: [];
}
export interface UntagResource {
  readonly ResourceId: string;
  readonly TagKeys: [];
}
export interface UpdateFileSystem {
  readonly FileSystemId: string;
  readonly ThroughputMode: string;
  readonly ProvisionedThroughputInMibps: unknown;
}



interface AccessPointAlreadyExists {
  readonly ErrorCode: string;
  readonly Message: string;
  readonly AccessPointId: string;
}

interface AccessPointDescription {
  readonly ClientToken: string;
  readonly Name: string;
  readonly Tags: [];
  readonly AccessPointId: string;
  readonly AccessPointArn: string;
  readonly FileSystemId: string;
  readonly PosixUser: PosixUser;
  readonly RootDirectory: RootDirectory;
  readonly OwnerId: string;
  readonly LifeCycleState: string;
}

interface AccessPointLimitExceeded {
  readonly ErrorCode: string;
  readonly Message: string;
}

interface AccessPointNotFound {
  readonly ErrorCode: string;
  readonly Message: string;
}

interface AvailabilityZonesMismatch {
  readonly ErrorCode: string;
  readonly Message: string;
}

interface BackupPolicy {
  readonly Status: string;
}

interface BackupPolicyDescription {
  readonly BackupPolicy: BackupPolicy;
}

interface BadRequest {
  readonly ErrorCode: string;
  readonly Message: string;
}

interface CreateAccessPointRequest {
  readonly ClientToken: string;
  readonly Tags: [];
  readonly FileSystemId: string;
  readonly PosixUser: PosixUser;
  readonly RootDirectory: RootDirectory;
}

interface CreateFileSystemRequest {
  readonly CreationToken: string;
  readonly PerformanceMode: string;
  readonly Encrypted: boolean;
  readonly KmsKeyId: string;
  readonly ThroughputMode: string;
  readonly ProvisionedThroughputInMibps: unknown;
  readonly AvailabilityZoneName: string;
  readonly Backup: boolean;
  readonly Tags: [];
}

interface CreateMountTargetRequest {
  readonly FileSystemId: string;
  readonly SubnetId: string;
  readonly IpAddress: string;
  readonly SecurityGroups: [];
}

interface CreateTagsRequest {
  readonly FileSystemId: string;
  readonly Tags: [];
}

interface CreationInfo {
  readonly OwnerUid: number;
  readonly OwnerGid: number;
  readonly Permissions: string;
}

interface DeleteAccessPointRequest {
  readonly AccessPointId: string;
}

interface DeleteFileSystemPolicyRequest {
  readonly FileSystemId: string;
}

interface DeleteFileSystemRequest {
  readonly FileSystemId: string;
}

interface DeleteMountTargetRequest {
  readonly MountTargetId: string;
}

interface DeleteTagsRequest {
  readonly FileSystemId: string;
  readonly TagKeys: [];
}

interface DependencyTimeout {
  readonly ErrorCode: string;
  readonly Message: string;
}

interface DescribeAccessPointsRequest {
  readonly MaxResults: number;
  readonly NextToken: string;
  readonly AccessPointId: string;
  readonly FileSystemId: string;
}

interface DescribeAccessPointsResponse {
  readonly AccessPoints: [];
  readonly NextToken: string;
}

interface DescribeAccountPreferencesRequest {
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface DescribeAccountPreferencesResponse {
  readonly ResourceIdPreference: ResourceIdPreference;
  readonly NextToken: string;
}

interface DescribeBackupPolicyRequest {
  readonly FileSystemId: string;
}

interface DescribeFileSystemPolicyRequest {
  readonly FileSystemId: string;
}

interface DescribeFileSystemsRequest {
  readonly MaxItems: number;
  readonly Marker: string;
  readonly CreationToken: string;
  readonly FileSystemId: string;
}

interface DescribeFileSystemsResponse {
  readonly Marker: string;
  readonly FileSystems: [];
  readonly NextMarker: string;
}

interface DescribeLifecycleConfigurationRequest {
  readonly FileSystemId: string;
}

interface DescribeMountTargetSecurityGroupsRequest {
  readonly MountTargetId: string;
}

interface DescribeMountTargetSecurityGroupsResponse {
  readonly SecurityGroups: [];
}

interface DescribeMountTargetsRequest {
  readonly MaxItems: number;
  readonly Marker: string;
  readonly FileSystemId: string;
  readonly MountTargetId: string;
  readonly AccessPointId: string;
}

interface DescribeMountTargetsResponse {
  readonly Marker: string;
  readonly MountTargets: [];
  readonly NextMarker: string;
}

interface DescribeTagsRequest {
  readonly MaxItems: number;
  readonly Marker: string;
  readonly FileSystemId: string;
}

interface DescribeTagsResponse {
  readonly Marker: string;
  readonly Tags: [];
  readonly NextMarker: string;
}

interface FileSystemAlreadyExists {
  readonly ErrorCode: string;
  readonly Message: string;
  readonly FileSystemId: string;
}

interface FileSystemDescription {
  readonly OwnerId: string;
  readonly CreationToken: string;
  readonly FileSystemId: string;
  readonly FileSystemArn: string;
  readonly CreationTime: Date;
  readonly LifeCycleState: string;
  readonly Name: string;
  readonly NumberOfMountTargets: number;
  readonly SizeInBytes: FileSystemSize;
  readonly PerformanceMode: string;
  readonly Encrypted: boolean;
  readonly KmsKeyId: string;
  readonly ThroughputMode: string;
  readonly ProvisionedThroughputInMibps: unknown;
  readonly AvailabilityZoneName: string;
  readonly AvailabilityZoneId: string;
  readonly Tags: [];
}

interface FileSystemInUse {
  readonly ErrorCode: string;
  readonly Message: string;
}

interface FileSystemLimitExceeded {
  readonly ErrorCode: string;
  readonly Message: string;
}

interface FileSystemNotFound {
  readonly ErrorCode: string;
  readonly Message: string;
}

interface FileSystemPolicyDescription {
  readonly FileSystemId: string;
  readonly Policy: string;
}

interface FileSystemSize {
  readonly Value: number;
  readonly Timestamp: Date;
  readonly ValueInIA: number;
  readonly ValueInStandard: number;
}

interface IncorrectFileSystemLifeCycleState {
  readonly ErrorCode: string;
  readonly Message: string;
}

interface IncorrectMountTargetState {
  readonly ErrorCode: string;
  readonly Message: string;
}

interface InsufficientThroughputCapacity {
  readonly ErrorCode: string;
  readonly Message: string;
}

interface InternalServerError {
  readonly ErrorCode: string;
  readonly Message: string;
}

interface InvalidPolicyException {
  readonly ErrorCode: string;
  readonly Message: string;
}

interface IpAddressInUse {
  readonly ErrorCode: string;
  readonly Message: string;
}

interface LifecycleConfigurationDescription {
  readonly LifecyclePolicies: [];
}

interface LifecyclePolicy {
  readonly TransitionToIA: string;
  readonly TransitionToPrimaryStorageClass: string;
}

interface ListTagsForResourceRequest {
  readonly ResourceId: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListTagsForResourceResponse {
  readonly Tags: [];
  readonly NextToken: string;
}

interface ModifyMountTargetSecurityGroupsRequest {
  readonly MountTargetId: string;
  readonly SecurityGroups: [];
}

interface MountTargetConflict {
  readonly ErrorCode: string;
  readonly Message: string;
}

interface MountTargetDescription {
  readonly OwnerId: string;
  readonly MountTargetId: string;
  readonly FileSystemId: string;
  readonly SubnetId: string;
  readonly LifeCycleState: string;
  readonly IpAddress: string;
  readonly NetworkInterfaceId: string;
  readonly AvailabilityZoneId: string;
  readonly AvailabilityZoneName: string;
  readonly VpcId: string;
}

interface MountTargetNotFound {
  readonly ErrorCode: string;
  readonly Message: string;
}

interface NetworkInterfaceLimitExceeded {
  readonly ErrorCode: string;
  readonly Message: string;
}

interface NoFreeAddressesInSubnet {
  readonly ErrorCode: string;
  readonly Message: string;
}

interface PolicyNotFound {
  readonly ErrorCode: string;
  readonly Message: string;
}

interface PosixUser {
  readonly Uid: number;
  readonly Gid: number;
  readonly SecondaryGids: [];
}

interface PutAccountPreferencesRequest {
  readonly ResourceIdType: string;
}

interface PutAccountPreferencesResponse {
  readonly ResourceIdPreference: ResourceIdPreference;
}

interface PutBackupPolicyRequest {
  readonly FileSystemId: string;
  readonly BackupPolicy: BackupPolicy;
}

interface PutFileSystemPolicyRequest {
  readonly FileSystemId: string;
  readonly Policy: string;
  readonly BypassPolicyLockoutSafetyCheck: boolean;
}

interface PutLifecycleConfigurationRequest {
  readonly FileSystemId: string;
  readonly LifecyclePolicies: [];
}

interface ResourceIdPreference {
  readonly ResourceIdType: string;
  readonly Resources: [];
}

interface RootDirectory {
  readonly Path: string;
  readonly CreationInfo: CreationInfo;
}

interface SecurityGroupLimitExceeded {
  readonly ErrorCode: string;
  readonly Message: string;
}

interface SecurityGroupNotFound {
  readonly ErrorCode: string;
  readonly Message: string;
}

interface SubnetNotFound {
  readonly ErrorCode: string;
  readonly Message: string;
}

interface Tag {
  readonly Key: string;
  readonly Value: string;
}

interface TagResourceRequest {
  readonly ResourceId: string;
  readonly Tags: [];
}

interface ThroughputLimitExceeded {
  readonly ErrorCode: string;
  readonly Message: string;
}

interface TooManyRequests {
  readonly ErrorCode: string;
  readonly Message: string;
}

interface UnsupportedAvailabilityZone {
  readonly ErrorCode: string;
  readonly Message: string;
}

interface UntagResourceRequest {
  readonly ResourceId: string;
  readonly TagKeys: [];
}

interface UpdateFileSystemRequest {
  readonly FileSystemId: string;
  readonly ThroughputMode: string;
  readonly ProvisionedThroughputInMibps: unknown;
}

interface ValidationException {
  readonly ErrorCode: string;
  readonly Message: string;
}

