/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CreateAccessPoint {
  readonly ClientToken: string;
  readonly Tags?: [];
  readonly FileSystemId: string;
  readonly PosixUser?: PosixUser;
  readonly RootDirectory?: RootDirectory;
}

export interface CreateFileSystem {
  readonly CreationToken: string;
  readonly PerformanceMode?: string;
  readonly Encrypted?: boolean;
  readonly KmsKeyId?: string;
  readonly ThroughputMode?: string;
  readonly ProvisionedThroughputInMibps?: unknown;
  readonly AvailabilityZoneName?: string;
  readonly Backup?: boolean;
  readonly Tags?: [];
}

export interface CreateMountTarget {
  readonly FileSystemId: string;
  readonly SubnetId: string;
  readonly IpAddress?: string;
  readonly SecurityGroups?: [];
}

export interface CreateTags {
  readonly FileSystemId: string;
  readonly Tags: [];
}

export interface DeleteAccessPoint {
  readonly AccessPointId: string;
}

export interface DeleteFileSystem {
  readonly FileSystemId: string;
}

export interface DeleteFileSystemPolicy {
  readonly FileSystemId: string;
}

export interface DeleteMountTarget {
  readonly MountTargetId: string;
}

export interface DeleteTags {
  readonly FileSystemId: string;
  readonly TagKeys: [];
}

export interface DescribeAccessPoints {
  readonly MaxResults?: number;
  readonly NextToken?: string;
  readonly AccessPointId?: string;
  readonly FileSystemId?: string;
}

export interface DescribeAccountPreferences {
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface DescribeBackupPolicy {
  readonly FileSystemId: string;
}

export interface DescribeFileSystemPolicy {
  readonly FileSystemId: string;
}

export interface DescribeFileSystems {
  readonly MaxItems?: number;
  readonly Marker?: string;
  readonly CreationToken?: string;
  readonly FileSystemId?: string;
}

export interface DescribeLifecycleConfiguration {
  readonly FileSystemId: string;
}

export interface DescribeMountTargetSecurityGroups {
  readonly MountTargetId: string;
}

export interface DescribeMountTargets {
  readonly MaxItems?: number;
  readonly Marker?: string;
  readonly FileSystemId?: string;
  readonly MountTargetId?: string;
  readonly AccessPointId?: string;
}

export interface DescribeTags {
  readonly MaxItems?: number;
  readonly Marker?: string;
  readonly FileSystemId: string;
}

export interface ListTagsForResource {
  readonly ResourceId: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ModifyMountTargetSecurityGroups {
  readonly MountTargetId: string;
  readonly SecurityGroups?: [];
}

export interface PutAccountPreferences {
  readonly ResourceIdType: string;
}

export interface PutBackupPolicy {
  readonly FileSystemId: string;
  readonly BackupPolicy: BackupPolicy;
}

export interface PutFileSystemPolicy {
  readonly FileSystemId: string;
  readonly Policy: string;
  readonly BypassPolicyLockoutSafetyCheck?: boolean;
}

export interface PutLifecycleConfiguration {
  readonly FileSystemId: string;
  readonly LifecyclePolicies: [];
}

export interface TagResource {
  readonly ResourceId: string;
  readonly Tags: [];
}

export interface UntagResource {
  readonly ResourceId: string;
  readonly TagKeys: [];
}

export interface UpdateFileSystem {
  readonly FileSystemId: string;
  readonly ThroughputMode?: string;
  readonly ProvisionedThroughputInMibps?: unknown;
}

export interface AccessPointAlreadyExists {
  readonly ErrorCode: string;
  readonly Message?: string;
  readonly AccessPointId: string;
}

export interface AccessPointDescription {
  readonly ClientToken?: string;
  readonly Name?: string;
  readonly Tags?: [];
  readonly AccessPointId?: string;
  readonly AccessPointArn?: string;
  readonly FileSystemId?: string;
  readonly PosixUser?: PosixUser;
  readonly RootDirectory?: RootDirectory;
  readonly OwnerId?: string;
  readonly LifeCycleState?: string;
}

export interface AccessPointLimitExceeded {
  readonly ErrorCode: string;
  readonly Message?: string;
}

export interface AccessPointNotFound {
  readonly ErrorCode: string;
  readonly Message?: string;
}

export interface AvailabilityZonesMismatch {
  readonly ErrorCode?: string;
  readonly Message?: string;
}

export interface BackupPolicy {
  readonly Status: string;
}

export interface BackupPolicyDescription {
  readonly BackupPolicy?: BackupPolicy;
}

export interface BadRequest {
  readonly ErrorCode: string;
  readonly Message?: string;
}

export interface CreateAccessPointRequest {
  readonly ClientToken: string;
  readonly Tags?: [];
  readonly FileSystemId: string;
  readonly PosixUser?: PosixUser;
  readonly RootDirectory?: RootDirectory;
}

export interface CreateFileSystemRequest {
  readonly CreationToken: string;
  readonly PerformanceMode?: string;
  readonly Encrypted?: boolean;
  readonly KmsKeyId?: string;
  readonly ThroughputMode?: string;
  readonly ProvisionedThroughputInMibps?: unknown;
  readonly AvailabilityZoneName?: string;
  readonly Backup?: boolean;
  readonly Tags?: [];
}

export interface CreateMountTargetRequest {
  readonly FileSystemId: string;
  readonly SubnetId: string;
  readonly IpAddress?: string;
  readonly SecurityGroups?: [];
}

export interface CreateTagsRequest {
  readonly FileSystemId: string;
  readonly Tags: [];
}

export interface CreationInfo {
  readonly OwnerUid: number;
  readonly OwnerGid: number;
  readonly Permissions: string;
}

export interface DeleteAccessPointRequest {
  readonly AccessPointId: string;
}

export interface DeleteFileSystemPolicyRequest {
  readonly FileSystemId: string;
}

export interface DeleteFileSystemRequest {
  readonly FileSystemId: string;
}

export interface DeleteMountTargetRequest {
  readonly MountTargetId: string;
}

export interface DeleteTagsRequest {
  readonly FileSystemId: string;
  readonly TagKeys: [];
}

export interface DependencyTimeout {
  readonly ErrorCode: string;
  readonly Message?: string;
}

export interface DescribeAccessPointsRequest {
  readonly MaxResults?: number;
  readonly NextToken?: string;
  readonly AccessPointId?: string;
  readonly FileSystemId?: string;
}

export interface DescribeAccessPointsResponse {
  readonly AccessPoints?: [];
  readonly NextToken?: string;
}

export interface DescribeAccountPreferencesRequest {
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface DescribeAccountPreferencesResponse {
  readonly ResourceIdPreference?: ResourceIdPreference;
  readonly NextToken?: string;
}

export interface DescribeBackupPolicyRequest {
  readonly FileSystemId: string;
}

export interface DescribeFileSystemPolicyRequest {
  readonly FileSystemId: string;
}

export interface DescribeFileSystemsRequest {
  readonly MaxItems?: number;
  readonly Marker?: string;
  readonly CreationToken?: string;
  readonly FileSystemId?: string;
}

export interface DescribeFileSystemsResponse {
  readonly Marker?: string;
  readonly FileSystems?: [];
  readonly NextMarker?: string;
}

export interface DescribeLifecycleConfigurationRequest {
  readonly FileSystemId: string;
}

export interface DescribeMountTargetSecurityGroupsRequest {
  readonly MountTargetId: string;
}

export interface DescribeMountTargetSecurityGroupsResponse {
  readonly SecurityGroups: [];
}

export interface DescribeMountTargetsRequest {
  readonly MaxItems?: number;
  readonly Marker?: string;
  readonly FileSystemId?: string;
  readonly MountTargetId?: string;
  readonly AccessPointId?: string;
}

export interface DescribeMountTargetsResponse {
  readonly Marker?: string;
  readonly MountTargets?: [];
  readonly NextMarker?: string;
}

export interface DescribeTagsRequest {
  readonly MaxItems?: number;
  readonly Marker?: string;
  readonly FileSystemId: string;
}

export interface DescribeTagsResponse {
  readonly Marker?: string;
  readonly Tags: [];
  readonly NextMarker?: string;
}

export interface FileSystemAlreadyExists {
  readonly ErrorCode: string;
  readonly Message?: string;
  readonly FileSystemId: string;
}

export interface FileSystemDescription {
  readonly OwnerId: string;
  readonly CreationToken: string;
  readonly FileSystemId: string;
  readonly FileSystemArn?: string;
  readonly CreationTime: Date;
  readonly LifeCycleState: string;
  readonly Name?: string;
  readonly NumberOfMountTargets: number;
  readonly SizeInBytes: FileSystemSize;
  readonly PerformanceMode: string;
  readonly Encrypted?: boolean;
  readonly KmsKeyId?: string;
  readonly ThroughputMode?: string;
  readonly ProvisionedThroughputInMibps?: unknown;
  readonly AvailabilityZoneName?: string;
  readonly AvailabilityZoneId?: string;
  readonly Tags: [];
}

export interface FileSystemInUse {
  readonly ErrorCode: string;
  readonly Message?: string;
}

export interface FileSystemLimitExceeded {
  readonly ErrorCode: string;
  readonly Message?: string;
}

export interface FileSystemNotFound {
  readonly ErrorCode: string;
  readonly Message?: string;
}

export interface FileSystemPolicyDescription {
  readonly FileSystemId?: string;
  readonly Policy?: string;
}

export interface FileSystemSize {
  readonly Value: number;
  readonly Timestamp?: Date;
  readonly ValueInIA?: number;
  readonly ValueInStandard?: number;
}

export interface IncorrectFileSystemLifeCycleState {
  readonly ErrorCode: string;
  readonly Message?: string;
}

export interface IncorrectMountTargetState {
  readonly ErrorCode: string;
  readonly Message?: string;
}

export interface InsufficientThroughputCapacity {
  readonly ErrorCode: string;
  readonly Message?: string;
}

export interface InternalServerError {
  readonly ErrorCode: string;
  readonly Message?: string;
}

export interface InvalidPolicyException {
  readonly ErrorCode?: string;
  readonly Message?: string;
}

export interface IpAddressInUse {
  readonly ErrorCode: string;
  readonly Message?: string;
}

export interface LifecycleConfigurationDescription {
  readonly LifecyclePolicies?: [];
}

export interface LifecyclePolicy {
  readonly TransitionToIA?: string;
  readonly TransitionToPrimaryStorageClass?: string;
}

export interface ListTagsForResourceRequest {
  readonly ResourceId: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListTagsForResourceResponse {
  readonly Tags?: [];
  readonly NextToken?: string;
}

export interface ModifyMountTargetSecurityGroupsRequest {
  readonly MountTargetId: string;
  readonly SecurityGroups?: [];
}

export interface MountTargetConflict {
  readonly ErrorCode: string;
  readonly Message?: string;
}

export interface MountTargetDescription {
  readonly OwnerId?: string;
  readonly MountTargetId: string;
  readonly FileSystemId: string;
  readonly SubnetId: string;
  readonly LifeCycleState: string;
  readonly IpAddress?: string;
  readonly NetworkInterfaceId?: string;
  readonly AvailabilityZoneId?: string;
  readonly AvailabilityZoneName?: string;
  readonly VpcId?: string;
}

export interface MountTargetNotFound {
  readonly ErrorCode: string;
  readonly Message?: string;
}

export interface NetworkInterfaceLimitExceeded {
  readonly ErrorCode: string;
  readonly Message?: string;
}

export interface NoFreeAddressesInSubnet {
  readonly ErrorCode: string;
  readonly Message?: string;
}

export interface PolicyNotFound {
  readonly ErrorCode?: string;
  readonly Message?: string;
}

export interface PosixUser {
  readonly Uid: number;
  readonly Gid: number;
  readonly SecondaryGids?: [];
}

export interface PutAccountPreferencesRequest {
  readonly ResourceIdType: string;
}

export interface PutAccountPreferencesResponse {
  readonly ResourceIdPreference?: ResourceIdPreference;
}

export interface PutBackupPolicyRequest {
  readonly FileSystemId: string;
  readonly BackupPolicy: BackupPolicy;
}

export interface PutFileSystemPolicyRequest {
  readonly FileSystemId: string;
  readonly Policy: string;
  readonly BypassPolicyLockoutSafetyCheck?: boolean;
}

export interface PutLifecycleConfigurationRequest {
  readonly FileSystemId: string;
  readonly LifecyclePolicies: [];
}

export interface ResourceIdPreference {
  readonly ResourceIdType?: string;
  readonly Resources?: [];
}

export interface RootDirectory {
  readonly Path?: string;
  readonly CreationInfo?: CreationInfo;
}

export interface SecurityGroupLimitExceeded {
  readonly ErrorCode: string;
  readonly Message?: string;
}

export interface SecurityGroupNotFound {
  readonly ErrorCode: string;
  readonly Message?: string;
}

export interface SubnetNotFound {
  readonly ErrorCode: string;
  readonly Message?: string;
}

export interface Tag {
  readonly Key: string;
  readonly Value: string;
}

export interface TagResourceRequest {
  readonly ResourceId: string;
  readonly Tags: [];
}

export interface ThroughputLimitExceeded {
  readonly ErrorCode: string;
  readonly Message?: string;
}

export interface TooManyRequests {
  readonly ErrorCode: string;
  readonly Message?: string;
}

export interface UnsupportedAvailabilityZone {
  readonly ErrorCode: string;
  readonly Message?: string;
}

export interface UntagResourceRequest {
  readonly ResourceId: string;
  readonly TagKeys: [];
}

export interface UpdateFileSystemRequest {
  readonly FileSystemId: string;
  readonly ThroughputMode?: string;
  readonly ProvisionedThroughputInMibps?: unknown;
}

export interface ValidationException {
  readonly ErrorCode: string;
  readonly Message?: string;
}


