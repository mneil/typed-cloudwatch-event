/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CreateAssistant {
  readonly clientToken?: string;
  readonly description?: string;
  readonly name: string;
  readonly serverSideEncryptionConfiguration?: ServerSideEncryptionConfiguration;
  readonly tags?: {[key: string]: any};
  readonly type: string;
}

export interface CreateAssistantAssociation {
  readonly assistantId: string;
  readonly association: AssistantAssociationInputData;
  readonly associationType: string;
  readonly clientToken?: string;
  readonly tags?: {[key: string]: any};
}

export interface CreateContent {
  readonly clientToken?: string;
  readonly knowledgeBaseId: string;
  readonly metadata?: {[key: string]: any};
  readonly name: string;
  readonly overrideLinkOutUri?: string;
  readonly tags?: {[key: string]: any};
  readonly title?: string;
  readonly uploadId: string;
}

export interface CreateKnowledgeBase {
  readonly clientToken?: string;
  readonly description?: string;
  readonly knowledgeBaseType: string;
  readonly name: string;
  readonly renderingConfiguration?: RenderingConfiguration;
  readonly serverSideEncryptionConfiguration?: ServerSideEncryptionConfiguration;
  readonly sourceConfiguration?: SourceConfiguration;
  readonly tags?: {[key: string]: any};
}

export interface CreateSession {
  readonly assistantId: string;
  readonly clientToken?: string;
  readonly description?: string;
  readonly name: string;
  readonly tags?: {[key: string]: any};
}

export interface DeleteAssistant {
  readonly assistantId: string;
}

export interface DeleteAssistantAssociation {
  readonly assistantAssociationId: string;
  readonly assistantId: string;
}

export interface DeleteContent {
  readonly contentId: string;
  readonly knowledgeBaseId: string;
}

export interface DeleteKnowledgeBase {
  readonly knowledgeBaseId: string;
}

export interface GetAssistant {
  readonly assistantId: string;
}

export interface GetAssistantAssociation {
  readonly assistantAssociationId: string;
  readonly assistantId: string;
}

export interface GetContent {
  readonly contentId: string;
  readonly knowledgeBaseId: string;
}

export interface GetContentSummary {
  readonly contentId: string;
  readonly knowledgeBaseId: string;
}

export interface GetKnowledgeBase {
  readonly knowledgeBaseId: string;
}

export interface GetRecommendations {
  readonly assistantId: string;
  readonly maxResults?: number;
  readonly sessionId: string;
  readonly waitTimeSeconds?: number;
}

export interface GetSession {
  readonly assistantId: string;
  readonly sessionId: string;
}

export interface ListAssistantAssociations {
  readonly assistantId: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListAssistants {
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListContents {
  readonly knowledgeBaseId: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListKnowledgeBases {
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListTagsForResource {
  readonly resourceArn: string;
}

export interface NotifyRecommendationsReceived {
  readonly assistantId: string;
  readonly recommendationIds: [];
  readonly sessionId: string;
}

export interface QueryAssistant {
  readonly assistantId: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly queryText: string;
}

export interface RemoveKnowledgeBaseTemplateUri {
  readonly knowledgeBaseId: string;
}

export interface SearchContent {
  readonly knowledgeBaseId: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly searchExpression: SearchExpression;
}

export interface SearchSessions {
  readonly assistantId: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly searchExpression: SearchExpression;
}

export interface StartContentUpload {
  readonly contentType: string;
  readonly knowledgeBaseId: string;
}

export interface TagResource {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

export interface UntagResource {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface UpdateContent {
  readonly contentId: string;
  readonly knowledgeBaseId: string;
  readonly metadata?: {[key: string]: any};
  readonly overrideLinkOutUri?: string;
  readonly removeOverrideLinkOutUri?: boolean;
  readonly revisionId?: string;
  readonly title?: string;
  readonly uploadId?: string;
}

export interface UpdateKnowledgeBaseTemplateUri {
  readonly knowledgeBaseId: string;
  readonly templateUri: string;
}

export interface AccessDeniedException {
  readonly message?: string;
}

export interface AppIntegrationsConfiguration {
  readonly appIntegrationArn: string;
  readonly objectFields: [];
}

export interface AssistantAssociationData {
  readonly assistantArn: string;
  readonly assistantAssociationArn: string;
  readonly assistantAssociationId: string;
  readonly assistantId: string;
  readonly associationData: AssistantAssociationOutputData;
  readonly associationType: string;
  readonly tags?: {[key: string]: any};
}

export interface AssistantAssociationInputData {
  readonly knowledgeBaseId?: string;
}

export interface AssistantAssociationOutputData {
  readonly knowledgeBaseAssociation?: KnowledgeBaseAssociationData;
}

export interface AssistantAssociationSummary {
  readonly assistantArn: string;
  readonly assistantAssociationArn: string;
  readonly assistantAssociationId: string;
  readonly assistantId: string;
  readonly associationData: AssistantAssociationOutputData;
  readonly associationType: string;
  readonly tags?: {[key: string]: any};
}

export interface AssistantData {
  readonly assistantArn: string;
  readonly assistantId: string;
  readonly description?: string;
  readonly name: string;
  readonly serverSideEncryptionConfiguration?: ServerSideEncryptionConfiguration;
  readonly status: string;
  readonly tags?: {[key: string]: any};
  readonly type: string;
}

export interface AssistantSummary {
  readonly assistantArn: string;
  readonly assistantId: string;
  readonly description?: string;
  readonly name: string;
  readonly serverSideEncryptionConfiguration?: ServerSideEncryptionConfiguration;
  readonly status: string;
  readonly tags?: {[key: string]: any};
  readonly type: string;
}

export interface ConflictException {
  readonly message?: string;
}

export interface ContentData {
  readonly contentArn: string;
  readonly contentId: string;
  readonly contentType: string;
  readonly knowledgeBaseArn: string;
  readonly knowledgeBaseId: string;
  readonly linkOutUri?: string;
  readonly metadata: {[key: string]: any};
  readonly name: string;
  readonly revisionId: string;
  readonly status: string;
  readonly tags?: {[key: string]: any};
  readonly title: string;
  readonly url: string;
  readonly urlExpiry: Date;
}

export interface ContentReference {
  readonly contentArn?: string;
  readonly contentId?: string;
  readonly knowledgeBaseArn?: string;
  readonly knowledgeBaseId?: string;
}

export interface ContentSummary {
  readonly contentArn: string;
  readonly contentId: string;
  readonly contentType: string;
  readonly knowledgeBaseArn: string;
  readonly knowledgeBaseId: string;
  readonly metadata: {[key: string]: any};
  readonly name: string;
  readonly revisionId: string;
  readonly status: string;
  readonly tags?: {[key: string]: any};
  readonly title: string;
}

export interface CreateAssistantAssociationRequest {
  readonly assistantId: string;
  readonly association: AssistantAssociationInputData;
  readonly associationType: string;
  readonly clientToken?: string;
  readonly tags?: {[key: string]: any};
}

export interface CreateAssistantAssociationResponse {
  readonly assistantAssociation?: AssistantAssociationData;
}

export interface CreateAssistantRequest {
  readonly clientToken?: string;
  readonly description?: string;
  readonly name: string;
  readonly serverSideEncryptionConfiguration?: ServerSideEncryptionConfiguration;
  readonly tags?: {[key: string]: any};
  readonly type: string;
}

export interface CreateAssistantResponse {
  readonly assistant?: AssistantData;
}

export interface CreateContentRequest {
  readonly clientToken?: string;
  readonly knowledgeBaseId: string;
  readonly metadata?: {[key: string]: any};
  readonly name: string;
  readonly overrideLinkOutUri?: string;
  readonly tags?: {[key: string]: any};
  readonly title?: string;
  readonly uploadId: string;
}

export interface CreateContentResponse {
  readonly content?: ContentData;
}

export interface CreateKnowledgeBaseRequest {
  readonly clientToken?: string;
  readonly description?: string;
  readonly knowledgeBaseType: string;
  readonly name: string;
  readonly renderingConfiguration?: RenderingConfiguration;
  readonly serverSideEncryptionConfiguration?: ServerSideEncryptionConfiguration;
  readonly sourceConfiguration?: SourceConfiguration;
  readonly tags?: {[key: string]: any};
}

export interface CreateKnowledgeBaseResponse {
  readonly knowledgeBase?: KnowledgeBaseData;
}

export interface CreateSessionRequest {
  readonly assistantId: string;
  readonly clientToken?: string;
  readonly description?: string;
  readonly name: string;
  readonly tags?: {[key: string]: any};
}

export interface CreateSessionResponse {
  readonly session?: SessionData;
}

export interface DeleteAssistantAssociationRequest {
  readonly assistantAssociationId: string;
  readonly assistantId: string;
}

export interface DeleteAssistantAssociationResponse {
}

export interface DeleteAssistantRequest {
  readonly assistantId: string;
}

export interface DeleteAssistantResponse {
}

export interface DeleteContentRequest {
  readonly contentId: string;
  readonly knowledgeBaseId: string;
}

export interface DeleteContentResponse {
}

export interface DeleteKnowledgeBaseRequest {
  readonly knowledgeBaseId: string;
}

export interface DeleteKnowledgeBaseResponse {
}

export interface Document {
  readonly contentReference: ContentReference;
  readonly excerpt?: DocumentText;
  readonly title?: DocumentText;
}

export interface DocumentText {
  readonly highlights?: [];
  readonly text?: string;
}

export interface Filter {
  readonly field: string;
  readonly operator: string;
  readonly value: string;
}

export interface GetAssistantAssociationRequest {
  readonly assistantAssociationId: string;
  readonly assistantId: string;
}

export interface GetAssistantAssociationResponse {
  readonly assistantAssociation?: AssistantAssociationData;
}

export interface GetAssistantRequest {
  readonly assistantId: string;
}

export interface GetAssistantResponse {
  readonly assistant?: AssistantData;
}

export interface GetContentRequest {
  readonly contentId: string;
  readonly knowledgeBaseId: string;
}

export interface GetContentResponse {
  readonly content?: ContentData;
}

export interface GetContentSummaryRequest {
  readonly contentId: string;
  readonly knowledgeBaseId: string;
}

export interface GetContentSummaryResponse {
  readonly contentSummary?: ContentSummary;
}

export interface GetKnowledgeBaseRequest {
  readonly knowledgeBaseId: string;
}

export interface GetKnowledgeBaseResponse {
  readonly knowledgeBase?: KnowledgeBaseData;
}

export interface GetRecommendationsRequest {
  readonly assistantId: string;
  readonly maxResults?: number;
  readonly sessionId: string;
  readonly waitTimeSeconds?: number;
}

export interface GetRecommendationsResponse {
  readonly recommendations: [];
}

export interface GetSessionRequest {
  readonly assistantId: string;
  readonly sessionId: string;
}

export interface GetSessionResponse {
  readonly session?: SessionData;
}

export interface Highlight {
  readonly beginOffsetInclusive?: number;
  readonly endOffsetExclusive?: number;
}

export interface KnowledgeBaseAssociationData {
  readonly knowledgeBaseArn?: string;
  readonly knowledgeBaseId?: string;
}

export interface KnowledgeBaseData {
  readonly description?: string;
  readonly knowledgeBaseArn: string;
  readonly knowledgeBaseId: string;
  readonly knowledgeBaseType: string;
  readonly lastContentModificationTime?: Date;
  readonly name: string;
  readonly renderingConfiguration?: RenderingConfiguration;
  readonly serverSideEncryptionConfiguration?: ServerSideEncryptionConfiguration;
  readonly sourceConfiguration?: SourceConfiguration;
  readonly status: string;
  readonly tags?: {[key: string]: any};
}

export interface KnowledgeBaseSummary {
  readonly description?: string;
  readonly knowledgeBaseArn: string;
  readonly knowledgeBaseId: string;
  readonly knowledgeBaseType: string;
  readonly name: string;
  readonly renderingConfiguration?: RenderingConfiguration;
  readonly serverSideEncryptionConfiguration?: ServerSideEncryptionConfiguration;
  readonly sourceConfiguration?: SourceConfiguration;
  readonly status: string;
  readonly tags?: {[key: string]: any};
}

export interface ListAssistantAssociationsRequest {
  readonly assistantId: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListAssistantAssociationsResponse {
  readonly assistantAssociationSummaries: [];
  readonly nextToken?: string;
}

export interface ListAssistantsRequest {
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListAssistantsResponse {
  readonly assistantSummaries: [];
  readonly nextToken?: string;
}

export interface ListContentsRequest {
  readonly knowledgeBaseId: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListContentsResponse {
  readonly contentSummaries: [];
  readonly nextToken?: string;
}

export interface ListKnowledgeBasesRequest {
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListKnowledgeBasesResponse {
  readonly knowledgeBaseSummaries: [];
  readonly nextToken?: string;
}

export interface ListTagsForResourceRequest {
  readonly resourceArn: string;
}

export interface ListTagsForResourceResponse {
  readonly tags?: {[key: string]: any};
}

export interface NotifyRecommendationsReceivedError {
  readonly message?: string;
  readonly recommendationId?: string;
}

export interface NotifyRecommendationsReceivedRequest {
  readonly assistantId: string;
  readonly recommendationIds: [];
  readonly sessionId: string;
}

export interface NotifyRecommendationsReceivedResponse {
  readonly errors?: [];
  readonly recommendationIds?: [];
}

export interface PreconditionFailedException {
  readonly message?: string;
}

export interface QueryAssistantRequest {
  readonly assistantId: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly queryText: string;
}

export interface QueryAssistantResponse {
  readonly nextToken?: string;
  readonly results: [];
}

export interface RecommendationData {
  readonly document: Document;
  readonly recommendationId: string;
  readonly relevanceLevel?: string;
  readonly relevanceScore?: unknown;
}

export interface RemoveKnowledgeBaseTemplateUriRequest {
  readonly knowledgeBaseId: string;
}

export interface RemoveKnowledgeBaseTemplateUriResponse {
}

export interface RenderingConfiguration {
  readonly templateUri?: string;
}

export interface ResourceNotFoundException {
  readonly message?: string;
  readonly resourceName?: string;
}

export interface ResultData {
  readonly document: Document;
  readonly relevanceScore?: unknown;
  readonly resultId: string;
}

export interface SearchContentRequest {
  readonly knowledgeBaseId: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly searchExpression: SearchExpression;
}

export interface SearchContentResponse {
  readonly contentSummaries: [];
  readonly nextToken?: string;
}

export interface SearchExpression {
  readonly filters: [];
}

export interface SearchSessionsRequest {
  readonly assistantId: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly searchExpression: SearchExpression;
}

export interface SearchSessionsResponse {
  readonly nextToken?: string;
  readonly sessionSummaries: [];
}

export interface ServerSideEncryptionConfiguration {
  readonly kmsKeyId?: string;
}

export interface ServiceQuotaExceededException {
  readonly message?: string;
}

export interface SessionData {
  readonly description?: string;
  readonly name: string;
  readonly sessionArn: string;
  readonly sessionId: string;
  readonly tags?: {[key: string]: any};
}

export interface SessionSummary {
  readonly assistantArn: string;
  readonly assistantId: string;
  readonly sessionArn: string;
  readonly sessionId: string;
}

export interface SourceConfiguration {
  readonly appIntegrations?: AppIntegrationsConfiguration;
}

export interface StartContentUploadRequest {
  readonly contentType: string;
  readonly knowledgeBaseId: string;
}

export interface StartContentUploadResponse {
  readonly headersToInclude: {[key: string]: any};
  readonly uploadId: string;
  readonly url: string;
  readonly urlExpiry: Date;
}

export interface TagResourceRequest {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

export interface TagResourceResponse {
}

export interface TooManyTagsException {
  readonly message?: string;
  readonly resourceName?: string;
}

export interface UntagResourceRequest {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface UntagResourceResponse {
}

export interface UpdateContentRequest {
  readonly contentId: string;
  readonly knowledgeBaseId: string;
  readonly metadata?: {[key: string]: any};
  readonly overrideLinkOutUri?: string;
  readonly removeOverrideLinkOutUri?: boolean;
  readonly revisionId?: string;
  readonly title?: string;
  readonly uploadId?: string;
}

export interface UpdateContentResponse {
  readonly content?: ContentData;
}

export interface UpdateKnowledgeBaseTemplateUriRequest {
  readonly knowledgeBaseId: string;
  readonly templateUri: string;
}

export interface UpdateKnowledgeBaseTemplateUriResponse {
  readonly knowledgeBase?: KnowledgeBaseData;
}

export interface ValidationException {
  readonly message?: string;
}


