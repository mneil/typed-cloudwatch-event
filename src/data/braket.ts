/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CancelJob {
  readonly jobArn: string;
}

export interface CancelQuantumTask {
  readonly clientToken: string;
  readonly quantumTaskArn: string;
}

export interface CreateJob {
  readonly algorithmSpecification: AlgorithmSpecification;
  readonly checkpointConfig?: JobCheckpointConfig;
  readonly clientToken: string;
  readonly deviceConfig: DeviceConfig;
  readonly hyperParameters?: {[key: string]: any};
  readonly inputDataConfig?: [];
  readonly instanceConfig: InstanceConfig;
  readonly jobName: string;
  readonly outputDataConfig: JobOutputDataConfig;
  readonly roleArn: string;
  readonly stoppingCondition?: JobStoppingCondition;
  readonly tags?: {[key: string]: any};
}

export interface CreateQuantumTask {
  readonly action: string;
  readonly clientToken: string;
  readonly deviceArn: string;
  readonly deviceParameters?: string;
  readonly jobToken?: string;
  readonly outputS3Bucket: string;
  readonly outputS3KeyPrefix: string;
  readonly shots: number;
  readonly tags?: {[key: string]: any};
}

export interface GetDevice {
  readonly deviceArn: string;
}

export interface GetJob {
  readonly jobArn: string;
}

export interface GetQuantumTask {
  readonly quantumTaskArn: string;
}

export interface ListTagsForResource {
  readonly resourceArn: string;
}

export interface SearchDevices {
  readonly filters: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface SearchJobs {
  readonly filters: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface SearchQuantumTasks {
  readonly filters: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface TagResource {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

export interface UntagResource {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface AccessDeniedException {
  readonly message?: string;
}

export interface AlgorithmSpecification {
  readonly containerImage?: ContainerImage;
  readonly scriptModeConfig?: ScriptModeConfig;
}

export interface CancelJobRequest {
  readonly jobArn: string;
}

export interface CancelJobResponse {
  readonly cancellationStatus: string;
  readonly jobArn: string;
}

export interface CancelQuantumTaskRequest {
  readonly clientToken: string;
  readonly quantumTaskArn: string;
}

export interface CancelQuantumTaskResponse {
  readonly cancellationStatus: string;
  readonly quantumTaskArn: string;
}

export interface ConflictException {
  readonly message?: string;
}

export interface ContainerImage {
  readonly uri: string;
}

export interface CreateJobRequest {
  readonly algorithmSpecification: AlgorithmSpecification;
  readonly checkpointConfig?: JobCheckpointConfig;
  readonly clientToken: string;
  readonly deviceConfig: DeviceConfig;
  readonly hyperParameters?: {[key: string]: any};
  readonly inputDataConfig?: [];
  readonly instanceConfig: InstanceConfig;
  readonly jobName: string;
  readonly outputDataConfig: JobOutputDataConfig;
  readonly roleArn: string;
  readonly stoppingCondition?: JobStoppingCondition;
  readonly tags?: {[key: string]: any};
}

export interface CreateJobResponse {
  readonly jobArn: string;
}

export interface CreateQuantumTaskRequest {
  readonly action: string;
  readonly clientToken: string;
  readonly deviceArn: string;
  readonly deviceParameters?: string;
  readonly jobToken?: string;
  readonly outputS3Bucket: string;
  readonly outputS3KeyPrefix: string;
  readonly shots: number;
  readonly tags?: {[key: string]: any};
}

export interface CreateQuantumTaskResponse {
  readonly quantumTaskArn: string;
}

export interface DataSource {
  readonly s3DataSource: S3DataSource;
}

export interface DeviceConfig {
  readonly device: string;
}

export interface DeviceOfflineException {
  readonly message?: string;
}

export interface DeviceRetiredException {
  readonly message?: string;
}

export interface DeviceSummary {
  readonly deviceArn: string;
  readonly deviceName: string;
  readonly deviceStatus: string;
  readonly deviceType: string;
  readonly providerName: string;
}

export interface GetDeviceRequest {
  readonly deviceArn: string;
}

export interface GetDeviceResponse {
  readonly deviceArn: string;
  readonly deviceCapabilities: string;
  readonly deviceName: string;
  readonly deviceStatus: string;
  readonly deviceType: string;
  readonly providerName: string;
}

export interface GetJobRequest {
  readonly jobArn: string;
}

export interface GetJobResponse {
  readonly algorithmSpecification: AlgorithmSpecification;
  readonly billableDuration?: number;
  readonly checkpointConfig?: JobCheckpointConfig;
  readonly createdAt: Date;
  readonly deviceConfig?: DeviceConfig;
  readonly endedAt?: Date;
  readonly events?: [];
  readonly failureReason?: string;
  readonly hyperParameters?: {[key: string]: any};
  readonly inputDataConfig?: [];
  readonly instanceConfig: InstanceConfig;
  readonly jobArn: string;
  readonly jobName: string;
  readonly outputDataConfig: JobOutputDataConfig;
  readonly roleArn: string;
  readonly startedAt?: Date;
  readonly status: string;
  readonly stoppingCondition?: JobStoppingCondition;
  readonly tags?: {[key: string]: any};
}

export interface GetQuantumTaskRequest {
  readonly quantumTaskArn: string;
}

export interface GetQuantumTaskResponse {
  readonly createdAt: Date;
  readonly deviceArn: string;
  readonly deviceParameters: string;
  readonly endedAt?: Date;
  readonly failureReason?: string;
  readonly jobArn?: string;
  readonly outputS3Bucket: string;
  readonly outputS3Directory: string;
  readonly quantumTaskArn: string;
  readonly shots: number;
  readonly status: string;
  readonly tags?: {[key: string]: any};
}

export interface InputFileConfig {
  readonly channelName: string;
  readonly contentType?: string;
  readonly dataSource: DataSource;
}

export interface InstanceConfig {
  readonly instanceType: string;
  readonly volumeSizeInGb: number;
}

export interface InternalServiceException {
  readonly message?: string;
}

export interface JobCheckpointConfig {
  readonly localPath?: string;
  readonly s3Uri: string;
}

export interface JobEventDetails {
  readonly eventType?: string;
  readonly message?: string;
  readonly timeOfEvent?: Date;
}

export interface JobOutputDataConfig {
  readonly kmsKeyId?: string;
  readonly s3Path: string;
}

export interface JobStoppingCondition {
  readonly maxRuntimeInSeconds?: number;
}

export interface JobSummary {
  readonly createdAt: Date;
  readonly device: string;
  readonly endedAt?: Date;
  readonly jobArn: string;
  readonly jobName: string;
  readonly startedAt?: Date;
  readonly status: string;
  readonly tags?: {[key: string]: any};
}

export interface ListTagsForResourceRequest {
  readonly resourceArn: string;
}

export interface ListTagsForResourceResponse {
  readonly tags?: {[key: string]: any};
}

export interface QuantumTaskSummary {
  readonly createdAt: Date;
  readonly deviceArn: string;
  readonly endedAt?: Date;
  readonly outputS3Bucket: string;
  readonly outputS3Directory: string;
  readonly quantumTaskArn: string;
  readonly shots: number;
  readonly status: string;
  readonly tags?: {[key: string]: any};
}

export interface ResourceNotFoundException {
  readonly message?: string;
}

export interface S3DataSource {
  readonly s3Uri: string;
}

export interface ScriptModeConfig {
  readonly compressionType?: string;
  readonly entryPoint: string;
  readonly s3Uri: string;
}

export interface SearchDevicesFilter {
  readonly name: string;
  readonly values: [];
}

export interface SearchDevicesRequest {
  readonly filters: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface SearchDevicesResponse {
  readonly devices: [];
  readonly nextToken?: string;
}

export interface SearchJobsFilter {
  readonly name: string;
  readonly operator: string;
  readonly values: [];
}

export interface SearchJobsRequest {
  readonly filters: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface SearchJobsResponse {
  readonly jobs: [];
  readonly nextToken?: string;
}

export interface SearchQuantumTasksFilter {
  readonly name: string;
  readonly operator: string;
  readonly values: [];
}

export interface SearchQuantumTasksRequest {
  readonly filters: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface SearchQuantumTasksResponse {
  readonly nextToken?: string;
  readonly quantumTasks: [];
}

export interface ServiceQuotaExceededException {
  readonly message?: string;
}

export interface TagResourceRequest {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

export interface TagResourceResponse {
}

export interface ThrottlingException {
  readonly message?: string;
}

export interface UntagResourceRequest {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface UntagResourceResponse {
}

export interface ValidationException {
  readonly message?: string;
}


