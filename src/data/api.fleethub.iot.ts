/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CreateApplication {
  readonly applicationName: string;
  readonly applicationDescription?: string;
  readonly clientToken?: string;
  readonly roleArn: string;
  readonly tags?: {[key: string]: any};
}
export interface DeleteApplication {
  readonly applicationId: string;
  readonly clientToken?: string;
}
export interface DescribeApplication {
  readonly applicationId: string;
}
export interface ListApplications {
  readonly nextToken?: string;
}
export interface ListTagsForResource {
  readonly resourceArn: string;
}
export interface TagResource {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}
export interface UntagResource {
  readonly resourceArn: string;
  readonly tagKeys: [];
}
export interface UpdateApplication {
  readonly applicationId: string;
  readonly applicationName?: string;
  readonly applicationDescription?: string;
  readonly clientToken?: string;
}



interface ApplicationSummary {
  readonly applicationId: string;
  readonly applicationName: string;
  readonly applicationDescription: string;
  readonly applicationUrl: string;
  readonly applicationCreationDate: number;
  readonly applicationLastUpdateDate: number;
  readonly applicationState: string;
}

interface ConflictException {
  readonly message: string;
}

interface CreateApplicationRequest {
  readonly applicationName: string;
  readonly applicationDescription: string;
  readonly clientToken: string;
  readonly roleArn: string;
  readonly tags: {[key: string]: any};
}

interface CreateApplicationResponse {
  readonly applicationId: string;
  readonly applicationArn: string;
}

interface DeleteApplicationRequest {
  readonly applicationId: string;
  readonly clientToken: string;
}

interface DeleteApplicationResponse {
}

interface DescribeApplicationRequest {
  readonly applicationId: string;
}

interface DescribeApplicationResponse {
  readonly applicationId: string;
  readonly applicationArn: string;
  readonly applicationName: string;
  readonly applicationDescription: string;
  readonly applicationUrl: string;
  readonly applicationState: string;
  readonly applicationCreationDate: number;
  readonly applicationLastUpdateDate: number;
  readonly roleArn: string;
  readonly ssoClientId: string;
  readonly errorMessage: string;
  readonly tags: {[key: string]: any};
}

interface InternalFailureException {
  readonly message: string;
}

interface InvalidRequestException {
  readonly message: string;
}

interface LimitExceededException {
  readonly message: string;
}

interface ListApplicationsRequest {
  readonly nextToken: string;
}

interface ListApplicationsResponse {
  readonly applicationSummaries: [];
  readonly nextToken: string;
}

interface ListTagsForResourceRequest {
  readonly resourceArn: string;
}

interface ListTagsForResourceResponse {
  readonly tags: {[key: string]: any};
}

interface ResourceNotFoundException {
  readonly message: string;
}

interface TagResourceRequest {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

interface TagResourceResponse {
}

interface ThrottlingException {
  readonly message: string;
}

interface UntagResourceRequest {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

interface UntagResourceResponse {
}

interface UpdateApplicationRequest {
  readonly applicationId: string;
  readonly applicationName: string;
  readonly applicationDescription: string;
  readonly clientToken: string;
}

interface UpdateApplicationResponse {
}

