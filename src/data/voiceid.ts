/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CreateDomain {
  readonly ClientToken: string;
  readonly Description: string;
  readonly Name: string;
  readonly ServerSideEncryptionConfiguration: ServerSideEncryptionConfiguration;
  readonly Tags: [];
}
export interface DeleteDomain {
  readonly DomainId: string;
}
export interface DeleteFraudster {
  readonly DomainId: string;
  readonly FraudsterId: string;
}
export interface DeleteSpeaker {
  readonly DomainId: string;
  readonly SpeakerId: string;
}
export interface DescribeDomain {
  readonly DomainId: string;
}
export interface DescribeFraudster {
  readonly DomainId: string;
  readonly FraudsterId: string;
}
export interface DescribeFraudsterRegistrationJob {
  readonly DomainId: string;
  readonly JobId: string;
}
export interface DescribeSpeaker {
  readonly DomainId: string;
  readonly SpeakerId: string;
}
export interface DescribeSpeakerEnrollmentJob {
  readonly DomainId: string;
  readonly JobId: string;
}
export interface EvaluateSession {
  readonly DomainId: string;
  readonly SessionNameOrId: string;
}
export interface ListDomains {
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface ListFraudsterRegistrationJobs {
  readonly DomainId: string;
  readonly JobStatus: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface ListSpeakerEnrollmentJobs {
  readonly DomainId: string;
  readonly JobStatus: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface ListSpeakers {
  readonly DomainId: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface ListTagsForResource {
  readonly ResourceArn: string;
}
export interface OptOutSpeaker {
  readonly DomainId: string;
  readonly SpeakerId: string;
}
export interface StartFraudsterRegistrationJob {
  readonly ClientToken: string;
  readonly DataAccessRoleArn: string;
  readonly DomainId: string;
  readonly InputDataConfig: InputDataConfig;
  readonly JobName: string;
  readonly OutputDataConfig: OutputDataConfig;
  readonly RegistrationConfig: RegistrationConfig;
}
export interface StartSpeakerEnrollmentJob {
  readonly ClientToken: string;
  readonly DataAccessRoleArn: string;
  readonly DomainId: string;
  readonly EnrollmentConfig: EnrollmentConfig;
  readonly InputDataConfig: InputDataConfig;
  readonly JobName: string;
  readonly OutputDataConfig: OutputDataConfig;
}
export interface TagResource {
  readonly ResourceArn: string;
  readonly Tags: [];
}
export interface UntagResource {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}
export interface UpdateDomain {
  readonly Description: string;
  readonly DomainId: string;
  readonly Name: string;
  readonly ServerSideEncryptionConfiguration: ServerSideEncryptionConfiguration;
}



interface AccessDeniedException {
  readonly Message: string;
}

interface AuthenticationConfiguration {
  readonly AcceptanceThreshold: number;
}

interface AuthenticationResult {
  readonly AudioAggregationEndedAt: Date;
  readonly AudioAggregationStartedAt: Date;
  readonly AuthenticationResultId: string;
  readonly Configuration: AuthenticationConfiguration;
  readonly CustomerSpeakerId: string;
  readonly Decision: string;
  readonly GeneratedSpeakerId: string;
  readonly Score: number;
}

interface ConflictException {
  readonly ConflictType: string;
  readonly Message: string;
}

interface CreateDomainRequest {
  readonly ClientToken: string;
  readonly Description: string;
  readonly Name: string;
  readonly ServerSideEncryptionConfiguration: ServerSideEncryptionConfiguration;
  readonly Tags: [];
}

interface CreateDomainResponse {
  readonly Domain: Domain;
}

interface DeleteDomainRequest {
  readonly DomainId: string;
}

interface DeleteFraudsterRequest {
  readonly DomainId: string;
  readonly FraudsterId: string;
}

interface DeleteSpeakerRequest {
  readonly DomainId: string;
  readonly SpeakerId: string;
}

interface DescribeDomainRequest {
  readonly DomainId: string;
}

interface DescribeDomainResponse {
  readonly Domain: Domain;
}

interface DescribeFraudsterRegistrationJobRequest {
  readonly DomainId: string;
  readonly JobId: string;
}

interface DescribeFraudsterRegistrationJobResponse {
  readonly Job: FraudsterRegistrationJob;
}

interface DescribeFraudsterRequest {
  readonly DomainId: string;
  readonly FraudsterId: string;
}

interface DescribeFraudsterResponse {
  readonly Fraudster: Fraudster;
}

interface DescribeSpeakerEnrollmentJobRequest {
  readonly DomainId: string;
  readonly JobId: string;
}

interface DescribeSpeakerEnrollmentJobResponse {
  readonly Job: SpeakerEnrollmentJob;
}

interface DescribeSpeakerRequest {
  readonly DomainId: string;
  readonly SpeakerId: string;
}

interface DescribeSpeakerResponse {
  readonly Speaker: Speaker;
}

interface Domain {
  readonly Arn: string;
  readonly CreatedAt: Date;
  readonly Description: string;
  readonly DomainId: string;
  readonly DomainStatus: string;
  readonly Name: string;
  readonly ServerSideEncryptionConfiguration: ServerSideEncryptionConfiguration;
  readonly UpdatedAt: Date;
}

interface DomainSummary {
  readonly Arn: string;
  readonly CreatedAt: Date;
  readonly Description: string;
  readonly DomainId: string;
  readonly DomainStatus: string;
  readonly Name: string;
  readonly ServerSideEncryptionConfiguration: ServerSideEncryptionConfiguration;
  readonly UpdatedAt: Date;
}

interface EnrollmentConfig {
  readonly ExistingEnrollmentAction: string;
  readonly FraudDetectionConfig: EnrollmentJobFraudDetectionConfig;
}

interface EnrollmentJobFraudDetectionConfig {
  readonly FraudDetectionAction: string;
  readonly RiskThreshold: number;
}

interface EvaluateSessionRequest {
  readonly DomainId: string;
  readonly SessionNameOrId: string;
}

interface EvaluateSessionResponse {
  readonly AuthenticationResult: AuthenticationResult;
  readonly DomainId: string;
  readonly FraudDetectionResult: FraudDetectionResult;
  readonly SessionId: string;
  readonly SessionName: string;
  readonly StreamingStatus: string;
}

interface FailureDetails {
  readonly Message: string;
  readonly StatusCode: number;
}

interface FraudDetectionConfiguration {
  readonly RiskThreshold: number;
}

interface FraudDetectionResult {
  readonly AudioAggregationEndedAt: Date;
  readonly AudioAggregationStartedAt: Date;
  readonly Configuration: FraudDetectionConfiguration;
  readonly Decision: string;
  readonly FraudDetectionResultId: string;
  readonly Reasons: [];
  readonly RiskDetails: FraudRiskDetails;
}

interface FraudRiskDetails {
  readonly KnownFraudsterRisk: KnownFraudsterRisk;
}

interface Fraudster {
  readonly CreatedAt: Date;
  readonly DomainId: string;
  readonly GeneratedFraudsterId: string;
}

interface FraudsterRegistrationJob {
  readonly CreatedAt: Date;
  readonly DataAccessRoleArn: string;
  readonly DomainId: string;
  readonly EndedAt: Date;
  readonly FailureDetails: FailureDetails;
  readonly InputDataConfig: InputDataConfig;
  readonly JobId: string;
  readonly JobName: string;
  readonly JobProgress: JobProgress;
  readonly JobStatus: string;
  readonly OutputDataConfig: OutputDataConfig;
  readonly RegistrationConfig: RegistrationConfig;
}

interface FraudsterRegistrationJobSummary {
  readonly CreatedAt: Date;
  readonly DomainId: string;
  readonly EndedAt: Date;
  readonly FailureDetails: FailureDetails;
  readonly JobId: string;
  readonly JobName: string;
  readonly JobProgress: JobProgress;
  readonly JobStatus: string;
}

interface InputDataConfig {
  readonly S3Uri: string;
}

interface InternalServerException {
  readonly Message: string;
}

interface JobProgress {
  readonly PercentComplete: number;
}

interface KnownFraudsterRisk {
  readonly GeneratedFraudsterId: string;
  readonly RiskScore: number;
}

interface ListDomainsRequest {
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListDomainsResponse {
  readonly DomainSummaries: [];
  readonly NextToken: string;
}

interface ListFraudsterRegistrationJobsRequest {
  readonly DomainId: string;
  readonly JobStatus: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListFraudsterRegistrationJobsResponse {
  readonly JobSummaries: [];
  readonly NextToken: string;
}

interface ListSpeakerEnrollmentJobsRequest {
  readonly DomainId: string;
  readonly JobStatus: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListSpeakerEnrollmentJobsResponse {
  readonly JobSummaries: [];
  readonly NextToken: string;
}

interface ListSpeakersRequest {
  readonly DomainId: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListSpeakersResponse {
  readonly NextToken: string;
  readonly SpeakerSummaries: [];
}

interface ListTagsForResourceRequest {
  readonly ResourceArn: string;
}

interface ListTagsForResourceResponse {
  readonly Tags: [];
}

interface OptOutSpeakerRequest {
  readonly DomainId: string;
  readonly SpeakerId: string;
}

interface OptOutSpeakerResponse {
  readonly Speaker: Speaker;
}

interface OutputDataConfig {
  readonly KmsKeyId: string;
  readonly S3Uri: string;
}

interface RegistrationConfig {
  readonly DuplicateRegistrationAction: string;
  readonly FraudsterSimilarityThreshold: number;
}

interface ResourceNotFoundException {
  readonly Message: string;
  readonly ResourceType: string;
}

interface ServerSideEncryptionConfiguration {
  readonly KmsKeyId: string;
}

interface ServiceQuotaExceededException {
  readonly Message: string;
}

interface Speaker {
  readonly CreatedAt: Date;
  readonly CustomerSpeakerId: string;
  readonly DomainId: string;
  readonly GeneratedSpeakerId: string;
  readonly Status: string;
  readonly UpdatedAt: Date;
}

interface SpeakerEnrollmentJob {
  readonly CreatedAt: Date;
  readonly DataAccessRoleArn: string;
  readonly DomainId: string;
  readonly EndedAt: Date;
  readonly EnrollmentConfig: EnrollmentConfig;
  readonly FailureDetails: FailureDetails;
  readonly InputDataConfig: InputDataConfig;
  readonly JobId: string;
  readonly JobName: string;
  readonly JobProgress: JobProgress;
  readonly JobStatus: string;
  readonly OutputDataConfig: OutputDataConfig;
}

interface SpeakerEnrollmentJobSummary {
  readonly CreatedAt: Date;
  readonly DomainId: string;
  readonly EndedAt: Date;
  readonly FailureDetails: FailureDetails;
  readonly JobId: string;
  readonly JobName: string;
  readonly JobProgress: JobProgress;
  readonly JobStatus: string;
}

interface SpeakerSummary {
  readonly CreatedAt: Date;
  readonly CustomerSpeakerId: string;
  readonly DomainId: string;
  readonly GeneratedSpeakerId: string;
  readonly Status: string;
  readonly UpdatedAt: Date;
}

interface StartFraudsterRegistrationJobRequest {
  readonly ClientToken: string;
  readonly DataAccessRoleArn: string;
  readonly DomainId: string;
  readonly InputDataConfig: InputDataConfig;
  readonly JobName: string;
  readonly OutputDataConfig: OutputDataConfig;
  readonly RegistrationConfig: RegistrationConfig;
}

interface StartFraudsterRegistrationJobResponse {
  readonly Job: FraudsterRegistrationJob;
}

interface StartSpeakerEnrollmentJobRequest {
  readonly ClientToken: string;
  readonly DataAccessRoleArn: string;
  readonly DomainId: string;
  readonly EnrollmentConfig: EnrollmentConfig;
  readonly InputDataConfig: InputDataConfig;
  readonly JobName: string;
  readonly OutputDataConfig: OutputDataConfig;
}

interface StartSpeakerEnrollmentJobResponse {
  readonly Job: SpeakerEnrollmentJob;
}

interface Tag {
  readonly Key: string;
  readonly Value: string;
}

interface TagResourceRequest {
  readonly ResourceArn: string;
  readonly Tags: [];
}

interface TagResourceResponse {
}

interface ThrottlingException {
  readonly Message: string;
}

interface UntagResourceRequest {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}

interface UntagResourceResponse {
}

interface UpdateDomainRequest {
  readonly Description: string;
  readonly DomainId: string;
  readonly Name: string;
  readonly ServerSideEncryptionConfiguration: ServerSideEncryptionConfiguration;
}

interface UpdateDomainResponse {
  readonly Domain: Domain;
}

interface ValidationException {
  readonly Message: string;
}

