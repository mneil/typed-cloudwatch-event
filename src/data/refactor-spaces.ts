/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CreateApplication {
  readonly ApiGatewayProxy?: ApiGatewayProxyInput;
  readonly ClientToken?: string;
  readonly EnvironmentIdentifier: string;
  readonly Name: string;
  readonly ProxyType: string;
  readonly Tags?: {[key: string]: any};
  readonly VpcId: string;
}
export interface CreateEnvironment {
  readonly ClientToken?: string;
  readonly Description?: string;
  readonly Name: string;
  readonly NetworkFabricType: string;
  readonly Tags?: {[key: string]: any};
}
export interface CreateRoute {
  readonly ApplicationIdentifier: string;
  readonly ClientToken?: string;
  readonly EnvironmentIdentifier: string;
  readonly RouteType: string;
  readonly ServiceIdentifier: string;
  readonly Tags?: {[key: string]: any};
  readonly UriPathRoute?: UriPathRouteInput;
}
export interface CreateService {
  readonly ApplicationIdentifier: string;
  readonly ClientToken?: string;
  readonly Description?: string;
  readonly EndpointType: string;
  readonly EnvironmentIdentifier: string;
  readonly LambdaEndpoint?: LambdaEndpointInput;
  readonly Name: string;
  readonly Tags?: {[key: string]: any};
  readonly UrlEndpoint?: UrlEndpointInput;
  readonly VpcId?: string;
}
export interface DeleteApplication {
  readonly ApplicationIdentifier: string;
  readonly EnvironmentIdentifier: string;
}
export interface DeleteEnvironment {
  readonly EnvironmentIdentifier: string;
}
export interface DeleteResourcePolicy {
  readonly Identifier: string;
}
export interface DeleteRoute {
  readonly ApplicationIdentifier: string;
  readonly EnvironmentIdentifier: string;
  readonly RouteIdentifier: string;
}
export interface DeleteService {
  readonly ApplicationIdentifier: string;
  readonly EnvironmentIdentifier: string;
  readonly ServiceIdentifier: string;
}
export interface GetApplication {
  readonly ApplicationIdentifier: string;
  readonly EnvironmentIdentifier: string;
}
export interface GetEnvironment {
  readonly EnvironmentIdentifier: string;
}
export interface GetResourcePolicy {
  readonly Identifier: string;
}
export interface GetRoute {
  readonly ApplicationIdentifier: string;
  readonly EnvironmentIdentifier: string;
  readonly RouteIdentifier: string;
}
export interface GetService {
  readonly ApplicationIdentifier: string;
  readonly EnvironmentIdentifier: string;
  readonly ServiceIdentifier: string;
}
export interface ListApplications {
  readonly EnvironmentIdentifier: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface ListEnvironmentVpcs {
  readonly EnvironmentIdentifier: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface ListEnvironments {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface ListRoutes {
  readonly ApplicationIdentifier: string;
  readonly EnvironmentIdentifier: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface ListServices {
  readonly ApplicationIdentifier: string;
  readonly EnvironmentIdentifier: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface ListTagsForResource {
  readonly ResourceArn: string;
}
export interface PutResourcePolicy {
  readonly Policy: string;
  readonly ResourceArn: string;
}
export interface TagResource {
  readonly ResourceArn: string;
  readonly Tags: {[key: string]: any};
}
export interface UntagResource {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}



interface AccessDeniedException {
  readonly Message: string;
}

interface ApiGatewayProxyConfig {
  readonly ApiGatewayId: string;
  readonly EndpointType: string;
  readonly NlbArn: string;
  readonly NlbName: string;
  readonly ProxyUrl: string;
  readonly StageName: string;
  readonly VpcLinkId: string;
}

interface ApiGatewayProxyInput {
  readonly EndpointType: string;
  readonly StageName: string;
}

interface ApiGatewayProxySummary {
  readonly ApiGatewayId: string;
  readonly EndpointType: string;
  readonly NlbArn: string;
  readonly NlbName: string;
  readonly ProxyUrl: string;
  readonly StageName: string;
  readonly VpcLinkId: string;
}

interface ApplicationSummary {
  readonly ApiGatewayProxy: ApiGatewayProxySummary;
  readonly ApplicationId: string;
  readonly Arn: string;
  readonly CreatedByAccountId: string;
  readonly CreatedTime: Date;
  readonly EnvironmentId: string;
  readonly Error: ErrorResponse;
  readonly LastUpdatedTime: Date;
  readonly Name: string;
  readonly OwnerAccountId: string;
  readonly ProxyType: string;
  readonly State: string;
  readonly Tags: {[key: string]: any};
  readonly VpcId: string;
}

interface ConflictException {
  readonly Message: string;
  readonly ResourceId: string;
  readonly ResourceType: string;
}

interface CreateApplicationRequest {
  readonly ApiGatewayProxy: ApiGatewayProxyInput;
  readonly ClientToken: string;
  readonly EnvironmentIdentifier: string;
  readonly Name: string;
  readonly ProxyType: string;
  readonly Tags: {[key: string]: any};
  readonly VpcId: string;
}

interface CreateApplicationResponse {
  readonly ApiGatewayProxy: ApiGatewayProxyInput;
  readonly ApplicationId: string;
  readonly Arn: string;
  readonly CreatedByAccountId: string;
  readonly CreatedTime: Date;
  readonly EnvironmentId: string;
  readonly LastUpdatedTime: Date;
  readonly Name: string;
  readonly OwnerAccountId: string;
  readonly ProxyType: string;
  readonly State: string;
  readonly Tags: {[key: string]: any};
  readonly VpcId: string;
}

interface CreateEnvironmentRequest {
  readonly ClientToken: string;
  readonly Description: string;
  readonly Name: string;
  readonly NetworkFabricType: string;
  readonly Tags: {[key: string]: any};
}

interface CreateEnvironmentResponse {
  readonly Arn: string;
  readonly CreatedTime: Date;
  readonly Description: string;
  readonly EnvironmentId: string;
  readonly LastUpdatedTime: Date;
  readonly Name: string;
  readonly NetworkFabricType: string;
  readonly OwnerAccountId: string;
  readonly State: string;
  readonly Tags: {[key: string]: any};
}

interface CreateRouteRequest {
  readonly ApplicationIdentifier: string;
  readonly ClientToken: string;
  readonly EnvironmentIdentifier: string;
  readonly RouteType: string;
  readonly ServiceIdentifier: string;
  readonly Tags: {[key: string]: any};
  readonly UriPathRoute: UriPathRouteInput;
}

interface CreateRouteResponse {
  readonly ApplicationId: string;
  readonly Arn: string;
  readonly CreatedByAccountId: string;
  readonly CreatedTime: Date;
  readonly LastUpdatedTime: Date;
  readonly OwnerAccountId: string;
  readonly RouteId: string;
  readonly RouteType: string;
  readonly ServiceId: string;
  readonly State: string;
  readonly Tags: {[key: string]: any};
  readonly UriPathRoute: UriPathRouteInput;
}

interface CreateServiceRequest {
  readonly ApplicationIdentifier: string;
  readonly ClientToken: string;
  readonly Description: string;
  readonly EndpointType: string;
  readonly EnvironmentIdentifier: string;
  readonly LambdaEndpoint: LambdaEndpointInput;
  readonly Name: string;
  readonly Tags: {[key: string]: any};
  readonly UrlEndpoint: UrlEndpointInput;
  readonly VpcId: string;
}

interface CreateServiceResponse {
  readonly ApplicationId: string;
  readonly Arn: string;
  readonly CreatedByAccountId: string;
  readonly CreatedTime: Date;
  readonly Description: string;
  readonly EndpointType: string;
  readonly EnvironmentId: string;
  readonly LambdaEndpoint: LambdaEndpointInput;
  readonly LastUpdatedTime: Date;
  readonly Name: string;
  readonly OwnerAccountId: string;
  readonly ServiceId: string;
  readonly State: string;
  readonly Tags: {[key: string]: any};
  readonly UrlEndpoint: UrlEndpointInput;
  readonly VpcId: string;
}

interface DeleteApplicationRequest {
  readonly ApplicationIdentifier: string;
  readonly EnvironmentIdentifier: string;
}

interface DeleteApplicationResponse {
  readonly ApplicationId: string;
  readonly Arn: string;
  readonly EnvironmentId: string;
  readonly LastUpdatedTime: Date;
  readonly Name: string;
  readonly State: string;
}

interface DeleteEnvironmentRequest {
  readonly EnvironmentIdentifier: string;
}

interface DeleteEnvironmentResponse {
  readonly Arn: string;
  readonly EnvironmentId: string;
  readonly LastUpdatedTime: Date;
  readonly Name: string;
  readonly State: string;
}

interface DeleteResourcePolicyRequest {
  readonly Identifier: string;
}

interface DeleteResourcePolicyResponse {
}

interface DeleteRouteRequest {
  readonly ApplicationIdentifier: string;
  readonly EnvironmentIdentifier: string;
  readonly RouteIdentifier: string;
}

interface DeleteRouteResponse {
  readonly ApplicationId: string;
  readonly Arn: string;
  readonly LastUpdatedTime: Date;
  readonly RouteId: string;
  readonly ServiceId: string;
  readonly State: string;
}

interface DeleteServiceRequest {
  readonly ApplicationIdentifier: string;
  readonly EnvironmentIdentifier: string;
  readonly ServiceIdentifier: string;
}

interface DeleteServiceResponse {
  readonly ApplicationId: string;
  readonly Arn: string;
  readonly EnvironmentId: string;
  readonly LastUpdatedTime: Date;
  readonly Name: string;
  readonly ServiceId: string;
  readonly State: string;
}

interface EnvironmentSummary {
  readonly Arn: string;
  readonly CreatedTime: Date;
  readonly Description: string;
  readonly EnvironmentId: string;
  readonly Error: ErrorResponse;
  readonly LastUpdatedTime: Date;
  readonly Name: string;
  readonly NetworkFabricType: string;
  readonly OwnerAccountId: string;
  readonly State: string;
  readonly Tags: {[key: string]: any};
  readonly TransitGatewayId: string;
}

interface EnvironmentVpc {
  readonly AccountId: string;
  readonly CidrBlocks: [];
  readonly CreatedTime: Date;
  readonly EnvironmentId: string;
  readonly LastUpdatedTime: Date;
  readonly VpcId: string;
  readonly VpcName: string;
}

interface ErrorResponse {
  readonly AccountId: string;
  readonly AdditionalDetails: {[key: string]: any};
  readonly Code: string;
  readonly Message: string;
  readonly ResourceIdentifier: string;
  readonly ResourceType: string;
}

interface GetApplicationRequest {
  readonly ApplicationIdentifier: string;
  readonly EnvironmentIdentifier: string;
}

interface GetApplicationResponse {
  readonly ApiGatewayProxy: ApiGatewayProxyConfig;
  readonly ApplicationId: string;
  readonly Arn: string;
  readonly CreatedByAccountId: string;
  readonly CreatedTime: Date;
  readonly EnvironmentId: string;
  readonly Error: ErrorResponse;
  readonly LastUpdatedTime: Date;
  readonly Name: string;
  readonly OwnerAccountId: string;
  readonly ProxyType: string;
  readonly State: string;
  readonly Tags: {[key: string]: any};
  readonly VpcId: string;
}

interface GetEnvironmentRequest {
  readonly EnvironmentIdentifier: string;
}

interface GetEnvironmentResponse {
  readonly Arn: string;
  readonly CreatedTime: Date;
  readonly Description: string;
  readonly EnvironmentId: string;
  readonly Error: ErrorResponse;
  readonly LastUpdatedTime: Date;
  readonly Name: string;
  readonly NetworkFabricType: string;
  readonly OwnerAccountId: string;
  readonly State: string;
  readonly Tags: {[key: string]: any};
  readonly TransitGatewayId: string;
}

interface GetResourcePolicyRequest {
  readonly Identifier: string;
}

interface GetResourcePolicyResponse {
  readonly Policy: string;
}

interface GetRouteRequest {
  readonly ApplicationIdentifier: string;
  readonly EnvironmentIdentifier: string;
  readonly RouteIdentifier: string;
}

interface GetRouteResponse {
  readonly ApplicationId: string;
  readonly Arn: string;
  readonly CreatedByAccountId: string;
  readonly CreatedTime: Date;
  readonly EnvironmentId: string;
  readonly Error: ErrorResponse;
  readonly IncludeChildPaths: boolean;
  readonly LastUpdatedTime: Date;
  readonly Methods: [];
  readonly OwnerAccountId: string;
  readonly PathResourceToId: {[key: string]: any};
  readonly RouteId: string;
  readonly RouteType: string;
  readonly ServiceId: string;
  readonly SourcePath: string;
  readonly State: string;
  readonly Tags: {[key: string]: any};
}

interface GetServiceRequest {
  readonly ApplicationIdentifier: string;
  readonly EnvironmentIdentifier: string;
  readonly ServiceIdentifier: string;
}

interface GetServiceResponse {
  readonly ApplicationId: string;
  readonly Arn: string;
  readonly CreatedByAccountId: string;
  readonly CreatedTime: Date;
  readonly Description: string;
  readonly EndpointType: string;
  readonly EnvironmentId: string;
  readonly Error: ErrorResponse;
  readonly LambdaEndpoint: LambdaEndpointConfig;
  readonly LastUpdatedTime: Date;
  readonly Name: string;
  readonly OwnerAccountId: string;
  readonly ServiceId: string;
  readonly State: string;
  readonly Tags: {[key: string]: any};
  readonly UrlEndpoint: UrlEndpointConfig;
  readonly VpcId: string;
}

interface InternalServerException {
  readonly Message: string;
}

interface InvalidResourcePolicyException {
  readonly Message: string;
}

interface LambdaEndpointConfig {
  readonly Arn: string;
}

interface LambdaEndpointInput {
  readonly Arn: string;
}

interface LambdaEndpointSummary {
  readonly Arn: string;
}

interface ListApplicationsRequest {
  readonly EnvironmentIdentifier: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListApplicationsResponse {
  readonly ApplicationSummaryList: [];
  readonly NextToken: string;
}

interface ListEnvironmentVpcsRequest {
  readonly EnvironmentIdentifier: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListEnvironmentVpcsResponse {
  readonly EnvironmentVpcList: [];
  readonly NextToken: string;
}

interface ListEnvironmentsRequest {
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListEnvironmentsResponse {
  readonly EnvironmentSummaryList: [];
  readonly NextToken: string;
}

interface ListRoutesRequest {
  readonly ApplicationIdentifier: string;
  readonly EnvironmentIdentifier: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListRoutesResponse {
  readonly NextToken: string;
  readonly RouteSummaryList: [];
}

interface ListServicesRequest {
  readonly ApplicationIdentifier: string;
  readonly EnvironmentIdentifier: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListServicesResponse {
  readonly NextToken: string;
  readonly ServiceSummaryList: [];
}

interface ListTagsForResourceRequest {
  readonly ResourceArn: string;
}

interface ListTagsForResourceResponse {
  readonly Tags: {[key: string]: any};
}

interface PutResourcePolicyRequest {
  readonly Policy: string;
  readonly ResourceArn: string;
}

interface PutResourcePolicyResponse {
}

interface ResourceNotFoundException {
  readonly Message: string;
  readonly ResourceId: string;
  readonly ResourceType: string;
}

interface RouteSummary {
  readonly ApplicationId: string;
  readonly Arn: string;
  readonly CreatedByAccountId: string;
  readonly CreatedTime: Date;
  readonly EnvironmentId: string;
  readonly Error: ErrorResponse;
  readonly IncludeChildPaths: boolean;
  readonly LastUpdatedTime: Date;
  readonly Methods: [];
  readonly OwnerAccountId: string;
  readonly PathResourceToId: {[key: string]: any};
  readonly RouteId: string;
  readonly RouteType: string;
  readonly ServiceId: string;
  readonly SourcePath: string;
  readonly State: string;
  readonly Tags: {[key: string]: any};
}

interface ServiceQuotaExceededException {
  readonly Message: string;
  readonly QuotaCode: string;
  readonly ResourceId: string;
  readonly ResourceType: string;
  readonly ServiceCode: string;
}

interface ServiceSummary {
  readonly ApplicationId: string;
  readonly Arn: string;
  readonly CreatedByAccountId: string;
  readonly CreatedTime: Date;
  readonly Description: string;
  readonly EndpointType: string;
  readonly EnvironmentId: string;
  readonly Error: ErrorResponse;
  readonly LambdaEndpoint: LambdaEndpointSummary;
  readonly LastUpdatedTime: Date;
  readonly Name: string;
  readonly OwnerAccountId: string;
  readonly ServiceId: string;
  readonly State: string;
  readonly Tags: {[key: string]: any};
  readonly UrlEndpoint: UrlEndpointSummary;
  readonly VpcId: string;
}

interface TagResourceRequest {
  readonly ResourceArn: string;
  readonly Tags: {[key: string]: any};
}

interface TagResourceResponse {
}

interface ThrottlingException {
  readonly Message: string;
  readonly QuotaCode: string;
  readonly RetryAfterSeconds: number;
  readonly ServiceCode: string;
}

interface UntagResourceRequest {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}

interface UntagResourceResponse {
}

interface UriPathRouteInput {
  readonly ActivationState: string;
  readonly IncludeChildPaths: boolean;
  readonly Methods: [];
  readonly SourcePath: string;
}

interface UrlEndpointConfig {
  readonly HealthUrl: string;
  readonly Url: string;
}

interface UrlEndpointInput {
  readonly HealthUrl: string;
  readonly Url: string;
}

interface UrlEndpointSummary {
  readonly HealthUrl: string;
  readonly Url: string;
}

interface ValidationException {
  readonly Message: string;
}

