/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AssociateLenses {
  readonly WorkloadId: string;
  readonly LensAliases: [];
}

export interface CreateLensShare {
  readonly LensAlias: string;
  readonly SharedWith: string;
  readonly ClientRequestToken: string;
}

export interface CreateLensVersion {
  readonly LensAlias: string;
  readonly LensVersion: string;
  readonly IsMajorVersion?: boolean;
  readonly ClientRequestToken: string;
}

export interface CreateMilestone {
  readonly WorkloadId: string;
  readonly MilestoneName: string;
  readonly ClientRequestToken: string;
}

export interface CreateWorkload {
  readonly WorkloadName: string;
  readonly Description: string;
  readonly Environment: string;
  readonly AccountIds?: [];
  readonly AwsRegions?: [];
  readonly NonAwsRegions?: [];
  readonly PillarPriorities?: [];
  readonly ArchitecturalDesign?: string;
  readonly ReviewOwner: string;
  readonly IndustryType?: string;
  readonly Industry?: string;
  readonly Lenses: [];
  readonly Notes?: string;
  readonly ClientRequestToken: string;
  readonly Tags?: {[key: string]: any};
}

export interface CreateWorkloadShare {
  readonly WorkloadId: string;
  readonly SharedWith: string;
  readonly PermissionType: string;
  readonly ClientRequestToken: string;
}

export interface DeleteLens {
  readonly LensAlias: string;
  readonly ClientRequestToken: string;
  readonly LensStatus: string;
}

export interface DeleteLensShare {
  readonly ShareId: string;
  readonly LensAlias: string;
  readonly ClientRequestToken: string;
}

export interface DeleteWorkload {
  readonly WorkloadId: string;
  readonly ClientRequestToken: string;
}

export interface DeleteWorkloadShare {
  readonly ShareId: string;
  readonly WorkloadId: string;
  readonly ClientRequestToken: string;
}

export interface DisassociateLenses {
  readonly WorkloadId: string;
  readonly LensAliases: [];
}

export interface ExportLens {
  readonly LensAlias: string;
  readonly LensVersion?: string;
}

export interface GetAnswer {
  readonly WorkloadId: string;
  readonly LensAlias: string;
  readonly QuestionId: string;
  readonly MilestoneNumber?: number;
}

export interface GetLens {
  readonly LensAlias: string;
  readonly LensVersion?: string;
}

export interface GetLensReview {
  readonly WorkloadId: string;
  readonly LensAlias: string;
  readonly MilestoneNumber?: number;
}

export interface GetLensReviewReport {
  readonly WorkloadId: string;
  readonly LensAlias: string;
  readonly MilestoneNumber?: number;
}

export interface GetLensVersionDifference {
  readonly LensAlias: string;
  readonly BaseLensVersion?: string;
  readonly TargetLensVersion?: string;
}

export interface GetMilestone {
  readonly WorkloadId: string;
  readonly MilestoneNumber: number;
}

export interface GetWorkload {
  readonly WorkloadId: string;
}

export interface ImportLens {
  readonly LensAlias?: string;
  readonly JSONString: string;
  readonly ClientRequestToken: string;
  readonly Tags?: {[key: string]: any};
}

export interface ListAnswers {
  readonly WorkloadId: string;
  readonly LensAlias: string;
  readonly PillarId?: string;
  readonly MilestoneNumber?: number;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListLensReviewImprovements {
  readonly WorkloadId: string;
  readonly LensAlias: string;
  readonly PillarId?: string;
  readonly MilestoneNumber?: number;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListLensReviews {
  readonly WorkloadId: string;
  readonly MilestoneNumber?: number;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListLensShares {
  readonly LensAlias: string;
  readonly SharedWithPrefix?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListLenses {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly LensType?: string;
  readonly LensStatus?: string;
  readonly LensName?: string;
}

export interface ListMilestones {
  readonly WorkloadId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListNotifications {
  readonly WorkloadId?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListShareInvitations {
  readonly WorkloadNamePrefix?: string;
  readonly LensNamePrefix?: string;
  readonly ShareResourceType?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListTagsForResource {
  readonly WorkloadArn: string;
}

export interface ListWorkloadShares {
  readonly WorkloadId: string;
  readonly SharedWithPrefix?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListWorkloads {
  readonly WorkloadNamePrefix?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface TagResource {
  readonly WorkloadArn: string;
  readonly Tags: {[key: string]: any};
}

export interface UntagResource {
  readonly WorkloadArn: string;
  readonly TagKeys: [];
}

export interface UpdateAnswer {
  readonly WorkloadId: string;
  readonly LensAlias: string;
  readonly QuestionId: string;
  readonly SelectedChoices?: [];
  readonly ChoiceUpdates?: {[key: string]: any};
  readonly Notes?: string;
  readonly IsApplicable?: boolean;
  readonly Reason?: string;
}

export interface UpdateLensReview {
  readonly WorkloadId: string;
  readonly LensAlias: string;
  readonly LensNotes?: string;
  readonly PillarNotes?: {[key: string]: any};
}

export interface UpdateShareInvitation {
  readonly ShareInvitationId: string;
  readonly ShareInvitationAction: string;
}

export interface UpdateWorkload {
  readonly WorkloadId: string;
  readonly WorkloadName?: string;
  readonly Description?: string;
  readonly Environment?: string;
  readonly AccountIds?: [];
  readonly AwsRegions?: [];
  readonly NonAwsRegions?: [];
  readonly PillarPriorities?: [];
  readonly ArchitecturalDesign?: string;
  readonly ReviewOwner?: string;
  readonly IsReviewOwnerUpdateAcknowledged?: boolean;
  readonly IndustryType?: string;
  readonly Industry?: string;
  readonly Notes?: string;
  readonly ImprovementStatus?: string;
}

export interface UpdateWorkloadShare {
  readonly ShareId: string;
  readonly WorkloadId: string;
  readonly PermissionType: string;
}

export interface UpgradeLensReview {
  readonly WorkloadId: string;
  readonly LensAlias: string;
  readonly MilestoneName: string;
  readonly ClientRequestToken?: string;
}

export interface AccessDeniedException {
  readonly Message: string;
}

export interface Answer {
  readonly QuestionId?: string;
  readonly PillarId?: string;
  readonly QuestionTitle?: string;
  readonly QuestionDescription?: string;
  readonly ImprovementPlanUrl?: string;
  readonly HelpfulResourceUrl?: string;
  readonly HelpfulResourceDisplayText?: string;
  readonly Choices?: [];
  readonly SelectedChoices?: [];
  readonly ChoiceAnswers?: [];
  readonly IsApplicable?: boolean;
  readonly Risk?: string;
  readonly Notes?: string;
  readonly Reason?: string;
}

export interface AnswerSummary {
  readonly QuestionId?: string;
  readonly PillarId?: string;
  readonly QuestionTitle?: string;
  readonly Choices?: [];
  readonly SelectedChoices?: [];
  readonly ChoiceAnswerSummaries?: [];
  readonly IsApplicable?: boolean;
  readonly Risk?: string;
  readonly Reason?: string;
}

export interface AssociateLensesInput {
  readonly WorkloadId: string;
  readonly LensAliases: [];
}

export interface Choice {
  readonly ChoiceId?: string;
  readonly Title?: string;
  readonly Description?: string;
  readonly HelpfulResource?: ChoiceContent;
  readonly ImprovementPlan?: ChoiceContent;
}

export interface ChoiceAnswer {
  readonly ChoiceId?: string;
  readonly Status?: string;
  readonly Reason?: string;
  readonly Notes?: string;
}

export interface ChoiceAnswerSummary {
  readonly ChoiceId?: string;
  readonly Status?: string;
  readonly Reason?: string;
}

export interface ChoiceContent {
  readonly DisplayText?: string;
  readonly Url?: string;
}

export interface ChoiceImprovementPlan {
  readonly ChoiceId?: string;
  readonly DisplayText?: string;
  readonly ImprovementPlanUrl?: string;
}

export interface ChoiceUpdate {
  readonly Status: string;
  readonly Reason?: string;
  readonly Notes?: string;
}

export interface ConflictException {
  readonly Message: string;
  readonly ResourceId: string;
  readonly ResourceType: string;
}

export interface CreateLensShareInput {
  readonly LensAlias: string;
  readonly SharedWith: string;
  readonly ClientRequestToken: string;
}

export interface CreateLensShareOutput {
  readonly ShareId?: string;
}

export interface CreateLensVersionInput {
  readonly LensAlias: string;
  readonly LensVersion: string;
  readonly IsMajorVersion?: boolean;
  readonly ClientRequestToken: string;
}

export interface CreateLensVersionOutput {
  readonly LensArn?: string;
  readonly LensVersion?: string;
}

export interface CreateMilestoneInput {
  readonly WorkloadId: string;
  readonly MilestoneName: string;
  readonly ClientRequestToken: string;
}

export interface CreateMilestoneOutput {
  readonly WorkloadId?: string;
  readonly MilestoneNumber?: number;
}

export interface CreateWorkloadInput {
  readonly WorkloadName: string;
  readonly Description: string;
  readonly Environment: string;
  readonly AccountIds?: [];
  readonly AwsRegions?: [];
  readonly NonAwsRegions?: [];
  readonly PillarPriorities?: [];
  readonly ArchitecturalDesign?: string;
  readonly ReviewOwner: string;
  readonly IndustryType?: string;
  readonly Industry?: string;
  readonly Lenses: [];
  readonly Notes?: string;
  readonly ClientRequestToken: string;
  readonly Tags?: {[key: string]: any};
}

export interface CreateWorkloadOutput {
  readonly WorkloadId?: string;
  readonly WorkloadArn?: string;
}

export interface CreateWorkloadShareInput {
  readonly WorkloadId: string;
  readonly SharedWith: string;
  readonly PermissionType: string;
  readonly ClientRequestToken: string;
}

export interface CreateWorkloadShareOutput {
  readonly WorkloadId?: string;
  readonly ShareId?: string;
}

export interface DeleteLensInput {
  readonly LensAlias: string;
  readonly ClientRequestToken: string;
  readonly LensStatus: string;
}

export interface DeleteLensShareInput {
  readonly ShareId: string;
  readonly LensAlias: string;
  readonly ClientRequestToken: string;
}

export interface DeleteWorkloadInput {
  readonly WorkloadId: string;
  readonly ClientRequestToken: string;
}

export interface DeleteWorkloadShareInput {
  readonly ShareId: string;
  readonly WorkloadId: string;
  readonly ClientRequestToken: string;
}

export interface DisassociateLensesInput {
  readonly WorkloadId: string;
  readonly LensAliases: [];
}

export interface ExportLensInput {
  readonly LensAlias: string;
  readonly LensVersion?: string;
}

export interface ExportLensOutput {
  readonly LensJSON?: string;
}

export interface GetAnswerInput {
  readonly WorkloadId: string;
  readonly LensAlias: string;
  readonly QuestionId: string;
  readonly MilestoneNumber?: number;
}

export interface GetAnswerOutput {
  readonly WorkloadId?: string;
  readonly MilestoneNumber?: number;
  readonly LensAlias?: string;
  readonly LensArn?: string;
  readonly Answer?: Answer;
}

export interface GetLensInput {
  readonly LensAlias: string;
  readonly LensVersion?: string;
}

export interface GetLensOutput {
  readonly Lens?: Lens;
}

export interface GetLensReviewInput {
  readonly WorkloadId: string;
  readonly LensAlias: string;
  readonly MilestoneNumber?: number;
}

export interface GetLensReviewOutput {
  readonly WorkloadId?: string;
  readonly MilestoneNumber?: number;
  readonly LensReview?: LensReview;
}

export interface GetLensReviewReportInput {
  readonly WorkloadId: string;
  readonly LensAlias: string;
  readonly MilestoneNumber?: number;
}

export interface GetLensReviewReportOutput {
  readonly WorkloadId?: string;
  readonly MilestoneNumber?: number;
  readonly LensReviewReport?: LensReviewReport;
}

export interface GetLensVersionDifferenceInput {
  readonly LensAlias: string;
  readonly BaseLensVersion?: string;
  readonly TargetLensVersion?: string;
}

export interface GetLensVersionDifferenceOutput {
  readonly LensAlias?: string;
  readonly LensArn?: string;
  readonly BaseLensVersion?: string;
  readonly TargetLensVersion?: string;
  readonly LatestLensVersion?: string;
  readonly VersionDifferences?: VersionDifferences;
}

export interface GetMilestoneInput {
  readonly WorkloadId: string;
  readonly MilestoneNumber: number;
}

export interface GetMilestoneOutput {
  readonly WorkloadId?: string;
  readonly Milestone?: Milestone;
}

export interface GetWorkloadInput {
  readonly WorkloadId: string;
}

export interface GetWorkloadOutput {
  readonly Workload?: Workload;
}

export interface ImportLensInput {
  readonly LensAlias?: string;
  readonly JSONString: string;
  readonly ClientRequestToken: string;
  readonly Tags?: {[key: string]: any};
}

export interface ImportLensOutput {
  readonly LensArn?: string;
  readonly Status?: string;
}

export interface ImprovementSummary {
  readonly QuestionId?: string;
  readonly PillarId?: string;
  readonly QuestionTitle?: string;
  readonly Risk?: string;
  readonly ImprovementPlanUrl?: string;
  readonly ImprovementPlans?: [];
}

export interface InternalServerException {
  readonly Message: string;
}

export interface Lens {
  readonly LensArn?: string;
  readonly LensVersion?: string;
  readonly Name?: string;
  readonly Description?: string;
  readonly Owner?: string;
  readonly ShareInvitationId?: string;
}

export interface LensReview {
  readonly LensAlias?: string;
  readonly LensArn?: string;
  readonly LensVersion?: string;
  readonly LensName?: string;
  readonly LensStatus?: string;
  readonly PillarReviewSummaries?: [];
  readonly UpdatedAt?: Date;
  readonly Notes?: string;
  readonly RiskCounts?: {[key: string]: any};
  readonly NextToken?: string;
}

export interface LensReviewReport {
  readonly LensAlias?: string;
  readonly LensArn?: string;
  readonly Base64String?: string;
}

export interface LensReviewSummary {
  readonly LensAlias?: string;
  readonly LensArn?: string;
  readonly LensVersion?: string;
  readonly LensName?: string;
  readonly LensStatus?: string;
  readonly UpdatedAt?: Date;
  readonly RiskCounts?: {[key: string]: any};
}

export interface LensShareSummary {
  readonly ShareId?: string;
  readonly SharedWith?: string;
  readonly Status?: string;
}

export interface LensSummary {
  readonly LensArn?: string;
  readonly LensAlias?: string;
  readonly LensName?: string;
  readonly LensType?: string;
  readonly Description?: string;
  readonly CreatedAt?: Date;
  readonly UpdatedAt?: Date;
  readonly LensVersion?: string;
  readonly Owner?: string;
  readonly LensStatus?: string;
}

export interface LensUpgradeSummary {
  readonly WorkloadId?: string;
  readonly WorkloadName?: string;
  readonly LensAlias?: string;
  readonly LensArn?: string;
  readonly CurrentLensVersion?: string;
  readonly LatestLensVersion?: string;
}

export interface ListAnswersInput {
  readonly WorkloadId: string;
  readonly LensAlias: string;
  readonly PillarId?: string;
  readonly MilestoneNumber?: number;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListAnswersOutput {
  readonly WorkloadId?: string;
  readonly MilestoneNumber?: number;
  readonly LensAlias?: string;
  readonly LensArn?: string;
  readonly AnswerSummaries?: [];
  readonly NextToken?: string;
}

export interface ListLensReviewImprovementsInput {
  readonly WorkloadId: string;
  readonly LensAlias: string;
  readonly PillarId?: string;
  readonly MilestoneNumber?: number;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListLensReviewImprovementsOutput {
  readonly WorkloadId?: string;
  readonly MilestoneNumber?: number;
  readonly LensAlias?: string;
  readonly LensArn?: string;
  readonly ImprovementSummaries?: [];
  readonly NextToken?: string;
}

export interface ListLensReviewsInput {
  readonly WorkloadId: string;
  readonly MilestoneNumber?: number;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListLensReviewsOutput {
  readonly WorkloadId?: string;
  readonly MilestoneNumber?: number;
  readonly LensReviewSummaries?: [];
  readonly NextToken?: string;
}

export interface ListLensSharesInput {
  readonly LensAlias: string;
  readonly SharedWithPrefix?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListLensSharesOutput {
  readonly LensShareSummaries?: [];
  readonly NextToken?: string;
}

export interface ListLensesInput {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly LensType?: string;
  readonly LensStatus?: string;
  readonly LensName?: string;
}

export interface ListLensesOutput {
  readonly LensSummaries?: [];
  readonly NextToken?: string;
}

export interface ListMilestonesInput {
  readonly WorkloadId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListMilestonesOutput {
  readonly WorkloadId?: string;
  readonly MilestoneSummaries?: [];
  readonly NextToken?: string;
}

export interface ListNotificationsInput {
  readonly WorkloadId?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListNotificationsOutput {
  readonly NotificationSummaries?: [];
  readonly NextToken?: string;
}

export interface ListShareInvitationsInput {
  readonly WorkloadNamePrefix?: string;
  readonly LensNamePrefix?: string;
  readonly ShareResourceType?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListShareInvitationsOutput {
  readonly ShareInvitationSummaries?: [];
  readonly NextToken?: string;
}

export interface ListTagsForResourceInput {
  readonly WorkloadArn: string;
}

export interface ListTagsForResourceOutput {
  readonly Tags?: {[key: string]: any};
}

export interface ListWorkloadSharesInput {
  readonly WorkloadId: string;
  readonly SharedWithPrefix?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListWorkloadSharesOutput {
  readonly WorkloadId?: string;
  readonly WorkloadShareSummaries?: [];
  readonly NextToken?: string;
}

export interface ListWorkloadsInput {
  readonly WorkloadNamePrefix?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListWorkloadsOutput {
  readonly WorkloadSummaries?: [];
  readonly NextToken?: string;
}

export interface Milestone {
  readonly MilestoneNumber?: number;
  readonly MilestoneName?: string;
  readonly RecordedAt?: Date;
  readonly Workload?: Workload;
}

export interface MilestoneSummary {
  readonly MilestoneNumber?: number;
  readonly MilestoneName?: string;
  readonly RecordedAt?: Date;
  readonly WorkloadSummary?: WorkloadSummary;
}

export interface NotificationSummary {
  readonly Type?: string;
  readonly LensUpgradeSummary?: LensUpgradeSummary;
}

export interface PillarDifference {
  readonly PillarId?: string;
  readonly PillarName?: string;
  readonly DifferenceStatus?: string;
  readonly QuestionDifferences?: [];
}

export interface PillarReviewSummary {
  readonly PillarId?: string;
  readonly PillarName?: string;
  readonly Notes?: string;
  readonly RiskCounts?: {[key: string]: any};
}

export interface QuestionDifference {
  readonly QuestionId?: string;
  readonly QuestionTitle?: string;
  readonly DifferenceStatus?: string;
}

export interface ResourceNotFoundException {
  readonly Message: string;
  readonly ResourceId: string;
  readonly ResourceType: string;
}

export interface ServiceQuotaExceededException {
  readonly Message: string;
  readonly ResourceId?: string;
  readonly ResourceType?: string;
  readonly QuotaCode: string;
  readonly ServiceCode: string;
}

export interface ShareInvitation {
  readonly ShareInvitationId?: string;
  readonly ShareResourceType?: string;
  readonly WorkloadId?: string;
  readonly LensAlias?: string;
  readonly LensArn?: string;
}

export interface ShareInvitationSummary {
  readonly ShareInvitationId?: string;
  readonly SharedBy?: string;
  readonly SharedWith?: string;
  readonly PermissionType?: string;
  readonly ShareResourceType?: string;
  readonly WorkloadName?: string;
  readonly WorkloadId?: string;
  readonly LensName?: string;
  readonly LensArn?: string;
}

export interface TagResourceInput {
  readonly WorkloadArn: string;
  readonly Tags: {[key: string]: any};
}

export interface TagResourceOutput {
}

export interface ThrottlingException {
  readonly Message: string;
  readonly QuotaCode?: string;
  readonly ServiceCode?: string;
}

export interface UntagResourceInput {
  readonly WorkloadArn: string;
  readonly TagKeys: [];
}

export interface UntagResourceOutput {
}

export interface UpdateAnswerInput {
  readonly WorkloadId: string;
  readonly LensAlias: string;
  readonly QuestionId: string;
  readonly SelectedChoices?: [];
  readonly ChoiceUpdates?: {[key: string]: any};
  readonly Notes?: string;
  readonly IsApplicable?: boolean;
  readonly Reason?: string;
}

export interface UpdateAnswerOutput {
  readonly WorkloadId?: string;
  readonly LensAlias?: string;
  readonly LensArn?: string;
  readonly Answer?: Answer;
}

export interface UpdateLensReviewInput {
  readonly WorkloadId: string;
  readonly LensAlias: string;
  readonly LensNotes?: string;
  readonly PillarNotes?: {[key: string]: any};
}

export interface UpdateLensReviewOutput {
  readonly WorkloadId?: string;
  readonly LensReview?: LensReview;
}

export interface UpdateShareInvitationInput {
  readonly ShareInvitationId: string;
  readonly ShareInvitationAction: string;
}

export interface UpdateShareInvitationOutput {
  readonly ShareInvitation?: ShareInvitation;
}

export interface UpdateWorkloadInput {
  readonly WorkloadId: string;
  readonly WorkloadName?: string;
  readonly Description?: string;
  readonly Environment?: string;
  readonly AccountIds?: [];
  readonly AwsRegions?: [];
  readonly NonAwsRegions?: [];
  readonly PillarPriorities?: [];
  readonly ArchitecturalDesign?: string;
  readonly ReviewOwner?: string;
  readonly IsReviewOwnerUpdateAcknowledged?: boolean;
  readonly IndustryType?: string;
  readonly Industry?: string;
  readonly Notes?: string;
  readonly ImprovementStatus?: string;
}

export interface UpdateWorkloadOutput {
  readonly Workload?: Workload;
}

export interface UpdateWorkloadShareInput {
  readonly ShareId: string;
  readonly WorkloadId: string;
  readonly PermissionType: string;
}

export interface UpdateWorkloadShareOutput {
  readonly WorkloadId?: string;
  readonly WorkloadShare?: WorkloadShare;
}

export interface UpgradeLensReviewInput {
  readonly WorkloadId: string;
  readonly LensAlias: string;
  readonly MilestoneName: string;
  readonly ClientRequestToken?: string;
}

export interface ValidationException {
  readonly Message: string;
  readonly Reason?: string;
  readonly Fields?: [];
}

export interface ValidationExceptionField {
  readonly Name: string;
  readonly Message: string;
}

export interface VersionDifferences {
  readonly PillarDifferences?: [];
}

export interface Workload {
  readonly WorkloadId?: string;
  readonly WorkloadArn?: string;
  readonly WorkloadName?: string;
  readonly Description?: string;
  readonly Environment?: string;
  readonly UpdatedAt?: Date;
  readonly AccountIds?: [];
  readonly AwsRegions?: [];
  readonly NonAwsRegions?: [];
  readonly ArchitecturalDesign?: string;
  readonly ReviewOwner?: string;
  readonly ReviewRestrictionDate?: Date;
  readonly IsReviewOwnerUpdateAcknowledged?: boolean;
  readonly IndustryType?: string;
  readonly Industry?: string;
  readonly Notes?: string;
  readonly ImprovementStatus?: string;
  readonly RiskCounts?: {[key: string]: any};
  readonly PillarPriorities?: [];
  readonly Lenses?: [];
  readonly Owner?: string;
  readonly ShareInvitationId?: string;
  readonly Tags?: {[key: string]: any};
}

export interface WorkloadShare {
  readonly ShareId?: string;
  readonly SharedBy?: string;
  readonly SharedWith?: string;
  readonly PermissionType?: string;
  readonly Status?: string;
  readonly WorkloadName?: string;
  readonly WorkloadId?: string;
}

export interface WorkloadShareSummary {
  readonly ShareId?: string;
  readonly SharedWith?: string;
  readonly PermissionType?: string;
  readonly Status?: string;
}

export interface WorkloadSummary {
  readonly WorkloadId?: string;
  readonly WorkloadArn?: string;
  readonly WorkloadName?: string;
  readonly Owner?: string;
  readonly UpdatedAt?: Date;
  readonly Lenses?: [];
  readonly RiskCounts?: {[key: string]: any};
  readonly ImprovementStatus?: string;
}


