/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface BatchAssociateClientDeviceWithCoreDevice {
  readonly entries?: [];
  readonly coreDeviceThingName: string;
}

export interface BatchDisassociateClientDeviceFromCoreDevice {
  readonly entries?: [];
  readonly coreDeviceThingName: string;
}

export interface CancelDeployment {
  readonly deploymentId: string;
}

export interface CreateComponentVersion {
  readonly inlineRecipe?: unknown;
  readonly lambdaFunction?: LambdaFunctionRecipeSource;
  readonly tags?: {[key: string]: any};
  readonly clientToken?: string;
}

export interface CreateDeployment {
  readonly targetArn: string;
  readonly deploymentName?: string;
  readonly components?: {[key: string]: any};
  readonly iotJobConfiguration?: DeploymentIoTJobConfiguration;
  readonly deploymentPolicies?: DeploymentPolicies;
  readonly tags?: {[key: string]: any};
  readonly clientToken?: string;
}

export interface DeleteComponent {
  readonly arn: string;
}

export interface DeleteCoreDevice {
  readonly coreDeviceThingName: string;
}

export interface DescribeComponent {
  readonly arn: string;
}

export interface GetComponent {
  readonly recipeOutputFormat?: string;
  readonly arn: string;
}

export interface GetComponentVersionArtifact {
  readonly arn: string;
  readonly artifactName: string;
}

export interface GetCoreDevice {
  readonly coreDeviceThingName: string;
}

export interface GetDeployment {
  readonly deploymentId: string;
}

export interface ListClientDevicesAssociatedWithCoreDevice {
  readonly coreDeviceThingName: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListComponentVersions {
  readonly arn: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListComponents {
  readonly scope?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListCoreDevices {
  readonly thingGroupArn?: string;
  readonly status?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListDeployments {
  readonly targetArn?: string;
  readonly historyFilter?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListEffectiveDeployments {
  readonly coreDeviceThingName: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListInstalledComponents {
  readonly coreDeviceThingName: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListTagsForResource {
  readonly resourceArn: string;
}

export interface ResolveComponentCandidates {
  readonly platform: ComponentPlatform;
  readonly componentCandidates: [];
}

export interface TagResource {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

export interface UntagResource {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface AccessDeniedException {
  readonly message: string;
}

export interface AssociateClientDeviceWithCoreDeviceEntry {
  readonly thingName: string;
}

export interface AssociateClientDeviceWithCoreDeviceErrorEntry {
  readonly thingName?: string;
  readonly code?: string;
  readonly message?: string;
}

export interface AssociatedClientDevice {
  readonly thingName?: string;
  readonly associationTimestamp?: Date;
}

export interface BatchAssociateClientDeviceWithCoreDeviceRequest {
  readonly entries?: [];
  readonly coreDeviceThingName: string;
}

export interface BatchAssociateClientDeviceWithCoreDeviceResponse {
  readonly errorEntries?: [];
}

export interface BatchDisassociateClientDeviceFromCoreDeviceRequest {
  readonly entries?: [];
  readonly coreDeviceThingName: string;
}

export interface BatchDisassociateClientDeviceFromCoreDeviceResponse {
  readonly errorEntries?: [];
}

export interface CancelDeploymentRequest {
  readonly deploymentId: string;
}

export interface CancelDeploymentResponse {
  readonly message?: string;
}

export interface CloudComponentStatus {
  readonly componentState?: string;
  readonly message?: string;
  readonly errors?: {[key: string]: any};
}

export interface Component {
  readonly arn?: string;
  readonly componentName?: string;
  readonly latestVersion?: ComponentLatestVersion;
}

export interface ComponentCandidate {
  readonly componentName?: string;
  readonly componentVersion?: string;
  readonly versionRequirements?: {[key: string]: any};
}

export interface ComponentConfigurationUpdate {
  readonly merge?: string;
  readonly reset?: [];
}

export interface ComponentDependencyRequirement {
  readonly versionRequirement?: string;
  readonly dependencyType?: string;
}

export interface ComponentDeploymentSpecification {
  readonly componentVersion?: string;
  readonly configurationUpdate?: ComponentConfigurationUpdate;
  readonly runWith?: ComponentRunWith;
}

export interface ComponentLatestVersion {
  readonly arn?: string;
  readonly componentVersion?: string;
  readonly creationTimestamp?: Date;
  readonly description?: string;
  readonly publisher?: string;
  readonly platforms?: [];
}

export interface ComponentPlatform {
  readonly name?: string;
  readonly attributes?: {[key: string]: any};
}

export interface ComponentRunWith {
  readonly posixUser?: string;
  readonly systemResourceLimits?: SystemResourceLimits;
  readonly windowsUser?: string;
}

export interface ComponentVersionListItem {
  readonly componentName?: string;
  readonly componentVersion?: string;
  readonly arn?: string;
}

export interface ConflictException {
  readonly message: string;
  readonly resourceId: string;
  readonly resourceType: string;
}

export interface CoreDevice {
  readonly coreDeviceThingName?: string;
  readonly status?: string;
  readonly lastStatusUpdateTimestamp?: Date;
}

export interface CreateComponentVersionRequest {
  readonly inlineRecipe?: unknown;
  readonly lambdaFunction?: LambdaFunctionRecipeSource;
  readonly tags?: {[key: string]: any};
  readonly clientToken?: string;
}

export interface CreateComponentVersionResponse {
  readonly arn?: string;
  readonly componentName: string;
  readonly componentVersion: string;
  readonly creationTimestamp: Date;
  readonly status: CloudComponentStatus;
}

export interface CreateDeploymentRequest {
  readonly targetArn: string;
  readonly deploymentName?: string;
  readonly components?: {[key: string]: any};
  readonly iotJobConfiguration?: DeploymentIoTJobConfiguration;
  readonly deploymentPolicies?: DeploymentPolicies;
  readonly tags?: {[key: string]: any};
  readonly clientToken?: string;
}

export interface CreateDeploymentResponse {
  readonly deploymentId?: string;
  readonly iotJobId?: string;
  readonly iotJobArn?: string;
}

export interface DeleteComponentRequest {
  readonly arn: string;
}

export interface DeleteCoreDeviceRequest {
  readonly coreDeviceThingName: string;
}

export interface Deployment {
  readonly targetArn?: string;
  readonly revisionId?: string;
  readonly deploymentId?: string;
  readonly deploymentName?: string;
  readonly creationTimestamp?: Date;
  readonly deploymentStatus?: string;
  readonly isLatestForTarget?: boolean;
}

export interface DeploymentComponentUpdatePolicy {
  readonly timeoutInSeconds?: number;
  readonly action?: string;
}

export interface DeploymentConfigurationValidationPolicy {
  readonly timeoutInSeconds?: number;
}

export interface DeploymentIoTJobConfiguration {
  readonly jobExecutionsRolloutConfig?: IoTJobExecutionsRolloutConfig;
  readonly abortConfig?: IoTJobAbortConfig;
  readonly timeoutConfig?: IoTJobTimeoutConfig;
}

export interface DeploymentPolicies {
  readonly failureHandlingPolicy?: string;
  readonly componentUpdatePolicy?: DeploymentComponentUpdatePolicy;
  readonly configurationValidationPolicy?: DeploymentConfigurationValidationPolicy;
}

export interface DescribeComponentRequest {
  readonly arn: string;
}

export interface DescribeComponentResponse {
  readonly arn?: string;
  readonly componentName?: string;
  readonly componentVersion?: string;
  readonly creationTimestamp?: Date;
  readonly publisher?: string;
  readonly description?: string;
  readonly status?: CloudComponentStatus;
  readonly platforms?: [];
  readonly tags?: {[key: string]: any};
}

export interface DisassociateClientDeviceFromCoreDeviceEntry {
  readonly thingName: string;
}

export interface DisassociateClientDeviceFromCoreDeviceErrorEntry {
  readonly thingName?: string;
  readonly code?: string;
  readonly message?: string;
}

export interface EffectiveDeployment {
  readonly deploymentId: string;
  readonly deploymentName: string;
  readonly iotJobId?: string;
  readonly iotJobArn?: string;
  readonly description?: string;
  readonly targetArn: string;
  readonly coreDeviceExecutionStatus: string;
  readonly reason?: string;
  readonly creationTimestamp: Date;
  readonly modifiedTimestamp: Date;
}

export interface GetComponentRequest {
  readonly recipeOutputFormat?: string;
  readonly arn: string;
}

export interface GetComponentResponse {
  readonly recipeOutputFormat: string;
  readonly recipe: unknown;
  readonly tags?: {[key: string]: any};
}

export interface GetComponentVersionArtifactRequest {
  readonly arn: string;
  readonly artifactName: string;
}

export interface GetComponentVersionArtifactResponse {
  readonly preSignedUrl: string;
}

export interface GetCoreDeviceRequest {
  readonly coreDeviceThingName: string;
}

export interface GetCoreDeviceResponse {
  readonly coreDeviceThingName?: string;
  readonly coreVersion?: string;
  readonly platform?: string;
  readonly architecture?: string;
  readonly status?: string;
  readonly lastStatusUpdateTimestamp?: Date;
  readonly tags?: {[key: string]: any};
}

export interface GetDeploymentRequest {
  readonly deploymentId: string;
}

export interface GetDeploymentResponse {
  readonly targetArn?: string;
  readonly revisionId?: string;
  readonly deploymentId?: string;
  readonly deploymentName?: string;
  readonly deploymentStatus?: string;
  readonly iotJobId?: string;
  readonly iotJobArn?: string;
  readonly components?: {[key: string]: any};
  readonly deploymentPolicies?: DeploymentPolicies;
  readonly iotJobConfiguration?: DeploymentIoTJobConfiguration;
  readonly creationTimestamp?: Date;
  readonly isLatestForTarget?: boolean;
  readonly tags?: {[key: string]: any};
}

export interface InstalledComponent {
  readonly componentName?: string;
  readonly componentVersion?: string;
  readonly lifecycleState?: string;
  readonly lifecycleStateDetails?: string;
  readonly isRoot?: boolean;
}

export interface InternalServerException {
  readonly message: string;
  readonly retryAfterSeconds?: number;
}

export interface IoTJobAbortConfig {
  readonly criteriaList: [];
}

export interface IoTJobAbortCriteria {
  readonly failureType: string;
  readonly action: string;
  readonly thresholdPercentage: unknown;
  readonly minNumberOfExecutedThings: number;
}

export interface IoTJobExecutionsRolloutConfig {
  readonly exponentialRate?: IoTJobExponentialRolloutRate;
  readonly maximumPerMinute?: number;
}

export interface IoTJobExponentialRolloutRate {
  readonly baseRatePerMinute: number;
  readonly incrementFactor: unknown;
  readonly rateIncreaseCriteria: IoTJobRateIncreaseCriteria;
}

export interface IoTJobRateIncreaseCriteria {
  readonly numberOfNotifiedThings?: number;
  readonly numberOfSucceededThings?: number;
}

export interface IoTJobTimeoutConfig {
  readonly inProgressTimeoutInMinutes?: number;
}

export interface LambdaContainerParams {
  readonly memorySizeInKB?: number;
  readonly mountROSysfs?: boolean;
  readonly volumes?: [];
  readonly devices?: [];
}

export interface LambdaDeviceMount {
  readonly path: string;
  readonly permission?: string;
  readonly addGroupOwner?: boolean;
}

export interface LambdaEventSource {
  readonly topic: string;
  readonly type: string;
}

export interface LambdaExecutionParameters {
  readonly eventSources?: [];
  readonly maxQueueSize?: number;
  readonly maxInstancesCount?: number;
  readonly maxIdleTimeInSeconds?: number;
  readonly timeoutInSeconds?: number;
  readonly statusTimeoutInSeconds?: number;
  readonly pinned?: boolean;
  readonly inputPayloadEncodingType?: string;
  readonly execArgs?: [];
  readonly environmentVariables?: {[key: string]: any};
  readonly linuxProcessParams?: LambdaLinuxProcessParams;
}

export interface LambdaFunctionRecipeSource {
  readonly lambdaArn: string;
  readonly componentName?: string;
  readonly componentVersion?: string;
  readonly componentPlatforms?: [];
  readonly componentDependencies?: {[key: string]: any};
  readonly componentLambdaParameters?: LambdaExecutionParameters;
}

export interface LambdaLinuxProcessParams {
  readonly isolationMode?: string;
  readonly containerParams?: LambdaContainerParams;
}

export interface LambdaVolumeMount {
  readonly sourcePath: string;
  readonly destinationPath: string;
  readonly permission?: string;
  readonly addGroupOwner?: boolean;
}

export interface ListClientDevicesAssociatedWithCoreDeviceRequest {
  readonly coreDeviceThingName: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListClientDevicesAssociatedWithCoreDeviceResponse {
  readonly associatedClientDevices?: [];
  readonly nextToken?: string;
}

export interface ListComponentVersionsRequest {
  readonly arn: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListComponentVersionsResponse {
  readonly componentVersions?: [];
  readonly nextToken?: string;
}

export interface ListComponentsRequest {
  readonly scope?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListComponentsResponse {
  readonly components?: [];
  readonly nextToken?: string;
}

export interface ListCoreDevicesRequest {
  readonly thingGroupArn?: string;
  readonly status?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListCoreDevicesResponse {
  readonly coreDevices?: [];
  readonly nextToken?: string;
}

export interface ListDeploymentsRequest {
  readonly targetArn?: string;
  readonly historyFilter?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListDeploymentsResponse {
  readonly deployments?: [];
  readonly nextToken?: string;
}

export interface ListEffectiveDeploymentsRequest {
  readonly coreDeviceThingName: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListEffectiveDeploymentsResponse {
  readonly effectiveDeployments?: [];
  readonly nextToken?: string;
}

export interface ListInstalledComponentsRequest {
  readonly coreDeviceThingName: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListInstalledComponentsResponse {
  readonly installedComponents?: [];
  readonly nextToken?: string;
}

export interface ListTagsForResourceRequest {
  readonly resourceArn: string;
}

export interface ListTagsForResourceResponse {
  readonly tags?: {[key: string]: any};
}

export interface RequestAlreadyInProgressException {
  readonly message: string;
}

export interface ResolveComponentCandidatesRequest {
  readonly platform: ComponentPlatform;
  readonly componentCandidates: [];
}

export interface ResolveComponentCandidatesResponse {
  readonly resolvedComponentVersions?: [];
}

export interface ResolvedComponentVersion {
  readonly arn?: string;
  readonly componentName?: string;
  readonly componentVersion?: string;
  readonly recipe?: unknown;
}

export interface ResourceNotFoundException {
  readonly message: string;
  readonly resourceId: string;
  readonly resourceType: string;
}

export interface ServiceQuotaExceededException {
  readonly message: string;
  readonly resourceId?: string;
  readonly resourceType?: string;
  readonly quotaCode: string;
  readonly serviceCode: string;
}

export interface SystemResourceLimits {
  readonly memory?: number;
  readonly cpus?: unknown;
}

export interface TagResourceRequest {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

export interface TagResourceResponse {
}

export interface ThrottlingException {
  readonly message: string;
  readonly quotaCode?: string;
  readonly serviceCode?: string;
  readonly retryAfterSeconds?: number;
}

export interface UntagResourceRequest {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface UntagResourceResponse {
}

export interface ValidationException {
  readonly message: string;
  readonly reason?: string;
  readonly fields?: [];
}

export interface ValidationExceptionField {
  readonly name: string;
  readonly message: string;
}


