/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AssociateRepository {
  readonly Repository: Repository;
  readonly ClientRequestToken?: string;
  readonly Tags?: {[key: string]: any};
  readonly KMSKeyDetails?: KMSKeyDetails;
}

export interface CreateCodeReview {
  readonly Name: string;
  readonly RepositoryAssociationArn: string;
  readonly Type: CodeReviewType;
  readonly ClientRequestToken?: string;
}

export interface DescribeCodeReview {
  readonly CodeReviewArn: string;
}

export interface DescribeRecommendationFeedback {
  readonly CodeReviewArn: string;
  readonly RecommendationId: string;
  readonly UserId?: string;
}

export interface DescribeRepositoryAssociation {
  readonly AssociationArn: string;
}

export interface DisassociateRepository {
  readonly AssociationArn: string;
}

export interface ListCodeReviews {
  readonly ProviderTypes?: [];
  readonly States?: [];
  readonly RepositoryNames?: [];
  readonly Type: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListRecommendationFeedback {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly CodeReviewArn: string;
  readonly UserIds?: [];
  readonly RecommendationIds?: [];
}

export interface ListRecommendations {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly CodeReviewArn: string;
}

export interface ListRepositoryAssociations {
  readonly ProviderTypes?: [];
  readonly States?: [];
  readonly Names?: [];
  readonly Owners?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListTagsForResource {
  readonly resourceArn: string;
}

export interface PutRecommendationFeedback {
  readonly CodeReviewArn: string;
  readonly RecommendationId: string;
  readonly Reactions: [];
}

export interface TagResource {
  readonly resourceArn: string;
  readonly Tags: {[key: string]: any};
}

export interface UntagResource {
  readonly resourceArn: string;
  readonly TagKeys: [];
}

export interface AccessDeniedException {
  readonly Message?: string;
}

export interface AssociateRepositoryRequest {
  readonly Repository: Repository;
  readonly ClientRequestToken?: string;
  readonly Tags?: {[key: string]: any};
  readonly KMSKeyDetails?: KMSKeyDetails;
}

export interface AssociateRepositoryResponse {
  readonly RepositoryAssociation?: RepositoryAssociation;
  readonly Tags?: {[key: string]: any};
}

export interface BranchDiffSourceCodeType {
  readonly SourceBranchName: string;
  readonly DestinationBranchName: string;
}

export interface CodeArtifacts {
  readonly SourceCodeArtifactsObjectKey: string;
  readonly BuildArtifactsObjectKey?: string;
}

export interface CodeCommitRepository {
  readonly Name: string;
}

export interface CodeReview {
  readonly Name?: string;
  readonly CodeReviewArn?: string;
  readonly RepositoryName?: string;
  readonly Owner?: string;
  readonly ProviderType?: string;
  readonly State?: string;
  readonly StateReason?: string;
  readonly CreatedTimeStamp?: Date;
  readonly LastUpdatedTimeStamp?: Date;
  readonly Type?: string;
  readonly PullRequestId?: string;
  readonly SourceCodeType?: SourceCodeType;
  readonly AssociationArn?: string;
  readonly Metrics?: Metrics;
  readonly AnalysisTypes?: [];
}

export interface CodeReviewSummary {
  readonly Name?: string;
  readonly CodeReviewArn?: string;
  readonly RepositoryName?: string;
  readonly Owner?: string;
  readonly ProviderType?: string;
  readonly State?: string;
  readonly CreatedTimeStamp?: Date;
  readonly LastUpdatedTimeStamp?: Date;
  readonly Type?: string;
  readonly PullRequestId?: string;
  readonly MetricsSummary?: MetricsSummary;
  readonly SourceCodeType?: SourceCodeType;
}

export interface CodeReviewType {
  readonly RepositoryAnalysis: RepositoryAnalysis;
  readonly AnalysisTypes?: [];
}

export interface CommitDiffSourceCodeType {
  readonly SourceCommit?: string;
  readonly DestinationCommit?: string;
  readonly MergeBaseCommit?: string;
}

export interface ConflictException {
  readonly Message?: string;
}

export interface CreateCodeReviewRequest {
  readonly Name: string;
  readonly RepositoryAssociationArn: string;
  readonly Type: CodeReviewType;
  readonly ClientRequestToken?: string;
}

export interface CreateCodeReviewResponse {
  readonly CodeReview?: CodeReview;
}

export interface DescribeCodeReviewRequest {
  readonly CodeReviewArn: string;
}

export interface DescribeCodeReviewResponse {
  readonly CodeReview?: CodeReview;
}

export interface DescribeRecommendationFeedbackRequest {
  readonly CodeReviewArn: string;
  readonly RecommendationId: string;
  readonly UserId?: string;
}

export interface DescribeRecommendationFeedbackResponse {
  readonly RecommendationFeedback?: RecommendationFeedback;
}

export interface DescribeRepositoryAssociationRequest {
  readonly AssociationArn: string;
}

export interface DescribeRepositoryAssociationResponse {
  readonly RepositoryAssociation?: RepositoryAssociation;
  readonly Tags?: {[key: string]: any};
}

export interface DisassociateRepositoryRequest {
  readonly AssociationArn: string;
}

export interface DisassociateRepositoryResponse {
  readonly RepositoryAssociation?: RepositoryAssociation;
  readonly Tags?: {[key: string]: any};
}

export interface EventInfo {
  readonly Name?: string;
  readonly State?: string;
}

export interface InternalServerException {
  readonly Message?: string;
}

export interface KMSKeyDetails {
  readonly KMSKeyId?: string;
  readonly EncryptionOption?: string;
}

export interface ListCodeReviewsRequest {
  readonly ProviderTypes?: [];
  readonly States?: [];
  readonly RepositoryNames?: [];
  readonly Type: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListCodeReviewsResponse {
  readonly CodeReviewSummaries?: [];
  readonly NextToken?: string;
}

export interface ListRecommendationFeedbackRequest {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly CodeReviewArn: string;
  readonly UserIds?: [];
  readonly RecommendationIds?: [];
}

export interface ListRecommendationFeedbackResponse {
  readonly RecommendationFeedbackSummaries?: [];
  readonly NextToken?: string;
}

export interface ListRecommendationsRequest {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly CodeReviewArn: string;
}

export interface ListRecommendationsResponse {
  readonly RecommendationSummaries?: [];
  readonly NextToken?: string;
}

export interface ListRepositoryAssociationsRequest {
  readonly ProviderTypes?: [];
  readonly States?: [];
  readonly Names?: [];
  readonly Owners?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListRepositoryAssociationsResponse {
  readonly RepositoryAssociationSummaries?: [];
  readonly NextToken?: string;
}

export interface ListTagsForResourceRequest {
  readonly resourceArn: string;
}

export interface ListTagsForResourceResponse {
  readonly Tags?: {[key: string]: any};
}

export interface Metrics {
  readonly MeteredLinesOfCodeCount?: number;
  readonly FindingsCount?: number;
}

export interface MetricsSummary {
  readonly MeteredLinesOfCodeCount?: number;
  readonly FindingsCount?: number;
}

export interface NotFoundException {
  readonly Message?: string;
}

export interface PutRecommendationFeedbackRequest {
  readonly CodeReviewArn: string;
  readonly RecommendationId: string;
  readonly Reactions: [];
}

export interface PutRecommendationFeedbackResponse {
}

export interface RecommendationFeedback {
  readonly CodeReviewArn?: string;
  readonly RecommendationId?: string;
  readonly Reactions?: [];
  readonly UserId?: string;
  readonly CreatedTimeStamp?: Date;
  readonly LastUpdatedTimeStamp?: Date;
}

export interface RecommendationFeedbackSummary {
  readonly RecommendationId?: string;
  readonly Reactions?: [];
  readonly UserId?: string;
}

export interface RecommendationSummary {
  readonly FilePath?: string;
  readonly RecommendationId?: string;
  readonly StartLine?: number;
  readonly EndLine?: number;
  readonly Description?: string;
  readonly RecommendationCategory?: string;
  readonly RuleMetadata?: RuleMetadata;
  readonly Severity?: string;
}

export interface Repository {
  readonly CodeCommit?: CodeCommitRepository;
  readonly Bitbucket?: ThirdPartySourceRepository;
  readonly GitHubEnterpriseServer?: ThirdPartySourceRepository;
  readonly S3Bucket?: S3Repository;
}

export interface RepositoryAnalysis {
  readonly RepositoryHead?: RepositoryHeadSourceCodeType;
  readonly SourceCodeType?: SourceCodeType;
}

export interface RepositoryAssociation {
  readonly AssociationId?: string;
  readonly AssociationArn?: string;
  readonly ConnectionArn?: string;
  readonly Name?: string;
  readonly Owner?: string;
  readonly ProviderType?: string;
  readonly State?: string;
  readonly StateReason?: string;
  readonly LastUpdatedTimeStamp?: Date;
  readonly CreatedTimeStamp?: Date;
  readonly KMSKeyDetails?: KMSKeyDetails;
  readonly S3RepositoryDetails?: S3RepositoryDetails;
}

export interface RepositoryAssociationSummary {
  readonly AssociationArn?: string;
  readonly ConnectionArn?: string;
  readonly LastUpdatedTimeStamp?: Date;
  readonly AssociationId?: string;
  readonly Name?: string;
  readonly Owner?: string;
  readonly ProviderType?: string;
  readonly State?: string;
}

export interface RepositoryHeadSourceCodeType {
  readonly BranchName: string;
}

export interface RequestMetadata {
  readonly RequestId?: string;
  readonly Requester?: string;
  readonly EventInfo?: EventInfo;
  readonly VendorName?: string;
}

export interface ResourceNotFoundException {
  readonly Message?: string;
}

export interface RuleMetadata {
  readonly RuleId?: string;
  readonly RuleName?: string;
  readonly ShortDescription?: string;
  readonly LongDescription?: string;
  readonly RuleTags?: [];
}

export interface S3BucketRepository {
  readonly Name: string;
  readonly Details?: S3RepositoryDetails;
}

export interface S3Repository {
  readonly Name: string;
  readonly BucketName: string;
}

export interface S3RepositoryDetails {
  readonly BucketName?: string;
  readonly CodeArtifacts?: CodeArtifacts;
}

export interface SourceCodeType {
  readonly CommitDiff?: CommitDiffSourceCodeType;
  readonly RepositoryHead?: RepositoryHeadSourceCodeType;
  readonly BranchDiff?: BranchDiffSourceCodeType;
  readonly S3BucketRepository?: S3BucketRepository;
  readonly RequestMetadata?: RequestMetadata;
}

export interface TagResourceRequest {
  readonly resourceArn: string;
  readonly Tags: {[key: string]: any};
}

export interface TagResourceResponse {
}

export interface ThirdPartySourceRepository {
  readonly Name: string;
  readonly ConnectionArn: string;
  readonly Owner: string;
}

export interface ThrottlingException {
  readonly Message?: string;
}

export interface UntagResourceRequest {
  readonly resourceArn: string;
  readonly TagKeys: [];
}

export interface UntagResourceResponse {
}

export interface ValidationException {
  readonly Message?: string;
}


