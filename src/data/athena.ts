/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface BatchGetNamedQuery {
  readonly NamedQueryIds: [];
}

export interface BatchGetQueryExecution {
  readonly QueryExecutionIds: [];
}

export interface CreateDataCatalog {
  readonly Name: string;
  readonly Type: string;
  readonly Description?: string;
  readonly Parameters?: {[key: string]: any};
  readonly Tags?: [];
}

export interface CreateNamedQuery {
  readonly Name: string;
  readonly Description?: string;
  readonly Database: string;
  readonly QueryString: string;
  readonly ClientRequestToken?: string;
  readonly WorkGroup?: string;
}

export interface CreatePreparedStatement {
  readonly StatementName: string;
  readonly WorkGroup: string;
  readonly QueryStatement: string;
  readonly Description?: string;
}

export interface CreateWorkGroup {
  readonly Name: string;
  readonly Configuration?: WorkGroupConfiguration;
  readonly Description?: string;
  readonly Tags?: [];
}

export interface DeleteDataCatalog {
  readonly Name: string;
}

export interface DeleteNamedQuery {
  readonly NamedQueryId: string;
}

export interface DeletePreparedStatement {
  readonly StatementName: string;
  readonly WorkGroup: string;
}

export interface DeleteWorkGroup {
  readonly WorkGroup: string;
  readonly RecursiveDeleteOption?: boolean;
}

export interface GetDataCatalog {
  readonly Name: string;
}

export interface GetDatabase {
  readonly CatalogName: string;
  readonly DatabaseName: string;
}

export interface GetNamedQuery {
  readonly NamedQueryId: string;
}

export interface GetPreparedStatement {
  readonly StatementName: string;
  readonly WorkGroup: string;
}

export interface GetQueryExecution {
  readonly QueryExecutionId: string;
}

export interface GetQueryResults {
  readonly QueryExecutionId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface GetTableMetadata {
  readonly CatalogName: string;
  readonly DatabaseName: string;
  readonly TableName: string;
}

export interface GetWorkGroup {
  readonly WorkGroup: string;
}

export interface ListDataCatalogs {
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListDatabases {
  readonly CatalogName: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListEngineVersions {
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListNamedQueries {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly WorkGroup?: string;
}

export interface ListPreparedStatements {
  readonly WorkGroup: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListQueryExecutions {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly WorkGroup?: string;
}

export interface ListTableMetadata {
  readonly CatalogName: string;
  readonly DatabaseName: string;
  readonly Expression?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListTagsForResource {
  readonly ResourceARN: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListWorkGroups {
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface StartQueryExecution {
  readonly QueryString: string;
  readonly ClientRequestToken?: string;
  readonly QueryExecutionContext?: QueryExecutionContext;
  readonly ResultConfiguration?: ResultConfiguration;
  readonly WorkGroup?: string;
}

export interface StopQueryExecution {
  readonly QueryExecutionId: string;
}

export interface TagResource {
  readonly ResourceARN: string;
  readonly Tags: [];
}

export interface UntagResource {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}

export interface UpdateDataCatalog {
  readonly Name: string;
  readonly Type: string;
  readonly Description?: string;
  readonly Parameters?: {[key: string]: any};
}

export interface UpdatePreparedStatement {
  readonly StatementName: string;
  readonly WorkGroup: string;
  readonly QueryStatement: string;
  readonly Description?: string;
}

export interface UpdateWorkGroup {
  readonly WorkGroup: string;
  readonly Description?: string;
  readonly ConfigurationUpdates?: WorkGroupConfigurationUpdates;
  readonly State?: string;
}

export interface BatchGetNamedQueryInput {
  readonly NamedQueryIds: [];
}

export interface BatchGetNamedQueryOutput {
  readonly NamedQueries?: [];
  readonly UnprocessedNamedQueryIds?: [];
}

export interface BatchGetQueryExecutionInput {
  readonly QueryExecutionIds: [];
}

export interface BatchGetQueryExecutionOutput {
  readonly QueryExecutions?: [];
  readonly UnprocessedQueryExecutionIds?: [];
}

export interface Column {
  readonly Name: string;
  readonly Type?: string;
  readonly Comment?: string;
}

export interface ColumnInfo {
  readonly CatalogName?: string;
  readonly SchemaName?: string;
  readonly TableName?: string;
  readonly Name: string;
  readonly Label?: string;
  readonly Type: string;
  readonly Precision?: number;
  readonly Scale?: number;
  readonly Nullable?: string;
  readonly CaseSensitive?: boolean;
}

export interface CreateDataCatalogInput {
  readonly Name: string;
  readonly Type: string;
  readonly Description?: string;
  readonly Parameters?: {[key: string]: any};
  readonly Tags?: [];
}

export interface CreateDataCatalogOutput {
}

export interface CreateNamedQueryInput {
  readonly Name: string;
  readonly Description?: string;
  readonly Database: string;
  readonly QueryString: string;
  readonly ClientRequestToken?: string;
  readonly WorkGroup?: string;
}

export interface CreateNamedQueryOutput {
  readonly NamedQueryId?: string;
}

export interface CreatePreparedStatementInput {
  readonly StatementName: string;
  readonly WorkGroup: string;
  readonly QueryStatement: string;
  readonly Description?: string;
}

export interface CreatePreparedStatementOutput {
}

export interface CreateWorkGroupInput {
  readonly Name: string;
  readonly Configuration?: WorkGroupConfiguration;
  readonly Description?: string;
  readonly Tags?: [];
}

export interface CreateWorkGroupOutput {
}

export interface DataCatalog {
  readonly Name: string;
  readonly Description?: string;
  readonly Type: string;
  readonly Parameters?: {[key: string]: any};
}

export interface DataCatalogSummary {
  readonly CatalogName?: string;
  readonly Type?: string;
}

export interface Database {
  readonly Name: string;
  readonly Description?: string;
  readonly Parameters?: {[key: string]: any};
}

export interface Datum {
  readonly VarCharValue?: string;
}

export interface DeleteDataCatalogInput {
  readonly Name: string;
}

export interface DeleteDataCatalogOutput {
}

export interface DeleteNamedQueryInput {
  readonly NamedQueryId: string;
}

export interface DeleteNamedQueryOutput {
}

export interface DeletePreparedStatementInput {
  readonly StatementName: string;
  readonly WorkGroup: string;
}

export interface DeletePreparedStatementOutput {
}

export interface DeleteWorkGroupInput {
  readonly WorkGroup: string;
  readonly RecursiveDeleteOption?: boolean;
}

export interface DeleteWorkGroupOutput {
}

export interface EncryptionConfiguration {
  readonly EncryptionOption: string;
  readonly KmsKey?: string;
}

export interface EngineVersion {
  readonly SelectedEngineVersion?: string;
  readonly EffectiveEngineVersion?: string;
}

export interface GetDataCatalogInput {
  readonly Name: string;
}

export interface GetDataCatalogOutput {
  readonly DataCatalog?: DataCatalog;
}

export interface GetDatabaseInput {
  readonly CatalogName: string;
  readonly DatabaseName: string;
}

export interface GetDatabaseOutput {
  readonly Database?: Database;
}

export interface GetNamedQueryInput {
  readonly NamedQueryId: string;
}

export interface GetNamedQueryOutput {
  readonly NamedQuery?: NamedQuery;
}

export interface GetPreparedStatementInput {
  readonly StatementName: string;
  readonly WorkGroup: string;
}

export interface GetPreparedStatementOutput {
  readonly PreparedStatement?: PreparedStatement;
}

export interface GetQueryExecutionInput {
  readonly QueryExecutionId: string;
}

export interface GetQueryExecutionOutput {
  readonly QueryExecution?: QueryExecution;
}

export interface GetQueryResultsInput {
  readonly QueryExecutionId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface GetQueryResultsOutput {
  readonly UpdateCount?: number;
  readonly ResultSet?: ResultSet;
  readonly NextToken?: string;
}

export interface GetTableMetadataInput {
  readonly CatalogName: string;
  readonly DatabaseName: string;
  readonly TableName: string;
}

export interface GetTableMetadataOutput {
  readonly TableMetadata?: TableMetadata;
}

export interface GetWorkGroupInput {
  readonly WorkGroup: string;
}

export interface GetWorkGroupOutput {
  readonly WorkGroup?: WorkGroup;
}

export interface InternalServerException {
  readonly Message?: string;
}

export interface InvalidRequestException {
  readonly AthenaErrorCode?: string;
  readonly Message?: string;
}

export interface ListDataCatalogsInput {
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListDataCatalogsOutput {
  readonly DataCatalogsSummary?: [];
  readonly NextToken?: string;
}

export interface ListDatabasesInput {
  readonly CatalogName: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListDatabasesOutput {
  readonly DatabaseList?: [];
  readonly NextToken?: string;
}

export interface ListEngineVersionsInput {
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListEngineVersionsOutput {
  readonly EngineVersions?: [];
  readonly NextToken?: string;
}

export interface ListNamedQueriesInput {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly WorkGroup?: string;
}

export interface ListNamedQueriesOutput {
  readonly NamedQueryIds?: [];
  readonly NextToken?: string;
}

export interface ListPreparedStatementsInput {
  readonly WorkGroup: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListPreparedStatementsOutput {
  readonly PreparedStatements?: [];
  readonly NextToken?: string;
}

export interface ListQueryExecutionsInput {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly WorkGroup?: string;
}

export interface ListQueryExecutionsOutput {
  readonly QueryExecutionIds?: [];
  readonly NextToken?: string;
}

export interface ListTableMetadataInput {
  readonly CatalogName: string;
  readonly DatabaseName: string;
  readonly Expression?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListTableMetadataOutput {
  readonly TableMetadataList?: [];
  readonly NextToken?: string;
}

export interface ListTagsForResourceInput {
  readonly ResourceARN: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListTagsForResourceOutput {
  readonly Tags?: [];
  readonly NextToken?: string;
}

export interface ListWorkGroupsInput {
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListWorkGroupsOutput {
  readonly WorkGroups?: [];
  readonly NextToken?: string;
}

export interface MetadataException {
  readonly Message?: string;
}

export interface NamedQuery {
  readonly Name: string;
  readonly Description?: string;
  readonly Database: string;
  readonly QueryString: string;
  readonly NamedQueryId?: string;
  readonly WorkGroup?: string;
}

export interface PreparedStatement {
  readonly StatementName?: string;
  readonly QueryStatement?: string;
  readonly WorkGroupName?: string;
  readonly Description?: string;
  readonly LastModifiedTime?: Date;
}

export interface PreparedStatementSummary {
  readonly StatementName?: string;
  readonly LastModifiedTime?: Date;
}

export interface QueryExecution {
  readonly QueryExecutionId?: string;
  readonly Query?: string;
  readonly StatementType?: string;
  readonly ResultConfiguration?: ResultConfiguration;
  readonly QueryExecutionContext?: QueryExecutionContext;
  readonly Status?: QueryExecutionStatus;
  readonly Statistics?: QueryExecutionStatistics;
  readonly WorkGroup?: string;
  readonly EngineVersion?: EngineVersion;
}

export interface QueryExecutionContext {
  readonly Database?: string;
  readonly Catalog?: string;
}

export interface QueryExecutionStatistics {
  readonly EngineExecutionTimeInMillis?: number;
  readonly DataScannedInBytes?: number;
  readonly DataManifestLocation?: string;
  readonly TotalExecutionTimeInMillis?: number;
  readonly QueryQueueTimeInMillis?: number;
  readonly QueryPlanningTimeInMillis?: number;
  readonly ServiceProcessingTimeInMillis?: number;
}

export interface QueryExecutionStatus {
  readonly State?: string;
  readonly StateChangeReason?: string;
  readonly SubmissionDateTime?: Date;
  readonly CompletionDateTime?: Date;
}

export interface ResourceNotFoundException {
  readonly Message?: string;
  readonly ResourceName?: string;
}

export interface ResultConfiguration {
  readonly OutputLocation?: string;
  readonly EncryptionConfiguration?: EncryptionConfiguration;
}

export interface ResultConfigurationUpdates {
  readonly OutputLocation?: string;
  readonly RemoveOutputLocation?: boolean;
  readonly EncryptionConfiguration?: EncryptionConfiguration;
  readonly RemoveEncryptionConfiguration?: boolean;
}

export interface ResultSet {
  readonly Rows?: [];
  readonly ResultSetMetadata?: ResultSetMetadata;
}

export interface ResultSetMetadata {
  readonly ColumnInfo?: [];
}

export interface Row {
  readonly Data?: [];
}

export interface StartQueryExecutionInput {
  readonly QueryString: string;
  readonly ClientRequestToken?: string;
  readonly QueryExecutionContext?: QueryExecutionContext;
  readonly ResultConfiguration?: ResultConfiguration;
  readonly WorkGroup?: string;
}

export interface StartQueryExecutionOutput {
  readonly QueryExecutionId?: string;
}

export interface StopQueryExecutionInput {
  readonly QueryExecutionId: string;
}

export interface StopQueryExecutionOutput {
}

export interface TableMetadata {
  readonly Name: string;
  readonly CreateTime?: Date;
  readonly LastAccessTime?: Date;
  readonly TableType?: string;
  readonly Columns?: [];
  readonly PartitionKeys?: [];
  readonly Parameters?: {[key: string]: any};
}

export interface Tag {
  readonly Key?: string;
  readonly Value?: string;
}

export interface TagResourceInput {
  readonly ResourceARN: string;
  readonly Tags: [];
}

export interface TagResourceOutput {
}

export interface TooManyRequestsException {
  readonly Message?: string;
  readonly Reason?: string;
}

export interface UnprocessedNamedQueryId {
  readonly NamedQueryId?: string;
  readonly ErrorCode?: string;
  readonly ErrorMessage?: string;
}

export interface UnprocessedQueryExecutionId {
  readonly QueryExecutionId?: string;
  readonly ErrorCode?: string;
  readonly ErrorMessage?: string;
}

export interface UntagResourceInput {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}

export interface UntagResourceOutput {
}

export interface UpdateDataCatalogInput {
  readonly Name: string;
  readonly Type: string;
  readonly Description?: string;
  readonly Parameters?: {[key: string]: any};
}

export interface UpdateDataCatalogOutput {
}

export interface UpdatePreparedStatementInput {
  readonly StatementName: string;
  readonly WorkGroup: string;
  readonly QueryStatement: string;
  readonly Description?: string;
}

export interface UpdatePreparedStatementOutput {
}

export interface UpdateWorkGroupInput {
  readonly WorkGroup: string;
  readonly Description?: string;
  readonly ConfigurationUpdates?: WorkGroupConfigurationUpdates;
  readonly State?: string;
}

export interface UpdateWorkGroupOutput {
}

export interface WorkGroup {
  readonly Name: string;
  readonly State?: string;
  readonly Configuration?: WorkGroupConfiguration;
  readonly Description?: string;
  readonly CreationTime?: Date;
}

export interface WorkGroupConfiguration {
  readonly ResultConfiguration?: ResultConfiguration;
  readonly EnforceWorkGroupConfiguration?: boolean;
  readonly PublishCloudWatchMetricsEnabled?: boolean;
  readonly BytesScannedCutoffPerQuery?: number;
  readonly RequesterPaysEnabled?: boolean;
  readonly EngineVersion?: EngineVersion;
}

export interface WorkGroupConfigurationUpdates {
  readonly EnforceWorkGroupConfiguration?: boolean;
  readonly ResultConfigurationUpdates?: ResultConfigurationUpdates;
  readonly PublishCloudWatchMetricsEnabled?: boolean;
  readonly BytesScannedCutoffPerQuery?: number;
  readonly RemoveBytesScannedCutoffPerQuery?: boolean;
  readonly RequesterPaysEnabled?: boolean;
  readonly EngineVersion?: EngineVersion;
}

export interface WorkGroupSummary {
  readonly Name?: string;
  readonly State?: string;
  readonly Description?: string;
  readonly CreationTime?: Date;
  readonly EngineVersion?: EngineVersion;
}


