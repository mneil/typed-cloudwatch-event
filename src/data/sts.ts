/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AssumeRole {
  readonly RoleArn: string;
  readonly RoleSessionName: string;
  readonly PolicyArns: [];
  readonly Policy: string;
  readonly DurationSeconds: number;
  readonly Tags: [];
  readonly TransitiveTagKeys: [];
  readonly ExternalId: string;
  readonly SerialNumber: string;
  readonly TokenCode: string;
  readonly SourceIdentity: string;
}
export interface AssumeRoleWithSAML {
  readonly RoleArn: string;
  readonly PrincipalArn: string;
  readonly SAMLAssertion: string;
  readonly PolicyArns: [];
  readonly Policy: string;
  readonly DurationSeconds: number;
}
export interface AssumeRoleWithWebIdentity {
  readonly RoleArn: string;
  readonly RoleSessionName: string;
  readonly WebIdentityToken: string;
  readonly ProviderId: string;
  readonly PolicyArns: [];
  readonly Policy: string;
  readonly DurationSeconds: number;
}
export interface DecodeAuthorizationMessage {
  readonly EncodedMessage: string;
}
export interface GetAccessKeyInfo {
  readonly AccessKeyId: string;
}
export interface GetCallerIdentity {
}
export interface GetFederationToken {
  readonly Name: string;
  readonly Policy: string;
  readonly PolicyArns: [];
  readonly DurationSeconds: number;
  readonly Tags: [];
}
export interface GetSessionToken {
  readonly DurationSeconds: number;
  readonly SerialNumber: string;
  readonly TokenCode: string;
}



interface AssumeRoleRequest {
  readonly RoleArn: string;
  readonly RoleSessionName: string;
  readonly PolicyArns: [];
  readonly Policy: string;
  readonly DurationSeconds: number;
  readonly Tags: [];
  readonly TransitiveTagKeys: [];
  readonly ExternalId: string;
  readonly SerialNumber: string;
  readonly TokenCode: string;
  readonly SourceIdentity: string;
}

interface AssumeRoleResponse {
  readonly Credentials: Credentials;
  readonly AssumedRoleUser: AssumedRoleUser;
  readonly PackedPolicySize: number;
  readonly SourceIdentity: string;
}

interface AssumeRoleWithSAMLRequest {
  readonly RoleArn: string;
  readonly PrincipalArn: string;
  readonly SAMLAssertion: string;
  readonly PolicyArns: [];
  readonly Policy: string;
  readonly DurationSeconds: number;
}

interface AssumeRoleWithSAMLResponse {
  readonly Credentials: Credentials;
  readonly AssumedRoleUser: AssumedRoleUser;
  readonly PackedPolicySize: number;
  readonly Subject: string;
  readonly SubjectType: string;
  readonly Issuer: string;
  readonly Audience: string;
  readonly NameQualifier: string;
  readonly SourceIdentity: string;
}

interface AssumeRoleWithWebIdentityRequest {
  readonly RoleArn: string;
  readonly RoleSessionName: string;
  readonly WebIdentityToken: string;
  readonly ProviderId: string;
  readonly PolicyArns: [];
  readonly Policy: string;
  readonly DurationSeconds: number;
}

interface AssumeRoleWithWebIdentityResponse {
  readonly Credentials: Credentials;
  readonly SubjectFromWebIdentityToken: string;
  readonly AssumedRoleUser: AssumedRoleUser;
  readonly PackedPolicySize: number;
  readonly Provider: string;
  readonly Audience: string;
  readonly SourceIdentity: string;
}

interface AssumedRoleUser {
  readonly AssumedRoleId: string;
  readonly Arn: string;
}

interface Credentials {
  readonly AccessKeyId: string;
  readonly SecretAccessKey: string;
  readonly SessionToken: string;
  readonly Expiration: Date;
}

interface DecodeAuthorizationMessageRequest {
  readonly EncodedMessage: string;
}

interface DecodeAuthorizationMessageResponse {
  readonly DecodedMessage: string;
}

interface ExpiredTokenException {
  readonly message: string;
}

interface FederatedUser {
  readonly FederatedUserId: string;
  readonly Arn: string;
}

interface GetAccessKeyInfoRequest {
  readonly AccessKeyId: string;
}

interface GetAccessKeyInfoResponse {
  readonly Account: string;
}

interface GetCallerIdentityRequest {
}

interface GetCallerIdentityResponse {
  readonly UserId: string;
  readonly Account: string;
  readonly Arn: string;
}

interface GetFederationTokenRequest {
  readonly Name: string;
  readonly Policy: string;
  readonly PolicyArns: [];
  readonly DurationSeconds: number;
  readonly Tags: [];
}

interface GetFederationTokenResponse {
  readonly Credentials: Credentials;
  readonly FederatedUser: FederatedUser;
  readonly PackedPolicySize: number;
}

interface GetSessionTokenRequest {
  readonly DurationSeconds: number;
  readonly SerialNumber: string;
  readonly TokenCode: string;
}

interface GetSessionTokenResponse {
  readonly Credentials: Credentials;
}

interface IDPCommunicationErrorException {
  readonly message: string;
}

interface IDPRejectedClaimException {
  readonly message: string;
}

interface InvalidAuthorizationMessageException {
  readonly message: string;
}

interface InvalidIdentityTokenException {
  readonly message: string;
}

interface MalformedPolicyDocumentException {
  readonly message: string;
}

interface PackedPolicyTooLargeException {
  readonly message: string;
}

interface PolicyDescriptorType {
  readonly arn: string;
}

interface RegionDisabledException {
  readonly message: string;
}

interface Tag {
  readonly Key: string;
  readonly Value: string;
}

