/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AssumeRole {
  readonly RoleArn: string;
  readonly RoleSessionName: string;
  readonly PolicyArns?: [];
  readonly Policy?: string;
  readonly DurationSeconds?: number;
  readonly Tags?: [];
  readonly TransitiveTagKeys?: [];
  readonly ExternalId?: string;
  readonly SerialNumber?: string;
  readonly TokenCode?: string;
  readonly SourceIdentity?: string;
}

export interface AssumeRoleWithSAML {
  readonly RoleArn: string;
  readonly PrincipalArn: string;
  readonly SAMLAssertion: string;
  readonly PolicyArns?: [];
  readonly Policy?: string;
  readonly DurationSeconds?: number;
}

export interface AssumeRoleWithWebIdentity {
  readonly RoleArn: string;
  readonly RoleSessionName: string;
  readonly WebIdentityToken: string;
  readonly ProviderId?: string;
  readonly PolicyArns?: [];
  readonly Policy?: string;
  readonly DurationSeconds?: number;
}

export interface DecodeAuthorizationMessage {
  readonly EncodedMessage: string;
}

export interface GetAccessKeyInfo {
  readonly AccessKeyId: string;
}

export interface GetCallerIdentity {
}

export interface GetFederationToken {
  readonly Name: string;
  readonly Policy?: string;
  readonly PolicyArns?: [];
  readonly DurationSeconds?: number;
  readonly Tags?: [];
}

export interface GetSessionToken {
  readonly DurationSeconds?: number;
  readonly SerialNumber?: string;
  readonly TokenCode?: string;
}

export interface AssumeRoleRequest {
  readonly RoleArn: string;
  readonly RoleSessionName: string;
  readonly PolicyArns?: [];
  readonly Policy?: string;
  readonly DurationSeconds?: number;
  readonly Tags?: [];
  readonly TransitiveTagKeys?: [];
  readonly ExternalId?: string;
  readonly SerialNumber?: string;
  readonly TokenCode?: string;
  readonly SourceIdentity?: string;
}

export interface AssumeRoleResponse {
  readonly Credentials?: Credentials;
  readonly AssumedRoleUser?: AssumedRoleUser;
  readonly PackedPolicySize?: number;
  readonly SourceIdentity?: string;
}

export interface AssumeRoleWithSAMLRequest {
  readonly RoleArn: string;
  readonly PrincipalArn: string;
  readonly SAMLAssertion: string;
  readonly PolicyArns?: [];
  readonly Policy?: string;
  readonly DurationSeconds?: number;
}

export interface AssumeRoleWithSAMLResponse {
  readonly Credentials?: Credentials;
  readonly AssumedRoleUser?: AssumedRoleUser;
  readonly PackedPolicySize?: number;
  readonly Subject?: string;
  readonly SubjectType?: string;
  readonly Issuer?: string;
  readonly Audience?: string;
  readonly NameQualifier?: string;
  readonly SourceIdentity?: string;
}

export interface AssumeRoleWithWebIdentityRequest {
  readonly RoleArn: string;
  readonly RoleSessionName: string;
  readonly WebIdentityToken: string;
  readonly ProviderId?: string;
  readonly PolicyArns?: [];
  readonly Policy?: string;
  readonly DurationSeconds?: number;
}

export interface AssumeRoleWithWebIdentityResponse {
  readonly Credentials?: Credentials;
  readonly SubjectFromWebIdentityToken?: string;
  readonly AssumedRoleUser?: AssumedRoleUser;
  readonly PackedPolicySize?: number;
  readonly Provider?: string;
  readonly Audience?: string;
  readonly SourceIdentity?: string;
}

export interface AssumedRoleUser {
  readonly AssumedRoleId: string;
  readonly Arn: string;
}

export interface Credentials {
  readonly AccessKeyId: string;
  readonly SecretAccessKey: string;
  readonly SessionToken: string;
  readonly Expiration: Date;
}

export interface DecodeAuthorizationMessageRequest {
  readonly EncodedMessage: string;
}

export interface DecodeAuthorizationMessageResponse {
  readonly DecodedMessage?: string;
}

export interface ExpiredTokenException {
  readonly message?: string;
}

export interface FederatedUser {
  readonly FederatedUserId: string;
  readonly Arn: string;
}

export interface GetAccessKeyInfoRequest {
  readonly AccessKeyId: string;
}

export interface GetAccessKeyInfoResponse {
  readonly Account?: string;
}

export interface GetCallerIdentityRequest {
}

export interface GetCallerIdentityResponse {
  readonly UserId?: string;
  readonly Account?: string;
  readonly Arn?: string;
}

export interface GetFederationTokenRequest {
  readonly Name: string;
  readonly Policy?: string;
  readonly PolicyArns?: [];
  readonly DurationSeconds?: number;
  readonly Tags?: [];
}

export interface GetFederationTokenResponse {
  readonly Credentials?: Credentials;
  readonly FederatedUser?: FederatedUser;
  readonly PackedPolicySize?: number;
}

export interface GetSessionTokenRequest {
  readonly DurationSeconds?: number;
  readonly SerialNumber?: string;
  readonly TokenCode?: string;
}

export interface GetSessionTokenResponse {
  readonly Credentials?: Credentials;
}

export interface IDPCommunicationErrorException {
  readonly message?: string;
}

export interface IDPRejectedClaimException {
  readonly message?: string;
}

export interface InvalidAuthorizationMessageException {
  readonly message?: string;
}

export interface InvalidIdentityTokenException {
  readonly message?: string;
}

export interface MalformedPolicyDocumentException {
  readonly message?: string;
}

export interface PackedPolicyTooLargeException {
  readonly message?: string;
}

export interface PolicyDescriptorType {
  readonly arn?: string;
}

export interface RegionDisabledException {
  readonly message?: string;
}

export interface Tag {
  readonly Key: string;
  readonly Value: string;
}


