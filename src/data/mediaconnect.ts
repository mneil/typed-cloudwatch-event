/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AddFlowMediaStreams {
  readonly FlowArn: string;
  readonly MediaStreams: [];
}

export interface AddFlowOutputs {
  readonly FlowArn: string;
  readonly Outputs: [];
}

export interface AddFlowSources {
  readonly FlowArn: string;
  readonly Sources: [];
}

export interface AddFlowVpcInterfaces {
  readonly FlowArn: string;
  readonly VpcInterfaces: [];
}

export interface CreateFlow {
  readonly AvailabilityZone?: string;
  readonly Entitlements?: [];
  readonly MediaStreams?: [];
  readonly Name: string;
  readonly Outputs?: [];
  readonly Source?: SetSourceRequest;
  readonly SourceFailoverConfig?: FailoverConfig;
  readonly Sources?: [];
  readonly VpcInterfaces?: [];
}

export interface DeleteFlow {
  readonly FlowArn: string;
}

export interface DescribeFlow {
  readonly FlowArn: string;
}

export interface DescribeOffering {
  readonly OfferingArn: string;
}

export interface DescribeReservation {
  readonly ReservationArn: string;
}

export interface GrantFlowEntitlements {
  readonly Entitlements: [];
  readonly FlowArn: string;
}

export interface ListEntitlements {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListFlows {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListOfferings {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListReservations {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListTagsForResource {
  readonly ResourceArn: string;
}

export interface PurchaseOffering {
  readonly OfferingArn: string;
  readonly ReservationName: string;
  readonly Start: string;
}

export interface RemoveFlowMediaStream {
  readonly FlowArn: string;
  readonly MediaStreamName: string;
}

export interface RemoveFlowOutput {
  readonly FlowArn: string;
  readonly OutputArn: string;
}

export interface RemoveFlowSource {
  readonly FlowArn: string;
  readonly SourceArn: string;
}

export interface RemoveFlowVpcInterface {
  readonly FlowArn: string;
  readonly VpcInterfaceName: string;
}

export interface RevokeFlowEntitlement {
  readonly EntitlementArn: string;
  readonly FlowArn: string;
}

export interface StartFlow {
  readonly FlowArn: string;
}

export interface StopFlow {
  readonly FlowArn: string;
}

export interface TagResource {
  readonly ResourceArn: string;
  readonly Tags: {[key: string]: any};
}

export interface UntagResource {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}

export interface UpdateFlow {
  readonly FlowArn: string;
  readonly SourceFailoverConfig?: UpdateFailoverConfig;
}

export interface UpdateFlowEntitlement {
  readonly Description?: string;
  readonly Encryption?: UpdateEncryption;
  readonly EntitlementArn: string;
  readonly EntitlementStatus?: string;
  readonly FlowArn: string;
  readonly Subscribers?: [];
}

export interface UpdateFlowMediaStream {
  readonly Attributes?: MediaStreamAttributesRequest;
  readonly ClockRate?: number;
  readonly Description?: string;
  readonly FlowArn: string;
  readonly MediaStreamName: string;
  readonly MediaStreamType?: string;
  readonly VideoFormat?: string;
}

export interface UpdateFlowOutput {
  readonly CidrAllowList?: [];
  readonly Description?: string;
  readonly Destination?: string;
  readonly Encryption?: UpdateEncryption;
  readonly FlowArn: string;
  readonly MaxLatency?: number;
  readonly MediaStreamOutputConfigurations?: [];
  readonly MinLatency?: number;
  readonly OutputArn: string;
  readonly Port?: number;
  readonly Protocol?: string;
  readonly RemoteId?: string;
  readonly SmoothingLatency?: number;
  readonly StreamId?: string;
  readonly VpcInterfaceAttachment?: VpcInterfaceAttachment;
}

export interface UpdateFlowSource {
  readonly Decryption?: UpdateEncryption;
  readonly Description?: string;
  readonly EntitlementArn?: string;
  readonly FlowArn: string;
  readonly IngestPort?: number;
  readonly MaxBitrate?: number;
  readonly MaxLatency?: number;
  readonly MaxSyncBuffer?: number;
  readonly MediaStreamSourceConfigurations?: [];
  readonly MinLatency?: number;
  readonly Protocol?: string;
  readonly SourceArn: string;
  readonly StreamId?: string;
  readonly VpcInterfaceName?: string;
  readonly WhitelistCidr?: string;
}

export interface AddFlowMediaStreamsRequest {
  readonly FlowArn: string;
  readonly MediaStreams: [];
}

export interface AddFlowMediaStreamsResponse {
  readonly FlowArn?: string;
  readonly MediaStreams?: [];
}

export interface AddFlowOutputs420Exception {
  readonly Message: string;
}

export interface AddFlowOutputsRequest {
  readonly FlowArn: string;
  readonly Outputs: [];
}

export interface AddFlowOutputsResponse {
  readonly FlowArn?: string;
  readonly Outputs?: [];
}

export interface AddFlowSourcesRequest {
  readonly FlowArn: string;
  readonly Sources: [];
}

export interface AddFlowSourcesResponse {
  readonly FlowArn?: string;
  readonly Sources?: [];
}

export interface AddFlowVpcInterfacesRequest {
  readonly FlowArn: string;
  readonly VpcInterfaces: [];
}

export interface AddFlowVpcInterfacesResponse {
  readonly FlowArn?: string;
  readonly VpcInterfaces?: [];
}

export interface AddMediaStreamRequest {
  readonly Attributes?: MediaStreamAttributesRequest;
  readonly ClockRate?: number;
  readonly Description?: string;
  readonly MediaStreamId: number;
  readonly MediaStreamName: string;
  readonly MediaStreamType: string;
  readonly VideoFormat?: string;
}

export interface AddOutputRequest {
  readonly CidrAllowList?: [];
  readonly Description?: string;
  readonly Destination?: string;
  readonly Encryption?: Encryption;
  readonly MaxLatency?: number;
  readonly MediaStreamOutputConfigurations?: [];
  readonly MinLatency?: number;
  readonly Name?: string;
  readonly Port?: number;
  readonly Protocol: string;
  readonly RemoteId?: string;
  readonly SmoothingLatency?: number;
  readonly StreamId?: string;
  readonly VpcInterfaceAttachment?: VpcInterfaceAttachment;
}

export interface BadRequestException {
  readonly Message: string;
}

export interface CreateFlow420Exception {
  readonly Message: string;
}

export interface CreateFlowRequest {
  readonly AvailabilityZone?: string;
  readonly Entitlements?: [];
  readonly MediaStreams?: [];
  readonly Name: string;
  readonly Outputs?: [];
  readonly Source?: SetSourceRequest;
  readonly SourceFailoverConfig?: FailoverConfig;
  readonly Sources?: [];
  readonly VpcInterfaces?: [];
}

export interface CreateFlowResponse {
  readonly Flow?: Flow;
}

export interface DeleteFlowRequest {
  readonly FlowArn: string;
}

export interface DeleteFlowResponse {
  readonly FlowArn?: string;
  readonly Status?: string;
}

export interface DescribeFlowRequest {
  readonly FlowArn: string;
}

export interface DescribeFlowResponse {
  readonly Flow?: Flow;
  readonly Messages?: Messages;
}

export interface DescribeOfferingRequest {
  readonly OfferingArn: string;
}

export interface DescribeOfferingResponse {
  readonly Offering?: Offering;
}

export interface DescribeReservationRequest {
  readonly ReservationArn: string;
}

export interface DescribeReservationResponse {
  readonly Reservation?: Reservation;
}

export interface DestinationConfiguration {
  readonly DestinationIp: string;
  readonly DestinationPort: number;
  readonly Interface: Interface;
  readonly OutboundIp: string;
}

export interface DestinationConfigurationRequest {
  readonly DestinationIp: string;
  readonly DestinationPort: number;
  readonly Interface: InterfaceRequest;
}

export interface EncodingParameters {
  readonly CompressionFactor: unknown;
  readonly EncoderProfile: string;
}

export interface EncodingParametersRequest {
  readonly CompressionFactor: unknown;
  readonly EncoderProfile: string;
}

export interface Encryption {
  readonly Algorithm?: string;
  readonly ConstantInitializationVector?: string;
  readonly DeviceId?: string;
  readonly KeyType?: string;
  readonly Region?: string;
  readonly ResourceId?: string;
  readonly RoleArn: string;
  readonly SecretArn?: string;
  readonly Url?: string;
}

export interface Entitlement {
  readonly DataTransferSubscriberFeePercent?: number;
  readonly Description?: string;
  readonly Encryption?: Encryption;
  readonly EntitlementArn: string;
  readonly EntitlementStatus?: string;
  readonly Name: string;
  readonly Subscribers: [];
}

export interface FailoverConfig {
  readonly FailoverMode?: string;
  readonly RecoveryWindow?: number;
  readonly SourcePriority?: SourcePriority;
  readonly State?: string;
}

export interface Flow {
  readonly AvailabilityZone: string;
  readonly Description?: string;
  readonly EgressIp?: string;
  readonly Entitlements: [];
  readonly FlowArn: string;
  readonly MediaStreams?: [];
  readonly Name: string;
  readonly Outputs: [];
  readonly Source: Source;
  readonly SourceFailoverConfig?: FailoverConfig;
  readonly Sources?: [];
  readonly Status: string;
  readonly VpcInterfaces?: [];
}

export interface Fmtp {
  readonly ChannelOrder?: string;
  readonly Colorimetry?: string;
  readonly ExactFramerate?: string;
  readonly Par?: string;
  readonly Range?: string;
  readonly ScanMode?: string;
  readonly Tcs?: string;
}

export interface FmtpRequest {
  readonly ChannelOrder?: string;
  readonly Colorimetry?: string;
  readonly ExactFramerate?: string;
  readonly Par?: string;
  readonly Range?: string;
  readonly ScanMode?: string;
  readonly Tcs?: string;
}

export interface ForbiddenException {
  readonly Message: string;
}

export interface GrantEntitlementRequest {
  readonly DataTransferSubscriberFeePercent?: number;
  readonly Description?: string;
  readonly Encryption?: Encryption;
  readonly EntitlementStatus?: string;
  readonly Name?: string;
  readonly Subscribers: [];
}

export interface GrantFlowEntitlements420Exception {
  readonly Message: string;
}

export interface GrantFlowEntitlementsRequest {
  readonly Entitlements: [];
  readonly FlowArn: string;
}

export interface GrantFlowEntitlementsResponse {
  readonly Entitlements?: [];
  readonly FlowArn?: string;
}

export interface InputConfiguration {
  readonly InputIp: string;
  readonly InputPort: number;
  readonly Interface: Interface;
}

export interface InputConfigurationRequest {
  readonly InputPort: number;
  readonly Interface: InterfaceRequest;
}

export interface Interface {
  readonly Name: string;
}

export interface InterfaceRequest {
  readonly Name: string;
}

export interface InternalServerErrorException {
  readonly Message: string;
}

export interface ListEntitlementsRequest {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListEntitlementsResponse {
  readonly Entitlements?: [];
  readonly NextToken?: string;
}

export interface ListFlowsRequest {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListFlowsResponse {
  readonly Flows?: [];
  readonly NextToken?: string;
}

export interface ListOfferingsRequest {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListOfferingsResponse {
  readonly NextToken?: string;
  readonly Offerings?: [];
}

export interface ListReservationsRequest {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListReservationsResponse {
  readonly NextToken?: string;
  readonly Reservations?: [];
}

export interface ListTagsForResourceRequest {
  readonly ResourceArn: string;
}

export interface ListTagsForResourceResponse {
  readonly Tags?: {[key: string]: any};
}

export interface ListedEntitlement {
  readonly DataTransferSubscriberFeePercent?: number;
  readonly EntitlementArn: string;
  readonly EntitlementName: string;
}

export interface ListedFlow {
  readonly AvailabilityZone: string;
  readonly Description: string;
  readonly FlowArn: string;
  readonly Name: string;
  readonly SourceType: string;
  readonly Status: string;
}

export interface MediaStream {
  readonly Attributes?: MediaStreamAttributes;
  readonly ClockRate?: number;
  readonly Description?: string;
  readonly Fmt: number;
  readonly MediaStreamId: number;
  readonly MediaStreamName: string;
  readonly MediaStreamType: string;
  readonly VideoFormat?: string;
}

export interface MediaStreamAttributes {
  readonly Fmtp: Fmtp;
  readonly Lang?: string;
}

export interface MediaStreamAttributesRequest {
  readonly Fmtp?: FmtpRequest;
  readonly Lang?: string;
}

export interface MediaStreamOutputConfiguration {
  readonly DestinationConfigurations?: [];
  readonly EncodingName: string;
  readonly EncodingParameters?: EncodingParameters;
  readonly MediaStreamName: string;
}

export interface MediaStreamOutputConfigurationRequest {
  readonly DestinationConfigurations?: [];
  readonly EncodingName: string;
  readonly EncodingParameters?: EncodingParametersRequest;
  readonly MediaStreamName: string;
}

export interface MediaStreamSourceConfiguration {
  readonly EncodingName: string;
  readonly InputConfigurations?: [];
  readonly MediaStreamName: string;
}

export interface MediaStreamSourceConfigurationRequest {
  readonly EncodingName: string;
  readonly InputConfigurations?: [];
  readonly MediaStreamName: string;
}

export interface Messages {
  readonly Errors: [];
}

export interface NotFoundException {
  readonly Message: string;
}

export interface Offering {
  readonly CurrencyCode: string;
  readonly Duration: number;
  readonly DurationUnits: string;
  readonly OfferingArn: string;
  readonly OfferingDescription: string;
  readonly PricePerUnit: string;
  readonly PriceUnits: string;
  readonly ResourceSpecification: ResourceSpecification;
}

export interface Output {
  readonly DataTransferSubscriberFeePercent?: number;
  readonly Description?: string;
  readonly Destination?: string;
  readonly Encryption?: Encryption;
  readonly EntitlementArn?: string;
  readonly ListenerAddress?: string;
  readonly MediaLiveInputArn?: string;
  readonly MediaStreamOutputConfigurations?: [];
  readonly Name: string;
  readonly OutputArn: string;
  readonly Port?: number;
  readonly Transport?: Transport;
  readonly VpcInterfaceAttachment?: VpcInterfaceAttachment;
}

export interface PurchaseOfferingRequest {
  readonly OfferingArn: string;
  readonly ReservationName: string;
  readonly Start: string;
}

export interface PurchaseOfferingResponse {
  readonly Reservation?: Reservation;
}

export interface RemoveFlowMediaStreamRequest {
  readonly FlowArn: string;
  readonly MediaStreamName: string;
}

export interface RemoveFlowMediaStreamResponse {
  readonly FlowArn?: string;
  readonly MediaStreamName?: string;
}

export interface RemoveFlowOutputRequest {
  readonly FlowArn: string;
  readonly OutputArn: string;
}

export interface RemoveFlowOutputResponse {
  readonly FlowArn?: string;
  readonly OutputArn?: string;
}

export interface RemoveFlowSourceRequest {
  readonly FlowArn: string;
  readonly SourceArn: string;
}

export interface RemoveFlowSourceResponse {
  readonly FlowArn?: string;
  readonly SourceArn?: string;
}

export interface RemoveFlowVpcInterfaceRequest {
  readonly FlowArn: string;
  readonly VpcInterfaceName: string;
}

export interface RemoveFlowVpcInterfaceResponse {
  readonly FlowArn?: string;
  readonly NonDeletedNetworkInterfaceIds?: [];
  readonly VpcInterfaceName?: string;
}

export interface Reservation {
  readonly CurrencyCode: string;
  readonly Duration: number;
  readonly DurationUnits: string;
  readonly End: string;
  readonly OfferingArn: string;
  readonly OfferingDescription: string;
  readonly PricePerUnit: string;
  readonly PriceUnits: string;
  readonly ReservationArn: string;
  readonly ReservationName: string;
  readonly ReservationState: string;
  readonly ResourceSpecification: ResourceSpecification;
  readonly Start: string;
}

export interface ResourceSpecification {
  readonly ReservedBitrate?: number;
  readonly ResourceType: string;
}

export interface ResponseError {
  readonly Message: string;
}

export interface RevokeFlowEntitlementRequest {
  readonly EntitlementArn: string;
  readonly FlowArn: string;
}

export interface RevokeFlowEntitlementResponse {
  readonly EntitlementArn?: string;
  readonly FlowArn?: string;
}

export interface ServiceUnavailableException {
  readonly Message: string;
}

export interface SetSourceRequest {
  readonly Decryption?: Encryption;
  readonly Description?: string;
  readonly EntitlementArn?: string;
  readonly IngestPort?: number;
  readonly MaxBitrate?: number;
  readonly MaxLatency?: number;
  readonly MaxSyncBuffer?: number;
  readonly MediaStreamSourceConfigurations?: [];
  readonly MinLatency?: number;
  readonly Name?: string;
  readonly Protocol?: string;
  readonly StreamId?: string;
  readonly VpcInterfaceName?: string;
  readonly WhitelistCidr?: string;
}

export interface Source {
  readonly DataTransferSubscriberFeePercent?: number;
  readonly Decryption?: Encryption;
  readonly Description?: string;
  readonly EntitlementArn?: string;
  readonly IngestIp?: string;
  readonly IngestPort?: number;
  readonly MediaStreamSourceConfigurations?: [];
  readonly Name: string;
  readonly SourceArn: string;
  readonly Transport?: Transport;
  readonly VpcInterfaceName?: string;
  readonly WhitelistCidr?: string;
}

export interface SourcePriority {
  readonly PrimarySource?: string;
}

export interface StartFlowRequest {
  readonly FlowArn: string;
}

export interface StartFlowResponse {
  readonly FlowArn?: string;
  readonly Status?: string;
}

export interface StopFlowRequest {
  readonly FlowArn: string;
}

export interface StopFlowResponse {
  readonly FlowArn?: string;
  readonly Status?: string;
}

export interface TagResourceRequest {
  readonly ResourceArn: string;
  readonly Tags: {[key: string]: any};
}

export interface TooManyRequestsException {
  readonly Message: string;
}

export interface Transport {
  readonly CidrAllowList?: [];
  readonly MaxBitrate?: number;
  readonly MaxLatency?: number;
  readonly MaxSyncBuffer?: number;
  readonly MinLatency?: number;
  readonly Protocol: string;
  readonly RemoteId?: string;
  readonly SmoothingLatency?: number;
  readonly StreamId?: string;
}

export interface UntagResourceRequest {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}

export interface UpdateEncryption {
  readonly Algorithm?: string;
  readonly ConstantInitializationVector?: string;
  readonly DeviceId?: string;
  readonly KeyType?: string;
  readonly Region?: string;
  readonly ResourceId?: string;
  readonly RoleArn?: string;
  readonly SecretArn?: string;
  readonly Url?: string;
}

export interface UpdateFailoverConfig {
  readonly FailoverMode?: string;
  readonly RecoveryWindow?: number;
  readonly SourcePriority?: SourcePriority;
  readonly State?: string;
}

export interface UpdateFlowEntitlementRequest {
  readonly Description?: string;
  readonly Encryption?: UpdateEncryption;
  readonly EntitlementArn: string;
  readonly EntitlementStatus?: string;
  readonly FlowArn: string;
  readonly Subscribers?: [];
}

export interface UpdateFlowEntitlementResponse {
  readonly Entitlement?: Entitlement;
  readonly FlowArn?: string;
}

export interface UpdateFlowMediaStreamRequest {
  readonly Attributes?: MediaStreamAttributesRequest;
  readonly ClockRate?: number;
  readonly Description?: string;
  readonly FlowArn: string;
  readonly MediaStreamName: string;
  readonly MediaStreamType?: string;
  readonly VideoFormat?: string;
}

export interface UpdateFlowMediaStreamResponse {
  readonly FlowArn?: string;
  readonly MediaStream?: MediaStream;
}

export interface UpdateFlowOutputRequest {
  readonly CidrAllowList?: [];
  readonly Description?: string;
  readonly Destination?: string;
  readonly Encryption?: UpdateEncryption;
  readonly FlowArn: string;
  readonly MaxLatency?: number;
  readonly MediaStreamOutputConfigurations?: [];
  readonly MinLatency?: number;
  readonly OutputArn: string;
  readonly Port?: number;
  readonly Protocol?: string;
  readonly RemoteId?: string;
  readonly SmoothingLatency?: number;
  readonly StreamId?: string;
  readonly VpcInterfaceAttachment?: VpcInterfaceAttachment;
}

export interface UpdateFlowOutputResponse {
  readonly FlowArn?: string;
  readonly Output?: Output;
}

export interface UpdateFlowRequest {
  readonly FlowArn: string;
  readonly SourceFailoverConfig?: UpdateFailoverConfig;
}

export interface UpdateFlowResponse {
  readonly Flow?: Flow;
}

export interface UpdateFlowSourceRequest {
  readonly Decryption?: UpdateEncryption;
  readonly Description?: string;
  readonly EntitlementArn?: string;
  readonly FlowArn: string;
  readonly IngestPort?: number;
  readonly MaxBitrate?: number;
  readonly MaxLatency?: number;
  readonly MaxSyncBuffer?: number;
  readonly MediaStreamSourceConfigurations?: [];
  readonly MinLatency?: number;
  readonly Protocol?: string;
  readonly SourceArn: string;
  readonly StreamId?: string;
  readonly VpcInterfaceName?: string;
  readonly WhitelistCidr?: string;
}

export interface UpdateFlowSourceResponse {
  readonly FlowArn?: string;
  readonly Source?: Source;
}

export interface VpcInterface {
  readonly Name: string;
  readonly NetworkInterfaceIds: [];
  readonly NetworkInterfaceType: string;
  readonly RoleArn: string;
  readonly SecurityGroupIds: [];
  readonly SubnetId: string;
}

export interface VpcInterfaceAttachment {
  readonly VpcInterfaceName?: string;
}

export interface VpcInterfaceRequest {
  readonly Name: string;
  readonly NetworkInterfaceType?: string;
  readonly RoleArn: string;
  readonly SecurityGroupIds: [];
  readonly SubnetId: string;
}


