/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface DeleteSession {
  readonly botName: string;
  readonly botAlias: string;
  readonly userId: string;
}

export interface GetSession {
  readonly botName: string;
  readonly botAlias: string;
  readonly userId: string;
  readonly checkpointLabelFilter?: string;
}

export interface PostContent {
  readonly botName: string;
  readonly botAlias: string;
  readonly userId: string;
  readonly sessionAttributes?: string;
  readonly requestAttributes?: string;
  readonly contentType: string;
  readonly accept?: string;
  readonly inputStream: unknown;
  readonly activeContexts?: string;
}

export interface PostText {
  readonly botName: string;
  readonly botAlias: string;
  readonly userId: string;
  readonly sessionAttributes?: {[key: string]: any};
  readonly requestAttributes?: {[key: string]: any};
  readonly inputText: string;
  readonly activeContexts?: [];
}

export interface PutSession {
  readonly botName: string;
  readonly botAlias: string;
  readonly userId: string;
  readonly sessionAttributes?: {[key: string]: any};
  readonly dialogAction?: DialogAction;
  readonly recentIntentSummaryView?: [];
  readonly accept?: string;
  readonly activeContexts?: [];
}

export interface ActiveContext {
  readonly name: string;
  readonly timeToLive: ActiveContextTimeToLive;
  readonly parameters: {[key: string]: any};
}

export interface ActiveContextTimeToLive {
  readonly timeToLiveInSeconds?: number;
  readonly turnsToLive?: number;
}

export interface BadGatewayException {
  readonly Message?: string;
}

export interface BadRequestException {
  readonly message?: string;
}

export interface Button {
  readonly text: string;
  readonly value: string;
}

export interface ConflictException {
  readonly message?: string;
}

export interface DeleteSessionRequest {
  readonly botName: string;
  readonly botAlias: string;
  readonly userId: string;
}

export interface DeleteSessionResponse {
  readonly botName?: string;
  readonly botAlias?: string;
  readonly userId?: string;
  readonly sessionId?: string;
}

export interface DependencyFailedException {
  readonly Message?: string;
}

export interface DialogAction {
  readonly type: string;
  readonly intentName?: string;
  readonly slots?: {[key: string]: any};
  readonly slotToElicit?: string;
  readonly fulfillmentState?: string;
  readonly message?: string;
  readonly messageFormat?: string;
}

export interface GenericAttachment {
  readonly title?: string;
  readonly subTitle?: string;
  readonly attachmentLinkUrl?: string;
  readonly imageUrl?: string;
  readonly buttons?: [];
}

export interface GetSessionRequest {
  readonly botName: string;
  readonly botAlias: string;
  readonly userId: string;
  readonly checkpointLabelFilter?: string;
}

export interface GetSessionResponse {
  readonly recentIntentSummaryView?: [];
  readonly sessionAttributes?: {[key: string]: any};
  readonly sessionId?: string;
  readonly dialogAction?: DialogAction;
  readonly activeContexts?: [];
}

export interface IntentConfidence {
  readonly score?: unknown;
}

export interface IntentSummary {
  readonly intentName?: string;
  readonly checkpointLabel?: string;
  readonly slots?: {[key: string]: any};
  readonly confirmationStatus?: string;
  readonly dialogActionType: string;
  readonly fulfillmentState?: string;
  readonly slotToElicit?: string;
}

export interface InternalFailureException {
  readonly message?: string;
}

export interface LimitExceededException {
  readonly retryAfterSeconds?: string;
  readonly message?: string;
}

export interface LoopDetectedException {
  readonly Message?: string;
}

export interface NotAcceptableException {
  readonly message?: string;
}

export interface NotFoundException {
  readonly message?: string;
}

export interface PostContentRequest {
  readonly botName: string;
  readonly botAlias: string;
  readonly userId: string;
  readonly sessionAttributes?: string;
  readonly requestAttributes?: string;
  readonly contentType: string;
  readonly accept?: string;
  readonly inputStream: unknown;
  readonly activeContexts?: string;
}

export interface PostContentResponse {
  readonly contentType?: string;
  readonly intentName?: string;
  readonly nluIntentConfidence?: string;
  readonly alternativeIntents?: string;
  readonly slots?: string;
  readonly sessionAttributes?: string;
  readonly sentimentResponse?: string;
  readonly message?: string;
  readonly encodedMessage?: string;
  readonly messageFormat?: string;
  readonly dialogState?: string;
  readonly slotToElicit?: string;
  readonly inputTranscript?: string;
  readonly encodedInputTranscript?: string;
  readonly audioStream?: unknown;
  readonly botVersion?: string;
  readonly sessionId?: string;
  readonly activeContexts?: string;
}

export interface PostTextRequest {
  readonly botName: string;
  readonly botAlias: string;
  readonly userId: string;
  readonly sessionAttributes?: {[key: string]: any};
  readonly requestAttributes?: {[key: string]: any};
  readonly inputText: string;
  readonly activeContexts?: [];
}

export interface PostTextResponse {
  readonly intentName?: string;
  readonly nluIntentConfidence?: IntentConfidence;
  readonly alternativeIntents?: [];
  readonly slots?: {[key: string]: any};
  readonly sessionAttributes?: {[key: string]: any};
  readonly message?: string;
  readonly sentimentResponse?: SentimentResponse;
  readonly messageFormat?: string;
  readonly dialogState?: string;
  readonly slotToElicit?: string;
  readonly responseCard?: ResponseCard;
  readonly sessionId?: string;
  readonly botVersion?: string;
  readonly activeContexts?: [];
}

export interface PredictedIntent {
  readonly intentName?: string;
  readonly nluIntentConfidence?: IntentConfidence;
  readonly slots?: {[key: string]: any};
}

export interface PutSessionRequest {
  readonly botName: string;
  readonly botAlias: string;
  readonly userId: string;
  readonly sessionAttributes?: {[key: string]: any};
  readonly dialogAction?: DialogAction;
  readonly recentIntentSummaryView?: [];
  readonly accept?: string;
  readonly activeContexts?: [];
}

export interface PutSessionResponse {
  readonly contentType?: string;
  readonly intentName?: string;
  readonly slots?: string;
  readonly sessionAttributes?: string;
  readonly message?: string;
  readonly encodedMessage?: string;
  readonly messageFormat?: string;
  readonly dialogState?: string;
  readonly slotToElicit?: string;
  readonly audioStream?: unknown;
  readonly sessionId?: string;
  readonly activeContexts?: string;
}

export interface RequestTimeoutException {
  readonly message?: string;
}

export interface ResponseCard {
  readonly version?: string;
  readonly contentType?: string;
  readonly genericAttachments?: [];
}

export interface SentimentResponse {
  readonly sentimentLabel?: string;
  readonly sentimentScore?: string;
}

export interface UnsupportedMediaTypeException {
  readonly message?: string;
}


