/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CountClosedWorkflowExecutions {
  readonly domain: string;
  readonly startTimeFilter?: ExecutionTimeFilter;
  readonly closeTimeFilter?: ExecutionTimeFilter;
  readonly executionFilter?: WorkflowExecutionFilter;
  readonly typeFilter?: WorkflowTypeFilter;
  readonly tagFilter?: TagFilter;
  readonly closeStatusFilter?: CloseStatusFilter;
}
export interface CountOpenWorkflowExecutions {
  readonly domain: string;
  readonly startTimeFilter: ExecutionTimeFilter;
  readonly typeFilter?: WorkflowTypeFilter;
  readonly tagFilter?: TagFilter;
  readonly executionFilter?: WorkflowExecutionFilter;
}
export interface CountPendingActivityTasks {
  readonly domain: string;
  readonly taskList: TaskList;
}
export interface CountPendingDecisionTasks {
  readonly domain: string;
  readonly taskList: TaskList;
}
export interface DeprecateActivityType {
  readonly domain: string;
  readonly activityType: ActivityType;
}
export interface DeprecateDomain {
  readonly name: string;
}
export interface DeprecateWorkflowType {
  readonly domain: string;
  readonly workflowType: WorkflowType;
}
export interface DescribeActivityType {
  readonly domain: string;
  readonly activityType: ActivityType;
}
export interface DescribeDomain {
  readonly name: string;
}
export interface DescribeWorkflowExecution {
  readonly domain: string;
  readonly execution: WorkflowExecution;
}
export interface DescribeWorkflowType {
  readonly domain: string;
  readonly workflowType: WorkflowType;
}
export interface GetWorkflowExecutionHistory {
  readonly domain: string;
  readonly execution: WorkflowExecution;
  readonly nextPageToken?: string;
  readonly maximumPageSize?: number;
  readonly reverseOrder?: boolean;
}
export interface ListActivityTypes {
  readonly domain: string;
  readonly name?: string;
  readonly registrationStatus: string;
  readonly nextPageToken?: string;
  readonly maximumPageSize?: number;
  readonly reverseOrder?: boolean;
}
export interface ListClosedWorkflowExecutions {
  readonly domain: string;
  readonly startTimeFilter?: ExecutionTimeFilter;
  readonly closeTimeFilter?: ExecutionTimeFilter;
  readonly executionFilter?: WorkflowExecutionFilter;
  readonly closeStatusFilter?: CloseStatusFilter;
  readonly typeFilter?: WorkflowTypeFilter;
  readonly tagFilter?: TagFilter;
  readonly nextPageToken?: string;
  readonly maximumPageSize?: number;
  readonly reverseOrder?: boolean;
}
export interface ListDomains {
  readonly nextPageToken?: string;
  readonly registrationStatus: string;
  readonly maximumPageSize?: number;
  readonly reverseOrder?: boolean;
}
export interface ListOpenWorkflowExecutions {
  readonly domain: string;
  readonly startTimeFilter: ExecutionTimeFilter;
  readonly typeFilter?: WorkflowTypeFilter;
  readonly tagFilter?: TagFilter;
  readonly nextPageToken?: string;
  readonly maximumPageSize?: number;
  readonly reverseOrder?: boolean;
  readonly executionFilter?: WorkflowExecutionFilter;
}
export interface ListTagsForResource {
  readonly resourceArn: string;
}
export interface ListWorkflowTypes {
  readonly domain: string;
  readonly name?: string;
  readonly registrationStatus: string;
  readonly nextPageToken?: string;
  readonly maximumPageSize?: number;
  readonly reverseOrder?: boolean;
}
export interface PollForActivityTask {
  readonly domain: string;
  readonly taskList: TaskList;
  readonly identity?: string;
}
export interface PollForDecisionTask {
  readonly domain: string;
  readonly taskList: TaskList;
  readonly identity?: string;
  readonly nextPageToken?: string;
  readonly maximumPageSize?: number;
  readonly reverseOrder?: boolean;
}
export interface RecordActivityTaskHeartbeat {
  readonly taskToken: string;
  readonly details?: string;
}
export interface RegisterActivityType {
  readonly domain: string;
  readonly name: string;
  readonly version: string;
  readonly description?: string;
  readonly defaultTaskStartToCloseTimeout?: string;
  readonly defaultTaskHeartbeatTimeout?: string;
  readonly defaultTaskList?: TaskList;
  readonly defaultTaskPriority?: string;
  readonly defaultTaskScheduleToStartTimeout?: string;
  readonly defaultTaskScheduleToCloseTimeout?: string;
}
export interface RegisterDomain {
  readonly name: string;
  readonly description?: string;
  readonly workflowExecutionRetentionPeriodInDays: string;
  readonly tags?: [];
}
export interface RegisterWorkflowType {
  readonly domain: string;
  readonly name: string;
  readonly version: string;
  readonly description?: string;
  readonly defaultTaskStartToCloseTimeout?: string;
  readonly defaultExecutionStartToCloseTimeout?: string;
  readonly defaultTaskList?: TaskList;
  readonly defaultTaskPriority?: string;
  readonly defaultChildPolicy?: string;
  readonly defaultLambdaRole?: string;
}
export interface RequestCancelWorkflowExecution {
  readonly domain: string;
  readonly workflowId: string;
  readonly runId?: string;
}
export interface RespondActivityTaskCanceled {
  readonly taskToken: string;
  readonly details?: string;
}
export interface RespondActivityTaskCompleted {
  readonly taskToken: string;
  readonly result?: string;
}
export interface RespondActivityTaskFailed {
  readonly taskToken: string;
  readonly reason?: string;
  readonly details?: string;
}
export interface RespondDecisionTaskCompleted {
  readonly taskToken: string;
  readonly decisions?: [];
  readonly executionContext?: string;
}
export interface SignalWorkflowExecution {
  readonly domain: string;
  readonly workflowId: string;
  readonly runId?: string;
  readonly signalName: string;
  readonly input?: string;
}
export interface StartWorkflowExecution {
  readonly domain: string;
  readonly workflowId: string;
  readonly workflowType: WorkflowType;
  readonly taskList?: TaskList;
  readonly taskPriority?: string;
  readonly input?: string;
  readonly executionStartToCloseTimeout?: string;
  readonly tagList?: [];
  readonly taskStartToCloseTimeout?: string;
  readonly childPolicy?: string;
  readonly lambdaRole?: string;
}
export interface TagResource {
  readonly resourceArn: string;
  readonly tags: [];
}
export interface TerminateWorkflowExecution {
  readonly domain: string;
  readonly workflowId: string;
  readonly runId?: string;
  readonly reason?: string;
  readonly details?: string;
  readonly childPolicy?: string;
}
export interface UndeprecateActivityType {
  readonly domain: string;
  readonly activityType: ActivityType;
}
export interface UndeprecateDomain {
  readonly name: string;
}
export interface UndeprecateWorkflowType {
  readonly domain: string;
  readonly workflowType: WorkflowType;
}
export interface UntagResource {
  readonly resourceArn: string;
  readonly tagKeys: [];
}



interface ActivityTask {
  readonly taskToken: string;
  readonly activityId: string;
  readonly startedEventId: number;
  readonly workflowExecution: WorkflowExecution;
  readonly activityType: ActivityType;
  readonly input: string;
}

interface ActivityTaskCancelRequestedEventAttributes {
  readonly decisionTaskCompletedEventId: number;
  readonly activityId: string;
}

interface ActivityTaskCanceledEventAttributes {
  readonly details: string;
  readonly scheduledEventId: number;
  readonly startedEventId: number;
  readonly latestCancelRequestedEventId: number;
}

interface ActivityTaskCompletedEventAttributes {
  readonly result: string;
  readonly scheduledEventId: number;
  readonly startedEventId: number;
}

interface ActivityTaskFailedEventAttributes {
  readonly reason: string;
  readonly details: string;
  readonly scheduledEventId: number;
  readonly startedEventId: number;
}

interface ActivityTaskScheduledEventAttributes {
  readonly activityType: ActivityType;
  readonly activityId: string;
  readonly input: string;
  readonly control: string;
  readonly scheduleToStartTimeout: string;
  readonly scheduleToCloseTimeout: string;
  readonly startToCloseTimeout: string;
  readonly taskList: TaskList;
  readonly taskPriority: string;
  readonly decisionTaskCompletedEventId: number;
  readonly heartbeatTimeout: string;
}

interface ActivityTaskStartedEventAttributes {
  readonly identity: string;
  readonly scheduledEventId: number;
}

interface ActivityTaskStatus {
  readonly cancelRequested: boolean;
}

interface ActivityTaskTimedOutEventAttributes {
  readonly timeoutType: string;
  readonly scheduledEventId: number;
  readonly startedEventId: number;
  readonly details: string;
}

interface ActivityType {
  readonly name: string;
  readonly version: string;
}

interface ActivityTypeConfiguration {
  readonly defaultTaskStartToCloseTimeout: string;
  readonly defaultTaskHeartbeatTimeout: string;
  readonly defaultTaskList: TaskList;
  readonly defaultTaskPriority: string;
  readonly defaultTaskScheduleToStartTimeout: string;
  readonly defaultTaskScheduleToCloseTimeout: string;
}

interface ActivityTypeDetail {
  readonly typeInfo: ActivityTypeInfo;
  readonly configuration: ActivityTypeConfiguration;
}

interface ActivityTypeInfo {
  readonly activityType: ActivityType;
  readonly status: string;
  readonly description: string;
  readonly creationDate: Date;
  readonly deprecationDate: Date;
}

interface ActivityTypeInfos {
  readonly typeInfos: [];
  readonly nextPageToken: string;
}

interface CancelTimerDecisionAttributes {
  readonly timerId: string;
}

interface CancelTimerFailedEventAttributes {
  readonly timerId: string;
  readonly cause: string;
  readonly decisionTaskCompletedEventId: number;
}

interface CancelWorkflowExecutionDecisionAttributes {
  readonly details: string;
}

interface CancelWorkflowExecutionFailedEventAttributes {
  readonly cause: string;
  readonly decisionTaskCompletedEventId: number;
}

interface ChildWorkflowExecutionCanceledEventAttributes {
  readonly workflowExecution: WorkflowExecution;
  readonly workflowType: WorkflowType;
  readonly details: string;
  readonly initiatedEventId: number;
  readonly startedEventId: number;
}

interface ChildWorkflowExecutionCompletedEventAttributes {
  readonly workflowExecution: WorkflowExecution;
  readonly workflowType: WorkflowType;
  readonly result: string;
  readonly initiatedEventId: number;
  readonly startedEventId: number;
}

interface ChildWorkflowExecutionFailedEventAttributes {
  readonly workflowExecution: WorkflowExecution;
  readonly workflowType: WorkflowType;
  readonly reason: string;
  readonly details: string;
  readonly initiatedEventId: number;
  readonly startedEventId: number;
}

interface ChildWorkflowExecutionStartedEventAttributes {
  readonly workflowExecution: WorkflowExecution;
  readonly workflowType: WorkflowType;
  readonly initiatedEventId: number;
}

interface ChildWorkflowExecutionTerminatedEventAttributes {
  readonly workflowExecution: WorkflowExecution;
  readonly workflowType: WorkflowType;
  readonly initiatedEventId: number;
  readonly startedEventId: number;
}

interface ChildWorkflowExecutionTimedOutEventAttributes {
  readonly workflowExecution: WorkflowExecution;
  readonly workflowType: WorkflowType;
  readonly timeoutType: string;
  readonly initiatedEventId: number;
  readonly startedEventId: number;
}

interface CloseStatusFilter {
  readonly status: string;
}

interface CompleteWorkflowExecutionDecisionAttributes {
  readonly result: string;
}

interface CompleteWorkflowExecutionFailedEventAttributes {
  readonly cause: string;
  readonly decisionTaskCompletedEventId: number;
}

interface ContinueAsNewWorkflowExecutionDecisionAttributes {
  readonly input: string;
  readonly executionStartToCloseTimeout: string;
  readonly taskList: TaskList;
  readonly taskPriority: string;
  readonly taskStartToCloseTimeout: string;
  readonly childPolicy: string;
  readonly tagList: [];
  readonly workflowTypeVersion: string;
  readonly lambdaRole: string;
}

interface ContinueAsNewWorkflowExecutionFailedEventAttributes {
  readonly cause: string;
  readonly decisionTaskCompletedEventId: number;
}

interface CountClosedWorkflowExecutionsInput {
  readonly domain: string;
  readonly startTimeFilter: ExecutionTimeFilter;
  readonly closeTimeFilter: ExecutionTimeFilter;
  readonly executionFilter: WorkflowExecutionFilter;
  readonly typeFilter: WorkflowTypeFilter;
  readonly tagFilter: TagFilter;
  readonly closeStatusFilter: CloseStatusFilter;
}

interface CountOpenWorkflowExecutionsInput {
  readonly domain: string;
  readonly startTimeFilter: ExecutionTimeFilter;
  readonly typeFilter: WorkflowTypeFilter;
  readonly tagFilter: TagFilter;
  readonly executionFilter: WorkflowExecutionFilter;
}

interface CountPendingActivityTasksInput {
  readonly domain: string;
  readonly taskList: TaskList;
}

interface CountPendingDecisionTasksInput {
  readonly domain: string;
  readonly taskList: TaskList;
}

interface Decision {
  readonly decisionType: string;
  readonly scheduleActivityTaskDecisionAttributes: ScheduleActivityTaskDecisionAttributes;
  readonly requestCancelActivityTaskDecisionAttributes: RequestCancelActivityTaskDecisionAttributes;
  readonly completeWorkflowExecutionDecisionAttributes: CompleteWorkflowExecutionDecisionAttributes;
  readonly failWorkflowExecutionDecisionAttributes: FailWorkflowExecutionDecisionAttributes;
  readonly cancelWorkflowExecutionDecisionAttributes: CancelWorkflowExecutionDecisionAttributes;
  readonly continueAsNewWorkflowExecutionDecisionAttributes: ContinueAsNewWorkflowExecutionDecisionAttributes;
  readonly recordMarkerDecisionAttributes: RecordMarkerDecisionAttributes;
  readonly startTimerDecisionAttributes: StartTimerDecisionAttributes;
  readonly cancelTimerDecisionAttributes: CancelTimerDecisionAttributes;
  readonly signalExternalWorkflowExecutionDecisionAttributes: SignalExternalWorkflowExecutionDecisionAttributes;
  readonly requestCancelExternalWorkflowExecutionDecisionAttributes: RequestCancelExternalWorkflowExecutionDecisionAttributes;
  readonly startChildWorkflowExecutionDecisionAttributes: StartChildWorkflowExecutionDecisionAttributes;
  readonly scheduleLambdaFunctionDecisionAttributes: ScheduleLambdaFunctionDecisionAttributes;
}

interface DecisionTask {
  readonly taskToken: string;
  readonly startedEventId: number;
  readonly workflowExecution: WorkflowExecution;
  readonly workflowType: WorkflowType;
  readonly events: [];
  readonly nextPageToken: string;
  readonly previousStartedEventId: number;
}

interface DecisionTaskCompletedEventAttributes {
  readonly executionContext: string;
  readonly scheduledEventId: number;
  readonly startedEventId: number;
}

interface DecisionTaskScheduledEventAttributes {
  readonly taskList: TaskList;
  readonly taskPriority: string;
  readonly startToCloseTimeout: string;
}

interface DecisionTaskStartedEventAttributes {
  readonly identity: string;
  readonly scheduledEventId: number;
}

interface DecisionTaskTimedOutEventAttributes {
  readonly timeoutType: string;
  readonly scheduledEventId: number;
  readonly startedEventId: number;
}

interface DefaultUndefinedFault {
  readonly message: string;
}

interface DeprecateActivityTypeInput {
  readonly domain: string;
  readonly activityType: ActivityType;
}

interface DeprecateDomainInput {
  readonly name: string;
}

interface DeprecateWorkflowTypeInput {
  readonly domain: string;
  readonly workflowType: WorkflowType;
}

interface DescribeActivityTypeInput {
  readonly domain: string;
  readonly activityType: ActivityType;
}

interface DescribeDomainInput {
  readonly name: string;
}

interface DescribeWorkflowExecutionInput {
  readonly domain: string;
  readonly execution: WorkflowExecution;
}

interface DescribeWorkflowTypeInput {
  readonly domain: string;
  readonly workflowType: WorkflowType;
}

interface DomainAlreadyExistsFault {
  readonly message: string;
}

interface DomainConfiguration {
  readonly workflowExecutionRetentionPeriodInDays: string;
}

interface DomainDeprecatedFault {
  readonly message: string;
}

interface DomainDetail {
  readonly domainInfo: DomainInfo;
  readonly configuration: DomainConfiguration;
}

interface DomainInfo {
  readonly name: string;
  readonly status: string;
  readonly description: string;
  readonly arn: string;
}

interface DomainInfos {
  readonly domainInfos: [];
  readonly nextPageToken: string;
}

interface ExecutionTimeFilter {
  readonly oldestDate: Date;
  readonly latestDate: Date;
}

interface ExternalWorkflowExecutionCancelRequestedEventAttributes {
  readonly workflowExecution: WorkflowExecution;
  readonly initiatedEventId: number;
}

interface ExternalWorkflowExecutionSignaledEventAttributes {
  readonly workflowExecution: WorkflowExecution;
  readonly initiatedEventId: number;
}

interface FailWorkflowExecutionDecisionAttributes {
  readonly reason: string;
  readonly details: string;
}

interface FailWorkflowExecutionFailedEventAttributes {
  readonly cause: string;
  readonly decisionTaskCompletedEventId: number;
}

interface GetWorkflowExecutionHistoryInput {
  readonly domain: string;
  readonly execution: WorkflowExecution;
  readonly nextPageToken: string;
  readonly maximumPageSize: number;
  readonly reverseOrder: boolean;
}

interface History {
  readonly events: [];
  readonly nextPageToken: string;
}

interface HistoryEvent {
  readonly eventTimestamp: Date;
  readonly eventType: string;
  readonly eventId: number;
  readonly workflowExecutionStartedEventAttributes: WorkflowExecutionStartedEventAttributes;
  readonly workflowExecutionCompletedEventAttributes: WorkflowExecutionCompletedEventAttributes;
  readonly completeWorkflowExecutionFailedEventAttributes: CompleteWorkflowExecutionFailedEventAttributes;
  readonly workflowExecutionFailedEventAttributes: WorkflowExecutionFailedEventAttributes;
  readonly failWorkflowExecutionFailedEventAttributes: FailWorkflowExecutionFailedEventAttributes;
  readonly workflowExecutionTimedOutEventAttributes: WorkflowExecutionTimedOutEventAttributes;
  readonly workflowExecutionCanceledEventAttributes: WorkflowExecutionCanceledEventAttributes;
  readonly cancelWorkflowExecutionFailedEventAttributes: CancelWorkflowExecutionFailedEventAttributes;
  readonly workflowExecutionContinuedAsNewEventAttributes: WorkflowExecutionContinuedAsNewEventAttributes;
  readonly continueAsNewWorkflowExecutionFailedEventAttributes: ContinueAsNewWorkflowExecutionFailedEventAttributes;
  readonly workflowExecutionTerminatedEventAttributes: WorkflowExecutionTerminatedEventAttributes;
  readonly workflowExecutionCancelRequestedEventAttributes: WorkflowExecutionCancelRequestedEventAttributes;
  readonly decisionTaskScheduledEventAttributes: DecisionTaskScheduledEventAttributes;
  readonly decisionTaskStartedEventAttributes: DecisionTaskStartedEventAttributes;
  readonly decisionTaskCompletedEventAttributes: DecisionTaskCompletedEventAttributes;
  readonly decisionTaskTimedOutEventAttributes: DecisionTaskTimedOutEventAttributes;
  readonly activityTaskScheduledEventAttributes: ActivityTaskScheduledEventAttributes;
  readonly activityTaskStartedEventAttributes: ActivityTaskStartedEventAttributes;
  readonly activityTaskCompletedEventAttributes: ActivityTaskCompletedEventAttributes;
  readonly activityTaskFailedEventAttributes: ActivityTaskFailedEventAttributes;
  readonly activityTaskTimedOutEventAttributes: ActivityTaskTimedOutEventAttributes;
  readonly activityTaskCanceledEventAttributes: ActivityTaskCanceledEventAttributes;
  readonly activityTaskCancelRequestedEventAttributes: ActivityTaskCancelRequestedEventAttributes;
  readonly workflowExecutionSignaledEventAttributes: WorkflowExecutionSignaledEventAttributes;
  readonly markerRecordedEventAttributes: MarkerRecordedEventAttributes;
  readonly recordMarkerFailedEventAttributes: RecordMarkerFailedEventAttributes;
  readonly timerStartedEventAttributes: TimerStartedEventAttributes;
  readonly timerFiredEventAttributes: TimerFiredEventAttributes;
  readonly timerCanceledEventAttributes: TimerCanceledEventAttributes;
  readonly startChildWorkflowExecutionInitiatedEventAttributes: StartChildWorkflowExecutionInitiatedEventAttributes;
  readonly childWorkflowExecutionStartedEventAttributes: ChildWorkflowExecutionStartedEventAttributes;
  readonly childWorkflowExecutionCompletedEventAttributes: ChildWorkflowExecutionCompletedEventAttributes;
  readonly childWorkflowExecutionFailedEventAttributes: ChildWorkflowExecutionFailedEventAttributes;
  readonly childWorkflowExecutionTimedOutEventAttributes: ChildWorkflowExecutionTimedOutEventAttributes;
  readonly childWorkflowExecutionCanceledEventAttributes: ChildWorkflowExecutionCanceledEventAttributes;
  readonly childWorkflowExecutionTerminatedEventAttributes: ChildWorkflowExecutionTerminatedEventAttributes;
  readonly signalExternalWorkflowExecutionInitiatedEventAttributes: SignalExternalWorkflowExecutionInitiatedEventAttributes;
  readonly externalWorkflowExecutionSignaledEventAttributes: ExternalWorkflowExecutionSignaledEventAttributes;
  readonly signalExternalWorkflowExecutionFailedEventAttributes: SignalExternalWorkflowExecutionFailedEventAttributes;
  readonly externalWorkflowExecutionCancelRequestedEventAttributes: ExternalWorkflowExecutionCancelRequestedEventAttributes;
  readonly requestCancelExternalWorkflowExecutionInitiatedEventAttributes: RequestCancelExternalWorkflowExecutionInitiatedEventAttributes;
  readonly requestCancelExternalWorkflowExecutionFailedEventAttributes: RequestCancelExternalWorkflowExecutionFailedEventAttributes;
  readonly scheduleActivityTaskFailedEventAttributes: ScheduleActivityTaskFailedEventAttributes;
  readonly requestCancelActivityTaskFailedEventAttributes: RequestCancelActivityTaskFailedEventAttributes;
  readonly startTimerFailedEventAttributes: StartTimerFailedEventAttributes;
  readonly cancelTimerFailedEventAttributes: CancelTimerFailedEventAttributes;
  readonly startChildWorkflowExecutionFailedEventAttributes: StartChildWorkflowExecutionFailedEventAttributes;
  readonly lambdaFunctionScheduledEventAttributes: LambdaFunctionScheduledEventAttributes;
  readonly lambdaFunctionStartedEventAttributes: LambdaFunctionStartedEventAttributes;
  readonly lambdaFunctionCompletedEventAttributes: LambdaFunctionCompletedEventAttributes;
  readonly lambdaFunctionFailedEventAttributes: LambdaFunctionFailedEventAttributes;
  readonly lambdaFunctionTimedOutEventAttributes: LambdaFunctionTimedOutEventAttributes;
  readonly scheduleLambdaFunctionFailedEventAttributes: ScheduleLambdaFunctionFailedEventAttributes;
  readonly startLambdaFunctionFailedEventAttributes: StartLambdaFunctionFailedEventAttributes;
}

interface LambdaFunctionCompletedEventAttributes {
  readonly scheduledEventId: number;
  readonly startedEventId: number;
  readonly result: string;
}

interface LambdaFunctionFailedEventAttributes {
  readonly scheduledEventId: number;
  readonly startedEventId: number;
  readonly reason: string;
  readonly details: string;
}

interface LambdaFunctionScheduledEventAttributes {
  readonly id: string;
  readonly name: string;
  readonly control: string;
  readonly input: string;
  readonly startToCloseTimeout: string;
  readonly decisionTaskCompletedEventId: number;
}

interface LambdaFunctionStartedEventAttributes {
  readonly scheduledEventId: number;
}

interface LambdaFunctionTimedOutEventAttributes {
  readonly scheduledEventId: number;
  readonly startedEventId: number;
  readonly timeoutType: string;
}

interface LimitExceededFault {
  readonly message: string;
}

interface ListActivityTypesInput {
  readonly domain: string;
  readonly name: string;
  readonly registrationStatus: string;
  readonly nextPageToken: string;
  readonly maximumPageSize: number;
  readonly reverseOrder: boolean;
}

interface ListClosedWorkflowExecutionsInput {
  readonly domain: string;
  readonly startTimeFilter: ExecutionTimeFilter;
  readonly closeTimeFilter: ExecutionTimeFilter;
  readonly executionFilter: WorkflowExecutionFilter;
  readonly closeStatusFilter: CloseStatusFilter;
  readonly typeFilter: WorkflowTypeFilter;
  readonly tagFilter: TagFilter;
  readonly nextPageToken: string;
  readonly maximumPageSize: number;
  readonly reverseOrder: boolean;
}

interface ListDomainsInput {
  readonly nextPageToken: string;
  readonly registrationStatus: string;
  readonly maximumPageSize: number;
  readonly reverseOrder: boolean;
}

interface ListOpenWorkflowExecutionsInput {
  readonly domain: string;
  readonly startTimeFilter: ExecutionTimeFilter;
  readonly typeFilter: WorkflowTypeFilter;
  readonly tagFilter: TagFilter;
  readonly nextPageToken: string;
  readonly maximumPageSize: number;
  readonly reverseOrder: boolean;
  readonly executionFilter: WorkflowExecutionFilter;
}

interface ListTagsForResourceInput {
  readonly resourceArn: string;
}

interface ListTagsForResourceOutput {
  readonly tags: [];
}

interface ListWorkflowTypesInput {
  readonly domain: string;
  readonly name: string;
  readonly registrationStatus: string;
  readonly nextPageToken: string;
  readonly maximumPageSize: number;
  readonly reverseOrder: boolean;
}

interface MarkerRecordedEventAttributes {
  readonly markerName: string;
  readonly details: string;
  readonly decisionTaskCompletedEventId: number;
}

interface OperationNotPermittedFault {
  readonly message: string;
}

interface PendingTaskCount {
  readonly count: number;
  readonly truncated: boolean;
}

interface PollForActivityTaskInput {
  readonly domain: string;
  readonly taskList: TaskList;
  readonly identity: string;
}

interface PollForDecisionTaskInput {
  readonly domain: string;
  readonly taskList: TaskList;
  readonly identity: string;
  readonly nextPageToken: string;
  readonly maximumPageSize: number;
  readonly reverseOrder: boolean;
}

interface RecordActivityTaskHeartbeatInput {
  readonly taskToken: string;
  readonly details: string;
}

interface RecordMarkerDecisionAttributes {
  readonly markerName: string;
  readonly details: string;
}

interface RecordMarkerFailedEventAttributes {
  readonly markerName: string;
  readonly cause: string;
  readonly decisionTaskCompletedEventId: number;
}

interface RegisterActivityTypeInput {
  readonly domain: string;
  readonly name: string;
  readonly version: string;
  readonly description: string;
  readonly defaultTaskStartToCloseTimeout: string;
  readonly defaultTaskHeartbeatTimeout: string;
  readonly defaultTaskList: TaskList;
  readonly defaultTaskPriority: string;
  readonly defaultTaskScheduleToStartTimeout: string;
  readonly defaultTaskScheduleToCloseTimeout: string;
}

interface RegisterDomainInput {
  readonly name: string;
  readonly description: string;
  readonly workflowExecutionRetentionPeriodInDays: string;
  readonly tags: [];
}

interface RegisterWorkflowTypeInput {
  readonly domain: string;
  readonly name: string;
  readonly version: string;
  readonly description: string;
  readonly defaultTaskStartToCloseTimeout: string;
  readonly defaultExecutionStartToCloseTimeout: string;
  readonly defaultTaskList: TaskList;
  readonly defaultTaskPriority: string;
  readonly defaultChildPolicy: string;
  readonly defaultLambdaRole: string;
}

interface RequestCancelActivityTaskDecisionAttributes {
  readonly activityId: string;
}

interface RequestCancelActivityTaskFailedEventAttributes {
  readonly activityId: string;
  readonly cause: string;
  readonly decisionTaskCompletedEventId: number;
}

interface RequestCancelExternalWorkflowExecutionDecisionAttributes {
  readonly workflowId: string;
  readonly runId: string;
  readonly control: string;
}

interface RequestCancelExternalWorkflowExecutionFailedEventAttributes {
  readonly workflowId: string;
  readonly runId: string;
  readonly cause: string;
  readonly initiatedEventId: number;
  readonly decisionTaskCompletedEventId: number;
  readonly control: string;
}

interface RequestCancelExternalWorkflowExecutionInitiatedEventAttributes {
  readonly workflowId: string;
  readonly runId: string;
  readonly decisionTaskCompletedEventId: number;
  readonly control: string;
}

interface RequestCancelWorkflowExecutionInput {
  readonly domain: string;
  readonly workflowId: string;
  readonly runId: string;
}

interface ResourceTag {
  readonly key: string;
  readonly value: string;
}

interface RespondActivityTaskCanceledInput {
  readonly taskToken: string;
  readonly details: string;
}

interface RespondActivityTaskCompletedInput {
  readonly taskToken: string;
  readonly result: string;
}

interface RespondActivityTaskFailedInput {
  readonly taskToken: string;
  readonly reason: string;
  readonly details: string;
}

interface RespondDecisionTaskCompletedInput {
  readonly taskToken: string;
  readonly decisions: [];
  readonly executionContext: string;
}

interface Run {
  readonly runId: string;
}

interface ScheduleActivityTaskDecisionAttributes {
  readonly activityType: ActivityType;
  readonly activityId: string;
  readonly control: string;
  readonly input: string;
  readonly scheduleToCloseTimeout: string;
  readonly taskList: TaskList;
  readonly taskPriority: string;
  readonly scheduleToStartTimeout: string;
  readonly startToCloseTimeout: string;
  readonly heartbeatTimeout: string;
}

interface ScheduleActivityTaskFailedEventAttributes {
  readonly activityType: ActivityType;
  readonly activityId: string;
  readonly cause: string;
  readonly decisionTaskCompletedEventId: number;
}

interface ScheduleLambdaFunctionDecisionAttributes {
  readonly id: string;
  readonly name: string;
  readonly control: string;
  readonly input: string;
  readonly startToCloseTimeout: string;
}

interface ScheduleLambdaFunctionFailedEventAttributes {
  readonly id: string;
  readonly name: string;
  readonly cause: string;
  readonly decisionTaskCompletedEventId: number;
}

interface SignalExternalWorkflowExecutionDecisionAttributes {
  readonly workflowId: string;
  readonly runId: string;
  readonly signalName: string;
  readonly input: string;
  readonly control: string;
}

interface SignalExternalWorkflowExecutionFailedEventAttributes {
  readonly workflowId: string;
  readonly runId: string;
  readonly cause: string;
  readonly initiatedEventId: number;
  readonly decisionTaskCompletedEventId: number;
  readonly control: string;
}

interface SignalExternalWorkflowExecutionInitiatedEventAttributes {
  readonly workflowId: string;
  readonly runId: string;
  readonly signalName: string;
  readonly input: string;
  readonly decisionTaskCompletedEventId: number;
  readonly control: string;
}

interface SignalWorkflowExecutionInput {
  readonly domain: string;
  readonly workflowId: string;
  readonly runId: string;
  readonly signalName: string;
  readonly input: string;
}

interface StartChildWorkflowExecutionDecisionAttributes {
  readonly workflowType: WorkflowType;
  readonly workflowId: string;
  readonly control: string;
  readonly input: string;
  readonly executionStartToCloseTimeout: string;
  readonly taskList: TaskList;
  readonly taskPriority: string;
  readonly taskStartToCloseTimeout: string;
  readonly childPolicy: string;
  readonly tagList: [];
  readonly lambdaRole: string;
}

interface StartChildWorkflowExecutionFailedEventAttributes {
  readonly workflowType: WorkflowType;
  readonly cause: string;
  readonly workflowId: string;
  readonly initiatedEventId: number;
  readonly decisionTaskCompletedEventId: number;
  readonly control: string;
}

interface StartChildWorkflowExecutionInitiatedEventAttributes {
  readonly workflowId: string;
  readonly workflowType: WorkflowType;
  readonly control: string;
  readonly input: string;
  readonly executionStartToCloseTimeout: string;
  readonly taskList: TaskList;
  readonly taskPriority: string;
  readonly decisionTaskCompletedEventId: number;
  readonly childPolicy: string;
  readonly taskStartToCloseTimeout: string;
  readonly tagList: [];
  readonly lambdaRole: string;
}

interface StartLambdaFunctionFailedEventAttributes {
  readonly scheduledEventId: number;
  readonly cause: string;
  readonly message: string;
}

interface StartTimerDecisionAttributes {
  readonly timerId: string;
  readonly control: string;
  readonly startToFireTimeout: string;
}

interface StartTimerFailedEventAttributes {
  readonly timerId: string;
  readonly cause: string;
  readonly decisionTaskCompletedEventId: number;
}

interface StartWorkflowExecutionInput {
  readonly domain: string;
  readonly workflowId: string;
  readonly workflowType: WorkflowType;
  readonly taskList: TaskList;
  readonly taskPriority: string;
  readonly input: string;
  readonly executionStartToCloseTimeout: string;
  readonly tagList: [];
  readonly taskStartToCloseTimeout: string;
  readonly childPolicy: string;
  readonly lambdaRole: string;
}

interface TagFilter {
  readonly tag: string;
}

interface TagResourceInput {
  readonly resourceArn: string;
  readonly tags: [];
}

interface TaskList {
  readonly name: string;
}

interface TerminateWorkflowExecutionInput {
  readonly domain: string;
  readonly workflowId: string;
  readonly runId: string;
  readonly reason: string;
  readonly details: string;
  readonly childPolicy: string;
}

interface TimerCanceledEventAttributes {
  readonly timerId: string;
  readonly startedEventId: number;
  readonly decisionTaskCompletedEventId: number;
}

interface TimerFiredEventAttributes {
  readonly timerId: string;
  readonly startedEventId: number;
}

interface TimerStartedEventAttributes {
  readonly timerId: string;
  readonly control: string;
  readonly startToFireTimeout: string;
  readonly decisionTaskCompletedEventId: number;
}

interface TooManyTagsFault {
  readonly message: string;
}

interface TypeAlreadyExistsFault {
  readonly message: string;
}

interface TypeDeprecatedFault {
  readonly message: string;
}

interface UndeprecateActivityTypeInput {
  readonly domain: string;
  readonly activityType: ActivityType;
}

interface UndeprecateDomainInput {
  readonly name: string;
}

interface UndeprecateWorkflowTypeInput {
  readonly domain: string;
  readonly workflowType: WorkflowType;
}

interface UnknownResourceFault {
  readonly message: string;
}

interface UntagResourceInput {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

interface WorkflowExecution {
  readonly workflowId: string;
  readonly runId: string;
}

interface WorkflowExecutionAlreadyStartedFault {
  readonly message: string;
}

interface WorkflowExecutionCancelRequestedEventAttributes {
  readonly externalWorkflowExecution: WorkflowExecution;
  readonly externalInitiatedEventId: number;
  readonly cause: string;
}

interface WorkflowExecutionCanceledEventAttributes {
  readonly details: string;
  readonly decisionTaskCompletedEventId: number;
}

interface WorkflowExecutionCompletedEventAttributes {
  readonly result: string;
  readonly decisionTaskCompletedEventId: number;
}

interface WorkflowExecutionConfiguration {
  readonly taskStartToCloseTimeout: string;
  readonly executionStartToCloseTimeout: string;
  readonly taskList: TaskList;
  readonly taskPriority: string;
  readonly childPolicy: string;
  readonly lambdaRole: string;
}

interface WorkflowExecutionContinuedAsNewEventAttributes {
  readonly input: string;
  readonly decisionTaskCompletedEventId: number;
  readonly newExecutionRunId: string;
  readonly executionStartToCloseTimeout: string;
  readonly taskList: TaskList;
  readonly taskPriority: string;
  readonly taskStartToCloseTimeout: string;
  readonly childPolicy: string;
  readonly tagList: [];
  readonly workflowType: WorkflowType;
  readonly lambdaRole: string;
}

interface WorkflowExecutionCount {
  readonly count: number;
  readonly truncated: boolean;
}

interface WorkflowExecutionDetail {
  readonly executionInfo: WorkflowExecutionInfo;
  readonly executionConfiguration: WorkflowExecutionConfiguration;
  readonly openCounts: WorkflowExecutionOpenCounts;
  readonly latestActivityTaskTimestamp: Date;
  readonly latestExecutionContext: string;
}

interface WorkflowExecutionFailedEventAttributes {
  readonly reason: string;
  readonly details: string;
  readonly decisionTaskCompletedEventId: number;
}

interface WorkflowExecutionFilter {
  readonly workflowId: string;
}

interface WorkflowExecutionInfo {
  readonly execution: WorkflowExecution;
  readonly workflowType: WorkflowType;
  readonly startTimestamp: Date;
  readonly closeTimestamp: Date;
  readonly executionStatus: string;
  readonly closeStatus: string;
  readonly parent: WorkflowExecution;
  readonly tagList: [];
  readonly cancelRequested: boolean;
}

interface WorkflowExecutionInfos {
  readonly executionInfos: [];
  readonly nextPageToken: string;
}

interface WorkflowExecutionOpenCounts {
  readonly openActivityTasks: number;
  readonly openDecisionTasks: number;
  readonly openTimers: number;
  readonly openChildWorkflowExecutions: number;
  readonly openLambdaFunctions: number;
}

interface WorkflowExecutionSignaledEventAttributes {
  readonly signalName: string;
  readonly input: string;
  readonly externalWorkflowExecution: WorkflowExecution;
  readonly externalInitiatedEventId: number;
}

interface WorkflowExecutionStartedEventAttributes {
  readonly input: string;
  readonly executionStartToCloseTimeout: string;
  readonly taskStartToCloseTimeout: string;
  readonly childPolicy: string;
  readonly taskList: TaskList;
  readonly taskPriority: string;
  readonly workflowType: WorkflowType;
  readonly tagList: [];
  readonly continuedExecutionRunId: string;
  readonly parentWorkflowExecution: WorkflowExecution;
  readonly parentInitiatedEventId: number;
  readonly lambdaRole: string;
}

interface WorkflowExecutionTerminatedEventAttributes {
  readonly reason: string;
  readonly details: string;
  readonly childPolicy: string;
  readonly cause: string;
}

interface WorkflowExecutionTimedOutEventAttributes {
  readonly timeoutType: string;
  readonly childPolicy: string;
}

interface WorkflowType {
  readonly name: string;
  readonly version: string;
}

interface WorkflowTypeConfiguration {
  readonly defaultTaskStartToCloseTimeout: string;
  readonly defaultExecutionStartToCloseTimeout: string;
  readonly defaultTaskList: TaskList;
  readonly defaultTaskPriority: string;
  readonly defaultChildPolicy: string;
  readonly defaultLambdaRole: string;
}

interface WorkflowTypeDetail {
  readonly typeInfo: WorkflowTypeInfo;
  readonly configuration: WorkflowTypeConfiguration;
}

interface WorkflowTypeFilter {
  readonly name: string;
  readonly version: string;
}

interface WorkflowTypeInfo {
  readonly workflowType: WorkflowType;
  readonly status: string;
  readonly description: string;
  readonly creationDate: Date;
  readonly deprecationDate: Date;
}

interface WorkflowTypeInfos {
  readonly typeInfos: [];
  readonly nextPageToken: string;
}

