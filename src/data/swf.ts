/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CountClosedWorkflowExecutions {
  readonly domain: string;
  readonly startTimeFilter?: ExecutionTimeFilter;
  readonly closeTimeFilter?: ExecutionTimeFilter;
  readonly executionFilter?: WorkflowExecutionFilter;
  readonly typeFilter?: WorkflowTypeFilter;
  readonly tagFilter?: TagFilter;
  readonly closeStatusFilter?: CloseStatusFilter;
}

export interface CountOpenWorkflowExecutions {
  readonly domain: string;
  readonly startTimeFilter: ExecutionTimeFilter;
  readonly typeFilter?: WorkflowTypeFilter;
  readonly tagFilter?: TagFilter;
  readonly executionFilter?: WorkflowExecutionFilter;
}

export interface CountPendingActivityTasks {
  readonly domain: string;
  readonly taskList: TaskList;
}

export interface CountPendingDecisionTasks {
  readonly domain: string;
  readonly taskList: TaskList;
}

export interface DeprecateActivityType {
  readonly domain: string;
  readonly activityType: ActivityType;
}

export interface DeprecateDomain {
  readonly name: string;
}

export interface DeprecateWorkflowType {
  readonly domain: string;
  readonly workflowType: WorkflowType;
}

export interface DescribeActivityType {
  readonly domain: string;
  readonly activityType: ActivityType;
}

export interface DescribeDomain {
  readonly name: string;
}

export interface DescribeWorkflowExecution {
  readonly domain: string;
  readonly execution: WorkflowExecution;
}

export interface DescribeWorkflowType {
  readonly domain: string;
  readonly workflowType: WorkflowType;
}

export interface GetWorkflowExecutionHistory {
  readonly domain: string;
  readonly execution: WorkflowExecution;
  readonly nextPageToken?: string;
  readonly maximumPageSize?: number;
  readonly reverseOrder?: boolean;
}

export interface ListActivityTypes {
  readonly domain: string;
  readonly name?: string;
  readonly registrationStatus: string;
  readonly nextPageToken?: string;
  readonly maximumPageSize?: number;
  readonly reverseOrder?: boolean;
}

export interface ListClosedWorkflowExecutions {
  readonly domain: string;
  readonly startTimeFilter?: ExecutionTimeFilter;
  readonly closeTimeFilter?: ExecutionTimeFilter;
  readonly executionFilter?: WorkflowExecutionFilter;
  readonly closeStatusFilter?: CloseStatusFilter;
  readonly typeFilter?: WorkflowTypeFilter;
  readonly tagFilter?: TagFilter;
  readonly nextPageToken?: string;
  readonly maximumPageSize?: number;
  readonly reverseOrder?: boolean;
}

export interface ListDomains {
  readonly nextPageToken?: string;
  readonly registrationStatus: string;
  readonly maximumPageSize?: number;
  readonly reverseOrder?: boolean;
}

export interface ListOpenWorkflowExecutions {
  readonly domain: string;
  readonly startTimeFilter: ExecutionTimeFilter;
  readonly typeFilter?: WorkflowTypeFilter;
  readonly tagFilter?: TagFilter;
  readonly nextPageToken?: string;
  readonly maximumPageSize?: number;
  readonly reverseOrder?: boolean;
  readonly executionFilter?: WorkflowExecutionFilter;
}

export interface ListTagsForResource {
  readonly resourceArn: string;
}

export interface ListWorkflowTypes {
  readonly domain: string;
  readonly name?: string;
  readonly registrationStatus: string;
  readonly nextPageToken?: string;
  readonly maximumPageSize?: number;
  readonly reverseOrder?: boolean;
}

export interface PollForActivityTask {
  readonly domain: string;
  readonly taskList: TaskList;
  readonly identity?: string;
}

export interface PollForDecisionTask {
  readonly domain: string;
  readonly taskList: TaskList;
  readonly identity?: string;
  readonly nextPageToken?: string;
  readonly maximumPageSize?: number;
  readonly reverseOrder?: boolean;
}

export interface RecordActivityTaskHeartbeat {
  readonly taskToken: string;
  readonly details?: string;
}

export interface RegisterActivityType {
  readonly domain: string;
  readonly name: string;
  readonly version: string;
  readonly description?: string;
  readonly defaultTaskStartToCloseTimeout?: string;
  readonly defaultTaskHeartbeatTimeout?: string;
  readonly defaultTaskList?: TaskList;
  readonly defaultTaskPriority?: string;
  readonly defaultTaskScheduleToStartTimeout?: string;
  readonly defaultTaskScheduleToCloseTimeout?: string;
}

export interface RegisterDomain {
  readonly name: string;
  readonly description?: string;
  readonly workflowExecutionRetentionPeriodInDays: string;
  readonly tags?: [];
}

export interface RegisterWorkflowType {
  readonly domain: string;
  readonly name: string;
  readonly version: string;
  readonly description?: string;
  readonly defaultTaskStartToCloseTimeout?: string;
  readonly defaultExecutionStartToCloseTimeout?: string;
  readonly defaultTaskList?: TaskList;
  readonly defaultTaskPriority?: string;
  readonly defaultChildPolicy?: string;
  readonly defaultLambdaRole?: string;
}

export interface RequestCancelWorkflowExecution {
  readonly domain: string;
  readonly workflowId: string;
  readonly runId?: string;
}

export interface RespondActivityTaskCanceled {
  readonly taskToken: string;
  readonly details?: string;
}

export interface RespondActivityTaskCompleted {
  readonly taskToken: string;
  readonly result?: string;
}

export interface RespondActivityTaskFailed {
  readonly taskToken: string;
  readonly reason?: string;
  readonly details?: string;
}

export interface RespondDecisionTaskCompleted {
  readonly taskToken: string;
  readonly decisions?: [];
  readonly executionContext?: string;
}

export interface SignalWorkflowExecution {
  readonly domain: string;
  readonly workflowId: string;
  readonly runId?: string;
  readonly signalName: string;
  readonly input?: string;
}

export interface StartWorkflowExecution {
  readonly domain: string;
  readonly workflowId: string;
  readonly workflowType: WorkflowType;
  readonly taskList?: TaskList;
  readonly taskPriority?: string;
  readonly input?: string;
  readonly executionStartToCloseTimeout?: string;
  readonly tagList?: [];
  readonly taskStartToCloseTimeout?: string;
  readonly childPolicy?: string;
  readonly lambdaRole?: string;
}

export interface TagResource {
  readonly resourceArn: string;
  readonly tags: [];
}

export interface TerminateWorkflowExecution {
  readonly domain: string;
  readonly workflowId: string;
  readonly runId?: string;
  readonly reason?: string;
  readonly details?: string;
  readonly childPolicy?: string;
}

export interface UndeprecateActivityType {
  readonly domain: string;
  readonly activityType: ActivityType;
}

export interface UndeprecateDomain {
  readonly name: string;
}

export interface UndeprecateWorkflowType {
  readonly domain: string;
  readonly workflowType: WorkflowType;
}

export interface UntagResource {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface ActivityTask {
  readonly taskToken: string;
  readonly activityId: string;
  readonly startedEventId: number;
  readonly workflowExecution: WorkflowExecution;
  readonly activityType: ActivityType;
  readonly input?: string;
}

export interface ActivityTaskCancelRequestedEventAttributes {
  readonly decisionTaskCompletedEventId: number;
  readonly activityId: string;
}

export interface ActivityTaskCanceledEventAttributes {
  readonly details?: string;
  readonly scheduledEventId: number;
  readonly startedEventId: number;
  readonly latestCancelRequestedEventId?: number;
}

export interface ActivityTaskCompletedEventAttributes {
  readonly result?: string;
  readonly scheduledEventId: number;
  readonly startedEventId: number;
}

export interface ActivityTaskFailedEventAttributes {
  readonly reason?: string;
  readonly details?: string;
  readonly scheduledEventId: number;
  readonly startedEventId: number;
}

export interface ActivityTaskScheduledEventAttributes {
  readonly activityType: ActivityType;
  readonly activityId: string;
  readonly input?: string;
  readonly control?: string;
  readonly scheduleToStartTimeout?: string;
  readonly scheduleToCloseTimeout?: string;
  readonly startToCloseTimeout?: string;
  readonly taskList: TaskList;
  readonly taskPriority?: string;
  readonly decisionTaskCompletedEventId: number;
  readonly heartbeatTimeout?: string;
}

export interface ActivityTaskStartedEventAttributes {
  readonly identity?: string;
  readonly scheduledEventId: number;
}

export interface ActivityTaskStatus {
  readonly cancelRequested: boolean;
}

export interface ActivityTaskTimedOutEventAttributes {
  readonly timeoutType: string;
  readonly scheduledEventId: number;
  readonly startedEventId: number;
  readonly details?: string;
}

export interface ActivityType {
  readonly name: string;
  readonly version: string;
}

export interface ActivityTypeConfiguration {
  readonly defaultTaskStartToCloseTimeout?: string;
  readonly defaultTaskHeartbeatTimeout?: string;
  readonly defaultTaskList?: TaskList;
  readonly defaultTaskPriority?: string;
  readonly defaultTaskScheduleToStartTimeout?: string;
  readonly defaultTaskScheduleToCloseTimeout?: string;
}

export interface ActivityTypeDetail {
  readonly typeInfo: ActivityTypeInfo;
  readonly configuration: ActivityTypeConfiguration;
}

export interface ActivityTypeInfo {
  readonly activityType: ActivityType;
  readonly status: string;
  readonly description?: string;
  readonly creationDate: Date;
  readonly deprecationDate?: Date;
}

export interface ActivityTypeInfos {
  readonly typeInfos: [];
  readonly nextPageToken?: string;
}

export interface CancelTimerDecisionAttributes {
  readonly timerId: string;
}

export interface CancelTimerFailedEventAttributes {
  readonly timerId: string;
  readonly cause: string;
  readonly decisionTaskCompletedEventId: number;
}

export interface CancelWorkflowExecutionDecisionAttributes {
  readonly details?: string;
}

export interface CancelWorkflowExecutionFailedEventAttributes {
  readonly cause: string;
  readonly decisionTaskCompletedEventId: number;
}

export interface ChildWorkflowExecutionCanceledEventAttributes {
  readonly workflowExecution: WorkflowExecution;
  readonly workflowType: WorkflowType;
  readonly details?: string;
  readonly initiatedEventId: number;
  readonly startedEventId: number;
}

export interface ChildWorkflowExecutionCompletedEventAttributes {
  readonly workflowExecution: WorkflowExecution;
  readonly workflowType: WorkflowType;
  readonly result?: string;
  readonly initiatedEventId: number;
  readonly startedEventId: number;
}

export interface ChildWorkflowExecutionFailedEventAttributes {
  readonly workflowExecution: WorkflowExecution;
  readonly workflowType: WorkflowType;
  readonly reason?: string;
  readonly details?: string;
  readonly initiatedEventId: number;
  readonly startedEventId: number;
}

export interface ChildWorkflowExecutionStartedEventAttributes {
  readonly workflowExecution: WorkflowExecution;
  readonly workflowType: WorkflowType;
  readonly initiatedEventId: number;
}

export interface ChildWorkflowExecutionTerminatedEventAttributes {
  readonly workflowExecution: WorkflowExecution;
  readonly workflowType: WorkflowType;
  readonly initiatedEventId: number;
  readonly startedEventId: number;
}

export interface ChildWorkflowExecutionTimedOutEventAttributes {
  readonly workflowExecution: WorkflowExecution;
  readonly workflowType: WorkflowType;
  readonly timeoutType: string;
  readonly initiatedEventId: number;
  readonly startedEventId: number;
}

export interface CloseStatusFilter {
  readonly status: string;
}

export interface CompleteWorkflowExecutionDecisionAttributes {
  readonly result?: string;
}

export interface CompleteWorkflowExecutionFailedEventAttributes {
  readonly cause: string;
  readonly decisionTaskCompletedEventId: number;
}

export interface ContinueAsNewWorkflowExecutionDecisionAttributes {
  readonly input?: string;
  readonly executionStartToCloseTimeout?: string;
  readonly taskList?: TaskList;
  readonly taskPriority?: string;
  readonly taskStartToCloseTimeout?: string;
  readonly childPolicy?: string;
  readonly tagList?: [];
  readonly workflowTypeVersion?: string;
  readonly lambdaRole?: string;
}

export interface ContinueAsNewWorkflowExecutionFailedEventAttributes {
  readonly cause: string;
  readonly decisionTaskCompletedEventId: number;
}

export interface CountClosedWorkflowExecutionsInput {
  readonly domain: string;
  readonly startTimeFilter?: ExecutionTimeFilter;
  readonly closeTimeFilter?: ExecutionTimeFilter;
  readonly executionFilter?: WorkflowExecutionFilter;
  readonly typeFilter?: WorkflowTypeFilter;
  readonly tagFilter?: TagFilter;
  readonly closeStatusFilter?: CloseStatusFilter;
}

export interface CountOpenWorkflowExecutionsInput {
  readonly domain: string;
  readonly startTimeFilter: ExecutionTimeFilter;
  readonly typeFilter?: WorkflowTypeFilter;
  readonly tagFilter?: TagFilter;
  readonly executionFilter?: WorkflowExecutionFilter;
}

export interface CountPendingActivityTasksInput {
  readonly domain: string;
  readonly taskList: TaskList;
}

export interface CountPendingDecisionTasksInput {
  readonly domain: string;
  readonly taskList: TaskList;
}

export interface Decision {
  readonly decisionType: string;
  readonly scheduleActivityTaskDecisionAttributes?: ScheduleActivityTaskDecisionAttributes;
  readonly requestCancelActivityTaskDecisionAttributes?: RequestCancelActivityTaskDecisionAttributes;
  readonly completeWorkflowExecutionDecisionAttributes?: CompleteWorkflowExecutionDecisionAttributes;
  readonly failWorkflowExecutionDecisionAttributes?: FailWorkflowExecutionDecisionAttributes;
  readonly cancelWorkflowExecutionDecisionAttributes?: CancelWorkflowExecutionDecisionAttributes;
  readonly continueAsNewWorkflowExecutionDecisionAttributes?: ContinueAsNewWorkflowExecutionDecisionAttributes;
  readonly recordMarkerDecisionAttributes?: RecordMarkerDecisionAttributes;
  readonly startTimerDecisionAttributes?: StartTimerDecisionAttributes;
  readonly cancelTimerDecisionAttributes?: CancelTimerDecisionAttributes;
  readonly signalExternalWorkflowExecutionDecisionAttributes?: SignalExternalWorkflowExecutionDecisionAttributes;
  readonly requestCancelExternalWorkflowExecutionDecisionAttributes?: RequestCancelExternalWorkflowExecutionDecisionAttributes;
  readonly startChildWorkflowExecutionDecisionAttributes?: StartChildWorkflowExecutionDecisionAttributes;
  readonly scheduleLambdaFunctionDecisionAttributes?: ScheduleLambdaFunctionDecisionAttributes;
}

export interface DecisionTask {
  readonly taskToken: string;
  readonly startedEventId: number;
  readonly workflowExecution: WorkflowExecution;
  readonly workflowType: WorkflowType;
  readonly events: [];
  readonly nextPageToken?: string;
  readonly previousStartedEventId?: number;
}

export interface DecisionTaskCompletedEventAttributes {
  readonly executionContext?: string;
  readonly scheduledEventId: number;
  readonly startedEventId: number;
}

export interface DecisionTaskScheduledEventAttributes {
  readonly taskList: TaskList;
  readonly taskPriority?: string;
  readonly startToCloseTimeout?: string;
}

export interface DecisionTaskStartedEventAttributes {
  readonly identity?: string;
  readonly scheduledEventId: number;
}

export interface DecisionTaskTimedOutEventAttributes {
  readonly timeoutType: string;
  readonly scheduledEventId: number;
  readonly startedEventId: number;
}

export interface DefaultUndefinedFault {
  readonly message?: string;
}

export interface DeprecateActivityTypeInput {
  readonly domain: string;
  readonly activityType: ActivityType;
}

export interface DeprecateDomainInput {
  readonly name: string;
}

export interface DeprecateWorkflowTypeInput {
  readonly domain: string;
  readonly workflowType: WorkflowType;
}

export interface DescribeActivityTypeInput {
  readonly domain: string;
  readonly activityType: ActivityType;
}

export interface DescribeDomainInput {
  readonly name: string;
}

export interface DescribeWorkflowExecutionInput {
  readonly domain: string;
  readonly execution: WorkflowExecution;
}

export interface DescribeWorkflowTypeInput {
  readonly domain: string;
  readonly workflowType: WorkflowType;
}

export interface DomainAlreadyExistsFault {
  readonly message?: string;
}

export interface DomainConfiguration {
  readonly workflowExecutionRetentionPeriodInDays: string;
}

export interface DomainDeprecatedFault {
  readonly message?: string;
}

export interface DomainDetail {
  readonly domainInfo: DomainInfo;
  readonly configuration: DomainConfiguration;
}

export interface DomainInfo {
  readonly name: string;
  readonly status: string;
  readonly description?: string;
  readonly arn?: string;
}

export interface DomainInfos {
  readonly domainInfos: [];
  readonly nextPageToken?: string;
}

export interface ExecutionTimeFilter {
  readonly oldestDate: Date;
  readonly latestDate?: Date;
}

export interface ExternalWorkflowExecutionCancelRequestedEventAttributes {
  readonly workflowExecution: WorkflowExecution;
  readonly initiatedEventId: number;
}

export interface ExternalWorkflowExecutionSignaledEventAttributes {
  readonly workflowExecution: WorkflowExecution;
  readonly initiatedEventId: number;
}

export interface FailWorkflowExecutionDecisionAttributes {
  readonly reason?: string;
  readonly details?: string;
}

export interface FailWorkflowExecutionFailedEventAttributes {
  readonly cause: string;
  readonly decisionTaskCompletedEventId: number;
}

export interface GetWorkflowExecutionHistoryInput {
  readonly domain: string;
  readonly execution: WorkflowExecution;
  readonly nextPageToken?: string;
  readonly maximumPageSize?: number;
  readonly reverseOrder?: boolean;
}

export interface History {
  readonly events: [];
  readonly nextPageToken?: string;
}

export interface HistoryEvent {
  readonly eventTimestamp: Date;
  readonly eventType: string;
  readonly eventId: number;
  readonly workflowExecutionStartedEventAttributes?: WorkflowExecutionStartedEventAttributes;
  readonly workflowExecutionCompletedEventAttributes?: WorkflowExecutionCompletedEventAttributes;
  readonly completeWorkflowExecutionFailedEventAttributes?: CompleteWorkflowExecutionFailedEventAttributes;
  readonly workflowExecutionFailedEventAttributes?: WorkflowExecutionFailedEventAttributes;
  readonly failWorkflowExecutionFailedEventAttributes?: FailWorkflowExecutionFailedEventAttributes;
  readonly workflowExecutionTimedOutEventAttributes?: WorkflowExecutionTimedOutEventAttributes;
  readonly workflowExecutionCanceledEventAttributes?: WorkflowExecutionCanceledEventAttributes;
  readonly cancelWorkflowExecutionFailedEventAttributes?: CancelWorkflowExecutionFailedEventAttributes;
  readonly workflowExecutionContinuedAsNewEventAttributes?: WorkflowExecutionContinuedAsNewEventAttributes;
  readonly continueAsNewWorkflowExecutionFailedEventAttributes?: ContinueAsNewWorkflowExecutionFailedEventAttributes;
  readonly workflowExecutionTerminatedEventAttributes?: WorkflowExecutionTerminatedEventAttributes;
  readonly workflowExecutionCancelRequestedEventAttributes?: WorkflowExecutionCancelRequestedEventAttributes;
  readonly decisionTaskScheduledEventAttributes?: DecisionTaskScheduledEventAttributes;
  readonly decisionTaskStartedEventAttributes?: DecisionTaskStartedEventAttributes;
  readonly decisionTaskCompletedEventAttributes?: DecisionTaskCompletedEventAttributes;
  readonly decisionTaskTimedOutEventAttributes?: DecisionTaskTimedOutEventAttributes;
  readonly activityTaskScheduledEventAttributes?: ActivityTaskScheduledEventAttributes;
  readonly activityTaskStartedEventAttributes?: ActivityTaskStartedEventAttributes;
  readonly activityTaskCompletedEventAttributes?: ActivityTaskCompletedEventAttributes;
  readonly activityTaskFailedEventAttributes?: ActivityTaskFailedEventAttributes;
  readonly activityTaskTimedOutEventAttributes?: ActivityTaskTimedOutEventAttributes;
  readonly activityTaskCanceledEventAttributes?: ActivityTaskCanceledEventAttributes;
  readonly activityTaskCancelRequestedEventAttributes?: ActivityTaskCancelRequestedEventAttributes;
  readonly workflowExecutionSignaledEventAttributes?: WorkflowExecutionSignaledEventAttributes;
  readonly markerRecordedEventAttributes?: MarkerRecordedEventAttributes;
  readonly recordMarkerFailedEventAttributes?: RecordMarkerFailedEventAttributes;
  readonly timerStartedEventAttributes?: TimerStartedEventAttributes;
  readonly timerFiredEventAttributes?: TimerFiredEventAttributes;
  readonly timerCanceledEventAttributes?: TimerCanceledEventAttributes;
  readonly startChildWorkflowExecutionInitiatedEventAttributes?: StartChildWorkflowExecutionInitiatedEventAttributes;
  readonly childWorkflowExecutionStartedEventAttributes?: ChildWorkflowExecutionStartedEventAttributes;
  readonly childWorkflowExecutionCompletedEventAttributes?: ChildWorkflowExecutionCompletedEventAttributes;
  readonly childWorkflowExecutionFailedEventAttributes?: ChildWorkflowExecutionFailedEventAttributes;
  readonly childWorkflowExecutionTimedOutEventAttributes?: ChildWorkflowExecutionTimedOutEventAttributes;
  readonly childWorkflowExecutionCanceledEventAttributes?: ChildWorkflowExecutionCanceledEventAttributes;
  readonly childWorkflowExecutionTerminatedEventAttributes?: ChildWorkflowExecutionTerminatedEventAttributes;
  readonly signalExternalWorkflowExecutionInitiatedEventAttributes?: SignalExternalWorkflowExecutionInitiatedEventAttributes;
  readonly externalWorkflowExecutionSignaledEventAttributes?: ExternalWorkflowExecutionSignaledEventAttributes;
  readonly signalExternalWorkflowExecutionFailedEventAttributes?: SignalExternalWorkflowExecutionFailedEventAttributes;
  readonly externalWorkflowExecutionCancelRequestedEventAttributes?: ExternalWorkflowExecutionCancelRequestedEventAttributes;
  readonly requestCancelExternalWorkflowExecutionInitiatedEventAttributes?: RequestCancelExternalWorkflowExecutionInitiatedEventAttributes;
  readonly requestCancelExternalWorkflowExecutionFailedEventAttributes?: RequestCancelExternalWorkflowExecutionFailedEventAttributes;
  readonly scheduleActivityTaskFailedEventAttributes?: ScheduleActivityTaskFailedEventAttributes;
  readonly requestCancelActivityTaskFailedEventAttributes?: RequestCancelActivityTaskFailedEventAttributes;
  readonly startTimerFailedEventAttributes?: StartTimerFailedEventAttributes;
  readonly cancelTimerFailedEventAttributes?: CancelTimerFailedEventAttributes;
  readonly startChildWorkflowExecutionFailedEventAttributes?: StartChildWorkflowExecutionFailedEventAttributes;
  readonly lambdaFunctionScheduledEventAttributes?: LambdaFunctionScheduledEventAttributes;
  readonly lambdaFunctionStartedEventAttributes?: LambdaFunctionStartedEventAttributes;
  readonly lambdaFunctionCompletedEventAttributes?: LambdaFunctionCompletedEventAttributes;
  readonly lambdaFunctionFailedEventAttributes?: LambdaFunctionFailedEventAttributes;
  readonly lambdaFunctionTimedOutEventAttributes?: LambdaFunctionTimedOutEventAttributes;
  readonly scheduleLambdaFunctionFailedEventAttributes?: ScheduleLambdaFunctionFailedEventAttributes;
  readonly startLambdaFunctionFailedEventAttributes?: StartLambdaFunctionFailedEventAttributes;
}

export interface LambdaFunctionCompletedEventAttributes {
  readonly scheduledEventId: number;
  readonly startedEventId: number;
  readonly result?: string;
}

export interface LambdaFunctionFailedEventAttributes {
  readonly scheduledEventId: number;
  readonly startedEventId: number;
  readonly reason?: string;
  readonly details?: string;
}

export interface LambdaFunctionScheduledEventAttributes {
  readonly id: string;
  readonly name: string;
  readonly control?: string;
  readonly input?: string;
  readonly startToCloseTimeout?: string;
  readonly decisionTaskCompletedEventId: number;
}

export interface LambdaFunctionStartedEventAttributes {
  readonly scheduledEventId: number;
}

export interface LambdaFunctionTimedOutEventAttributes {
  readonly scheduledEventId: number;
  readonly startedEventId: number;
  readonly timeoutType?: string;
}

export interface LimitExceededFault {
  readonly message?: string;
}

export interface ListActivityTypesInput {
  readonly domain: string;
  readonly name?: string;
  readonly registrationStatus: string;
  readonly nextPageToken?: string;
  readonly maximumPageSize?: number;
  readonly reverseOrder?: boolean;
}

export interface ListClosedWorkflowExecutionsInput {
  readonly domain: string;
  readonly startTimeFilter?: ExecutionTimeFilter;
  readonly closeTimeFilter?: ExecutionTimeFilter;
  readonly executionFilter?: WorkflowExecutionFilter;
  readonly closeStatusFilter?: CloseStatusFilter;
  readonly typeFilter?: WorkflowTypeFilter;
  readonly tagFilter?: TagFilter;
  readonly nextPageToken?: string;
  readonly maximumPageSize?: number;
  readonly reverseOrder?: boolean;
}

export interface ListDomainsInput {
  readonly nextPageToken?: string;
  readonly registrationStatus: string;
  readonly maximumPageSize?: number;
  readonly reverseOrder?: boolean;
}

export interface ListOpenWorkflowExecutionsInput {
  readonly domain: string;
  readonly startTimeFilter: ExecutionTimeFilter;
  readonly typeFilter?: WorkflowTypeFilter;
  readonly tagFilter?: TagFilter;
  readonly nextPageToken?: string;
  readonly maximumPageSize?: number;
  readonly reverseOrder?: boolean;
  readonly executionFilter?: WorkflowExecutionFilter;
}

export interface ListTagsForResourceInput {
  readonly resourceArn: string;
}

export interface ListTagsForResourceOutput {
  readonly tags?: [];
}

export interface ListWorkflowTypesInput {
  readonly domain: string;
  readonly name?: string;
  readonly registrationStatus: string;
  readonly nextPageToken?: string;
  readonly maximumPageSize?: number;
  readonly reverseOrder?: boolean;
}

export interface MarkerRecordedEventAttributes {
  readonly markerName: string;
  readonly details?: string;
  readonly decisionTaskCompletedEventId: number;
}

export interface OperationNotPermittedFault {
  readonly message?: string;
}

export interface PendingTaskCount {
  readonly count: number;
  readonly truncated?: boolean;
}

export interface PollForActivityTaskInput {
  readonly domain: string;
  readonly taskList: TaskList;
  readonly identity?: string;
}

export interface PollForDecisionTaskInput {
  readonly domain: string;
  readonly taskList: TaskList;
  readonly identity?: string;
  readonly nextPageToken?: string;
  readonly maximumPageSize?: number;
  readonly reverseOrder?: boolean;
}

export interface RecordActivityTaskHeartbeatInput {
  readonly taskToken: string;
  readonly details?: string;
}

export interface RecordMarkerDecisionAttributes {
  readonly markerName: string;
  readonly details?: string;
}

export interface RecordMarkerFailedEventAttributes {
  readonly markerName: string;
  readonly cause: string;
  readonly decisionTaskCompletedEventId: number;
}

export interface RegisterActivityTypeInput {
  readonly domain: string;
  readonly name: string;
  readonly version: string;
  readonly description?: string;
  readonly defaultTaskStartToCloseTimeout?: string;
  readonly defaultTaskHeartbeatTimeout?: string;
  readonly defaultTaskList?: TaskList;
  readonly defaultTaskPriority?: string;
  readonly defaultTaskScheduleToStartTimeout?: string;
  readonly defaultTaskScheduleToCloseTimeout?: string;
}

export interface RegisterDomainInput {
  readonly name: string;
  readonly description?: string;
  readonly workflowExecutionRetentionPeriodInDays: string;
  readonly tags?: [];
}

export interface RegisterWorkflowTypeInput {
  readonly domain: string;
  readonly name: string;
  readonly version: string;
  readonly description?: string;
  readonly defaultTaskStartToCloseTimeout?: string;
  readonly defaultExecutionStartToCloseTimeout?: string;
  readonly defaultTaskList?: TaskList;
  readonly defaultTaskPriority?: string;
  readonly defaultChildPolicy?: string;
  readonly defaultLambdaRole?: string;
}

export interface RequestCancelActivityTaskDecisionAttributes {
  readonly activityId: string;
}

export interface RequestCancelActivityTaskFailedEventAttributes {
  readonly activityId: string;
  readonly cause: string;
  readonly decisionTaskCompletedEventId: number;
}

export interface RequestCancelExternalWorkflowExecutionDecisionAttributes {
  readonly workflowId: string;
  readonly runId?: string;
  readonly control?: string;
}

export interface RequestCancelExternalWorkflowExecutionFailedEventAttributes {
  readonly workflowId: string;
  readonly runId?: string;
  readonly cause: string;
  readonly initiatedEventId: number;
  readonly decisionTaskCompletedEventId: number;
  readonly control?: string;
}

export interface RequestCancelExternalWorkflowExecutionInitiatedEventAttributes {
  readonly workflowId: string;
  readonly runId?: string;
  readonly decisionTaskCompletedEventId: number;
  readonly control?: string;
}

export interface RequestCancelWorkflowExecutionInput {
  readonly domain: string;
  readonly workflowId: string;
  readonly runId?: string;
}

export interface ResourceTag {
  readonly key: string;
  readonly value?: string;
}

export interface RespondActivityTaskCanceledInput {
  readonly taskToken: string;
  readonly details?: string;
}

export interface RespondActivityTaskCompletedInput {
  readonly taskToken: string;
  readonly result?: string;
}

export interface RespondActivityTaskFailedInput {
  readonly taskToken: string;
  readonly reason?: string;
  readonly details?: string;
}

export interface RespondDecisionTaskCompletedInput {
  readonly taskToken: string;
  readonly decisions?: [];
  readonly executionContext?: string;
}

export interface Run {
  readonly runId?: string;
}

export interface ScheduleActivityTaskDecisionAttributes {
  readonly activityType: ActivityType;
  readonly activityId: string;
  readonly control?: string;
  readonly input?: string;
  readonly scheduleToCloseTimeout?: string;
  readonly taskList?: TaskList;
  readonly taskPriority?: string;
  readonly scheduleToStartTimeout?: string;
  readonly startToCloseTimeout?: string;
  readonly heartbeatTimeout?: string;
}

export interface ScheduleActivityTaskFailedEventAttributes {
  readonly activityType: ActivityType;
  readonly activityId: string;
  readonly cause: string;
  readonly decisionTaskCompletedEventId: number;
}

export interface ScheduleLambdaFunctionDecisionAttributes {
  readonly id: string;
  readonly name: string;
  readonly control?: string;
  readonly input?: string;
  readonly startToCloseTimeout?: string;
}

export interface ScheduleLambdaFunctionFailedEventAttributes {
  readonly id: string;
  readonly name: string;
  readonly cause: string;
  readonly decisionTaskCompletedEventId: number;
}

export interface SignalExternalWorkflowExecutionDecisionAttributes {
  readonly workflowId: string;
  readonly runId?: string;
  readonly signalName: string;
  readonly input?: string;
  readonly control?: string;
}

export interface SignalExternalWorkflowExecutionFailedEventAttributes {
  readonly workflowId: string;
  readonly runId?: string;
  readonly cause: string;
  readonly initiatedEventId: number;
  readonly decisionTaskCompletedEventId: number;
  readonly control?: string;
}

export interface SignalExternalWorkflowExecutionInitiatedEventAttributes {
  readonly workflowId: string;
  readonly runId?: string;
  readonly signalName: string;
  readonly input?: string;
  readonly decisionTaskCompletedEventId: number;
  readonly control?: string;
}

export interface SignalWorkflowExecutionInput {
  readonly domain: string;
  readonly workflowId: string;
  readonly runId?: string;
  readonly signalName: string;
  readonly input?: string;
}

export interface StartChildWorkflowExecutionDecisionAttributes {
  readonly workflowType: WorkflowType;
  readonly workflowId: string;
  readonly control?: string;
  readonly input?: string;
  readonly executionStartToCloseTimeout?: string;
  readonly taskList?: TaskList;
  readonly taskPriority?: string;
  readonly taskStartToCloseTimeout?: string;
  readonly childPolicy?: string;
  readonly tagList?: [];
  readonly lambdaRole?: string;
}

export interface StartChildWorkflowExecutionFailedEventAttributes {
  readonly workflowType: WorkflowType;
  readonly cause: string;
  readonly workflowId: string;
  readonly initiatedEventId: number;
  readonly decisionTaskCompletedEventId: number;
  readonly control?: string;
}

export interface StartChildWorkflowExecutionInitiatedEventAttributes {
  readonly workflowId: string;
  readonly workflowType: WorkflowType;
  readonly control?: string;
  readonly input?: string;
  readonly executionStartToCloseTimeout?: string;
  readonly taskList: TaskList;
  readonly taskPriority?: string;
  readonly decisionTaskCompletedEventId: number;
  readonly childPolicy: string;
  readonly taskStartToCloseTimeout?: string;
  readonly tagList?: [];
  readonly lambdaRole?: string;
}

export interface StartLambdaFunctionFailedEventAttributes {
  readonly scheduledEventId?: number;
  readonly cause?: string;
  readonly message?: string;
}

export interface StartTimerDecisionAttributes {
  readonly timerId: string;
  readonly control?: string;
  readonly startToFireTimeout: string;
}

export interface StartTimerFailedEventAttributes {
  readonly timerId: string;
  readonly cause: string;
  readonly decisionTaskCompletedEventId: number;
}

export interface StartWorkflowExecutionInput {
  readonly domain: string;
  readonly workflowId: string;
  readonly workflowType: WorkflowType;
  readonly taskList?: TaskList;
  readonly taskPriority?: string;
  readonly input?: string;
  readonly executionStartToCloseTimeout?: string;
  readonly tagList?: [];
  readonly taskStartToCloseTimeout?: string;
  readonly childPolicy?: string;
  readonly lambdaRole?: string;
}

export interface TagFilter {
  readonly tag: string;
}

export interface TagResourceInput {
  readonly resourceArn: string;
  readonly tags: [];
}

export interface TaskList {
  readonly name: string;
}

export interface TerminateWorkflowExecutionInput {
  readonly domain: string;
  readonly workflowId: string;
  readonly runId?: string;
  readonly reason?: string;
  readonly details?: string;
  readonly childPolicy?: string;
}

export interface TimerCanceledEventAttributes {
  readonly timerId: string;
  readonly startedEventId: number;
  readonly decisionTaskCompletedEventId: number;
}

export interface TimerFiredEventAttributes {
  readonly timerId: string;
  readonly startedEventId: number;
}

export interface TimerStartedEventAttributes {
  readonly timerId: string;
  readonly control?: string;
  readonly startToFireTimeout: string;
  readonly decisionTaskCompletedEventId: number;
}

export interface TooManyTagsFault {
  readonly message?: string;
}

export interface TypeAlreadyExistsFault {
  readonly message?: string;
}

export interface TypeDeprecatedFault {
  readonly message?: string;
}

export interface UndeprecateActivityTypeInput {
  readonly domain: string;
  readonly activityType: ActivityType;
}

export interface UndeprecateDomainInput {
  readonly name: string;
}

export interface UndeprecateWorkflowTypeInput {
  readonly domain: string;
  readonly workflowType: WorkflowType;
}

export interface UnknownResourceFault {
  readonly message?: string;
}

export interface UntagResourceInput {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface WorkflowExecution {
  readonly workflowId: string;
  readonly runId: string;
}

export interface WorkflowExecutionAlreadyStartedFault {
  readonly message?: string;
}

export interface WorkflowExecutionCancelRequestedEventAttributes {
  readonly externalWorkflowExecution?: WorkflowExecution;
  readonly externalInitiatedEventId?: number;
  readonly cause?: string;
}

export interface WorkflowExecutionCanceledEventAttributes {
  readonly details?: string;
  readonly decisionTaskCompletedEventId: number;
}

export interface WorkflowExecutionCompletedEventAttributes {
  readonly result?: string;
  readonly decisionTaskCompletedEventId: number;
}

export interface WorkflowExecutionConfiguration {
  readonly taskStartToCloseTimeout: string;
  readonly executionStartToCloseTimeout: string;
  readonly taskList: TaskList;
  readonly taskPriority?: string;
  readonly childPolicy: string;
  readonly lambdaRole?: string;
}

export interface WorkflowExecutionContinuedAsNewEventAttributes {
  readonly input?: string;
  readonly decisionTaskCompletedEventId: number;
  readonly newExecutionRunId: string;
  readonly executionStartToCloseTimeout?: string;
  readonly taskList: TaskList;
  readonly taskPriority?: string;
  readonly taskStartToCloseTimeout?: string;
  readonly childPolicy: string;
  readonly tagList?: [];
  readonly workflowType: WorkflowType;
  readonly lambdaRole?: string;
}

export interface WorkflowExecutionCount {
  readonly count: number;
  readonly truncated?: boolean;
}

export interface WorkflowExecutionDetail {
  readonly executionInfo: WorkflowExecutionInfo;
  readonly executionConfiguration: WorkflowExecutionConfiguration;
  readonly openCounts: WorkflowExecutionOpenCounts;
  readonly latestActivityTaskTimestamp?: Date;
  readonly latestExecutionContext?: string;
}

export interface WorkflowExecutionFailedEventAttributes {
  readonly reason?: string;
  readonly details?: string;
  readonly decisionTaskCompletedEventId: number;
}

export interface WorkflowExecutionFilter {
  readonly workflowId: string;
}

export interface WorkflowExecutionInfo {
  readonly execution: WorkflowExecution;
  readonly workflowType: WorkflowType;
  readonly startTimestamp: Date;
  readonly closeTimestamp?: Date;
  readonly executionStatus: string;
  readonly closeStatus?: string;
  readonly parent?: WorkflowExecution;
  readonly tagList?: [];
  readonly cancelRequested?: boolean;
}

export interface WorkflowExecutionInfos {
  readonly executionInfos: [];
  readonly nextPageToken?: string;
}

export interface WorkflowExecutionOpenCounts {
  readonly openActivityTasks: number;
  readonly openDecisionTasks: number;
  readonly openTimers: number;
  readonly openChildWorkflowExecutions: number;
  readonly openLambdaFunctions?: number;
}

export interface WorkflowExecutionSignaledEventAttributes {
  readonly signalName: string;
  readonly input?: string;
  readonly externalWorkflowExecution?: WorkflowExecution;
  readonly externalInitiatedEventId?: number;
}

export interface WorkflowExecutionStartedEventAttributes {
  readonly input?: string;
  readonly executionStartToCloseTimeout?: string;
  readonly taskStartToCloseTimeout?: string;
  readonly childPolicy: string;
  readonly taskList: TaskList;
  readonly taskPriority?: string;
  readonly workflowType: WorkflowType;
  readonly tagList?: [];
  readonly continuedExecutionRunId?: string;
  readonly parentWorkflowExecution?: WorkflowExecution;
  readonly parentInitiatedEventId?: number;
  readonly lambdaRole?: string;
}

export interface WorkflowExecutionTerminatedEventAttributes {
  readonly reason?: string;
  readonly details?: string;
  readonly childPolicy: string;
  readonly cause?: string;
}

export interface WorkflowExecutionTimedOutEventAttributes {
  readonly timeoutType: string;
  readonly childPolicy: string;
}

export interface WorkflowType {
  readonly name: string;
  readonly version: string;
}

export interface WorkflowTypeConfiguration {
  readonly defaultTaskStartToCloseTimeout?: string;
  readonly defaultExecutionStartToCloseTimeout?: string;
  readonly defaultTaskList?: TaskList;
  readonly defaultTaskPriority?: string;
  readonly defaultChildPolicy?: string;
  readonly defaultLambdaRole?: string;
}

export interface WorkflowTypeDetail {
  readonly typeInfo: WorkflowTypeInfo;
  readonly configuration: WorkflowTypeConfiguration;
}

export interface WorkflowTypeFilter {
  readonly name: string;
  readonly version?: string;
}

export interface WorkflowTypeInfo {
  readonly workflowType: WorkflowType;
  readonly status: string;
  readonly description?: string;
  readonly creationDate: Date;
  readonly deprecationDate?: Date;
}

export interface WorkflowTypeInfos {
  readonly typeInfos: [];
  readonly nextPageToken?: string;
}


