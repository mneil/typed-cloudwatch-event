/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CreateReplicationSet {
  readonly clientToken?: string;
  readonly regions: {[key: string]: any};
}

export interface CreateResponsePlan {
  readonly actions?: [];
  readonly chatChannel?: ChatChannel;
  readonly clientToken?: string;
  readonly displayName?: string;
  readonly engagements?: [];
  readonly incidentTemplate: IncidentTemplate;
  readonly name: string;
  readonly tags?: {[key: string]: any};
}

export interface CreateTimelineEvent {
  readonly clientToken?: string;
  readonly eventData: string;
  readonly eventTime: Date;
  readonly eventType: string;
  readonly incidentRecordArn: string;
}

export interface DeleteIncidentRecord {
  readonly arn: string;
}

export interface DeleteReplicationSet {
  readonly arn: string;
}

export interface DeleteResourcePolicy {
  readonly policyId: string;
  readonly resourceArn: string;
}

export interface DeleteResponsePlan {
  readonly arn: string;
}

export interface DeleteTimelineEvent {
  readonly eventId: string;
  readonly incidentRecordArn: string;
}

export interface GetIncidentRecord {
  readonly arn: string;
}

export interface GetReplicationSet {
  readonly arn: string;
}

export interface GetResourcePolicies {
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly resourceArn: string;
}

export interface GetResponsePlan {
  readonly arn: string;
}

export interface GetTimelineEvent {
  readonly eventId: string;
  readonly incidentRecordArn: string;
}

export interface ListIncidentRecords {
  readonly filters?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListRelatedItems {
  readonly incidentRecordArn: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListReplicationSets {
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListResponsePlans {
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListTagsForResource {
  readonly resourceArn: string;
}

export interface ListTimelineEvents {
  readonly filters?: [];
  readonly incidentRecordArn: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly sortBy?: string;
  readonly sortOrder?: string;
}

export interface PutResourcePolicy {
  readonly policy: string;
  readonly resourceArn: string;
}

export interface StartIncident {
  readonly clientToken?: string;
  readonly impact?: number;
  readonly relatedItems?: [];
  readonly responsePlanArn: string;
  readonly title?: string;
  readonly triggerDetails?: TriggerDetails;
}

export interface TagResource {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

export interface UntagResource {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface UpdateDeletionProtection {
  readonly arn: string;
  readonly clientToken?: string;
  readonly deletionProtected: boolean;
}

export interface UpdateIncidentRecord {
  readonly arn: string;
  readonly chatChannel?: ChatChannel;
  readonly clientToken?: string;
  readonly impact?: number;
  readonly notificationTargets?: [];
  readonly status?: string;
  readonly summary?: string;
  readonly title?: string;
}

export interface UpdateRelatedItems {
  readonly clientToken?: string;
  readonly incidentRecordArn: string;
  readonly relatedItemsUpdate: RelatedItemsUpdate;
}

export interface UpdateReplicationSet {
  readonly actions: [];
  readonly arn: string;
  readonly clientToken?: string;
}

export interface UpdateResponsePlan {
  readonly actions?: [];
  readonly arn: string;
  readonly chatChannel?: ChatChannel;
  readonly clientToken?: string;
  readonly displayName?: string;
  readonly engagements?: [];
  readonly incidentTemplateDedupeString?: string;
  readonly incidentTemplateImpact?: number;
  readonly incidentTemplateNotificationTargets?: [];
  readonly incidentTemplateSummary?: string;
  readonly incidentTemplateTitle?: string;
}

export interface UpdateTimelineEvent {
  readonly clientToken?: string;
  readonly eventData?: string;
  readonly eventId: string;
  readonly eventTime?: Date;
  readonly eventType?: string;
  readonly incidentRecordArn: string;
}

export interface AccessDeniedException {
  readonly message: string;
}

export interface Action {
  readonly ssmAutomation?: SsmAutomation;
}

export interface AddRegionAction {
  readonly regionName: string;
  readonly sseKmsKeyId?: string;
}

export interface AttributeValueList {
  readonly integerValues?: [];
  readonly stringValues?: [];
}

export interface AutomationExecution {
  readonly ssmExecutionArn?: string;
}

export interface ChatChannel {
  readonly chatbotSns?: [];
  readonly empty?: EmptyChatChannel;
}

export interface Condition {
  readonly after?: Date;
  readonly before?: Date;
  readonly equals?: AttributeValueList;
}

export interface ConflictException {
  readonly message: string;
  readonly resourceIdentifier?: string;
  readonly resourceType?: string;
  readonly retryAfter?: Date;
}

export interface CreateReplicationSetInput {
  readonly clientToken?: string;
  readonly regions: {[key: string]: any};
}

export interface CreateReplicationSetOutput {
  readonly arn: string;
}

export interface CreateResponsePlanInput {
  readonly actions?: [];
  readonly chatChannel?: ChatChannel;
  readonly clientToken?: string;
  readonly displayName?: string;
  readonly engagements?: [];
  readonly incidentTemplate: IncidentTemplate;
  readonly name: string;
  readonly tags?: {[key: string]: any};
}

export interface CreateResponsePlanOutput {
  readonly arn: string;
}

export interface CreateTimelineEventInput {
  readonly clientToken?: string;
  readonly eventData: string;
  readonly eventTime: Date;
  readonly eventType: string;
  readonly incidentRecordArn: string;
}

export interface CreateTimelineEventOutput {
  readonly eventId: string;
  readonly incidentRecordArn: string;
}

export interface DeleteIncidentRecordInput {
  readonly arn: string;
}

export interface DeleteIncidentRecordOutput {
}

export interface DeleteRegionAction {
  readonly regionName: string;
}

export interface DeleteReplicationSetInput {
  readonly arn: string;
}

export interface DeleteReplicationSetOutput {
}

export interface DeleteResourcePolicyInput {
  readonly policyId: string;
  readonly resourceArn: string;
}

export interface DeleteResourcePolicyOutput {
}

export interface DeleteResponsePlanInput {
  readonly arn: string;
}

export interface DeleteResponsePlanOutput {
}

export interface DeleteTimelineEventInput {
  readonly eventId: string;
  readonly incidentRecordArn: string;
}

export interface DeleteTimelineEventOutput {
}

export interface EmptyChatChannel {
}

export interface EventSummary {
  readonly eventId: string;
  readonly eventTime: Date;
  readonly eventType: string;
  readonly eventUpdatedTime: Date;
  readonly incidentRecordArn: string;
}

export interface Filter {
  readonly condition: Condition;
  readonly key: string;
}

export interface GetIncidentRecordInput {
  readonly arn: string;
}

export interface GetIncidentRecordOutput {
  readonly incidentRecord: IncidentRecord;
}

export interface GetReplicationSetInput {
  readonly arn: string;
}

export interface GetReplicationSetOutput {
  readonly replicationSet: ReplicationSet;
}

export interface GetResourcePoliciesInput {
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly resourceArn: string;
}

export interface GetResourcePoliciesOutput {
  readonly nextToken?: string;
  readonly resourcePolicies: [];
}

export interface GetResponsePlanInput {
  readonly arn: string;
}

export interface GetResponsePlanOutput {
  readonly actions?: [];
  readonly arn: string;
  readonly chatChannel?: ChatChannel;
  readonly displayName?: string;
  readonly engagements?: [];
  readonly incidentTemplate: IncidentTemplate;
  readonly name: string;
}

export interface GetTimelineEventInput {
  readonly eventId: string;
  readonly incidentRecordArn: string;
}

export interface GetTimelineEventOutput {
  readonly event: TimelineEvent;
}

export interface IncidentRecord {
  readonly arn: string;
  readonly automationExecutions?: [];
  readonly chatChannel?: ChatChannel;
  readonly creationTime: Date;
  readonly dedupeString: string;
  readonly impact: number;
  readonly incidentRecordSource: IncidentRecordSource;
  readonly lastModifiedBy: string;
  readonly lastModifiedTime: Date;
  readonly notificationTargets?: [];
  readonly resolvedTime?: Date;
  readonly status: string;
  readonly summary?: string;
  readonly title: string;
}

export interface IncidentRecordSource {
  readonly createdBy: string;
  readonly invokedBy?: string;
  readonly resourceArn?: string;
  readonly source: string;
}

export interface IncidentRecordSummary {
  readonly arn: string;
  readonly creationTime: Date;
  readonly impact: number;
  readonly incidentRecordSource: IncidentRecordSource;
  readonly resolvedTime?: Date;
  readonly status: string;
  readonly title: string;
}

export interface IncidentTemplate {
  readonly dedupeString?: string;
  readonly impact: number;
  readonly notificationTargets?: [];
  readonly summary?: string;
  readonly title: string;
}

export interface InternalServerException {
  readonly message: string;
}

export interface ItemIdentifier {
  readonly type: string;
  readonly value: ItemValue;
}

export interface ItemValue {
  readonly arn?: string;
  readonly metricDefinition?: string;
  readonly url?: string;
}

export interface ListIncidentRecordsInput {
  readonly filters?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListIncidentRecordsOutput {
  readonly incidentRecordSummaries: [];
  readonly nextToken?: string;
}

export interface ListRelatedItemsInput {
  readonly incidentRecordArn: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListRelatedItemsOutput {
  readonly nextToken?: string;
  readonly relatedItems: [];
}

export interface ListReplicationSetsInput {
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListReplicationSetsOutput {
  readonly nextToken?: string;
  readonly replicationSetArns: [];
}

export interface ListResponsePlansInput {
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListResponsePlansOutput {
  readonly nextToken?: string;
  readonly responsePlanSummaries: [];
}

export interface ListTagsForResourceRequest {
  readonly resourceArn: string;
}

export interface ListTagsForResourceResponse {
  readonly tags: {[key: string]: any};
}

export interface ListTimelineEventsInput {
  readonly filters?: [];
  readonly incidentRecordArn: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly sortBy?: string;
  readonly sortOrder?: string;
}

export interface ListTimelineEventsOutput {
  readonly eventSummaries: [];
  readonly nextToken?: string;
}

export interface NotificationTargetItem {
  readonly snsTopicArn?: string;
}

export interface PutResourcePolicyInput {
  readonly policy: string;
  readonly resourceArn: string;
}

export interface PutResourcePolicyOutput {
  readonly policyId: string;
}

export interface RegionInfo {
  readonly sseKmsKeyId?: string;
  readonly status: string;
  readonly statusMessage?: string;
  readonly statusUpdateDateTime: Date;
}

export interface RegionMapInputValue {
  readonly sseKmsKeyId?: string;
}

export interface RelatedItem {
  readonly identifier: ItemIdentifier;
  readonly title?: string;
}

export interface RelatedItemsUpdate {
  readonly itemToAdd?: RelatedItem;
  readonly itemToRemove?: ItemIdentifier;
}

export interface ReplicationSet {
  readonly arn?: string;
  readonly createdBy: string;
  readonly createdTime: Date;
  readonly deletionProtected: boolean;
  readonly lastModifiedBy: string;
  readonly lastModifiedTime: Date;
  readonly regionMap: {[key: string]: any};
  readonly status: string;
}

export interface ResourceNotFoundException {
  readonly message: string;
  readonly resourceIdentifier?: string;
  readonly resourceType?: string;
}

export interface ResourcePolicy {
  readonly policyDocument: string;
  readonly policyId: string;
  readonly ramResourceShareRegion: string;
}

export interface ResponsePlanSummary {
  readonly arn: string;
  readonly displayName?: string;
  readonly name: string;
}

export interface ServiceQuotaExceededException {
  readonly message: string;
  readonly quotaCode: string;
  readonly resourceIdentifier?: string;
  readonly resourceType?: string;
  readonly serviceCode: string;
}

export interface SsmAutomation {
  readonly documentName: string;
  readonly documentVersion?: string;
  readonly parameters?: {[key: string]: any};
  readonly roleArn: string;
  readonly targetAccount?: string;
}

export interface StartIncidentInput {
  readonly clientToken?: string;
  readonly impact?: number;
  readonly relatedItems?: [];
  readonly responsePlanArn: string;
  readonly title?: string;
  readonly triggerDetails?: TriggerDetails;
}

export interface StartIncidentOutput {
  readonly incidentRecordArn: string;
}

export interface TagResourceRequest {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

export interface TagResourceResponse {
}

export interface ThrottlingException {
  readonly message: string;
  readonly quotaCode: string;
  readonly serviceCode: string;
}

export interface TimelineEvent {
  readonly eventData: string;
  readonly eventId: string;
  readonly eventTime: Date;
  readonly eventType: string;
  readonly eventUpdatedTime: Date;
  readonly incidentRecordArn: string;
}

export interface TriggerDetails {
  readonly rawData?: string;
  readonly source: string;
  readonly timestamp: Date;
  readonly triggerArn?: string;
}

export interface UntagResourceRequest {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface UntagResourceResponse {
}

export interface UpdateDeletionProtectionInput {
  readonly arn: string;
  readonly clientToken?: string;
  readonly deletionProtected: boolean;
}

export interface UpdateDeletionProtectionOutput {
}

export interface UpdateIncidentRecordInput {
  readonly arn: string;
  readonly chatChannel?: ChatChannel;
  readonly clientToken?: string;
  readonly impact?: number;
  readonly notificationTargets?: [];
  readonly status?: string;
  readonly summary?: string;
  readonly title?: string;
}

export interface UpdateIncidentRecordOutput {
}

export interface UpdateRelatedItemsInput {
  readonly clientToken?: string;
  readonly incidentRecordArn: string;
  readonly relatedItemsUpdate: RelatedItemsUpdate;
}

export interface UpdateRelatedItemsOutput {
}

export interface UpdateReplicationSetAction {
  readonly addRegionAction?: AddRegionAction;
  readonly deleteRegionAction?: DeleteRegionAction;
}

export interface UpdateReplicationSetInput {
  readonly actions: [];
  readonly arn: string;
  readonly clientToken?: string;
}

export interface UpdateReplicationSetOutput {
}

export interface UpdateResponsePlanInput {
  readonly actions?: [];
  readonly arn: string;
  readonly chatChannel?: ChatChannel;
  readonly clientToken?: string;
  readonly displayName?: string;
  readonly engagements?: [];
  readonly incidentTemplateDedupeString?: string;
  readonly incidentTemplateImpact?: number;
  readonly incidentTemplateNotificationTargets?: [];
  readonly incidentTemplateSummary?: string;
  readonly incidentTemplateTitle?: string;
}

export interface UpdateResponsePlanOutput {
}

export interface UpdateTimelineEventInput {
  readonly clientToken?: string;
  readonly eventData?: string;
  readonly eventId: string;
  readonly eventTime?: Date;
  readonly eventType?: string;
  readonly incidentRecordArn: string;
}

export interface UpdateTimelineEventOutput {
}

export interface ValidationException {
  readonly message: string;
}


