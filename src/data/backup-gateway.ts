/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AssociateGatewayToServer {
  readonly GatewayArn: string;
  readonly ServerArn: string;
}

export interface CreateGateway {
  readonly ActivationKey: string;
  readonly GatewayDisplayName: string;
  readonly GatewayType: string;
  readonly Tags?: [];
}

export interface DeleteGateway {
  readonly GatewayArn: string;
}

export interface DeleteHypervisor {
  readonly HypervisorArn: string;
}

export interface DisassociateGatewayFromServer {
  readonly GatewayArn: string;
}

export interface ImportHypervisorConfiguration {
  readonly Host: string;
  readonly KmsKeyArn?: string;
  readonly Name: string;
  readonly Password?: string;
  readonly Tags?: [];
  readonly Username?: string;
}

export interface ListGateways {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListHypervisors {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListTagsForResource {
  readonly ResourceArn: string;
}

export interface ListVirtualMachines {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface PutMaintenanceStartTime {
  readonly DayOfMonth?: number;
  readonly DayOfWeek?: number;
  readonly GatewayArn: string;
  readonly HourOfDay: number;
  readonly MinuteOfHour: number;
}

export interface TagResource {
  readonly ResourceARN: string;
  readonly Tags: [];
}

export interface TestHypervisorConfiguration {
  readonly GatewayArn: string;
  readonly Host: string;
  readonly Password?: string;
  readonly Username?: string;
}

export interface UntagResource {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}

export interface UpdateGatewayInformation {
  readonly GatewayArn: string;
  readonly GatewayDisplayName?: string;
}

export interface UpdateHypervisor {
  readonly Host?: string;
  readonly HypervisorArn: string;
  readonly Password?: string;
  readonly Username?: string;
}

export interface AccessDeniedException {
  readonly ErrorCode: string;
  readonly Message?: string;
}

export interface AssociateGatewayToServerInput {
  readonly GatewayArn: string;
  readonly ServerArn: string;
}

export interface AssociateGatewayToServerOutput {
  readonly GatewayArn?: string;
}

export interface ConflictException {
  readonly ErrorCode: string;
  readonly Message?: string;
}

export interface CreateGatewayInput {
  readonly ActivationKey: string;
  readonly GatewayDisplayName: string;
  readonly GatewayType: string;
  readonly Tags?: [];
}

export interface CreateGatewayOutput {
  readonly GatewayArn?: string;
}

export interface DeleteGatewayInput {
  readonly GatewayArn: string;
}

export interface DeleteGatewayOutput {
  readonly GatewayArn?: string;
}

export interface DeleteHypervisorInput {
  readonly HypervisorArn: string;
}

export interface DeleteHypervisorOutput {
  readonly HypervisorArn?: string;
}

export interface DisassociateGatewayFromServerInput {
  readonly GatewayArn: string;
}

export interface DisassociateGatewayFromServerOutput {
  readonly GatewayArn?: string;
}

export interface Gateway {
  readonly GatewayArn?: string;
  readonly GatewayDisplayName?: string;
  readonly GatewayType?: string;
  readonly HypervisorId?: string;
  readonly LastSeenTime?: Date;
}

export interface Hypervisor {
  readonly Host?: string;
  readonly HypervisorArn?: string;
  readonly KmsKeyArn?: string;
  readonly Name?: string;
  readonly State?: string;
}

export interface ImportHypervisorConfigurationInput {
  readonly Host: string;
  readonly KmsKeyArn?: string;
  readonly Name: string;
  readonly Password?: string;
  readonly Tags?: [];
  readonly Username?: string;
}

export interface ImportHypervisorConfigurationOutput {
  readonly HypervisorArn?: string;
}

export interface InternalServerException {
  readonly ErrorCode?: string;
  readonly Message?: string;
}

export interface ListGatewaysInput {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListGatewaysOutput {
  readonly Gateways?: [];
  readonly NextToken?: string;
}

export interface ListHypervisorsInput {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListHypervisorsOutput {
  readonly Hypervisors?: [];
  readonly NextToken?: string;
}

export interface ListTagsForResourceInput {
  readonly ResourceArn: string;
}

export interface ListTagsForResourceOutput {
  readonly ResourceArn?: string;
  readonly Tags?: [];
}

export interface ListVirtualMachinesInput {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListVirtualMachinesOutput {
  readonly NextToken?: string;
  readonly VirtualMachines?: [];
}

export interface PutMaintenanceStartTimeInput {
  readonly DayOfMonth?: number;
  readonly DayOfWeek?: number;
  readonly GatewayArn: string;
  readonly HourOfDay: number;
  readonly MinuteOfHour: number;
}

export interface PutMaintenanceStartTimeOutput {
  readonly GatewayArn?: string;
}

export interface ResourceNotFoundException {
  readonly ErrorCode?: string;
  readonly Message?: string;
}

export interface Tag {
  readonly Key: string;
  readonly Value: string;
}

export interface TagResourceInput {
  readonly ResourceARN: string;
  readonly Tags: [];
}

export interface TagResourceOutput {
  readonly ResourceARN?: string;
}

export interface TestHypervisorConfigurationInput {
  readonly GatewayArn: string;
  readonly Host: string;
  readonly Password?: string;
  readonly Username?: string;
}

export interface TestHypervisorConfigurationOutput {
}

export interface UntagResourceInput {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}

export interface UntagResourceOutput {
  readonly ResourceARN?: string;
}

export interface UpdateGatewayInformationInput {
  readonly GatewayArn: string;
  readonly GatewayDisplayName?: string;
}

export interface UpdateGatewayInformationOutput {
  readonly GatewayArn?: string;
}

export interface UpdateHypervisorInput {
  readonly Host?: string;
  readonly HypervisorArn: string;
  readonly Password?: string;
  readonly Username?: string;
}

export interface UpdateHypervisorOutput {
  readonly HypervisorArn?: string;
}

export interface ValidationException {
  readonly ErrorCode?: string;
  readonly Message?: string;
}

export interface VirtualMachine {
  readonly HostName?: string;
  readonly HypervisorId?: string;
  readonly LastBackupDate?: Date;
  readonly Name?: string;
  readonly Path?: string;
  readonly ResourceArn?: string;
}


