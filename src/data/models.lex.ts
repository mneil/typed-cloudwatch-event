/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CreateBotVersion {
  readonly name: string;
  readonly checksum?: string;
}

export interface CreateIntentVersion {
  readonly name: string;
  readonly checksum?: string;
}

export interface CreateSlotTypeVersion {
  readonly name: string;
  readonly checksum?: string;
}

export interface DeleteBot {
  readonly name: string;
}

export interface DeleteBotAlias {
  readonly name: string;
  readonly botName: string;
}

export interface DeleteBotChannelAssociation {
  readonly name: string;
  readonly botName: string;
  readonly botAlias: string;
}

export interface DeleteBotVersion {
  readonly name: string;
  readonly version: string;
}

export interface DeleteIntent {
  readonly name: string;
}

export interface DeleteIntentVersion {
  readonly name: string;
  readonly version: string;
}

export interface DeleteSlotType {
  readonly name: string;
}

export interface DeleteSlotTypeVersion {
  readonly name: string;
  readonly version: string;
}

export interface DeleteUtterances {
  readonly botName: string;
  readonly userId: string;
}

export interface GetBot {
  readonly name: string;
  readonly versionOrAlias: string;
}

export interface GetBotAlias {
  readonly name: string;
  readonly botName: string;
}

export interface GetBotAliases {
  readonly botName: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly nameContains?: string;
}

export interface GetBotChannelAssociation {
  readonly name: string;
  readonly botName: string;
  readonly botAlias: string;
}

export interface GetBotChannelAssociations {
  readonly botName: string;
  readonly botAlias: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly nameContains?: string;
}

export interface GetBotVersions {
  readonly name: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface GetBots {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly nameContains?: string;
}

export interface GetBuiltinIntent {
  readonly signature: string;
}

export interface GetBuiltinIntents {
  readonly locale?: string;
  readonly signatureContains?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface GetBuiltinSlotTypes {
  readonly locale?: string;
  readonly signatureContains?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface GetExport {
  readonly name: string;
  readonly version: string;
  readonly resourceType: string;
  readonly exportType: string;
}

export interface GetImport {
  readonly importId: string;
}

export interface GetIntent {
  readonly name: string;
  readonly version: string;
}

export interface GetIntentVersions {
  readonly name: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface GetIntents {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly nameContains?: string;
}

export interface GetMigration {
  readonly migrationId: string;
}

export interface GetMigrations {
  readonly sortByAttribute?: string;
  readonly sortByOrder?: string;
  readonly v1BotNameContains?: string;
  readonly migrationStatusEquals?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface GetSlotType {
  readonly name: string;
  readonly version: string;
}

export interface GetSlotTypeVersions {
  readonly name: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface GetSlotTypes {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly nameContains?: string;
}

export interface GetUtterancesView {
  readonly botName: string;
  readonly botVersions: [];
  readonly statusType: string;
}

export interface ListTagsForResource {
  readonly resourceArn: string;
}

export interface PutBot {
  readonly name: string;
  readonly description?: string;
  readonly intents?: [];
  readonly enableModelImprovements?: boolean;
  readonly nluIntentConfidenceThreshold?: unknown;
  readonly clarificationPrompt?: Prompt;
  readonly abortStatement?: Statement;
  readonly idleSessionTTLInSeconds?: number;
  readonly voiceId?: string;
  readonly checksum?: string;
  readonly processBehavior?: string;
  readonly locale: string;
  readonly childDirected: boolean;
  readonly detectSentiment?: boolean;
  readonly createVersion?: boolean;
  readonly tags?: [];
}

export interface PutBotAlias {
  readonly name: string;
  readonly description?: string;
  readonly botVersion: string;
  readonly botName: string;
  readonly checksum?: string;
  readonly conversationLogs?: ConversationLogsRequest;
  readonly tags?: [];
}

export interface PutIntent {
  readonly name: string;
  readonly description?: string;
  readonly slots?: [];
  readonly sampleUtterances?: [];
  readonly confirmationPrompt?: Prompt;
  readonly rejectionStatement?: Statement;
  readonly followUpPrompt?: FollowUpPrompt;
  readonly conclusionStatement?: Statement;
  readonly dialogCodeHook?: CodeHook;
  readonly fulfillmentActivity?: FulfillmentActivity;
  readonly parentIntentSignature?: string;
  readonly checksum?: string;
  readonly createVersion?: boolean;
  readonly kendraConfiguration?: KendraConfiguration;
  readonly inputContexts?: [];
  readonly outputContexts?: [];
}

export interface PutSlotType {
  readonly name: string;
  readonly description?: string;
  readonly enumerationValues?: [];
  readonly checksum?: string;
  readonly valueSelectionStrategy?: string;
  readonly createVersion?: boolean;
  readonly parentSlotTypeSignature?: string;
  readonly slotTypeConfigurations?: [];
}

export interface StartImport {
  readonly payload: unknown;
  readonly resourceType: string;
  readonly mergeStrategy: string;
  readonly tags?: [];
}

export interface StartMigration {
  readonly v1BotName: string;
  readonly v1BotVersion: string;
  readonly v2BotName: string;
  readonly v2BotRole: string;
  readonly migrationStrategy: string;
}

export interface TagResource {
  readonly resourceArn: string;
  readonly tags: [];
}

export interface UntagResource {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface AccessDeniedException {
  readonly message?: string;
}

export interface BadRequestException {
  readonly message?: string;
}

export interface BotAliasMetadata {
  readonly name?: string;
  readonly description?: string;
  readonly botVersion?: string;
  readonly botName?: string;
  readonly lastUpdatedDate?: Date;
  readonly createdDate?: Date;
  readonly checksum?: string;
  readonly conversationLogs?: ConversationLogsResponse;
}

export interface BotChannelAssociation {
  readonly name?: string;
  readonly description?: string;
  readonly botAlias?: string;
  readonly botName?: string;
  readonly createdDate?: Date;
  readonly type?: string;
  readonly botConfiguration?: {[key: string]: any};
  readonly status?: string;
  readonly failureReason?: string;
}

export interface BotMetadata {
  readonly name?: string;
  readonly description?: string;
  readonly status?: string;
  readonly lastUpdatedDate?: Date;
  readonly createdDate?: Date;
  readonly version?: string;
}

export interface BuiltinIntentMetadata {
  readonly signature?: string;
  readonly supportedLocales?: [];
}

export interface BuiltinIntentSlot {
  readonly name?: string;
}

export interface BuiltinSlotTypeMetadata {
  readonly signature?: string;
  readonly supportedLocales?: [];
}

export interface CodeHook {
  readonly uri: string;
  readonly messageVersion: string;
}

export interface ConflictException {
  readonly message?: string;
}

export interface ConversationLogsRequest {
  readonly logSettings: [];
  readonly iamRoleArn: string;
}

export interface ConversationLogsResponse {
  readonly logSettings?: [];
  readonly iamRoleArn?: string;
}

export interface CreateBotVersionRequest {
  readonly name: string;
  readonly checksum?: string;
}

export interface CreateBotVersionResponse {
  readonly name?: string;
  readonly description?: string;
  readonly intents?: [];
  readonly clarificationPrompt?: Prompt;
  readonly abortStatement?: Statement;
  readonly status?: string;
  readonly failureReason?: string;
  readonly lastUpdatedDate?: Date;
  readonly createdDate?: Date;
  readonly idleSessionTTLInSeconds?: number;
  readonly voiceId?: string;
  readonly checksum?: string;
  readonly version?: string;
  readonly locale?: string;
  readonly childDirected?: boolean;
  readonly enableModelImprovements?: boolean;
  readonly detectSentiment?: boolean;
}

export interface CreateIntentVersionRequest {
  readonly name: string;
  readonly checksum?: string;
}

export interface CreateIntentVersionResponse {
  readonly name?: string;
  readonly description?: string;
  readonly slots?: [];
  readonly sampleUtterances?: [];
  readonly confirmationPrompt?: Prompt;
  readonly rejectionStatement?: Statement;
  readonly followUpPrompt?: FollowUpPrompt;
  readonly conclusionStatement?: Statement;
  readonly dialogCodeHook?: CodeHook;
  readonly fulfillmentActivity?: FulfillmentActivity;
  readonly parentIntentSignature?: string;
  readonly lastUpdatedDate?: Date;
  readonly createdDate?: Date;
  readonly version?: string;
  readonly checksum?: string;
  readonly kendraConfiguration?: KendraConfiguration;
  readonly inputContexts?: [];
  readonly outputContexts?: [];
}

export interface CreateSlotTypeVersionRequest {
  readonly name: string;
  readonly checksum?: string;
}

export interface CreateSlotTypeVersionResponse {
  readonly name?: string;
  readonly description?: string;
  readonly enumerationValues?: [];
  readonly lastUpdatedDate?: Date;
  readonly createdDate?: Date;
  readonly version?: string;
  readonly checksum?: string;
  readonly valueSelectionStrategy?: string;
  readonly parentSlotTypeSignature?: string;
  readonly slotTypeConfigurations?: [];
}

export interface DeleteBotAliasRequest {
  readonly name: string;
  readonly botName: string;
}

export interface DeleteBotChannelAssociationRequest {
  readonly name: string;
  readonly botName: string;
  readonly botAlias: string;
}

export interface DeleteBotRequest {
  readonly name: string;
}

export interface DeleteBotVersionRequest {
  readonly name: string;
  readonly version: string;
}

export interface DeleteIntentRequest {
  readonly name: string;
}

export interface DeleteIntentVersionRequest {
  readonly name: string;
  readonly version: string;
}

export interface DeleteSlotTypeRequest {
  readonly name: string;
}

export interface DeleteSlotTypeVersionRequest {
  readonly name: string;
  readonly version: string;
}

export interface DeleteUtterancesRequest {
  readonly botName: string;
  readonly userId: string;
}

export interface EnumerationValue {
  readonly value: string;
  readonly synonyms?: [];
}

export interface FollowUpPrompt {
  readonly prompt: Prompt;
  readonly rejectionStatement: Statement;
}

export interface FulfillmentActivity {
  readonly type: string;
  readonly codeHook?: CodeHook;
}

export interface GetBotAliasRequest {
  readonly name: string;
  readonly botName: string;
}

export interface GetBotAliasResponse {
  readonly name?: string;
  readonly description?: string;
  readonly botVersion?: string;
  readonly botName?: string;
  readonly lastUpdatedDate?: Date;
  readonly createdDate?: Date;
  readonly checksum?: string;
  readonly conversationLogs?: ConversationLogsResponse;
}

export interface GetBotAliasesRequest {
  readonly botName: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly nameContains?: string;
}

export interface GetBotAliasesResponse {
  readonly BotAliases?: [];
  readonly nextToken?: string;
}

export interface GetBotChannelAssociationRequest {
  readonly name: string;
  readonly botName: string;
  readonly botAlias: string;
}

export interface GetBotChannelAssociationResponse {
  readonly name?: string;
  readonly description?: string;
  readonly botAlias?: string;
  readonly botName?: string;
  readonly createdDate?: Date;
  readonly type?: string;
  readonly botConfiguration?: {[key: string]: any};
  readonly status?: string;
  readonly failureReason?: string;
}

export interface GetBotChannelAssociationsRequest {
  readonly botName: string;
  readonly botAlias: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly nameContains?: string;
}

export interface GetBotChannelAssociationsResponse {
  readonly botChannelAssociations?: [];
  readonly nextToken?: string;
}

export interface GetBotRequest {
  readonly name: string;
  readonly versionOrAlias: string;
}

export interface GetBotResponse {
  readonly name?: string;
  readonly description?: string;
  readonly intents?: [];
  readonly enableModelImprovements?: boolean;
  readonly nluIntentConfidenceThreshold?: unknown;
  readonly clarificationPrompt?: Prompt;
  readonly abortStatement?: Statement;
  readonly status?: string;
  readonly failureReason?: string;
  readonly lastUpdatedDate?: Date;
  readonly createdDate?: Date;
  readonly idleSessionTTLInSeconds?: number;
  readonly voiceId?: string;
  readonly checksum?: string;
  readonly version?: string;
  readonly locale?: string;
  readonly childDirected?: boolean;
  readonly detectSentiment?: boolean;
}

export interface GetBotVersionsRequest {
  readonly name: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface GetBotVersionsResponse {
  readonly bots?: [];
  readonly nextToken?: string;
}

export interface GetBotsRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly nameContains?: string;
}

export interface GetBotsResponse {
  readonly bots?: [];
  readonly nextToken?: string;
}

export interface GetBuiltinIntentRequest {
  readonly signature: string;
}

export interface GetBuiltinIntentResponse {
  readonly signature?: string;
  readonly supportedLocales?: [];
  readonly slots?: [];
}

export interface GetBuiltinIntentsRequest {
  readonly locale?: string;
  readonly signatureContains?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface GetBuiltinIntentsResponse {
  readonly intents?: [];
  readonly nextToken?: string;
}

export interface GetBuiltinSlotTypesRequest {
  readonly locale?: string;
  readonly signatureContains?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface GetBuiltinSlotTypesResponse {
  readonly slotTypes?: [];
  readonly nextToken?: string;
}

export interface GetExportRequest {
  readonly name: string;
  readonly version: string;
  readonly resourceType: string;
  readonly exportType: string;
}

export interface GetExportResponse {
  readonly name?: string;
  readonly version?: string;
  readonly resourceType?: string;
  readonly exportType?: string;
  readonly exportStatus?: string;
  readonly failureReason?: string;
  readonly url?: string;
}

export interface GetImportRequest {
  readonly importId: string;
}

export interface GetImportResponse {
  readonly name?: string;
  readonly resourceType?: string;
  readonly mergeStrategy?: string;
  readonly importId?: string;
  readonly importStatus?: string;
  readonly failureReason?: [];
  readonly createdDate?: Date;
}

export interface GetIntentRequest {
  readonly name: string;
  readonly version: string;
}

export interface GetIntentResponse {
  readonly name?: string;
  readonly description?: string;
  readonly slots?: [];
  readonly sampleUtterances?: [];
  readonly confirmationPrompt?: Prompt;
  readonly rejectionStatement?: Statement;
  readonly followUpPrompt?: FollowUpPrompt;
  readonly conclusionStatement?: Statement;
  readonly dialogCodeHook?: CodeHook;
  readonly fulfillmentActivity?: FulfillmentActivity;
  readonly parentIntentSignature?: string;
  readonly lastUpdatedDate?: Date;
  readonly createdDate?: Date;
  readonly version?: string;
  readonly checksum?: string;
  readonly kendraConfiguration?: KendraConfiguration;
  readonly inputContexts?: [];
  readonly outputContexts?: [];
}

export interface GetIntentVersionsRequest {
  readonly name: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface GetIntentVersionsResponse {
  readonly intents?: [];
  readonly nextToken?: string;
}

export interface GetIntentsRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly nameContains?: string;
}

export interface GetIntentsResponse {
  readonly intents?: [];
  readonly nextToken?: string;
}

export interface GetMigrationRequest {
  readonly migrationId: string;
}

export interface GetMigrationResponse {
  readonly migrationId?: string;
  readonly v1BotName?: string;
  readonly v1BotVersion?: string;
  readonly v1BotLocale?: string;
  readonly v2BotId?: string;
  readonly v2BotRole?: string;
  readonly migrationStatus?: string;
  readonly migrationStrategy?: string;
  readonly migrationTimestamp?: Date;
  readonly alerts?: [];
}

export interface GetMigrationsRequest {
  readonly sortByAttribute?: string;
  readonly sortByOrder?: string;
  readonly v1BotNameContains?: string;
  readonly migrationStatusEquals?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface GetMigrationsResponse {
  readonly migrationSummaries?: [];
  readonly nextToken?: string;
}

export interface GetSlotTypeRequest {
  readonly name: string;
  readonly version: string;
}

export interface GetSlotTypeResponse {
  readonly name?: string;
  readonly description?: string;
  readonly enumerationValues?: [];
  readonly lastUpdatedDate?: Date;
  readonly createdDate?: Date;
  readonly version?: string;
  readonly checksum?: string;
  readonly valueSelectionStrategy?: string;
  readonly parentSlotTypeSignature?: string;
  readonly slotTypeConfigurations?: [];
}

export interface GetSlotTypeVersionsRequest {
  readonly name: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface GetSlotTypeVersionsResponse {
  readonly slotTypes?: [];
  readonly nextToken?: string;
}

export interface GetSlotTypesRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly nameContains?: string;
}

export interface GetSlotTypesResponse {
  readonly slotTypes?: [];
  readonly nextToken?: string;
}

export interface GetUtterancesViewRequest {
  readonly botName: string;
  readonly botVersions: [];
  readonly statusType: string;
}

export interface GetUtterancesViewResponse {
  readonly botName?: string;
  readonly utterances?: [];
}

export interface InputContext {
  readonly name: string;
}

export interface Intent {
  readonly intentName: string;
  readonly intentVersion: string;
}

export interface IntentMetadata {
  readonly name?: string;
  readonly description?: string;
  readonly lastUpdatedDate?: Date;
  readonly createdDate?: Date;
  readonly version?: string;
}

export interface InternalFailureException {
  readonly message?: string;
}

export interface KendraConfiguration {
  readonly kendraIndex: string;
  readonly queryFilterString?: string;
  readonly role: string;
}

export interface LimitExceededException {
  readonly retryAfterSeconds?: string;
  readonly message?: string;
}

export interface ListTagsForResourceRequest {
  readonly resourceArn: string;
}

export interface ListTagsForResourceResponse {
  readonly tags?: [];
}

export interface LogSettingsRequest {
  readonly logType: string;
  readonly destination: string;
  readonly kmsKeyArn?: string;
  readonly resourceArn: string;
}

export interface LogSettingsResponse {
  readonly logType?: string;
  readonly destination?: string;
  readonly kmsKeyArn?: string;
  readonly resourceArn?: string;
  readonly resourcePrefix?: string;
}

export interface Message {
  readonly contentType: string;
  readonly content: string;
  readonly groupNumber?: number;
}

export interface MigrationAlert {
  readonly type?: string;
  readonly message?: string;
  readonly details?: [];
  readonly referenceURLs?: [];
}

export interface MigrationSummary {
  readonly migrationId?: string;
  readonly v1BotName?: string;
  readonly v1BotVersion?: string;
  readonly v1BotLocale?: string;
  readonly v2BotId?: string;
  readonly v2BotRole?: string;
  readonly migrationStatus?: string;
  readonly migrationStrategy?: string;
  readonly migrationTimestamp?: Date;
}

export interface NotFoundException {
  readonly message?: string;
}

export interface OutputContext {
  readonly name: string;
  readonly timeToLiveInSeconds: number;
  readonly turnsToLive: number;
}

export interface PreconditionFailedException {
  readonly message?: string;
}

export interface Prompt {
  readonly messages: [];
  readonly maxAttempts: number;
  readonly responseCard?: string;
}

export interface PutBotAliasRequest {
  readonly name: string;
  readonly description?: string;
  readonly botVersion: string;
  readonly botName: string;
  readonly checksum?: string;
  readonly conversationLogs?: ConversationLogsRequest;
  readonly tags?: [];
}

export interface PutBotAliasResponse {
  readonly name?: string;
  readonly description?: string;
  readonly botVersion?: string;
  readonly botName?: string;
  readonly lastUpdatedDate?: Date;
  readonly createdDate?: Date;
  readonly checksum?: string;
  readonly conversationLogs?: ConversationLogsResponse;
  readonly tags?: [];
}

export interface PutBotRequest {
  readonly name: string;
  readonly description?: string;
  readonly intents?: [];
  readonly enableModelImprovements?: boolean;
  readonly nluIntentConfidenceThreshold?: unknown;
  readonly clarificationPrompt?: Prompt;
  readonly abortStatement?: Statement;
  readonly idleSessionTTLInSeconds?: number;
  readonly voiceId?: string;
  readonly checksum?: string;
  readonly processBehavior?: string;
  readonly locale: string;
  readonly childDirected: boolean;
  readonly detectSentiment?: boolean;
  readonly createVersion?: boolean;
  readonly tags?: [];
}

export interface PutBotResponse {
  readonly name?: string;
  readonly description?: string;
  readonly intents?: [];
  readonly enableModelImprovements?: boolean;
  readonly nluIntentConfidenceThreshold?: unknown;
  readonly clarificationPrompt?: Prompt;
  readonly abortStatement?: Statement;
  readonly status?: string;
  readonly failureReason?: string;
  readonly lastUpdatedDate?: Date;
  readonly createdDate?: Date;
  readonly idleSessionTTLInSeconds?: number;
  readonly voiceId?: string;
  readonly checksum?: string;
  readonly version?: string;
  readonly locale?: string;
  readonly childDirected?: boolean;
  readonly createVersion?: boolean;
  readonly detectSentiment?: boolean;
  readonly tags?: [];
}

export interface PutIntentRequest {
  readonly name: string;
  readonly description?: string;
  readonly slots?: [];
  readonly sampleUtterances?: [];
  readonly confirmationPrompt?: Prompt;
  readonly rejectionStatement?: Statement;
  readonly followUpPrompt?: FollowUpPrompt;
  readonly conclusionStatement?: Statement;
  readonly dialogCodeHook?: CodeHook;
  readonly fulfillmentActivity?: FulfillmentActivity;
  readonly parentIntentSignature?: string;
  readonly checksum?: string;
  readonly createVersion?: boolean;
  readonly kendraConfiguration?: KendraConfiguration;
  readonly inputContexts?: [];
  readonly outputContexts?: [];
}

export interface PutIntentResponse {
  readonly name?: string;
  readonly description?: string;
  readonly slots?: [];
  readonly sampleUtterances?: [];
  readonly confirmationPrompt?: Prompt;
  readonly rejectionStatement?: Statement;
  readonly followUpPrompt?: FollowUpPrompt;
  readonly conclusionStatement?: Statement;
  readonly dialogCodeHook?: CodeHook;
  readonly fulfillmentActivity?: FulfillmentActivity;
  readonly parentIntentSignature?: string;
  readonly lastUpdatedDate?: Date;
  readonly createdDate?: Date;
  readonly version?: string;
  readonly checksum?: string;
  readonly createVersion?: boolean;
  readonly kendraConfiguration?: KendraConfiguration;
  readonly inputContexts?: [];
  readonly outputContexts?: [];
}

export interface PutSlotTypeRequest {
  readonly name: string;
  readonly description?: string;
  readonly enumerationValues?: [];
  readonly checksum?: string;
  readonly valueSelectionStrategy?: string;
  readonly createVersion?: boolean;
  readonly parentSlotTypeSignature?: string;
  readonly slotTypeConfigurations?: [];
}

export interface PutSlotTypeResponse {
  readonly name?: string;
  readonly description?: string;
  readonly enumerationValues?: [];
  readonly lastUpdatedDate?: Date;
  readonly createdDate?: Date;
  readonly version?: string;
  readonly checksum?: string;
  readonly valueSelectionStrategy?: string;
  readonly createVersion?: boolean;
  readonly parentSlotTypeSignature?: string;
  readonly slotTypeConfigurations?: [];
}

export interface ResourceInUseException {
  readonly referenceType?: string;
  readonly exampleReference?: ResourceReference;
}

export interface ResourceReference {
  readonly name?: string;
  readonly version?: string;
}

export interface Slot {
  readonly name: string;
  readonly description?: string;
  readonly slotConstraint: string;
  readonly slotType?: string;
  readonly slotTypeVersion?: string;
  readonly valueElicitationPrompt?: Prompt;
  readonly priority?: number;
  readonly sampleUtterances?: [];
  readonly responseCard?: string;
  readonly obfuscationSetting?: string;
  readonly defaultValueSpec?: SlotDefaultValueSpec;
}

export interface SlotDefaultValue {
  readonly defaultValue: string;
}

export interface SlotDefaultValueSpec {
  readonly defaultValueList: [];
}

export interface SlotTypeConfiguration {
  readonly regexConfiguration?: SlotTypeRegexConfiguration;
}

export interface SlotTypeMetadata {
  readonly name?: string;
  readonly description?: string;
  readonly lastUpdatedDate?: Date;
  readonly createdDate?: Date;
  readonly version?: string;
}

export interface SlotTypeRegexConfiguration {
  readonly pattern: string;
}

export interface StartImportRequest {
  readonly payload: unknown;
  readonly resourceType: string;
  readonly mergeStrategy: string;
  readonly tags?: [];
}

export interface StartImportResponse {
  readonly name?: string;
  readonly resourceType?: string;
  readonly mergeStrategy?: string;
  readonly importId?: string;
  readonly importStatus?: string;
  readonly tags?: [];
  readonly createdDate?: Date;
}

export interface StartMigrationRequest {
  readonly v1BotName: string;
  readonly v1BotVersion: string;
  readonly v2BotName: string;
  readonly v2BotRole: string;
  readonly migrationStrategy: string;
}

export interface StartMigrationResponse {
  readonly v1BotName?: string;
  readonly v1BotVersion?: string;
  readonly v1BotLocale?: string;
  readonly v2BotId?: string;
  readonly v2BotRole?: string;
  readonly migrationId?: string;
  readonly migrationStrategy?: string;
  readonly migrationTimestamp?: Date;
}

export interface Statement {
  readonly messages: [];
  readonly responseCard?: string;
}

export interface Tag {
  readonly key: string;
  readonly value: string;
}

export interface TagResourceRequest {
  readonly resourceArn: string;
  readonly tags: [];
}

export interface TagResourceResponse {
}

export interface UntagResourceRequest {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface UntagResourceResponse {
}

export interface UtteranceData {
  readonly utteranceString?: string;
  readonly count?: number;
  readonly distinctUsers?: number;
  readonly firstUtteredDate?: Date;
  readonly lastUtteredDate?: Date;
}

export interface UtteranceList {
  readonly botVersion?: string;
  readonly utterances?: [];
}


