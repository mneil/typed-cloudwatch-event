/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AddAssociation {
  readonly SourceArn: string;
  readonly DestinationArn: string;
  readonly AssociationType: string;
}
export interface AddTags {
  readonly ResourceArn: string;
  readonly Tags: [];
}
export interface AssociateTrialComponent {
  readonly TrialComponentName: string;
  readonly TrialName: string;
}
export interface BatchDescribeModelPackage {
  readonly ModelPackageArnList: [];
}
export interface CreateAction {
  readonly ActionName: string;
  readonly Source: ActionSource;
  readonly ActionType: string;
  readonly Description: string;
  readonly Status: string;
  readonly Properties: {[key: string]: any};
  readonly MetadataProperties: MetadataProperties;
  readonly Tags: [];
}
export interface CreateAlgorithm {
  readonly AlgorithmName: string;
  readonly AlgorithmDescription: string;
  readonly TrainingSpecification: TrainingSpecification;
  readonly InferenceSpecification: InferenceSpecification;
  readonly ValidationSpecification: AlgorithmValidationSpecification;
  readonly CertifyForMarketplace: boolean;
  readonly Tags: [];
}
export interface CreateApp {
  readonly DomainId: string;
  readonly UserProfileName: string;
  readonly AppType: string;
  readonly AppName: string;
  readonly Tags: [];
  readonly ResourceSpec: ResourceSpec;
}
export interface CreateAppImageConfig {
  readonly AppImageConfigName: string;
  readonly Tags: [];
  readonly KernelGatewayImageConfig: KernelGatewayImageConfig;
}
export interface CreateArtifact {
  readonly ArtifactName: string;
  readonly Source: ArtifactSource;
  readonly ArtifactType: string;
  readonly Properties: {[key: string]: any};
  readonly MetadataProperties: MetadataProperties;
  readonly Tags: [];
}
export interface CreateAutoMLJob {
  readonly AutoMLJobName: string;
  readonly InputDataConfig: [];
  readonly OutputDataConfig: AutoMLOutputDataConfig;
  readonly ProblemType: string;
  readonly AutoMLJobObjective: AutoMLJobObjective;
  readonly AutoMLJobConfig: AutoMLJobConfig;
  readonly RoleArn: string;
  readonly GenerateCandidateDefinitionsOnly: boolean;
  readonly Tags: [];
  readonly ModelDeployConfig: ModelDeployConfig;
}
export interface CreateCodeRepository {
  readonly CodeRepositoryName: string;
  readonly GitConfig: GitConfig;
  readonly Tags: [];
}
export interface CreateCompilationJob {
  readonly CompilationJobName: string;
  readonly RoleArn: string;
  readonly ModelPackageVersionArn: string;
  readonly InputConfig: InputConfig;
  readonly OutputConfig: OutputConfig;
  readonly VpcConfig: NeoVpcConfig;
  readonly StoppingCondition: StoppingCondition;
  readonly Tags: [];
}
export interface CreateContext {
  readonly ContextName: string;
  readonly Source: ContextSource;
  readonly ContextType: string;
  readonly Description: string;
  readonly Properties: {[key: string]: any};
  readonly Tags: [];
}
export interface CreateDataQualityJobDefinition {
  readonly JobDefinitionName: string;
  readonly DataQualityBaselineConfig: DataQualityBaselineConfig;
  readonly DataQualityAppSpecification: DataQualityAppSpecification;
  readonly DataQualityJobInput: DataQualityJobInput;
  readonly DataQualityJobOutputConfig: MonitoringOutputConfig;
  readonly JobResources: MonitoringResources;
  readonly NetworkConfig: MonitoringNetworkConfig;
  readonly RoleArn: string;
  readonly StoppingCondition: MonitoringStoppingCondition;
  readonly Tags: [];
}
export interface CreateDeviceFleet {
  readonly DeviceFleetName: string;
  readonly RoleArn: string;
  readonly Description: string;
  readonly OutputConfig: EdgeOutputConfig;
  readonly Tags: [];
  readonly EnableIotRoleAlias: boolean;
}
export interface CreateDomain {
  readonly DomainName: string;
  readonly AuthMode: string;
  readonly DefaultUserSettings: UserSettings;
  readonly SubnetIds: [];
  readonly VpcId: string;
  readonly Tags: [];
  readonly AppNetworkAccessType: string;
  readonly HomeEfsFileSystemKmsKeyId: string;
  readonly KmsKeyId: string;
  readonly AppSecurityGroupManagement: string;
  readonly DomainSettings: DomainSettings;
}
export interface CreateEdgePackagingJob {
  readonly EdgePackagingJobName: string;
  readonly CompilationJobName: string;
  readonly ModelName: string;
  readonly ModelVersion: string;
  readonly RoleArn: string;
  readonly OutputConfig: EdgeOutputConfig;
  readonly ResourceKey: string;
  readonly Tags: [];
}
export interface CreateEndpoint {
  readonly EndpointName: string;
  readonly EndpointConfigName: string;
  readonly DeploymentConfig: DeploymentConfig;
  readonly Tags: [];
}
export interface CreateEndpointConfig {
  readonly EndpointConfigName: string;
  readonly ProductionVariants: [];
  readonly DataCaptureConfig: DataCaptureConfig;
  readonly Tags: [];
  readonly KmsKeyId: string;
  readonly AsyncInferenceConfig: AsyncInferenceConfig;
}
export interface CreateExperiment {
  readonly ExperimentName: string;
  readonly DisplayName: string;
  readonly Description: string;
  readonly Tags: [];
}
export interface CreateFeatureGroup {
  readonly FeatureGroupName: string;
  readonly RecordIdentifierFeatureName: string;
  readonly EventTimeFeatureName: string;
  readonly FeatureDefinitions: [];
  readonly OnlineStoreConfig: OnlineStoreConfig;
  readonly OfflineStoreConfig: OfflineStoreConfig;
  readonly RoleArn: string;
  readonly Description: string;
  readonly Tags: [];
}
export interface CreateFlowDefinition {
  readonly FlowDefinitionName: string;
  readonly HumanLoopRequestSource: HumanLoopRequestSource;
  readonly HumanLoopActivationConfig: HumanLoopActivationConfig;
  readonly HumanLoopConfig: HumanLoopConfig;
  readonly OutputConfig: FlowDefinitionOutputConfig;
  readonly RoleArn: string;
  readonly Tags: [];
}
export interface CreateHumanTaskUi {
  readonly HumanTaskUiName: string;
  readonly UiTemplate: UiTemplate;
  readonly Tags: [];
}
export interface CreateHyperParameterTuningJob {
  readonly HyperParameterTuningJobName: string;
  readonly HyperParameterTuningJobConfig: HyperParameterTuningJobConfig;
  readonly TrainingJobDefinition: HyperParameterTrainingJobDefinition;
  readonly TrainingJobDefinitions: [];
  readonly WarmStartConfig: HyperParameterTuningJobWarmStartConfig;
  readonly Tags: [];
}
export interface CreateImage {
  readonly Description: string;
  readonly DisplayName: string;
  readonly ImageName: string;
  readonly RoleArn: string;
  readonly Tags: [];
}
export interface CreateImageVersion {
  readonly BaseImage: string;
  readonly ClientToken: string;
  readonly ImageName: string;
}
export interface CreateInferenceRecommendationsJob {
  readonly JobName: string;
  readonly JobType: string;
  readonly RoleArn: string;
  readonly InputConfig: RecommendationJobInputConfig;
  readonly JobDescription: string;
  readonly StoppingConditions: RecommendationJobStoppingConditions;
  readonly Tags: [];
}
export interface CreateLabelingJob {
  readonly LabelingJobName: string;
  readonly LabelAttributeName: string;
  readonly InputConfig: LabelingJobInputConfig;
  readonly OutputConfig: LabelingJobOutputConfig;
  readonly RoleArn: string;
  readonly LabelCategoryConfigS3Uri: string;
  readonly StoppingConditions: LabelingJobStoppingConditions;
  readonly LabelingJobAlgorithmsConfig: LabelingJobAlgorithmsConfig;
  readonly HumanTaskConfig: HumanTaskConfig;
  readonly Tags: [];
}
export interface CreateModel {
  readonly ModelName: string;
  readonly PrimaryContainer: ContainerDefinition;
  readonly Containers: [];
  readonly InferenceExecutionConfig: InferenceExecutionConfig;
  readonly ExecutionRoleArn: string;
  readonly Tags: [];
  readonly VpcConfig: VpcConfig;
  readonly EnableNetworkIsolation: boolean;
}
export interface CreateModelBiasJobDefinition {
  readonly JobDefinitionName: string;
  readonly ModelBiasBaselineConfig: ModelBiasBaselineConfig;
  readonly ModelBiasAppSpecification: ModelBiasAppSpecification;
  readonly ModelBiasJobInput: ModelBiasJobInput;
  readonly ModelBiasJobOutputConfig: MonitoringOutputConfig;
  readonly JobResources: MonitoringResources;
  readonly NetworkConfig: MonitoringNetworkConfig;
  readonly RoleArn: string;
  readonly StoppingCondition: MonitoringStoppingCondition;
  readonly Tags: [];
}
export interface CreateModelExplainabilityJobDefinition {
  readonly JobDefinitionName: string;
  readonly ModelExplainabilityBaselineConfig: ModelExplainabilityBaselineConfig;
  readonly ModelExplainabilityAppSpecification: ModelExplainabilityAppSpecification;
  readonly ModelExplainabilityJobInput: ModelExplainabilityJobInput;
  readonly ModelExplainabilityJobOutputConfig: MonitoringOutputConfig;
  readonly JobResources: MonitoringResources;
  readonly NetworkConfig: MonitoringNetworkConfig;
  readonly RoleArn: string;
  readonly StoppingCondition: MonitoringStoppingCondition;
  readonly Tags: [];
}
export interface CreateModelPackage {
  readonly ModelPackageName: string;
  readonly ModelPackageGroupName: string;
  readonly ModelPackageDescription: string;
  readonly InferenceSpecification: InferenceSpecification;
  readonly ValidationSpecification: ModelPackageValidationSpecification;
  readonly SourceAlgorithmSpecification: SourceAlgorithmSpecification;
  readonly CertifyForMarketplace: boolean;
  readonly Tags: [];
  readonly ModelApprovalStatus: string;
  readonly MetadataProperties: MetadataProperties;
  readonly ModelMetrics: ModelMetrics;
  readonly ClientToken: string;
  readonly CustomerMetadataProperties: {[key: string]: any};
  readonly DriftCheckBaselines: DriftCheckBaselines;
  readonly Domain: string;
  readonly Task: string;
  readonly SamplePayloadUrl: string;
  readonly AdditionalInferenceSpecifications: [];
}
export interface CreateModelPackageGroup {
  readonly ModelPackageGroupName: string;
  readonly ModelPackageGroupDescription: string;
  readonly Tags: [];
}
export interface CreateModelQualityJobDefinition {
  readonly JobDefinitionName: string;
  readonly ModelQualityBaselineConfig: ModelQualityBaselineConfig;
  readonly ModelQualityAppSpecification: ModelQualityAppSpecification;
  readonly ModelQualityJobInput: ModelQualityJobInput;
  readonly ModelQualityJobOutputConfig: MonitoringOutputConfig;
  readonly JobResources: MonitoringResources;
  readonly NetworkConfig: MonitoringNetworkConfig;
  readonly RoleArn: string;
  readonly StoppingCondition: MonitoringStoppingCondition;
  readonly Tags: [];
}
export interface CreateMonitoringSchedule {
  readonly MonitoringScheduleName: string;
  readonly MonitoringScheduleConfig: MonitoringScheduleConfig;
  readonly Tags: [];
}
export interface CreateNotebookInstance {
  readonly NotebookInstanceName: string;
  readonly InstanceType: string;
  readonly SubnetId: string;
  readonly SecurityGroupIds: [];
  readonly RoleArn: string;
  readonly KmsKeyId: string;
  readonly Tags: [];
  readonly LifecycleConfigName: string;
  readonly DirectInternetAccess: string;
  readonly VolumeSizeInGB: number;
  readonly AcceleratorTypes: [];
  readonly DefaultCodeRepository: string;
  readonly AdditionalCodeRepositories: [];
  readonly RootAccess: string;
  readonly PlatformIdentifier: string;
}
export interface CreateNotebookInstanceLifecycleConfig {
  readonly NotebookInstanceLifecycleConfigName: string;
  readonly OnCreate: [];
  readonly OnStart: [];
}
export interface CreatePipeline {
  readonly PipelineName: string;
  readonly PipelineDisplayName: string;
  readonly PipelineDefinition: string;
  readonly PipelineDescription: string;
  readonly ClientRequestToken: string;
  readonly RoleArn: string;
  readonly Tags: [];
}
export interface CreatePresignedDomainUrl {
  readonly DomainId: string;
  readonly UserProfileName: string;
  readonly SessionExpirationDurationInSeconds: number;
  readonly ExpiresInSeconds: number;
}
export interface CreatePresignedNotebookInstanceUrl {
  readonly NotebookInstanceName: string;
  readonly SessionExpirationDurationInSeconds: number;
}
export interface CreateProcessingJob {
  readonly ProcessingInputs: [];
  readonly ProcessingOutputConfig: ProcessingOutputConfig;
  readonly ProcessingJobName: string;
  readonly ProcessingResources: ProcessingResources;
  readonly StoppingCondition: ProcessingStoppingCondition;
  readonly AppSpecification: AppSpecification;
  readonly Environment: {[key: string]: any};
  readonly NetworkConfig: NetworkConfig;
  readonly RoleArn: string;
  readonly Tags: [];
  readonly ExperimentConfig: ExperimentConfig;
}
export interface CreateProject {
  readonly ProjectName: string;
  readonly ProjectDescription: string;
  readonly ServiceCatalogProvisioningDetails: ServiceCatalogProvisioningDetails;
  readonly Tags: [];
}
export interface CreateStudioLifecycleConfig {
  readonly StudioLifecycleConfigName: string;
  readonly StudioLifecycleConfigContent: string;
  readonly StudioLifecycleConfigAppType: string;
  readonly Tags: [];
}
export interface CreateTrainingJob {
  readonly TrainingJobName: string;
  readonly HyperParameters: {[key: string]: any};
  readonly AlgorithmSpecification: AlgorithmSpecification;
  readonly RoleArn: string;
  readonly InputDataConfig: [];
  readonly OutputDataConfig: OutputDataConfig;
  readonly ResourceConfig: ResourceConfig;
  readonly VpcConfig: VpcConfig;
  readonly StoppingCondition: StoppingCondition;
  readonly Tags: [];
  readonly EnableNetworkIsolation: boolean;
  readonly EnableInterContainerTrafficEncryption: boolean;
  readonly EnableManagedSpotTraining: boolean;
  readonly CheckpointConfig: CheckpointConfig;
  readonly DebugHookConfig: DebugHookConfig;
  readonly DebugRuleConfigurations: [];
  readonly TensorBoardOutputConfig: TensorBoardOutputConfig;
  readonly ExperimentConfig: ExperimentConfig;
  readonly ProfilerConfig: ProfilerConfig;
  readonly ProfilerRuleConfigurations: [];
  readonly Environment: {[key: string]: any};
  readonly RetryStrategy: RetryStrategy;
}
export interface CreateTransformJob {
  readonly TransformJobName: string;
  readonly ModelName: string;
  readonly MaxConcurrentTransforms: number;
  readonly ModelClientConfig: ModelClientConfig;
  readonly MaxPayloadInMB: number;
  readonly BatchStrategy: string;
  readonly Environment: {[key: string]: any};
  readonly TransformInput: TransformInput;
  readonly TransformOutput: TransformOutput;
  readonly TransformResources: TransformResources;
  readonly DataProcessing: DataProcessing;
  readonly Tags: [];
  readonly ExperimentConfig: ExperimentConfig;
}
export interface CreateTrial {
  readonly TrialName: string;
  readonly DisplayName: string;
  readonly ExperimentName: string;
  readonly MetadataProperties: MetadataProperties;
  readonly Tags: [];
}
export interface CreateTrialComponent {
  readonly TrialComponentName: string;
  readonly DisplayName: string;
  readonly Status: TrialComponentStatus;
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly Parameters: {[key: string]: any};
  readonly InputArtifacts: {[key: string]: any};
  readonly OutputArtifacts: {[key: string]: any};
  readonly MetadataProperties: MetadataProperties;
  readonly Tags: [];
}
export interface CreateUserProfile {
  readonly DomainId: string;
  readonly UserProfileName: string;
  readonly SingleSignOnUserIdentifier: string;
  readonly SingleSignOnUserValue: string;
  readonly Tags: [];
  readonly UserSettings: UserSettings;
}
export interface CreateWorkforce {
  readonly CognitoConfig: CognitoConfig;
  readonly OidcConfig: OidcConfig;
  readonly SourceIpConfig: SourceIpConfig;
  readonly WorkforceName: string;
  readonly Tags: [];
}
export interface CreateWorkteam {
  readonly WorkteamName: string;
  readonly WorkforceName: string;
  readonly MemberDefinitions: [];
  readonly Description: string;
  readonly NotificationConfiguration: NotificationConfiguration;
  readonly Tags: [];
}
export interface DeleteAction {
  readonly ActionName: string;
}
export interface DeleteAlgorithm {
  readonly AlgorithmName: string;
}
export interface DeleteApp {
  readonly DomainId: string;
  readonly UserProfileName: string;
  readonly AppType: string;
  readonly AppName: string;
}
export interface DeleteAppImageConfig {
  readonly AppImageConfigName: string;
}
export interface DeleteArtifact {
  readonly ArtifactArn: string;
  readonly Source: ArtifactSource;
}
export interface DeleteAssociation {
  readonly SourceArn: string;
  readonly DestinationArn: string;
}
export interface DeleteCodeRepository {
  readonly CodeRepositoryName: string;
}
export interface DeleteContext {
  readonly ContextName: string;
}
export interface DeleteDataQualityJobDefinition {
  readonly JobDefinitionName: string;
}
export interface DeleteDeviceFleet {
  readonly DeviceFleetName: string;
}
export interface DeleteDomain {
  readonly DomainId: string;
  readonly RetentionPolicy: RetentionPolicy;
}
export interface DeleteEndpoint {
  readonly EndpointName: string;
}
export interface DeleteEndpointConfig {
  readonly EndpointConfigName: string;
}
export interface DeleteExperiment {
  readonly ExperimentName: string;
}
export interface DeleteFeatureGroup {
  readonly FeatureGroupName: string;
}
export interface DeleteFlowDefinition {
  readonly FlowDefinitionName: string;
}
export interface DeleteHumanTaskUi {
  readonly HumanTaskUiName: string;
}
export interface DeleteImage {
  readonly ImageName: string;
}
export interface DeleteImageVersion {
  readonly ImageName: string;
  readonly Version: number;
}
export interface DeleteModel {
  readonly ModelName: string;
}
export interface DeleteModelBiasJobDefinition {
  readonly JobDefinitionName: string;
}
export interface DeleteModelExplainabilityJobDefinition {
  readonly JobDefinitionName: string;
}
export interface DeleteModelPackage {
  readonly ModelPackageName: string;
}
export interface DeleteModelPackageGroup {
  readonly ModelPackageGroupName: string;
}
export interface DeleteModelPackageGroupPolicy {
  readonly ModelPackageGroupName: string;
}
export interface DeleteModelQualityJobDefinition {
  readonly JobDefinitionName: string;
}
export interface DeleteMonitoringSchedule {
  readonly MonitoringScheduleName: string;
}
export interface DeleteNotebookInstance {
  readonly NotebookInstanceName: string;
}
export interface DeleteNotebookInstanceLifecycleConfig {
  readonly NotebookInstanceLifecycleConfigName: string;
}
export interface DeletePipeline {
  readonly PipelineName: string;
  readonly ClientRequestToken: string;
}
export interface DeleteProject {
  readonly ProjectName: string;
}
export interface DeleteStudioLifecycleConfig {
  readonly StudioLifecycleConfigName: string;
}
export interface DeleteTags {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}
export interface DeleteTrial {
  readonly TrialName: string;
}
export interface DeleteTrialComponent {
  readonly TrialComponentName: string;
}
export interface DeleteUserProfile {
  readonly DomainId: string;
  readonly UserProfileName: string;
}
export interface DeleteWorkforce {
  readonly WorkforceName: string;
}
export interface DeleteWorkteam {
  readonly WorkteamName: string;
}
export interface DeregisterDevices {
  readonly DeviceFleetName: string;
  readonly DeviceNames: [];
}
export interface DescribeAction {
  readonly ActionName: string;
}
export interface DescribeAlgorithm {
  readonly AlgorithmName: string;
}
export interface DescribeApp {
  readonly DomainId: string;
  readonly UserProfileName: string;
  readonly AppType: string;
  readonly AppName: string;
}
export interface DescribeAppImageConfig {
  readonly AppImageConfigName: string;
}
export interface DescribeArtifact {
  readonly ArtifactArn: string;
}
export interface DescribeAutoMLJob {
  readonly AutoMLJobName: string;
}
export interface DescribeCodeRepository {
  readonly CodeRepositoryName: string;
}
export interface DescribeCompilationJob {
  readonly CompilationJobName: string;
}
export interface DescribeContext {
  readonly ContextName: string;
}
export interface DescribeDataQualityJobDefinition {
  readonly JobDefinitionName: string;
}
export interface DescribeDevice {
  readonly NextToken: string;
  readonly DeviceName: string;
  readonly DeviceFleetName: string;
}
export interface DescribeDeviceFleet {
  readonly DeviceFleetName: string;
}
export interface DescribeDomain {
  readonly DomainId: string;
}
export interface DescribeEdgePackagingJob {
  readonly EdgePackagingJobName: string;
}
export interface DescribeEndpoint {
  readonly EndpointName: string;
}
export interface DescribeEndpointConfig {
  readonly EndpointConfigName: string;
}
export interface DescribeExperiment {
  readonly ExperimentName: string;
}
export interface DescribeFeatureGroup {
  readonly FeatureGroupName: string;
  readonly NextToken: string;
}
export interface DescribeFlowDefinition {
  readonly FlowDefinitionName: string;
}
export interface DescribeHumanTaskUi {
  readonly HumanTaskUiName: string;
}
export interface DescribeHyperParameterTuningJob {
  readonly HyperParameterTuningJobName: string;
}
export interface DescribeImage {
  readonly ImageName: string;
}
export interface DescribeImageVersion {
  readonly ImageName: string;
  readonly Version: number;
}
export interface DescribeInferenceRecommendationsJob {
  readonly JobName: string;
}
export interface DescribeLabelingJob {
  readonly LabelingJobName: string;
}
export interface DescribeLineageGroup {
  readonly LineageGroupName: string;
}
export interface DescribeModel {
  readonly ModelName: string;
}
export interface DescribeModelBiasJobDefinition {
  readonly JobDefinitionName: string;
}
export interface DescribeModelExplainabilityJobDefinition {
  readonly JobDefinitionName: string;
}
export interface DescribeModelPackage {
  readonly ModelPackageName: string;
}
export interface DescribeModelPackageGroup {
  readonly ModelPackageGroupName: string;
}
export interface DescribeModelQualityJobDefinition {
  readonly JobDefinitionName: string;
}
export interface DescribeMonitoringSchedule {
  readonly MonitoringScheduleName: string;
}
export interface DescribeNotebookInstance {
  readonly NotebookInstanceName: string;
}
export interface DescribeNotebookInstanceLifecycleConfig {
  readonly NotebookInstanceLifecycleConfigName: string;
}
export interface DescribePipeline {
  readonly PipelineName: string;
}
export interface DescribePipelineDefinitionForExecution {
  readonly PipelineExecutionArn: string;
}
export interface DescribePipelineExecution {
  readonly PipelineExecutionArn: string;
}
export interface DescribeProcessingJob {
  readonly ProcessingJobName: string;
}
export interface DescribeProject {
  readonly ProjectName: string;
}
export interface DescribeStudioLifecycleConfig {
  readonly StudioLifecycleConfigName: string;
}
export interface DescribeSubscribedWorkteam {
  readonly WorkteamArn: string;
}
export interface DescribeTrainingJob {
  readonly TrainingJobName: string;
}
export interface DescribeTransformJob {
  readonly TransformJobName: string;
}
export interface DescribeTrial {
  readonly TrialName: string;
}
export interface DescribeTrialComponent {
  readonly TrialComponentName: string;
}
export interface DescribeUserProfile {
  readonly DomainId: string;
  readonly UserProfileName: string;
}
export interface DescribeWorkforce {
  readonly WorkforceName: string;
}
export interface DescribeWorkteam {
  readonly WorkteamName: string;
}
export interface DisableSagemakerServicecatalogPortfolio {
}
export interface DisassociateTrialComponent {
  readonly TrialComponentName: string;
  readonly TrialName: string;
}
export interface EnableSagemakerServicecatalogPortfolio {
}
export interface GetDeviceFleetReport {
  readonly DeviceFleetName: string;
}
export interface GetLineageGroupPolicy {
  readonly LineageGroupName: string;
}
export interface GetModelPackageGroupPolicy {
  readonly ModelPackageGroupName: string;
}
export interface GetSagemakerServicecatalogPortfolioStatus {
}
export interface GetSearchSuggestions {
  readonly Resource: string;
  readonly SuggestionQuery: SuggestionQuery;
}
export interface ListActions {
  readonly SourceUri: string;
  readonly ActionType: string;
  readonly CreatedAfter: Date;
  readonly CreatedBefore: Date;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListAlgorithms {
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly MaxResults: number;
  readonly NameContains: string;
  readonly NextToken: string;
  readonly SortBy: string;
  readonly SortOrder: string;
}
export interface ListAppImageConfigs {
  readonly MaxResults: number;
  readonly NextToken: string;
  readonly NameContains: string;
  readonly CreationTimeBefore: Date;
  readonly CreationTimeAfter: Date;
  readonly ModifiedTimeBefore: Date;
  readonly ModifiedTimeAfter: Date;
  readonly SortBy: string;
  readonly SortOrder: string;
}
export interface ListApps {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly SortOrder: string;
  readonly SortBy: string;
  readonly DomainIdEquals: string;
  readonly UserProfileNameEquals: string;
}
export interface ListArtifacts {
  readonly SourceUri: string;
  readonly ArtifactType: string;
  readonly CreatedAfter: Date;
  readonly CreatedBefore: Date;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListAssociations {
  readonly SourceArn: string;
  readonly DestinationArn: string;
  readonly SourceType: string;
  readonly DestinationType: string;
  readonly AssociationType: string;
  readonly CreatedAfter: Date;
  readonly CreatedBefore: Date;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListAutoMLJobs {
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly NameContains: string;
  readonly StatusEquals: string;
  readonly SortOrder: string;
  readonly SortBy: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface ListCandidatesForAutoMLJob {
  readonly AutoMLJobName: string;
  readonly StatusEquals: string;
  readonly CandidateNameEquals: string;
  readonly SortOrder: string;
  readonly SortBy: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface ListCodeRepositories {
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly MaxResults: number;
  readonly NameContains: string;
  readonly NextToken: string;
  readonly SortBy: string;
  readonly SortOrder: string;
}
export interface ListCompilationJobs {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly NameContains: string;
  readonly StatusEquals: string;
  readonly SortBy: string;
  readonly SortOrder: string;
}
export interface ListContexts {
  readonly SourceUri: string;
  readonly ContextType: string;
  readonly CreatedAfter: Date;
  readonly CreatedBefore: Date;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListDataQualityJobDefinitions {
  readonly EndpointName: string;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly NameContains: string;
  readonly CreationTimeBefore: Date;
  readonly CreationTimeAfter: Date;
}
export interface ListDeviceFleets {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly NameContains: string;
  readonly SortBy: string;
  readonly SortOrder: string;
}
export interface ListDevices {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly LatestHeartbeatAfter: Date;
  readonly ModelName: string;
  readonly DeviceFleetName: string;
}
export interface ListDomains {
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListEdgePackagingJobs {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly NameContains: string;
  readonly ModelNameContains: string;
  readonly StatusEquals: string;
  readonly SortBy: string;
  readonly SortOrder: string;
}
export interface ListEndpointConfigs {
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly NameContains: string;
  readonly CreationTimeBefore: Date;
  readonly CreationTimeAfter: Date;
}
export interface ListEndpoints {
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly NameContains: string;
  readonly CreationTimeBefore: Date;
  readonly CreationTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly StatusEquals: string;
}
export interface ListExperiments {
  readonly CreatedAfter: Date;
  readonly CreatedBefore: Date;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListFeatureGroups {
  readonly NameContains: string;
  readonly FeatureGroupStatusEquals: string;
  readonly OfflineStoreStatusEquals: string;
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly SortOrder: string;
  readonly SortBy: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface ListFlowDefinitions {
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListHumanTaskUis {
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListHyperParameterTuningJobs {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NameContains: string;
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly StatusEquals: string;
}
export interface ListImageVersions {
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly ImageName: string;
  readonly LastModifiedTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly MaxResults: number;
  readonly NextToken: string;
  readonly SortBy: string;
  readonly SortOrder: string;
}
export interface ListImages {
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly MaxResults: number;
  readonly NameContains: string;
  readonly NextToken: string;
  readonly SortBy: string;
  readonly SortOrder: string;
}
export interface ListInferenceRecommendationsJobs {
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly NameContains: string;
  readonly StatusEquals: string;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListLabelingJobs {
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly MaxResults: number;
  readonly NextToken: string;
  readonly NameContains: string;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly StatusEquals: string;
}
export interface ListLabelingJobsForWorkteam {
  readonly WorkteamArn: string;
  readonly MaxResults: number;
  readonly NextToken: string;
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly JobReferenceCodeContains: string;
  readonly SortBy: string;
  readonly SortOrder: string;
}
export interface ListLineageGroups {
  readonly CreatedAfter: Date;
  readonly CreatedBefore: Date;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListModelBiasJobDefinitions {
  readonly EndpointName: string;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly NameContains: string;
  readonly CreationTimeBefore: Date;
  readonly CreationTimeAfter: Date;
}
export interface ListModelExplainabilityJobDefinitions {
  readonly EndpointName: string;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly NameContains: string;
  readonly CreationTimeBefore: Date;
  readonly CreationTimeAfter: Date;
}
export interface ListModelMetadata {
  readonly SearchExpression: ModelMetadataSearchExpression;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListModelPackageGroups {
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly MaxResults: number;
  readonly NameContains: string;
  readonly NextToken: string;
  readonly SortBy: string;
  readonly SortOrder: string;
}
export interface ListModelPackages {
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly MaxResults: number;
  readonly NameContains: string;
  readonly ModelApprovalStatus: string;
  readonly ModelPackageGroupName: string;
  readonly ModelPackageType: string;
  readonly NextToken: string;
  readonly SortBy: string;
  readonly SortOrder: string;
}
export interface ListModelQualityJobDefinitions {
  readonly EndpointName: string;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly NameContains: string;
  readonly CreationTimeBefore: Date;
  readonly CreationTimeAfter: Date;
}
export interface ListModels {
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly NameContains: string;
  readonly CreationTimeBefore: Date;
  readonly CreationTimeAfter: Date;
}
export interface ListMonitoringExecutions {
  readonly MonitoringScheduleName: string;
  readonly EndpointName: string;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly ScheduledTimeBefore: Date;
  readonly ScheduledTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly CreationTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly StatusEquals: string;
  readonly MonitoringJobDefinitionName: string;
  readonly MonitoringTypeEquals: string;
}
export interface ListMonitoringSchedules {
  readonly EndpointName: string;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly NameContains: string;
  readonly CreationTimeBefore: Date;
  readonly CreationTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly StatusEquals: string;
  readonly MonitoringJobDefinitionName: string;
  readonly MonitoringTypeEquals: string;
}
export interface ListNotebookInstanceLifecycleConfigs {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NameContains: string;
  readonly CreationTimeBefore: Date;
  readonly CreationTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
}
export interface ListNotebookInstances {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NameContains: string;
  readonly CreationTimeBefore: Date;
  readonly CreationTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly StatusEquals: string;
  readonly NotebookInstanceLifecycleConfigNameContains: string;
  readonly DefaultCodeRepositoryContains: string;
  readonly AdditionalCodeRepositoryEquals: string;
}
export interface ListPipelineExecutionSteps {
  readonly PipelineExecutionArn: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly SortOrder: string;
}
export interface ListPipelineExecutions {
  readonly PipelineName: string;
  readonly CreatedAfter: Date;
  readonly CreatedBefore: Date;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListPipelineParametersForExecution {
  readonly PipelineExecutionArn: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListPipelines {
  readonly PipelineNamePrefix: string;
  readonly CreatedAfter: Date;
  readonly CreatedBefore: Date;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListProcessingJobs {
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly NameContains: string;
  readonly StatusEquals: string;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListProjects {
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly MaxResults: number;
  readonly NameContains: string;
  readonly NextToken: string;
  readonly SortBy: string;
  readonly SortOrder: string;
}
export interface ListStudioLifecycleConfigs {
  readonly MaxResults: number;
  readonly NextToken: string;
  readonly NameContains: string;
  readonly AppTypeEquals: string;
  readonly CreationTimeBefore: Date;
  readonly CreationTimeAfter: Date;
  readonly ModifiedTimeBefore: Date;
  readonly ModifiedTimeAfter: Date;
  readonly SortBy: string;
  readonly SortOrder: string;
}
export interface ListSubscribedWorkteams {
  readonly NameContains: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListTags {
  readonly ResourceArn: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListTrainingJobs {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly NameContains: string;
  readonly StatusEquals: string;
  readonly SortBy: string;
  readonly SortOrder: string;
}
export interface ListTrainingJobsForHyperParameterTuningJob {
  readonly HyperParameterTuningJobName: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly StatusEquals: string;
  readonly SortBy: string;
  readonly SortOrder: string;
}
export interface ListTransformJobs {
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly NameContains: string;
  readonly StatusEquals: string;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListTrialComponents {
  readonly ExperimentName: string;
  readonly TrialName: string;
  readonly SourceArn: string;
  readonly CreatedAfter: Date;
  readonly CreatedBefore: Date;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface ListTrials {
  readonly ExperimentName: string;
  readonly TrialComponentName: string;
  readonly CreatedAfter: Date;
  readonly CreatedBefore: Date;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface ListUserProfiles {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly SortOrder: string;
  readonly SortBy: string;
  readonly DomainIdEquals: string;
  readonly UserProfileNameContains: string;
}
export interface ListWorkforces {
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NameContains: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListWorkteams {
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NameContains: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface PutModelPackageGroupPolicy {
  readonly ModelPackageGroupName: string;
  readonly ResourcePolicy: string;
}
export interface QueryLineage {
  readonly StartArns: [];
  readonly Direction: string;
  readonly IncludeEdges: boolean;
  readonly Filters: QueryFilters;
  readonly MaxDepth: number;
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface RegisterDevices {
  readonly DeviceFleetName: string;
  readonly Devices: [];
  readonly Tags: [];
}
export interface RenderUiTemplate {
  readonly UiTemplate: UiTemplate;
  readonly Task: RenderableTask;
  readonly RoleArn: string;
  readonly HumanTaskUiArn: string;
}
export interface RetryPipelineExecution {
  readonly PipelineExecutionArn: string;
  readonly ClientRequestToken: string;
}
export interface Search {
  readonly Resource: string;
  readonly SearchExpression: SearchExpression;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface SendPipelineExecutionStepFailure {
  readonly CallbackToken: string;
  readonly FailureReason: string;
  readonly ClientRequestToken: string;
}
export interface SendPipelineExecutionStepSuccess {
  readonly CallbackToken: string;
  readonly OutputParameters: [];
  readonly ClientRequestToken: string;
}
export interface StartMonitoringSchedule {
  readonly MonitoringScheduleName: string;
}
export interface StartNotebookInstance {
  readonly NotebookInstanceName: string;
}
export interface StartPipelineExecution {
  readonly PipelineName: string;
  readonly PipelineExecutionDisplayName: string;
  readonly PipelineParameters: [];
  readonly PipelineExecutionDescription: string;
  readonly ClientRequestToken: string;
}
export interface StopAutoMLJob {
  readonly AutoMLJobName: string;
}
export interface StopCompilationJob {
  readonly CompilationJobName: string;
}
export interface StopEdgePackagingJob {
  readonly EdgePackagingJobName: string;
}
export interface StopHyperParameterTuningJob {
  readonly HyperParameterTuningJobName: string;
}
export interface StopInferenceRecommendationsJob {
  readonly JobName: string;
}
export interface StopLabelingJob {
  readonly LabelingJobName: string;
}
export interface StopMonitoringSchedule {
  readonly MonitoringScheduleName: string;
}
export interface StopNotebookInstance {
  readonly NotebookInstanceName: string;
}
export interface StopPipelineExecution {
  readonly PipelineExecutionArn: string;
  readonly ClientRequestToken: string;
}
export interface StopProcessingJob {
  readonly ProcessingJobName: string;
}
export interface StopTrainingJob {
  readonly TrainingJobName: string;
}
export interface StopTransformJob {
  readonly TransformJobName: string;
}
export interface UpdateAction {
  readonly ActionName: string;
  readonly Description: string;
  readonly Status: string;
  readonly Properties: {[key: string]: any};
  readonly PropertiesToRemove: [];
}
export interface UpdateAppImageConfig {
  readonly AppImageConfigName: string;
  readonly KernelGatewayImageConfig: KernelGatewayImageConfig;
}
export interface UpdateArtifact {
  readonly ArtifactArn: string;
  readonly ArtifactName: string;
  readonly Properties: {[key: string]: any};
  readonly PropertiesToRemove: [];
}
export interface UpdateCodeRepository {
  readonly CodeRepositoryName: string;
  readonly GitConfig: GitConfigForUpdate;
}
export interface UpdateContext {
  readonly ContextName: string;
  readonly Description: string;
  readonly Properties: {[key: string]: any};
  readonly PropertiesToRemove: [];
}
export interface UpdateDeviceFleet {
  readonly DeviceFleetName: string;
  readonly RoleArn: string;
  readonly Description: string;
  readonly OutputConfig: EdgeOutputConfig;
  readonly EnableIotRoleAlias: boolean;
}
export interface UpdateDevices {
  readonly DeviceFleetName: string;
  readonly Devices: [];
}
export interface UpdateDomain {
  readonly DomainId: string;
  readonly DefaultUserSettings: UserSettings;
  readonly DomainSettingsForUpdate: DomainSettingsForUpdate;
}
export interface UpdateEndpoint {
  readonly EndpointName: string;
  readonly EndpointConfigName: string;
  readonly RetainAllVariantProperties: boolean;
  readonly ExcludeRetainedVariantProperties: [];
  readonly DeploymentConfig: DeploymentConfig;
  readonly RetainDeploymentConfig: boolean;
}
export interface UpdateEndpointWeightsAndCapacities {
  readonly EndpointName: string;
  readonly DesiredWeightsAndCapacities: [];
}
export interface UpdateExperiment {
  readonly ExperimentName: string;
  readonly DisplayName: string;
  readonly Description: string;
}
export interface UpdateImage {
  readonly DeleteProperties: [];
  readonly Description: string;
  readonly DisplayName: string;
  readonly ImageName: string;
  readonly RoleArn: string;
}
export interface UpdateModelPackage {
  readonly ModelPackageArn: string;
  readonly ModelApprovalStatus: string;
  readonly ApprovalDescription: string;
  readonly CustomerMetadataProperties: {[key: string]: any};
  readonly CustomerMetadataPropertiesToRemove: [];
  readonly AdditionalInferenceSpecificationsToAdd: [];
}
export interface UpdateMonitoringSchedule {
  readonly MonitoringScheduleName: string;
  readonly MonitoringScheduleConfig: MonitoringScheduleConfig;
}
export interface UpdateNotebookInstance {
  readonly NotebookInstanceName: string;
  readonly InstanceType: string;
  readonly RoleArn: string;
  readonly LifecycleConfigName: string;
  readonly DisassociateLifecycleConfig: boolean;
  readonly VolumeSizeInGB: number;
  readonly DefaultCodeRepository: string;
  readonly AdditionalCodeRepositories: [];
  readonly AcceleratorTypes: [];
  readonly DisassociateAcceleratorTypes: boolean;
  readonly DisassociateDefaultCodeRepository: boolean;
  readonly DisassociateAdditionalCodeRepositories: boolean;
  readonly RootAccess: string;
}
export interface UpdateNotebookInstanceLifecycleConfig {
  readonly NotebookInstanceLifecycleConfigName: string;
  readonly OnCreate: [];
  readonly OnStart: [];
}
export interface UpdatePipeline {
  readonly PipelineName: string;
  readonly PipelineDisplayName: string;
  readonly PipelineDefinition: string;
  readonly PipelineDescription: string;
  readonly RoleArn: string;
}
export interface UpdatePipelineExecution {
  readonly PipelineExecutionArn: string;
  readonly PipelineExecutionDescription: string;
  readonly PipelineExecutionDisplayName: string;
}
export interface UpdateProject {
  readonly ProjectName: string;
  readonly ProjectDescription: string;
  readonly ServiceCatalogProvisioningUpdateDetails: ServiceCatalogProvisioningUpdateDetails;
  readonly Tags: [];
}
export interface UpdateTrainingJob {
  readonly TrainingJobName: string;
  readonly ProfilerConfig: ProfilerConfigForUpdate;
  readonly ProfilerRuleConfigurations: [];
}
export interface UpdateTrial {
  readonly TrialName: string;
  readonly DisplayName: string;
}
export interface UpdateTrialComponent {
  readonly TrialComponentName: string;
  readonly DisplayName: string;
  readonly Status: TrialComponentStatus;
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly Parameters: {[key: string]: any};
  readonly ParametersToRemove: [];
  readonly InputArtifacts: {[key: string]: any};
  readonly InputArtifactsToRemove: [];
  readonly OutputArtifacts: {[key: string]: any};
  readonly OutputArtifactsToRemove: [];
}
export interface UpdateUserProfile {
  readonly DomainId: string;
  readonly UserProfileName: string;
  readonly UserSettings: UserSettings;
}
export interface UpdateWorkforce {
  readonly WorkforceName: string;
  readonly SourceIpConfig: SourceIpConfig;
  readonly OidcConfig: OidcConfig;
}
export interface UpdateWorkteam {
  readonly WorkteamName: string;
  readonly MemberDefinitions: [];
  readonly Description: string;
  readonly NotificationConfiguration: NotificationConfiguration;
}



interface ActionSource {
  readonly SourceUri: string;
  readonly SourceType: string;
  readonly SourceId: string;
}

interface ActionSummary {
  readonly ActionArn: string;
  readonly ActionName: string;
  readonly Source: ActionSource;
  readonly ActionType: string;
  readonly Status: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
}

interface AddAssociationRequest {
  readonly SourceArn: string;
  readonly DestinationArn: string;
  readonly AssociationType: string;
}

interface AddAssociationResponse {
  readonly SourceArn: string;
  readonly DestinationArn: string;
}

interface AddTagsInput {
  readonly ResourceArn: string;
  readonly Tags: [];
}

interface AddTagsOutput {
  readonly Tags: [];
}

interface AdditionalInferenceSpecificationDefinition {
  readonly Name: string;
  readonly Description: string;
  readonly Containers: [];
  readonly SupportedTransformInstanceTypes: [];
  readonly SupportedRealtimeInferenceInstanceTypes: [];
  readonly SupportedContentTypes: [];
  readonly SupportedResponseMIMETypes: [];
}

interface AgentVersion {
  readonly Version: string;
  readonly AgentCount: number;
}

interface Alarm {
  readonly AlarmName: string;
}

interface AlgorithmSpecification {
  readonly TrainingImage: string;
  readonly AlgorithmName: string;
  readonly TrainingInputMode: string;
  readonly MetricDefinitions: [];
  readonly EnableSageMakerMetricsTimeSeries: boolean;
}

interface AlgorithmStatusDetails {
  readonly ValidationStatuses: [];
  readonly ImageScanStatuses: [];
}

interface AlgorithmStatusItem {
  readonly Name: string;
  readonly Status: string;
  readonly FailureReason: string;
}

interface AlgorithmSummary {
  readonly AlgorithmName: string;
  readonly AlgorithmArn: string;
  readonly AlgorithmDescription: string;
  readonly CreationTime: Date;
  readonly AlgorithmStatus: string;
}

interface AlgorithmValidationProfile {
  readonly ProfileName: string;
  readonly TrainingJobDefinition: TrainingJobDefinition;
  readonly TransformJobDefinition: TransformJobDefinition;
}

interface AlgorithmValidationSpecification {
  readonly ValidationRole: string;
  readonly ValidationProfiles: [];
}

interface AnnotationConsolidationConfig {
  readonly AnnotationConsolidationLambdaArn: string;
}

interface AppDetails {
  readonly DomainId: string;
  readonly UserProfileName: string;
  readonly AppType: string;
  readonly AppName: string;
  readonly Status: string;
  readonly CreationTime: Date;
}

interface AppImageConfigDetails {
  readonly AppImageConfigArn: string;
  readonly AppImageConfigName: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
  readonly KernelGatewayImageConfig: KernelGatewayImageConfig;
}

interface AppSpecification {
  readonly ImageUri: string;
  readonly ContainerEntrypoint: [];
  readonly ContainerArguments: [];
}

interface ArtifactSource {
  readonly SourceUri: string;
  readonly SourceTypes: [];
}

interface ArtifactSourceType {
  readonly SourceIdType: string;
  readonly Value: string;
}

interface ArtifactSummary {
  readonly ArtifactArn: string;
  readonly ArtifactName: string;
  readonly Source: ArtifactSource;
  readonly ArtifactType: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
}

interface AssociateTrialComponentRequest {
  readonly TrialComponentName: string;
  readonly TrialName: string;
}

interface AssociateTrialComponentResponse {
  readonly TrialComponentArn: string;
  readonly TrialArn: string;
}

interface AssociationSummary {
  readonly SourceArn: string;
  readonly DestinationArn: string;
  readonly SourceType: string;
  readonly DestinationType: string;
  readonly AssociationType: string;
  readonly SourceName: string;
  readonly DestinationName: string;
  readonly CreationTime: Date;
  readonly CreatedBy: UserContext;
}

interface AsyncInferenceClientConfig {
  readonly MaxConcurrentInvocationsPerInstance: number;
}

interface AsyncInferenceConfig {
  readonly ClientConfig: AsyncInferenceClientConfig;
  readonly OutputConfig: AsyncInferenceOutputConfig;
}

interface AsyncInferenceNotificationConfig {
  readonly SuccessTopic: string;
  readonly ErrorTopic: string;
}

interface AsyncInferenceOutputConfig {
  readonly KmsKeyId: string;
  readonly S3OutputPath: string;
  readonly NotificationConfig: AsyncInferenceNotificationConfig;
}

interface AthenaDatasetDefinition {
  readonly Catalog: string;
  readonly Database: string;
  readonly QueryString: string;
  readonly WorkGroup: string;
  readonly OutputS3Uri: string;
  readonly KmsKeyId: string;
  readonly OutputFormat: string;
  readonly OutputCompression: string;
}

interface AutoMLCandidate {
  readonly CandidateName: string;
  readonly FinalAutoMLJobObjectiveMetric: FinalAutoMLJobObjectiveMetric;
  readonly ObjectiveStatus: string;
  readonly CandidateSteps: [];
  readonly CandidateStatus: string;
  readonly InferenceContainers: [];
  readonly CreationTime: Date;
  readonly EndTime: Date;
  readonly LastModifiedTime: Date;
  readonly FailureReason: string;
  readonly CandidateProperties: CandidateProperties;
}

interface AutoMLCandidateStep {
  readonly CandidateStepType: string;
  readonly CandidateStepArn: string;
  readonly CandidateStepName: string;
}

interface AutoMLChannel {
  readonly DataSource: AutoMLDataSource;
  readonly CompressionType: string;
  readonly TargetAttributeName: string;
}

interface AutoMLContainerDefinition {
  readonly Image: string;
  readonly ModelDataUrl: string;
  readonly Environment: {[key: string]: any};
}

interface AutoMLDataSource {
  readonly S3DataSource: AutoMLS3DataSource;
}

interface AutoMLJobArtifacts {
  readonly CandidateDefinitionNotebookLocation: string;
  readonly DataExplorationNotebookLocation: string;
}

interface AutoMLJobCompletionCriteria {
  readonly MaxCandidates: number;
  readonly MaxRuntimePerTrainingJobInSeconds: number;
  readonly MaxAutoMLJobRuntimeInSeconds: number;
}

interface AutoMLJobConfig {
  readonly CompletionCriteria: AutoMLJobCompletionCriteria;
  readonly SecurityConfig: AutoMLSecurityConfig;
}

interface AutoMLJobObjective {
  readonly MetricName: string;
}

interface AutoMLJobSummary {
  readonly AutoMLJobName: string;
  readonly AutoMLJobArn: string;
  readonly AutoMLJobStatus: string;
  readonly AutoMLJobSecondaryStatus: string;
  readonly CreationTime: Date;
  readonly EndTime: Date;
  readonly LastModifiedTime: Date;
  readonly FailureReason: string;
  readonly PartialFailureReasons: [];
}

interface AutoMLOutputDataConfig {
  readonly KmsKeyId: string;
  readonly S3OutputPath: string;
}

interface AutoMLPartialFailureReason {
  readonly PartialFailureMessage: string;
}

interface AutoMLS3DataSource {
  readonly S3DataType: string;
  readonly S3Uri: string;
}

interface AutoMLSecurityConfig {
  readonly VolumeKmsKeyId: string;
  readonly EnableInterContainerTrafficEncryption: boolean;
  readonly VpcConfig: VpcConfig;
}

interface AutoRollbackConfig {
  readonly Alarms: [];
}

interface BatchDescribeModelPackageError {
  readonly ErrorCode: string;
  readonly ErrorResponse: string;
}

interface BatchDescribeModelPackageInput {
  readonly ModelPackageArnList: [];
}

interface BatchDescribeModelPackageOutput {
  readonly ModelPackageSummaries: {[key: string]: any};
  readonly BatchDescribeModelPackageErrorMap: {[key: string]: any};
}

interface BatchDescribeModelPackageSummary {
  readonly ModelPackageGroupName: string;
  readonly ModelPackageVersion: number;
  readonly ModelPackageArn: string;
  readonly ModelPackageDescription: string;
  readonly CreationTime: Date;
  readonly InferenceSpecification: InferenceSpecification;
  readonly ModelPackageStatus: string;
  readonly ModelApprovalStatus: string;
}

interface Bias {
  readonly Report: MetricsSource;
  readonly PreTrainingReport: MetricsSource;
  readonly PostTrainingReport: MetricsSource;
}

interface BlueGreenUpdatePolicy {
  readonly TrafficRoutingConfiguration: TrafficRoutingConfig;
  readonly TerminationWaitInSeconds: number;
  readonly MaximumExecutionTimeoutInSeconds: number;
}

interface CacheHitResult {
  readonly SourcePipelineExecutionArn: string;
}

interface CallbackStepMetadata {
  readonly CallbackToken: string;
  readonly SqsQueueUrl: string;
  readonly OutputParameters: [];
}

interface CandidateArtifactLocations {
  readonly Explainability: string;
}

interface CandidateProperties {
  readonly CandidateArtifactLocations: CandidateArtifactLocations;
  readonly CandidateMetrics: [];
}

interface CapacitySize {
  readonly Type: string;
  readonly Value: number;
}

interface CaptureContentTypeHeader {
  readonly CsvContentTypes: [];
  readonly JsonContentTypes: [];
}

interface CaptureOption {
  readonly CaptureMode: string;
}

interface CategoricalParameter {
  readonly Name: string;
  readonly Value: [];
}

interface CategoricalParameterRange {
  readonly Name: string;
  readonly Values: [];
}

interface CategoricalParameterRangeSpecification {
  readonly Values: [];
}

interface Channel {
  readonly ChannelName: string;
  readonly DataSource: DataSource;
  readonly ContentType: string;
  readonly CompressionType: string;
  readonly RecordWrapperType: string;
  readonly InputMode: string;
  readonly ShuffleConfig: ShuffleConfig;
}

interface ChannelSpecification {
  readonly Name: string;
  readonly Description: string;
  readonly IsRequired: boolean;
  readonly SupportedContentTypes: [];
  readonly SupportedCompressionTypes: [];
  readonly SupportedInputModes: [];
}

interface CheckpointConfig {
  readonly S3Uri: string;
  readonly LocalPath: string;
}

interface ClarifyCheckStepMetadata {
  readonly CheckType: string;
  readonly BaselineUsedForDriftCheckConstraints: string;
  readonly CalculatedBaselineConstraints: string;
  readonly ModelPackageGroupName: string;
  readonly ViolationReport: string;
  readonly CheckJobArn: string;
  readonly SkipCheck: boolean;
  readonly RegisterNewBaseline: boolean;
}

interface CodeRepositorySummary {
  readonly CodeRepositoryName: string;
  readonly CodeRepositoryArn: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
  readonly GitConfig: GitConfig;
}

interface CognitoConfig {
  readonly UserPool: string;
  readonly ClientId: string;
}

interface CognitoMemberDefinition {
  readonly UserPool: string;
  readonly UserGroup: string;
  readonly ClientId: string;
}

interface CollectionConfiguration {
  readonly CollectionName: string;
  readonly CollectionParameters: {[key: string]: any};
}

interface CompilationJobSummary {
  readonly CompilationJobName: string;
  readonly CompilationJobArn: string;
  readonly CreationTime: Date;
  readonly CompilationStartTime: Date;
  readonly CompilationEndTime: Date;
  readonly CompilationTargetDevice: string;
  readonly CompilationTargetPlatformOs: string;
  readonly CompilationTargetPlatformArch: string;
  readonly CompilationTargetPlatformAccelerator: string;
  readonly LastModifiedTime: Date;
  readonly CompilationJobStatus: string;
}

interface ConditionStepMetadata {
  readonly Outcome: string;
}

interface ConflictException {
  readonly Message: string;
}

interface ContainerDefinition {
  readonly ContainerHostname: string;
  readonly Image: string;
  readonly ImageConfig: ImageConfig;
  readonly Mode: string;
  readonly ModelDataUrl: string;
  readonly Environment: {[key: string]: any};
  readonly ModelPackageName: string;
  readonly InferenceSpecificationName: string;
  readonly MultiModelConfig: MultiModelConfig;
}

interface ContextSource {
  readonly SourceUri: string;
  readonly SourceType: string;
  readonly SourceId: string;
}

interface ContextSummary {
  readonly ContextArn: string;
  readonly ContextName: string;
  readonly Source: ContextSource;
  readonly ContextType: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
}

interface ContinuousParameterRange {
  readonly Name: string;
  readonly MinValue: string;
  readonly MaxValue: string;
  readonly ScalingType: string;
}

interface ContinuousParameterRangeSpecification {
  readonly MinValue: string;
  readonly MaxValue: string;
}

interface CreateActionRequest {
  readonly ActionName: string;
  readonly Source: ActionSource;
  readonly ActionType: string;
  readonly Description: string;
  readonly Status: string;
  readonly Properties: {[key: string]: any};
  readonly MetadataProperties: MetadataProperties;
  readonly Tags: [];
}

interface CreateActionResponse {
  readonly ActionArn: string;
}

interface CreateAlgorithmInput {
  readonly AlgorithmName: string;
  readonly AlgorithmDescription: string;
  readonly TrainingSpecification: TrainingSpecification;
  readonly InferenceSpecification: InferenceSpecification;
  readonly ValidationSpecification: AlgorithmValidationSpecification;
  readonly CertifyForMarketplace: boolean;
  readonly Tags: [];
}

interface CreateAlgorithmOutput {
  readonly AlgorithmArn: string;
}

interface CreateAppImageConfigRequest {
  readonly AppImageConfigName: string;
  readonly Tags: [];
  readonly KernelGatewayImageConfig: KernelGatewayImageConfig;
}

interface CreateAppImageConfigResponse {
  readonly AppImageConfigArn: string;
}

interface CreateAppRequest {
  readonly DomainId: string;
  readonly UserProfileName: string;
  readonly AppType: string;
  readonly AppName: string;
  readonly Tags: [];
  readonly ResourceSpec: ResourceSpec;
}

interface CreateAppResponse {
  readonly AppArn: string;
}

interface CreateArtifactRequest {
  readonly ArtifactName: string;
  readonly Source: ArtifactSource;
  readonly ArtifactType: string;
  readonly Properties: {[key: string]: any};
  readonly MetadataProperties: MetadataProperties;
  readonly Tags: [];
}

interface CreateArtifactResponse {
  readonly ArtifactArn: string;
}

interface CreateAutoMLJobRequest {
  readonly AutoMLJobName: string;
  readonly InputDataConfig: [];
  readonly OutputDataConfig: AutoMLOutputDataConfig;
  readonly ProblemType: string;
  readonly AutoMLJobObjective: AutoMLJobObjective;
  readonly AutoMLJobConfig: AutoMLJobConfig;
  readonly RoleArn: string;
  readonly GenerateCandidateDefinitionsOnly: boolean;
  readonly Tags: [];
  readonly ModelDeployConfig: ModelDeployConfig;
}

interface CreateAutoMLJobResponse {
  readonly AutoMLJobArn: string;
}

interface CreateCodeRepositoryInput {
  readonly CodeRepositoryName: string;
  readonly GitConfig: GitConfig;
  readonly Tags: [];
}

interface CreateCodeRepositoryOutput {
  readonly CodeRepositoryArn: string;
}

interface CreateCompilationJobRequest {
  readonly CompilationJobName: string;
  readonly RoleArn: string;
  readonly ModelPackageVersionArn: string;
  readonly InputConfig: InputConfig;
  readonly OutputConfig: OutputConfig;
  readonly VpcConfig: NeoVpcConfig;
  readonly StoppingCondition: StoppingCondition;
  readonly Tags: [];
}

interface CreateCompilationJobResponse {
  readonly CompilationJobArn: string;
}

interface CreateContextRequest {
  readonly ContextName: string;
  readonly Source: ContextSource;
  readonly ContextType: string;
  readonly Description: string;
  readonly Properties: {[key: string]: any};
  readonly Tags: [];
}

interface CreateContextResponse {
  readonly ContextArn: string;
}

interface CreateDataQualityJobDefinitionRequest {
  readonly JobDefinitionName: string;
  readonly DataQualityBaselineConfig: DataQualityBaselineConfig;
  readonly DataQualityAppSpecification: DataQualityAppSpecification;
  readonly DataQualityJobInput: DataQualityJobInput;
  readonly DataQualityJobOutputConfig: MonitoringOutputConfig;
  readonly JobResources: MonitoringResources;
  readonly NetworkConfig: MonitoringNetworkConfig;
  readonly RoleArn: string;
  readonly StoppingCondition: MonitoringStoppingCondition;
  readonly Tags: [];
}

interface CreateDataQualityJobDefinitionResponse {
  readonly JobDefinitionArn: string;
}

interface CreateDeviceFleetRequest {
  readonly DeviceFleetName: string;
  readonly RoleArn: string;
  readonly Description: string;
  readonly OutputConfig: EdgeOutputConfig;
  readonly Tags: [];
  readonly EnableIotRoleAlias: boolean;
}

interface CreateDomainRequest {
  readonly DomainName: string;
  readonly AuthMode: string;
  readonly DefaultUserSettings: UserSettings;
  readonly SubnetIds: [];
  readonly VpcId: string;
  readonly Tags: [];
  readonly AppNetworkAccessType: string;
  readonly HomeEfsFileSystemKmsKeyId: string;
  readonly KmsKeyId: string;
  readonly AppSecurityGroupManagement: string;
  readonly DomainSettings: DomainSettings;
}

interface CreateDomainResponse {
  readonly DomainArn: string;
  readonly Url: string;
}

interface CreateEdgePackagingJobRequest {
  readonly EdgePackagingJobName: string;
  readonly CompilationJobName: string;
  readonly ModelName: string;
  readonly ModelVersion: string;
  readonly RoleArn: string;
  readonly OutputConfig: EdgeOutputConfig;
  readonly ResourceKey: string;
  readonly Tags: [];
}

interface CreateEndpointConfigInput {
  readonly EndpointConfigName: string;
  readonly ProductionVariants: [];
  readonly DataCaptureConfig: DataCaptureConfig;
  readonly Tags: [];
  readonly KmsKeyId: string;
  readonly AsyncInferenceConfig: AsyncInferenceConfig;
}

interface CreateEndpointConfigOutput {
  readonly EndpointConfigArn: string;
}

interface CreateEndpointInput {
  readonly EndpointName: string;
  readonly EndpointConfigName: string;
  readonly DeploymentConfig: DeploymentConfig;
  readonly Tags: [];
}

interface CreateEndpointOutput {
  readonly EndpointArn: string;
}

interface CreateExperimentRequest {
  readonly ExperimentName: string;
  readonly DisplayName: string;
  readonly Description: string;
  readonly Tags: [];
}

interface CreateExperimentResponse {
  readonly ExperimentArn: string;
}

interface CreateFeatureGroupRequest {
  readonly FeatureGroupName: string;
  readonly RecordIdentifierFeatureName: string;
  readonly EventTimeFeatureName: string;
  readonly FeatureDefinitions: [];
  readonly OnlineStoreConfig: OnlineStoreConfig;
  readonly OfflineStoreConfig: OfflineStoreConfig;
  readonly RoleArn: string;
  readonly Description: string;
  readonly Tags: [];
}

interface CreateFeatureGroupResponse {
  readonly FeatureGroupArn: string;
}

interface CreateFlowDefinitionRequest {
  readonly FlowDefinitionName: string;
  readonly HumanLoopRequestSource: HumanLoopRequestSource;
  readonly HumanLoopActivationConfig: HumanLoopActivationConfig;
  readonly HumanLoopConfig: HumanLoopConfig;
  readonly OutputConfig: FlowDefinitionOutputConfig;
  readonly RoleArn: string;
  readonly Tags: [];
}

interface CreateFlowDefinitionResponse {
  readonly FlowDefinitionArn: string;
}

interface CreateHumanTaskUiRequest {
  readonly HumanTaskUiName: string;
  readonly UiTemplate: UiTemplate;
  readonly Tags: [];
}

interface CreateHumanTaskUiResponse {
  readonly HumanTaskUiArn: string;
}

interface CreateHyperParameterTuningJobRequest {
  readonly HyperParameterTuningJobName: string;
  readonly HyperParameterTuningJobConfig: HyperParameterTuningJobConfig;
  readonly TrainingJobDefinition: HyperParameterTrainingJobDefinition;
  readonly TrainingJobDefinitions: [];
  readonly WarmStartConfig: HyperParameterTuningJobWarmStartConfig;
  readonly Tags: [];
}

interface CreateHyperParameterTuningJobResponse {
  readonly HyperParameterTuningJobArn: string;
}

interface CreateImageRequest {
  readonly Description: string;
  readonly DisplayName: string;
  readonly ImageName: string;
  readonly RoleArn: string;
  readonly Tags: [];
}

interface CreateImageResponse {
  readonly ImageArn: string;
}

interface CreateImageVersionRequest {
  readonly BaseImage: string;
  readonly ClientToken: string;
  readonly ImageName: string;
}

interface CreateImageVersionResponse {
  readonly ImageVersionArn: string;
}

interface CreateInferenceRecommendationsJobRequest {
  readonly JobName: string;
  readonly JobType: string;
  readonly RoleArn: string;
  readonly InputConfig: RecommendationJobInputConfig;
  readonly JobDescription: string;
  readonly StoppingConditions: RecommendationJobStoppingConditions;
  readonly Tags: [];
}

interface CreateInferenceRecommendationsJobResponse {
  readonly JobArn: string;
}

interface CreateLabelingJobRequest {
  readonly LabelingJobName: string;
  readonly LabelAttributeName: string;
  readonly InputConfig: LabelingJobInputConfig;
  readonly OutputConfig: LabelingJobOutputConfig;
  readonly RoleArn: string;
  readonly LabelCategoryConfigS3Uri: string;
  readonly StoppingConditions: LabelingJobStoppingConditions;
  readonly LabelingJobAlgorithmsConfig: LabelingJobAlgorithmsConfig;
  readonly HumanTaskConfig: HumanTaskConfig;
  readonly Tags: [];
}

interface CreateLabelingJobResponse {
  readonly LabelingJobArn: string;
}

interface CreateModelBiasJobDefinitionRequest {
  readonly JobDefinitionName: string;
  readonly ModelBiasBaselineConfig: ModelBiasBaselineConfig;
  readonly ModelBiasAppSpecification: ModelBiasAppSpecification;
  readonly ModelBiasJobInput: ModelBiasJobInput;
  readonly ModelBiasJobOutputConfig: MonitoringOutputConfig;
  readonly JobResources: MonitoringResources;
  readonly NetworkConfig: MonitoringNetworkConfig;
  readonly RoleArn: string;
  readonly StoppingCondition: MonitoringStoppingCondition;
  readonly Tags: [];
}

interface CreateModelBiasJobDefinitionResponse {
  readonly JobDefinitionArn: string;
}

interface CreateModelExplainabilityJobDefinitionRequest {
  readonly JobDefinitionName: string;
  readonly ModelExplainabilityBaselineConfig: ModelExplainabilityBaselineConfig;
  readonly ModelExplainabilityAppSpecification: ModelExplainabilityAppSpecification;
  readonly ModelExplainabilityJobInput: ModelExplainabilityJobInput;
  readonly ModelExplainabilityJobOutputConfig: MonitoringOutputConfig;
  readonly JobResources: MonitoringResources;
  readonly NetworkConfig: MonitoringNetworkConfig;
  readonly RoleArn: string;
  readonly StoppingCondition: MonitoringStoppingCondition;
  readonly Tags: [];
}

interface CreateModelExplainabilityJobDefinitionResponse {
  readonly JobDefinitionArn: string;
}

interface CreateModelInput {
  readonly ModelName: string;
  readonly PrimaryContainer: ContainerDefinition;
  readonly Containers: [];
  readonly InferenceExecutionConfig: InferenceExecutionConfig;
  readonly ExecutionRoleArn: string;
  readonly Tags: [];
  readonly VpcConfig: VpcConfig;
  readonly EnableNetworkIsolation: boolean;
}

interface CreateModelOutput {
  readonly ModelArn: string;
}

interface CreateModelPackageGroupInput {
  readonly ModelPackageGroupName: string;
  readonly ModelPackageGroupDescription: string;
  readonly Tags: [];
}

interface CreateModelPackageGroupOutput {
  readonly ModelPackageGroupArn: string;
}

interface CreateModelPackageInput {
  readonly ModelPackageName: string;
  readonly ModelPackageGroupName: string;
  readonly ModelPackageDescription: string;
  readonly InferenceSpecification: InferenceSpecification;
  readonly ValidationSpecification: ModelPackageValidationSpecification;
  readonly SourceAlgorithmSpecification: SourceAlgorithmSpecification;
  readonly CertifyForMarketplace: boolean;
  readonly Tags: [];
  readonly ModelApprovalStatus: string;
  readonly MetadataProperties: MetadataProperties;
  readonly ModelMetrics: ModelMetrics;
  readonly ClientToken: string;
  readonly CustomerMetadataProperties: {[key: string]: any};
  readonly DriftCheckBaselines: DriftCheckBaselines;
  readonly Domain: string;
  readonly Task: string;
  readonly SamplePayloadUrl: string;
  readonly AdditionalInferenceSpecifications: [];
}

interface CreateModelPackageOutput {
  readonly ModelPackageArn: string;
}

interface CreateModelQualityJobDefinitionRequest {
  readonly JobDefinitionName: string;
  readonly ModelQualityBaselineConfig: ModelQualityBaselineConfig;
  readonly ModelQualityAppSpecification: ModelQualityAppSpecification;
  readonly ModelQualityJobInput: ModelQualityJobInput;
  readonly ModelQualityJobOutputConfig: MonitoringOutputConfig;
  readonly JobResources: MonitoringResources;
  readonly NetworkConfig: MonitoringNetworkConfig;
  readonly RoleArn: string;
  readonly StoppingCondition: MonitoringStoppingCondition;
  readonly Tags: [];
}

interface CreateModelQualityJobDefinitionResponse {
  readonly JobDefinitionArn: string;
}

interface CreateMonitoringScheduleRequest {
  readonly MonitoringScheduleName: string;
  readonly MonitoringScheduleConfig: MonitoringScheduleConfig;
  readonly Tags: [];
}

interface CreateMonitoringScheduleResponse {
  readonly MonitoringScheduleArn: string;
}

interface CreateNotebookInstanceInput {
  readonly NotebookInstanceName: string;
  readonly InstanceType: string;
  readonly SubnetId: string;
  readonly SecurityGroupIds: [];
  readonly RoleArn: string;
  readonly KmsKeyId: string;
  readonly Tags: [];
  readonly LifecycleConfigName: string;
  readonly DirectInternetAccess: string;
  readonly VolumeSizeInGB: number;
  readonly AcceleratorTypes: [];
  readonly DefaultCodeRepository: string;
  readonly AdditionalCodeRepositories: [];
  readonly RootAccess: string;
  readonly PlatformIdentifier: string;
}

interface CreateNotebookInstanceLifecycleConfigInput {
  readonly NotebookInstanceLifecycleConfigName: string;
  readonly OnCreate: [];
  readonly OnStart: [];
}

interface CreateNotebookInstanceLifecycleConfigOutput {
  readonly NotebookInstanceLifecycleConfigArn: string;
}

interface CreateNotebookInstanceOutput {
  readonly NotebookInstanceArn: string;
}

interface CreatePipelineRequest {
  readonly PipelineName: string;
  readonly PipelineDisplayName: string;
  readonly PipelineDefinition: string;
  readonly PipelineDescription: string;
  readonly ClientRequestToken: string;
  readonly RoleArn: string;
  readonly Tags: [];
}

interface CreatePipelineResponse {
  readonly PipelineArn: string;
}

interface CreatePresignedDomainUrlRequest {
  readonly DomainId: string;
  readonly UserProfileName: string;
  readonly SessionExpirationDurationInSeconds: number;
  readonly ExpiresInSeconds: number;
}

interface CreatePresignedDomainUrlResponse {
  readonly AuthorizedUrl: string;
}

interface CreatePresignedNotebookInstanceUrlInput {
  readonly NotebookInstanceName: string;
  readonly SessionExpirationDurationInSeconds: number;
}

interface CreatePresignedNotebookInstanceUrlOutput {
  readonly AuthorizedUrl: string;
}

interface CreateProcessingJobRequest {
  readonly ProcessingInputs: [];
  readonly ProcessingOutputConfig: ProcessingOutputConfig;
  readonly ProcessingJobName: string;
  readonly ProcessingResources: ProcessingResources;
  readonly StoppingCondition: ProcessingStoppingCondition;
  readonly AppSpecification: AppSpecification;
  readonly Environment: {[key: string]: any};
  readonly NetworkConfig: NetworkConfig;
  readonly RoleArn: string;
  readonly Tags: [];
  readonly ExperimentConfig: ExperimentConfig;
}

interface CreateProcessingJobResponse {
  readonly ProcessingJobArn: string;
}

interface CreateProjectInput {
  readonly ProjectName: string;
  readonly ProjectDescription: string;
  readonly ServiceCatalogProvisioningDetails: ServiceCatalogProvisioningDetails;
  readonly Tags: [];
}

interface CreateProjectOutput {
  readonly ProjectArn: string;
  readonly ProjectId: string;
}

interface CreateStudioLifecycleConfigRequest {
  readonly StudioLifecycleConfigName: string;
  readonly StudioLifecycleConfigContent: string;
  readonly StudioLifecycleConfigAppType: string;
  readonly Tags: [];
}

interface CreateStudioLifecycleConfigResponse {
  readonly StudioLifecycleConfigArn: string;
}

interface CreateTrainingJobRequest {
  readonly TrainingJobName: string;
  readonly HyperParameters: {[key: string]: any};
  readonly AlgorithmSpecification: AlgorithmSpecification;
  readonly RoleArn: string;
  readonly InputDataConfig: [];
  readonly OutputDataConfig: OutputDataConfig;
  readonly ResourceConfig: ResourceConfig;
  readonly VpcConfig: VpcConfig;
  readonly StoppingCondition: StoppingCondition;
  readonly Tags: [];
  readonly EnableNetworkIsolation: boolean;
  readonly EnableInterContainerTrafficEncryption: boolean;
  readonly EnableManagedSpotTraining: boolean;
  readonly CheckpointConfig: CheckpointConfig;
  readonly DebugHookConfig: DebugHookConfig;
  readonly DebugRuleConfigurations: [];
  readonly TensorBoardOutputConfig: TensorBoardOutputConfig;
  readonly ExperimentConfig: ExperimentConfig;
  readonly ProfilerConfig: ProfilerConfig;
  readonly ProfilerRuleConfigurations: [];
  readonly Environment: {[key: string]: any};
  readonly RetryStrategy: RetryStrategy;
}

interface CreateTrainingJobResponse {
  readonly TrainingJobArn: string;
}

interface CreateTransformJobRequest {
  readonly TransformJobName: string;
  readonly ModelName: string;
  readonly MaxConcurrentTransforms: number;
  readonly ModelClientConfig: ModelClientConfig;
  readonly MaxPayloadInMB: number;
  readonly BatchStrategy: string;
  readonly Environment: {[key: string]: any};
  readonly TransformInput: TransformInput;
  readonly TransformOutput: TransformOutput;
  readonly TransformResources: TransformResources;
  readonly DataProcessing: DataProcessing;
  readonly Tags: [];
  readonly ExperimentConfig: ExperimentConfig;
}

interface CreateTransformJobResponse {
  readonly TransformJobArn: string;
}

interface CreateTrialComponentRequest {
  readonly TrialComponentName: string;
  readonly DisplayName: string;
  readonly Status: TrialComponentStatus;
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly Parameters: {[key: string]: any};
  readonly InputArtifacts: {[key: string]: any};
  readonly OutputArtifacts: {[key: string]: any};
  readonly MetadataProperties: MetadataProperties;
  readonly Tags: [];
}

interface CreateTrialComponentResponse {
  readonly TrialComponentArn: string;
}

interface CreateTrialRequest {
  readonly TrialName: string;
  readonly DisplayName: string;
  readonly ExperimentName: string;
  readonly MetadataProperties: MetadataProperties;
  readonly Tags: [];
}

interface CreateTrialResponse {
  readonly TrialArn: string;
}

interface CreateUserProfileRequest {
  readonly DomainId: string;
  readonly UserProfileName: string;
  readonly SingleSignOnUserIdentifier: string;
  readonly SingleSignOnUserValue: string;
  readonly Tags: [];
  readonly UserSettings: UserSettings;
}

interface CreateUserProfileResponse {
  readonly UserProfileArn: string;
}

interface CreateWorkforceRequest {
  readonly CognitoConfig: CognitoConfig;
  readonly OidcConfig: OidcConfig;
  readonly SourceIpConfig: SourceIpConfig;
  readonly WorkforceName: string;
  readonly Tags: [];
}

interface CreateWorkforceResponse {
  readonly WorkforceArn: string;
}

interface CreateWorkteamRequest {
  readonly WorkteamName: string;
  readonly WorkforceName: string;
  readonly MemberDefinitions: [];
  readonly Description: string;
  readonly NotificationConfiguration: NotificationConfiguration;
  readonly Tags: [];
}

interface CreateWorkteamResponse {
  readonly WorkteamArn: string;
}

interface CustomImage {
  readonly ImageName: string;
  readonly ImageVersionNumber: number;
  readonly AppImageConfigName: string;
}

interface DataCaptureConfig {
  readonly EnableCapture: boolean;
  readonly InitialSamplingPercentage: number;
  readonly DestinationS3Uri: string;
  readonly KmsKeyId: string;
  readonly CaptureOptions: [];
  readonly CaptureContentTypeHeader: CaptureContentTypeHeader;
}

interface DataCaptureConfigSummary {
  readonly EnableCapture: boolean;
  readonly CaptureStatus: string;
  readonly CurrentSamplingPercentage: number;
  readonly DestinationS3Uri: string;
  readonly KmsKeyId: string;
}

interface DataCatalogConfig {
  readonly TableName: string;
  readonly Catalog: string;
  readonly Database: string;
}

interface DataProcessing {
  readonly InputFilter: string;
  readonly OutputFilter: string;
  readonly JoinSource: string;
}

interface DataQualityAppSpecification {
  readonly ImageUri: string;
  readonly ContainerEntrypoint: [];
  readonly ContainerArguments: [];
  readonly RecordPreprocessorSourceUri: string;
  readonly PostAnalyticsProcessorSourceUri: string;
  readonly Environment: {[key: string]: any};
}

interface DataQualityBaselineConfig {
  readonly BaseliningJobName: string;
  readonly ConstraintsResource: MonitoringConstraintsResource;
  readonly StatisticsResource: MonitoringStatisticsResource;
}

interface DataQualityJobInput {
  readonly EndpointInput: EndpointInput;
}

interface DataSource {
  readonly S3DataSource: S3DataSource;
  readonly FileSystemDataSource: FileSystemDataSource;
}

interface DatasetDefinition {
  readonly AthenaDatasetDefinition: AthenaDatasetDefinition;
  readonly RedshiftDatasetDefinition: RedshiftDatasetDefinition;
  readonly LocalPath: string;
  readonly DataDistributionType: string;
  readonly InputMode: string;
}

interface DebugHookConfig {
  readonly LocalPath: string;
  readonly S3OutputPath: string;
  readonly HookParameters: {[key: string]: any};
  readonly CollectionConfigurations: [];
}

interface DebugRuleConfiguration {
  readonly RuleConfigurationName: string;
  readonly LocalPath: string;
  readonly S3OutputPath: string;
  readonly RuleEvaluatorImage: string;
  readonly InstanceType: string;
  readonly VolumeSizeInGB: number;
  readonly RuleParameters: {[key: string]: any};
}

interface DebugRuleEvaluationStatus {
  readonly RuleConfigurationName: string;
  readonly RuleEvaluationJobArn: string;
  readonly RuleEvaluationStatus: string;
  readonly StatusDetails: string;
  readonly LastModifiedTime: Date;
}

interface DeleteActionRequest {
  readonly ActionName: string;
}

interface DeleteActionResponse {
  readonly ActionArn: string;
}

interface DeleteAlgorithmInput {
  readonly AlgorithmName: string;
}

interface DeleteAppImageConfigRequest {
  readonly AppImageConfigName: string;
}

interface DeleteAppRequest {
  readonly DomainId: string;
  readonly UserProfileName: string;
  readonly AppType: string;
  readonly AppName: string;
}

interface DeleteArtifactRequest {
  readonly ArtifactArn: string;
  readonly Source: ArtifactSource;
}

interface DeleteArtifactResponse {
  readonly ArtifactArn: string;
}

interface DeleteAssociationRequest {
  readonly SourceArn: string;
  readonly DestinationArn: string;
}

interface DeleteAssociationResponse {
  readonly SourceArn: string;
  readonly DestinationArn: string;
}

interface DeleteCodeRepositoryInput {
  readonly CodeRepositoryName: string;
}

interface DeleteContextRequest {
  readonly ContextName: string;
}

interface DeleteContextResponse {
  readonly ContextArn: string;
}

interface DeleteDataQualityJobDefinitionRequest {
  readonly JobDefinitionName: string;
}

interface DeleteDeviceFleetRequest {
  readonly DeviceFleetName: string;
}

interface DeleteDomainRequest {
  readonly DomainId: string;
  readonly RetentionPolicy: RetentionPolicy;
}

interface DeleteEndpointConfigInput {
  readonly EndpointConfigName: string;
}

interface DeleteEndpointInput {
  readonly EndpointName: string;
}

interface DeleteExperimentRequest {
  readonly ExperimentName: string;
}

interface DeleteExperimentResponse {
  readonly ExperimentArn: string;
}

interface DeleteFeatureGroupRequest {
  readonly FeatureGroupName: string;
}

interface DeleteFlowDefinitionRequest {
  readonly FlowDefinitionName: string;
}

interface DeleteFlowDefinitionResponse {
}

interface DeleteHumanTaskUiRequest {
  readonly HumanTaskUiName: string;
}

interface DeleteHumanTaskUiResponse {
}

interface DeleteImageRequest {
  readonly ImageName: string;
}

interface DeleteImageResponse {
}

interface DeleteImageVersionRequest {
  readonly ImageName: string;
  readonly Version: number;
}

interface DeleteImageVersionResponse {
}

interface DeleteModelBiasJobDefinitionRequest {
  readonly JobDefinitionName: string;
}

interface DeleteModelExplainabilityJobDefinitionRequest {
  readonly JobDefinitionName: string;
}

interface DeleteModelInput {
  readonly ModelName: string;
}

interface DeleteModelPackageGroupInput {
  readonly ModelPackageGroupName: string;
}

interface DeleteModelPackageGroupPolicyInput {
  readonly ModelPackageGroupName: string;
}

interface DeleteModelPackageInput {
  readonly ModelPackageName: string;
}

interface DeleteModelQualityJobDefinitionRequest {
  readonly JobDefinitionName: string;
}

interface DeleteMonitoringScheduleRequest {
  readonly MonitoringScheduleName: string;
}

interface DeleteNotebookInstanceInput {
  readonly NotebookInstanceName: string;
}

interface DeleteNotebookInstanceLifecycleConfigInput {
  readonly NotebookInstanceLifecycleConfigName: string;
}

interface DeletePipelineRequest {
  readonly PipelineName: string;
  readonly ClientRequestToken: string;
}

interface DeletePipelineResponse {
  readonly PipelineArn: string;
}

interface DeleteProjectInput {
  readonly ProjectName: string;
}

interface DeleteStudioLifecycleConfigRequest {
  readonly StudioLifecycleConfigName: string;
}

interface DeleteTagsInput {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}

interface DeleteTagsOutput {
}

interface DeleteTrialComponentRequest {
  readonly TrialComponentName: string;
}

interface DeleteTrialComponentResponse {
  readonly TrialComponentArn: string;
}

interface DeleteTrialRequest {
  readonly TrialName: string;
}

interface DeleteTrialResponse {
  readonly TrialArn: string;
}

interface DeleteUserProfileRequest {
  readonly DomainId: string;
  readonly UserProfileName: string;
}

interface DeleteWorkforceRequest {
  readonly WorkforceName: string;
}

interface DeleteWorkforceResponse {
}

interface DeleteWorkteamRequest {
  readonly WorkteamName: string;
}

interface DeleteWorkteamResponse {
  readonly Success: boolean;
}

interface DeployedImage {
  readonly SpecifiedImage: string;
  readonly ResolvedImage: string;
  readonly ResolutionTime: Date;
}

interface DeploymentConfig {
  readonly BlueGreenUpdatePolicy: BlueGreenUpdatePolicy;
  readonly AutoRollbackConfiguration: AutoRollbackConfig;
}

interface DeregisterDevicesRequest {
  readonly DeviceFleetName: string;
  readonly DeviceNames: [];
}

interface DescribeActionRequest {
  readonly ActionName: string;
}

interface DescribeActionResponse {
  readonly ActionName: string;
  readonly ActionArn: string;
  readonly Source: ActionSource;
  readonly ActionType: string;
  readonly Description: string;
  readonly Status: string;
  readonly Properties: {[key: string]: any};
  readonly CreationTime: Date;
  readonly CreatedBy: UserContext;
  readonly LastModifiedTime: Date;
  readonly LastModifiedBy: UserContext;
  readonly MetadataProperties: MetadataProperties;
  readonly LineageGroupArn: string;
}

interface DescribeAlgorithmInput {
  readonly AlgorithmName: string;
}

interface DescribeAlgorithmOutput {
  readonly AlgorithmName: string;
  readonly AlgorithmArn: string;
  readonly AlgorithmDescription: string;
  readonly CreationTime: Date;
  readonly TrainingSpecification: TrainingSpecification;
  readonly InferenceSpecification: InferenceSpecification;
  readonly ValidationSpecification: AlgorithmValidationSpecification;
  readonly AlgorithmStatus: string;
  readonly AlgorithmStatusDetails: AlgorithmStatusDetails;
  readonly ProductId: string;
  readonly CertifyForMarketplace: boolean;
}

interface DescribeAppImageConfigRequest {
  readonly AppImageConfigName: string;
}

interface DescribeAppImageConfigResponse {
  readonly AppImageConfigArn: string;
  readonly AppImageConfigName: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
  readonly KernelGatewayImageConfig: KernelGatewayImageConfig;
}

interface DescribeAppRequest {
  readonly DomainId: string;
  readonly UserProfileName: string;
  readonly AppType: string;
  readonly AppName: string;
}

interface DescribeAppResponse {
  readonly AppArn: string;
  readonly AppType: string;
  readonly AppName: string;
  readonly DomainId: string;
  readonly UserProfileName: string;
  readonly Status: string;
  readonly LastHealthCheckTimestamp: Date;
  readonly LastUserActivityTimestamp: Date;
  readonly CreationTime: Date;
  readonly FailureReason: string;
  readonly ResourceSpec: ResourceSpec;
}

interface DescribeArtifactRequest {
  readonly ArtifactArn: string;
}

interface DescribeArtifactResponse {
  readonly ArtifactName: string;
  readonly ArtifactArn: string;
  readonly Source: ArtifactSource;
  readonly ArtifactType: string;
  readonly Properties: {[key: string]: any};
  readonly CreationTime: Date;
  readonly CreatedBy: UserContext;
  readonly LastModifiedTime: Date;
  readonly LastModifiedBy: UserContext;
  readonly MetadataProperties: MetadataProperties;
  readonly LineageGroupArn: string;
}

interface DescribeAutoMLJobRequest {
  readonly AutoMLJobName: string;
}

interface DescribeAutoMLJobResponse {
  readonly AutoMLJobName: string;
  readonly AutoMLJobArn: string;
  readonly InputDataConfig: [];
  readonly OutputDataConfig: AutoMLOutputDataConfig;
  readonly RoleArn: string;
  readonly AutoMLJobObjective: AutoMLJobObjective;
  readonly ProblemType: string;
  readonly AutoMLJobConfig: AutoMLJobConfig;
  readonly CreationTime: Date;
  readonly EndTime: Date;
  readonly LastModifiedTime: Date;
  readonly FailureReason: string;
  readonly PartialFailureReasons: [];
  readonly BestCandidate: AutoMLCandidate;
  readonly AutoMLJobStatus: string;
  readonly AutoMLJobSecondaryStatus: string;
  readonly GenerateCandidateDefinitionsOnly: boolean;
  readonly AutoMLJobArtifacts: AutoMLJobArtifacts;
  readonly ResolvedAttributes: ResolvedAttributes;
  readonly ModelDeployConfig: ModelDeployConfig;
  readonly ModelDeployResult: ModelDeployResult;
}

interface DescribeCodeRepositoryInput {
  readonly CodeRepositoryName: string;
}

interface DescribeCodeRepositoryOutput {
  readonly CodeRepositoryName: string;
  readonly CodeRepositoryArn: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
  readonly GitConfig: GitConfig;
}

interface DescribeCompilationJobRequest {
  readonly CompilationJobName: string;
}

interface DescribeCompilationJobResponse {
  readonly CompilationJobName: string;
  readonly CompilationJobArn: string;
  readonly CompilationJobStatus: string;
  readonly CompilationStartTime: Date;
  readonly CompilationEndTime: Date;
  readonly StoppingCondition: StoppingCondition;
  readonly InferenceImage: string;
  readonly ModelPackageVersionArn: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
  readonly FailureReason: string;
  readonly ModelArtifacts: ModelArtifacts;
  readonly ModelDigests: ModelDigests;
  readonly RoleArn: string;
  readonly InputConfig: InputConfig;
  readonly OutputConfig: OutputConfig;
  readonly VpcConfig: NeoVpcConfig;
}

interface DescribeContextRequest {
  readonly ContextName: string;
}

interface DescribeContextResponse {
  readonly ContextName: string;
  readonly ContextArn: string;
  readonly Source: ContextSource;
  readonly ContextType: string;
  readonly Description: string;
  readonly Properties: {[key: string]: any};
  readonly CreationTime: Date;
  readonly CreatedBy: UserContext;
  readonly LastModifiedTime: Date;
  readonly LastModifiedBy: UserContext;
  readonly LineageGroupArn: string;
}

interface DescribeDataQualityJobDefinitionRequest {
  readonly JobDefinitionName: string;
}

interface DescribeDataQualityJobDefinitionResponse {
  readonly JobDefinitionArn: string;
  readonly JobDefinitionName: string;
  readonly CreationTime: Date;
  readonly DataQualityBaselineConfig: DataQualityBaselineConfig;
  readonly DataQualityAppSpecification: DataQualityAppSpecification;
  readonly DataQualityJobInput: DataQualityJobInput;
  readonly DataQualityJobOutputConfig: MonitoringOutputConfig;
  readonly JobResources: MonitoringResources;
  readonly NetworkConfig: MonitoringNetworkConfig;
  readonly RoleArn: string;
  readonly StoppingCondition: MonitoringStoppingCondition;
}

interface DescribeDeviceFleetRequest {
  readonly DeviceFleetName: string;
}

interface DescribeDeviceFleetResponse {
  readonly DeviceFleetName: string;
  readonly DeviceFleetArn: string;
  readonly OutputConfig: EdgeOutputConfig;
  readonly Description: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
  readonly RoleArn: string;
  readonly IotRoleAlias: string;
}

interface DescribeDeviceRequest {
  readonly NextToken: string;
  readonly DeviceName: string;
  readonly DeviceFleetName: string;
}

interface DescribeDeviceResponse {
  readonly DeviceArn: string;
  readonly DeviceName: string;
  readonly Description: string;
  readonly DeviceFleetName: string;
  readonly IotThingName: string;
  readonly RegistrationTime: Date;
  readonly LatestHeartbeat: Date;
  readonly Models: [];
  readonly MaxModels: number;
  readonly NextToken: string;
  readonly AgentVersion: string;
}

interface DescribeDomainRequest {
  readonly DomainId: string;
}

interface DescribeDomainResponse {
  readonly DomainArn: string;
  readonly DomainId: string;
  readonly DomainName: string;
  readonly HomeEfsFileSystemId: string;
  readonly SingleSignOnManagedApplicationInstanceId: string;
  readonly Status: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
  readonly FailureReason: string;
  readonly AuthMode: string;
  readonly DefaultUserSettings: UserSettings;
  readonly AppNetworkAccessType: string;
  readonly HomeEfsFileSystemKmsKeyId: string;
  readonly SubnetIds: [];
  readonly Url: string;
  readonly VpcId: string;
  readonly KmsKeyId: string;
  readonly DomainSettings: DomainSettings;
  readonly AppSecurityGroupManagement: string;
  readonly SecurityGroupIdForDomainBoundary: string;
}

interface DescribeEdgePackagingJobRequest {
  readonly EdgePackagingJobName: string;
}

interface DescribeEdgePackagingJobResponse {
  readonly EdgePackagingJobArn: string;
  readonly EdgePackagingJobName: string;
  readonly CompilationJobName: string;
  readonly ModelName: string;
  readonly ModelVersion: string;
  readonly RoleArn: string;
  readonly OutputConfig: EdgeOutputConfig;
  readonly ResourceKey: string;
  readonly EdgePackagingJobStatus: string;
  readonly EdgePackagingJobStatusMessage: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
  readonly ModelArtifact: string;
  readonly ModelSignature: string;
  readonly PresetDeploymentOutput: EdgePresetDeploymentOutput;
}

interface DescribeEndpointConfigInput {
  readonly EndpointConfigName: string;
}

interface DescribeEndpointConfigOutput {
  readonly EndpointConfigName: string;
  readonly EndpointConfigArn: string;
  readonly ProductionVariants: [];
  readonly DataCaptureConfig: DataCaptureConfig;
  readonly KmsKeyId: string;
  readonly CreationTime: Date;
  readonly AsyncInferenceConfig: AsyncInferenceConfig;
}

interface DescribeEndpointInput {
  readonly EndpointName: string;
}

interface DescribeEndpointOutput {
  readonly EndpointName: string;
  readonly EndpointArn: string;
  readonly EndpointConfigName: string;
  readonly ProductionVariants: [];
  readonly DataCaptureConfig: DataCaptureConfigSummary;
  readonly EndpointStatus: string;
  readonly FailureReason: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
  readonly LastDeploymentConfig: DeploymentConfig;
  readonly AsyncInferenceConfig: AsyncInferenceConfig;
  readonly PendingDeploymentSummary: PendingDeploymentSummary;
}

interface DescribeExperimentRequest {
  readonly ExperimentName: string;
}

interface DescribeExperimentResponse {
  readonly ExperimentName: string;
  readonly ExperimentArn: string;
  readonly DisplayName: string;
  readonly Source: ExperimentSource;
  readonly Description: string;
  readonly CreationTime: Date;
  readonly CreatedBy: UserContext;
  readonly LastModifiedTime: Date;
  readonly LastModifiedBy: UserContext;
}

interface DescribeFeatureGroupRequest {
  readonly FeatureGroupName: string;
  readonly NextToken: string;
}

interface DescribeFeatureGroupResponse {
  readonly FeatureGroupArn: string;
  readonly FeatureGroupName: string;
  readonly RecordIdentifierFeatureName: string;
  readonly EventTimeFeatureName: string;
  readonly FeatureDefinitions: [];
  readonly CreationTime: Date;
  readonly OnlineStoreConfig: OnlineStoreConfig;
  readonly OfflineStoreConfig: OfflineStoreConfig;
  readonly RoleArn: string;
  readonly FeatureGroupStatus: string;
  readonly OfflineStoreStatus: OfflineStoreStatus;
  readonly FailureReason: string;
  readonly Description: string;
  readonly NextToken: string;
}

interface DescribeFlowDefinitionRequest {
  readonly FlowDefinitionName: string;
}

interface DescribeFlowDefinitionResponse {
  readonly FlowDefinitionArn: string;
  readonly FlowDefinitionName: string;
  readonly FlowDefinitionStatus: string;
  readonly CreationTime: Date;
  readonly HumanLoopRequestSource: HumanLoopRequestSource;
  readonly HumanLoopActivationConfig: HumanLoopActivationConfig;
  readonly HumanLoopConfig: HumanLoopConfig;
  readonly OutputConfig: FlowDefinitionOutputConfig;
  readonly RoleArn: string;
  readonly FailureReason: string;
}

interface DescribeHumanTaskUiRequest {
  readonly HumanTaskUiName: string;
}

interface DescribeHumanTaskUiResponse {
  readonly HumanTaskUiArn: string;
  readonly HumanTaskUiName: string;
  readonly HumanTaskUiStatus: string;
  readonly CreationTime: Date;
  readonly UiTemplate: UiTemplateInfo;
}

interface DescribeHyperParameterTuningJobRequest {
  readonly HyperParameterTuningJobName: string;
}

interface DescribeHyperParameterTuningJobResponse {
  readonly HyperParameterTuningJobName: string;
  readonly HyperParameterTuningJobArn: string;
  readonly HyperParameterTuningJobConfig: HyperParameterTuningJobConfig;
  readonly TrainingJobDefinition: HyperParameterTrainingJobDefinition;
  readonly TrainingJobDefinitions: [];
  readonly HyperParameterTuningJobStatus: string;
  readonly CreationTime: Date;
  readonly HyperParameterTuningEndTime: Date;
  readonly LastModifiedTime: Date;
  readonly TrainingJobStatusCounters: TrainingJobStatusCounters;
  readonly ObjectiveStatusCounters: ObjectiveStatusCounters;
  readonly BestTrainingJob: HyperParameterTrainingJobSummary;
  readonly OverallBestTrainingJob: HyperParameterTrainingJobSummary;
  readonly WarmStartConfig: HyperParameterTuningJobWarmStartConfig;
  readonly FailureReason: string;
}

interface DescribeImageRequest {
  readonly ImageName: string;
}

interface DescribeImageResponse {
  readonly CreationTime: Date;
  readonly Description: string;
  readonly DisplayName: string;
  readonly FailureReason: string;
  readonly ImageArn: string;
  readonly ImageName: string;
  readonly ImageStatus: string;
  readonly LastModifiedTime: Date;
  readonly RoleArn: string;
}

interface DescribeImageVersionRequest {
  readonly ImageName: string;
  readonly Version: number;
}

interface DescribeImageVersionResponse {
  readonly BaseImage: string;
  readonly ContainerImage: string;
  readonly CreationTime: Date;
  readonly FailureReason: string;
  readonly ImageArn: string;
  readonly ImageVersionArn: string;
  readonly ImageVersionStatus: string;
  readonly LastModifiedTime: Date;
  readonly Version: number;
}

interface DescribeInferenceRecommendationsJobRequest {
  readonly JobName: string;
}

interface DescribeInferenceRecommendationsJobResponse {
  readonly JobName: string;
  readonly JobDescription: string;
  readonly JobType: string;
  readonly JobArn: string;
  readonly RoleArn: string;
  readonly Status: string;
  readonly CreationTime: Date;
  readonly CompletionTime: Date;
  readonly LastModifiedTime: Date;
  readonly FailureReason: string;
  readonly InputConfig: RecommendationJobInputConfig;
  readonly StoppingConditions: RecommendationJobStoppingConditions;
  readonly InferenceRecommendations: [];
}

interface DescribeLabelingJobRequest {
  readonly LabelingJobName: string;
}

interface DescribeLabelingJobResponse {
  readonly LabelingJobStatus: string;
  readonly LabelCounters: LabelCounters;
  readonly FailureReason: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
  readonly JobReferenceCode: string;
  readonly LabelingJobName: string;
  readonly LabelingJobArn: string;
  readonly LabelAttributeName: string;
  readonly InputConfig: LabelingJobInputConfig;
  readonly OutputConfig: LabelingJobOutputConfig;
  readonly RoleArn: string;
  readonly LabelCategoryConfigS3Uri: string;
  readonly StoppingConditions: LabelingJobStoppingConditions;
  readonly LabelingJobAlgorithmsConfig: LabelingJobAlgorithmsConfig;
  readonly HumanTaskConfig: HumanTaskConfig;
  readonly Tags: [];
  readonly LabelingJobOutput: LabelingJobOutput;
}

interface DescribeLineageGroupRequest {
  readonly LineageGroupName: string;
}

interface DescribeLineageGroupResponse {
  readonly LineageGroupName: string;
  readonly LineageGroupArn: string;
  readonly DisplayName: string;
  readonly Description: string;
  readonly CreationTime: Date;
  readonly CreatedBy: UserContext;
  readonly LastModifiedTime: Date;
  readonly LastModifiedBy: UserContext;
}

interface DescribeModelBiasJobDefinitionRequest {
  readonly JobDefinitionName: string;
}

interface DescribeModelBiasJobDefinitionResponse {
  readonly JobDefinitionArn: string;
  readonly JobDefinitionName: string;
  readonly CreationTime: Date;
  readonly ModelBiasBaselineConfig: ModelBiasBaselineConfig;
  readonly ModelBiasAppSpecification: ModelBiasAppSpecification;
  readonly ModelBiasJobInput: ModelBiasJobInput;
  readonly ModelBiasJobOutputConfig: MonitoringOutputConfig;
  readonly JobResources: MonitoringResources;
  readonly NetworkConfig: MonitoringNetworkConfig;
  readonly RoleArn: string;
  readonly StoppingCondition: MonitoringStoppingCondition;
}

interface DescribeModelExplainabilityJobDefinitionRequest {
  readonly JobDefinitionName: string;
}

interface DescribeModelExplainabilityJobDefinitionResponse {
  readonly JobDefinitionArn: string;
  readonly JobDefinitionName: string;
  readonly CreationTime: Date;
  readonly ModelExplainabilityBaselineConfig: ModelExplainabilityBaselineConfig;
  readonly ModelExplainabilityAppSpecification: ModelExplainabilityAppSpecification;
  readonly ModelExplainabilityJobInput: ModelExplainabilityJobInput;
  readonly ModelExplainabilityJobOutputConfig: MonitoringOutputConfig;
  readonly JobResources: MonitoringResources;
  readonly NetworkConfig: MonitoringNetworkConfig;
  readonly RoleArn: string;
  readonly StoppingCondition: MonitoringStoppingCondition;
}

interface DescribeModelInput {
  readonly ModelName: string;
}

interface DescribeModelOutput {
  readonly ModelName: string;
  readonly PrimaryContainer: ContainerDefinition;
  readonly Containers: [];
  readonly InferenceExecutionConfig: InferenceExecutionConfig;
  readonly ExecutionRoleArn: string;
  readonly VpcConfig: VpcConfig;
  readonly CreationTime: Date;
  readonly ModelArn: string;
  readonly EnableNetworkIsolation: boolean;
}

interface DescribeModelPackageGroupInput {
  readonly ModelPackageGroupName: string;
}

interface DescribeModelPackageGroupOutput {
  readonly ModelPackageGroupName: string;
  readonly ModelPackageGroupArn: string;
  readonly ModelPackageGroupDescription: string;
  readonly CreationTime: Date;
  readonly CreatedBy: UserContext;
  readonly ModelPackageGroupStatus: string;
}

interface DescribeModelPackageInput {
  readonly ModelPackageName: string;
}

interface DescribeModelPackageOutput {
  readonly ModelPackageName: string;
  readonly ModelPackageGroupName: string;
  readonly ModelPackageVersion: number;
  readonly ModelPackageArn: string;
  readonly ModelPackageDescription: string;
  readonly CreationTime: Date;
  readonly InferenceSpecification: InferenceSpecification;
  readonly SourceAlgorithmSpecification: SourceAlgorithmSpecification;
  readonly ValidationSpecification: ModelPackageValidationSpecification;
  readonly ModelPackageStatus: string;
  readonly ModelPackageStatusDetails: ModelPackageStatusDetails;
  readonly CertifyForMarketplace: boolean;
  readonly ModelApprovalStatus: string;
  readonly CreatedBy: UserContext;
  readonly MetadataProperties: MetadataProperties;
  readonly ModelMetrics: ModelMetrics;
  readonly LastModifiedTime: Date;
  readonly LastModifiedBy: UserContext;
  readonly ApprovalDescription: string;
  readonly CustomerMetadataProperties: {[key: string]: any};
  readonly DriftCheckBaselines: DriftCheckBaselines;
  readonly Domain: string;
  readonly Task: string;
  readonly SamplePayloadUrl: string;
  readonly AdditionalInferenceSpecifications: [];
}

interface DescribeModelQualityJobDefinitionRequest {
  readonly JobDefinitionName: string;
}

interface DescribeModelQualityJobDefinitionResponse {
  readonly JobDefinitionArn: string;
  readonly JobDefinitionName: string;
  readonly CreationTime: Date;
  readonly ModelQualityBaselineConfig: ModelQualityBaselineConfig;
  readonly ModelQualityAppSpecification: ModelQualityAppSpecification;
  readonly ModelQualityJobInput: ModelQualityJobInput;
  readonly ModelQualityJobOutputConfig: MonitoringOutputConfig;
  readonly JobResources: MonitoringResources;
  readonly NetworkConfig: MonitoringNetworkConfig;
  readonly RoleArn: string;
  readonly StoppingCondition: MonitoringStoppingCondition;
}

interface DescribeMonitoringScheduleRequest {
  readonly MonitoringScheduleName: string;
}

interface DescribeMonitoringScheduleResponse {
  readonly MonitoringScheduleArn: string;
  readonly MonitoringScheduleName: string;
  readonly MonitoringScheduleStatus: string;
  readonly MonitoringType: string;
  readonly FailureReason: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
  readonly MonitoringScheduleConfig: MonitoringScheduleConfig;
  readonly EndpointName: string;
  readonly LastMonitoringExecutionSummary: MonitoringExecutionSummary;
}

interface DescribeNotebookInstanceInput {
  readonly NotebookInstanceName: string;
}

interface DescribeNotebookInstanceLifecycleConfigInput {
  readonly NotebookInstanceLifecycleConfigName: string;
}

interface DescribeNotebookInstanceLifecycleConfigOutput {
  readonly NotebookInstanceLifecycleConfigArn: string;
  readonly NotebookInstanceLifecycleConfigName: string;
  readonly OnCreate: [];
  readonly OnStart: [];
  readonly LastModifiedTime: Date;
  readonly CreationTime: Date;
}

interface DescribeNotebookInstanceOutput {
  readonly NotebookInstanceArn: string;
  readonly NotebookInstanceName: string;
  readonly NotebookInstanceStatus: string;
  readonly FailureReason: string;
  readonly Url: string;
  readonly InstanceType: string;
  readonly SubnetId: string;
  readonly SecurityGroups: [];
  readonly RoleArn: string;
  readonly KmsKeyId: string;
  readonly NetworkInterfaceId: string;
  readonly LastModifiedTime: Date;
  readonly CreationTime: Date;
  readonly NotebookInstanceLifecycleConfigName: string;
  readonly DirectInternetAccess: string;
  readonly VolumeSizeInGB: number;
  readonly AcceleratorTypes: [];
  readonly DefaultCodeRepository: string;
  readonly AdditionalCodeRepositories: [];
  readonly RootAccess: string;
  readonly PlatformIdentifier: string;
}

interface DescribePipelineDefinitionForExecutionRequest {
  readonly PipelineExecutionArn: string;
}

interface DescribePipelineDefinitionForExecutionResponse {
  readonly PipelineDefinition: string;
  readonly CreationTime: Date;
}

interface DescribePipelineExecutionRequest {
  readonly PipelineExecutionArn: string;
}

interface DescribePipelineExecutionResponse {
  readonly PipelineArn: string;
  readonly PipelineExecutionArn: string;
  readonly PipelineExecutionDisplayName: string;
  readonly PipelineExecutionStatus: string;
  readonly PipelineExecutionDescription: string;
  readonly PipelineExperimentConfig: PipelineExperimentConfig;
  readonly FailureReason: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
  readonly CreatedBy: UserContext;
  readonly LastModifiedBy: UserContext;
}

interface DescribePipelineRequest {
  readonly PipelineName: string;
}

interface DescribePipelineResponse {
  readonly PipelineArn: string;
  readonly PipelineName: string;
  readonly PipelineDisplayName: string;
  readonly PipelineDefinition: string;
  readonly PipelineDescription: string;
  readonly RoleArn: string;
  readonly PipelineStatus: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
  readonly LastRunTime: Date;
  readonly CreatedBy: UserContext;
  readonly LastModifiedBy: UserContext;
}

interface DescribeProcessingJobRequest {
  readonly ProcessingJobName: string;
}

interface DescribeProcessingJobResponse {
  readonly ProcessingInputs: [];
  readonly ProcessingOutputConfig: ProcessingOutputConfig;
  readonly ProcessingJobName: string;
  readonly ProcessingResources: ProcessingResources;
  readonly StoppingCondition: ProcessingStoppingCondition;
  readonly AppSpecification: AppSpecification;
  readonly Environment: {[key: string]: any};
  readonly NetworkConfig: NetworkConfig;
  readonly RoleArn: string;
  readonly ExperimentConfig: ExperimentConfig;
  readonly ProcessingJobArn: string;
  readonly ProcessingJobStatus: string;
  readonly ExitMessage: string;
  readonly FailureReason: string;
  readonly ProcessingEndTime: Date;
  readonly ProcessingStartTime: Date;
  readonly LastModifiedTime: Date;
  readonly CreationTime: Date;
  readonly MonitoringScheduleArn: string;
  readonly AutoMLJobArn: string;
  readonly TrainingJobArn: string;
}

interface DescribeProjectInput {
  readonly ProjectName: string;
}

interface DescribeProjectOutput {
  readonly ProjectArn: string;
  readonly ProjectName: string;
  readonly ProjectId: string;
  readonly ProjectDescription: string;
  readonly ServiceCatalogProvisioningDetails: ServiceCatalogProvisioningDetails;
  readonly ServiceCatalogProvisionedProductDetails: ServiceCatalogProvisionedProductDetails;
  readonly ProjectStatus: string;
  readonly CreatedBy: UserContext;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
  readonly LastModifiedBy: UserContext;
}

interface DescribeStudioLifecycleConfigRequest {
  readonly StudioLifecycleConfigName: string;
}

interface DescribeStudioLifecycleConfigResponse {
  readonly StudioLifecycleConfigArn: string;
  readonly StudioLifecycleConfigName: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
  readonly StudioLifecycleConfigContent: string;
  readonly StudioLifecycleConfigAppType: string;
}

interface DescribeSubscribedWorkteamRequest {
  readonly WorkteamArn: string;
}

interface DescribeSubscribedWorkteamResponse {
  readonly SubscribedWorkteam: SubscribedWorkteam;
}

interface DescribeTrainingJobRequest {
  readonly TrainingJobName: string;
}

interface DescribeTrainingJobResponse {
  readonly TrainingJobName: string;
  readonly TrainingJobArn: string;
  readonly TuningJobArn: string;
  readonly LabelingJobArn: string;
  readonly AutoMLJobArn: string;
  readonly ModelArtifacts: ModelArtifacts;
  readonly TrainingJobStatus: string;
  readonly SecondaryStatus: string;
  readonly FailureReason: string;
  readonly HyperParameters: {[key: string]: any};
  readonly AlgorithmSpecification: AlgorithmSpecification;
  readonly RoleArn: string;
  readonly InputDataConfig: [];
  readonly OutputDataConfig: OutputDataConfig;
  readonly ResourceConfig: ResourceConfig;
  readonly VpcConfig: VpcConfig;
  readonly StoppingCondition: StoppingCondition;
  readonly CreationTime: Date;
  readonly TrainingStartTime: Date;
  readonly TrainingEndTime: Date;
  readonly LastModifiedTime: Date;
  readonly SecondaryStatusTransitions: [];
  readonly FinalMetricDataList: [];
  readonly EnableNetworkIsolation: boolean;
  readonly EnableInterContainerTrafficEncryption: boolean;
  readonly EnableManagedSpotTraining: boolean;
  readonly CheckpointConfig: CheckpointConfig;
  readonly TrainingTimeInSeconds: number;
  readonly BillableTimeInSeconds: number;
  readonly DebugHookConfig: DebugHookConfig;
  readonly ExperimentConfig: ExperimentConfig;
  readonly DebugRuleConfigurations: [];
  readonly TensorBoardOutputConfig: TensorBoardOutputConfig;
  readonly DebugRuleEvaluationStatuses: [];
  readonly ProfilerConfig: ProfilerConfig;
  readonly ProfilerRuleConfigurations: [];
  readonly ProfilerRuleEvaluationStatuses: [];
  readonly ProfilingStatus: string;
  readonly RetryStrategy: RetryStrategy;
  readonly Environment: {[key: string]: any};
}

interface DescribeTransformJobRequest {
  readonly TransformJobName: string;
}

interface DescribeTransformJobResponse {
  readonly TransformJobName: string;
  readonly TransformJobArn: string;
  readonly TransformJobStatus: string;
  readonly FailureReason: string;
  readonly ModelName: string;
  readonly MaxConcurrentTransforms: number;
  readonly ModelClientConfig: ModelClientConfig;
  readonly MaxPayloadInMB: number;
  readonly BatchStrategy: string;
  readonly Environment: {[key: string]: any};
  readonly TransformInput: TransformInput;
  readonly TransformOutput: TransformOutput;
  readonly TransformResources: TransformResources;
  readonly CreationTime: Date;
  readonly TransformStartTime: Date;
  readonly TransformEndTime: Date;
  readonly LabelingJobArn: string;
  readonly AutoMLJobArn: string;
  readonly DataProcessing: DataProcessing;
  readonly ExperimentConfig: ExperimentConfig;
}

interface DescribeTrialComponentRequest {
  readonly TrialComponentName: string;
}

interface DescribeTrialComponentResponse {
  readonly TrialComponentName: string;
  readonly TrialComponentArn: string;
  readonly DisplayName: string;
  readonly Source: TrialComponentSource;
  readonly Status: TrialComponentStatus;
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly CreationTime: Date;
  readonly CreatedBy: UserContext;
  readonly LastModifiedTime: Date;
  readonly LastModifiedBy: UserContext;
  readonly Parameters: {[key: string]: any};
  readonly InputArtifacts: {[key: string]: any};
  readonly OutputArtifacts: {[key: string]: any};
  readonly MetadataProperties: MetadataProperties;
  readonly Metrics: [];
  readonly LineageGroupArn: string;
}

interface DescribeTrialRequest {
  readonly TrialName: string;
}

interface DescribeTrialResponse {
  readonly TrialName: string;
  readonly TrialArn: string;
  readonly DisplayName: string;
  readonly ExperimentName: string;
  readonly Source: TrialSource;
  readonly CreationTime: Date;
  readonly CreatedBy: UserContext;
  readonly LastModifiedTime: Date;
  readonly LastModifiedBy: UserContext;
  readonly MetadataProperties: MetadataProperties;
}

interface DescribeUserProfileRequest {
  readonly DomainId: string;
  readonly UserProfileName: string;
}

interface DescribeUserProfileResponse {
  readonly DomainId: string;
  readonly UserProfileArn: string;
  readonly UserProfileName: string;
  readonly HomeEfsFileSystemUid: string;
  readonly Status: string;
  readonly LastModifiedTime: Date;
  readonly CreationTime: Date;
  readonly FailureReason: string;
  readonly SingleSignOnUserIdentifier: string;
  readonly SingleSignOnUserValue: string;
  readonly UserSettings: UserSettings;
}

interface DescribeWorkforceRequest {
  readonly WorkforceName: string;
}

interface DescribeWorkforceResponse {
  readonly Workforce: Workforce;
}

interface DescribeWorkteamRequest {
  readonly WorkteamName: string;
}

interface DescribeWorkteamResponse {
  readonly Workteam: Workteam;
}

interface DesiredWeightAndCapacity {
  readonly VariantName: string;
  readonly DesiredWeight: unknown;
  readonly DesiredInstanceCount: number;
}

interface Device {
  readonly DeviceName: string;
  readonly Description: string;
  readonly IotThingName: string;
}

interface DeviceFleetSummary {
  readonly DeviceFleetArn: string;
  readonly DeviceFleetName: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
}

interface DeviceStats {
  readonly ConnectedDeviceCount: number;
  readonly RegisteredDeviceCount: number;
}

interface DeviceSummary {
  readonly DeviceName: string;
  readonly DeviceArn: string;
  readonly Description: string;
  readonly DeviceFleetName: string;
  readonly IotThingName: string;
  readonly RegistrationTime: Date;
  readonly LatestHeartbeat: Date;
  readonly Models: [];
  readonly AgentVersion: string;
}

interface DisableSagemakerServicecatalogPortfolioInput {
}

interface DisableSagemakerServicecatalogPortfolioOutput {
}

interface DisassociateTrialComponentRequest {
  readonly TrialComponentName: string;
  readonly TrialName: string;
}

interface DisassociateTrialComponentResponse {
  readonly TrialComponentArn: string;
  readonly TrialArn: string;
}

interface DomainDetails {
  readonly DomainArn: string;
  readonly DomainId: string;
  readonly DomainName: string;
  readonly Status: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
  readonly Url: string;
}

interface DomainSettings {
  readonly SecurityGroupIds: [];
  readonly RStudioServerProDomainSettings: RStudioServerProDomainSettings;
}

interface DomainSettingsForUpdate {
  readonly RStudioServerProDomainSettingsForUpdate: RStudioServerProDomainSettingsForUpdate;
}

interface DriftCheckBaselines {
  readonly Bias: DriftCheckBias;
  readonly Explainability: DriftCheckExplainability;
  readonly ModelQuality: DriftCheckModelQuality;
  readonly ModelDataQuality: DriftCheckModelDataQuality;
}

interface DriftCheckBias {
  readonly ConfigFile: FileSource;
  readonly PreTrainingConstraints: MetricsSource;
  readonly PostTrainingConstraints: MetricsSource;
}

interface DriftCheckExplainability {
  readonly Constraints: MetricsSource;
  readonly ConfigFile: FileSource;
}

interface DriftCheckModelDataQuality {
  readonly Statistics: MetricsSource;
  readonly Constraints: MetricsSource;
}

interface DriftCheckModelQuality {
  readonly Statistics: MetricsSource;
  readonly Constraints: MetricsSource;
}

interface Edge {
  readonly SourceArn: string;
  readonly DestinationArn: string;
  readonly AssociationType: string;
}

interface EdgeModel {
  readonly ModelName: string;
  readonly ModelVersion: string;
  readonly LatestSampleTime: Date;
  readonly LatestInference: Date;
}

interface EdgeModelStat {
  readonly ModelName: string;
  readonly ModelVersion: string;
  readonly OfflineDeviceCount: number;
  readonly ConnectedDeviceCount: number;
  readonly ActiveDeviceCount: number;
  readonly SamplingDeviceCount: number;
}

interface EdgeModelSummary {
  readonly ModelName: string;
  readonly ModelVersion: string;
}

interface EdgeOutputConfig {
  readonly S3OutputLocation: string;
  readonly KmsKeyId: string;
  readonly PresetDeploymentType: string;
  readonly PresetDeploymentConfig: string;
}

interface EdgePackagingJobSummary {
  readonly EdgePackagingJobArn: string;
  readonly EdgePackagingJobName: string;
  readonly EdgePackagingJobStatus: string;
  readonly CompilationJobName: string;
  readonly ModelName: string;
  readonly ModelVersion: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
}

interface EdgePresetDeploymentOutput {
  readonly Type: string;
  readonly Artifact: string;
  readonly Status: string;
  readonly StatusMessage: string;
}

interface EnableSagemakerServicecatalogPortfolioInput {
}

interface EnableSagemakerServicecatalogPortfolioOutput {
}

interface Endpoint {
  readonly EndpointName: string;
  readonly EndpointArn: string;
  readonly EndpointConfigName: string;
  readonly ProductionVariants: [];
  readonly DataCaptureConfig: DataCaptureConfigSummary;
  readonly EndpointStatus: string;
  readonly FailureReason: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
  readonly MonitoringSchedules: [];
  readonly Tags: [];
}

interface EndpointConfigSummary {
  readonly EndpointConfigName: string;
  readonly EndpointConfigArn: string;
  readonly CreationTime: Date;
}

interface EndpointInput {
  readonly EndpointName: string;
  readonly LocalPath: string;
  readonly S3InputMode: string;
  readonly S3DataDistributionType: string;
  readonly FeaturesAttribute: string;
  readonly InferenceAttribute: string;
  readonly ProbabilityAttribute: string;
  readonly ProbabilityThresholdAttribute: unknown;
  readonly StartTimeOffset: string;
  readonly EndTimeOffset: string;
}

interface EndpointInputConfiguration {
  readonly InstanceType: string;
  readonly InferenceSpecificationName: string;
  readonly EnvironmentParameterRanges: EnvironmentParameterRanges;
}

interface EndpointOutputConfiguration {
  readonly EndpointName: string;
  readonly VariantName: string;
  readonly InstanceType: string;
  readonly InitialInstanceCount: number;
}

interface EndpointSummary {
  readonly EndpointName: string;
  readonly EndpointArn: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
  readonly EndpointStatus: string;
}

interface EnvironmentParameter {
  readonly Key: string;
  readonly ValueType: string;
  readonly Value: string;
}

interface EnvironmentParameterRanges {
  readonly CategoricalParameterRanges: [];
}

interface Experiment {
  readonly ExperimentName: string;
  readonly ExperimentArn: string;
  readonly DisplayName: string;
  readonly Source: ExperimentSource;
  readonly Description: string;
  readonly CreationTime: Date;
  readonly CreatedBy: UserContext;
  readonly LastModifiedTime: Date;
  readonly LastModifiedBy: UserContext;
  readonly Tags: [];
}

interface ExperimentConfig {
  readonly ExperimentName: string;
  readonly TrialName: string;
  readonly TrialComponentDisplayName: string;
}

interface ExperimentSource {
  readonly SourceArn: string;
  readonly SourceType: string;
}

interface ExperimentSummary {
  readonly ExperimentArn: string;
  readonly ExperimentName: string;
  readonly DisplayName: string;
  readonly ExperimentSource: ExperimentSource;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
}

interface Explainability {
  readonly Report: MetricsSource;
}

interface FeatureDefinition {
  readonly FeatureName: string;
  readonly FeatureType: string;
}

interface FeatureGroup {
  readonly FeatureGroupArn: string;
  readonly FeatureGroupName: string;
  readonly RecordIdentifierFeatureName: string;
  readonly EventTimeFeatureName: string;
  readonly FeatureDefinitions: [];
  readonly CreationTime: Date;
  readonly OnlineStoreConfig: OnlineStoreConfig;
  readonly OfflineStoreConfig: OfflineStoreConfig;
  readonly RoleArn: string;
  readonly FeatureGroupStatus: string;
  readonly OfflineStoreStatus: OfflineStoreStatus;
  readonly FailureReason: string;
  readonly Description: string;
  readonly Tags: [];
}

interface FeatureGroupSummary {
  readonly FeatureGroupName: string;
  readonly FeatureGroupArn: string;
  readonly CreationTime: Date;
  readonly FeatureGroupStatus: string;
  readonly OfflineStoreStatus: OfflineStoreStatus;
}

interface FileSource {
  readonly ContentType: string;
  readonly ContentDigest: string;
  readonly S3Uri: string;
}

interface FileSystemConfig {
  readonly MountPath: string;
  readonly DefaultUid: number;
  readonly DefaultGid: number;
}

interface FileSystemDataSource {
  readonly FileSystemId: string;
  readonly FileSystemAccessMode: string;
  readonly FileSystemType: string;
  readonly DirectoryPath: string;
}

interface Filter {
  readonly Name: string;
  readonly Operator: string;
  readonly Value: string;
}

interface FinalAutoMLJobObjectiveMetric {
  readonly Type: string;
  readonly MetricName: string;
  readonly Value: unknown;
}

interface FinalHyperParameterTuningJobObjectiveMetric {
  readonly Type: string;
  readonly MetricName: string;
  readonly Value: unknown;
}

interface FlowDefinitionOutputConfig {
  readonly S3OutputPath: string;
  readonly KmsKeyId: string;
}

interface FlowDefinitionSummary {
  readonly FlowDefinitionName: string;
  readonly FlowDefinitionArn: string;
  readonly FlowDefinitionStatus: string;
  readonly CreationTime: Date;
  readonly FailureReason: string;
}

interface GetDeviceFleetReportRequest {
  readonly DeviceFleetName: string;
}

interface GetDeviceFleetReportResponse {
  readonly DeviceFleetArn: string;
  readonly DeviceFleetName: string;
  readonly OutputConfig: EdgeOutputConfig;
  readonly Description: string;
  readonly ReportGenerated: Date;
  readonly DeviceStats: DeviceStats;
  readonly AgentVersions: [];
  readonly ModelStats: [];
}

interface GetLineageGroupPolicyRequest {
  readonly LineageGroupName: string;
}

interface GetLineageGroupPolicyResponse {
  readonly LineageGroupArn: string;
  readonly ResourcePolicy: string;
}

interface GetModelPackageGroupPolicyInput {
  readonly ModelPackageGroupName: string;
}

interface GetModelPackageGroupPolicyOutput {
  readonly ResourcePolicy: string;
}

interface GetSagemakerServicecatalogPortfolioStatusInput {
}

interface GetSagemakerServicecatalogPortfolioStatusOutput {
  readonly Status: string;
}

interface GetSearchSuggestionsRequest {
  readonly Resource: string;
  readonly SuggestionQuery: SuggestionQuery;
}

interface GetSearchSuggestionsResponse {
  readonly PropertyNameSuggestions: [];
}

interface GitConfig {
  readonly RepositoryUrl: string;
  readonly Branch: string;
  readonly SecretArn: string;
}

interface GitConfigForUpdate {
  readonly SecretArn: string;
}

interface HumanLoopActivationConditionsConfig {
  readonly HumanLoopActivationConditions: string;
}

interface HumanLoopActivationConfig {
  readonly HumanLoopActivationConditionsConfig: HumanLoopActivationConditionsConfig;
}

interface HumanLoopConfig {
  readonly WorkteamArn: string;
  readonly HumanTaskUiArn: string;
  readonly TaskTitle: string;
  readonly TaskDescription: string;
  readonly TaskCount: number;
  readonly TaskAvailabilityLifetimeInSeconds: number;
  readonly TaskTimeLimitInSeconds: number;
  readonly TaskKeywords: [];
  readonly PublicWorkforceTaskPrice: PublicWorkforceTaskPrice;
}

interface HumanLoopRequestSource {
  readonly AwsManagedHumanLoopRequestSource: string;
}

interface HumanTaskConfig {
  readonly WorkteamArn: string;
  readonly UiConfig: UiConfig;
  readonly PreHumanTaskLambdaArn: string;
  readonly TaskKeywords: [];
  readonly TaskTitle: string;
  readonly TaskDescription: string;
  readonly NumberOfHumanWorkersPerDataObject: number;
  readonly TaskTimeLimitInSeconds: number;
  readonly TaskAvailabilityLifetimeInSeconds: number;
  readonly MaxConcurrentTaskCount: number;
  readonly AnnotationConsolidationConfig: AnnotationConsolidationConfig;
  readonly PublicWorkforceTaskPrice: PublicWorkforceTaskPrice;
}

interface HumanTaskUiSummary {
  readonly HumanTaskUiName: string;
  readonly HumanTaskUiArn: string;
  readonly CreationTime: Date;
}

interface HyperParameterAlgorithmSpecification {
  readonly TrainingImage: string;
  readonly TrainingInputMode: string;
  readonly AlgorithmName: string;
  readonly MetricDefinitions: [];
}

interface HyperParameterSpecification {
  readonly Name: string;
  readonly Description: string;
  readonly Type: string;
  readonly Range: ParameterRange;
  readonly IsTunable: boolean;
  readonly IsRequired: boolean;
  readonly DefaultValue: string;
}

interface HyperParameterTrainingJobDefinition {
  readonly DefinitionName: string;
  readonly TuningObjective: HyperParameterTuningJobObjective;
  readonly HyperParameterRanges: ParameterRanges;
  readonly StaticHyperParameters: {[key: string]: any};
  readonly AlgorithmSpecification: HyperParameterAlgorithmSpecification;
  readonly RoleArn: string;
  readonly InputDataConfig: [];
  readonly VpcConfig: VpcConfig;
  readonly OutputDataConfig: OutputDataConfig;
  readonly ResourceConfig: ResourceConfig;
  readonly StoppingCondition: StoppingCondition;
  readonly EnableNetworkIsolation: boolean;
  readonly EnableInterContainerTrafficEncryption: boolean;
  readonly EnableManagedSpotTraining: boolean;
  readonly CheckpointConfig: CheckpointConfig;
  readonly RetryStrategy: RetryStrategy;
}

interface HyperParameterTrainingJobSummary {
  readonly TrainingJobDefinitionName: string;
  readonly TrainingJobName: string;
  readonly TrainingJobArn: string;
  readonly TuningJobName: string;
  readonly CreationTime: Date;
  readonly TrainingStartTime: Date;
  readonly TrainingEndTime: Date;
  readonly TrainingJobStatus: string;
  readonly TunedHyperParameters: {[key: string]: any};
  readonly FailureReason: string;
  readonly FinalHyperParameterTuningJobObjectiveMetric: FinalHyperParameterTuningJobObjectiveMetric;
  readonly ObjectiveStatus: string;
}

interface HyperParameterTuningJobConfig {
  readonly Strategy: string;
  readonly HyperParameterTuningJobObjective: HyperParameterTuningJobObjective;
  readonly ResourceLimits: ResourceLimits;
  readonly ParameterRanges: ParameterRanges;
  readonly TrainingJobEarlyStoppingType: string;
  readonly TuningJobCompletionCriteria: TuningJobCompletionCriteria;
}

interface HyperParameterTuningJobObjective {
  readonly Type: string;
  readonly MetricName: string;
}

interface HyperParameterTuningJobSummary {
  readonly HyperParameterTuningJobName: string;
  readonly HyperParameterTuningJobArn: string;
  readonly HyperParameterTuningJobStatus: string;
  readonly Strategy: string;
  readonly CreationTime: Date;
  readonly HyperParameterTuningEndTime: Date;
  readonly LastModifiedTime: Date;
  readonly TrainingJobStatusCounters: TrainingJobStatusCounters;
  readonly ObjectiveStatusCounters: ObjectiveStatusCounters;
  readonly ResourceLimits: ResourceLimits;
}

interface HyperParameterTuningJobWarmStartConfig {
  readonly ParentHyperParameterTuningJobs: [];
  readonly WarmStartType: string;
}

interface Image {
  readonly CreationTime: Date;
  readonly Description: string;
  readonly DisplayName: string;
  readonly FailureReason: string;
  readonly ImageArn: string;
  readonly ImageName: string;
  readonly ImageStatus: string;
  readonly LastModifiedTime: Date;
}

interface ImageConfig {
  readonly RepositoryAccessMode: string;
  readonly RepositoryAuthConfig: RepositoryAuthConfig;
}

interface ImageVersion {
  readonly CreationTime: Date;
  readonly FailureReason: string;
  readonly ImageArn: string;
  readonly ImageVersionArn: string;
  readonly ImageVersionStatus: string;
  readonly LastModifiedTime: Date;
  readonly Version: number;
}

interface InferenceExecutionConfig {
  readonly Mode: string;
}

interface InferenceRecommendation {
  readonly Metrics: RecommendationMetrics;
  readonly EndpointConfiguration: EndpointOutputConfiguration;
  readonly ModelConfiguration: ModelConfiguration;
}

interface InferenceRecommendationsJob {
  readonly JobName: string;
  readonly JobDescription: string;
  readonly JobType: string;
  readonly JobArn: string;
  readonly Status: string;
  readonly CreationTime: Date;
  readonly CompletionTime: Date;
  readonly RoleArn: string;
  readonly LastModifiedTime: Date;
  readonly FailureReason: string;
}

interface InferenceSpecification {
  readonly Containers: [];
  readonly SupportedTransformInstanceTypes: [];
  readonly SupportedRealtimeInferenceInstanceTypes: [];
  readonly SupportedContentTypes: [];
  readonly SupportedResponseMIMETypes: [];
}

interface InputConfig {
  readonly S3Uri: string;
  readonly DataInputConfig: string;
  readonly Framework: string;
  readonly FrameworkVersion: string;
}

interface IntegerParameterRange {
  readonly Name: string;
  readonly MinValue: string;
  readonly MaxValue: string;
  readonly ScalingType: string;
}

interface IntegerParameterRangeSpecification {
  readonly MinValue: string;
  readonly MaxValue: string;
}

interface JupyterServerAppSettings {
  readonly DefaultResourceSpec: ResourceSpec;
  readonly LifecycleConfigArns: [];
}

interface KernelGatewayAppSettings {
  readonly DefaultResourceSpec: ResourceSpec;
  readonly CustomImages: [];
  readonly LifecycleConfigArns: [];
}

interface KernelGatewayImageConfig {
  readonly KernelSpecs: [];
  readonly FileSystemConfig: FileSystemConfig;
}

interface KernelSpec {
  readonly Name: string;
  readonly DisplayName: string;
}

interface LabelCounters {
  readonly TotalLabeled: number;
  readonly HumanLabeled: number;
  readonly MachineLabeled: number;
  readonly FailedNonRetryableError: number;
  readonly Unlabeled: number;
}

interface LabelCountersForWorkteam {
  readonly HumanLabeled: number;
  readonly PendingHuman: number;
  readonly Total: number;
}

interface LabelingJobAlgorithmsConfig {
  readonly LabelingJobAlgorithmSpecificationArn: string;
  readonly InitialActiveLearningModelArn: string;
  readonly LabelingJobResourceConfig: LabelingJobResourceConfig;
}

interface LabelingJobDataAttributes {
  readonly ContentClassifiers: [];
}

interface LabelingJobDataSource {
  readonly S3DataSource: LabelingJobS3DataSource;
  readonly SnsDataSource: LabelingJobSnsDataSource;
}

interface LabelingJobForWorkteamSummary {
  readonly LabelingJobName: string;
  readonly JobReferenceCode: string;
  readonly WorkRequesterAccountId: string;
  readonly CreationTime: Date;
  readonly LabelCounters: LabelCountersForWorkteam;
  readonly NumberOfHumanWorkersPerDataObject: number;
}

interface LabelingJobInputConfig {
  readonly DataSource: LabelingJobDataSource;
  readonly DataAttributes: LabelingJobDataAttributes;
}

interface LabelingJobOutput {
  readonly OutputDatasetS3Uri: string;
  readonly FinalActiveLearningModelArn: string;
}

interface LabelingJobOutputConfig {
  readonly S3OutputPath: string;
  readonly KmsKeyId: string;
  readonly SnsTopicArn: string;
}

interface LabelingJobResourceConfig {
  readonly VolumeKmsKeyId: string;
}

interface LabelingJobS3DataSource {
  readonly ManifestS3Uri: string;
}

interface LabelingJobSnsDataSource {
  readonly SnsTopicArn: string;
}

interface LabelingJobStoppingConditions {
  readonly MaxHumanLabeledObjectCount: number;
  readonly MaxPercentageOfInputDatasetLabeled: number;
}

interface LabelingJobSummary {
  readonly LabelingJobName: string;
  readonly LabelingJobArn: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
  readonly LabelingJobStatus: string;
  readonly LabelCounters: LabelCounters;
  readonly WorkteamArn: string;
  readonly PreHumanTaskLambdaArn: string;
  readonly AnnotationConsolidationLambdaArn: string;
  readonly FailureReason: string;
  readonly LabelingJobOutput: LabelingJobOutput;
  readonly InputConfig: LabelingJobInputConfig;
}

interface LambdaStepMetadata {
  readonly Arn: string;
  readonly OutputParameters: [];
}

interface LineageGroupSummary {
  readonly LineageGroupArn: string;
  readonly LineageGroupName: string;
  readonly DisplayName: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
}

interface ListActionsRequest {
  readonly SourceUri: string;
  readonly ActionType: string;
  readonly CreatedAfter: Date;
  readonly CreatedBefore: Date;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListActionsResponse {
  readonly ActionSummaries: [];
  readonly NextToken: string;
}

interface ListAlgorithmsInput {
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly MaxResults: number;
  readonly NameContains: string;
  readonly NextToken: string;
  readonly SortBy: string;
  readonly SortOrder: string;
}

interface ListAlgorithmsOutput {
  readonly AlgorithmSummaryList: [];
  readonly NextToken: string;
}

interface ListAppImageConfigsRequest {
  readonly MaxResults: number;
  readonly NextToken: string;
  readonly NameContains: string;
  readonly CreationTimeBefore: Date;
  readonly CreationTimeAfter: Date;
  readonly ModifiedTimeBefore: Date;
  readonly ModifiedTimeAfter: Date;
  readonly SortBy: string;
  readonly SortOrder: string;
}

interface ListAppImageConfigsResponse {
  readonly NextToken: string;
  readonly AppImageConfigs: [];
}

interface ListAppsRequest {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly SortOrder: string;
  readonly SortBy: string;
  readonly DomainIdEquals: string;
  readonly UserProfileNameEquals: string;
}

interface ListAppsResponse {
  readonly Apps: [];
  readonly NextToken: string;
}

interface ListArtifactsRequest {
  readonly SourceUri: string;
  readonly ArtifactType: string;
  readonly CreatedAfter: Date;
  readonly CreatedBefore: Date;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListArtifactsResponse {
  readonly ArtifactSummaries: [];
  readonly NextToken: string;
}

interface ListAssociationsRequest {
  readonly SourceArn: string;
  readonly DestinationArn: string;
  readonly SourceType: string;
  readonly DestinationType: string;
  readonly AssociationType: string;
  readonly CreatedAfter: Date;
  readonly CreatedBefore: Date;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListAssociationsResponse {
  readonly AssociationSummaries: [];
  readonly NextToken: string;
}

interface ListAutoMLJobsRequest {
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly NameContains: string;
  readonly StatusEquals: string;
  readonly SortOrder: string;
  readonly SortBy: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListAutoMLJobsResponse {
  readonly AutoMLJobSummaries: [];
  readonly NextToken: string;
}

interface ListCandidatesForAutoMLJobRequest {
  readonly AutoMLJobName: string;
  readonly StatusEquals: string;
  readonly CandidateNameEquals: string;
  readonly SortOrder: string;
  readonly SortBy: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListCandidatesForAutoMLJobResponse {
  readonly Candidates: [];
  readonly NextToken: string;
}

interface ListCodeRepositoriesInput {
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly MaxResults: number;
  readonly NameContains: string;
  readonly NextToken: string;
  readonly SortBy: string;
  readonly SortOrder: string;
}

interface ListCodeRepositoriesOutput {
  readonly CodeRepositorySummaryList: [];
  readonly NextToken: string;
}

interface ListCompilationJobsRequest {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly NameContains: string;
  readonly StatusEquals: string;
  readonly SortBy: string;
  readonly SortOrder: string;
}

interface ListCompilationJobsResponse {
  readonly CompilationJobSummaries: [];
  readonly NextToken: string;
}

interface ListContextsRequest {
  readonly SourceUri: string;
  readonly ContextType: string;
  readonly CreatedAfter: Date;
  readonly CreatedBefore: Date;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListContextsResponse {
  readonly ContextSummaries: [];
  readonly NextToken: string;
}

interface ListDataQualityJobDefinitionsRequest {
  readonly EndpointName: string;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly NameContains: string;
  readonly CreationTimeBefore: Date;
  readonly CreationTimeAfter: Date;
}

interface ListDataQualityJobDefinitionsResponse {
  readonly JobDefinitionSummaries: [];
  readonly NextToken: string;
}

interface ListDeviceFleetsRequest {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly NameContains: string;
  readonly SortBy: string;
  readonly SortOrder: string;
}

interface ListDeviceFleetsResponse {
  readonly DeviceFleetSummaries: [];
  readonly NextToken: string;
}

interface ListDevicesRequest {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly LatestHeartbeatAfter: Date;
  readonly ModelName: string;
  readonly DeviceFleetName: string;
}

interface ListDevicesResponse {
  readonly DeviceSummaries: [];
  readonly NextToken: string;
}

interface ListDomainsRequest {
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListDomainsResponse {
  readonly Domains: [];
  readonly NextToken: string;
}

interface ListEdgePackagingJobsRequest {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly NameContains: string;
  readonly ModelNameContains: string;
  readonly StatusEquals: string;
  readonly SortBy: string;
  readonly SortOrder: string;
}

interface ListEdgePackagingJobsResponse {
  readonly EdgePackagingJobSummaries: [];
  readonly NextToken: string;
}

interface ListEndpointConfigsInput {
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly NameContains: string;
  readonly CreationTimeBefore: Date;
  readonly CreationTimeAfter: Date;
}

interface ListEndpointConfigsOutput {
  readonly EndpointConfigs: [];
  readonly NextToken: string;
}

interface ListEndpointsInput {
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly NameContains: string;
  readonly CreationTimeBefore: Date;
  readonly CreationTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly StatusEquals: string;
}

interface ListEndpointsOutput {
  readonly Endpoints: [];
  readonly NextToken: string;
}

interface ListExperimentsRequest {
  readonly CreatedAfter: Date;
  readonly CreatedBefore: Date;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListExperimentsResponse {
  readonly ExperimentSummaries: [];
  readonly NextToken: string;
}

interface ListFeatureGroupsRequest {
  readonly NameContains: string;
  readonly FeatureGroupStatusEquals: string;
  readonly OfflineStoreStatusEquals: string;
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly SortOrder: string;
  readonly SortBy: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListFeatureGroupsResponse {
  readonly FeatureGroupSummaries: [];
  readonly NextToken: string;
}

interface ListFlowDefinitionsRequest {
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListFlowDefinitionsResponse {
  readonly FlowDefinitionSummaries: [];
  readonly NextToken: string;
}

interface ListHumanTaskUisRequest {
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListHumanTaskUisResponse {
  readonly HumanTaskUiSummaries: [];
  readonly NextToken: string;
}

interface ListHyperParameterTuningJobsRequest {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NameContains: string;
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly StatusEquals: string;
}

interface ListHyperParameterTuningJobsResponse {
  readonly HyperParameterTuningJobSummaries: [];
  readonly NextToken: string;
}

interface ListImageVersionsRequest {
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly ImageName: string;
  readonly LastModifiedTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly MaxResults: number;
  readonly NextToken: string;
  readonly SortBy: string;
  readonly SortOrder: string;
}

interface ListImageVersionsResponse {
  readonly ImageVersions: [];
  readonly NextToken: string;
}

interface ListImagesRequest {
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly MaxResults: number;
  readonly NameContains: string;
  readonly NextToken: string;
  readonly SortBy: string;
  readonly SortOrder: string;
}

interface ListImagesResponse {
  readonly Images: [];
  readonly NextToken: string;
}

interface ListInferenceRecommendationsJobsRequest {
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly NameContains: string;
  readonly StatusEquals: string;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListInferenceRecommendationsJobsResponse {
  readonly InferenceRecommendationsJobs: [];
  readonly NextToken: string;
}

interface ListLabelingJobsForWorkteamRequest {
  readonly WorkteamArn: string;
  readonly MaxResults: number;
  readonly NextToken: string;
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly JobReferenceCodeContains: string;
  readonly SortBy: string;
  readonly SortOrder: string;
}

interface ListLabelingJobsForWorkteamResponse {
  readonly LabelingJobSummaryList: [];
  readonly NextToken: string;
}

interface ListLabelingJobsRequest {
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly MaxResults: number;
  readonly NextToken: string;
  readonly NameContains: string;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly StatusEquals: string;
}

interface ListLabelingJobsResponse {
  readonly LabelingJobSummaryList: [];
  readonly NextToken: string;
}

interface ListLineageGroupsRequest {
  readonly CreatedAfter: Date;
  readonly CreatedBefore: Date;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListLineageGroupsResponse {
  readonly LineageGroupSummaries: [];
  readonly NextToken: string;
}

interface ListModelBiasJobDefinitionsRequest {
  readonly EndpointName: string;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly NameContains: string;
  readonly CreationTimeBefore: Date;
  readonly CreationTimeAfter: Date;
}

interface ListModelBiasJobDefinitionsResponse {
  readonly JobDefinitionSummaries: [];
  readonly NextToken: string;
}

interface ListModelExplainabilityJobDefinitionsRequest {
  readonly EndpointName: string;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly NameContains: string;
  readonly CreationTimeBefore: Date;
  readonly CreationTimeAfter: Date;
}

interface ListModelExplainabilityJobDefinitionsResponse {
  readonly JobDefinitionSummaries: [];
  readonly NextToken: string;
}

interface ListModelMetadataRequest {
  readonly SearchExpression: ModelMetadataSearchExpression;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListModelMetadataResponse {
  readonly ModelMetadataSummaries: [];
  readonly NextToken: string;
}

interface ListModelPackageGroupsInput {
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly MaxResults: number;
  readonly NameContains: string;
  readonly NextToken: string;
  readonly SortBy: string;
  readonly SortOrder: string;
}

interface ListModelPackageGroupsOutput {
  readonly ModelPackageGroupSummaryList: [];
  readonly NextToken: string;
}

interface ListModelPackagesInput {
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly MaxResults: number;
  readonly NameContains: string;
  readonly ModelApprovalStatus: string;
  readonly ModelPackageGroupName: string;
  readonly ModelPackageType: string;
  readonly NextToken: string;
  readonly SortBy: string;
  readonly SortOrder: string;
}

interface ListModelPackagesOutput {
  readonly ModelPackageSummaryList: [];
  readonly NextToken: string;
}

interface ListModelQualityJobDefinitionsRequest {
  readonly EndpointName: string;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly NameContains: string;
  readonly CreationTimeBefore: Date;
  readonly CreationTimeAfter: Date;
}

interface ListModelQualityJobDefinitionsResponse {
  readonly JobDefinitionSummaries: [];
  readonly NextToken: string;
}

interface ListModelsInput {
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly NameContains: string;
  readonly CreationTimeBefore: Date;
  readonly CreationTimeAfter: Date;
}

interface ListModelsOutput {
  readonly Models: [];
  readonly NextToken: string;
}

interface ListMonitoringExecutionsRequest {
  readonly MonitoringScheduleName: string;
  readonly EndpointName: string;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly ScheduledTimeBefore: Date;
  readonly ScheduledTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly CreationTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly StatusEquals: string;
  readonly MonitoringJobDefinitionName: string;
  readonly MonitoringTypeEquals: string;
}

interface ListMonitoringExecutionsResponse {
  readonly MonitoringExecutionSummaries: [];
  readonly NextToken: string;
}

interface ListMonitoringSchedulesRequest {
  readonly EndpointName: string;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly NameContains: string;
  readonly CreationTimeBefore: Date;
  readonly CreationTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly StatusEquals: string;
  readonly MonitoringJobDefinitionName: string;
  readonly MonitoringTypeEquals: string;
}

interface ListMonitoringSchedulesResponse {
  readonly MonitoringScheduleSummaries: [];
  readonly NextToken: string;
}

interface ListNotebookInstanceLifecycleConfigsInput {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NameContains: string;
  readonly CreationTimeBefore: Date;
  readonly CreationTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
}

interface ListNotebookInstanceLifecycleConfigsOutput {
  readonly NextToken: string;
  readonly NotebookInstanceLifecycleConfigs: [];
}

interface ListNotebookInstancesInput {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NameContains: string;
  readonly CreationTimeBefore: Date;
  readonly CreationTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly StatusEquals: string;
  readonly NotebookInstanceLifecycleConfigNameContains: string;
  readonly DefaultCodeRepositoryContains: string;
  readonly AdditionalCodeRepositoryEquals: string;
}

interface ListNotebookInstancesOutput {
  readonly NextToken: string;
  readonly NotebookInstances: [];
}

interface ListPipelineExecutionStepsRequest {
  readonly PipelineExecutionArn: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly SortOrder: string;
}

interface ListPipelineExecutionStepsResponse {
  readonly PipelineExecutionSteps: [];
  readonly NextToken: string;
}

interface ListPipelineExecutionsRequest {
  readonly PipelineName: string;
  readonly CreatedAfter: Date;
  readonly CreatedBefore: Date;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListPipelineExecutionsResponse {
  readonly PipelineExecutionSummaries: [];
  readonly NextToken: string;
}

interface ListPipelineParametersForExecutionRequest {
  readonly PipelineExecutionArn: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListPipelineParametersForExecutionResponse {
  readonly PipelineParameters: [];
  readonly NextToken: string;
}

interface ListPipelinesRequest {
  readonly PipelineNamePrefix: string;
  readonly CreatedAfter: Date;
  readonly CreatedBefore: Date;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListPipelinesResponse {
  readonly PipelineSummaries: [];
  readonly NextToken: string;
}

interface ListProcessingJobsRequest {
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly NameContains: string;
  readonly StatusEquals: string;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListProcessingJobsResponse {
  readonly ProcessingJobSummaries: [];
  readonly NextToken: string;
}

interface ListProjectsInput {
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly MaxResults: number;
  readonly NameContains: string;
  readonly NextToken: string;
  readonly SortBy: string;
  readonly SortOrder: string;
}

interface ListProjectsOutput {
  readonly ProjectSummaryList: [];
  readonly NextToken: string;
}

interface ListStudioLifecycleConfigsRequest {
  readonly MaxResults: number;
  readonly NextToken: string;
  readonly NameContains: string;
  readonly AppTypeEquals: string;
  readonly CreationTimeBefore: Date;
  readonly CreationTimeAfter: Date;
  readonly ModifiedTimeBefore: Date;
  readonly ModifiedTimeAfter: Date;
  readonly SortBy: string;
  readonly SortOrder: string;
}

interface ListStudioLifecycleConfigsResponse {
  readonly NextToken: string;
  readonly StudioLifecycleConfigs: [];
}

interface ListSubscribedWorkteamsRequest {
  readonly NameContains: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListSubscribedWorkteamsResponse {
  readonly SubscribedWorkteams: [];
  readonly NextToken: string;
}

interface ListTagsInput {
  readonly ResourceArn: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListTagsOutput {
  readonly Tags: [];
  readonly NextToken: string;
}

interface ListTrainingJobsForHyperParameterTuningJobRequest {
  readonly HyperParameterTuningJobName: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly StatusEquals: string;
  readonly SortBy: string;
  readonly SortOrder: string;
}

interface ListTrainingJobsForHyperParameterTuningJobResponse {
  readonly TrainingJobSummaries: [];
  readonly NextToken: string;
}

interface ListTrainingJobsRequest {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly NameContains: string;
  readonly StatusEquals: string;
  readonly SortBy: string;
  readonly SortOrder: string;
}

interface ListTrainingJobsResponse {
  readonly TrainingJobSummaries: [];
  readonly NextToken: string;
}

interface ListTransformJobsRequest {
  readonly CreationTimeAfter: Date;
  readonly CreationTimeBefore: Date;
  readonly LastModifiedTimeAfter: Date;
  readonly LastModifiedTimeBefore: Date;
  readonly NameContains: string;
  readonly StatusEquals: string;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListTransformJobsResponse {
  readonly TransformJobSummaries: [];
  readonly NextToken: string;
}

interface ListTrialComponentsRequest {
  readonly ExperimentName: string;
  readonly TrialName: string;
  readonly SourceArn: string;
  readonly CreatedAfter: Date;
  readonly CreatedBefore: Date;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListTrialComponentsResponse {
  readonly TrialComponentSummaries: [];
  readonly NextToken: string;
}

interface ListTrialsRequest {
  readonly ExperimentName: string;
  readonly TrialComponentName: string;
  readonly CreatedAfter: Date;
  readonly CreatedBefore: Date;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListTrialsResponse {
  readonly TrialSummaries: [];
  readonly NextToken: string;
}

interface ListUserProfilesRequest {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly SortOrder: string;
  readonly SortBy: string;
  readonly DomainIdEquals: string;
  readonly UserProfileNameContains: string;
}

interface ListUserProfilesResponse {
  readonly UserProfiles: [];
  readonly NextToken: string;
}

interface ListWorkforcesRequest {
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NameContains: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListWorkforcesResponse {
  readonly Workforces: [];
  readonly NextToken: string;
}

interface ListWorkteamsRequest {
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NameContains: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListWorkteamsResponse {
  readonly Workteams: [];
  readonly NextToken: string;
}

interface MemberDefinition {
  readonly CognitoMemberDefinition: CognitoMemberDefinition;
  readonly OidcMemberDefinition: OidcMemberDefinition;
}

interface MetadataProperties {
  readonly CommitId: string;
  readonly Repository: string;
  readonly GeneratedBy: string;
  readonly ProjectId: string;
}

interface MetricData {
  readonly MetricName: string;
  readonly Value: unknown;
  readonly Timestamp: Date;
}

interface MetricDatum {
  readonly MetricName: string;
  readonly Value: unknown;
  readonly Set: string;
}

interface MetricDefinition {
  readonly Name: string;
  readonly Regex: string;
}

interface MetricsSource {
  readonly ContentType: string;
  readonly ContentDigest: string;
  readonly S3Uri: string;
}

interface ModelArtifacts {
  readonly S3ModelArtifacts: string;
}

interface ModelBiasAppSpecification {
  readonly ImageUri: string;
  readonly ConfigUri: string;
  readonly Environment: {[key: string]: any};
}

interface ModelBiasBaselineConfig {
  readonly BaseliningJobName: string;
  readonly ConstraintsResource: MonitoringConstraintsResource;
}

interface ModelBiasJobInput {
  readonly EndpointInput: EndpointInput;
  readonly GroundTruthS3Input: MonitoringGroundTruthS3Input;
}

interface ModelClientConfig {
  readonly InvocationsTimeoutInSeconds: number;
  readonly InvocationsMaxRetries: number;
}

interface ModelConfiguration {
  readonly InferenceSpecificationName: string;
  readonly EnvironmentParameters: [];
}

interface ModelDataQuality {
  readonly Statistics: MetricsSource;
  readonly Constraints: MetricsSource;
}

interface ModelDeployConfig {
  readonly AutoGenerateEndpointName: boolean;
  readonly EndpointName: string;
}

interface ModelDeployResult {
  readonly EndpointName: string;
}

interface ModelDigests {
  readonly ArtifactDigest: string;
}

interface ModelExplainabilityAppSpecification {
  readonly ImageUri: string;
  readonly ConfigUri: string;
  readonly Environment: {[key: string]: any};
}

interface ModelExplainabilityBaselineConfig {
  readonly BaseliningJobName: string;
  readonly ConstraintsResource: MonitoringConstraintsResource;
}

interface ModelExplainabilityJobInput {
  readonly EndpointInput: EndpointInput;
}

interface ModelInput {
  readonly DataInputConfig: string;
}

interface ModelLatencyThreshold {
  readonly Percentile: string;
  readonly ValueInMilliseconds: number;
}

interface ModelMetadataFilter {
  readonly Name: string;
  readonly Value: string;
}

interface ModelMetadataSearchExpression {
  readonly Filters: [];
}

interface ModelMetadataSummary {
  readonly Domain: string;
  readonly Framework: string;
  readonly Task: string;
  readonly Model: string;
  readonly FrameworkVersion: string;
}

interface ModelMetrics {
  readonly ModelQuality: ModelQuality;
  readonly ModelDataQuality: ModelDataQuality;
  readonly Bias: Bias;
  readonly Explainability: Explainability;
}

interface ModelPackage {
  readonly ModelPackageName: string;
  readonly ModelPackageGroupName: string;
  readonly ModelPackageVersion: number;
  readonly ModelPackageArn: string;
  readonly ModelPackageDescription: string;
  readonly CreationTime: Date;
  readonly InferenceSpecification: InferenceSpecification;
  readonly SourceAlgorithmSpecification: SourceAlgorithmSpecification;
  readonly ValidationSpecification: ModelPackageValidationSpecification;
  readonly ModelPackageStatus: string;
  readonly ModelPackageStatusDetails: ModelPackageStatusDetails;
  readonly CertifyForMarketplace: boolean;
  readonly ModelApprovalStatus: string;
  readonly CreatedBy: UserContext;
  readonly MetadataProperties: MetadataProperties;
  readonly ModelMetrics: ModelMetrics;
  readonly LastModifiedTime: Date;
  readonly LastModifiedBy: UserContext;
  readonly ApprovalDescription: string;
  readonly Domain: string;
  readonly Task: string;
  readonly SamplePayloadUrl: string;
  readonly AdditionalInferenceSpecifications: [];
  readonly Tags: [];
  readonly CustomerMetadataProperties: {[key: string]: any};
  readonly DriftCheckBaselines: DriftCheckBaselines;
}

interface ModelPackageContainerDefinition {
  readonly ContainerHostname: string;
  readonly Image: string;
  readonly ImageDigest: string;
  readonly ModelDataUrl: string;
  readonly ProductId: string;
  readonly Environment: {[key: string]: any};
  readonly ModelInput: ModelInput;
  readonly Framework: string;
  readonly FrameworkVersion: string;
  readonly NearestModelName: string;
}

interface ModelPackageGroup {
  readonly ModelPackageGroupName: string;
  readonly ModelPackageGroupArn: string;
  readonly ModelPackageGroupDescription: string;
  readonly CreationTime: Date;
  readonly CreatedBy: UserContext;
  readonly ModelPackageGroupStatus: string;
  readonly Tags: [];
}

interface ModelPackageGroupSummary {
  readonly ModelPackageGroupName: string;
  readonly ModelPackageGroupArn: string;
  readonly ModelPackageGroupDescription: string;
  readonly CreationTime: Date;
  readonly ModelPackageGroupStatus: string;
}

interface ModelPackageStatusDetails {
  readonly ValidationStatuses: [];
  readonly ImageScanStatuses: [];
}

interface ModelPackageStatusItem {
  readonly Name: string;
  readonly Status: string;
  readonly FailureReason: string;
}

interface ModelPackageSummary {
  readonly ModelPackageName: string;
  readonly ModelPackageGroupName: string;
  readonly ModelPackageVersion: number;
  readonly ModelPackageArn: string;
  readonly ModelPackageDescription: string;
  readonly CreationTime: Date;
  readonly ModelPackageStatus: string;
  readonly ModelApprovalStatus: string;
}

interface ModelPackageValidationProfile {
  readonly ProfileName: string;
  readonly TransformJobDefinition: TransformJobDefinition;
}

interface ModelPackageValidationSpecification {
  readonly ValidationRole: string;
  readonly ValidationProfiles: [];
}

interface ModelQuality {
  readonly Statistics: MetricsSource;
  readonly Constraints: MetricsSource;
}

interface ModelQualityAppSpecification {
  readonly ImageUri: string;
  readonly ContainerEntrypoint: [];
  readonly ContainerArguments: [];
  readonly RecordPreprocessorSourceUri: string;
  readonly PostAnalyticsProcessorSourceUri: string;
  readonly ProblemType: string;
  readonly Environment: {[key: string]: any};
}

interface ModelQualityBaselineConfig {
  readonly BaseliningJobName: string;
  readonly ConstraintsResource: MonitoringConstraintsResource;
}

interface ModelQualityJobInput {
  readonly EndpointInput: EndpointInput;
  readonly GroundTruthS3Input: MonitoringGroundTruthS3Input;
}

interface ModelStepMetadata {
  readonly Arn: string;
}

interface ModelSummary {
  readonly ModelName: string;
  readonly ModelArn: string;
  readonly CreationTime: Date;
}

interface MonitoringAppSpecification {
  readonly ImageUri: string;
  readonly ContainerEntrypoint: [];
  readonly ContainerArguments: [];
  readonly RecordPreprocessorSourceUri: string;
  readonly PostAnalyticsProcessorSourceUri: string;
}

interface MonitoringBaselineConfig {
  readonly BaseliningJobName: string;
  readonly ConstraintsResource: MonitoringConstraintsResource;
  readonly StatisticsResource: MonitoringStatisticsResource;
}

interface MonitoringClusterConfig {
  readonly InstanceCount: number;
  readonly InstanceType: string;
  readonly VolumeSizeInGB: number;
  readonly VolumeKmsKeyId: string;
}

interface MonitoringConstraintsResource {
  readonly S3Uri: string;
}

interface MonitoringExecutionSummary {
  readonly MonitoringScheduleName: string;
  readonly ScheduledTime: Date;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
  readonly MonitoringExecutionStatus: string;
  readonly ProcessingJobArn: string;
  readonly EndpointName: string;
  readonly FailureReason: string;
  readonly MonitoringJobDefinitionName: string;
  readonly MonitoringType: string;
}

interface MonitoringGroundTruthS3Input {
  readonly S3Uri: string;
}

interface MonitoringInput {
  readonly EndpointInput: EndpointInput;
}

interface MonitoringJobDefinition {
  readonly BaselineConfig: MonitoringBaselineConfig;
  readonly MonitoringInputs: [];
  readonly MonitoringOutputConfig: MonitoringOutputConfig;
  readonly MonitoringResources: MonitoringResources;
  readonly MonitoringAppSpecification: MonitoringAppSpecification;
  readonly StoppingCondition: MonitoringStoppingCondition;
  readonly Environment: {[key: string]: any};
  readonly NetworkConfig: NetworkConfig;
  readonly RoleArn: string;
}

interface MonitoringJobDefinitionSummary {
  readonly MonitoringJobDefinitionName: string;
  readonly MonitoringJobDefinitionArn: string;
  readonly CreationTime: Date;
  readonly EndpointName: string;
}

interface MonitoringNetworkConfig {
  readonly EnableInterContainerTrafficEncryption: boolean;
  readonly EnableNetworkIsolation: boolean;
  readonly VpcConfig: VpcConfig;
}

interface MonitoringOutput {
  readonly S3Output: MonitoringS3Output;
}

interface MonitoringOutputConfig {
  readonly MonitoringOutputs: [];
  readonly KmsKeyId: string;
}

interface MonitoringResources {
  readonly ClusterConfig: MonitoringClusterConfig;
}

interface MonitoringS3Output {
  readonly S3Uri: string;
  readonly LocalPath: string;
  readonly S3UploadMode: string;
}

interface MonitoringSchedule {
  readonly MonitoringScheduleArn: string;
  readonly MonitoringScheduleName: string;
  readonly MonitoringScheduleStatus: string;
  readonly MonitoringType: string;
  readonly FailureReason: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
  readonly MonitoringScheduleConfig: MonitoringScheduleConfig;
  readonly EndpointName: string;
  readonly LastMonitoringExecutionSummary: MonitoringExecutionSummary;
  readonly Tags: [];
}

interface MonitoringScheduleConfig {
  readonly ScheduleConfig: ScheduleConfig;
  readonly MonitoringJobDefinition: MonitoringJobDefinition;
  readonly MonitoringJobDefinitionName: string;
  readonly MonitoringType: string;
}

interface MonitoringScheduleSummary {
  readonly MonitoringScheduleName: string;
  readonly MonitoringScheduleArn: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
  readonly MonitoringScheduleStatus: string;
  readonly EndpointName: string;
  readonly MonitoringJobDefinitionName: string;
  readonly MonitoringType: string;
}

interface MonitoringStatisticsResource {
  readonly S3Uri: string;
}

interface MonitoringStoppingCondition {
  readonly MaxRuntimeInSeconds: number;
}

interface MultiModelConfig {
  readonly ModelCacheSetting: string;
}

interface NeoVpcConfig {
  readonly SecurityGroupIds: [];
  readonly Subnets: [];
}

interface NestedFilters {
  readonly NestedPropertyName: string;
  readonly Filters: [];
}

interface NetworkConfig {
  readonly EnableInterContainerTrafficEncryption: boolean;
  readonly EnableNetworkIsolation: boolean;
  readonly VpcConfig: VpcConfig;
}

interface NotebookInstanceLifecycleConfigSummary {
  readonly NotebookInstanceLifecycleConfigName: string;
  readonly NotebookInstanceLifecycleConfigArn: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
}

interface NotebookInstanceLifecycleHook {
  readonly Content: string;
}

interface NotebookInstanceSummary {
  readonly NotebookInstanceName: string;
  readonly NotebookInstanceArn: string;
  readonly NotebookInstanceStatus: string;
  readonly Url: string;
  readonly InstanceType: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
  readonly NotebookInstanceLifecycleConfigName: string;
  readonly DefaultCodeRepository: string;
  readonly AdditionalCodeRepositories: [];
}

interface NotificationConfiguration {
  readonly NotificationTopicArn: string;
}

interface ObjectiveStatusCounters {
  readonly Succeeded: number;
  readonly Pending: number;
  readonly Failed: number;
}

interface OfflineStoreConfig {
  readonly S3StorageConfig: S3StorageConfig;
  readonly DisableGlueTableCreation: boolean;
  readonly DataCatalogConfig: DataCatalogConfig;
}

interface OfflineStoreStatus {
  readonly Status: string;
  readonly BlockedReason: string;
}

interface OidcConfig {
  readonly ClientId: string;
  readonly ClientSecret: string;
  readonly Issuer: string;
  readonly AuthorizationEndpoint: string;
  readonly TokenEndpoint: string;
  readonly UserInfoEndpoint: string;
  readonly LogoutEndpoint: string;
  readonly JwksUri: string;
}

interface OidcConfigForResponse {
  readonly ClientId: string;
  readonly Issuer: string;
  readonly AuthorizationEndpoint: string;
  readonly TokenEndpoint: string;
  readonly UserInfoEndpoint: string;
  readonly LogoutEndpoint: string;
  readonly JwksUri: string;
}

interface OidcMemberDefinition {
  readonly Groups: [];
}

interface OnlineStoreConfig {
  readonly SecurityConfig: OnlineStoreSecurityConfig;
  readonly EnableOnlineStore: boolean;
}

interface OnlineStoreSecurityConfig {
  readonly KmsKeyId: string;
}

interface OutputConfig {
  readonly S3OutputLocation: string;
  readonly TargetDevice: string;
  readonly TargetPlatform: TargetPlatform;
  readonly CompilerOptions: string;
  readonly KmsKeyId: string;
}

interface OutputDataConfig {
  readonly KmsKeyId: string;
  readonly S3OutputPath: string;
}

interface OutputParameter {
  readonly Name: string;
  readonly Value: string;
}

interface Parameter {
  readonly Name: string;
  readonly Value: string;
}

interface ParameterRange {
  readonly IntegerParameterRangeSpecification: IntegerParameterRangeSpecification;
  readonly ContinuousParameterRangeSpecification: ContinuousParameterRangeSpecification;
  readonly CategoricalParameterRangeSpecification: CategoricalParameterRangeSpecification;
}

interface ParameterRanges {
  readonly IntegerParameterRanges: [];
  readonly ContinuousParameterRanges: [];
  readonly CategoricalParameterRanges: [];
}

interface Parent {
  readonly TrialName: string;
  readonly ExperimentName: string;
}

interface ParentHyperParameterTuningJob {
  readonly HyperParameterTuningJobName: string;
}

interface PendingDeploymentSummary {
  readonly EndpointConfigName: string;
  readonly ProductionVariants: [];
  readonly StartTime: Date;
}

interface PendingProductionVariantSummary {
  readonly VariantName: string;
  readonly DeployedImages: [];
  readonly CurrentWeight: unknown;
  readonly DesiredWeight: unknown;
  readonly CurrentInstanceCount: number;
  readonly DesiredInstanceCount: number;
  readonly InstanceType: string;
  readonly AcceleratorType: string;
  readonly VariantStatus: [];
  readonly CurrentServerlessConfig: ProductionVariantServerlessConfig;
  readonly DesiredServerlessConfig: ProductionVariantServerlessConfig;
}

interface Phase {
  readonly InitialNumberOfUsers: number;
  readonly SpawnRate: number;
  readonly DurationInSeconds: number;
}

interface Pipeline {
  readonly PipelineArn: string;
  readonly PipelineName: string;
  readonly PipelineDisplayName: string;
  readonly PipelineDescription: string;
  readonly RoleArn: string;
  readonly PipelineStatus: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
  readonly LastRunTime: Date;
  readonly CreatedBy: UserContext;
  readonly LastModifiedBy: UserContext;
  readonly Tags: [];
}

interface PipelineExecution {
  readonly PipelineArn: string;
  readonly PipelineExecutionArn: string;
  readonly PipelineExecutionDisplayName: string;
  readonly PipelineExecutionStatus: string;
  readonly PipelineExecutionDescription: string;
  readonly PipelineExperimentConfig: PipelineExperimentConfig;
  readonly FailureReason: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
  readonly CreatedBy: UserContext;
  readonly LastModifiedBy: UserContext;
  readonly PipelineParameters: [];
}

interface PipelineExecutionStep {
  readonly StepName: string;
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly StepStatus: string;
  readonly CacheHitResult: CacheHitResult;
  readonly AttemptCount: number;
  readonly FailureReason: string;
  readonly Metadata: PipelineExecutionStepMetadata;
}

interface PipelineExecutionStepMetadata {
  readonly TrainingJob: TrainingJobStepMetadata;
  readonly ProcessingJob: ProcessingJobStepMetadata;
  readonly TransformJob: TransformJobStepMetadata;
  readonly TuningJob: TuningJobStepMetaData;
  readonly Model: ModelStepMetadata;
  readonly RegisterModel: RegisterModelStepMetadata;
  readonly Condition: ConditionStepMetadata;
  readonly Callback: CallbackStepMetadata;
  readonly Lambda: LambdaStepMetadata;
  readonly QualityCheck: QualityCheckStepMetadata;
  readonly ClarifyCheck: ClarifyCheckStepMetadata;
}

interface PipelineExecutionSummary {
  readonly PipelineExecutionArn: string;
  readonly StartTime: Date;
  readonly PipelineExecutionStatus: string;
  readonly PipelineExecutionDescription: string;
  readonly PipelineExecutionDisplayName: string;
}

interface PipelineExperimentConfig {
  readonly ExperimentName: string;
  readonly TrialName: string;
}

interface PipelineSummary {
  readonly PipelineArn: string;
  readonly PipelineName: string;
  readonly PipelineDisplayName: string;
  readonly PipelineDescription: string;
  readonly RoleArn: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
  readonly LastExecutionTime: Date;
}

interface ProcessingClusterConfig {
  readonly InstanceCount: number;
  readonly InstanceType: string;
  readonly VolumeSizeInGB: number;
  readonly VolumeKmsKeyId: string;
}

interface ProcessingFeatureStoreOutput {
  readonly FeatureGroupName: string;
}

interface ProcessingInput {
  readonly InputName: string;
  readonly AppManaged: boolean;
  readonly S3Input: ProcessingS3Input;
  readonly DatasetDefinition: DatasetDefinition;
}

interface ProcessingJob {
  readonly ProcessingInputs: [];
  readonly ProcessingOutputConfig: ProcessingOutputConfig;
  readonly ProcessingJobName: string;
  readonly ProcessingResources: ProcessingResources;
  readonly StoppingCondition: ProcessingStoppingCondition;
  readonly AppSpecification: AppSpecification;
  readonly Environment: {[key: string]: any};
  readonly NetworkConfig: NetworkConfig;
  readonly RoleArn: string;
  readonly ExperimentConfig: ExperimentConfig;
  readonly ProcessingJobArn: string;
  readonly ProcessingJobStatus: string;
  readonly ExitMessage: string;
  readonly FailureReason: string;
  readonly ProcessingEndTime: Date;
  readonly ProcessingStartTime: Date;
  readonly LastModifiedTime: Date;
  readonly CreationTime: Date;
  readonly MonitoringScheduleArn: string;
  readonly AutoMLJobArn: string;
  readonly TrainingJobArn: string;
  readonly Tags: [];
}

interface ProcessingJobStepMetadata {
  readonly Arn: string;
}

interface ProcessingJobSummary {
  readonly ProcessingJobName: string;
  readonly ProcessingJobArn: string;
  readonly CreationTime: Date;
  readonly ProcessingEndTime: Date;
  readonly LastModifiedTime: Date;
  readonly ProcessingJobStatus: string;
  readonly FailureReason: string;
  readonly ExitMessage: string;
}

interface ProcessingOutput {
  readonly OutputName: string;
  readonly S3Output: ProcessingS3Output;
  readonly FeatureStoreOutput: ProcessingFeatureStoreOutput;
  readonly AppManaged: boolean;
}

interface ProcessingOutputConfig {
  readonly Outputs: [];
  readonly KmsKeyId: string;
}

interface ProcessingResources {
  readonly ClusterConfig: ProcessingClusterConfig;
}

interface ProcessingS3Input {
  readonly S3Uri: string;
  readonly LocalPath: string;
  readonly S3DataType: string;
  readonly S3InputMode: string;
  readonly S3DataDistributionType: string;
  readonly S3CompressionType: string;
}

interface ProcessingS3Output {
  readonly S3Uri: string;
  readonly LocalPath: string;
  readonly S3UploadMode: string;
}

interface ProcessingStoppingCondition {
  readonly MaxRuntimeInSeconds: number;
}

interface ProductionVariant {
  readonly VariantName: string;
  readonly ModelName: string;
  readonly InitialInstanceCount: number;
  readonly InstanceType: string;
  readonly InitialVariantWeight: unknown;
  readonly AcceleratorType: string;
  readonly CoreDumpConfig: ProductionVariantCoreDumpConfig;
  readonly ServerlessConfig: ProductionVariantServerlessConfig;
}

interface ProductionVariantCoreDumpConfig {
  readonly DestinationS3Uri: string;
  readonly KmsKeyId: string;
}

interface ProductionVariantServerlessConfig {
  readonly MemorySizeInMB: number;
  readonly MaxConcurrency: number;
}

interface ProductionVariantStatus {
  readonly Status: string;
  readonly StatusMessage: string;
  readonly StartTime: Date;
}

interface ProductionVariantSummary {
  readonly VariantName: string;
  readonly DeployedImages: [];
  readonly CurrentWeight: unknown;
  readonly DesiredWeight: unknown;
  readonly CurrentInstanceCount: number;
  readonly DesiredInstanceCount: number;
  readonly VariantStatus: [];
  readonly CurrentServerlessConfig: ProductionVariantServerlessConfig;
  readonly DesiredServerlessConfig: ProductionVariantServerlessConfig;
}

interface ProfilerConfig {
  readonly S3OutputPath: string;
  readonly ProfilingIntervalInMilliseconds: number;
  readonly ProfilingParameters: {[key: string]: any};
}

interface ProfilerConfigForUpdate {
  readonly S3OutputPath: string;
  readonly ProfilingIntervalInMilliseconds: number;
  readonly ProfilingParameters: {[key: string]: any};
  readonly DisableProfiler: boolean;
}

interface ProfilerRuleConfiguration {
  readonly RuleConfigurationName: string;
  readonly LocalPath: string;
  readonly S3OutputPath: string;
  readonly RuleEvaluatorImage: string;
  readonly InstanceType: string;
  readonly VolumeSizeInGB: number;
  readonly RuleParameters: {[key: string]: any};
}

interface ProfilerRuleEvaluationStatus {
  readonly RuleConfigurationName: string;
  readonly RuleEvaluationJobArn: string;
  readonly RuleEvaluationStatus: string;
  readonly StatusDetails: string;
  readonly LastModifiedTime: Date;
}

interface Project {
  readonly ProjectArn: string;
  readonly ProjectName: string;
  readonly ProjectId: string;
  readonly ProjectDescription: string;
  readonly ServiceCatalogProvisioningDetails: ServiceCatalogProvisioningDetails;
  readonly ServiceCatalogProvisionedProductDetails: ServiceCatalogProvisionedProductDetails;
  readonly ProjectStatus: string;
  readonly CreatedBy: UserContext;
  readonly CreationTime: Date;
  readonly Tags: [];
  readonly LastModifiedTime: Date;
  readonly LastModifiedBy: UserContext;
}

interface ProjectSummary {
  readonly ProjectName: string;
  readonly ProjectDescription: string;
  readonly ProjectArn: string;
  readonly ProjectId: string;
  readonly CreationTime: Date;
  readonly ProjectStatus: string;
}

interface PropertyNameQuery {
  readonly PropertyNameHint: string;
}

interface PropertyNameSuggestion {
  readonly PropertyName: string;
}

interface ProvisioningParameter {
  readonly Key: string;
  readonly Value: string;
}

interface PublicWorkforceTaskPrice {
  readonly AmountInUsd: USD;
}

interface PutModelPackageGroupPolicyInput {
  readonly ModelPackageGroupName: string;
  readonly ResourcePolicy: string;
}

interface PutModelPackageGroupPolicyOutput {
  readonly ModelPackageGroupArn: string;
}

interface QualityCheckStepMetadata {
  readonly CheckType: string;
  readonly BaselineUsedForDriftCheckStatistics: string;
  readonly BaselineUsedForDriftCheckConstraints: string;
  readonly CalculatedBaselineStatistics: string;
  readonly CalculatedBaselineConstraints: string;
  readonly ModelPackageGroupName: string;
  readonly ViolationReport: string;
  readonly CheckJobArn: string;
  readonly SkipCheck: boolean;
  readonly RegisterNewBaseline: boolean;
}

interface QueryFilters {
  readonly Types: [];
  readonly LineageTypes: [];
  readonly CreatedBefore: Date;
  readonly CreatedAfter: Date;
  readonly ModifiedBefore: Date;
  readonly ModifiedAfter: Date;
  readonly Properties: {[key: string]: any};
}

interface QueryLineageRequest {
  readonly StartArns: [];
  readonly Direction: string;
  readonly IncludeEdges: boolean;
  readonly Filters: QueryFilters;
  readonly MaxDepth: number;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface QueryLineageResponse {
  readonly Vertices: [];
  readonly Edges: [];
  readonly NextToken: string;
}

interface RSessionAppSettings {
}

interface RStudioServerProAppSettings {
  readonly AccessStatus: string;
  readonly UserGroup: string;
}

interface RStudioServerProDomainSettings {
  readonly DomainExecutionRoleArn: string;
  readonly RStudioConnectUrl: string;
  readonly RStudioPackageManagerUrl: string;
  readonly DefaultResourceSpec: ResourceSpec;
}

interface RStudioServerProDomainSettingsForUpdate {
  readonly DomainExecutionRoleArn: string;
  readonly DefaultResourceSpec: ResourceSpec;
}

interface RecommendationJobInputConfig {
  readonly ModelPackageVersionArn: string;
  readonly JobDurationInSeconds: number;
  readonly TrafficPattern: TrafficPattern;
  readonly ResourceLimit: RecommendationJobResourceLimit;
  readonly EndpointConfigurations: [];
}

interface RecommendationJobResourceLimit {
  readonly MaxNumberOfTests: number;
  readonly MaxParallelOfTests: number;
}

interface RecommendationJobStoppingConditions {
  readonly MaxInvocations: number;
  readonly ModelLatencyThresholds: [];
}

interface RecommendationMetrics {
  readonly CostPerHour: unknown;
  readonly CostPerInference: unknown;
  readonly MaxInvocations: number;
  readonly ModelLatency: number;
}

interface RedshiftDatasetDefinition {
  readonly ClusterId: string;
  readonly Database: string;
  readonly DbUser: string;
  readonly QueryString: string;
  readonly ClusterRoleArn: string;
  readonly OutputS3Uri: string;
  readonly KmsKeyId: string;
  readonly OutputFormat: string;
  readonly OutputCompression: string;
}

interface RegisterDevicesRequest {
  readonly DeviceFleetName: string;
  readonly Devices: [];
  readonly Tags: [];
}

interface RegisterModelStepMetadata {
  readonly Arn: string;
}

interface RenderUiTemplateRequest {
  readonly UiTemplate: UiTemplate;
  readonly Task: RenderableTask;
  readonly RoleArn: string;
  readonly HumanTaskUiArn: string;
}

interface RenderUiTemplateResponse {
  readonly RenderedContent: string;
  readonly Errors: [];
}

interface RenderableTask {
  readonly Input: string;
}

interface RenderingError {
  readonly Code: string;
  readonly Message: string;
}

interface RepositoryAuthConfig {
  readonly RepositoryCredentialsProviderArn: string;
}

interface ResolvedAttributes {
  readonly AutoMLJobObjective: AutoMLJobObjective;
  readonly ProblemType: string;
  readonly CompletionCriteria: AutoMLJobCompletionCriteria;
}

interface ResourceConfig {
  readonly InstanceType: string;
  readonly InstanceCount: number;
  readonly VolumeSizeInGB: number;
  readonly VolumeKmsKeyId: string;
}

interface ResourceInUse {
  readonly Message: string;
}

interface ResourceLimitExceeded {
  readonly Message: string;
}

interface ResourceLimits {
  readonly MaxNumberOfTrainingJobs: number;
  readonly MaxParallelTrainingJobs: number;
}

interface ResourceNotFound {
  readonly Message: string;
}

interface ResourceSpec {
  readonly SageMakerImageArn: string;
  readonly SageMakerImageVersionArn: string;
  readonly InstanceType: string;
  readonly LifecycleConfigArn: string;
}

interface RetentionPolicy {
  readonly HomeEfsFileSystem: string;
}

interface RetryPipelineExecutionRequest {
  readonly PipelineExecutionArn: string;
  readonly ClientRequestToken: string;
}

interface RetryPipelineExecutionResponse {
  readonly PipelineExecutionArn: string;
}

interface RetryStrategy {
  readonly MaximumRetryAttempts: number;
}

interface S3DataSource {
  readonly S3DataType: string;
  readonly S3Uri: string;
  readonly S3DataDistributionType: string;
  readonly AttributeNames: [];
}

interface S3StorageConfig {
  readonly S3Uri: string;
  readonly KmsKeyId: string;
  readonly ResolvedOutputS3Uri: string;
}

interface ScheduleConfig {
  readonly ScheduleExpression: string;
}

interface SearchExpression {
  readonly Filters: [];
  readonly NestedFilters: [];
  readonly SubExpressions: [];
  readonly Operator: string;
}

interface SearchRecord {
  readonly TrainingJob: TrainingJob;
  readonly Experiment: Experiment;
  readonly Trial: Trial;
  readonly TrialComponent: TrialComponent;
  readonly Endpoint: Endpoint;
  readonly ModelPackage: ModelPackage;
  readonly ModelPackageGroup: ModelPackageGroup;
  readonly Pipeline: Pipeline;
  readonly PipelineExecution: PipelineExecution;
  readonly FeatureGroup: FeatureGroup;
  readonly Project: Project;
}

interface SearchRequest {
  readonly Resource: string;
  readonly SearchExpression: SearchExpression;
  readonly SortBy: string;
  readonly SortOrder: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface SearchResponse {
  readonly Results: [];
  readonly NextToken: string;
}

interface SecondaryStatusTransition {
  readonly Status: string;
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly StatusMessage: string;
}

interface SendPipelineExecutionStepFailureRequest {
  readonly CallbackToken: string;
  readonly FailureReason: string;
  readonly ClientRequestToken: string;
}

interface SendPipelineExecutionStepFailureResponse {
  readonly PipelineExecutionArn: string;
}

interface SendPipelineExecutionStepSuccessRequest {
  readonly CallbackToken: string;
  readonly OutputParameters: [];
  readonly ClientRequestToken: string;
}

interface SendPipelineExecutionStepSuccessResponse {
  readonly PipelineExecutionArn: string;
}

interface ServiceCatalogProvisionedProductDetails {
  readonly ProvisionedProductId: string;
  readonly ProvisionedProductStatusMessage: string;
}

interface ServiceCatalogProvisioningDetails {
  readonly ProductId: string;
  readonly ProvisioningArtifactId: string;
  readonly PathId: string;
  readonly ProvisioningParameters: [];
}

interface ServiceCatalogProvisioningUpdateDetails {
  readonly ProvisioningArtifactId: string;
  readonly ProvisioningParameters: [];
}

interface SharingSettings {
  readonly NotebookOutputOption: string;
  readonly S3OutputPath: string;
  readonly S3KmsKeyId: string;
}

interface ShuffleConfig {
  readonly Seed: number;
}

interface SourceAlgorithm {
  readonly ModelDataUrl: string;
  readonly AlgorithmName: string;
}

interface SourceAlgorithmSpecification {
  readonly SourceAlgorithms: [];
}

interface SourceIpConfig {
  readonly Cidrs: [];
}

interface StartMonitoringScheduleRequest {
  readonly MonitoringScheduleName: string;
}

interface StartNotebookInstanceInput {
  readonly NotebookInstanceName: string;
}

interface StartPipelineExecutionRequest {
  readonly PipelineName: string;
  readonly PipelineExecutionDisplayName: string;
  readonly PipelineParameters: [];
  readonly PipelineExecutionDescription: string;
  readonly ClientRequestToken: string;
}

interface StartPipelineExecutionResponse {
  readonly PipelineExecutionArn: string;
}

interface StopAutoMLJobRequest {
  readonly AutoMLJobName: string;
}

interface StopCompilationJobRequest {
  readonly CompilationJobName: string;
}

interface StopEdgePackagingJobRequest {
  readonly EdgePackagingJobName: string;
}

interface StopHyperParameterTuningJobRequest {
  readonly HyperParameterTuningJobName: string;
}

interface StopInferenceRecommendationsJobRequest {
  readonly JobName: string;
}

interface StopLabelingJobRequest {
  readonly LabelingJobName: string;
}

interface StopMonitoringScheduleRequest {
  readonly MonitoringScheduleName: string;
}

interface StopNotebookInstanceInput {
  readonly NotebookInstanceName: string;
}

interface StopPipelineExecutionRequest {
  readonly PipelineExecutionArn: string;
  readonly ClientRequestToken: string;
}

interface StopPipelineExecutionResponse {
  readonly PipelineExecutionArn: string;
}

interface StopProcessingJobRequest {
  readonly ProcessingJobName: string;
}

interface StopTrainingJobRequest {
  readonly TrainingJobName: string;
}

interface StopTransformJobRequest {
  readonly TransformJobName: string;
}

interface StoppingCondition {
  readonly MaxRuntimeInSeconds: number;
  readonly MaxWaitTimeInSeconds: number;
}

interface StudioLifecycleConfigDetails {
  readonly StudioLifecycleConfigArn: string;
  readonly StudioLifecycleConfigName: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
  readonly StudioLifecycleConfigAppType: string;
}

interface SubscribedWorkteam {
  readonly WorkteamArn: string;
  readonly MarketplaceTitle: string;
  readonly SellerName: string;
  readonly MarketplaceDescription: string;
  readonly ListingId: string;
}

interface SuggestionQuery {
  readonly PropertyNameQuery: PropertyNameQuery;
}

interface Tag {
  readonly Key: string;
  readonly Value: string;
}

interface TargetPlatform {
  readonly Os: string;
  readonly Arch: string;
  readonly Accelerator: string;
}

interface TensorBoardAppSettings {
  readonly DefaultResourceSpec: ResourceSpec;
}

interface TensorBoardOutputConfig {
  readonly LocalPath: string;
  readonly S3OutputPath: string;
}

interface TrafficPattern {
  readonly TrafficType: string;
  readonly Phases: [];
}

interface TrafficRoutingConfig {
  readonly Type: string;
  readonly WaitIntervalInSeconds: number;
  readonly CanarySize: CapacitySize;
  readonly LinearStepSize: CapacitySize;
}

interface TrainingJob {
  readonly TrainingJobName: string;
  readonly TrainingJobArn: string;
  readonly TuningJobArn: string;
  readonly LabelingJobArn: string;
  readonly AutoMLJobArn: string;
  readonly ModelArtifacts: ModelArtifacts;
  readonly TrainingJobStatus: string;
  readonly SecondaryStatus: string;
  readonly FailureReason: string;
  readonly HyperParameters: {[key: string]: any};
  readonly AlgorithmSpecification: AlgorithmSpecification;
  readonly RoleArn: string;
  readonly InputDataConfig: [];
  readonly OutputDataConfig: OutputDataConfig;
  readonly ResourceConfig: ResourceConfig;
  readonly VpcConfig: VpcConfig;
  readonly StoppingCondition: StoppingCondition;
  readonly CreationTime: Date;
  readonly TrainingStartTime: Date;
  readonly TrainingEndTime: Date;
  readonly LastModifiedTime: Date;
  readonly SecondaryStatusTransitions: [];
  readonly FinalMetricDataList: [];
  readonly EnableNetworkIsolation: boolean;
  readonly EnableInterContainerTrafficEncryption: boolean;
  readonly EnableManagedSpotTraining: boolean;
  readonly CheckpointConfig: CheckpointConfig;
  readonly TrainingTimeInSeconds: number;
  readonly BillableTimeInSeconds: number;
  readonly DebugHookConfig: DebugHookConfig;
  readonly ExperimentConfig: ExperimentConfig;
  readonly DebugRuleConfigurations: [];
  readonly TensorBoardOutputConfig: TensorBoardOutputConfig;
  readonly DebugRuleEvaluationStatuses: [];
  readonly Environment: {[key: string]: any};
  readonly RetryStrategy: RetryStrategy;
  readonly Tags: [];
}

interface TrainingJobDefinition {
  readonly TrainingInputMode: string;
  readonly HyperParameters: {[key: string]: any};
  readonly InputDataConfig: [];
  readonly OutputDataConfig: OutputDataConfig;
  readonly ResourceConfig: ResourceConfig;
  readonly StoppingCondition: StoppingCondition;
}

interface TrainingJobStatusCounters {
  readonly Completed: number;
  readonly InProgress: number;
  readonly RetryableError: number;
  readonly NonRetryableError: number;
  readonly Stopped: number;
}

interface TrainingJobStepMetadata {
  readonly Arn: string;
}

interface TrainingJobSummary {
  readonly TrainingJobName: string;
  readonly TrainingJobArn: string;
  readonly CreationTime: Date;
  readonly TrainingEndTime: Date;
  readonly LastModifiedTime: Date;
  readonly TrainingJobStatus: string;
}

interface TrainingSpecification {
  readonly TrainingImage: string;
  readonly TrainingImageDigest: string;
  readonly SupportedHyperParameters: [];
  readonly SupportedTrainingInstanceTypes: [];
  readonly SupportsDistributedTraining: boolean;
  readonly MetricDefinitions: [];
  readonly TrainingChannels: [];
  readonly SupportedTuningJobObjectiveMetrics: [];
}

interface TransformDataSource {
  readonly S3DataSource: TransformS3DataSource;
}

interface TransformInput {
  readonly DataSource: TransformDataSource;
  readonly ContentType: string;
  readonly CompressionType: string;
  readonly SplitType: string;
}

interface TransformJob {
  readonly TransformJobName: string;
  readonly TransformJobArn: string;
  readonly TransformJobStatus: string;
  readonly FailureReason: string;
  readonly ModelName: string;
  readonly MaxConcurrentTransforms: number;
  readonly ModelClientConfig: ModelClientConfig;
  readonly MaxPayloadInMB: number;
  readonly BatchStrategy: string;
  readonly Environment: {[key: string]: any};
  readonly TransformInput: TransformInput;
  readonly TransformOutput: TransformOutput;
  readonly TransformResources: TransformResources;
  readonly CreationTime: Date;
  readonly TransformStartTime: Date;
  readonly TransformEndTime: Date;
  readonly LabelingJobArn: string;
  readonly AutoMLJobArn: string;
  readonly DataProcessing: DataProcessing;
  readonly ExperimentConfig: ExperimentConfig;
  readonly Tags: [];
}

interface TransformJobDefinition {
  readonly MaxConcurrentTransforms: number;
  readonly MaxPayloadInMB: number;
  readonly BatchStrategy: string;
  readonly Environment: {[key: string]: any};
  readonly TransformInput: TransformInput;
  readonly TransformOutput: TransformOutput;
  readonly TransformResources: TransformResources;
}

interface TransformJobStepMetadata {
  readonly Arn: string;
}

interface TransformJobSummary {
  readonly TransformJobName: string;
  readonly TransformJobArn: string;
  readonly CreationTime: Date;
  readonly TransformEndTime: Date;
  readonly LastModifiedTime: Date;
  readonly TransformJobStatus: string;
  readonly FailureReason: string;
}

interface TransformOutput {
  readonly S3OutputPath: string;
  readonly Accept: string;
  readonly AssembleWith: string;
  readonly KmsKeyId: string;
}

interface TransformResources {
  readonly InstanceType: string;
  readonly InstanceCount: number;
  readonly VolumeKmsKeyId: string;
}

interface TransformS3DataSource {
  readonly S3DataType: string;
  readonly S3Uri: string;
}

interface Trial {
  readonly TrialName: string;
  readonly TrialArn: string;
  readonly DisplayName: string;
  readonly ExperimentName: string;
  readonly Source: TrialSource;
  readonly CreationTime: Date;
  readonly CreatedBy: UserContext;
  readonly LastModifiedTime: Date;
  readonly LastModifiedBy: UserContext;
  readonly MetadataProperties: MetadataProperties;
  readonly Tags: [];
  readonly TrialComponentSummaries: [];
}

interface TrialComponent {
  readonly TrialComponentName: string;
  readonly DisplayName: string;
  readonly TrialComponentArn: string;
  readonly Source: TrialComponentSource;
  readonly Status: TrialComponentStatus;
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly CreationTime: Date;
  readonly CreatedBy: UserContext;
  readonly LastModifiedTime: Date;
  readonly LastModifiedBy: UserContext;
  readonly Parameters: {[key: string]: any};
  readonly InputArtifacts: {[key: string]: any};
  readonly OutputArtifacts: {[key: string]: any};
  readonly Metrics: [];
  readonly MetadataProperties: MetadataProperties;
  readonly SourceDetail: TrialComponentSourceDetail;
  readonly LineageGroupArn: string;
  readonly Tags: [];
  readonly Parents: [];
}

interface TrialComponentArtifact {
  readonly MediaType: string;
  readonly Value: string;
}

interface TrialComponentMetricSummary {
  readonly MetricName: string;
  readonly SourceArn: string;
  readonly TimeStamp: Date;
  readonly Max: unknown;
  readonly Min: unknown;
  readonly Last: unknown;
  readonly Count: number;
  readonly Avg: unknown;
  readonly StdDev: unknown;
}

interface TrialComponentParameterValue {
  readonly StringValue: string;
  readonly NumberValue: unknown;
}

interface TrialComponentSimpleSummary {
  readonly TrialComponentName: string;
  readonly TrialComponentArn: string;
  readonly TrialComponentSource: TrialComponentSource;
  readonly CreationTime: Date;
  readonly CreatedBy: UserContext;
}

interface TrialComponentSource {
  readonly SourceArn: string;
  readonly SourceType: string;
}

interface TrialComponentSourceDetail {
  readonly SourceArn: string;
  readonly TrainingJob: TrainingJob;
  readonly ProcessingJob: ProcessingJob;
  readonly TransformJob: TransformJob;
}

interface TrialComponentStatus {
  readonly PrimaryStatus: string;
  readonly Message: string;
}

interface TrialComponentSummary {
  readonly TrialComponentName: string;
  readonly TrialComponentArn: string;
  readonly DisplayName: string;
  readonly TrialComponentSource: TrialComponentSource;
  readonly Status: TrialComponentStatus;
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly CreationTime: Date;
  readonly CreatedBy: UserContext;
  readonly LastModifiedTime: Date;
  readonly LastModifiedBy: UserContext;
}

interface TrialSource {
  readonly SourceArn: string;
  readonly SourceType: string;
}

interface TrialSummary {
  readonly TrialArn: string;
  readonly TrialName: string;
  readonly DisplayName: string;
  readonly TrialSource: TrialSource;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
}

interface TuningJobCompletionCriteria {
  readonly TargetObjectiveMetricValue: unknown;
}

interface TuningJobStepMetaData {
  readonly Arn: string;
}

interface USD {
  readonly Dollars: number;
  readonly Cents: number;
  readonly TenthFractionsOfACent: number;
}

interface UiConfig {
  readonly UiTemplateS3Uri: string;
  readonly HumanTaskUiArn: string;
}

interface UiTemplate {
  readonly Content: string;
}

interface UiTemplateInfo {
  readonly Url: string;
  readonly ContentSha256: string;
}

interface UpdateActionRequest {
  readonly ActionName: string;
  readonly Description: string;
  readonly Status: string;
  readonly Properties: {[key: string]: any};
  readonly PropertiesToRemove: [];
}

interface UpdateActionResponse {
  readonly ActionArn: string;
}

interface UpdateAppImageConfigRequest {
  readonly AppImageConfigName: string;
  readonly KernelGatewayImageConfig: KernelGatewayImageConfig;
}

interface UpdateAppImageConfigResponse {
  readonly AppImageConfigArn: string;
}

interface UpdateArtifactRequest {
  readonly ArtifactArn: string;
  readonly ArtifactName: string;
  readonly Properties: {[key: string]: any};
  readonly PropertiesToRemove: [];
}

interface UpdateArtifactResponse {
  readonly ArtifactArn: string;
}

interface UpdateCodeRepositoryInput {
  readonly CodeRepositoryName: string;
  readonly GitConfig: GitConfigForUpdate;
}

interface UpdateCodeRepositoryOutput {
  readonly CodeRepositoryArn: string;
}

interface UpdateContextRequest {
  readonly ContextName: string;
  readonly Description: string;
  readonly Properties: {[key: string]: any};
  readonly PropertiesToRemove: [];
}

interface UpdateContextResponse {
  readonly ContextArn: string;
}

interface UpdateDeviceFleetRequest {
  readonly DeviceFleetName: string;
  readonly RoleArn: string;
  readonly Description: string;
  readonly OutputConfig: EdgeOutputConfig;
  readonly EnableIotRoleAlias: boolean;
}

interface UpdateDevicesRequest {
  readonly DeviceFleetName: string;
  readonly Devices: [];
}

interface UpdateDomainRequest {
  readonly DomainId: string;
  readonly DefaultUserSettings: UserSettings;
  readonly DomainSettingsForUpdate: DomainSettingsForUpdate;
}

interface UpdateDomainResponse {
  readonly DomainArn: string;
}

interface UpdateEndpointInput {
  readonly EndpointName: string;
  readonly EndpointConfigName: string;
  readonly RetainAllVariantProperties: boolean;
  readonly ExcludeRetainedVariantProperties: [];
  readonly DeploymentConfig: DeploymentConfig;
  readonly RetainDeploymentConfig: boolean;
}

interface UpdateEndpointOutput {
  readonly EndpointArn: string;
}

interface UpdateEndpointWeightsAndCapacitiesInput {
  readonly EndpointName: string;
  readonly DesiredWeightsAndCapacities: [];
}

interface UpdateEndpointWeightsAndCapacitiesOutput {
  readonly EndpointArn: string;
}

interface UpdateExperimentRequest {
  readonly ExperimentName: string;
  readonly DisplayName: string;
  readonly Description: string;
}

interface UpdateExperimentResponse {
  readonly ExperimentArn: string;
}

interface UpdateImageRequest {
  readonly DeleteProperties: [];
  readonly Description: string;
  readonly DisplayName: string;
  readonly ImageName: string;
  readonly RoleArn: string;
}

interface UpdateImageResponse {
  readonly ImageArn: string;
}

interface UpdateModelPackageInput {
  readonly ModelPackageArn: string;
  readonly ModelApprovalStatus: string;
  readonly ApprovalDescription: string;
  readonly CustomerMetadataProperties: {[key: string]: any};
  readonly CustomerMetadataPropertiesToRemove: [];
  readonly AdditionalInferenceSpecificationsToAdd: [];
}

interface UpdateModelPackageOutput {
  readonly ModelPackageArn: string;
}

interface UpdateMonitoringScheduleRequest {
  readonly MonitoringScheduleName: string;
  readonly MonitoringScheduleConfig: MonitoringScheduleConfig;
}

interface UpdateMonitoringScheduleResponse {
  readonly MonitoringScheduleArn: string;
}

interface UpdateNotebookInstanceInput {
  readonly NotebookInstanceName: string;
  readonly InstanceType: string;
  readonly RoleArn: string;
  readonly LifecycleConfigName: string;
  readonly DisassociateLifecycleConfig: boolean;
  readonly VolumeSizeInGB: number;
  readonly DefaultCodeRepository: string;
  readonly AdditionalCodeRepositories: [];
  readonly AcceleratorTypes: [];
  readonly DisassociateAcceleratorTypes: boolean;
  readonly DisassociateDefaultCodeRepository: boolean;
  readonly DisassociateAdditionalCodeRepositories: boolean;
  readonly RootAccess: string;
}

interface UpdateNotebookInstanceLifecycleConfigInput {
  readonly NotebookInstanceLifecycleConfigName: string;
  readonly OnCreate: [];
  readonly OnStart: [];
}

interface UpdateNotebookInstanceLifecycleConfigOutput {
}

interface UpdateNotebookInstanceOutput {
}

interface UpdatePipelineExecutionRequest {
  readonly PipelineExecutionArn: string;
  readonly PipelineExecutionDescription: string;
  readonly PipelineExecutionDisplayName: string;
}

interface UpdatePipelineExecutionResponse {
  readonly PipelineExecutionArn: string;
}

interface UpdatePipelineRequest {
  readonly PipelineName: string;
  readonly PipelineDisplayName: string;
  readonly PipelineDefinition: string;
  readonly PipelineDescription: string;
  readonly RoleArn: string;
}

interface UpdatePipelineResponse {
  readonly PipelineArn: string;
}

interface UpdateProjectInput {
  readonly ProjectName: string;
  readonly ProjectDescription: string;
  readonly ServiceCatalogProvisioningUpdateDetails: ServiceCatalogProvisioningUpdateDetails;
  readonly Tags: [];
}

interface UpdateProjectOutput {
  readonly ProjectArn: string;
}

interface UpdateTrainingJobRequest {
  readonly TrainingJobName: string;
  readonly ProfilerConfig: ProfilerConfigForUpdate;
  readonly ProfilerRuleConfigurations: [];
}

interface UpdateTrainingJobResponse {
  readonly TrainingJobArn: string;
}

interface UpdateTrialComponentRequest {
  readonly TrialComponentName: string;
  readonly DisplayName: string;
  readonly Status: TrialComponentStatus;
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly Parameters: {[key: string]: any};
  readonly ParametersToRemove: [];
  readonly InputArtifacts: {[key: string]: any};
  readonly InputArtifactsToRemove: [];
  readonly OutputArtifacts: {[key: string]: any};
  readonly OutputArtifactsToRemove: [];
}

interface UpdateTrialComponentResponse {
  readonly TrialComponentArn: string;
}

interface UpdateTrialRequest {
  readonly TrialName: string;
  readonly DisplayName: string;
}

interface UpdateTrialResponse {
  readonly TrialArn: string;
}

interface UpdateUserProfileRequest {
  readonly DomainId: string;
  readonly UserProfileName: string;
  readonly UserSettings: UserSettings;
}

interface UpdateUserProfileResponse {
  readonly UserProfileArn: string;
}

interface UpdateWorkforceRequest {
  readonly WorkforceName: string;
  readonly SourceIpConfig: SourceIpConfig;
  readonly OidcConfig: OidcConfig;
}

interface UpdateWorkforceResponse {
  readonly Workforce: Workforce;
}

interface UpdateWorkteamRequest {
  readonly WorkteamName: string;
  readonly MemberDefinitions: [];
  readonly Description: string;
  readonly NotificationConfiguration: NotificationConfiguration;
}

interface UpdateWorkteamResponse {
  readonly Workteam: Workteam;
}

interface UserContext {
  readonly UserProfileArn: string;
  readonly UserProfileName: string;
  readonly DomainId: string;
}

interface UserProfileDetails {
  readonly DomainId: string;
  readonly UserProfileName: string;
  readonly Status: string;
  readonly CreationTime: Date;
  readonly LastModifiedTime: Date;
}

interface UserSettings {
  readonly ExecutionRole: string;
  readonly SecurityGroups: [];
  readonly SharingSettings: SharingSettings;
  readonly JupyterServerAppSettings: JupyterServerAppSettings;
  readonly KernelGatewayAppSettings: KernelGatewayAppSettings;
  readonly TensorBoardAppSettings: TensorBoardAppSettings;
  readonly RStudioServerProAppSettings: RStudioServerProAppSettings;
  readonly RSessionAppSettings: RSessionAppSettings;
}

interface VariantProperty {
  readonly VariantPropertyType: string;
}

interface Vertex {
  readonly Arn: string;
  readonly Type: string;
  readonly LineageType: string;
}

interface VpcConfig {
  readonly SecurityGroupIds: [];
  readonly Subnets: [];
}

interface Workforce {
  readonly WorkforceName: string;
  readonly WorkforceArn: string;
  readonly LastUpdatedDate: Date;
  readonly SourceIpConfig: SourceIpConfig;
  readonly SubDomain: string;
  readonly CognitoConfig: CognitoConfig;
  readonly OidcConfig: OidcConfigForResponse;
  readonly CreateDate: Date;
}

interface Workteam {
  readonly WorkteamName: string;
  readonly MemberDefinitions: [];
  readonly WorkteamArn: string;
  readonly WorkforceArn: string;
  readonly ProductListingIds: [];
  readonly Description: string;
  readonly SubDomain: string;
  readonly CreateDate: Date;
  readonly LastUpdatedDate: Date;
  readonly NotificationConfiguration: NotificationConfiguration;
}

