/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface BuildSuggesters {
  readonly DomainName: string;
}
export interface CreateDomain {
  readonly DomainName: string;
}
export interface DefineAnalysisScheme {
  readonly DomainName: string;
  readonly AnalysisScheme: AnalysisScheme;
}
export interface DefineExpression {
  readonly DomainName: string;
  readonly Expression: Expression;
}
export interface DefineIndexField {
  readonly DomainName: string;
  readonly IndexField: IndexField;
}
export interface DefineSuggester {
  readonly DomainName: string;
  readonly Suggester: Suggester;
}
export interface DeleteAnalysisScheme {
  readonly DomainName: string;
  readonly AnalysisSchemeName: string;
}
export interface DeleteDomain {
  readonly DomainName: string;
}
export interface DeleteExpression {
  readonly DomainName: string;
  readonly ExpressionName: string;
}
export interface DeleteIndexField {
  readonly DomainName: string;
  readonly IndexFieldName: string;
}
export interface DeleteSuggester {
  readonly DomainName: string;
  readonly SuggesterName: string;
}
export interface DescribeAnalysisSchemes {
  readonly DomainName: string;
  readonly AnalysisSchemeNames: [];
  readonly Deployed: boolean;
}
export interface DescribeAvailabilityOptions {
  readonly DomainName: string;
  readonly Deployed: boolean;
}
export interface DescribeDomainEndpointOptions {
  readonly DomainName: string;
  readonly Deployed: boolean;
}
export interface DescribeDomains {
  readonly DomainNames: [];
}
export interface DescribeExpressions {
  readonly DomainName: string;
  readonly ExpressionNames: [];
  readonly Deployed: boolean;
}
export interface DescribeIndexFields {
  readonly DomainName: string;
  readonly FieldNames: [];
  readonly Deployed: boolean;
}
export interface DescribeScalingParameters {
  readonly DomainName: string;
}
export interface DescribeServiceAccessPolicies {
  readonly DomainName: string;
  readonly Deployed: boolean;
}
export interface DescribeSuggesters {
  readonly DomainName: string;
  readonly SuggesterNames: [];
  readonly Deployed: boolean;
}
export interface IndexDocuments {
  readonly DomainName: string;
}
export interface UpdateAvailabilityOptions {
  readonly DomainName: string;
  readonly MultiAZ: boolean;
}
export interface UpdateDomainEndpointOptions {
  readonly DomainName: string;
  readonly DomainEndpointOptions: DomainEndpointOptions;
}
export interface UpdateScalingParameters {
  readonly DomainName: string;
  readonly ScalingParameters: ScalingParameters;
}
export interface UpdateServiceAccessPolicies {
  readonly DomainName: string;
  readonly AccessPolicies: string;
}



interface AccessPoliciesStatus {
  readonly Options: string;
  readonly Status: OptionStatus;
}

interface AnalysisOptions {
  readonly Synonyms: string;
  readonly Stopwords: string;
  readonly StemmingDictionary: string;
  readonly JapaneseTokenizationDictionary: string;
  readonly AlgorithmicStemming: string;
}

interface AnalysisScheme {
  readonly AnalysisSchemeName: string;
  readonly AnalysisSchemeLanguage: string;
  readonly AnalysisOptions: AnalysisOptions;
}

interface AnalysisSchemeStatus {
  readonly Options: AnalysisScheme;
  readonly Status: OptionStatus;
}

interface AvailabilityOptionsStatus {
  readonly Options: boolean;
  readonly Status: OptionStatus;
}

interface BaseException {
  readonly Code: string;
  readonly Message: string;
}

interface BuildSuggestersRequest {
  readonly DomainName: string;
}

interface BuildSuggestersResponse {
  readonly FieldNames: [];
}

interface CreateDomainRequest {
  readonly DomainName: string;
}

interface CreateDomainResponse {
  readonly DomainStatus: DomainStatus;
}

interface DateArrayOptions {
  readonly DefaultValue: string;
  readonly SourceFields: string;
  readonly FacetEnabled: boolean;
  readonly SearchEnabled: boolean;
  readonly ReturnEnabled: boolean;
}

interface DateOptions {
  readonly DefaultValue: string;
  readonly SourceField: string;
  readonly FacetEnabled: boolean;
  readonly SearchEnabled: boolean;
  readonly ReturnEnabled: boolean;
  readonly SortEnabled: boolean;
}

interface DefineAnalysisSchemeRequest {
  readonly DomainName: string;
  readonly AnalysisScheme: AnalysisScheme;
}

interface DefineAnalysisSchemeResponse {
  readonly AnalysisScheme: AnalysisSchemeStatus;
}

interface DefineExpressionRequest {
  readonly DomainName: string;
  readonly Expression: Expression;
}

interface DefineExpressionResponse {
  readonly Expression: ExpressionStatus;
}

interface DefineIndexFieldRequest {
  readonly DomainName: string;
  readonly IndexField: IndexField;
}

interface DefineIndexFieldResponse {
  readonly IndexField: IndexFieldStatus;
}

interface DefineSuggesterRequest {
  readonly DomainName: string;
  readonly Suggester: Suggester;
}

interface DefineSuggesterResponse {
  readonly Suggester: SuggesterStatus;
}

interface DeleteAnalysisSchemeRequest {
  readonly DomainName: string;
  readonly AnalysisSchemeName: string;
}

interface DeleteAnalysisSchemeResponse {
  readonly AnalysisScheme: AnalysisSchemeStatus;
}

interface DeleteDomainRequest {
  readonly DomainName: string;
}

interface DeleteDomainResponse {
  readonly DomainStatus: DomainStatus;
}

interface DeleteExpressionRequest {
  readonly DomainName: string;
  readonly ExpressionName: string;
}

interface DeleteExpressionResponse {
  readonly Expression: ExpressionStatus;
}

interface DeleteIndexFieldRequest {
  readonly DomainName: string;
  readonly IndexFieldName: string;
}

interface DeleteIndexFieldResponse {
  readonly IndexField: IndexFieldStatus;
}

interface DeleteSuggesterRequest {
  readonly DomainName: string;
  readonly SuggesterName: string;
}

interface DeleteSuggesterResponse {
  readonly Suggester: SuggesterStatus;
}

interface DescribeAnalysisSchemesRequest {
  readonly DomainName: string;
  readonly AnalysisSchemeNames: [];
  readonly Deployed: boolean;
}

interface DescribeAnalysisSchemesResponse {
  readonly AnalysisSchemes: [];
}

interface DescribeAvailabilityOptionsRequest {
  readonly DomainName: string;
  readonly Deployed: boolean;
}

interface DescribeAvailabilityOptionsResponse {
  readonly AvailabilityOptions: AvailabilityOptionsStatus;
}

interface DescribeDomainEndpointOptionsRequest {
  readonly DomainName: string;
  readonly Deployed: boolean;
}

interface DescribeDomainEndpointOptionsResponse {
  readonly DomainEndpointOptions: DomainEndpointOptionsStatus;
}

interface DescribeDomainsRequest {
  readonly DomainNames: [];
}

interface DescribeDomainsResponse {
  readonly DomainStatusList: [];
}

interface DescribeExpressionsRequest {
  readonly DomainName: string;
  readonly ExpressionNames: [];
  readonly Deployed: boolean;
}

interface DescribeExpressionsResponse {
  readonly Expressions: [];
}

interface DescribeIndexFieldsRequest {
  readonly DomainName: string;
  readonly FieldNames: [];
  readonly Deployed: boolean;
}

interface DescribeIndexFieldsResponse {
  readonly IndexFields: [];
}

interface DescribeScalingParametersRequest {
  readonly DomainName: string;
}

interface DescribeScalingParametersResponse {
  readonly ScalingParameters: ScalingParametersStatus;
}

interface DescribeServiceAccessPoliciesRequest {
  readonly DomainName: string;
  readonly Deployed: boolean;
}

interface DescribeServiceAccessPoliciesResponse {
  readonly AccessPolicies: AccessPoliciesStatus;
}

interface DescribeSuggestersRequest {
  readonly DomainName: string;
  readonly SuggesterNames: [];
  readonly Deployed: boolean;
}

interface DescribeSuggestersResponse {
  readonly Suggesters: [];
}

interface DisabledOperationException {
}

interface DocumentSuggesterOptions {
  readonly SourceField: string;
  readonly FuzzyMatching: string;
  readonly SortExpression: string;
}

interface DomainEndpointOptions {
  readonly EnforceHTTPS: boolean;
  readonly TLSSecurityPolicy: string;
}

interface DomainEndpointOptionsStatus {
  readonly Options: DomainEndpointOptions;
  readonly Status: OptionStatus;
}

interface DomainStatus {
  readonly DomainId: string;
  readonly DomainName: string;
  readonly ARN: string;
  readonly Created: boolean;
  readonly Deleted: boolean;
  readonly DocService: ServiceEndpoint;
  readonly SearchService: ServiceEndpoint;
  readonly RequiresIndexDocuments: boolean;
  readonly Processing: boolean;
  readonly SearchInstanceType: string;
  readonly SearchPartitionCount: number;
  readonly SearchInstanceCount: number;
  readonly Limits: Limits;
}

interface DoubleArrayOptions {
  readonly DefaultValue: unknown;
  readonly SourceFields: string;
  readonly FacetEnabled: boolean;
  readonly SearchEnabled: boolean;
  readonly ReturnEnabled: boolean;
}

interface DoubleOptions {
  readonly DefaultValue: unknown;
  readonly SourceField: string;
  readonly FacetEnabled: boolean;
  readonly SearchEnabled: boolean;
  readonly ReturnEnabled: boolean;
  readonly SortEnabled: boolean;
}

interface Expression {
  readonly ExpressionName: string;
  readonly ExpressionValue: string;
}

interface ExpressionStatus {
  readonly Options: Expression;
  readonly Status: OptionStatus;
}

interface IndexDocumentsRequest {
  readonly DomainName: string;
}

interface IndexDocumentsResponse {
  readonly FieldNames: [];
}

interface IndexField {
  readonly IndexFieldName: string;
  readonly IndexFieldType: string;
  readonly IntOptions: IntOptions;
  readonly DoubleOptions: DoubleOptions;
  readonly LiteralOptions: LiteralOptions;
  readonly TextOptions: TextOptions;
  readonly DateOptions: DateOptions;
  readonly LatLonOptions: LatLonOptions;
  readonly IntArrayOptions: IntArrayOptions;
  readonly DoubleArrayOptions: DoubleArrayOptions;
  readonly LiteralArrayOptions: LiteralArrayOptions;
  readonly TextArrayOptions: TextArrayOptions;
  readonly DateArrayOptions: DateArrayOptions;
}

interface IndexFieldStatus {
  readonly Options: IndexField;
  readonly Status: OptionStatus;
}

interface IntArrayOptions {
  readonly DefaultValue: number;
  readonly SourceFields: string;
  readonly FacetEnabled: boolean;
  readonly SearchEnabled: boolean;
  readonly ReturnEnabled: boolean;
}

interface IntOptions {
  readonly DefaultValue: number;
  readonly SourceField: string;
  readonly FacetEnabled: boolean;
  readonly SearchEnabled: boolean;
  readonly ReturnEnabled: boolean;
  readonly SortEnabled: boolean;
}

interface InternalException {
}

interface InvalidTypeException {
}

interface LatLonOptions {
  readonly DefaultValue: string;
  readonly SourceField: string;
  readonly FacetEnabled: boolean;
  readonly SearchEnabled: boolean;
  readonly ReturnEnabled: boolean;
  readonly SortEnabled: boolean;
}

interface LimitExceededException {
}

interface Limits {
  readonly MaximumReplicationCount: number;
  readonly MaximumPartitionCount: number;
}

interface ListDomainNamesResponse {
  readonly DomainNames: {[key: string]: any};
}

interface LiteralArrayOptions {
  readonly DefaultValue: string;
  readonly SourceFields: string;
  readonly FacetEnabled: boolean;
  readonly SearchEnabled: boolean;
  readonly ReturnEnabled: boolean;
}

interface LiteralOptions {
  readonly DefaultValue: string;
  readonly SourceField: string;
  readonly FacetEnabled: boolean;
  readonly SearchEnabled: boolean;
  readonly ReturnEnabled: boolean;
  readonly SortEnabled: boolean;
}

interface OptionStatus {
  readonly CreationDate: Date;
  readonly UpdateDate: Date;
  readonly UpdateVersion: number;
  readonly State: string;
  readonly PendingDeletion: boolean;
}

interface ResourceAlreadyExistsException {
}

interface ResourceNotFoundException {
}

interface ScalingParameters {
  readonly DesiredInstanceType: string;
  readonly DesiredReplicationCount: number;
  readonly DesiredPartitionCount: number;
}

interface ScalingParametersStatus {
  readonly Options: ScalingParameters;
  readonly Status: OptionStatus;
}

interface ServiceEndpoint {
  readonly Endpoint: string;
}

interface Suggester {
  readonly SuggesterName: string;
  readonly DocumentSuggesterOptions: DocumentSuggesterOptions;
}

interface SuggesterStatus {
  readonly Options: Suggester;
  readonly Status: OptionStatus;
}

interface TextArrayOptions {
  readonly DefaultValue: string;
  readonly SourceFields: string;
  readonly ReturnEnabled: boolean;
  readonly HighlightEnabled: boolean;
  readonly AnalysisScheme: string;
}

interface TextOptions {
  readonly DefaultValue: string;
  readonly SourceField: string;
  readonly ReturnEnabled: boolean;
  readonly SortEnabled: boolean;
  readonly HighlightEnabled: boolean;
  readonly AnalysisScheme: string;
}

interface UpdateAvailabilityOptionsRequest {
  readonly DomainName: string;
  readonly MultiAZ: boolean;
}

interface UpdateAvailabilityOptionsResponse {
  readonly AvailabilityOptions: AvailabilityOptionsStatus;
}

interface UpdateDomainEndpointOptionsRequest {
  readonly DomainName: string;
  readonly DomainEndpointOptions: DomainEndpointOptions;
}

interface UpdateDomainEndpointOptionsResponse {
  readonly DomainEndpointOptions: DomainEndpointOptionsStatus;
}

interface UpdateScalingParametersRequest {
  readonly DomainName: string;
  readonly ScalingParameters: ScalingParameters;
}

interface UpdateScalingParametersResponse {
  readonly ScalingParameters: ScalingParametersStatus;
}

interface UpdateServiceAccessPoliciesRequest {
  readonly DomainName: string;
  readonly AccessPolicies: string;
}

interface UpdateServiceAccessPoliciesResponse {
  readonly AccessPolicies: AccessPoliciesStatus;
}

interface ValidationException {
}

