/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AssociateAlias {
  readonly TargetDistributionId: string;
  readonly Alias: string;
}
export interface CreateCachePolicy {
  readonly CachePolicyConfig: CachePolicyConfig;
}
export interface CreateCloudFrontOriginAccessIdentity {
  readonly CloudFrontOriginAccessIdentityConfig: CloudFrontOriginAccessIdentityConfig;
}
export interface CreateDistribution {
  readonly DistributionConfig: DistributionConfig;
}
export interface CreateDistributionWithTags {
  readonly DistributionConfigWithTags: DistributionConfigWithTags;
}
export interface CreateFieldLevelEncryptionConfig {
  readonly FieldLevelEncryptionConfig: FieldLevelEncryptionConfig;
}
export interface CreateFieldLevelEncryptionProfile {
  readonly FieldLevelEncryptionProfileConfig: FieldLevelEncryptionProfileConfig;
}
export interface CreateFunction {
  readonly Name: string;
  readonly FunctionConfig: FunctionConfig;
  readonly FunctionCode: unknown;
}
export interface CreateInvalidation {
  readonly DistributionId: string;
  readonly InvalidationBatch: InvalidationBatch;
}
export interface CreateKeyGroup {
  readonly KeyGroupConfig: KeyGroupConfig;
}
export interface CreateMonitoringSubscription {
  readonly DistributionId: string;
  readonly MonitoringSubscription: MonitoringSubscription;
}
export interface CreateOriginRequestPolicy {
  readonly OriginRequestPolicyConfig: OriginRequestPolicyConfig;
}
export interface CreatePublicKey {
  readonly PublicKeyConfig: PublicKeyConfig;
}
export interface CreateRealtimeLogConfig {
  readonly EndPoints: [];
  readonly Fields: [];
  readonly Name: string;
  readonly SamplingRate: number;
}
export interface CreateResponseHeadersPolicy {
  readonly ResponseHeadersPolicyConfig: ResponseHeadersPolicyConfig;
}
export interface CreateStreamingDistribution {
  readonly StreamingDistributionConfig: StreamingDistributionConfig;
}
export interface CreateStreamingDistributionWithTags {
  readonly StreamingDistributionConfigWithTags: StreamingDistributionConfigWithTags;
}
export interface DeleteCachePolicy {
  readonly Id: string;
  readonly IfMatch?: string;
}
export interface DeleteCloudFrontOriginAccessIdentity {
  readonly Id: string;
  readonly IfMatch?: string;
}
export interface DeleteDistribution {
  readonly Id: string;
  readonly IfMatch?: string;
}
export interface DeleteFieldLevelEncryptionConfig {
  readonly Id: string;
  readonly IfMatch?: string;
}
export interface DeleteFieldLevelEncryptionProfile {
  readonly Id: string;
  readonly IfMatch?: string;
}
export interface DeleteFunction {
  readonly Name: string;
  readonly IfMatch: string;
}
export interface DeleteKeyGroup {
  readonly Id: string;
  readonly IfMatch?: string;
}
export interface DeleteMonitoringSubscription {
  readonly DistributionId: string;
}
export interface DeleteOriginRequestPolicy {
  readonly Id: string;
  readonly IfMatch?: string;
}
export interface DeletePublicKey {
  readonly Id: string;
  readonly IfMatch?: string;
}
export interface DeleteRealtimeLogConfig {
  readonly Name?: string;
  readonly ARN?: string;
}
export interface DeleteResponseHeadersPolicy {
  readonly Id: string;
  readonly IfMatch?: string;
}
export interface DeleteStreamingDistribution {
  readonly Id: string;
  readonly IfMatch?: string;
}
export interface DescribeFunction {
  readonly Name: string;
  readonly Stage?: string;
}
export interface GetCachePolicy {
  readonly Id: string;
}
export interface GetCachePolicyConfig {
  readonly Id: string;
}
export interface GetCloudFrontOriginAccessIdentity {
  readonly Id: string;
}
export interface GetCloudFrontOriginAccessIdentityConfig {
  readonly Id: string;
}
export interface GetDistribution {
  readonly Id: string;
}
export interface GetDistributionConfig {
  readonly Id: string;
}
export interface GetFieldLevelEncryption {
  readonly Id: string;
}
export interface GetFieldLevelEncryptionConfig {
  readonly Id: string;
}
export interface GetFieldLevelEncryptionProfile {
  readonly Id: string;
}
export interface GetFieldLevelEncryptionProfileConfig {
  readonly Id: string;
}
export interface GetFunction {
  readonly Name: string;
  readonly Stage?: string;
}
export interface GetInvalidation {
  readonly DistributionId: string;
  readonly Id: string;
}
export interface GetKeyGroup {
  readonly Id: string;
}
export interface GetKeyGroupConfig {
  readonly Id: string;
}
export interface GetMonitoringSubscription {
  readonly DistributionId: string;
}
export interface GetOriginRequestPolicy {
  readonly Id: string;
}
export interface GetOriginRequestPolicyConfig {
  readonly Id: string;
}
export interface GetPublicKey {
  readonly Id: string;
}
export interface GetPublicKeyConfig {
  readonly Id: string;
}
export interface GetRealtimeLogConfig {
  readonly Name?: string;
  readonly ARN?: string;
}
export interface GetResponseHeadersPolicy {
  readonly Id: string;
}
export interface GetResponseHeadersPolicyConfig {
  readonly Id: string;
}
export interface GetStreamingDistribution {
  readonly Id: string;
}
export interface GetStreamingDistributionConfig {
  readonly Id: string;
}
export interface ListCachePolicies {
  readonly Type?: string;
  readonly Marker?: string;
  readonly MaxItems?: string;
}
export interface ListCloudFrontOriginAccessIdentities {
  readonly Marker?: string;
  readonly MaxItems?: string;
}
export interface ListConflictingAliases {
  readonly DistributionId: string;
  readonly Alias: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}
export interface ListDistributions {
  readonly Marker?: string;
  readonly MaxItems?: string;
}
export interface ListDistributionsByCachePolicyId {
  readonly Marker?: string;
  readonly MaxItems?: string;
  readonly CachePolicyId: string;
}
export interface ListDistributionsByKeyGroup {
  readonly Marker?: string;
  readonly MaxItems?: string;
  readonly KeyGroupId: string;
}
export interface ListDistributionsByOriginRequestPolicyId {
  readonly Marker?: string;
  readonly MaxItems?: string;
  readonly OriginRequestPolicyId: string;
}
export interface ListDistributionsByRealtimeLogConfig {
  readonly Marker?: string;
  readonly MaxItems?: string;
  readonly RealtimeLogConfigName?: string;
  readonly RealtimeLogConfigArn?: string;
}
export interface ListDistributionsByResponseHeadersPolicyId {
  readonly Marker?: string;
  readonly MaxItems?: string;
  readonly ResponseHeadersPolicyId: string;
}
export interface ListDistributionsByWebACLId {
  readonly Marker?: string;
  readonly MaxItems?: string;
  readonly WebACLId: string;
}
export interface ListFieldLevelEncryptionConfigs {
  readonly Marker?: string;
  readonly MaxItems?: string;
}
export interface ListFieldLevelEncryptionProfiles {
  readonly Marker?: string;
  readonly MaxItems?: string;
}
export interface ListFunctions {
  readonly Marker?: string;
  readonly MaxItems?: string;
  readonly Stage?: string;
}
export interface ListInvalidations {
  readonly DistributionId: string;
  readonly Marker?: string;
  readonly MaxItems?: string;
}
export interface ListKeyGroups {
  readonly Marker?: string;
  readonly MaxItems?: string;
}
export interface ListOriginRequestPolicies {
  readonly Type?: string;
  readonly Marker?: string;
  readonly MaxItems?: string;
}
export interface ListPublicKeys {
  readonly Marker?: string;
  readonly MaxItems?: string;
}
export interface ListRealtimeLogConfigs {
  readonly MaxItems?: string;
  readonly Marker?: string;
}
export interface ListResponseHeadersPolicies {
  readonly Type?: string;
  readonly Marker?: string;
  readonly MaxItems?: string;
}
export interface ListStreamingDistributions {
  readonly Marker?: string;
  readonly MaxItems?: string;
}
export interface ListTagsForResource {
  readonly Resource: string;
}
export interface PublishFunction {
  readonly Name: string;
  readonly IfMatch: string;
}
export interface TagResource {
  readonly Resource: string;
  readonly Tags: Tags;
}
export interface TestFunction {
  readonly Name: string;
  readonly IfMatch: string;
  readonly Stage?: string;
  readonly EventObject: unknown;
}
export interface UntagResource {
  readonly Resource: string;
  readonly TagKeys: TagKeys;
}
export interface UpdateCachePolicy {
  readonly CachePolicyConfig: CachePolicyConfig;
  readonly Id: string;
  readonly IfMatch?: string;
}
export interface UpdateCloudFrontOriginAccessIdentity {
  readonly CloudFrontOriginAccessIdentityConfig: CloudFrontOriginAccessIdentityConfig;
  readonly Id: string;
  readonly IfMatch?: string;
}
export interface UpdateDistribution {
  readonly DistributionConfig: DistributionConfig;
  readonly Id: string;
  readonly IfMatch?: string;
}
export interface UpdateFieldLevelEncryptionConfig {
  readonly FieldLevelEncryptionConfig: FieldLevelEncryptionConfig;
  readonly Id: string;
  readonly IfMatch?: string;
}
export interface UpdateFieldLevelEncryptionProfile {
  readonly FieldLevelEncryptionProfileConfig: FieldLevelEncryptionProfileConfig;
  readonly Id: string;
  readonly IfMatch?: string;
}
export interface UpdateFunction {
  readonly Name: string;
  readonly IfMatch: string;
  readonly FunctionConfig: FunctionConfig;
  readonly FunctionCode: unknown;
}
export interface UpdateKeyGroup {
  readonly KeyGroupConfig: KeyGroupConfig;
  readonly Id: string;
  readonly IfMatch?: string;
}
export interface UpdateOriginRequestPolicy {
  readonly OriginRequestPolicyConfig: OriginRequestPolicyConfig;
  readonly Id: string;
  readonly IfMatch?: string;
}
export interface UpdatePublicKey {
  readonly PublicKeyConfig: PublicKeyConfig;
  readonly Id: string;
  readonly IfMatch?: string;
}
export interface UpdateRealtimeLogConfig {
  readonly EndPoints?: [];
  readonly Fields?: [];
  readonly Name?: string;
  readonly ARN?: string;
  readonly SamplingRate?: number;
}
export interface UpdateResponseHeadersPolicy {
  readonly ResponseHeadersPolicyConfig: ResponseHeadersPolicyConfig;
  readonly Id: string;
  readonly IfMatch?: string;
}
export interface UpdateStreamingDistribution {
  readonly StreamingDistributionConfig: StreamingDistributionConfig;
  readonly Id: string;
  readonly IfMatch?: string;
}



interface AccessDenied {
  readonly Message: string;
}

interface ActiveTrustedKeyGroups {
  readonly Enabled: boolean;
  readonly Quantity: number;
  readonly Items: [];
}

interface ActiveTrustedSigners {
  readonly Enabled: boolean;
  readonly Quantity: number;
  readonly Items: [];
}

interface AliasICPRecordal {
  readonly CNAME: string;
  readonly ICPRecordalStatus: string;
}

interface Aliases {
  readonly Quantity: number;
  readonly Items: [];
}

interface AllowedMethods {
  readonly Quantity: number;
  readonly Items: [];
  readonly CachedMethods: CachedMethods;
}

interface AssociateAliasRequest {
  readonly TargetDistributionId: string;
  readonly Alias: string;
}

interface BatchTooLarge {
  readonly Message: string;
}

interface CNAMEAlreadyExists {
  readonly Message: string;
}

interface CacheBehavior {
  readonly PathPattern: string;
  readonly TargetOriginId: string;
  readonly TrustedSigners: TrustedSigners;
  readonly TrustedKeyGroups: TrustedKeyGroups;
  readonly ViewerProtocolPolicy: string;
  readonly AllowedMethods: AllowedMethods;
  readonly SmoothStreaming: boolean;
  readonly Compress: boolean;
  readonly LambdaFunctionAssociations: LambdaFunctionAssociations;
  readonly FunctionAssociations: FunctionAssociations;
  readonly FieldLevelEncryptionId: string;
  readonly RealtimeLogConfigArn: string;
  readonly CachePolicyId: string;
  readonly OriginRequestPolicyId: string;
  readonly ResponseHeadersPolicyId: string;
  readonly ForwardedValues: ForwardedValues;
  readonly MinTTL: number;
  readonly DefaultTTL: number;
  readonly MaxTTL: number;
}

interface CacheBehaviors {
  readonly Quantity: number;
  readonly Items: [];
}

interface CachePolicy {
  readonly Id: string;
  readonly LastModifiedTime: Date;
  readonly CachePolicyConfig: CachePolicyConfig;
}

interface CachePolicyAlreadyExists {
  readonly Message: string;
}

interface CachePolicyConfig {
  readonly Comment: string;
  readonly Name: string;
  readonly DefaultTTL: number;
  readonly MaxTTL: number;
  readonly MinTTL: number;
  readonly ParametersInCacheKeyAndForwardedToOrigin: ParametersInCacheKeyAndForwardedToOrigin;
}

interface CachePolicyCookiesConfig {
  readonly CookieBehavior: string;
  readonly Cookies: CookieNames;
}

interface CachePolicyHeadersConfig {
  readonly HeaderBehavior: string;
  readonly Headers: Headers;
}

interface CachePolicyInUse {
  readonly Message: string;
}

interface CachePolicyList {
  readonly NextMarker: string;
  readonly MaxItems: number;
  readonly Quantity: number;
  readonly Items: [];
}

interface CachePolicyQueryStringsConfig {
  readonly QueryStringBehavior: string;
  readonly QueryStrings: QueryStringNames;
}

interface CachePolicySummary {
  readonly Type: string;
  readonly CachePolicy: CachePolicy;
}

interface CachedMethods {
  readonly Quantity: number;
  readonly Items: [];
}

interface CannotChangeImmutablePublicKeyFields {
  readonly Message: string;
}

interface CloudFrontOriginAccessIdentity {
  readonly Id: string;
  readonly S3CanonicalUserId: string;
  readonly CloudFrontOriginAccessIdentityConfig: CloudFrontOriginAccessIdentityConfig;
}

interface CloudFrontOriginAccessIdentityAlreadyExists {
  readonly Message: string;
}

interface CloudFrontOriginAccessIdentityConfig {
  readonly CallerReference: string;
  readonly Comment: string;
}

interface CloudFrontOriginAccessIdentityInUse {
  readonly Message: string;
}

interface CloudFrontOriginAccessIdentityList {
  readonly Marker: string;
  readonly NextMarker: string;
  readonly MaxItems: number;
  readonly IsTruncated: boolean;
  readonly Quantity: number;
  readonly Items: [];
}

interface CloudFrontOriginAccessIdentitySummary {
  readonly Id: string;
  readonly S3CanonicalUserId: string;
  readonly Comment: string;
}

interface ConflictingAlias {
  readonly Alias: string;
  readonly DistributionId: string;
  readonly AccountId: string;
}

interface ConflictingAliasesList {
  readonly NextMarker: string;
  readonly MaxItems: number;
  readonly Quantity: number;
  readonly Items: [];
}

interface ContentTypeProfile {
  readonly Format: string;
  readonly ProfileId: string;
  readonly ContentType: string;
}

interface ContentTypeProfileConfig {
  readonly ForwardWhenContentTypeIsUnknown: boolean;
  readonly ContentTypeProfiles: ContentTypeProfiles;
}

interface ContentTypeProfiles {
  readonly Quantity: number;
  readonly Items: [];
}

interface CookieNames {
  readonly Quantity: number;
  readonly Items: [];
}

interface CookiePreference {
  readonly Forward: string;
  readonly WhitelistedNames: CookieNames;
}

interface CreateCachePolicyRequest {
  readonly CachePolicyConfig: CachePolicyConfig;
}

interface CreateCachePolicyResult {
  readonly CachePolicy: CachePolicy;
  readonly Location: string;
  readonly ETag: string;
}

interface CreateCloudFrontOriginAccessIdentityRequest {
  readonly CloudFrontOriginAccessIdentityConfig: CloudFrontOriginAccessIdentityConfig;
}

interface CreateCloudFrontOriginAccessIdentityResult {
  readonly CloudFrontOriginAccessIdentity: CloudFrontOriginAccessIdentity;
  readonly Location: string;
  readonly ETag: string;
}

interface CreateDistributionRequest {
  readonly DistributionConfig: DistributionConfig;
}

interface CreateDistributionResult {
  readonly Distribution: Distribution;
  readonly Location: string;
  readonly ETag: string;
}

interface CreateDistributionWithTagsRequest {
  readonly DistributionConfigWithTags: DistributionConfigWithTags;
}

interface CreateDistributionWithTagsResult {
  readonly Distribution: Distribution;
  readonly Location: string;
  readonly ETag: string;
}

interface CreateFieldLevelEncryptionConfigRequest {
  readonly FieldLevelEncryptionConfig: FieldLevelEncryptionConfig;
}

interface CreateFieldLevelEncryptionConfigResult {
  readonly FieldLevelEncryption: FieldLevelEncryption;
  readonly Location: string;
  readonly ETag: string;
}

interface CreateFieldLevelEncryptionProfileRequest {
  readonly FieldLevelEncryptionProfileConfig: FieldLevelEncryptionProfileConfig;
}

interface CreateFieldLevelEncryptionProfileResult {
  readonly FieldLevelEncryptionProfile: FieldLevelEncryptionProfile;
  readonly Location: string;
  readonly ETag: string;
}

interface CreateFunctionRequest {
  readonly Name: string;
  readonly FunctionConfig: FunctionConfig;
  readonly FunctionCode: unknown;
}

interface CreateFunctionResult {
  readonly FunctionSummary: FunctionSummary;
  readonly Location: string;
  readonly ETag: string;
}

interface CreateInvalidationRequest {
  readonly DistributionId: string;
  readonly InvalidationBatch: InvalidationBatch;
}

interface CreateInvalidationResult {
  readonly Location: string;
  readonly Invalidation: Invalidation;
}

interface CreateKeyGroupRequest {
  readonly KeyGroupConfig: KeyGroupConfig;
}

interface CreateKeyGroupResult {
  readonly KeyGroup: KeyGroup;
  readonly Location: string;
  readonly ETag: string;
}

interface CreateMonitoringSubscriptionRequest {
  readonly DistributionId: string;
  readonly MonitoringSubscription: MonitoringSubscription;
}

interface CreateMonitoringSubscriptionResult {
  readonly MonitoringSubscription: MonitoringSubscription;
}

interface CreateOriginRequestPolicyRequest {
  readonly OriginRequestPolicyConfig: OriginRequestPolicyConfig;
}

interface CreateOriginRequestPolicyResult {
  readonly OriginRequestPolicy: OriginRequestPolicy;
  readonly Location: string;
  readonly ETag: string;
}

interface CreatePublicKeyRequest {
  readonly PublicKeyConfig: PublicKeyConfig;
}

interface CreatePublicKeyResult {
  readonly PublicKey: PublicKey;
  readonly Location: string;
  readonly ETag: string;
}

interface CreateRealtimeLogConfigRequest {
  readonly EndPoints: [];
  readonly Fields: [];
  readonly Name: string;
  readonly SamplingRate: number;
}

interface CreateRealtimeLogConfigResult {
  readonly RealtimeLogConfig: RealtimeLogConfig;
}

interface CreateResponseHeadersPolicyRequest {
  readonly ResponseHeadersPolicyConfig: ResponseHeadersPolicyConfig;
}

interface CreateResponseHeadersPolicyResult {
  readonly ResponseHeadersPolicy: ResponseHeadersPolicy;
  readonly Location: string;
  readonly ETag: string;
}

interface CreateStreamingDistributionRequest {
  readonly StreamingDistributionConfig: StreamingDistributionConfig;
}

interface CreateStreamingDistributionResult {
  readonly StreamingDistribution: StreamingDistribution;
  readonly Location: string;
  readonly ETag: string;
}

interface CreateStreamingDistributionWithTagsRequest {
  readonly StreamingDistributionConfigWithTags: StreamingDistributionConfigWithTags;
}

interface CreateStreamingDistributionWithTagsResult {
  readonly StreamingDistribution: StreamingDistribution;
  readonly Location: string;
  readonly ETag: string;
}

interface CustomErrorResponse {
  readonly ErrorCode: number;
  readonly ResponsePagePath: string;
  readonly ResponseCode: string;
  readonly ErrorCachingMinTTL: number;
}

interface CustomErrorResponses {
  readonly Quantity: number;
  readonly Items: [];
}

interface CustomHeaders {
  readonly Quantity: number;
  readonly Items: [];
}

interface CustomOriginConfig {
  readonly HTTPPort: number;
  readonly HTTPSPort: number;
  readonly OriginProtocolPolicy: string;
  readonly OriginSslProtocols: OriginSslProtocols;
  readonly OriginReadTimeout: number;
  readonly OriginKeepaliveTimeout: number;
}

interface DefaultCacheBehavior {
  readonly TargetOriginId: string;
  readonly TrustedSigners: TrustedSigners;
  readonly TrustedKeyGroups: TrustedKeyGroups;
  readonly ViewerProtocolPolicy: string;
  readonly AllowedMethods: AllowedMethods;
  readonly SmoothStreaming: boolean;
  readonly Compress: boolean;
  readonly LambdaFunctionAssociations: LambdaFunctionAssociations;
  readonly FunctionAssociations: FunctionAssociations;
  readonly FieldLevelEncryptionId: string;
  readonly RealtimeLogConfigArn: string;
  readonly CachePolicyId: string;
  readonly OriginRequestPolicyId: string;
  readonly ResponseHeadersPolicyId: string;
  readonly ForwardedValues: ForwardedValues;
  readonly MinTTL: number;
  readonly DefaultTTL: number;
  readonly MaxTTL: number;
}

interface DeleteCachePolicyRequest {
  readonly Id: string;
  readonly IfMatch: string;
}

interface DeleteCloudFrontOriginAccessIdentityRequest {
  readonly Id: string;
  readonly IfMatch: string;
}

interface DeleteDistributionRequest {
  readonly Id: string;
  readonly IfMatch: string;
}

interface DeleteFieldLevelEncryptionConfigRequest {
  readonly Id: string;
  readonly IfMatch: string;
}

interface DeleteFieldLevelEncryptionProfileRequest {
  readonly Id: string;
  readonly IfMatch: string;
}

interface DeleteFunctionRequest {
  readonly Name: string;
  readonly IfMatch: string;
}

interface DeleteKeyGroupRequest {
  readonly Id: string;
  readonly IfMatch: string;
}

interface DeleteMonitoringSubscriptionRequest {
  readonly DistributionId: string;
}

interface DeleteMonitoringSubscriptionResult {
}

interface DeleteOriginRequestPolicyRequest {
  readonly Id: string;
  readonly IfMatch: string;
}

interface DeletePublicKeyRequest {
  readonly Id: string;
  readonly IfMatch: string;
}

interface DeleteRealtimeLogConfigRequest {
  readonly Name: string;
  readonly ARN: string;
}

interface DeleteResponseHeadersPolicyRequest {
  readonly Id: string;
  readonly IfMatch: string;
}

interface DeleteStreamingDistributionRequest {
  readonly Id: string;
  readonly IfMatch: string;
}

interface DescribeFunctionRequest {
  readonly Name: string;
  readonly Stage: string;
}

interface DescribeFunctionResult {
  readonly FunctionSummary: FunctionSummary;
  readonly ETag: string;
}

interface Distribution {
  readonly Id: string;
  readonly ARN: string;
  readonly Status: string;
  readonly LastModifiedTime: Date;
  readonly InProgressInvalidationBatches: number;
  readonly DomainName: string;
  readonly ActiveTrustedSigners: ActiveTrustedSigners;
  readonly ActiveTrustedKeyGroups: ActiveTrustedKeyGroups;
  readonly DistributionConfig: DistributionConfig;
  readonly AliasICPRecordals: [];
}

interface DistributionAlreadyExists {
  readonly Message: string;
}

interface DistributionConfig {
  readonly CallerReference: string;
  readonly Aliases: Aliases;
  readonly DefaultRootObject: string;
  readonly Origins: Origins;
  readonly OriginGroups: OriginGroups;
  readonly DefaultCacheBehavior: DefaultCacheBehavior;
  readonly CacheBehaviors: CacheBehaviors;
  readonly CustomErrorResponses: CustomErrorResponses;
  readonly Comment: string;
  readonly Logging: LoggingConfig;
  readonly PriceClass: string;
  readonly Enabled: boolean;
  readonly ViewerCertificate: ViewerCertificate;
  readonly Restrictions: Restrictions;
  readonly WebACLId: string;
  readonly HttpVersion: string;
  readonly IsIPV6Enabled: boolean;
}

interface DistributionConfigWithTags {
  readonly DistributionConfig: DistributionConfig;
  readonly Tags: Tags;
}

interface DistributionIdList {
  readonly Marker: string;
  readonly NextMarker: string;
  readonly MaxItems: number;
  readonly IsTruncated: boolean;
  readonly Quantity: number;
  readonly Items: [];
}

interface DistributionList {
  readonly Marker: string;
  readonly NextMarker: string;
  readonly MaxItems: number;
  readonly IsTruncated: boolean;
  readonly Quantity: number;
  readonly Items: [];
}

interface DistributionNotDisabled {
  readonly Message: string;
}

interface DistributionSummary {
  readonly Id: string;
  readonly ARN: string;
  readonly Status: string;
  readonly LastModifiedTime: Date;
  readonly DomainName: string;
  readonly Aliases: Aliases;
  readonly Origins: Origins;
  readonly OriginGroups: OriginGroups;
  readonly DefaultCacheBehavior: DefaultCacheBehavior;
  readonly CacheBehaviors: CacheBehaviors;
  readonly CustomErrorResponses: CustomErrorResponses;
  readonly Comment: string;
  readonly PriceClass: string;
  readonly Enabled: boolean;
  readonly ViewerCertificate: ViewerCertificate;
  readonly Restrictions: Restrictions;
  readonly WebACLId: string;
  readonly HttpVersion: string;
  readonly IsIPV6Enabled: boolean;
  readonly AliasICPRecordals: [];
}

interface EncryptionEntities {
  readonly Quantity: number;
  readonly Items: [];
}

interface EncryptionEntity {
  readonly PublicKeyId: string;
  readonly ProviderId: string;
  readonly FieldPatterns: FieldPatterns;
}

interface EndPoint {
  readonly StreamType: string;
  readonly KinesisStreamConfig: KinesisStreamConfig;
}

interface FieldLevelEncryption {
  readonly Id: string;
  readonly LastModifiedTime: Date;
  readonly FieldLevelEncryptionConfig: FieldLevelEncryptionConfig;
}

interface FieldLevelEncryptionConfig {
  readonly CallerReference: string;
  readonly Comment: string;
  readonly QueryArgProfileConfig: QueryArgProfileConfig;
  readonly ContentTypeProfileConfig: ContentTypeProfileConfig;
}

interface FieldLevelEncryptionConfigAlreadyExists {
  readonly Message: string;
}

interface FieldLevelEncryptionConfigInUse {
  readonly Message: string;
}

interface FieldLevelEncryptionList {
  readonly NextMarker: string;
  readonly MaxItems: number;
  readonly Quantity: number;
  readonly Items: [];
}

interface FieldLevelEncryptionProfile {
  readonly Id: string;
  readonly LastModifiedTime: Date;
  readonly FieldLevelEncryptionProfileConfig: FieldLevelEncryptionProfileConfig;
}

interface FieldLevelEncryptionProfileAlreadyExists {
  readonly Message: string;
}

interface FieldLevelEncryptionProfileConfig {
  readonly Name: string;
  readonly CallerReference: string;
  readonly Comment: string;
  readonly EncryptionEntities: EncryptionEntities;
}

interface FieldLevelEncryptionProfileInUse {
  readonly Message: string;
}

interface FieldLevelEncryptionProfileList {
  readonly NextMarker: string;
  readonly MaxItems: number;
  readonly Quantity: number;
  readonly Items: [];
}

interface FieldLevelEncryptionProfileSizeExceeded {
  readonly Message: string;
}

interface FieldLevelEncryptionProfileSummary {
  readonly Id: string;
  readonly LastModifiedTime: Date;
  readonly Name: string;
  readonly EncryptionEntities: EncryptionEntities;
  readonly Comment: string;
}

interface FieldLevelEncryptionSummary {
  readonly Id: string;
  readonly LastModifiedTime: Date;
  readonly Comment: string;
  readonly QueryArgProfileConfig: QueryArgProfileConfig;
  readonly ContentTypeProfileConfig: ContentTypeProfileConfig;
}

interface FieldPatterns {
  readonly Quantity: number;
  readonly Items: [];
}

interface ForwardedValues {
  readonly QueryString: boolean;
  readonly Cookies: CookiePreference;
  readonly Headers: Headers;
  readonly QueryStringCacheKeys: QueryStringCacheKeys;
}

interface FunctionAlreadyExists {
  readonly Message: string;
}

interface FunctionAssociation {
  readonly FunctionARN: string;
  readonly EventType: string;
}

interface FunctionAssociations {
  readonly Quantity: number;
  readonly Items: [];
}

interface FunctionConfig {
  readonly Comment: string;
  readonly Runtime: string;
}

interface FunctionInUse {
  readonly Message: string;
}

interface FunctionList {
  readonly NextMarker: string;
  readonly MaxItems: number;
  readonly Quantity: number;
  readonly Items: [];
}

interface FunctionMetadata {
  readonly FunctionARN: string;
  readonly Stage: string;
  readonly CreatedTime: Date;
  readonly LastModifiedTime: Date;
}

interface FunctionSizeLimitExceeded {
  readonly Message: string;
}

interface FunctionSummary {
  readonly Name: string;
  readonly Status: string;
  readonly FunctionConfig: FunctionConfig;
  readonly FunctionMetadata: FunctionMetadata;
}

interface GeoRestriction {
  readonly RestrictionType: string;
  readonly Quantity: number;
  readonly Items: [];
}

interface GetCachePolicyConfigRequest {
  readonly Id: string;
}

interface GetCachePolicyConfigResult {
  readonly CachePolicyConfig: CachePolicyConfig;
  readonly ETag: string;
}

interface GetCachePolicyRequest {
  readonly Id: string;
}

interface GetCachePolicyResult {
  readonly CachePolicy: CachePolicy;
  readonly ETag: string;
}

interface GetCloudFrontOriginAccessIdentityConfigRequest {
  readonly Id: string;
}

interface GetCloudFrontOriginAccessIdentityConfigResult {
  readonly CloudFrontOriginAccessIdentityConfig: CloudFrontOriginAccessIdentityConfig;
  readonly ETag: string;
}

interface GetCloudFrontOriginAccessIdentityRequest {
  readonly Id: string;
}

interface GetCloudFrontOriginAccessIdentityResult {
  readonly CloudFrontOriginAccessIdentity: CloudFrontOriginAccessIdentity;
  readonly ETag: string;
}

interface GetDistributionConfigRequest {
  readonly Id: string;
}

interface GetDistributionConfigResult {
  readonly DistributionConfig: DistributionConfig;
  readonly ETag: string;
}

interface GetDistributionRequest {
  readonly Id: string;
}

interface GetDistributionResult {
  readonly Distribution: Distribution;
  readonly ETag: string;
}

interface GetFieldLevelEncryptionConfigRequest {
  readonly Id: string;
}

interface GetFieldLevelEncryptionConfigResult {
  readonly FieldLevelEncryptionConfig: FieldLevelEncryptionConfig;
  readonly ETag: string;
}

interface GetFieldLevelEncryptionProfileConfigRequest {
  readonly Id: string;
}

interface GetFieldLevelEncryptionProfileConfigResult {
  readonly FieldLevelEncryptionProfileConfig: FieldLevelEncryptionProfileConfig;
  readonly ETag: string;
}

interface GetFieldLevelEncryptionProfileRequest {
  readonly Id: string;
}

interface GetFieldLevelEncryptionProfileResult {
  readonly FieldLevelEncryptionProfile: FieldLevelEncryptionProfile;
  readonly ETag: string;
}

interface GetFieldLevelEncryptionRequest {
  readonly Id: string;
}

interface GetFieldLevelEncryptionResult {
  readonly FieldLevelEncryption: FieldLevelEncryption;
  readonly ETag: string;
}

interface GetFunctionRequest {
  readonly Name: string;
  readonly Stage: string;
}

interface GetFunctionResult {
  readonly FunctionCode: unknown;
  readonly ETag: string;
  readonly ContentType: string;
}

interface GetInvalidationRequest {
  readonly DistributionId: string;
  readonly Id: string;
}

interface GetInvalidationResult {
  readonly Invalidation: Invalidation;
}

interface GetKeyGroupConfigRequest {
  readonly Id: string;
}

interface GetKeyGroupConfigResult {
  readonly KeyGroupConfig: KeyGroupConfig;
  readonly ETag: string;
}

interface GetKeyGroupRequest {
  readonly Id: string;
}

interface GetKeyGroupResult {
  readonly KeyGroup: KeyGroup;
  readonly ETag: string;
}

interface GetMonitoringSubscriptionRequest {
  readonly DistributionId: string;
}

interface GetMonitoringSubscriptionResult {
  readonly MonitoringSubscription: MonitoringSubscription;
}

interface GetOriginRequestPolicyConfigRequest {
  readonly Id: string;
}

interface GetOriginRequestPolicyConfigResult {
  readonly OriginRequestPolicyConfig: OriginRequestPolicyConfig;
  readonly ETag: string;
}

interface GetOriginRequestPolicyRequest {
  readonly Id: string;
}

interface GetOriginRequestPolicyResult {
  readonly OriginRequestPolicy: OriginRequestPolicy;
  readonly ETag: string;
}

interface GetPublicKeyConfigRequest {
  readonly Id: string;
}

interface GetPublicKeyConfigResult {
  readonly PublicKeyConfig: PublicKeyConfig;
  readonly ETag: string;
}

interface GetPublicKeyRequest {
  readonly Id: string;
}

interface GetPublicKeyResult {
  readonly PublicKey: PublicKey;
  readonly ETag: string;
}

interface GetRealtimeLogConfigRequest {
  readonly Name: string;
  readonly ARN: string;
}

interface GetRealtimeLogConfigResult {
  readonly RealtimeLogConfig: RealtimeLogConfig;
}

interface GetResponseHeadersPolicyConfigRequest {
  readonly Id: string;
}

interface GetResponseHeadersPolicyConfigResult {
  readonly ResponseHeadersPolicyConfig: ResponseHeadersPolicyConfig;
  readonly ETag: string;
}

interface GetResponseHeadersPolicyRequest {
  readonly Id: string;
}

interface GetResponseHeadersPolicyResult {
  readonly ResponseHeadersPolicy: ResponseHeadersPolicy;
  readonly ETag: string;
}

interface GetStreamingDistributionConfigRequest {
  readonly Id: string;
}

interface GetStreamingDistributionConfigResult {
  readonly StreamingDistributionConfig: StreamingDistributionConfig;
  readonly ETag: string;
}

interface GetStreamingDistributionRequest {
  readonly Id: string;
}

interface GetStreamingDistributionResult {
  readonly StreamingDistribution: StreamingDistribution;
  readonly ETag: string;
}

interface Headers {
  readonly Quantity: number;
  readonly Items: [];
}

interface IllegalDelete {
  readonly Message: string;
}

interface IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior {
  readonly Message: string;
}

interface IllegalUpdate {
  readonly Message: string;
}

interface InconsistentQuantities {
  readonly Message: string;
}

interface InvalidArgument {
  readonly Message: string;
}

interface InvalidDefaultRootObject {
  readonly Message: string;
}

interface InvalidErrorCode {
  readonly Message: string;
}

interface InvalidForwardCookies {
  readonly Message: string;
}

interface InvalidFunctionAssociation {
  readonly Message: string;
}

interface InvalidGeoRestrictionParameter {
  readonly Message: string;
}

interface InvalidHeadersForS3Origin {
  readonly Message: string;
}

interface InvalidIfMatchVersion {
  readonly Message: string;
}

interface InvalidLambdaFunctionAssociation {
  readonly Message: string;
}

interface InvalidLocationCode {
  readonly Message: string;
}

interface InvalidMinimumProtocolVersion {
  readonly Message: string;
}

interface InvalidOrigin {
  readonly Message: string;
}

interface InvalidOriginAccessIdentity {
  readonly Message: string;
}

interface InvalidOriginKeepaliveTimeout {
  readonly Message: string;
}

interface InvalidOriginReadTimeout {
  readonly Message: string;
}

interface InvalidProtocolSettings {
  readonly Message: string;
}

interface InvalidQueryStringParameters {
  readonly Message: string;
}

interface InvalidRelativePath {
  readonly Message: string;
}

interface InvalidRequiredProtocol {
  readonly Message: string;
}

interface InvalidResponseCode {
  readonly Message: string;
}

interface InvalidTTLOrder {
  readonly Message: string;
}

interface InvalidTagging {
  readonly Message: string;
}

interface InvalidViewerCertificate {
  readonly Message: string;
}

interface InvalidWebACLId {
  readonly Message: string;
}

interface Invalidation {
  readonly Id: string;
  readonly Status: string;
  readonly CreateTime: Date;
  readonly InvalidationBatch: InvalidationBatch;
}

interface InvalidationBatch {
  readonly Paths: Paths;
  readonly CallerReference: string;
}

interface InvalidationList {
  readonly Marker: string;
  readonly NextMarker: string;
  readonly MaxItems: number;
  readonly IsTruncated: boolean;
  readonly Quantity: number;
  readonly Items: [];
}

interface InvalidationSummary {
  readonly Id: string;
  readonly CreateTime: Date;
  readonly Status: string;
}

interface KGKeyPairIds {
  readonly KeyGroupId: string;
  readonly KeyPairIds: KeyPairIds;
}

interface KeyGroup {
  readonly Id: string;
  readonly LastModifiedTime: Date;
  readonly KeyGroupConfig: KeyGroupConfig;
}

interface KeyGroupAlreadyExists {
  readonly Message: string;
}

interface KeyGroupConfig {
  readonly Name: string;
  readonly Items: [];
  readonly Comment: string;
}

interface KeyGroupList {
  readonly NextMarker: string;
  readonly MaxItems: number;
  readonly Quantity: number;
  readonly Items: [];
}

interface KeyGroupSummary {
  readonly KeyGroup: KeyGroup;
}

interface KeyPairIds {
  readonly Quantity: number;
  readonly Items: [];
}

interface KinesisStreamConfig {
  readonly RoleARN: string;
  readonly StreamARN: string;
}

interface LambdaFunctionAssociation {
  readonly LambdaFunctionARN: string;
  readonly EventType: string;
  readonly IncludeBody: boolean;
}

interface LambdaFunctionAssociations {
  readonly Quantity: number;
  readonly Items: [];
}

interface ListCachePoliciesRequest {
  readonly Type: string;
  readonly Marker: string;
  readonly MaxItems: string;
}

interface ListCachePoliciesResult {
  readonly CachePolicyList: CachePolicyList;
}

interface ListCloudFrontOriginAccessIdentitiesRequest {
  readonly Marker: string;
  readonly MaxItems: string;
}

interface ListCloudFrontOriginAccessIdentitiesResult {
  readonly CloudFrontOriginAccessIdentityList: CloudFrontOriginAccessIdentityList;
}

interface ListConflictingAliasesRequest {
  readonly DistributionId: string;
  readonly Alias: string;
  readonly Marker: string;
  readonly MaxItems: number;
}

interface ListConflictingAliasesResult {
  readonly ConflictingAliasesList: ConflictingAliasesList;
}

interface ListDistributionsByCachePolicyIdRequest {
  readonly Marker: string;
  readonly MaxItems: string;
  readonly CachePolicyId: string;
}

interface ListDistributionsByCachePolicyIdResult {
  readonly DistributionIdList: DistributionIdList;
}

interface ListDistributionsByKeyGroupRequest {
  readonly Marker: string;
  readonly MaxItems: string;
  readonly KeyGroupId: string;
}

interface ListDistributionsByKeyGroupResult {
  readonly DistributionIdList: DistributionIdList;
}

interface ListDistributionsByOriginRequestPolicyIdRequest {
  readonly Marker: string;
  readonly MaxItems: string;
  readonly OriginRequestPolicyId: string;
}

interface ListDistributionsByOriginRequestPolicyIdResult {
  readonly DistributionIdList: DistributionIdList;
}

interface ListDistributionsByRealtimeLogConfigRequest {
  readonly Marker: string;
  readonly MaxItems: string;
  readonly RealtimeLogConfigName: string;
  readonly RealtimeLogConfigArn: string;
}

interface ListDistributionsByRealtimeLogConfigResult {
  readonly DistributionList: DistributionList;
}

interface ListDistributionsByResponseHeadersPolicyIdRequest {
  readonly Marker: string;
  readonly MaxItems: string;
  readonly ResponseHeadersPolicyId: string;
}

interface ListDistributionsByResponseHeadersPolicyIdResult {
  readonly DistributionIdList: DistributionIdList;
}

interface ListDistributionsByWebACLIdRequest {
  readonly Marker: string;
  readonly MaxItems: string;
  readonly WebACLId: string;
}

interface ListDistributionsByWebACLIdResult {
  readonly DistributionList: DistributionList;
}

interface ListDistributionsRequest {
  readonly Marker: string;
  readonly MaxItems: string;
}

interface ListDistributionsResult {
  readonly DistributionList: DistributionList;
}

interface ListFieldLevelEncryptionConfigsRequest {
  readonly Marker: string;
  readonly MaxItems: string;
}

interface ListFieldLevelEncryptionConfigsResult {
  readonly FieldLevelEncryptionList: FieldLevelEncryptionList;
}

interface ListFieldLevelEncryptionProfilesRequest {
  readonly Marker: string;
  readonly MaxItems: string;
}

interface ListFieldLevelEncryptionProfilesResult {
  readonly FieldLevelEncryptionProfileList: FieldLevelEncryptionProfileList;
}

interface ListFunctionsRequest {
  readonly Marker: string;
  readonly MaxItems: string;
  readonly Stage: string;
}

interface ListFunctionsResult {
  readonly FunctionList: FunctionList;
}

interface ListInvalidationsRequest {
  readonly DistributionId: string;
  readonly Marker: string;
  readonly MaxItems: string;
}

interface ListInvalidationsResult {
  readonly InvalidationList: InvalidationList;
}

interface ListKeyGroupsRequest {
  readonly Marker: string;
  readonly MaxItems: string;
}

interface ListKeyGroupsResult {
  readonly KeyGroupList: KeyGroupList;
}

interface ListOriginRequestPoliciesRequest {
  readonly Type: string;
  readonly Marker: string;
  readonly MaxItems: string;
}

interface ListOriginRequestPoliciesResult {
  readonly OriginRequestPolicyList: OriginRequestPolicyList;
}

interface ListPublicKeysRequest {
  readonly Marker: string;
  readonly MaxItems: string;
}

interface ListPublicKeysResult {
  readonly PublicKeyList: PublicKeyList;
}

interface ListRealtimeLogConfigsRequest {
  readonly MaxItems: string;
  readonly Marker: string;
}

interface ListRealtimeLogConfigsResult {
  readonly RealtimeLogConfigs: RealtimeLogConfigs;
}

interface ListResponseHeadersPoliciesRequest {
  readonly Type: string;
  readonly Marker: string;
  readonly MaxItems: string;
}

interface ListResponseHeadersPoliciesResult {
  readonly ResponseHeadersPolicyList: ResponseHeadersPolicyList;
}

interface ListStreamingDistributionsRequest {
  readonly Marker: string;
  readonly MaxItems: string;
}

interface ListStreamingDistributionsResult {
  readonly StreamingDistributionList: StreamingDistributionList;
}

interface ListTagsForResourceRequest {
  readonly Resource: string;
}

interface ListTagsForResourceResult {
  readonly Tags: Tags;
}

interface LoggingConfig {
  readonly Enabled: boolean;
  readonly IncludeCookies: boolean;
  readonly Bucket: string;
  readonly Prefix: string;
}

interface MissingBody {
  readonly Message: string;
}

interface MonitoringSubscription {
  readonly RealtimeMetricsSubscriptionConfig: RealtimeMetricsSubscriptionConfig;
}

interface NoSuchCachePolicy {
  readonly Message: string;
}

interface NoSuchCloudFrontOriginAccessIdentity {
  readonly Message: string;
}

interface NoSuchDistribution {
  readonly Message: string;
}

interface NoSuchFieldLevelEncryptionConfig {
  readonly Message: string;
}

interface NoSuchFieldLevelEncryptionProfile {
  readonly Message: string;
}

interface NoSuchFunctionExists {
  readonly Message: string;
}

interface NoSuchInvalidation {
  readonly Message: string;
}

interface NoSuchOrigin {
  readonly Message: string;
}

interface NoSuchOriginRequestPolicy {
  readonly Message: string;
}

interface NoSuchPublicKey {
  readonly Message: string;
}

interface NoSuchRealtimeLogConfig {
  readonly Message: string;
}

interface NoSuchResource {
  readonly Message: string;
}

interface NoSuchResponseHeadersPolicy {
  readonly Message: string;
}

interface NoSuchStreamingDistribution {
  readonly Message: string;
}

interface Origin {
  readonly Id: string;
  readonly DomainName: string;
  readonly OriginPath: string;
  readonly CustomHeaders: CustomHeaders;
  readonly S3OriginConfig: S3OriginConfig;
  readonly CustomOriginConfig: CustomOriginConfig;
  readonly ConnectionAttempts: number;
  readonly ConnectionTimeout: number;
  readonly OriginShield: OriginShield;
}

interface OriginCustomHeader {
  readonly HeaderName: string;
  readonly HeaderValue: string;
}

interface OriginGroup {
  readonly Id: string;
  readonly FailoverCriteria: OriginGroupFailoverCriteria;
  readonly Members: OriginGroupMembers;
}

interface OriginGroupFailoverCriteria {
  readonly StatusCodes: StatusCodes;
}

interface OriginGroupMember {
  readonly OriginId: string;
}

interface OriginGroupMembers {
  readonly Quantity: number;
  readonly Items: [];
}

interface OriginGroups {
  readonly Quantity: number;
  readonly Items: [];
}

interface OriginRequestPolicy {
  readonly Id: string;
  readonly LastModifiedTime: Date;
  readonly OriginRequestPolicyConfig: OriginRequestPolicyConfig;
}

interface OriginRequestPolicyAlreadyExists {
  readonly Message: string;
}

interface OriginRequestPolicyConfig {
  readonly Comment: string;
  readonly Name: string;
  readonly HeadersConfig: OriginRequestPolicyHeadersConfig;
  readonly CookiesConfig: OriginRequestPolicyCookiesConfig;
  readonly QueryStringsConfig: OriginRequestPolicyQueryStringsConfig;
}

interface OriginRequestPolicyCookiesConfig {
  readonly CookieBehavior: string;
  readonly Cookies: CookieNames;
}

interface OriginRequestPolicyHeadersConfig {
  readonly HeaderBehavior: string;
  readonly Headers: Headers;
}

interface OriginRequestPolicyInUse {
  readonly Message: string;
}

interface OriginRequestPolicyList {
  readonly NextMarker: string;
  readonly MaxItems: number;
  readonly Quantity: number;
  readonly Items: [];
}

interface OriginRequestPolicyQueryStringsConfig {
  readonly QueryStringBehavior: string;
  readonly QueryStrings: QueryStringNames;
}

interface OriginRequestPolicySummary {
  readonly Type: string;
  readonly OriginRequestPolicy: OriginRequestPolicy;
}

interface OriginShield {
  readonly Enabled: boolean;
  readonly OriginShieldRegion: string;
}

interface OriginSslProtocols {
  readonly Quantity: number;
  readonly Items: [];
}

interface Origins {
  readonly Quantity: number;
  readonly Items: [];
}

interface ParametersInCacheKeyAndForwardedToOrigin {
  readonly EnableAcceptEncodingGzip: boolean;
  readonly EnableAcceptEncodingBrotli: boolean;
  readonly HeadersConfig: CachePolicyHeadersConfig;
  readonly CookiesConfig: CachePolicyCookiesConfig;
  readonly QueryStringsConfig: CachePolicyQueryStringsConfig;
}

interface Paths {
  readonly Quantity: number;
  readonly Items: [];
}

interface PreconditionFailed {
  readonly Message: string;
}

interface PublicKey {
  readonly Id: string;
  readonly CreatedTime: Date;
  readonly PublicKeyConfig: PublicKeyConfig;
}

interface PublicKeyAlreadyExists {
  readonly Message: string;
}

interface PublicKeyConfig {
  readonly CallerReference: string;
  readonly Name: string;
  readonly EncodedKey: string;
  readonly Comment: string;
}

interface PublicKeyInUse {
  readonly Message: string;
}

interface PublicKeyList {
  readonly NextMarker: string;
  readonly MaxItems: number;
  readonly Quantity: number;
  readonly Items: [];
}

interface PublicKeySummary {
  readonly Id: string;
  readonly Name: string;
  readonly CreatedTime: Date;
  readonly EncodedKey: string;
  readonly Comment: string;
}

interface PublishFunctionRequest {
  readonly Name: string;
  readonly IfMatch: string;
}

interface PublishFunctionResult {
  readonly FunctionSummary: FunctionSummary;
}

interface QueryArgProfile {
  readonly QueryArg: string;
  readonly ProfileId: string;
}

interface QueryArgProfileConfig {
  readonly ForwardWhenQueryArgProfileIsUnknown: boolean;
  readonly QueryArgProfiles: QueryArgProfiles;
}

interface QueryArgProfileEmpty {
  readonly Message: string;
}

interface QueryArgProfiles {
  readonly Quantity: number;
  readonly Items: [];
}

interface QueryStringCacheKeys {
  readonly Quantity: number;
  readonly Items: [];
}

interface QueryStringNames {
  readonly Quantity: number;
  readonly Items: [];
}

interface RealtimeLogConfig {
  readonly ARN: string;
  readonly Name: string;
  readonly SamplingRate: number;
  readonly EndPoints: [];
  readonly Fields: [];
}

interface RealtimeLogConfigAlreadyExists {
  readonly Message: string;
}

interface RealtimeLogConfigInUse {
  readonly Message: string;
}

interface RealtimeLogConfigOwnerMismatch {
  readonly Message: string;
}

interface RealtimeLogConfigs {
  readonly MaxItems: number;
  readonly Items: [];
  readonly IsTruncated: boolean;
  readonly Marker: string;
  readonly NextMarker: string;
}

interface RealtimeMetricsSubscriptionConfig {
  readonly RealtimeMetricsSubscriptionStatus: string;
}

interface ResourceInUse {
  readonly Message: string;
}

interface ResponseHeadersPolicy {
  readonly Id: string;
  readonly LastModifiedTime: Date;
  readonly ResponseHeadersPolicyConfig: ResponseHeadersPolicyConfig;
}

interface ResponseHeadersPolicyAccessControlAllowHeaders {
  readonly Quantity: number;
  readonly Items: [];
}

interface ResponseHeadersPolicyAccessControlAllowMethods {
  readonly Quantity: number;
  readonly Items: [];
}

interface ResponseHeadersPolicyAccessControlAllowOrigins {
  readonly Quantity: number;
  readonly Items: [];
}

interface ResponseHeadersPolicyAccessControlExposeHeaders {
  readonly Quantity: number;
  readonly Items: [];
}

interface ResponseHeadersPolicyAlreadyExists {
  readonly Message: string;
}

interface ResponseHeadersPolicyConfig {
  readonly Comment: string;
  readonly Name: string;
  readonly CorsConfig: ResponseHeadersPolicyCorsConfig;
  readonly SecurityHeadersConfig: ResponseHeadersPolicySecurityHeadersConfig;
  readonly CustomHeadersConfig: ResponseHeadersPolicyCustomHeadersConfig;
}

interface ResponseHeadersPolicyContentSecurityPolicy {
  readonly Override: boolean;
  readonly ContentSecurityPolicy: string;
}

interface ResponseHeadersPolicyContentTypeOptions {
  readonly Override: boolean;
}

interface ResponseHeadersPolicyCorsConfig {
  readonly AccessControlAllowOrigins: ResponseHeadersPolicyAccessControlAllowOrigins;
  readonly AccessControlAllowHeaders: ResponseHeadersPolicyAccessControlAllowHeaders;
  readonly AccessControlAllowMethods: ResponseHeadersPolicyAccessControlAllowMethods;
  readonly AccessControlAllowCredentials: boolean;
  readonly AccessControlExposeHeaders: ResponseHeadersPolicyAccessControlExposeHeaders;
  readonly AccessControlMaxAgeSec: number;
  readonly OriginOverride: boolean;
}

interface ResponseHeadersPolicyCustomHeader {
  readonly Header: string;
  readonly Value: string;
  readonly Override: boolean;
}

interface ResponseHeadersPolicyCustomHeadersConfig {
  readonly Quantity: number;
  readonly Items: [];
}

interface ResponseHeadersPolicyFrameOptions {
  readonly Override: boolean;
  readonly FrameOption: string;
}

interface ResponseHeadersPolicyInUse {
  readonly Message: string;
}

interface ResponseHeadersPolicyList {
  readonly NextMarker: string;
  readonly MaxItems: number;
  readonly Quantity: number;
  readonly Items: [];
}

interface ResponseHeadersPolicyReferrerPolicy {
  readonly Override: boolean;
  readonly ReferrerPolicy: string;
}

interface ResponseHeadersPolicySecurityHeadersConfig {
  readonly XSSProtection: ResponseHeadersPolicyXSSProtection;
  readonly FrameOptions: ResponseHeadersPolicyFrameOptions;
  readonly ReferrerPolicy: ResponseHeadersPolicyReferrerPolicy;
  readonly ContentSecurityPolicy: ResponseHeadersPolicyContentSecurityPolicy;
  readonly ContentTypeOptions: ResponseHeadersPolicyContentTypeOptions;
  readonly StrictTransportSecurity: ResponseHeadersPolicyStrictTransportSecurity;
}

interface ResponseHeadersPolicyStrictTransportSecurity {
  readonly Override: boolean;
  readonly IncludeSubdomains: boolean;
  readonly Preload: boolean;
  readonly AccessControlMaxAgeSec: number;
}

interface ResponseHeadersPolicySummary {
  readonly Type: string;
  readonly ResponseHeadersPolicy: ResponseHeadersPolicy;
}

interface ResponseHeadersPolicyXSSProtection {
  readonly Override: boolean;
  readonly Protection: boolean;
  readonly ModeBlock: boolean;
  readonly ReportUri: string;
}

interface Restrictions {
  readonly GeoRestriction: GeoRestriction;
}

interface S3Origin {
  readonly DomainName: string;
  readonly OriginAccessIdentity: string;
}

interface S3OriginConfig {
  readonly OriginAccessIdentity: string;
}

interface Signer {
  readonly AwsAccountNumber: string;
  readonly KeyPairIds: KeyPairIds;
}

interface StatusCodes {
  readonly Quantity: number;
  readonly Items: [];
}

interface StreamingDistribution {
  readonly Id: string;
  readonly ARN: string;
  readonly Status: string;
  readonly LastModifiedTime: Date;
  readonly DomainName: string;
  readonly ActiveTrustedSigners: ActiveTrustedSigners;
  readonly StreamingDistributionConfig: StreamingDistributionConfig;
}

interface StreamingDistributionAlreadyExists {
  readonly Message: string;
}

interface StreamingDistributionConfig {
  readonly CallerReference: string;
  readonly S3Origin: S3Origin;
  readonly Aliases: Aliases;
  readonly Comment: string;
  readonly Logging: StreamingLoggingConfig;
  readonly TrustedSigners: TrustedSigners;
  readonly PriceClass: string;
  readonly Enabled: boolean;
}

interface StreamingDistributionConfigWithTags {
  readonly StreamingDistributionConfig: StreamingDistributionConfig;
  readonly Tags: Tags;
}

interface StreamingDistributionList {
  readonly Marker: string;
  readonly NextMarker: string;
  readonly MaxItems: number;
  readonly IsTruncated: boolean;
  readonly Quantity: number;
  readonly Items: [];
}

interface StreamingDistributionNotDisabled {
  readonly Message: string;
}

interface StreamingDistributionSummary {
  readonly Id: string;
  readonly ARN: string;
  readonly Status: string;
  readonly LastModifiedTime: Date;
  readonly DomainName: string;
  readonly S3Origin: S3Origin;
  readonly Aliases: Aliases;
  readonly TrustedSigners: TrustedSigners;
  readonly Comment: string;
  readonly PriceClass: string;
  readonly Enabled: boolean;
}

interface StreamingLoggingConfig {
  readonly Enabled: boolean;
  readonly Bucket: string;
  readonly Prefix: string;
}

interface Tag {
  readonly Key: string;
  readonly Value: string;
}

interface TagKeys {
  readonly Items: [];
}

interface TagResourceRequest {
  readonly Resource: string;
  readonly Tags: Tags;
}

interface Tags {
  readonly Items: [];
}

interface TestFunctionFailed {
  readonly Message: string;
}

interface TestFunctionRequest {
  readonly Name: string;
  readonly IfMatch: string;
  readonly Stage: string;
  readonly EventObject: unknown;
}

interface TestFunctionResult {
  readonly TestResult: TestResult;
}

interface TestResult {
  readonly FunctionSummary: FunctionSummary;
  readonly ComputeUtilization: string;
  readonly FunctionExecutionLogs: [];
  readonly FunctionErrorMessage: string;
  readonly FunctionOutput: string;
}

interface TooManyCacheBehaviors {
  readonly Message: string;
}

interface TooManyCachePolicies {
  readonly Message: string;
}

interface TooManyCertificates {
  readonly Message: string;
}

interface TooManyCloudFrontOriginAccessIdentities {
  readonly Message: string;
}

interface TooManyCookieNamesInWhiteList {
  readonly Message: string;
}

interface TooManyCookiesInCachePolicy {
  readonly Message: string;
}

interface TooManyCookiesInOriginRequestPolicy {
  readonly Message: string;
}

interface TooManyCustomHeadersInResponseHeadersPolicy {
  readonly Message: string;
}

interface TooManyDistributionCNAMEs {
  readonly Message: string;
}

interface TooManyDistributions {
  readonly Message: string;
}

interface TooManyDistributionsAssociatedToCachePolicy {
  readonly Message: string;
}

interface TooManyDistributionsAssociatedToFieldLevelEncryptionConfig {
  readonly Message: string;
}

interface TooManyDistributionsAssociatedToKeyGroup {
  readonly Message: string;
}

interface TooManyDistributionsAssociatedToOriginRequestPolicy {
  readonly Message: string;
}

interface TooManyDistributionsAssociatedToResponseHeadersPolicy {
  readonly Message: string;
}

interface TooManyDistributionsWithFunctionAssociations {
  readonly Message: string;
}

interface TooManyDistributionsWithLambdaAssociations {
  readonly Message: string;
}

interface TooManyDistributionsWithSingleFunctionARN {
  readonly Message: string;
}

interface TooManyFieldLevelEncryptionConfigs {
  readonly Message: string;
}

interface TooManyFieldLevelEncryptionContentTypeProfiles {
  readonly Message: string;
}

interface TooManyFieldLevelEncryptionEncryptionEntities {
  readonly Message: string;
}

interface TooManyFieldLevelEncryptionFieldPatterns {
  readonly Message: string;
}

interface TooManyFieldLevelEncryptionProfiles {
  readonly Message: string;
}

interface TooManyFieldLevelEncryptionQueryArgProfiles {
  readonly Message: string;
}

interface TooManyFunctionAssociations {
  readonly Message: string;
}

interface TooManyFunctions {
  readonly Message: string;
}

interface TooManyHeadersInCachePolicy {
  readonly Message: string;
}

interface TooManyHeadersInForwardedValues {
  readonly Message: string;
}

interface TooManyHeadersInOriginRequestPolicy {
  readonly Message: string;
}

interface TooManyInvalidationsInProgress {
  readonly Message: string;
}

interface TooManyKeyGroups {
  readonly Message: string;
}

interface TooManyKeyGroupsAssociatedToDistribution {
  readonly Message: string;
}

interface TooManyLambdaFunctionAssociations {
  readonly Message: string;
}

interface TooManyOriginCustomHeaders {
  readonly Message: string;
}

interface TooManyOriginGroupsPerDistribution {
  readonly Message: string;
}

interface TooManyOriginRequestPolicies {
  readonly Message: string;
}

interface TooManyOrigins {
  readonly Message: string;
}

interface TooManyPublicKeys {
  readonly Message: string;
}

interface TooManyPublicKeysInKeyGroup {
  readonly Message: string;
}

interface TooManyQueryStringParameters {
  readonly Message: string;
}

interface TooManyQueryStringsInCachePolicy {
  readonly Message: string;
}

interface TooManyQueryStringsInOriginRequestPolicy {
  readonly Message: string;
}

interface TooManyRealtimeLogConfigs {
  readonly Message: string;
}

interface TooManyResponseHeadersPolicies {
  readonly Message: string;
}

interface TooManyStreamingDistributionCNAMEs {
  readonly Message: string;
}

interface TooManyStreamingDistributions {
  readonly Message: string;
}

interface TooManyTrustedSigners {
  readonly Message: string;
}

interface TrustedKeyGroupDoesNotExist {
  readonly Message: string;
}

interface TrustedKeyGroups {
  readonly Enabled: boolean;
  readonly Quantity: number;
  readonly Items: [];
}

interface TrustedSignerDoesNotExist {
  readonly Message: string;
}

interface TrustedSigners {
  readonly Enabled: boolean;
  readonly Quantity: number;
  readonly Items: [];
}

interface UnsupportedOperation {
  readonly Message: string;
}

interface UntagResourceRequest {
  readonly Resource: string;
  readonly TagKeys: TagKeys;
}

interface UpdateCachePolicyRequest {
  readonly CachePolicyConfig: CachePolicyConfig;
  readonly Id: string;
  readonly IfMatch: string;
}

interface UpdateCachePolicyResult {
  readonly CachePolicy: CachePolicy;
  readonly ETag: string;
}

interface UpdateCloudFrontOriginAccessIdentityRequest {
  readonly CloudFrontOriginAccessIdentityConfig: CloudFrontOriginAccessIdentityConfig;
  readonly Id: string;
  readonly IfMatch: string;
}

interface UpdateCloudFrontOriginAccessIdentityResult {
  readonly CloudFrontOriginAccessIdentity: CloudFrontOriginAccessIdentity;
  readonly ETag: string;
}

interface UpdateDistributionRequest {
  readonly DistributionConfig: DistributionConfig;
  readonly Id: string;
  readonly IfMatch: string;
}

interface UpdateDistributionResult {
  readonly Distribution: Distribution;
  readonly ETag: string;
}

interface UpdateFieldLevelEncryptionConfigRequest {
  readonly FieldLevelEncryptionConfig: FieldLevelEncryptionConfig;
  readonly Id: string;
  readonly IfMatch: string;
}

interface UpdateFieldLevelEncryptionConfigResult {
  readonly FieldLevelEncryption: FieldLevelEncryption;
  readonly ETag: string;
}

interface UpdateFieldLevelEncryptionProfileRequest {
  readonly FieldLevelEncryptionProfileConfig: FieldLevelEncryptionProfileConfig;
  readonly Id: string;
  readonly IfMatch: string;
}

interface UpdateFieldLevelEncryptionProfileResult {
  readonly FieldLevelEncryptionProfile: FieldLevelEncryptionProfile;
  readonly ETag: string;
}

interface UpdateFunctionRequest {
  readonly Name: string;
  readonly IfMatch: string;
  readonly FunctionConfig: FunctionConfig;
  readonly FunctionCode: unknown;
}

interface UpdateFunctionResult {
  readonly FunctionSummary: FunctionSummary;
  readonly ETag: string;
}

interface UpdateKeyGroupRequest {
  readonly KeyGroupConfig: KeyGroupConfig;
  readonly Id: string;
  readonly IfMatch: string;
}

interface UpdateKeyGroupResult {
  readonly KeyGroup: KeyGroup;
  readonly ETag: string;
}

interface UpdateOriginRequestPolicyRequest {
  readonly OriginRequestPolicyConfig: OriginRequestPolicyConfig;
  readonly Id: string;
  readonly IfMatch: string;
}

interface UpdateOriginRequestPolicyResult {
  readonly OriginRequestPolicy: OriginRequestPolicy;
  readonly ETag: string;
}

interface UpdatePublicKeyRequest {
  readonly PublicKeyConfig: PublicKeyConfig;
  readonly Id: string;
  readonly IfMatch: string;
}

interface UpdatePublicKeyResult {
  readonly PublicKey: PublicKey;
  readonly ETag: string;
}

interface UpdateRealtimeLogConfigRequest {
  readonly EndPoints: [];
  readonly Fields: [];
  readonly Name: string;
  readonly ARN: string;
  readonly SamplingRate: number;
}

interface UpdateRealtimeLogConfigResult {
  readonly RealtimeLogConfig: RealtimeLogConfig;
}

interface UpdateResponseHeadersPolicyRequest {
  readonly ResponseHeadersPolicyConfig: ResponseHeadersPolicyConfig;
  readonly Id: string;
  readonly IfMatch: string;
}

interface UpdateResponseHeadersPolicyResult {
  readonly ResponseHeadersPolicy: ResponseHeadersPolicy;
  readonly ETag: string;
}

interface UpdateStreamingDistributionRequest {
  readonly StreamingDistributionConfig: StreamingDistributionConfig;
  readonly Id: string;
  readonly IfMatch: string;
}

interface UpdateStreamingDistributionResult {
  readonly StreamingDistribution: StreamingDistribution;
  readonly ETag: string;
}

interface ViewerCertificate {
  readonly CloudFrontDefaultCertificate: boolean;
  readonly IAMCertificateId: string;
  readonly ACMCertificateArn: string;
  readonly SSLSupportMethod: string;
  readonly MinimumProtocolVersion: string;
  readonly Certificate: string;
  readonly CertificateSource: string;
}

