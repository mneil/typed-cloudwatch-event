/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AcceptPage {
  readonly PageId: string;
  readonly ContactChannelId: string;
  readonly AcceptType: string;
  readonly Note: string;
  readonly AcceptCode: string;
  readonly AcceptCodeValidation: string;
}
export interface ActivateContactChannel {
  readonly ContactChannelId: string;
  readonly ActivationCode: string;
}
export interface CreateContact {
  readonly Alias: string;
  readonly DisplayName: string;
  readonly Type: string;
  readonly Plan: Plan;
  readonly Tags: [];
  readonly IdempotencyToken: string;
}
export interface CreateContactChannel {
  readonly ContactId: string;
  readonly Name: string;
  readonly Type: string;
  readonly DeliveryAddress: ContactChannelAddress;
  readonly DeferActivation: boolean;
  readonly IdempotencyToken: string;
}
export interface DeactivateContactChannel {
  readonly ContactChannelId: string;
}
export interface DeleteContact {
  readonly ContactId: string;
}
export interface DeleteContactChannel {
  readonly ContactChannelId: string;
}
export interface DescribeEngagement {
  readonly EngagementId: string;
}
export interface DescribePage {
  readonly PageId: string;
}
export interface GetContact {
  readonly ContactId: string;
}
export interface GetContactChannel {
  readonly ContactChannelId: string;
}
export interface GetContactPolicy {
  readonly ContactArn: string;
}
export interface ListContactChannels {
  readonly ContactId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListContacts {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly AliasPrefix: string;
  readonly Type: string;
}
export interface ListEngagements {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly IncidentId: string;
  readonly TimeRangeValue: TimeRange;
}
export interface ListPageReceipts {
  readonly PageId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListPagesByContact {
  readonly ContactId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListPagesByEngagement {
  readonly EngagementId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListTagsForResource {
  readonly ResourceARN: string;
}
export interface PutContactPolicy {
  readonly ContactArn: string;
  readonly Policy: string;
}
export interface SendActivationCode {
  readonly ContactChannelId: string;
}
export interface StartEngagement {
  readonly ContactId: string;
  readonly Sender: string;
  readonly Subject: string;
  readonly Content: string;
  readonly PublicSubject: string;
  readonly PublicContent: string;
  readonly IncidentId: string;
  readonly IdempotencyToken: string;
}
export interface StopEngagement {
  readonly EngagementId: string;
  readonly Reason: string;
}
export interface TagResource {
  readonly ResourceARN: string;
  readonly Tags: [];
}
export interface UntagResource {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}
export interface UpdateContact {
  readonly ContactId: string;
  readonly DisplayName: string;
  readonly Plan: Plan;
}
export interface UpdateContactChannel {
  readonly ContactChannelId: string;
  readonly Name: string;
  readonly DeliveryAddress: ContactChannelAddress;
}



interface AcceptPageRequest {
  readonly PageId: string;
  readonly ContactChannelId: string;
  readonly AcceptType: string;
  readonly Note: string;
  readonly AcceptCode: string;
  readonly AcceptCodeValidation: string;
}

interface AcceptPageResult {
}

interface AccessDeniedException {
  readonly Message: string;
}

interface ActivateContactChannelRequest {
  readonly ContactChannelId: string;
  readonly ActivationCode: string;
}

interface ActivateContactChannelResult {
}

interface ChannelTargetInfo {
  readonly ContactChannelId: string;
  readonly RetryIntervalInMinutes: number;
}

interface ConflictException {
  readonly Message: string;
  readonly ResourceId: string;
  readonly ResourceType: string;
}

interface Contact {
  readonly ContactArn: string;
  readonly Alias: string;
  readonly DisplayName: string;
  readonly Type: string;
}

interface ContactChannel {
  readonly ContactChannelArn: string;
  readonly ContactArn: string;
  readonly Name: string;
  readonly Type: string;
  readonly DeliveryAddress: ContactChannelAddress;
  readonly ActivationStatus: string;
}

interface ContactChannelAddress {
  readonly SimpleAddress: string;
}

interface ContactTargetInfo {
  readonly ContactId: string;
  readonly IsEssential: boolean;
}

interface CreateContactChannelRequest {
  readonly ContactId: string;
  readonly Name: string;
  readonly Type: string;
  readonly DeliveryAddress: ContactChannelAddress;
  readonly DeferActivation: boolean;
  readonly IdempotencyToken: string;
}

interface CreateContactChannelResult {
  readonly ContactChannelArn: string;
}

interface CreateContactRequest {
  readonly Alias: string;
  readonly DisplayName: string;
  readonly Type: string;
  readonly Plan: Plan;
  readonly Tags: [];
  readonly IdempotencyToken: string;
}

interface CreateContactResult {
  readonly ContactArn: string;
}

interface DataEncryptionException {
  readonly Message: string;
}

interface DeactivateContactChannelRequest {
  readonly ContactChannelId: string;
}

interface DeactivateContactChannelResult {
}

interface DeleteContactChannelRequest {
  readonly ContactChannelId: string;
}

interface DeleteContactChannelResult {
}

interface DeleteContactRequest {
  readonly ContactId: string;
}

interface DeleteContactResult {
}

interface DescribeEngagementRequest {
  readonly EngagementId: string;
}

interface DescribeEngagementResult {
  readonly ContactArn: string;
  readonly EngagementArn: string;
  readonly Sender: string;
  readonly Subject: string;
  readonly Content: string;
  readonly PublicSubject: string;
  readonly PublicContent: string;
  readonly IncidentId: string;
  readonly StartTime: Date;
  readonly StopTime: Date;
}

interface DescribePageRequest {
  readonly PageId: string;
}

interface DescribePageResult {
  readonly PageArn: string;
  readonly EngagementArn: string;
  readonly ContactArn: string;
  readonly Sender: string;
  readonly Subject: string;
  readonly Content: string;
  readonly PublicSubject: string;
  readonly PublicContent: string;
  readonly IncidentId: string;
  readonly SentTime: Date;
  readonly ReadTime: Date;
  readonly DeliveryTime: Date;
}

interface Engagement {
  readonly EngagementArn: string;
  readonly ContactArn: string;
  readonly Sender: string;
  readonly IncidentId: string;
  readonly StartTime: Date;
  readonly StopTime: Date;
}

interface GetContactChannelRequest {
  readonly ContactChannelId: string;
}

interface GetContactChannelResult {
  readonly ContactArn: string;
  readonly ContactChannelArn: string;
  readonly Name: string;
  readonly Type: string;
  readonly DeliveryAddress: ContactChannelAddress;
  readonly ActivationStatus: string;
}

interface GetContactPolicyRequest {
  readonly ContactArn: string;
}

interface GetContactPolicyResult {
  readonly ContactArn: string;
  readonly Policy: string;
}

interface GetContactRequest {
  readonly ContactId: string;
}

interface GetContactResult {
  readonly ContactArn: string;
  readonly Alias: string;
  readonly DisplayName: string;
  readonly Type: string;
  readonly Plan: Plan;
}

interface InternalServerException {
  readonly Message: string;
  readonly RetryAfterSeconds: number;
}

interface ListContactChannelsRequest {
  readonly ContactId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListContactChannelsResult {
  readonly NextToken: string;
  readonly ContactChannels: [];
}

interface ListContactsRequest {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly AliasPrefix: string;
  readonly Type: string;
}

interface ListContactsResult {
  readonly NextToken: string;
  readonly Contacts: [];
}

interface ListEngagementsRequest {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly IncidentId: string;
  readonly TimeRangeValue: TimeRange;
}

interface ListEngagementsResult {
  readonly NextToken: string;
  readonly Engagements: [];
}

interface ListPageReceiptsRequest {
  readonly PageId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListPageReceiptsResult {
  readonly NextToken: string;
  readonly Receipts: [];
}

interface ListPagesByContactRequest {
  readonly ContactId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListPagesByContactResult {
  readonly NextToken: string;
  readonly Pages: [];
}

interface ListPagesByEngagementRequest {
  readonly EngagementId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListPagesByEngagementResult {
  readonly NextToken: string;
  readonly Pages: [];
}

interface ListTagsForResourceRequest {
  readonly ResourceARN: string;
}

interface ListTagsForResourceResult {
  readonly Tags: [];
}

interface Page {
  readonly PageArn: string;
  readonly EngagementArn: string;
  readonly ContactArn: string;
  readonly Sender: string;
  readonly IncidentId: string;
  readonly SentTime: Date;
  readonly DeliveryTime: Date;
  readonly ReadTime: Date;
}

interface Plan {
  readonly Stages: [];
}

interface PutContactPolicyRequest {
  readonly ContactArn: string;
  readonly Policy: string;
}

interface PutContactPolicyResult {
}

interface Receipt {
  readonly ContactChannelArn: string;
  readonly ReceiptType: string;
  readonly ReceiptInfo: string;
  readonly ReceiptTime: Date;
}

interface ResourceNotFoundException {
  readonly Message: string;
  readonly ResourceId: string;
  readonly ResourceType: string;
}

interface SendActivationCodeRequest {
  readonly ContactChannelId: string;
}

interface SendActivationCodeResult {
}

interface ServiceQuotaExceededException {
  readonly Message: string;
  readonly ResourceId: string;
  readonly ResourceType: string;
  readonly QuotaCode: string;
  readonly ServiceCode: string;
}

interface Stage {
  readonly DurationInMinutes: number;
  readonly Targets: [];
}

interface StartEngagementRequest {
  readonly ContactId: string;
  readonly Sender: string;
  readonly Subject: string;
  readonly Content: string;
  readonly PublicSubject: string;
  readonly PublicContent: string;
  readonly IncidentId: string;
  readonly IdempotencyToken: string;
}

interface StartEngagementResult {
  readonly EngagementArn: string;
}

interface StopEngagementRequest {
  readonly EngagementId: string;
  readonly Reason: string;
}

interface StopEngagementResult {
}

interface Tag {
  readonly Key: string;
  readonly Value: string;
}

interface TagResourceRequest {
  readonly ResourceARN: string;
  readonly Tags: [];
}

interface TagResourceResult {
}

interface Target {
  readonly ChannelTargetInfo: ChannelTargetInfo;
  readonly ContactTargetInfo: ContactTargetInfo;
}

interface ThrottlingException {
  readonly Message: string;
  readonly QuotaCode: string;
  readonly ServiceCode: string;
  readonly RetryAfterSeconds: number;
}

interface TimeRange {
  readonly StartTime: Date;
  readonly EndTime: Date;
}

interface UntagResourceRequest {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}

interface UntagResourceResult {
}

interface UpdateContactChannelRequest {
  readonly ContactChannelId: string;
  readonly Name: string;
  readonly DeliveryAddress: ContactChannelAddress;
}

interface UpdateContactChannelResult {
}

interface UpdateContactRequest {
  readonly ContactId: string;
  readonly DisplayName: string;
  readonly Plan: Plan;
}

interface UpdateContactResult {
}

interface ValidationException {
  readonly Message: string;
  readonly Reason: string;
  readonly Fields: [];
}

interface ValidationExceptionField {
  readonly Name: string;
  readonly Message: string;
}

