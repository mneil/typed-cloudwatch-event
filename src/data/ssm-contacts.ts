/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AcceptPage {
  readonly PageId: string;
  readonly ContactChannelId?: string;
  readonly AcceptType: string;
  readonly Note?: string;
  readonly AcceptCode: string;
  readonly AcceptCodeValidation?: string;
}

export interface ActivateContactChannel {
  readonly ContactChannelId: string;
  readonly ActivationCode: string;
}

export interface CreateContact {
  readonly Alias: string;
  readonly DisplayName?: string;
  readonly Type: string;
  readonly Plan: Plan;
  readonly Tags?: [];
  readonly IdempotencyToken?: string;
}

export interface CreateContactChannel {
  readonly ContactId: string;
  readonly Name: string;
  readonly Type: string;
  readonly DeliveryAddress: ContactChannelAddress;
  readonly DeferActivation?: boolean;
  readonly IdempotencyToken?: string;
}

export interface DeactivateContactChannel {
  readonly ContactChannelId: string;
}

export interface DeleteContact {
  readonly ContactId: string;
}

export interface DeleteContactChannel {
  readonly ContactChannelId: string;
}

export interface DescribeEngagement {
  readonly EngagementId: string;
}

export interface DescribePage {
  readonly PageId: string;
}

export interface GetContact {
  readonly ContactId: string;
}

export interface GetContactChannel {
  readonly ContactChannelId: string;
}

export interface GetContactPolicy {
  readonly ContactArn: string;
}

export interface ListContactChannels {
  readonly ContactId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListContacts {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly AliasPrefix?: string;
  readonly Type?: string;
}

export interface ListEngagements {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly IncidentId?: string;
  readonly TimeRangeValue?: TimeRange;
}

export interface ListPageReceipts {
  readonly PageId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListPagesByContact {
  readonly ContactId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListPagesByEngagement {
  readonly EngagementId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListTagsForResource {
  readonly ResourceARN: string;
}

export interface PutContactPolicy {
  readonly ContactArn: string;
  readonly Policy: string;
}

export interface SendActivationCode {
  readonly ContactChannelId: string;
}

export interface StartEngagement {
  readonly ContactId: string;
  readonly Sender: string;
  readonly Subject: string;
  readonly Content: string;
  readonly PublicSubject?: string;
  readonly PublicContent?: string;
  readonly IncidentId?: string;
  readonly IdempotencyToken?: string;
}

export interface StopEngagement {
  readonly EngagementId: string;
  readonly Reason?: string;
}

export interface TagResource {
  readonly ResourceARN: string;
  readonly Tags: [];
}

export interface UntagResource {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}

export interface UpdateContact {
  readonly ContactId: string;
  readonly DisplayName?: string;
  readonly Plan?: Plan;
}

export interface UpdateContactChannel {
  readonly ContactChannelId: string;
  readonly Name?: string;
  readonly DeliveryAddress?: ContactChannelAddress;
}

export interface AcceptPageRequest {
  readonly PageId: string;
  readonly ContactChannelId?: string;
  readonly AcceptType: string;
  readonly Note?: string;
  readonly AcceptCode: string;
  readonly AcceptCodeValidation?: string;
}

export interface AcceptPageResult {
}

export interface AccessDeniedException {
  readonly Message: string;
}

export interface ActivateContactChannelRequest {
  readonly ContactChannelId: string;
  readonly ActivationCode: string;
}

export interface ActivateContactChannelResult {
}

export interface ChannelTargetInfo {
  readonly ContactChannelId: string;
  readonly RetryIntervalInMinutes?: number;
}

export interface ConflictException {
  readonly Message: string;
  readonly ResourceId: string;
  readonly ResourceType: string;
}

export interface Contact {
  readonly ContactArn: string;
  readonly Alias: string;
  readonly DisplayName?: string;
  readonly Type: string;
}

export interface ContactChannel {
  readonly ContactChannelArn: string;
  readonly ContactArn: string;
  readonly Name: string;
  readonly Type?: string;
  readonly DeliveryAddress: ContactChannelAddress;
  readonly ActivationStatus: string;
}

export interface ContactChannelAddress {
  readonly SimpleAddress?: string;
}

export interface ContactTargetInfo {
  readonly ContactId?: string;
  readonly IsEssential: boolean;
}

export interface CreateContactChannelRequest {
  readonly ContactId: string;
  readonly Name: string;
  readonly Type: string;
  readonly DeliveryAddress: ContactChannelAddress;
  readonly DeferActivation?: boolean;
  readonly IdempotencyToken?: string;
}

export interface CreateContactChannelResult {
  readonly ContactChannelArn: string;
}

export interface CreateContactRequest {
  readonly Alias: string;
  readonly DisplayName?: string;
  readonly Type: string;
  readonly Plan: Plan;
  readonly Tags?: [];
  readonly IdempotencyToken?: string;
}

export interface CreateContactResult {
  readonly ContactArn: string;
}

export interface DataEncryptionException {
  readonly Message: string;
}

export interface DeactivateContactChannelRequest {
  readonly ContactChannelId: string;
}

export interface DeactivateContactChannelResult {
}

export interface DeleteContactChannelRequest {
  readonly ContactChannelId: string;
}

export interface DeleteContactChannelResult {
}

export interface DeleteContactRequest {
  readonly ContactId: string;
}

export interface DeleteContactResult {
}

export interface DescribeEngagementRequest {
  readonly EngagementId: string;
}

export interface DescribeEngagementResult {
  readonly ContactArn: string;
  readonly EngagementArn: string;
  readonly Sender: string;
  readonly Subject: string;
  readonly Content: string;
  readonly PublicSubject?: string;
  readonly PublicContent?: string;
  readonly IncidentId?: string;
  readonly StartTime?: Date;
  readonly StopTime?: Date;
}

export interface DescribePageRequest {
  readonly PageId: string;
}

export interface DescribePageResult {
  readonly PageArn: string;
  readonly EngagementArn: string;
  readonly ContactArn: string;
  readonly Sender: string;
  readonly Subject: string;
  readonly Content: string;
  readonly PublicSubject?: string;
  readonly PublicContent?: string;
  readonly IncidentId?: string;
  readonly SentTime?: Date;
  readonly ReadTime?: Date;
  readonly DeliveryTime?: Date;
}

export interface Engagement {
  readonly EngagementArn: string;
  readonly ContactArn: string;
  readonly Sender: string;
  readonly IncidentId?: string;
  readonly StartTime?: Date;
  readonly StopTime?: Date;
}

export interface GetContactChannelRequest {
  readonly ContactChannelId: string;
}

export interface GetContactChannelResult {
  readonly ContactArn: string;
  readonly ContactChannelArn: string;
  readonly Name: string;
  readonly Type: string;
  readonly DeliveryAddress: ContactChannelAddress;
  readonly ActivationStatus?: string;
}

export interface GetContactPolicyRequest {
  readonly ContactArn: string;
}

export interface GetContactPolicyResult {
  readonly ContactArn?: string;
  readonly Policy?: string;
}

export interface GetContactRequest {
  readonly ContactId: string;
}

export interface GetContactResult {
  readonly ContactArn: string;
  readonly Alias: string;
  readonly DisplayName?: string;
  readonly Type: string;
  readonly Plan: Plan;
}

export interface InternalServerException {
  readonly Message: string;
  readonly RetryAfterSeconds?: number;
}

export interface ListContactChannelsRequest {
  readonly ContactId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListContactChannelsResult {
  readonly NextToken?: string;
  readonly ContactChannels: [];
}

export interface ListContactsRequest {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly AliasPrefix?: string;
  readonly Type?: string;
}

export interface ListContactsResult {
  readonly NextToken?: string;
  readonly Contacts?: [];
}

export interface ListEngagementsRequest {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly IncidentId?: string;
  readonly TimeRangeValue?: TimeRange;
}

export interface ListEngagementsResult {
  readonly NextToken?: string;
  readonly Engagements: [];
}

export interface ListPageReceiptsRequest {
  readonly PageId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListPageReceiptsResult {
  readonly NextToken?: string;
  readonly Receipts?: [];
}

export interface ListPagesByContactRequest {
  readonly ContactId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListPagesByContactResult {
  readonly NextToken?: string;
  readonly Pages: [];
}

export interface ListPagesByEngagementRequest {
  readonly EngagementId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListPagesByEngagementResult {
  readonly NextToken?: string;
  readonly Pages: [];
}

export interface ListTagsForResourceRequest {
  readonly ResourceARN: string;
}

export interface ListTagsForResourceResult {
  readonly Tags?: [];
}

export interface Page {
  readonly PageArn: string;
  readonly EngagementArn: string;
  readonly ContactArn: string;
  readonly Sender: string;
  readonly IncidentId?: string;
  readonly SentTime?: Date;
  readonly DeliveryTime?: Date;
  readonly ReadTime?: Date;
}

export interface Plan {
  readonly Stages: [];
}

export interface PutContactPolicyRequest {
  readonly ContactArn: string;
  readonly Policy: string;
}

export interface PutContactPolicyResult {
}

export interface Receipt {
  readonly ContactChannelArn?: string;
  readonly ReceiptType: string;
  readonly ReceiptInfo?: string;
  readonly ReceiptTime: Date;
}

export interface ResourceNotFoundException {
  readonly Message: string;
  readonly ResourceId: string;
  readonly ResourceType: string;
}

export interface SendActivationCodeRequest {
  readonly ContactChannelId: string;
}

export interface SendActivationCodeResult {
}

export interface ServiceQuotaExceededException {
  readonly Message: string;
  readonly ResourceId?: string;
  readonly ResourceType?: string;
  readonly QuotaCode: string;
  readonly ServiceCode: string;
}

export interface Stage {
  readonly DurationInMinutes: number;
  readonly Targets: [];
}

export interface StartEngagementRequest {
  readonly ContactId: string;
  readonly Sender: string;
  readonly Subject: string;
  readonly Content: string;
  readonly PublicSubject?: string;
  readonly PublicContent?: string;
  readonly IncidentId?: string;
  readonly IdempotencyToken?: string;
}

export interface StartEngagementResult {
  readonly EngagementArn: string;
}

export interface StopEngagementRequest {
  readonly EngagementId: string;
  readonly Reason?: string;
}

export interface StopEngagementResult {
}

export interface Tag {
  readonly Key?: string;
  readonly Value?: string;
}

export interface TagResourceRequest {
  readonly ResourceARN: string;
  readonly Tags: [];
}

export interface TagResourceResult {
}

export interface Target {
  readonly ChannelTargetInfo?: ChannelTargetInfo;
  readonly ContactTargetInfo?: ContactTargetInfo;
}

export interface ThrottlingException {
  readonly Message: string;
  readonly QuotaCode?: string;
  readonly ServiceCode?: string;
  readonly RetryAfterSeconds?: number;
}

export interface TimeRange {
  readonly StartTime?: Date;
  readonly EndTime?: Date;
}

export interface UntagResourceRequest {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}

export interface UntagResourceResult {
}

export interface UpdateContactChannelRequest {
  readonly ContactChannelId: string;
  readonly Name?: string;
  readonly DeliveryAddress?: ContactChannelAddress;
}

export interface UpdateContactChannelResult {
}

export interface UpdateContactRequest {
  readonly ContactId: string;
  readonly DisplayName?: string;
  readonly Plan?: Plan;
}

export interface UpdateContactResult {
}

export interface ValidationException {
  readonly Message: string;
  readonly Reason?: string;
  readonly Fields?: [];
}

export interface ValidationExceptionField {
  readonly Name: string;
  readonly Message: string;
}


