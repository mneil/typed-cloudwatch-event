/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CreateBudget {
  readonly AccountId: string;
  readonly Budget: Budget;
  readonly NotificationsWithSubscribers?: [];
}
export interface CreateBudgetAction {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly NotificationType: string;
  readonly ActionType: string;
  readonly ActionThreshold: ActionThreshold;
  readonly Definition: Definition;
  readonly ExecutionRoleArn: string;
  readonly ApprovalModel: string;
  readonly Subscribers: [];
}
export interface CreateNotification {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly Notification: Notification;
  readonly Subscribers: [];
}
export interface CreateSubscriber {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly Notification: Notification;
  readonly Subscriber: Subscriber;
}
export interface DeleteBudget {
  readonly AccountId: string;
  readonly BudgetName: string;
}
export interface DeleteBudgetAction {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly ActionId: string;
}
export interface DeleteNotification {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly Notification: Notification;
}
export interface DeleteSubscriber {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly Notification: Notification;
  readonly Subscriber: Subscriber;
}
export interface DescribeBudget {
  readonly AccountId: string;
  readonly BudgetName: string;
}
export interface DescribeBudgetAction {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly ActionId: string;
}
export interface DescribeBudgetActionHistories {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly ActionId: string;
  readonly TimePeriod?: TimePeriod;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribeBudgetActionsForAccount {
  readonly AccountId: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribeBudgetActionsForBudget {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribeBudgetPerformanceHistory {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly TimePeriod?: TimePeriod;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribeBudgets {
  readonly AccountId: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribeNotificationsForBudget {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribeSubscribersForNotification {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly Notification: Notification;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface ExecuteBudgetAction {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly ActionId: string;
  readonly ExecutionType: string;
}
export interface UpdateBudget {
  readonly AccountId: string;
  readonly NewBudget: Budget;
}
export interface UpdateBudgetAction {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly ActionId: string;
  readonly NotificationType?: string;
  readonly ActionThreshold?: ActionThreshold;
  readonly Definition?: Definition;
  readonly ExecutionRoleArn?: string;
  readonly ApprovalModel?: string;
  readonly Subscribers?: [];
}
export interface UpdateNotification {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly OldNotification: Notification;
  readonly NewNotification: Notification;
}
export interface UpdateSubscriber {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly Notification: Notification;
  readonly OldSubscriber: Subscriber;
  readonly NewSubscriber: Subscriber;
}



interface AccessDeniedException {
  readonly Message: string;
}

interface Action {
  readonly ActionId: string;
  readonly BudgetName: string;
  readonly NotificationType: string;
  readonly ActionType: string;
  readonly ActionThreshold: ActionThreshold;
  readonly Definition: Definition;
  readonly ExecutionRoleArn: string;
  readonly ApprovalModel: string;
  readonly Status: string;
  readonly Subscribers: [];
}

interface ActionHistory {
  readonly Timestamp: Date;
  readonly Status: string;
  readonly EventType: string;
  readonly ActionHistoryDetails: ActionHistoryDetails;
}

interface ActionHistoryDetails {
  readonly Message: string;
  readonly Action: Action;
}

interface ActionThreshold {
  readonly ActionThresholdValue: unknown;
  readonly ActionThresholdType: string;
}

interface Budget {
  readonly BudgetName: string;
  readonly BudgetLimit: Spend;
  readonly PlannedBudgetLimits: {[key: string]: any};
  readonly CostFilters: {[key: string]: any};
  readonly CostTypes: CostTypes;
  readonly TimeUnit: string;
  readonly TimePeriod: TimePeriod;
  readonly CalculatedSpend: CalculatedSpend;
  readonly BudgetType: string;
  readonly LastUpdatedTime: Date;
}

interface BudgetPerformanceHistory {
  readonly BudgetName: string;
  readonly BudgetType: string;
  readonly CostFilters: {[key: string]: any};
  readonly CostTypes: CostTypes;
  readonly TimeUnit: string;
  readonly BudgetedAndActualAmountsList: [];
}

interface BudgetedAndActualAmounts {
  readonly BudgetedAmount: Spend;
  readonly ActualAmount: Spend;
  readonly TimePeriod: TimePeriod;
}

interface CalculatedSpend {
  readonly ActualSpend: Spend;
  readonly ForecastedSpend: Spend;
}

interface CostTypes {
  readonly IncludeTax: boolean;
  readonly IncludeSubscription: boolean;
  readonly UseBlended: boolean;
  readonly IncludeRefund: boolean;
  readonly IncludeCredit: boolean;
  readonly IncludeUpfront: boolean;
  readonly IncludeRecurring: boolean;
  readonly IncludeOtherSubscription: boolean;
  readonly IncludeSupport: boolean;
  readonly IncludeDiscount: boolean;
  readonly UseAmortized: boolean;
}

interface CreateBudgetActionRequest {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly NotificationType: string;
  readonly ActionType: string;
  readonly ActionThreshold: ActionThreshold;
  readonly Definition: Definition;
  readonly ExecutionRoleArn: string;
  readonly ApprovalModel: string;
  readonly Subscribers: [];
}

interface CreateBudgetActionResponse {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly ActionId: string;
}

interface CreateBudgetRequest {
  readonly AccountId: string;
  readonly Budget: Budget;
  readonly NotificationsWithSubscribers: [];
}

interface CreateBudgetResponse {
}

interface CreateNotificationRequest {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly Notification: Notification;
  readonly Subscribers: [];
}

interface CreateNotificationResponse {
}

interface CreateSubscriberRequest {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly Notification: Notification;
  readonly Subscriber: Subscriber;
}

interface CreateSubscriberResponse {
}

interface CreationLimitExceededException {
  readonly Message: string;
}

interface Definition {
  readonly IamActionDefinition: IamActionDefinition;
  readonly ScpActionDefinition: ScpActionDefinition;
  readonly SsmActionDefinition: SsmActionDefinition;
}

interface DeleteBudgetActionRequest {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly ActionId: string;
}

interface DeleteBudgetActionResponse {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly Action: Action;
}

interface DeleteBudgetRequest {
  readonly AccountId: string;
  readonly BudgetName: string;
}

interface DeleteBudgetResponse {
}

interface DeleteNotificationRequest {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly Notification: Notification;
}

interface DeleteNotificationResponse {
}

interface DeleteSubscriberRequest {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly Notification: Notification;
  readonly Subscriber: Subscriber;
}

interface DeleteSubscriberResponse {
}

interface DescribeBudgetActionHistoriesRequest {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly ActionId: string;
  readonly TimePeriod: TimePeriod;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeBudgetActionHistoriesResponse {
  readonly ActionHistories: [];
  readonly NextToken: string;
}

interface DescribeBudgetActionRequest {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly ActionId: string;
}

interface DescribeBudgetActionResponse {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly Action: Action;
}

interface DescribeBudgetActionsForAccountRequest {
  readonly AccountId: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeBudgetActionsForAccountResponse {
  readonly Actions: [];
  readonly NextToken: string;
}

interface DescribeBudgetActionsForBudgetRequest {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeBudgetActionsForBudgetResponse {
  readonly Actions: [];
  readonly NextToken: string;
}

interface DescribeBudgetPerformanceHistoryRequest {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly TimePeriod: TimePeriod;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeBudgetPerformanceHistoryResponse {
  readonly BudgetPerformanceHistory: BudgetPerformanceHistory;
  readonly NextToken: string;
}

interface DescribeBudgetRequest {
  readonly AccountId: string;
  readonly BudgetName: string;
}

interface DescribeBudgetResponse {
  readonly Budget: Budget;
}

interface DescribeBudgetsRequest {
  readonly AccountId: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeBudgetsResponse {
  readonly Budgets: [];
  readonly NextToken: string;
}

interface DescribeNotificationsForBudgetRequest {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeNotificationsForBudgetResponse {
  readonly Notifications: [];
  readonly NextToken: string;
}

interface DescribeSubscribersForNotificationRequest {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly Notification: Notification;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeSubscribersForNotificationResponse {
  readonly Subscribers: [];
  readonly NextToken: string;
}

interface DuplicateRecordException {
  readonly Message: string;
}

interface ExecuteBudgetActionRequest {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly ActionId: string;
  readonly ExecutionType: string;
}

interface ExecuteBudgetActionResponse {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly ActionId: string;
  readonly ExecutionType: string;
}

interface ExpiredNextTokenException {
  readonly Message: string;
}

interface IamActionDefinition {
  readonly PolicyArn: string;
  readonly Roles: [];
  readonly Groups: [];
  readonly Users: [];
}

interface InternalErrorException {
  readonly Message: string;
}

interface InvalidNextTokenException {
  readonly Message: string;
}

interface InvalidParameterException {
  readonly Message: string;
}

interface NotFoundException {
  readonly Message: string;
}

interface Notification {
  readonly NotificationType: string;
  readonly ComparisonOperator: string;
  readonly Threshold: unknown;
  readonly ThresholdType: string;
  readonly NotificationState: string;
}

interface NotificationWithSubscribers {
  readonly Notification: Notification;
  readonly Subscribers: [];
}

interface ResourceLockedException {
  readonly Message: string;
}

interface ScpActionDefinition {
  readonly PolicyId: string;
  readonly TargetIds: [];
}

interface Spend {
  readonly Amount: string;
  readonly Unit: string;
}

interface SsmActionDefinition {
  readonly ActionSubType: string;
  readonly Region: string;
  readonly InstanceIds: [];
}

interface Subscriber {
  readonly SubscriptionType: string;
  readonly Address: string;
}

interface TimePeriod {
  readonly Start: Date;
  readonly End: Date;
}

interface UpdateBudgetActionRequest {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly ActionId: string;
  readonly NotificationType: string;
  readonly ActionThreshold: ActionThreshold;
  readonly Definition: Definition;
  readonly ExecutionRoleArn: string;
  readonly ApprovalModel: string;
  readonly Subscribers: [];
}

interface UpdateBudgetActionResponse {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly OldAction: Action;
  readonly NewAction: Action;
}

interface UpdateBudgetRequest {
  readonly AccountId: string;
  readonly NewBudget: Budget;
}

interface UpdateBudgetResponse {
}

interface UpdateNotificationRequest {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly OldNotification: Notification;
  readonly NewNotification: Notification;
}

interface UpdateNotificationResponse {
}

interface UpdateSubscriberRequest {
  readonly AccountId: string;
  readonly BudgetName: string;
  readonly Notification: Notification;
  readonly OldSubscriber: Subscriber;
  readonly NewSubscriber: Subscriber;
}

interface UpdateSubscriberResponse {
}

