/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CancelJobRun {
  readonly id: string;
  readonly virtualClusterId: string;
}

export interface CreateManagedEndpoint {
  readonly name: string;
  readonly virtualClusterId: string;
  readonly type: string;
  readonly releaseLabel: string;
  readonly executionRoleArn: string;
  readonly certificateArn?: string;
  readonly configurationOverrides?: ConfigurationOverrides;
  readonly clientToken: string;
  readonly tags?: {[key: string]: any};
}

export interface CreateVirtualCluster {
  readonly name: string;
  readonly containerProvider: ContainerProvider;
  readonly clientToken: string;
  readonly tags?: {[key: string]: any};
}

export interface DeleteManagedEndpoint {
  readonly id: string;
  readonly virtualClusterId: string;
}

export interface DeleteVirtualCluster {
  readonly id: string;
}

export interface DescribeJobRun {
  readonly id: string;
  readonly virtualClusterId: string;
}

export interface DescribeManagedEndpoint {
  readonly id: string;
  readonly virtualClusterId: string;
}

export interface DescribeVirtualCluster {
  readonly id: string;
}

export interface ListJobRuns {
  readonly virtualClusterId: string;
  readonly createdBefore?: Date;
  readonly createdAfter?: Date;
  readonly name?: string;
  readonly states?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListManagedEndpoints {
  readonly virtualClusterId: string;
  readonly createdBefore?: Date;
  readonly createdAfter?: Date;
  readonly types?: [];
  readonly states?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListTagsForResource {
  readonly resourceArn: string;
}

export interface ListVirtualClusters {
  readonly containerProviderId?: string;
  readonly containerProviderType?: string;
  readonly createdAfter?: Date;
  readonly createdBefore?: Date;
  readonly states?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface StartJobRun {
  readonly name?: string;
  readonly virtualClusterId: string;
  readonly clientToken: string;
  readonly executionRoleArn: string;
  readonly releaseLabel: string;
  readonly jobDriver: JobDriver;
  readonly configurationOverrides?: ConfigurationOverrides;
  readonly tags?: {[key: string]: any};
}

export interface TagResource {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

export interface UntagResource {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface CancelJobRunRequest {
  readonly id: string;
  readonly virtualClusterId: string;
}

export interface CancelJobRunResponse {
  readonly id?: string;
  readonly virtualClusterId?: string;
}

export interface Certificate {
  readonly certificateArn?: string;
  readonly certificateData?: string;
}

export interface CloudWatchMonitoringConfiguration {
  readonly logGroupName: string;
  readonly logStreamNamePrefix?: string;
}

export interface Configuration {
  readonly classification: string;
  readonly properties?: {[key: string]: any};
  readonly configurations?: [];
}

export interface ConfigurationOverrides {
  readonly applicationConfiguration?: [];
  readonly monitoringConfiguration?: MonitoringConfiguration;
}

export interface ContainerInfo {
  readonly eksInfo?: EksInfo;
}

export interface ContainerProvider {
  readonly type: string;
  readonly id: string;
  readonly info?: ContainerInfo;
}

export interface CreateManagedEndpointRequest {
  readonly name: string;
  readonly virtualClusterId: string;
  readonly type: string;
  readonly releaseLabel: string;
  readonly executionRoleArn: string;
  readonly certificateArn?: string;
  readonly configurationOverrides?: ConfigurationOverrides;
  readonly clientToken: string;
  readonly tags?: {[key: string]: any};
}

export interface CreateManagedEndpointResponse {
  readonly id?: string;
  readonly name?: string;
  readonly arn?: string;
  readonly virtualClusterId?: string;
}

export interface CreateVirtualClusterRequest {
  readonly name: string;
  readonly containerProvider: ContainerProvider;
  readonly clientToken: string;
  readonly tags?: {[key: string]: any};
}

export interface CreateVirtualClusterResponse {
  readonly id?: string;
  readonly name?: string;
  readonly arn?: string;
}

export interface DeleteManagedEndpointRequest {
  readonly id: string;
  readonly virtualClusterId: string;
}

export interface DeleteManagedEndpointResponse {
  readonly id?: string;
  readonly virtualClusterId?: string;
}

export interface DeleteVirtualClusterRequest {
  readonly id: string;
}

export interface DeleteVirtualClusterResponse {
  readonly id?: string;
}

export interface DescribeJobRunRequest {
  readonly id: string;
  readonly virtualClusterId: string;
}

export interface DescribeJobRunResponse {
  readonly jobRun?: JobRun;
}

export interface DescribeManagedEndpointRequest {
  readonly id: string;
  readonly virtualClusterId: string;
}

export interface DescribeManagedEndpointResponse {
  readonly endpoint?: Endpoint;
}

export interface DescribeVirtualClusterRequest {
  readonly id: string;
}

export interface DescribeVirtualClusterResponse {
  readonly virtualCluster?: VirtualCluster;
}

export interface EksInfo {
  readonly namespace?: string;
}

export interface Endpoint {
  readonly id?: string;
  readonly name?: string;
  readonly arn?: string;
  readonly virtualClusterId?: string;
  readonly type?: string;
  readonly state?: string;
  readonly releaseLabel?: string;
  readonly executionRoleArn?: string;
  readonly certificateArn?: string;
  readonly certificateAuthority?: Certificate;
  readonly configurationOverrides?: ConfigurationOverrides;
  readonly serverUrl?: string;
  readonly createdAt?: Date;
  readonly securityGroup?: string;
  readonly subnetIds?: [];
  readonly stateDetails?: string;
  readonly failureReason?: string;
  readonly tags?: {[key: string]: any};
}

export interface InternalServerException {
  readonly message?: string;
}

export interface JobDriver {
  readonly sparkSubmitJobDriver?: SparkSubmitJobDriver;
}

export interface JobRun {
  readonly id?: string;
  readonly name?: string;
  readonly virtualClusterId?: string;
  readonly arn?: string;
  readonly state?: string;
  readonly clientToken?: string;
  readonly executionRoleArn?: string;
  readonly releaseLabel?: string;
  readonly configurationOverrides?: ConfigurationOverrides;
  readonly jobDriver?: JobDriver;
  readonly createdAt?: Date;
  readonly createdBy?: string;
  readonly finishedAt?: Date;
  readonly stateDetails?: string;
  readonly failureReason?: string;
  readonly tags?: {[key: string]: any};
}

export interface ListJobRunsRequest {
  readonly virtualClusterId: string;
  readonly createdBefore?: Date;
  readonly createdAfter?: Date;
  readonly name?: string;
  readonly states?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListJobRunsResponse {
  readonly jobRuns?: [];
  readonly nextToken?: string;
}

export interface ListManagedEndpointsRequest {
  readonly virtualClusterId: string;
  readonly createdBefore?: Date;
  readonly createdAfter?: Date;
  readonly types?: [];
  readonly states?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListManagedEndpointsResponse {
  readonly endpoints?: [];
  readonly nextToken?: string;
}

export interface ListTagsForResourceRequest {
  readonly resourceArn: string;
}

export interface ListTagsForResourceResponse {
  readonly tags?: {[key: string]: any};
}

export interface ListVirtualClustersRequest {
  readonly containerProviderId?: string;
  readonly containerProviderType?: string;
  readonly createdAfter?: Date;
  readonly createdBefore?: Date;
  readonly states?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListVirtualClustersResponse {
  readonly virtualClusters?: [];
  readonly nextToken?: string;
}

export interface MonitoringConfiguration {
  readonly persistentAppUI?: string;
  readonly cloudWatchMonitoringConfiguration?: CloudWatchMonitoringConfiguration;
  readonly s3MonitoringConfiguration?: S3MonitoringConfiguration;
}

export interface ResourceNotFoundException {
  readonly message?: string;
}

export interface S3MonitoringConfiguration {
  readonly logUri: string;
}

export interface SparkSubmitJobDriver {
  readonly entryPoint: string;
  readonly entryPointArguments?: [];
  readonly sparkSubmitParameters?: string;
}

export interface StartJobRunRequest {
  readonly name?: string;
  readonly virtualClusterId: string;
  readonly clientToken: string;
  readonly executionRoleArn: string;
  readonly releaseLabel: string;
  readonly jobDriver: JobDriver;
  readonly configurationOverrides?: ConfigurationOverrides;
  readonly tags?: {[key: string]: any};
}

export interface StartJobRunResponse {
  readonly id?: string;
  readonly name?: string;
  readonly arn?: string;
  readonly virtualClusterId?: string;
}

export interface TagResourceRequest {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

export interface TagResourceResponse {
}

export interface UntagResourceRequest {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface UntagResourceResponse {
}

export interface ValidationException {
  readonly message?: string;
}

export interface VirtualCluster {
  readonly id?: string;
  readonly name?: string;
  readonly arn?: string;
  readonly state?: string;
  readonly containerProvider?: ContainerProvider;
  readonly createdAt?: Date;
  readonly tags?: {[key: string]: any};
}


