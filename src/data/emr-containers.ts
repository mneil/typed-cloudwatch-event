/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CancelJobRun {
  readonly id: string;
  readonly virtualClusterId: string;
}
export interface CreateManagedEndpoint {
  readonly name: string;
  readonly virtualClusterId: string;
  readonly type: string;
  readonly releaseLabel: string;
  readonly executionRoleArn: string;
  readonly certificateArn?: string;
  readonly configurationOverrides?: ConfigurationOverrides;
  readonly clientToken: string;
  readonly tags?: {[key: string]: any};
}
export interface CreateVirtualCluster {
  readonly name: string;
  readonly containerProvider: ContainerProvider;
  readonly clientToken: string;
  readonly tags?: {[key: string]: any};
}
export interface DeleteManagedEndpoint {
  readonly id: string;
  readonly virtualClusterId: string;
}
export interface DeleteVirtualCluster {
  readonly id: string;
}
export interface DescribeJobRun {
  readonly id: string;
  readonly virtualClusterId: string;
}
export interface DescribeManagedEndpoint {
  readonly id: string;
  readonly virtualClusterId: string;
}
export interface DescribeVirtualCluster {
  readonly id: string;
}
export interface ListJobRuns {
  readonly virtualClusterId: string;
  readonly createdBefore?: Date;
  readonly createdAfter?: Date;
  readonly name?: string;
  readonly states?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}
export interface ListManagedEndpoints {
  readonly virtualClusterId: string;
  readonly createdBefore?: Date;
  readonly createdAfter?: Date;
  readonly types?: [];
  readonly states?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}
export interface ListTagsForResource {
  readonly resourceArn: string;
}
export interface ListVirtualClusters {
  readonly containerProviderId?: string;
  readonly containerProviderType?: string;
  readonly createdAfter?: Date;
  readonly createdBefore?: Date;
  readonly states?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}
export interface StartJobRun {
  readonly name?: string;
  readonly virtualClusterId: string;
  readonly clientToken: string;
  readonly executionRoleArn: string;
  readonly releaseLabel: string;
  readonly jobDriver: JobDriver;
  readonly configurationOverrides?: ConfigurationOverrides;
  readonly tags?: {[key: string]: any};
}
export interface TagResource {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}
export interface UntagResource {
  readonly resourceArn: string;
  readonly tagKeys: [];
}



interface CancelJobRunRequest {
  readonly id: string;
  readonly virtualClusterId: string;
}

interface CancelJobRunResponse {
  readonly id: string;
  readonly virtualClusterId: string;
}

interface Certificate {
  readonly certificateArn: string;
  readonly certificateData: string;
}

interface CloudWatchMonitoringConfiguration {
  readonly logGroupName: string;
  readonly logStreamNamePrefix: string;
}

interface Configuration {
  readonly classification: string;
  readonly properties: {[key: string]: any};
  readonly configurations: [];
}

interface ConfigurationOverrides {
  readonly applicationConfiguration: [];
  readonly monitoringConfiguration: MonitoringConfiguration;
}

interface ContainerInfo {
  readonly eksInfo: EksInfo;
}

interface ContainerProvider {
  readonly type: string;
  readonly id: string;
  readonly info: ContainerInfo;
}

interface CreateManagedEndpointRequest {
  readonly name: string;
  readonly virtualClusterId: string;
  readonly type: string;
  readonly releaseLabel: string;
  readonly executionRoleArn: string;
  readonly certificateArn: string;
  readonly configurationOverrides: ConfigurationOverrides;
  readonly clientToken: string;
  readonly tags: {[key: string]: any};
}

interface CreateManagedEndpointResponse {
  readonly id: string;
  readonly name: string;
  readonly arn: string;
  readonly virtualClusterId: string;
}

interface CreateVirtualClusterRequest {
  readonly name: string;
  readonly containerProvider: ContainerProvider;
  readonly clientToken: string;
  readonly tags: {[key: string]: any};
}

interface CreateVirtualClusterResponse {
  readonly id: string;
  readonly name: string;
  readonly arn: string;
}

interface DeleteManagedEndpointRequest {
  readonly id: string;
  readonly virtualClusterId: string;
}

interface DeleteManagedEndpointResponse {
  readonly id: string;
  readonly virtualClusterId: string;
}

interface DeleteVirtualClusterRequest {
  readonly id: string;
}

interface DeleteVirtualClusterResponse {
  readonly id: string;
}

interface DescribeJobRunRequest {
  readonly id: string;
  readonly virtualClusterId: string;
}

interface DescribeJobRunResponse {
  readonly jobRun: JobRun;
}

interface DescribeManagedEndpointRequest {
  readonly id: string;
  readonly virtualClusterId: string;
}

interface DescribeManagedEndpointResponse {
  readonly endpoint: Endpoint;
}

interface DescribeVirtualClusterRequest {
  readonly id: string;
}

interface DescribeVirtualClusterResponse {
  readonly virtualCluster: VirtualCluster;
}

interface EksInfo {
  readonly namespace: string;
}

interface Endpoint {
  readonly id: string;
  readonly name: string;
  readonly arn: string;
  readonly virtualClusterId: string;
  readonly type: string;
  readonly state: string;
  readonly releaseLabel: string;
  readonly executionRoleArn: string;
  readonly certificateArn: string;
  readonly certificateAuthority: Certificate;
  readonly configurationOverrides: ConfigurationOverrides;
  readonly serverUrl: string;
  readonly createdAt: Date;
  readonly securityGroup: string;
  readonly subnetIds: [];
  readonly stateDetails: string;
  readonly failureReason: string;
  readonly tags: {[key: string]: any};
}

interface InternalServerException {
  readonly message: string;
}

interface JobDriver {
  readonly sparkSubmitJobDriver: SparkSubmitJobDriver;
}

interface JobRun {
  readonly id: string;
  readonly name: string;
  readonly virtualClusterId: string;
  readonly arn: string;
  readonly state: string;
  readonly clientToken: string;
  readonly executionRoleArn: string;
  readonly releaseLabel: string;
  readonly configurationOverrides: ConfigurationOverrides;
  readonly jobDriver: JobDriver;
  readonly createdAt: Date;
  readonly createdBy: string;
  readonly finishedAt: Date;
  readonly stateDetails: string;
  readonly failureReason: string;
  readonly tags: {[key: string]: any};
}

interface ListJobRunsRequest {
  readonly virtualClusterId: string;
  readonly createdBefore: Date;
  readonly createdAfter: Date;
  readonly name: string;
  readonly states: [];
  readonly maxResults: number;
  readonly nextToken: string;
}

interface ListJobRunsResponse {
  readonly jobRuns: [];
  readonly nextToken: string;
}

interface ListManagedEndpointsRequest {
  readonly virtualClusterId: string;
  readonly createdBefore: Date;
  readonly createdAfter: Date;
  readonly types: [];
  readonly states: [];
  readonly maxResults: number;
  readonly nextToken: string;
}

interface ListManagedEndpointsResponse {
  readonly endpoints: [];
  readonly nextToken: string;
}

interface ListTagsForResourceRequest {
  readonly resourceArn: string;
}

interface ListTagsForResourceResponse {
  readonly tags: {[key: string]: any};
}

interface ListVirtualClustersRequest {
  readonly containerProviderId: string;
  readonly containerProviderType: string;
  readonly createdAfter: Date;
  readonly createdBefore: Date;
  readonly states: [];
  readonly maxResults: number;
  readonly nextToken: string;
}

interface ListVirtualClustersResponse {
  readonly virtualClusters: [];
  readonly nextToken: string;
}

interface MonitoringConfiguration {
  readonly persistentAppUI: string;
  readonly cloudWatchMonitoringConfiguration: CloudWatchMonitoringConfiguration;
  readonly s3MonitoringConfiguration: S3MonitoringConfiguration;
}

interface ResourceNotFoundException {
  readonly message: string;
}

interface S3MonitoringConfiguration {
  readonly logUri: string;
}

interface SparkSubmitJobDriver {
  readonly entryPoint: string;
  readonly entryPointArguments: [];
  readonly sparkSubmitParameters: string;
}

interface StartJobRunRequest {
  readonly name: string;
  readonly virtualClusterId: string;
  readonly clientToken: string;
  readonly executionRoleArn: string;
  readonly releaseLabel: string;
  readonly jobDriver: JobDriver;
  readonly configurationOverrides: ConfigurationOverrides;
  readonly tags: {[key: string]: any};
}

interface StartJobRunResponse {
  readonly id: string;
  readonly name: string;
  readonly arn: string;
  readonly virtualClusterId: string;
}

interface TagResourceRequest {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

interface TagResourceResponse {
}

interface UntagResourceRequest {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

interface UntagResourceResponse {
}

interface ValidationException {
  readonly message: string;
}

interface VirtualCluster {
  readonly id: string;
  readonly name: string;
  readonly arn: string;
  readonly state: string;
  readonly containerProvider: ContainerProvider;
  readonly createdAt: Date;
  readonly tags: {[key: string]: any};
}

