/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AddFacetToObject {
  readonly DirectoryArn: string;
  readonly SchemaFacet: SchemaFacet;
  readonly ObjectAttributeList?: [];
  readonly ObjectReference: ObjectReference;
}

export interface ApplySchema {
  readonly PublishedSchemaArn: string;
  readonly DirectoryArn: string;
}

export interface AttachObject {
  readonly DirectoryArn: string;
  readonly ParentReference: ObjectReference;
  readonly ChildReference: ObjectReference;
  readonly LinkName: string;
}

export interface AttachPolicy {
  readonly DirectoryArn: string;
  readonly PolicyReference: ObjectReference;
  readonly ObjectReference: ObjectReference;
}

export interface AttachToIndex {
  readonly DirectoryArn: string;
  readonly IndexReference: ObjectReference;
  readonly TargetReference: ObjectReference;
}

export interface AttachTypedLink {
  readonly DirectoryArn: string;
  readonly SourceObjectReference: ObjectReference;
  readonly TargetObjectReference: ObjectReference;
  readonly TypedLinkFacet: TypedLinkSchemaAndFacetName;
  readonly Attributes: [];
}

export interface BatchRead {
  readonly DirectoryArn: string;
  readonly Operations: [];
  readonly ConsistencyLevel?: string;
}

export interface BatchWrite {
  readonly DirectoryArn: string;
  readonly Operations: [];
}

export interface CreateDirectory {
  readonly Name: string;
  readonly SchemaArn: string;
}

export interface CreateFacet {
  readonly SchemaArn: string;
  readonly Name: string;
  readonly Attributes?: [];
  readonly ObjectType?: string;
  readonly FacetStyle?: string;
}

export interface CreateIndex {
  readonly DirectoryArn: string;
  readonly OrderedIndexedAttributeList: [];
  readonly IsUnique: boolean;
  readonly ParentReference?: ObjectReference;
  readonly LinkName?: string;
}

export interface CreateObject {
  readonly DirectoryArn: string;
  readonly SchemaFacets: [];
  readonly ObjectAttributeList?: [];
  readonly ParentReference?: ObjectReference;
  readonly LinkName?: string;
}

export interface CreateSchema {
  readonly Name: string;
}

export interface CreateTypedLinkFacet {
  readonly SchemaArn: string;
  readonly Facet: TypedLinkFacet;
}

export interface DeleteDirectory {
  readonly DirectoryArn: string;
}

export interface DeleteFacet {
  readonly SchemaArn: string;
  readonly Name: string;
}

export interface DeleteObject {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
}

export interface DeleteSchema {
  readonly SchemaArn: string;
}

export interface DeleteTypedLinkFacet {
  readonly SchemaArn: string;
  readonly Name: string;
}

export interface DetachFromIndex {
  readonly DirectoryArn: string;
  readonly IndexReference: ObjectReference;
  readonly TargetReference: ObjectReference;
}

export interface DetachObject {
  readonly DirectoryArn: string;
  readonly ParentReference: ObjectReference;
  readonly LinkName: string;
}

export interface DetachPolicy {
  readonly DirectoryArn: string;
  readonly PolicyReference: ObjectReference;
  readonly ObjectReference: ObjectReference;
}

export interface DetachTypedLink {
  readonly DirectoryArn: string;
  readonly TypedLinkSpecifier: TypedLinkSpecifier;
}

export interface DisableDirectory {
  readonly DirectoryArn: string;
}

export interface EnableDirectory {
  readonly DirectoryArn: string;
}

export interface GetAppliedSchemaVersion {
  readonly SchemaArn: string;
}

export interface GetDirectory {
  readonly DirectoryArn: string;
}

export interface GetFacet {
  readonly SchemaArn: string;
  readonly Name: string;
}

export interface GetLinkAttributes {
  readonly DirectoryArn: string;
  readonly TypedLinkSpecifier: TypedLinkSpecifier;
  readonly AttributeNames: [];
  readonly ConsistencyLevel?: string;
}

export interface GetObjectAttributes {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly ConsistencyLevel?: string;
  readonly SchemaFacet: SchemaFacet;
  readonly AttributeNames: [];
}

export interface GetObjectInformation {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly ConsistencyLevel?: string;
}

export interface GetSchemaAsJson {
  readonly SchemaArn: string;
}

export interface GetTypedLinkFacetInformation {
  readonly SchemaArn: string;
  readonly Name: string;
}

export interface ListAppliedSchemaArns {
  readonly DirectoryArn: string;
  readonly SchemaArn?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListAttachedIndices {
  readonly DirectoryArn: string;
  readonly TargetReference: ObjectReference;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly ConsistencyLevel?: string;
}

export interface ListDevelopmentSchemaArns {
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListDirectories {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly state?: string;
}

export interface ListFacetAttributes {
  readonly SchemaArn: string;
  readonly Name: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListFacetNames {
  readonly SchemaArn: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListIncomingTypedLinks {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly FilterAttributeRanges?: [];
  readonly FilterTypedLink?: TypedLinkSchemaAndFacetName;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly ConsistencyLevel?: string;
}

export interface ListIndex {
  readonly DirectoryArn: string;
  readonly RangesOnIndexedValues?: [];
  readonly IndexReference: ObjectReference;
  readonly MaxResults?: number;
  readonly NextToken?: string;
  readonly ConsistencyLevel?: string;
}

export interface ListManagedSchemaArns {
  readonly SchemaArn?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListObjectAttributes {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly ConsistencyLevel?: string;
  readonly FacetFilter?: SchemaFacet;
}

export interface ListObjectChildren {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly ConsistencyLevel?: string;
}

export interface ListObjectParentPaths {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListObjectParents {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly ConsistencyLevel?: string;
  readonly IncludeAllLinksToEachParent?: boolean;
}

export interface ListObjectPolicies {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly ConsistencyLevel?: string;
}

export interface ListOutgoingTypedLinks {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly FilterAttributeRanges?: [];
  readonly FilterTypedLink?: TypedLinkSchemaAndFacetName;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly ConsistencyLevel?: string;
}

export interface ListPolicyAttachments {
  readonly DirectoryArn: string;
  readonly PolicyReference: ObjectReference;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly ConsistencyLevel?: string;
}

export interface ListPublishedSchemaArns {
  readonly SchemaArn?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListTagsForResource {
  readonly ResourceArn: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListTypedLinkFacetAttributes {
  readonly SchemaArn: string;
  readonly Name: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListTypedLinkFacetNames {
  readonly SchemaArn: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface LookupPolicy {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface PublishSchema {
  readonly DevelopmentSchemaArn: string;
  readonly Version: string;
  readonly MinorVersion?: string;
  readonly Name?: string;
}

export interface PutSchemaFromJson {
  readonly SchemaArn: string;
  readonly Document: string;
}

export interface RemoveFacetFromObject {
  readonly DirectoryArn: string;
  readonly SchemaFacet: SchemaFacet;
  readonly ObjectReference: ObjectReference;
}

export interface TagResource {
  readonly ResourceArn: string;
  readonly Tags: [];
}

export interface UntagResource {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}

export interface UpdateFacet {
  readonly SchemaArn: string;
  readonly Name: string;
  readonly AttributeUpdates?: [];
  readonly ObjectType?: string;
}

export interface UpdateLinkAttributes {
  readonly DirectoryArn: string;
  readonly TypedLinkSpecifier: TypedLinkSpecifier;
  readonly AttributeUpdates: [];
}

export interface UpdateObjectAttributes {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly AttributeUpdates: [];
}

export interface UpdateSchema {
  readonly SchemaArn: string;
  readonly Name: string;
}

export interface UpdateTypedLinkFacet {
  readonly SchemaArn: string;
  readonly Name: string;
  readonly AttributeUpdates: [];
  readonly IdentityAttributeOrder: [];
}

export interface UpgradeAppliedSchema {
  readonly PublishedSchemaArn: string;
  readonly DirectoryArn: string;
  readonly DryRun?: boolean;
}

export interface UpgradePublishedSchema {
  readonly DevelopmentSchemaArn: string;
  readonly PublishedSchemaArn: string;
  readonly MinorVersion: string;
  readonly DryRun?: boolean;
}

export interface AccessDeniedException {
  readonly Message?: string;
}

export interface AddFacetToObjectRequest {
  readonly DirectoryArn: string;
  readonly SchemaFacet: SchemaFacet;
  readonly ObjectAttributeList?: [];
  readonly ObjectReference: ObjectReference;
}

export interface AddFacetToObjectResponse {
}

export interface ApplySchemaRequest {
  readonly PublishedSchemaArn: string;
  readonly DirectoryArn: string;
}

export interface ApplySchemaResponse {
  readonly AppliedSchemaArn?: string;
  readonly DirectoryArn?: string;
}

export interface AttachObjectRequest {
  readonly DirectoryArn: string;
  readonly ParentReference: ObjectReference;
  readonly ChildReference: ObjectReference;
  readonly LinkName: string;
}

export interface AttachObjectResponse {
  readonly AttachedObjectIdentifier?: string;
}

export interface AttachPolicyRequest {
  readonly DirectoryArn: string;
  readonly PolicyReference: ObjectReference;
  readonly ObjectReference: ObjectReference;
}

export interface AttachPolicyResponse {
}

export interface AttachToIndexRequest {
  readonly DirectoryArn: string;
  readonly IndexReference: ObjectReference;
  readonly TargetReference: ObjectReference;
}

export interface AttachToIndexResponse {
  readonly AttachedObjectIdentifier?: string;
}

export interface AttachTypedLinkRequest {
  readonly DirectoryArn: string;
  readonly SourceObjectReference: ObjectReference;
  readonly TargetObjectReference: ObjectReference;
  readonly TypedLinkFacet: TypedLinkSchemaAndFacetName;
  readonly Attributes: [];
}

export interface AttachTypedLinkResponse {
  readonly TypedLinkSpecifier?: TypedLinkSpecifier;
}

export interface AttributeKey {
  readonly SchemaArn: string;
  readonly FacetName: string;
  readonly Name: string;
}

export interface AttributeKeyAndValue {
  readonly Key: AttributeKey;
  readonly Value: TypedAttributeValue;
}

export interface AttributeNameAndValue {
  readonly AttributeName: string;
  readonly Value: TypedAttributeValue;
}

export interface BatchAddFacetToObject {
  readonly SchemaFacet: SchemaFacet;
  readonly ObjectAttributeList: [];
  readonly ObjectReference: ObjectReference;
}

export interface BatchAddFacetToObjectResponse {
}

export interface BatchAttachObject {
  readonly ParentReference: ObjectReference;
  readonly ChildReference: ObjectReference;
  readonly LinkName: string;
}

export interface BatchAttachObjectResponse {
  readonly attachedObjectIdentifier?: string;
}

export interface BatchAttachPolicy {
  readonly PolicyReference: ObjectReference;
  readonly ObjectReference: ObjectReference;
}

export interface BatchAttachPolicyResponse {
}

export interface BatchAttachToIndex {
  readonly IndexReference: ObjectReference;
  readonly TargetReference: ObjectReference;
}

export interface BatchAttachToIndexResponse {
  readonly AttachedObjectIdentifier?: string;
}

export interface BatchAttachTypedLink {
  readonly SourceObjectReference: ObjectReference;
  readonly TargetObjectReference: ObjectReference;
  readonly TypedLinkFacet: TypedLinkSchemaAndFacetName;
  readonly Attributes: [];
}

export interface BatchAttachTypedLinkResponse {
  readonly TypedLinkSpecifier?: TypedLinkSpecifier;
}

export interface BatchCreateIndex {
  readonly OrderedIndexedAttributeList: [];
  readonly IsUnique: boolean;
  readonly ParentReference?: ObjectReference;
  readonly LinkName?: string;
  readonly BatchReferenceName?: string;
}

export interface BatchCreateIndexResponse {
  readonly ObjectIdentifier?: string;
}

export interface BatchCreateObject {
  readonly SchemaFacet: [];
  readonly ObjectAttributeList: [];
  readonly ParentReference?: ObjectReference;
  readonly LinkName?: string;
  readonly BatchReferenceName?: string;
}

export interface BatchCreateObjectResponse {
  readonly ObjectIdentifier?: string;
}

export interface BatchDeleteObject {
  readonly ObjectReference: ObjectReference;
}

export interface BatchDeleteObjectResponse {
}

export interface BatchDetachFromIndex {
  readonly IndexReference: ObjectReference;
  readonly TargetReference: ObjectReference;
}

export interface BatchDetachFromIndexResponse {
  readonly DetachedObjectIdentifier?: string;
}

export interface BatchDetachObject {
  readonly ParentReference: ObjectReference;
  readonly LinkName: string;
  readonly BatchReferenceName?: string;
}

export interface BatchDetachObjectResponse {
  readonly detachedObjectIdentifier?: string;
}

export interface BatchDetachPolicy {
  readonly PolicyReference: ObjectReference;
  readonly ObjectReference: ObjectReference;
}

export interface BatchDetachPolicyResponse {
}

export interface BatchDetachTypedLink {
  readonly TypedLinkSpecifier: TypedLinkSpecifier;
}

export interface BatchDetachTypedLinkResponse {
}

export interface BatchGetLinkAttributes {
  readonly TypedLinkSpecifier: TypedLinkSpecifier;
  readonly AttributeNames: [];
}

export interface BatchGetLinkAttributesResponse {
  readonly Attributes?: [];
}

export interface BatchGetObjectAttributes {
  readonly ObjectReference: ObjectReference;
  readonly SchemaFacet: SchemaFacet;
  readonly AttributeNames: [];
}

export interface BatchGetObjectAttributesResponse {
  readonly Attributes?: [];
}

export interface BatchGetObjectInformation {
  readonly ObjectReference: ObjectReference;
}

export interface BatchGetObjectInformationResponse {
  readonly SchemaFacets?: [];
  readonly ObjectIdentifier?: string;
}

export interface BatchListAttachedIndices {
  readonly TargetReference: ObjectReference;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface BatchListAttachedIndicesResponse {
  readonly IndexAttachments?: [];
  readonly NextToken?: string;
}

export interface BatchListIncomingTypedLinks {
  readonly ObjectReference: ObjectReference;
  readonly FilterAttributeRanges?: [];
  readonly FilterTypedLink?: TypedLinkSchemaAndFacetName;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface BatchListIncomingTypedLinksResponse {
  readonly LinkSpecifiers?: [];
  readonly NextToken?: string;
}

export interface BatchListIndex {
  readonly RangesOnIndexedValues?: [];
  readonly IndexReference: ObjectReference;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface BatchListIndexResponse {
  readonly IndexAttachments?: [];
  readonly NextToken?: string;
}

export interface BatchListObjectAttributes {
  readonly ObjectReference: ObjectReference;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly FacetFilter?: SchemaFacet;
}

export interface BatchListObjectAttributesResponse {
  readonly Attributes?: [];
  readonly NextToken?: string;
}

export interface BatchListObjectChildren {
  readonly ObjectReference: ObjectReference;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface BatchListObjectChildrenResponse {
  readonly Children?: {[key: string]: any};
  readonly NextToken?: string;
}

export interface BatchListObjectParentPaths {
  readonly ObjectReference: ObjectReference;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface BatchListObjectParentPathsResponse {
  readonly PathToObjectIdentifiersList?: [];
  readonly NextToken?: string;
}

export interface BatchListObjectParents {
  readonly ObjectReference: ObjectReference;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface BatchListObjectParentsResponse {
  readonly ParentLinks?: [];
  readonly NextToken?: string;
}

export interface BatchListObjectPolicies {
  readonly ObjectReference: ObjectReference;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface BatchListObjectPoliciesResponse {
  readonly AttachedPolicyIds?: [];
  readonly NextToken?: string;
}

export interface BatchListOutgoingTypedLinks {
  readonly ObjectReference: ObjectReference;
  readonly FilterAttributeRanges?: [];
  readonly FilterTypedLink?: TypedLinkSchemaAndFacetName;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface BatchListOutgoingTypedLinksResponse {
  readonly TypedLinkSpecifiers?: [];
  readonly NextToken?: string;
}

export interface BatchListPolicyAttachments {
  readonly PolicyReference: ObjectReference;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface BatchListPolicyAttachmentsResponse {
  readonly ObjectIdentifiers?: [];
  readonly NextToken?: string;
}

export interface BatchLookupPolicy {
  readonly ObjectReference: ObjectReference;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface BatchLookupPolicyResponse {
  readonly PolicyToPathList?: [];
  readonly NextToken?: string;
}

export interface BatchReadException {
  readonly Type?: string;
  readonly Message?: string;
}

export interface BatchReadOperation {
  readonly ListObjectAttributes?: BatchListObjectAttributes;
  readonly ListObjectChildren?: BatchListObjectChildren;
  readonly ListAttachedIndices?: BatchListAttachedIndices;
  readonly ListObjectParentPaths?: BatchListObjectParentPaths;
  readonly GetObjectInformation?: BatchGetObjectInformation;
  readonly GetObjectAttributes?: BatchGetObjectAttributes;
  readonly ListObjectParents?: BatchListObjectParents;
  readonly ListObjectPolicies?: BatchListObjectPolicies;
  readonly ListPolicyAttachments?: BatchListPolicyAttachments;
  readonly LookupPolicy?: BatchLookupPolicy;
  readonly ListIndex?: BatchListIndex;
  readonly ListOutgoingTypedLinks?: BatchListOutgoingTypedLinks;
  readonly ListIncomingTypedLinks?: BatchListIncomingTypedLinks;
  readonly GetLinkAttributes?: BatchGetLinkAttributes;
}

export interface BatchReadOperationResponse {
  readonly SuccessfulResponse?: BatchReadSuccessfulResponse;
  readonly ExceptionResponse?: BatchReadException;
}

export interface BatchReadRequest {
  readonly DirectoryArn: string;
  readonly Operations: [];
  readonly ConsistencyLevel?: string;
}

export interface BatchReadResponse {
  readonly Responses?: [];
}

export interface BatchReadSuccessfulResponse {
  readonly ListObjectAttributes?: BatchListObjectAttributesResponse;
  readonly ListObjectChildren?: BatchListObjectChildrenResponse;
  readonly GetObjectInformation?: BatchGetObjectInformationResponse;
  readonly GetObjectAttributes?: BatchGetObjectAttributesResponse;
  readonly ListAttachedIndices?: BatchListAttachedIndicesResponse;
  readonly ListObjectParentPaths?: BatchListObjectParentPathsResponse;
  readonly ListObjectPolicies?: BatchListObjectPoliciesResponse;
  readonly ListPolicyAttachments?: BatchListPolicyAttachmentsResponse;
  readonly LookupPolicy?: BatchLookupPolicyResponse;
  readonly ListIndex?: BatchListIndexResponse;
  readonly ListOutgoingTypedLinks?: BatchListOutgoingTypedLinksResponse;
  readonly ListIncomingTypedLinks?: BatchListIncomingTypedLinksResponse;
  readonly GetLinkAttributes?: BatchGetLinkAttributesResponse;
  readonly ListObjectParents?: BatchListObjectParentsResponse;
}

export interface BatchRemoveFacetFromObject {
  readonly SchemaFacet: SchemaFacet;
  readonly ObjectReference: ObjectReference;
}

export interface BatchRemoveFacetFromObjectResponse {
}

export interface BatchUpdateLinkAttributes {
  readonly TypedLinkSpecifier: TypedLinkSpecifier;
  readonly AttributeUpdates: [];
}

export interface BatchUpdateLinkAttributesResponse {
}

export interface BatchUpdateObjectAttributes {
  readonly ObjectReference: ObjectReference;
  readonly AttributeUpdates: [];
}

export interface BatchUpdateObjectAttributesResponse {
  readonly ObjectIdentifier?: string;
}

export interface BatchWriteException {
  readonly Index?: number;
  readonly Type?: string;
  readonly Message?: string;
}

export interface BatchWriteOperation {
  readonly CreateObject?: BatchCreateObject;
  readonly AttachObject?: BatchAttachObject;
  readonly DetachObject?: BatchDetachObject;
  readonly UpdateObjectAttributes?: BatchUpdateObjectAttributes;
  readonly DeleteObject?: BatchDeleteObject;
  readonly AddFacetToObject?: BatchAddFacetToObject;
  readonly RemoveFacetFromObject?: BatchRemoveFacetFromObject;
  readonly AttachPolicy?: BatchAttachPolicy;
  readonly DetachPolicy?: BatchDetachPolicy;
  readonly CreateIndex?: BatchCreateIndex;
  readonly AttachToIndex?: BatchAttachToIndex;
  readonly DetachFromIndex?: BatchDetachFromIndex;
  readonly AttachTypedLink?: BatchAttachTypedLink;
  readonly DetachTypedLink?: BatchDetachTypedLink;
  readonly UpdateLinkAttributes?: BatchUpdateLinkAttributes;
}

export interface BatchWriteOperationResponse {
  readonly CreateObject?: BatchCreateObjectResponse;
  readonly AttachObject?: BatchAttachObjectResponse;
  readonly DetachObject?: BatchDetachObjectResponse;
  readonly UpdateObjectAttributes?: BatchUpdateObjectAttributesResponse;
  readonly DeleteObject?: BatchDeleteObjectResponse;
  readonly AddFacetToObject?: BatchAddFacetToObjectResponse;
  readonly RemoveFacetFromObject?: BatchRemoveFacetFromObjectResponse;
  readonly AttachPolicy?: BatchAttachPolicyResponse;
  readonly DetachPolicy?: BatchDetachPolicyResponse;
  readonly CreateIndex?: BatchCreateIndexResponse;
  readonly AttachToIndex?: BatchAttachToIndexResponse;
  readonly DetachFromIndex?: BatchDetachFromIndexResponse;
  readonly AttachTypedLink?: BatchAttachTypedLinkResponse;
  readonly DetachTypedLink?: BatchDetachTypedLinkResponse;
  readonly UpdateLinkAttributes?: BatchUpdateLinkAttributesResponse;
}

export interface BatchWriteRequest {
  readonly DirectoryArn: string;
  readonly Operations: [];
}

export interface BatchWriteResponse {
  readonly Responses?: [];
}

export interface CannotListParentOfRootException {
  readonly Message?: string;
}

export interface CreateDirectoryRequest {
  readonly Name: string;
  readonly SchemaArn: string;
}

export interface CreateDirectoryResponse {
  readonly DirectoryArn: string;
  readonly Name: string;
  readonly ObjectIdentifier: string;
  readonly AppliedSchemaArn: string;
}

export interface CreateFacetRequest {
  readonly SchemaArn: string;
  readonly Name: string;
  readonly Attributes?: [];
  readonly ObjectType?: string;
  readonly FacetStyle?: string;
}

export interface CreateFacetResponse {
}

export interface CreateIndexRequest {
  readonly DirectoryArn: string;
  readonly OrderedIndexedAttributeList: [];
  readonly IsUnique: boolean;
  readonly ParentReference?: ObjectReference;
  readonly LinkName?: string;
}

export interface CreateIndexResponse {
  readonly ObjectIdentifier?: string;
}

export interface CreateObjectRequest {
  readonly DirectoryArn: string;
  readonly SchemaFacets: [];
  readonly ObjectAttributeList?: [];
  readonly ParentReference?: ObjectReference;
  readonly LinkName?: string;
}

export interface CreateObjectResponse {
  readonly ObjectIdentifier?: string;
}

export interface CreateSchemaRequest {
  readonly Name: string;
}

export interface CreateSchemaResponse {
  readonly SchemaArn?: string;
}

export interface CreateTypedLinkFacetRequest {
  readonly SchemaArn: string;
  readonly Facet: TypedLinkFacet;
}

export interface CreateTypedLinkFacetResponse {
}

export interface DeleteDirectoryRequest {
  readonly DirectoryArn: string;
}

export interface DeleteDirectoryResponse {
  readonly DirectoryArn: string;
}

export interface DeleteFacetRequest {
  readonly SchemaArn: string;
  readonly Name: string;
}

export interface DeleteFacetResponse {
}

export interface DeleteObjectRequest {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
}

export interface DeleteObjectResponse {
}

export interface DeleteSchemaRequest {
  readonly SchemaArn: string;
}

export interface DeleteSchemaResponse {
  readonly SchemaArn?: string;
}

export interface DeleteTypedLinkFacetRequest {
  readonly SchemaArn: string;
  readonly Name: string;
}

export interface DeleteTypedLinkFacetResponse {
}

export interface DetachFromIndexRequest {
  readonly DirectoryArn: string;
  readonly IndexReference: ObjectReference;
  readonly TargetReference: ObjectReference;
}

export interface DetachFromIndexResponse {
  readonly DetachedObjectIdentifier?: string;
}

export interface DetachObjectRequest {
  readonly DirectoryArn: string;
  readonly ParentReference: ObjectReference;
  readonly LinkName: string;
}

export interface DetachObjectResponse {
  readonly DetachedObjectIdentifier?: string;
}

export interface DetachPolicyRequest {
  readonly DirectoryArn: string;
  readonly PolicyReference: ObjectReference;
  readonly ObjectReference: ObjectReference;
}

export interface DetachPolicyResponse {
}

export interface DetachTypedLinkRequest {
  readonly DirectoryArn: string;
  readonly TypedLinkSpecifier: TypedLinkSpecifier;
}

export interface Directory {
  readonly Name?: string;
  readonly DirectoryArn?: string;
  readonly State?: string;
  readonly CreationDateTime?: Date;
}

export interface DirectoryAlreadyExistsException {
  readonly Message?: string;
}

export interface DirectoryDeletedException {
  readonly Message?: string;
}

export interface DirectoryNotDisabledException {
  readonly Message?: string;
}

export interface DirectoryNotEnabledException {
  readonly Message?: string;
}

export interface DisableDirectoryRequest {
  readonly DirectoryArn: string;
}

export interface DisableDirectoryResponse {
  readonly DirectoryArn: string;
}

export interface EnableDirectoryRequest {
  readonly DirectoryArn: string;
}

export interface EnableDirectoryResponse {
  readonly DirectoryArn: string;
}

export interface Facet {
  readonly Name?: string;
  readonly ObjectType?: string;
  readonly FacetStyle?: string;
}

export interface FacetAlreadyExistsException {
  readonly Message?: string;
}

export interface FacetAttribute {
  readonly Name: string;
  readonly AttributeDefinition?: FacetAttributeDefinition;
  readonly AttributeReference?: FacetAttributeReference;
  readonly RequiredBehavior?: string;
}

export interface FacetAttributeDefinition {
  readonly Type: string;
  readonly DefaultValue?: TypedAttributeValue;
  readonly IsImmutable?: boolean;
  readonly Rules?: {[key: string]: any};
}

export interface FacetAttributeReference {
  readonly TargetFacetName: string;
  readonly TargetAttributeName: string;
}

export interface FacetAttributeUpdate {
  readonly Attribute?: FacetAttribute;
  readonly Action?: string;
}

export interface FacetInUseException {
  readonly Message?: string;
}

export interface FacetNotFoundException {
  readonly Message?: string;
}

export interface FacetValidationException {
  readonly Message?: string;
}

export interface GetAppliedSchemaVersionRequest {
  readonly SchemaArn: string;
}

export interface GetAppliedSchemaVersionResponse {
  readonly AppliedSchemaArn?: string;
}

export interface GetDirectoryRequest {
  readonly DirectoryArn: string;
}

export interface GetDirectoryResponse {
  readonly Directory: Directory;
}

export interface GetFacetRequest {
  readonly SchemaArn: string;
  readonly Name: string;
}

export interface GetFacetResponse {
  readonly Facet?: Facet;
}

export interface GetLinkAttributesRequest {
  readonly DirectoryArn: string;
  readonly TypedLinkSpecifier: TypedLinkSpecifier;
  readonly AttributeNames: [];
  readonly ConsistencyLevel?: string;
}

export interface GetLinkAttributesResponse {
  readonly Attributes?: [];
}

export interface GetObjectAttributesRequest {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly ConsistencyLevel?: string;
  readonly SchemaFacet: SchemaFacet;
  readonly AttributeNames: [];
}

export interface GetObjectAttributesResponse {
  readonly Attributes?: [];
}

export interface GetObjectInformationRequest {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly ConsistencyLevel?: string;
}

export interface GetObjectInformationResponse {
  readonly SchemaFacets?: [];
  readonly ObjectIdentifier?: string;
}

export interface GetSchemaAsJsonRequest {
  readonly SchemaArn: string;
}

export interface GetSchemaAsJsonResponse {
  readonly Name?: string;
  readonly Document?: string;
}

export interface GetTypedLinkFacetInformationRequest {
  readonly SchemaArn: string;
  readonly Name: string;
}

export interface GetTypedLinkFacetInformationResponse {
  readonly IdentityAttributeOrder?: [];
}

export interface IncompatibleSchemaException {
  readonly Message?: string;
}

export interface IndexAttachment {
  readonly IndexedAttributes?: [];
  readonly ObjectIdentifier?: string;
}

export interface IndexedAttributeMissingException {
  readonly Message?: string;
}

export interface InternalServiceException {
  readonly Message?: string;
}

export interface InvalidArnException {
  readonly Message?: string;
}

export interface InvalidAttachmentException {
  readonly Message?: string;
}

export interface InvalidFacetUpdateException {
  readonly Message?: string;
}

export interface InvalidNextTokenException {
  readonly Message?: string;
}

export interface InvalidRuleException {
  readonly Message?: string;
}

export interface InvalidSchemaDocException {
  readonly Message?: string;
}

export interface InvalidTaggingRequestException {
  readonly Message?: string;
}

export interface LimitExceededException {
  readonly Message?: string;
}

export interface LinkAttributeAction {
  readonly AttributeActionType?: string;
  readonly AttributeUpdateValue?: TypedAttributeValue;
}

export interface LinkAttributeUpdate {
  readonly AttributeKey?: AttributeKey;
  readonly AttributeAction?: LinkAttributeAction;
}

export interface LinkNameAlreadyInUseException {
  readonly Message?: string;
}

export interface ListAppliedSchemaArnsRequest {
  readonly DirectoryArn: string;
  readonly SchemaArn?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListAppliedSchemaArnsResponse {
  readonly SchemaArns?: [];
  readonly NextToken?: string;
}

export interface ListAttachedIndicesRequest {
  readonly DirectoryArn: string;
  readonly TargetReference: ObjectReference;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly ConsistencyLevel?: string;
}

export interface ListAttachedIndicesResponse {
  readonly IndexAttachments?: [];
  readonly NextToken?: string;
}

export interface ListDevelopmentSchemaArnsRequest {
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListDevelopmentSchemaArnsResponse {
  readonly SchemaArns?: [];
  readonly NextToken?: string;
}

export interface ListDirectoriesRequest {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly state?: string;
}

export interface ListDirectoriesResponse {
  readonly Directories: [];
  readonly NextToken?: string;
}

export interface ListFacetAttributesRequest {
  readonly SchemaArn: string;
  readonly Name: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListFacetAttributesResponse {
  readonly Attributes?: [];
  readonly NextToken?: string;
}

export interface ListFacetNamesRequest {
  readonly SchemaArn: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListFacetNamesResponse {
  readonly FacetNames?: [];
  readonly NextToken?: string;
}

export interface ListIncomingTypedLinksRequest {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly FilterAttributeRanges?: [];
  readonly FilterTypedLink?: TypedLinkSchemaAndFacetName;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly ConsistencyLevel?: string;
}

export interface ListIncomingTypedLinksResponse {
  readonly LinkSpecifiers?: [];
  readonly NextToken?: string;
}

export interface ListIndexRequest {
  readonly DirectoryArn: string;
  readonly RangesOnIndexedValues?: [];
  readonly IndexReference: ObjectReference;
  readonly MaxResults?: number;
  readonly NextToken?: string;
  readonly ConsistencyLevel?: string;
}

export interface ListIndexResponse {
  readonly IndexAttachments?: [];
  readonly NextToken?: string;
}

export interface ListManagedSchemaArnsRequest {
  readonly SchemaArn?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListManagedSchemaArnsResponse {
  readonly SchemaArns?: [];
  readonly NextToken?: string;
}

export interface ListObjectAttributesRequest {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly ConsistencyLevel?: string;
  readonly FacetFilter?: SchemaFacet;
}

export interface ListObjectAttributesResponse {
  readonly Attributes?: [];
  readonly NextToken?: string;
}

export interface ListObjectChildrenRequest {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly ConsistencyLevel?: string;
}

export interface ListObjectChildrenResponse {
  readonly Children?: {[key: string]: any};
  readonly NextToken?: string;
}

export interface ListObjectParentPathsRequest {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListObjectParentPathsResponse {
  readonly PathToObjectIdentifiersList?: [];
  readonly NextToken?: string;
}

export interface ListObjectParentsRequest {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly ConsistencyLevel?: string;
  readonly IncludeAllLinksToEachParent?: boolean;
}

export interface ListObjectParentsResponse {
  readonly Parents?: {[key: string]: any};
  readonly NextToken?: string;
  readonly ParentLinks?: [];
}

export interface ListObjectPoliciesRequest {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly ConsistencyLevel?: string;
}

export interface ListObjectPoliciesResponse {
  readonly AttachedPolicyIds?: [];
  readonly NextToken?: string;
}

export interface ListOutgoingTypedLinksRequest {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly FilterAttributeRanges?: [];
  readonly FilterTypedLink?: TypedLinkSchemaAndFacetName;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly ConsistencyLevel?: string;
}

export interface ListOutgoingTypedLinksResponse {
  readonly TypedLinkSpecifiers?: [];
  readonly NextToken?: string;
}

export interface ListPolicyAttachmentsRequest {
  readonly DirectoryArn: string;
  readonly PolicyReference: ObjectReference;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly ConsistencyLevel?: string;
}

export interface ListPolicyAttachmentsResponse {
  readonly ObjectIdentifiers?: [];
  readonly NextToken?: string;
}

export interface ListPublishedSchemaArnsRequest {
  readonly SchemaArn?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListPublishedSchemaArnsResponse {
  readonly SchemaArns?: [];
  readonly NextToken?: string;
}

export interface ListTagsForResourceRequest {
  readonly ResourceArn: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListTagsForResourceResponse {
  readonly Tags?: [];
  readonly NextToken?: string;
}

export interface ListTypedLinkFacetAttributesRequest {
  readonly SchemaArn: string;
  readonly Name: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListTypedLinkFacetAttributesResponse {
  readonly Attributes?: [];
  readonly NextToken?: string;
}

export interface ListTypedLinkFacetNamesRequest {
  readonly SchemaArn: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListTypedLinkFacetNamesResponse {
  readonly FacetNames?: [];
  readonly NextToken?: string;
}

export interface LookupPolicyRequest {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface LookupPolicyResponse {
  readonly PolicyToPathList?: [];
  readonly NextToken?: string;
}

export interface NotIndexException {
  readonly Message?: string;
}

export interface NotNodeException {
  readonly Message?: string;
}

export interface NotPolicyException {
  readonly Message?: string;
}

export interface ObjectAlreadyDetachedException {
  readonly Message?: string;
}

export interface ObjectAttributeAction {
  readonly ObjectAttributeActionType?: string;
  readonly ObjectAttributeUpdateValue?: TypedAttributeValue;
}

export interface ObjectAttributeRange {
  readonly AttributeKey?: AttributeKey;
  readonly Range?: TypedAttributeValueRange;
}

export interface ObjectAttributeUpdate {
  readonly ObjectAttributeKey?: AttributeKey;
  readonly ObjectAttributeAction?: ObjectAttributeAction;
}

export interface ObjectIdentifierAndLinkNameTuple {
  readonly ObjectIdentifier?: string;
  readonly LinkName?: string;
}

export interface ObjectNotDetachedException {
  readonly Message?: string;
}

export interface ObjectReference {
  readonly Selector?: string;
}

export interface PathToObjectIdentifiers {
  readonly Path?: string;
  readonly ObjectIdentifiers?: [];
}

export interface PolicyAttachment {
  readonly PolicyId?: string;
  readonly ObjectIdentifier?: string;
  readonly PolicyType?: string;
}

export interface PolicyToPath {
  readonly Path?: string;
  readonly Policies?: [];
}

export interface PublishSchemaRequest {
  readonly DevelopmentSchemaArn: string;
  readonly Version: string;
  readonly MinorVersion?: string;
  readonly Name?: string;
}

export interface PublishSchemaResponse {
  readonly PublishedSchemaArn?: string;
}

export interface PutSchemaFromJsonRequest {
  readonly SchemaArn: string;
  readonly Document: string;
}

export interface PutSchemaFromJsonResponse {
  readonly Arn?: string;
}

export interface RemoveFacetFromObjectRequest {
  readonly DirectoryArn: string;
  readonly SchemaFacet: SchemaFacet;
  readonly ObjectReference: ObjectReference;
}

export interface RemoveFacetFromObjectResponse {
}

export interface ResourceNotFoundException {
  readonly Message?: string;
}

export interface RetryableConflictException {
  readonly Message?: string;
}

export interface Rule {
  readonly Type?: string;
  readonly Parameters?: {[key: string]: any};
}

export interface SchemaAlreadyExistsException {
  readonly Message?: string;
}

export interface SchemaAlreadyPublishedException {
  readonly Message?: string;
}

export interface SchemaFacet {
  readonly SchemaArn?: string;
  readonly FacetName?: string;
}

export interface StillContainsLinksException {
  readonly Message?: string;
}

export interface Tag {
  readonly Key?: string;
  readonly Value?: string;
}

export interface TagResourceRequest {
  readonly ResourceArn: string;
  readonly Tags: [];
}

export interface TagResourceResponse {
}

export interface TypedAttributeValue {
  readonly StringValue?: string;
  readonly BinaryValue?: unknown;
  readonly BooleanValue?: boolean;
  readonly NumberValue?: string;
  readonly DatetimeValue?: Date;
}

export interface TypedAttributeValueRange {
  readonly StartMode: string;
  readonly StartValue?: TypedAttributeValue;
  readonly EndMode: string;
  readonly EndValue?: TypedAttributeValue;
}

export interface TypedLinkAttributeDefinition {
  readonly Name: string;
  readonly Type: string;
  readonly DefaultValue?: TypedAttributeValue;
  readonly IsImmutable?: boolean;
  readonly Rules?: {[key: string]: any};
  readonly RequiredBehavior: string;
}

export interface TypedLinkAttributeRange {
  readonly AttributeName?: string;
  readonly Range: TypedAttributeValueRange;
}

export interface TypedLinkFacet {
  readonly Name: string;
  readonly Attributes: [];
  readonly IdentityAttributeOrder: [];
}

export interface TypedLinkFacetAttributeUpdate {
  readonly Attribute: TypedLinkAttributeDefinition;
  readonly Action: string;
}

export interface TypedLinkSchemaAndFacetName {
  readonly SchemaArn: string;
  readonly TypedLinkName: string;
}

export interface TypedLinkSpecifier {
  readonly TypedLinkFacet: TypedLinkSchemaAndFacetName;
  readonly SourceObjectReference: ObjectReference;
  readonly TargetObjectReference: ObjectReference;
  readonly IdentityAttributeValues: [];
}

export interface UnsupportedIndexTypeException {
  readonly Message?: string;
}

export interface UntagResourceRequest {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}

export interface UntagResourceResponse {
}

export interface UpdateFacetRequest {
  readonly SchemaArn: string;
  readonly Name: string;
  readonly AttributeUpdates?: [];
  readonly ObjectType?: string;
}

export interface UpdateFacetResponse {
}

export interface UpdateLinkAttributesRequest {
  readonly DirectoryArn: string;
  readonly TypedLinkSpecifier: TypedLinkSpecifier;
  readonly AttributeUpdates: [];
}

export interface UpdateLinkAttributesResponse {
}

export interface UpdateObjectAttributesRequest {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly AttributeUpdates: [];
}

export interface UpdateObjectAttributesResponse {
  readonly ObjectIdentifier?: string;
}

export interface UpdateSchemaRequest {
  readonly SchemaArn: string;
  readonly Name: string;
}

export interface UpdateSchemaResponse {
  readonly SchemaArn?: string;
}

export interface UpdateTypedLinkFacetRequest {
  readonly SchemaArn: string;
  readonly Name: string;
  readonly AttributeUpdates: [];
  readonly IdentityAttributeOrder: [];
}

export interface UpdateTypedLinkFacetResponse {
}

export interface UpgradeAppliedSchemaRequest {
  readonly PublishedSchemaArn: string;
  readonly DirectoryArn: string;
  readonly DryRun?: boolean;
}

export interface UpgradeAppliedSchemaResponse {
  readonly UpgradedSchemaArn?: string;
  readonly DirectoryArn?: string;
}

export interface UpgradePublishedSchemaRequest {
  readonly DevelopmentSchemaArn: string;
  readonly PublishedSchemaArn: string;
  readonly MinorVersion: string;
  readonly DryRun?: boolean;
}

export interface UpgradePublishedSchemaResponse {
  readonly UpgradedSchemaArn?: string;
}

export interface ValidationException {
  readonly Message?: string;
}


