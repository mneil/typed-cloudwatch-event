/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AddFacetToObject {
  readonly DirectoryArn: string;
  readonly SchemaFacet: SchemaFacet;
  readonly ObjectAttributeList: [];
  readonly ObjectReference: ObjectReference;
}
export interface ApplySchema {
  readonly PublishedSchemaArn: string;
  readonly DirectoryArn: string;
}
export interface AttachObject {
  readonly DirectoryArn: string;
  readonly ParentReference: ObjectReference;
  readonly ChildReference: ObjectReference;
  readonly LinkName: string;
}
export interface AttachPolicy {
  readonly DirectoryArn: string;
  readonly PolicyReference: ObjectReference;
  readonly ObjectReference: ObjectReference;
}
export interface AttachToIndex {
  readonly DirectoryArn: string;
  readonly IndexReference: ObjectReference;
  readonly TargetReference: ObjectReference;
}
export interface AttachTypedLink {
  readonly DirectoryArn: string;
  readonly SourceObjectReference: ObjectReference;
  readonly TargetObjectReference: ObjectReference;
  readonly TypedLinkFacet: TypedLinkSchemaAndFacetName;
  readonly Attributes: [];
}
export interface BatchRead {
  readonly DirectoryArn: string;
  readonly Operations: [];
  readonly ConsistencyLevel: string;
}
export interface BatchWrite {
  readonly DirectoryArn: string;
  readonly Operations: [];
}
export interface CreateDirectory {
  readonly Name: string;
  readonly SchemaArn: string;
}
export interface CreateFacet {
  readonly SchemaArn: string;
  readonly Name: string;
  readonly Attributes: [];
  readonly ObjectType: string;
  readonly FacetStyle: string;
}
export interface CreateIndex {
  readonly DirectoryArn: string;
  readonly OrderedIndexedAttributeList: [];
  readonly IsUnique: boolean;
  readonly ParentReference: ObjectReference;
  readonly LinkName: string;
}
export interface CreateObject {
  readonly DirectoryArn: string;
  readonly SchemaFacets: [];
  readonly ObjectAttributeList: [];
  readonly ParentReference: ObjectReference;
  readonly LinkName: string;
}
export interface CreateSchema {
  readonly Name: string;
}
export interface CreateTypedLinkFacet {
  readonly SchemaArn: string;
  readonly Facet: TypedLinkFacet;
}
export interface DeleteDirectory {
  readonly DirectoryArn: string;
}
export interface DeleteFacet {
  readonly SchemaArn: string;
  readonly Name: string;
}
export interface DeleteObject {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
}
export interface DeleteSchema {
  readonly SchemaArn: string;
}
export interface DeleteTypedLinkFacet {
  readonly SchemaArn: string;
  readonly Name: string;
}
export interface DetachFromIndex {
  readonly DirectoryArn: string;
  readonly IndexReference: ObjectReference;
  readonly TargetReference: ObjectReference;
}
export interface DetachObject {
  readonly DirectoryArn: string;
  readonly ParentReference: ObjectReference;
  readonly LinkName: string;
}
export interface DetachPolicy {
  readonly DirectoryArn: string;
  readonly PolicyReference: ObjectReference;
  readonly ObjectReference: ObjectReference;
}
export interface DetachTypedLink {
  readonly DirectoryArn: string;
  readonly TypedLinkSpecifier: TypedLinkSpecifier;
}
export interface DisableDirectory {
  readonly DirectoryArn: string;
}
export interface EnableDirectory {
  readonly DirectoryArn: string;
}
export interface GetAppliedSchemaVersion {
  readonly SchemaArn: string;
}
export interface GetDirectory {
  readonly DirectoryArn: string;
}
export interface GetFacet {
  readonly SchemaArn: string;
  readonly Name: string;
}
export interface GetLinkAttributes {
  readonly DirectoryArn: string;
  readonly TypedLinkSpecifier: TypedLinkSpecifier;
  readonly AttributeNames: [];
  readonly ConsistencyLevel: string;
}
export interface GetObjectAttributes {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly ConsistencyLevel: string;
  readonly SchemaFacet: SchemaFacet;
  readonly AttributeNames: [];
}
export interface GetObjectInformation {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly ConsistencyLevel: string;
}
export interface GetSchemaAsJson {
  readonly SchemaArn: string;
}
export interface GetTypedLinkFacetInformation {
  readonly SchemaArn: string;
  readonly Name: string;
}
export interface ListAppliedSchemaArns {
  readonly DirectoryArn: string;
  readonly SchemaArn: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListAttachedIndices {
  readonly DirectoryArn: string;
  readonly TargetReference: ObjectReference;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly ConsistencyLevel: string;
}
export interface ListDevelopmentSchemaArns {
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListDirectories {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly state: string;
}
export interface ListFacetAttributes {
  readonly SchemaArn: string;
  readonly Name: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListFacetNames {
  readonly SchemaArn: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListIncomingTypedLinks {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly FilterAttributeRanges: [];
  readonly FilterTypedLink: TypedLinkSchemaAndFacetName;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly ConsistencyLevel: string;
}
export interface ListIndex {
  readonly DirectoryArn: string;
  readonly RangesOnIndexedValues: [];
  readonly IndexReference: ObjectReference;
  readonly MaxResults: number;
  readonly NextToken: string;
  readonly ConsistencyLevel: string;
}
export interface ListManagedSchemaArns {
  readonly SchemaArn: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListObjectAttributes {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly ConsistencyLevel: string;
  readonly FacetFilter: SchemaFacet;
}
export interface ListObjectChildren {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly ConsistencyLevel: string;
}
export interface ListObjectParentPaths {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListObjectParents {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly ConsistencyLevel: string;
  readonly IncludeAllLinksToEachParent: boolean;
}
export interface ListObjectPolicies {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly ConsistencyLevel: string;
}
export interface ListOutgoingTypedLinks {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly FilterAttributeRanges: [];
  readonly FilterTypedLink: TypedLinkSchemaAndFacetName;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly ConsistencyLevel: string;
}
export interface ListPolicyAttachments {
  readonly DirectoryArn: string;
  readonly PolicyReference: ObjectReference;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly ConsistencyLevel: string;
}
export interface ListPublishedSchemaArns {
  readonly SchemaArn: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListTagsForResource {
  readonly ResourceArn: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListTypedLinkFacetAttributes {
  readonly SchemaArn: string;
  readonly Name: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListTypedLinkFacetNames {
  readonly SchemaArn: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface LookupPolicy {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface PublishSchema {
  readonly DevelopmentSchemaArn: string;
  readonly Version: string;
  readonly MinorVersion: string;
  readonly Name: string;
}
export interface PutSchemaFromJson {
  readonly SchemaArn: string;
  readonly Document: string;
}
export interface RemoveFacetFromObject {
  readonly DirectoryArn: string;
  readonly SchemaFacet: SchemaFacet;
  readonly ObjectReference: ObjectReference;
}
export interface TagResource {
  readonly ResourceArn: string;
  readonly Tags: [];
}
export interface UntagResource {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}
export interface UpdateFacet {
  readonly SchemaArn: string;
  readonly Name: string;
  readonly AttributeUpdates: [];
  readonly ObjectType: string;
}
export interface UpdateLinkAttributes {
  readonly DirectoryArn: string;
  readonly TypedLinkSpecifier: TypedLinkSpecifier;
  readonly AttributeUpdates: [];
}
export interface UpdateObjectAttributes {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly AttributeUpdates: [];
}
export interface UpdateSchema {
  readonly SchemaArn: string;
  readonly Name: string;
}
export interface UpdateTypedLinkFacet {
  readonly SchemaArn: string;
  readonly Name: string;
  readonly AttributeUpdates: [];
  readonly IdentityAttributeOrder: [];
}
export interface UpgradeAppliedSchema {
  readonly PublishedSchemaArn: string;
  readonly DirectoryArn: string;
  readonly DryRun: boolean;
}
export interface UpgradePublishedSchema {
  readonly DevelopmentSchemaArn: string;
  readonly PublishedSchemaArn: string;
  readonly MinorVersion: string;
  readonly DryRun: boolean;
}



interface AccessDeniedException {
  readonly Message: string;
}

interface AddFacetToObjectRequest {
  readonly DirectoryArn: string;
  readonly SchemaFacet: SchemaFacet;
  readonly ObjectAttributeList: [];
  readonly ObjectReference: ObjectReference;
}

interface AddFacetToObjectResponse {
}

interface ApplySchemaRequest {
  readonly PublishedSchemaArn: string;
  readonly DirectoryArn: string;
}

interface ApplySchemaResponse {
  readonly AppliedSchemaArn: string;
  readonly DirectoryArn: string;
}

interface AttachObjectRequest {
  readonly DirectoryArn: string;
  readonly ParentReference: ObjectReference;
  readonly ChildReference: ObjectReference;
  readonly LinkName: string;
}

interface AttachObjectResponse {
  readonly AttachedObjectIdentifier: string;
}

interface AttachPolicyRequest {
  readonly DirectoryArn: string;
  readonly PolicyReference: ObjectReference;
  readonly ObjectReference: ObjectReference;
}

interface AttachPolicyResponse {
}

interface AttachToIndexRequest {
  readonly DirectoryArn: string;
  readonly IndexReference: ObjectReference;
  readonly TargetReference: ObjectReference;
}

interface AttachToIndexResponse {
  readonly AttachedObjectIdentifier: string;
}

interface AttachTypedLinkRequest {
  readonly DirectoryArn: string;
  readonly SourceObjectReference: ObjectReference;
  readonly TargetObjectReference: ObjectReference;
  readonly TypedLinkFacet: TypedLinkSchemaAndFacetName;
  readonly Attributes: [];
}

interface AttachTypedLinkResponse {
  readonly TypedLinkSpecifier: TypedLinkSpecifier;
}

interface AttributeKey {
  readonly SchemaArn: string;
  readonly FacetName: string;
  readonly Name: string;
}

interface AttributeKeyAndValue {
  readonly Key: AttributeKey;
  readonly Value: TypedAttributeValue;
}

interface AttributeNameAndValue {
  readonly AttributeName: string;
  readonly Value: TypedAttributeValue;
}

interface BatchAddFacetToObject {
  readonly SchemaFacet: SchemaFacet;
  readonly ObjectAttributeList: [];
  readonly ObjectReference: ObjectReference;
}

interface BatchAddFacetToObjectResponse {
}

interface BatchAttachObject {
  readonly ParentReference: ObjectReference;
  readonly ChildReference: ObjectReference;
  readonly LinkName: string;
}

interface BatchAttachObjectResponse {
  readonly attachedObjectIdentifier: string;
}

interface BatchAttachPolicy {
  readonly PolicyReference: ObjectReference;
  readonly ObjectReference: ObjectReference;
}

interface BatchAttachPolicyResponse {
}

interface BatchAttachToIndex {
  readonly IndexReference: ObjectReference;
  readonly TargetReference: ObjectReference;
}

interface BatchAttachToIndexResponse {
  readonly AttachedObjectIdentifier: string;
}

interface BatchAttachTypedLink {
  readonly SourceObjectReference: ObjectReference;
  readonly TargetObjectReference: ObjectReference;
  readonly TypedLinkFacet: TypedLinkSchemaAndFacetName;
  readonly Attributes: [];
}

interface BatchAttachTypedLinkResponse {
  readonly TypedLinkSpecifier: TypedLinkSpecifier;
}

interface BatchCreateIndex {
  readonly OrderedIndexedAttributeList: [];
  readonly IsUnique: boolean;
  readonly ParentReference: ObjectReference;
  readonly LinkName: string;
  readonly BatchReferenceName: string;
}

interface BatchCreateIndexResponse {
  readonly ObjectIdentifier: string;
}

interface BatchCreateObject {
  readonly SchemaFacet: [];
  readonly ObjectAttributeList: [];
  readonly ParentReference: ObjectReference;
  readonly LinkName: string;
  readonly BatchReferenceName: string;
}

interface BatchCreateObjectResponse {
  readonly ObjectIdentifier: string;
}

interface BatchDeleteObject {
  readonly ObjectReference: ObjectReference;
}

interface BatchDeleteObjectResponse {
}

interface BatchDetachFromIndex {
  readonly IndexReference: ObjectReference;
  readonly TargetReference: ObjectReference;
}

interface BatchDetachFromIndexResponse {
  readonly DetachedObjectIdentifier: string;
}

interface BatchDetachObject {
  readonly ParentReference: ObjectReference;
  readonly LinkName: string;
  readonly BatchReferenceName: string;
}

interface BatchDetachObjectResponse {
  readonly detachedObjectIdentifier: string;
}

interface BatchDetachPolicy {
  readonly PolicyReference: ObjectReference;
  readonly ObjectReference: ObjectReference;
}

interface BatchDetachPolicyResponse {
}

interface BatchDetachTypedLink {
  readonly TypedLinkSpecifier: TypedLinkSpecifier;
}

interface BatchDetachTypedLinkResponse {
}

interface BatchGetLinkAttributes {
  readonly TypedLinkSpecifier: TypedLinkSpecifier;
  readonly AttributeNames: [];
}

interface BatchGetLinkAttributesResponse {
  readonly Attributes: [];
}

interface BatchGetObjectAttributes {
  readonly ObjectReference: ObjectReference;
  readonly SchemaFacet: SchemaFacet;
  readonly AttributeNames: [];
}

interface BatchGetObjectAttributesResponse {
  readonly Attributes: [];
}

interface BatchGetObjectInformation {
  readonly ObjectReference: ObjectReference;
}

interface BatchGetObjectInformationResponse {
  readonly SchemaFacets: [];
  readonly ObjectIdentifier: string;
}

interface BatchListAttachedIndices {
  readonly TargetReference: ObjectReference;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface BatchListAttachedIndicesResponse {
  readonly IndexAttachments: [];
  readonly NextToken: string;
}

interface BatchListIncomingTypedLinks {
  readonly ObjectReference: ObjectReference;
  readonly FilterAttributeRanges: [];
  readonly FilterTypedLink: TypedLinkSchemaAndFacetName;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface BatchListIncomingTypedLinksResponse {
  readonly LinkSpecifiers: [];
  readonly NextToken: string;
}

interface BatchListIndex {
  readonly RangesOnIndexedValues: [];
  readonly IndexReference: ObjectReference;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface BatchListIndexResponse {
  readonly IndexAttachments: [];
  readonly NextToken: string;
}

interface BatchListObjectAttributes {
  readonly ObjectReference: ObjectReference;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly FacetFilter: SchemaFacet;
}

interface BatchListObjectAttributesResponse {
  readonly Attributes: [];
  readonly NextToken: string;
}

interface BatchListObjectChildren {
  readonly ObjectReference: ObjectReference;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface BatchListObjectChildrenResponse {
  readonly Children: {[key: string]: any};
  readonly NextToken: string;
}

interface BatchListObjectParentPaths {
  readonly ObjectReference: ObjectReference;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface BatchListObjectParentPathsResponse {
  readonly PathToObjectIdentifiersList: [];
  readonly NextToken: string;
}

interface BatchListObjectParents {
  readonly ObjectReference: ObjectReference;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface BatchListObjectParentsResponse {
  readonly ParentLinks: [];
  readonly NextToken: string;
}

interface BatchListObjectPolicies {
  readonly ObjectReference: ObjectReference;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface BatchListObjectPoliciesResponse {
  readonly AttachedPolicyIds: [];
  readonly NextToken: string;
}

interface BatchListOutgoingTypedLinks {
  readonly ObjectReference: ObjectReference;
  readonly FilterAttributeRanges: [];
  readonly FilterTypedLink: TypedLinkSchemaAndFacetName;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface BatchListOutgoingTypedLinksResponse {
  readonly TypedLinkSpecifiers: [];
  readonly NextToken: string;
}

interface BatchListPolicyAttachments {
  readonly PolicyReference: ObjectReference;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface BatchListPolicyAttachmentsResponse {
  readonly ObjectIdentifiers: [];
  readonly NextToken: string;
}

interface BatchLookupPolicy {
  readonly ObjectReference: ObjectReference;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface BatchLookupPolicyResponse {
  readonly PolicyToPathList: [];
  readonly NextToken: string;
}

interface BatchReadException {
  readonly Type: string;
  readonly Message: string;
}

interface BatchReadOperation {
  readonly ListObjectAttributes: BatchListObjectAttributes;
  readonly ListObjectChildren: BatchListObjectChildren;
  readonly ListAttachedIndices: BatchListAttachedIndices;
  readonly ListObjectParentPaths: BatchListObjectParentPaths;
  readonly GetObjectInformation: BatchGetObjectInformation;
  readonly GetObjectAttributes: BatchGetObjectAttributes;
  readonly ListObjectParents: BatchListObjectParents;
  readonly ListObjectPolicies: BatchListObjectPolicies;
  readonly ListPolicyAttachments: BatchListPolicyAttachments;
  readonly LookupPolicy: BatchLookupPolicy;
  readonly ListIndex: BatchListIndex;
  readonly ListOutgoingTypedLinks: BatchListOutgoingTypedLinks;
  readonly ListIncomingTypedLinks: BatchListIncomingTypedLinks;
  readonly GetLinkAttributes: BatchGetLinkAttributes;
}

interface BatchReadOperationResponse {
  readonly SuccessfulResponse: BatchReadSuccessfulResponse;
  readonly ExceptionResponse: BatchReadException;
}

interface BatchReadRequest {
  readonly DirectoryArn: string;
  readonly Operations: [];
  readonly ConsistencyLevel: string;
}

interface BatchReadResponse {
  readonly Responses: [];
}

interface BatchReadSuccessfulResponse {
  readonly ListObjectAttributes: BatchListObjectAttributesResponse;
  readonly ListObjectChildren: BatchListObjectChildrenResponse;
  readonly GetObjectInformation: BatchGetObjectInformationResponse;
  readonly GetObjectAttributes: BatchGetObjectAttributesResponse;
  readonly ListAttachedIndices: BatchListAttachedIndicesResponse;
  readonly ListObjectParentPaths: BatchListObjectParentPathsResponse;
  readonly ListObjectPolicies: BatchListObjectPoliciesResponse;
  readonly ListPolicyAttachments: BatchListPolicyAttachmentsResponse;
  readonly LookupPolicy: BatchLookupPolicyResponse;
  readonly ListIndex: BatchListIndexResponse;
  readonly ListOutgoingTypedLinks: BatchListOutgoingTypedLinksResponse;
  readonly ListIncomingTypedLinks: BatchListIncomingTypedLinksResponse;
  readonly GetLinkAttributes: BatchGetLinkAttributesResponse;
  readonly ListObjectParents: BatchListObjectParentsResponse;
}

interface BatchRemoveFacetFromObject {
  readonly SchemaFacet: SchemaFacet;
  readonly ObjectReference: ObjectReference;
}

interface BatchRemoveFacetFromObjectResponse {
}

interface BatchUpdateLinkAttributes {
  readonly TypedLinkSpecifier: TypedLinkSpecifier;
  readonly AttributeUpdates: [];
}

interface BatchUpdateLinkAttributesResponse {
}

interface BatchUpdateObjectAttributes {
  readonly ObjectReference: ObjectReference;
  readonly AttributeUpdates: [];
}

interface BatchUpdateObjectAttributesResponse {
  readonly ObjectIdentifier: string;
}

interface BatchWriteException {
  readonly Index: number;
  readonly Type: string;
  readonly Message: string;
}

interface BatchWriteOperation {
  readonly CreateObject: BatchCreateObject;
  readonly AttachObject: BatchAttachObject;
  readonly DetachObject: BatchDetachObject;
  readonly UpdateObjectAttributes: BatchUpdateObjectAttributes;
  readonly DeleteObject: BatchDeleteObject;
  readonly AddFacetToObject: BatchAddFacetToObject;
  readonly RemoveFacetFromObject: BatchRemoveFacetFromObject;
  readonly AttachPolicy: BatchAttachPolicy;
  readonly DetachPolicy: BatchDetachPolicy;
  readonly CreateIndex: BatchCreateIndex;
  readonly AttachToIndex: BatchAttachToIndex;
  readonly DetachFromIndex: BatchDetachFromIndex;
  readonly AttachTypedLink: BatchAttachTypedLink;
  readonly DetachTypedLink: BatchDetachTypedLink;
  readonly UpdateLinkAttributes: BatchUpdateLinkAttributes;
}

interface BatchWriteOperationResponse {
  readonly CreateObject: BatchCreateObjectResponse;
  readonly AttachObject: BatchAttachObjectResponse;
  readonly DetachObject: BatchDetachObjectResponse;
  readonly UpdateObjectAttributes: BatchUpdateObjectAttributesResponse;
  readonly DeleteObject: BatchDeleteObjectResponse;
  readonly AddFacetToObject: BatchAddFacetToObjectResponse;
  readonly RemoveFacetFromObject: BatchRemoveFacetFromObjectResponse;
  readonly AttachPolicy: BatchAttachPolicyResponse;
  readonly DetachPolicy: BatchDetachPolicyResponse;
  readonly CreateIndex: BatchCreateIndexResponse;
  readonly AttachToIndex: BatchAttachToIndexResponse;
  readonly DetachFromIndex: BatchDetachFromIndexResponse;
  readonly AttachTypedLink: BatchAttachTypedLinkResponse;
  readonly DetachTypedLink: BatchDetachTypedLinkResponse;
  readonly UpdateLinkAttributes: BatchUpdateLinkAttributesResponse;
}

interface BatchWriteRequest {
  readonly DirectoryArn: string;
  readonly Operations: [];
}

interface BatchWriteResponse {
  readonly Responses: [];
}

interface CannotListParentOfRootException {
  readonly Message: string;
}

interface CreateDirectoryRequest {
  readonly Name: string;
  readonly SchemaArn: string;
}

interface CreateDirectoryResponse {
  readonly DirectoryArn: string;
  readonly Name: string;
  readonly ObjectIdentifier: string;
  readonly AppliedSchemaArn: string;
}

interface CreateFacetRequest {
  readonly SchemaArn: string;
  readonly Name: string;
  readonly Attributes: [];
  readonly ObjectType: string;
  readonly FacetStyle: string;
}

interface CreateFacetResponse {
}

interface CreateIndexRequest {
  readonly DirectoryArn: string;
  readonly OrderedIndexedAttributeList: [];
  readonly IsUnique: boolean;
  readonly ParentReference: ObjectReference;
  readonly LinkName: string;
}

interface CreateIndexResponse {
  readonly ObjectIdentifier: string;
}

interface CreateObjectRequest {
  readonly DirectoryArn: string;
  readonly SchemaFacets: [];
  readonly ObjectAttributeList: [];
  readonly ParentReference: ObjectReference;
  readonly LinkName: string;
}

interface CreateObjectResponse {
  readonly ObjectIdentifier: string;
}

interface CreateSchemaRequest {
  readonly Name: string;
}

interface CreateSchemaResponse {
  readonly SchemaArn: string;
}

interface CreateTypedLinkFacetRequest {
  readonly SchemaArn: string;
  readonly Facet: TypedLinkFacet;
}

interface CreateTypedLinkFacetResponse {
}

interface DeleteDirectoryRequest {
  readonly DirectoryArn: string;
}

interface DeleteDirectoryResponse {
  readonly DirectoryArn: string;
}

interface DeleteFacetRequest {
  readonly SchemaArn: string;
  readonly Name: string;
}

interface DeleteFacetResponse {
}

interface DeleteObjectRequest {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
}

interface DeleteObjectResponse {
}

interface DeleteSchemaRequest {
  readonly SchemaArn: string;
}

interface DeleteSchemaResponse {
  readonly SchemaArn: string;
}

interface DeleteTypedLinkFacetRequest {
  readonly SchemaArn: string;
  readonly Name: string;
}

interface DeleteTypedLinkFacetResponse {
}

interface DetachFromIndexRequest {
  readonly DirectoryArn: string;
  readonly IndexReference: ObjectReference;
  readonly TargetReference: ObjectReference;
}

interface DetachFromIndexResponse {
  readonly DetachedObjectIdentifier: string;
}

interface DetachObjectRequest {
  readonly DirectoryArn: string;
  readonly ParentReference: ObjectReference;
  readonly LinkName: string;
}

interface DetachObjectResponse {
  readonly DetachedObjectIdentifier: string;
}

interface DetachPolicyRequest {
  readonly DirectoryArn: string;
  readonly PolicyReference: ObjectReference;
  readonly ObjectReference: ObjectReference;
}

interface DetachPolicyResponse {
}

interface DetachTypedLinkRequest {
  readonly DirectoryArn: string;
  readonly TypedLinkSpecifier: TypedLinkSpecifier;
}

interface Directory {
  readonly Name: string;
  readonly DirectoryArn: string;
  readonly State: string;
  readonly CreationDateTime: Date;
}

interface DirectoryAlreadyExistsException {
  readonly Message: string;
}

interface DirectoryDeletedException {
  readonly Message: string;
}

interface DirectoryNotDisabledException {
  readonly Message: string;
}

interface DirectoryNotEnabledException {
  readonly Message: string;
}

interface DisableDirectoryRequest {
  readonly DirectoryArn: string;
}

interface DisableDirectoryResponse {
  readonly DirectoryArn: string;
}

interface EnableDirectoryRequest {
  readonly DirectoryArn: string;
}

interface EnableDirectoryResponse {
  readonly DirectoryArn: string;
}

interface Facet {
  readonly Name: string;
  readonly ObjectType: string;
  readonly FacetStyle: string;
}

interface FacetAlreadyExistsException {
  readonly Message: string;
}

interface FacetAttribute {
  readonly Name: string;
  readonly AttributeDefinition: FacetAttributeDefinition;
  readonly AttributeReference: FacetAttributeReference;
  readonly RequiredBehavior: string;
}

interface FacetAttributeDefinition {
  readonly Type: string;
  readonly DefaultValue: TypedAttributeValue;
  readonly IsImmutable: boolean;
  readonly Rules: {[key: string]: any};
}

interface FacetAttributeReference {
  readonly TargetFacetName: string;
  readonly TargetAttributeName: string;
}

interface FacetAttributeUpdate {
  readonly Attribute: FacetAttribute;
  readonly Action: string;
}

interface FacetInUseException {
  readonly Message: string;
}

interface FacetNotFoundException {
  readonly Message: string;
}

interface FacetValidationException {
  readonly Message: string;
}

interface GetAppliedSchemaVersionRequest {
  readonly SchemaArn: string;
}

interface GetAppliedSchemaVersionResponse {
  readonly AppliedSchemaArn: string;
}

interface GetDirectoryRequest {
  readonly DirectoryArn: string;
}

interface GetDirectoryResponse {
  readonly Directory: Directory;
}

interface GetFacetRequest {
  readonly SchemaArn: string;
  readonly Name: string;
}

interface GetFacetResponse {
  readonly Facet: Facet;
}

interface GetLinkAttributesRequest {
  readonly DirectoryArn: string;
  readonly TypedLinkSpecifier: TypedLinkSpecifier;
  readonly AttributeNames: [];
  readonly ConsistencyLevel: string;
}

interface GetLinkAttributesResponse {
  readonly Attributes: [];
}

interface GetObjectAttributesRequest {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly ConsistencyLevel: string;
  readonly SchemaFacet: SchemaFacet;
  readonly AttributeNames: [];
}

interface GetObjectAttributesResponse {
  readonly Attributes: [];
}

interface GetObjectInformationRequest {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly ConsistencyLevel: string;
}

interface GetObjectInformationResponse {
  readonly SchemaFacets: [];
  readonly ObjectIdentifier: string;
}

interface GetSchemaAsJsonRequest {
  readonly SchemaArn: string;
}

interface GetSchemaAsJsonResponse {
  readonly Name: string;
  readonly Document: string;
}

interface GetTypedLinkFacetInformationRequest {
  readonly SchemaArn: string;
  readonly Name: string;
}

interface GetTypedLinkFacetInformationResponse {
  readonly IdentityAttributeOrder: [];
}

interface IncompatibleSchemaException {
  readonly Message: string;
}

interface IndexAttachment {
  readonly IndexedAttributes: [];
  readonly ObjectIdentifier: string;
}

interface IndexedAttributeMissingException {
  readonly Message: string;
}

interface InternalServiceException {
  readonly Message: string;
}

interface InvalidArnException {
  readonly Message: string;
}

interface InvalidAttachmentException {
  readonly Message: string;
}

interface InvalidFacetUpdateException {
  readonly Message: string;
}

interface InvalidNextTokenException {
  readonly Message: string;
}

interface InvalidRuleException {
  readonly Message: string;
}

interface InvalidSchemaDocException {
  readonly Message: string;
}

interface InvalidTaggingRequestException {
  readonly Message: string;
}

interface LimitExceededException {
  readonly Message: string;
}

interface LinkAttributeAction {
  readonly AttributeActionType: string;
  readonly AttributeUpdateValue: TypedAttributeValue;
}

interface LinkAttributeUpdate {
  readonly AttributeKey: AttributeKey;
  readonly AttributeAction: LinkAttributeAction;
}

interface LinkNameAlreadyInUseException {
  readonly Message: string;
}

interface ListAppliedSchemaArnsRequest {
  readonly DirectoryArn: string;
  readonly SchemaArn: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListAppliedSchemaArnsResponse {
  readonly SchemaArns: [];
  readonly NextToken: string;
}

interface ListAttachedIndicesRequest {
  readonly DirectoryArn: string;
  readonly TargetReference: ObjectReference;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly ConsistencyLevel: string;
}

interface ListAttachedIndicesResponse {
  readonly IndexAttachments: [];
  readonly NextToken: string;
}

interface ListDevelopmentSchemaArnsRequest {
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListDevelopmentSchemaArnsResponse {
  readonly SchemaArns: [];
  readonly NextToken: string;
}

interface ListDirectoriesRequest {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly state: string;
}

interface ListDirectoriesResponse {
  readonly Directories: [];
  readonly NextToken: string;
}

interface ListFacetAttributesRequest {
  readonly SchemaArn: string;
  readonly Name: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListFacetAttributesResponse {
  readonly Attributes: [];
  readonly NextToken: string;
}

interface ListFacetNamesRequest {
  readonly SchemaArn: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListFacetNamesResponse {
  readonly FacetNames: [];
  readonly NextToken: string;
}

interface ListIncomingTypedLinksRequest {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly FilterAttributeRanges: [];
  readonly FilterTypedLink: TypedLinkSchemaAndFacetName;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly ConsistencyLevel: string;
}

interface ListIncomingTypedLinksResponse {
  readonly LinkSpecifiers: [];
  readonly NextToken: string;
}

interface ListIndexRequest {
  readonly DirectoryArn: string;
  readonly RangesOnIndexedValues: [];
  readonly IndexReference: ObjectReference;
  readonly MaxResults: number;
  readonly NextToken: string;
  readonly ConsistencyLevel: string;
}

interface ListIndexResponse {
  readonly IndexAttachments: [];
  readonly NextToken: string;
}

interface ListManagedSchemaArnsRequest {
  readonly SchemaArn: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListManagedSchemaArnsResponse {
  readonly SchemaArns: [];
  readonly NextToken: string;
}

interface ListObjectAttributesRequest {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly ConsistencyLevel: string;
  readonly FacetFilter: SchemaFacet;
}

interface ListObjectAttributesResponse {
  readonly Attributes: [];
  readonly NextToken: string;
}

interface ListObjectChildrenRequest {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly ConsistencyLevel: string;
}

interface ListObjectChildrenResponse {
  readonly Children: {[key: string]: any};
  readonly NextToken: string;
}

interface ListObjectParentPathsRequest {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListObjectParentPathsResponse {
  readonly PathToObjectIdentifiersList: [];
  readonly NextToken: string;
}

interface ListObjectParentsRequest {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly ConsistencyLevel: string;
  readonly IncludeAllLinksToEachParent: boolean;
}

interface ListObjectParentsResponse {
  readonly Parents: {[key: string]: any};
  readonly NextToken: string;
  readonly ParentLinks: [];
}

interface ListObjectPoliciesRequest {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly ConsistencyLevel: string;
}

interface ListObjectPoliciesResponse {
  readonly AttachedPolicyIds: [];
  readonly NextToken: string;
}

interface ListOutgoingTypedLinksRequest {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly FilterAttributeRanges: [];
  readonly FilterTypedLink: TypedLinkSchemaAndFacetName;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly ConsistencyLevel: string;
}

interface ListOutgoingTypedLinksResponse {
  readonly TypedLinkSpecifiers: [];
  readonly NextToken: string;
}

interface ListPolicyAttachmentsRequest {
  readonly DirectoryArn: string;
  readonly PolicyReference: ObjectReference;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly ConsistencyLevel: string;
}

interface ListPolicyAttachmentsResponse {
  readonly ObjectIdentifiers: [];
  readonly NextToken: string;
}

interface ListPublishedSchemaArnsRequest {
  readonly SchemaArn: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListPublishedSchemaArnsResponse {
  readonly SchemaArns: [];
  readonly NextToken: string;
}

interface ListTagsForResourceRequest {
  readonly ResourceArn: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListTagsForResourceResponse {
  readonly Tags: [];
  readonly NextToken: string;
}

interface ListTypedLinkFacetAttributesRequest {
  readonly SchemaArn: string;
  readonly Name: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListTypedLinkFacetAttributesResponse {
  readonly Attributes: [];
  readonly NextToken: string;
}

interface ListTypedLinkFacetNamesRequest {
  readonly SchemaArn: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListTypedLinkFacetNamesResponse {
  readonly FacetNames: [];
  readonly NextToken: string;
}

interface LookupPolicyRequest {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface LookupPolicyResponse {
  readonly PolicyToPathList: [];
  readonly NextToken: string;
}

interface NotIndexException {
  readonly Message: string;
}

interface NotNodeException {
  readonly Message: string;
}

interface NotPolicyException {
  readonly Message: string;
}

interface ObjectAlreadyDetachedException {
  readonly Message: string;
}

interface ObjectAttributeAction {
  readonly ObjectAttributeActionType: string;
  readonly ObjectAttributeUpdateValue: TypedAttributeValue;
}

interface ObjectAttributeRange {
  readonly AttributeKey: AttributeKey;
  readonly Range: TypedAttributeValueRange;
}

interface ObjectAttributeUpdate {
  readonly ObjectAttributeKey: AttributeKey;
  readonly ObjectAttributeAction: ObjectAttributeAction;
}

interface ObjectIdentifierAndLinkNameTuple {
  readonly ObjectIdentifier: string;
  readonly LinkName: string;
}

interface ObjectNotDetachedException {
  readonly Message: string;
}

interface ObjectReference {
  readonly Selector: string;
}

interface PathToObjectIdentifiers {
  readonly Path: string;
  readonly ObjectIdentifiers: [];
}

interface PolicyAttachment {
  readonly PolicyId: string;
  readonly ObjectIdentifier: string;
  readonly PolicyType: string;
}

interface PolicyToPath {
  readonly Path: string;
  readonly Policies: [];
}

interface PublishSchemaRequest {
  readonly DevelopmentSchemaArn: string;
  readonly Version: string;
  readonly MinorVersion: string;
  readonly Name: string;
}

interface PublishSchemaResponse {
  readonly PublishedSchemaArn: string;
}

interface PutSchemaFromJsonRequest {
  readonly SchemaArn: string;
  readonly Document: string;
}

interface PutSchemaFromJsonResponse {
  readonly Arn: string;
}

interface RemoveFacetFromObjectRequest {
  readonly DirectoryArn: string;
  readonly SchemaFacet: SchemaFacet;
  readonly ObjectReference: ObjectReference;
}

interface RemoveFacetFromObjectResponse {
}

interface ResourceNotFoundException {
  readonly Message: string;
}

interface RetryableConflictException {
  readonly Message: string;
}

interface Rule {
  readonly Type: string;
  readonly Parameters: {[key: string]: any};
}

interface SchemaAlreadyExistsException {
  readonly Message: string;
}

interface SchemaAlreadyPublishedException {
  readonly Message: string;
}

interface SchemaFacet {
  readonly SchemaArn: string;
  readonly FacetName: string;
}

interface StillContainsLinksException {
  readonly Message: string;
}

interface Tag {
  readonly Key: string;
  readonly Value: string;
}

interface TagResourceRequest {
  readonly ResourceArn: string;
  readonly Tags: [];
}

interface TagResourceResponse {
}

interface TypedAttributeValue {
  readonly StringValue: string;
  readonly BinaryValue: unknown;
  readonly BooleanValue: boolean;
  readonly NumberValue: string;
  readonly DatetimeValue: Date;
}

interface TypedAttributeValueRange {
  readonly StartMode: string;
  readonly StartValue: TypedAttributeValue;
  readonly EndMode: string;
  readonly EndValue: TypedAttributeValue;
}

interface TypedLinkAttributeDefinition {
  readonly Name: string;
  readonly Type: string;
  readonly DefaultValue: TypedAttributeValue;
  readonly IsImmutable: boolean;
  readonly Rules: {[key: string]: any};
  readonly RequiredBehavior: string;
}

interface TypedLinkAttributeRange {
  readonly AttributeName: string;
  readonly Range: TypedAttributeValueRange;
}

interface TypedLinkFacet {
  readonly Name: string;
  readonly Attributes: [];
  readonly IdentityAttributeOrder: [];
}

interface TypedLinkFacetAttributeUpdate {
  readonly Attribute: TypedLinkAttributeDefinition;
  readonly Action: string;
}

interface TypedLinkSchemaAndFacetName {
  readonly SchemaArn: string;
  readonly TypedLinkName: string;
}

interface TypedLinkSpecifier {
  readonly TypedLinkFacet: TypedLinkSchemaAndFacetName;
  readonly SourceObjectReference: ObjectReference;
  readonly TargetObjectReference: ObjectReference;
  readonly IdentityAttributeValues: [];
}

interface UnsupportedIndexTypeException {
  readonly Message: string;
}

interface UntagResourceRequest {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}

interface UntagResourceResponse {
}

interface UpdateFacetRequest {
  readonly SchemaArn: string;
  readonly Name: string;
  readonly AttributeUpdates: [];
  readonly ObjectType: string;
}

interface UpdateFacetResponse {
}

interface UpdateLinkAttributesRequest {
  readonly DirectoryArn: string;
  readonly TypedLinkSpecifier: TypedLinkSpecifier;
  readonly AttributeUpdates: [];
}

interface UpdateLinkAttributesResponse {
}

interface UpdateObjectAttributesRequest {
  readonly DirectoryArn: string;
  readonly ObjectReference: ObjectReference;
  readonly AttributeUpdates: [];
}

interface UpdateObjectAttributesResponse {
  readonly ObjectIdentifier: string;
}

interface UpdateSchemaRequest {
  readonly SchemaArn: string;
  readonly Name: string;
}

interface UpdateSchemaResponse {
  readonly SchemaArn: string;
}

interface UpdateTypedLinkFacetRequest {
  readonly SchemaArn: string;
  readonly Name: string;
  readonly AttributeUpdates: [];
  readonly IdentityAttributeOrder: [];
}

interface UpdateTypedLinkFacetResponse {
}

interface UpgradeAppliedSchemaRequest {
  readonly PublishedSchemaArn: string;
  readonly DirectoryArn: string;
  readonly DryRun: boolean;
}

interface UpgradeAppliedSchemaResponse {
  readonly UpgradedSchemaArn: string;
  readonly DirectoryArn: string;
}

interface UpgradePublishedSchemaRequest {
  readonly DevelopmentSchemaArn: string;
  readonly PublishedSchemaArn: string;
  readonly MinorVersion: string;
  readonly DryRun: boolean;
}

interface UpgradePublishedSchemaResponse {
  readonly UpgradedSchemaArn: string;
}

interface ValidationException {
  readonly Message: string;
}

