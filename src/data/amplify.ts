/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CreateApp {
  readonly name: string;
  readonly description?: string;
  readonly repository?: string;
  readonly platform?: string;
  readonly iamServiceRoleArn?: string;
  readonly oauthToken?: string;
  readonly accessToken?: string;
  readonly environmentVariables?: {[key: string]: any};
  readonly enableBranchAutoBuild?: boolean;
  readonly enableBranchAutoDeletion?: boolean;
  readonly enableBasicAuth?: boolean;
  readonly basicAuthCredentials?: string;
  readonly customRules?: [];
  readonly tags?: {[key: string]: any};
  readonly buildSpec?: string;
  readonly customHeaders?: string;
  readonly enableAutoBranchCreation?: boolean;
  readonly autoBranchCreationPatterns?: [];
  readonly autoBranchCreationConfig?: AutoBranchCreationConfig;
}

export interface CreateBackendEnvironment {
  readonly appId: string;
  readonly environmentName: string;
  readonly stackName?: string;
  readonly deploymentArtifacts?: string;
}

export interface CreateBranch {
  readonly appId: string;
  readonly branchName: string;
  readonly description?: string;
  readonly stage?: string;
  readonly framework?: string;
  readonly enableNotification?: boolean;
  readonly enableAutoBuild?: boolean;
  readonly environmentVariables?: {[key: string]: any};
  readonly basicAuthCredentials?: string;
  readonly enableBasicAuth?: boolean;
  readonly enablePerformanceMode?: boolean;
  readonly tags?: {[key: string]: any};
  readonly buildSpec?: string;
  readonly ttl?: string;
  readonly displayName?: string;
  readonly enablePullRequestPreview?: boolean;
  readonly pullRequestEnvironmentName?: string;
  readonly backendEnvironmentArn?: string;
}

export interface CreateDeployment {
  readonly appId: string;
  readonly branchName: string;
  readonly fileMap?: {[key: string]: any};
}

export interface CreateDomainAssociation {
  readonly appId: string;
  readonly domainName: string;
  readonly enableAutoSubDomain?: boolean;
  readonly subDomainSettings: [];
  readonly autoSubDomainCreationPatterns?: [];
  readonly autoSubDomainIAMRole?: string;
}

export interface CreateWebhook {
  readonly appId: string;
  readonly branchName: string;
  readonly description?: string;
}

export interface DeleteApp {
  readonly appId: string;
}

export interface DeleteBackendEnvironment {
  readonly appId: string;
  readonly environmentName: string;
}

export interface DeleteBranch {
  readonly appId: string;
  readonly branchName: string;
}

export interface DeleteDomainAssociation {
  readonly appId: string;
  readonly domainName: string;
}

export interface DeleteJob {
  readonly appId: string;
  readonly branchName: string;
  readonly jobId: string;
}

export interface DeleteWebhook {
  readonly webhookId: string;
}

export interface GenerateAccessLogs {
  readonly startTime?: Date;
  readonly endTime?: Date;
  readonly domainName: string;
  readonly appId: string;
}

export interface GetApp {
  readonly appId: string;
}

export interface GetArtifactUrl {
  readonly artifactId: string;
}

export interface GetBackendEnvironment {
  readonly appId: string;
  readonly environmentName: string;
}

export interface GetBranch {
  readonly appId: string;
  readonly branchName: string;
}

export interface GetDomainAssociation {
  readonly appId: string;
  readonly domainName: string;
}

export interface GetJob {
  readonly appId: string;
  readonly branchName: string;
  readonly jobId: string;
}

export interface GetWebhook {
  readonly webhookId: string;
}

export interface ListApps {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListArtifacts {
  readonly appId: string;
  readonly branchName: string;
  readonly jobId: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListBackendEnvironments {
  readonly appId: string;
  readonly environmentName?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListBranches {
  readonly appId: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListDomainAssociations {
  readonly appId: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListJobs {
  readonly appId: string;
  readonly branchName: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListTagsForResource {
  readonly resourceArn: string;
}

export interface ListWebhooks {
  readonly appId: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface StartDeployment {
  readonly appId: string;
  readonly branchName: string;
  readonly jobId?: string;
  readonly sourceUrl?: string;
}

export interface StartJob {
  readonly appId: string;
  readonly branchName: string;
  readonly jobId?: string;
  readonly jobType: string;
  readonly jobReason?: string;
  readonly commitId?: string;
  readonly commitMessage?: string;
  readonly commitTime?: Date;
}

export interface StopJob {
  readonly appId: string;
  readonly branchName: string;
  readonly jobId: string;
}

export interface TagResource {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

export interface UntagResource {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface UpdateApp {
  readonly appId: string;
  readonly name?: string;
  readonly description?: string;
  readonly platform?: string;
  readonly iamServiceRoleArn?: string;
  readonly environmentVariables?: {[key: string]: any};
  readonly enableBranchAutoBuild?: boolean;
  readonly enableBranchAutoDeletion?: boolean;
  readonly enableBasicAuth?: boolean;
  readonly basicAuthCredentials?: string;
  readonly customRules?: [];
  readonly buildSpec?: string;
  readonly customHeaders?: string;
  readonly enableAutoBranchCreation?: boolean;
  readonly autoBranchCreationPatterns?: [];
  readonly autoBranchCreationConfig?: AutoBranchCreationConfig;
  readonly repository?: string;
  readonly oauthToken?: string;
  readonly accessToken?: string;
}

export interface UpdateBranch {
  readonly appId: string;
  readonly branchName: string;
  readonly description?: string;
  readonly framework?: string;
  readonly stage?: string;
  readonly enableNotification?: boolean;
  readonly enableAutoBuild?: boolean;
  readonly environmentVariables?: {[key: string]: any};
  readonly basicAuthCredentials?: string;
  readonly enableBasicAuth?: boolean;
  readonly enablePerformanceMode?: boolean;
  readonly buildSpec?: string;
  readonly ttl?: string;
  readonly displayName?: string;
  readonly enablePullRequestPreview?: boolean;
  readonly pullRequestEnvironmentName?: string;
  readonly backendEnvironmentArn?: string;
}

export interface UpdateDomainAssociation {
  readonly appId: string;
  readonly domainName: string;
  readonly enableAutoSubDomain?: boolean;
  readonly subDomainSettings: [];
  readonly autoSubDomainCreationPatterns?: [];
  readonly autoSubDomainIAMRole?: string;
}

export interface UpdateWebhook {
  readonly webhookId: string;
  readonly branchName?: string;
  readonly description?: string;
}

export interface App {
  readonly appId: string;
  readonly appArn: string;
  readonly name: string;
  readonly tags?: {[key: string]: any};
  readonly description: string;
  readonly repository: string;
  readonly platform: string;
  readonly createTime: Date;
  readonly updateTime: Date;
  readonly iamServiceRoleArn?: string;
  readonly environmentVariables: {[key: string]: any};
  readonly defaultDomain: string;
  readonly enableBranchAutoBuild: boolean;
  readonly enableBranchAutoDeletion?: boolean;
  readonly enableBasicAuth: boolean;
  readonly basicAuthCredentials?: string;
  readonly customRules?: [];
  readonly productionBranch?: ProductionBranch;
  readonly buildSpec?: string;
  readonly customHeaders?: string;
  readonly enableAutoBranchCreation?: boolean;
  readonly autoBranchCreationPatterns?: [];
  readonly autoBranchCreationConfig?: AutoBranchCreationConfig;
}

export interface Artifact {
  readonly artifactFileName: string;
  readonly artifactId: string;
}

export interface AutoBranchCreationConfig {
  readonly stage?: string;
  readonly framework?: string;
  readonly enableAutoBuild?: boolean;
  readonly environmentVariables?: {[key: string]: any};
  readonly basicAuthCredentials?: string;
  readonly enableBasicAuth?: boolean;
  readonly enablePerformanceMode?: boolean;
  readonly buildSpec?: string;
  readonly enablePullRequestPreview?: boolean;
  readonly pullRequestEnvironmentName?: string;
}

export interface BackendEnvironment {
  readonly backendEnvironmentArn: string;
  readonly environmentName: string;
  readonly stackName?: string;
  readonly deploymentArtifacts?: string;
  readonly createTime: Date;
  readonly updateTime: Date;
}

export interface BadRequestException {
  readonly message?: string;
}

export interface Branch {
  readonly branchArn: string;
  readonly branchName: string;
  readonly description: string;
  readonly tags?: {[key: string]: any};
  readonly stage: string;
  readonly displayName: string;
  readonly enableNotification: boolean;
  readonly createTime: Date;
  readonly updateTime: Date;
  readonly environmentVariables: {[key: string]: any};
  readonly enableAutoBuild: boolean;
  readonly customDomains: [];
  readonly framework: string;
  readonly activeJobId: string;
  readonly totalNumberOfJobs: string;
  readonly enableBasicAuth: boolean;
  readonly enablePerformanceMode?: boolean;
  readonly thumbnailUrl?: string;
  readonly basicAuthCredentials?: string;
  readonly buildSpec?: string;
  readonly ttl: string;
  readonly associatedResources?: [];
  readonly enablePullRequestPreview: boolean;
  readonly pullRequestEnvironmentName?: string;
  readonly destinationBranch?: string;
  readonly sourceBranch?: string;
  readonly backendEnvironmentArn?: string;
}

export interface CreateAppRequest {
  readonly name: string;
  readonly description?: string;
  readonly repository?: string;
  readonly platform?: string;
  readonly iamServiceRoleArn?: string;
  readonly oauthToken?: string;
  readonly accessToken?: string;
  readonly environmentVariables?: {[key: string]: any};
  readonly enableBranchAutoBuild?: boolean;
  readonly enableBranchAutoDeletion?: boolean;
  readonly enableBasicAuth?: boolean;
  readonly basicAuthCredentials?: string;
  readonly customRules?: [];
  readonly tags?: {[key: string]: any};
  readonly buildSpec?: string;
  readonly customHeaders?: string;
  readonly enableAutoBranchCreation?: boolean;
  readonly autoBranchCreationPatterns?: [];
  readonly autoBranchCreationConfig?: AutoBranchCreationConfig;
}

export interface CreateAppResult {
  readonly app: App;
}

export interface CreateBackendEnvironmentRequest {
  readonly appId: string;
  readonly environmentName: string;
  readonly stackName?: string;
  readonly deploymentArtifacts?: string;
}

export interface CreateBackendEnvironmentResult {
  readonly backendEnvironment: BackendEnvironment;
}

export interface CreateBranchRequest {
  readonly appId: string;
  readonly branchName: string;
  readonly description?: string;
  readonly stage?: string;
  readonly framework?: string;
  readonly enableNotification?: boolean;
  readonly enableAutoBuild?: boolean;
  readonly environmentVariables?: {[key: string]: any};
  readonly basicAuthCredentials?: string;
  readonly enableBasicAuth?: boolean;
  readonly enablePerformanceMode?: boolean;
  readonly tags?: {[key: string]: any};
  readonly buildSpec?: string;
  readonly ttl?: string;
  readonly displayName?: string;
  readonly enablePullRequestPreview?: boolean;
  readonly pullRequestEnvironmentName?: string;
  readonly backendEnvironmentArn?: string;
}

export interface CreateBranchResult {
  readonly branch: Branch;
}

export interface CreateDeploymentRequest {
  readonly appId: string;
  readonly branchName: string;
  readonly fileMap?: {[key: string]: any};
}

export interface CreateDeploymentResult {
  readonly jobId?: string;
  readonly fileUploadUrls: {[key: string]: any};
  readonly zipUploadUrl: string;
}

export interface CreateDomainAssociationRequest {
  readonly appId: string;
  readonly domainName: string;
  readonly enableAutoSubDomain?: boolean;
  readonly subDomainSettings: [];
  readonly autoSubDomainCreationPatterns?: [];
  readonly autoSubDomainIAMRole?: string;
}

export interface CreateDomainAssociationResult {
  readonly domainAssociation: DomainAssociation;
}

export interface CreateWebhookRequest {
  readonly appId: string;
  readonly branchName: string;
  readonly description?: string;
}

export interface CreateWebhookResult {
  readonly webhook: Webhook;
}

export interface CustomRule {
  readonly source: string;
  readonly target: string;
  readonly status?: string;
  readonly condition?: string;
}

export interface DeleteAppRequest {
  readonly appId: string;
}

export interface DeleteAppResult {
  readonly app: App;
}

export interface DeleteBackendEnvironmentRequest {
  readonly appId: string;
  readonly environmentName: string;
}

export interface DeleteBackendEnvironmentResult {
  readonly backendEnvironment: BackendEnvironment;
}

export interface DeleteBranchRequest {
  readonly appId: string;
  readonly branchName: string;
}

export interface DeleteBranchResult {
  readonly branch: Branch;
}

export interface DeleteDomainAssociationRequest {
  readonly appId: string;
  readonly domainName: string;
}

export interface DeleteDomainAssociationResult {
  readonly domainAssociation: DomainAssociation;
}

export interface DeleteJobRequest {
  readonly appId: string;
  readonly branchName: string;
  readonly jobId: string;
}

export interface DeleteJobResult {
  readonly jobSummary: JobSummary;
}

export interface DeleteWebhookRequest {
  readonly webhookId: string;
}

export interface DeleteWebhookResult {
  readonly webhook: Webhook;
}

export interface DependentServiceFailureException {
  readonly message?: string;
}

export interface DomainAssociation {
  readonly domainAssociationArn: string;
  readonly domainName: string;
  readonly enableAutoSubDomain: boolean;
  readonly autoSubDomainCreationPatterns?: [];
  readonly autoSubDomainIAMRole?: string;
  readonly domainStatus: string;
  readonly statusReason: string;
  readonly certificateVerificationDNSRecord?: string;
  readonly subDomains: [];
}

export interface GenerateAccessLogsRequest {
  readonly startTime?: Date;
  readonly endTime?: Date;
  readonly domainName: string;
  readonly appId: string;
}

export interface GenerateAccessLogsResult {
  readonly logUrl?: string;
}

export interface GetAppRequest {
  readonly appId: string;
}

export interface GetAppResult {
  readonly app: App;
}

export interface GetArtifactUrlRequest {
  readonly artifactId: string;
}

export interface GetArtifactUrlResult {
  readonly artifactId: string;
  readonly artifactUrl: string;
}

export interface GetBackendEnvironmentRequest {
  readonly appId: string;
  readonly environmentName: string;
}

export interface GetBackendEnvironmentResult {
  readonly backendEnvironment: BackendEnvironment;
}

export interface GetBranchRequest {
  readonly appId: string;
  readonly branchName: string;
}

export interface GetBranchResult {
  readonly branch: Branch;
}

export interface GetDomainAssociationRequest {
  readonly appId: string;
  readonly domainName: string;
}

export interface GetDomainAssociationResult {
  readonly domainAssociation: DomainAssociation;
}

export interface GetJobRequest {
  readonly appId: string;
  readonly branchName: string;
  readonly jobId: string;
}

export interface GetJobResult {
  readonly job: Job;
}

export interface GetWebhookRequest {
  readonly webhookId: string;
}

export interface GetWebhookResult {
  readonly webhook: Webhook;
}

export interface InternalFailureException {
  readonly message?: string;
}

export interface Job {
  readonly summary: JobSummary;
  readonly steps: [];
}

export interface JobSummary {
  readonly jobArn: string;
  readonly jobId: string;
  readonly commitId: string;
  readonly commitMessage: string;
  readonly commitTime: Date;
  readonly startTime: Date;
  readonly status: string;
  readonly endTime?: Date;
  readonly jobType: string;
}

export interface LimitExceededException {
  readonly message?: string;
}

export interface ListAppsRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListAppsResult {
  readonly apps: [];
  readonly nextToken?: string;
}

export interface ListArtifactsRequest {
  readonly appId: string;
  readonly branchName: string;
  readonly jobId: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListArtifactsResult {
  readonly artifacts: [];
  readonly nextToken?: string;
}

export interface ListBackendEnvironmentsRequest {
  readonly appId: string;
  readonly environmentName?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListBackendEnvironmentsResult {
  readonly backendEnvironments: [];
  readonly nextToken?: string;
}

export interface ListBranchesRequest {
  readonly appId: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListBranchesResult {
  readonly branches: [];
  readonly nextToken?: string;
}

export interface ListDomainAssociationsRequest {
  readonly appId: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListDomainAssociationsResult {
  readonly domainAssociations: [];
  readonly nextToken?: string;
}

export interface ListJobsRequest {
  readonly appId: string;
  readonly branchName: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListJobsResult {
  readonly jobSummaries: [];
  readonly nextToken?: string;
}

export interface ListTagsForResourceRequest {
  readonly resourceArn: string;
}

export interface ListTagsForResourceResponse {
  readonly tags?: {[key: string]: any};
}

export interface ListWebhooksRequest {
  readonly appId: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListWebhooksResult {
  readonly webhooks: [];
  readonly nextToken?: string;
}

export interface NotFoundException {
  readonly message?: string;
}

export interface ProductionBranch {
  readonly lastDeployTime?: Date;
  readonly status?: string;
  readonly thumbnailUrl?: string;
  readonly branchName?: string;
}

export interface ResourceNotFoundException {
  readonly code: string;
  readonly message: string;
}

export interface StartDeploymentRequest {
  readonly appId: string;
  readonly branchName: string;
  readonly jobId?: string;
  readonly sourceUrl?: string;
}

export interface StartDeploymentResult {
  readonly jobSummary: JobSummary;
}

export interface StartJobRequest {
  readonly appId: string;
  readonly branchName: string;
  readonly jobId?: string;
  readonly jobType: string;
  readonly jobReason?: string;
  readonly commitId?: string;
  readonly commitMessage?: string;
  readonly commitTime?: Date;
}

export interface StartJobResult {
  readonly jobSummary: JobSummary;
}

export interface Step {
  readonly stepName: string;
  readonly startTime: Date;
  readonly status: string;
  readonly endTime: Date;
  readonly logUrl?: string;
  readonly artifactsUrl?: string;
  readonly testArtifactsUrl?: string;
  readonly testConfigUrl?: string;
  readonly screenshots?: {[key: string]: any};
  readonly statusReason?: string;
  readonly context?: string;
}

export interface StopJobRequest {
  readonly appId: string;
  readonly branchName: string;
  readonly jobId: string;
}

export interface StopJobResult {
  readonly jobSummary: JobSummary;
}

export interface SubDomain {
  readonly subDomainSetting: SubDomainSetting;
  readonly verified: boolean;
  readonly dnsRecord: string;
}

export interface SubDomainSetting {
  readonly prefix: string;
  readonly branchName: string;
}

export interface TagResourceRequest {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

export interface TagResourceResponse {
}

export interface UnauthorizedException {
  readonly message?: string;
}

export interface UntagResourceRequest {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface UntagResourceResponse {
}

export interface UpdateAppRequest {
  readonly appId: string;
  readonly name?: string;
  readonly description?: string;
  readonly platform?: string;
  readonly iamServiceRoleArn?: string;
  readonly environmentVariables?: {[key: string]: any};
  readonly enableBranchAutoBuild?: boolean;
  readonly enableBranchAutoDeletion?: boolean;
  readonly enableBasicAuth?: boolean;
  readonly basicAuthCredentials?: string;
  readonly customRules?: [];
  readonly buildSpec?: string;
  readonly customHeaders?: string;
  readonly enableAutoBranchCreation?: boolean;
  readonly autoBranchCreationPatterns?: [];
  readonly autoBranchCreationConfig?: AutoBranchCreationConfig;
  readonly repository?: string;
  readonly oauthToken?: string;
  readonly accessToken?: string;
}

export interface UpdateAppResult {
  readonly app: App;
}

export interface UpdateBranchRequest {
  readonly appId: string;
  readonly branchName: string;
  readonly description?: string;
  readonly framework?: string;
  readonly stage?: string;
  readonly enableNotification?: boolean;
  readonly enableAutoBuild?: boolean;
  readonly environmentVariables?: {[key: string]: any};
  readonly basicAuthCredentials?: string;
  readonly enableBasicAuth?: boolean;
  readonly enablePerformanceMode?: boolean;
  readonly buildSpec?: string;
  readonly ttl?: string;
  readonly displayName?: string;
  readonly enablePullRequestPreview?: boolean;
  readonly pullRequestEnvironmentName?: string;
  readonly backendEnvironmentArn?: string;
}

export interface UpdateBranchResult {
  readonly branch: Branch;
}

export interface UpdateDomainAssociationRequest {
  readonly appId: string;
  readonly domainName: string;
  readonly enableAutoSubDomain?: boolean;
  readonly subDomainSettings: [];
  readonly autoSubDomainCreationPatterns?: [];
  readonly autoSubDomainIAMRole?: string;
}

export interface UpdateDomainAssociationResult {
  readonly domainAssociation: DomainAssociation;
}

export interface UpdateWebhookRequest {
  readonly webhookId: string;
  readonly branchName?: string;
  readonly description?: string;
}

export interface UpdateWebhookResult {
  readonly webhook: Webhook;
}

export interface Webhook {
  readonly webhookArn: string;
  readonly webhookId: string;
  readonly webhookUrl: string;
  readonly branchName: string;
  readonly description: string;
  readonly createTime: Date;
  readonly updateTime: Date;
}


