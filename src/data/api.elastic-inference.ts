/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface DescribeAcceleratorOfferings {
  readonly locationType: string;
  readonly acceleratorTypes?: [];
}
export interface DescribeAcceleratorTypes {
}
export interface DescribeAccelerators {
  readonly acceleratorIds?: [];
  readonly filters?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}
export interface ListTagsForResource {
  readonly resourceArn: string;
}
export interface TagResource {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}
export interface UntagResource {
  readonly resourceArn: string;
  readonly tagKeys: [];
}



interface AcceleratorType {
  readonly acceleratorTypeName: string;
  readonly memoryInfo: MemoryInfo;
  readonly throughputInfo: [];
}

interface AcceleratorTypeOffering {
  readonly acceleratorType: string;
  readonly locationType: string;
  readonly location: string;
}

interface BadRequestException {
  readonly message: string;
}

interface DescribeAcceleratorOfferingsRequest {
  readonly locationType: string;
  readonly acceleratorTypes: [];
}

interface DescribeAcceleratorOfferingsResponse {
  readonly acceleratorTypeOfferings: [];
}

interface DescribeAcceleratorTypesRequest {
}

interface DescribeAcceleratorTypesResponse {
  readonly acceleratorTypes: [];
}

interface DescribeAcceleratorsRequest {
  readonly acceleratorIds: [];
  readonly filters: [];
  readonly maxResults: number;
  readonly nextToken: string;
}

interface DescribeAcceleratorsResponse {
  readonly acceleratorSet: [];
  readonly nextToken: string;
}

interface ElasticInferenceAccelerator {
  readonly acceleratorHealth: ElasticInferenceAcceleratorHealth;
  readonly acceleratorType: string;
  readonly acceleratorId: string;
  readonly availabilityZone: string;
  readonly attachedResource: string;
}

interface ElasticInferenceAcceleratorHealth {
  readonly status: string;
}

interface Filter {
  readonly name: string;
  readonly values: [];
}

interface InternalServerException {
  readonly message: string;
}

interface KeyValuePair {
  readonly key: string;
  readonly value: number;
}

interface ListTagsForResourceRequest {
  readonly resourceArn: string;
}

interface ListTagsForResourceResult {
  readonly tags: {[key: string]: any};
}

interface MemoryInfo {
  readonly sizeInMiB: number;
}

interface ResourceNotFoundException {
  readonly message: string;
}

interface TagResourceRequest {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

interface TagResourceResult {
}

interface UntagResourceRequest {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

interface UntagResourceResult {
}

