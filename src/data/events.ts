/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface ActivateEventSource {
  readonly Name: string;
}

export interface CancelReplay {
  readonly ReplayName: string;
}

export interface CreateApiDestination {
  readonly Name: string;
  readonly Description?: string;
  readonly ConnectionArn: string;
  readonly InvocationEndpoint: string;
  readonly HttpMethod: string;
  readonly InvocationRateLimitPerSecond?: number;
}

export interface CreateArchive {
  readonly ArchiveName: string;
  readonly EventSourceArn: string;
  readonly Description?: string;
  readonly EventPattern?: string;
  readonly RetentionDays?: number;
}

export interface CreateConnection {
  readonly Name: string;
  readonly Description?: string;
  readonly AuthorizationType: string;
  readonly AuthParameters: CreateConnectionAuthRequestParameters;
}

export interface CreateEventBus {
  readonly Name: string;
  readonly EventSourceName?: string;
  readonly Tags?: [];
}

export interface CreatePartnerEventSource {
  readonly Name: string;
  readonly Account: string;
}

export interface DeactivateEventSource {
  readonly Name: string;
}

export interface DeauthorizeConnection {
  readonly Name: string;
}

export interface DeleteApiDestination {
  readonly Name: string;
}

export interface DeleteArchive {
  readonly ArchiveName: string;
}

export interface DeleteConnection {
  readonly Name: string;
}

export interface DeleteEventBus {
  readonly Name: string;
}

export interface DeletePartnerEventSource {
  readonly Name: string;
  readonly Account: string;
}

export interface DeleteRule {
  readonly Name: string;
  readonly EventBusName?: string;
  readonly Force?: boolean;
}

export interface DescribeApiDestination {
  readonly Name: string;
}

export interface DescribeArchive {
  readonly ArchiveName: string;
}

export interface DescribeConnection {
  readonly Name: string;
}

export interface DescribeEventBus {
  readonly Name?: string;
}

export interface DescribeEventSource {
  readonly Name: string;
}

export interface DescribePartnerEventSource {
  readonly Name: string;
}

export interface DescribeReplay {
  readonly ReplayName: string;
}

export interface DescribeRule {
  readonly Name: string;
  readonly EventBusName?: string;
}

export interface DisableRule {
  readonly Name: string;
  readonly EventBusName?: string;
}

export interface EnableRule {
  readonly Name: string;
  readonly EventBusName?: string;
}

export interface ListApiDestinations {
  readonly NamePrefix?: string;
  readonly ConnectionArn?: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface ListArchives {
  readonly NamePrefix?: string;
  readonly EventSourceArn?: string;
  readonly State?: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface ListConnections {
  readonly NamePrefix?: string;
  readonly ConnectionState?: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface ListEventBuses {
  readonly NamePrefix?: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface ListEventSources {
  readonly NamePrefix?: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface ListPartnerEventSourceAccounts {
  readonly EventSourceName: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface ListPartnerEventSources {
  readonly NamePrefix: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface ListReplays {
  readonly NamePrefix?: string;
  readonly State?: string;
  readonly EventSourceArn?: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface ListRuleNamesByTarget {
  readonly TargetArn: string;
  readonly EventBusName?: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface ListRules {
  readonly NamePrefix?: string;
  readonly EventBusName?: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface ListTagsForResource {
  readonly ResourceARN: string;
}

export interface ListTargetsByRule {
  readonly Rule: string;
  readonly EventBusName?: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface PutEvents {
  readonly Entries: [];
}

export interface PutPartnerEvents {
  readonly Entries: [];
}

export interface PutPermission {
  readonly EventBusName?: string;
  readonly Action?: string;
  readonly Principal?: string;
  readonly StatementId?: string;
  readonly Condition?: Condition;
  readonly Policy?: string;
}

export interface PutRule {
  readonly Name: string;
  readonly ScheduleExpression?: string;
  readonly EventPattern?: string;
  readonly State?: string;
  readonly Description?: string;
  readonly RoleArn?: string;
  readonly Tags?: [];
  readonly EventBusName?: string;
}

export interface PutTargets {
  readonly Rule: string;
  readonly EventBusName?: string;
  readonly Targets: [];
}

export interface RemovePermission {
  readonly StatementId?: string;
  readonly RemoveAllPermissions?: boolean;
  readonly EventBusName?: string;
}

export interface RemoveTargets {
  readonly Rule: string;
  readonly EventBusName?: string;
  readonly Ids: [];
  readonly Force?: boolean;
}

export interface StartReplay {
  readonly ReplayName: string;
  readonly Description?: string;
  readonly EventSourceArn: string;
  readonly EventStartTime: Date;
  readonly EventEndTime: Date;
  readonly Destination: ReplayDestination;
}

export interface TagResource {
  readonly ResourceARN: string;
  readonly Tags: [];
}

export interface TestEventPattern {
  readonly EventPattern: string;
  readonly Event: string;
}

export interface UntagResource {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}

export interface UpdateApiDestination {
  readonly Name: string;
  readonly Description?: string;
  readonly ConnectionArn?: string;
  readonly InvocationEndpoint?: string;
  readonly HttpMethod?: string;
  readonly InvocationRateLimitPerSecond?: number;
}

export interface UpdateArchive {
  readonly ArchiveName: string;
  readonly Description?: string;
  readonly EventPattern?: string;
  readonly RetentionDays?: number;
}

export interface UpdateConnection {
  readonly Name: string;
  readonly Description?: string;
  readonly AuthorizationType?: string;
  readonly AuthParameters?: UpdateConnectionAuthRequestParameters;
}

export interface ActivateEventSourceRequest {
  readonly Name: string;
}

export interface ApiDestination {
  readonly ApiDestinationArn?: string;
  readonly Name?: string;
  readonly ApiDestinationState?: string;
  readonly ConnectionArn?: string;
  readonly InvocationEndpoint?: string;
  readonly HttpMethod?: string;
  readonly InvocationRateLimitPerSecond?: number;
  readonly CreationTime?: Date;
  readonly LastModifiedTime?: Date;
}

export interface Archive {
  readonly ArchiveName?: string;
  readonly EventSourceArn?: string;
  readonly State?: string;
  readonly StateReason?: string;
  readonly RetentionDays?: number;
  readonly SizeBytes?: number;
  readonly EventCount?: number;
  readonly CreationTime?: Date;
}

export interface AwsVpcConfiguration {
  readonly Subnets: [];
  readonly SecurityGroups?: [];
  readonly AssignPublicIp?: string;
}

export interface BatchArrayProperties {
  readonly Size?: number;
}

export interface BatchParameters {
  readonly JobDefinition: string;
  readonly JobName: string;
  readonly ArrayProperties?: BatchArrayProperties;
  readonly RetryStrategy?: BatchRetryStrategy;
}

export interface BatchRetryStrategy {
  readonly Attempts?: number;
}

export interface CancelReplayRequest {
  readonly ReplayName: string;
}

export interface CancelReplayResponse {
  readonly ReplayArn?: string;
  readonly State?: string;
  readonly StateReason?: string;
}

export interface CapacityProviderStrategyItem {
  readonly capacityProvider: string;
  readonly weight?: number;
  readonly base?: number;
}

export interface ConcurrentModificationException {
}

export interface Condition {
  readonly Type: string;
  readonly Key: string;
  readonly Value: string;
}

export interface Connection {
  readonly ConnectionArn?: string;
  readonly Name?: string;
  readonly ConnectionState?: string;
  readonly StateReason?: string;
  readonly AuthorizationType?: string;
  readonly CreationTime?: Date;
  readonly LastModifiedTime?: Date;
  readonly LastAuthorizedTime?: Date;
}

export interface ConnectionApiKeyAuthResponseParameters {
  readonly ApiKeyName?: string;
}

export interface ConnectionAuthResponseParameters {
  readonly BasicAuthParameters?: ConnectionBasicAuthResponseParameters;
  readonly OAuthParameters?: ConnectionOAuthResponseParameters;
  readonly ApiKeyAuthParameters?: ConnectionApiKeyAuthResponseParameters;
  readonly InvocationHttpParameters?: ConnectionHttpParameters;
}

export interface ConnectionBasicAuthResponseParameters {
  readonly Username?: string;
}

export interface ConnectionBodyParameter {
  readonly Key?: string;
  readonly Value?: string;
  readonly IsValueSecret?: boolean;
}

export interface ConnectionHeaderParameter {
  readonly Key?: string;
  readonly Value?: string;
  readonly IsValueSecret?: boolean;
}

export interface ConnectionHttpParameters {
  readonly HeaderParameters?: [];
  readonly QueryStringParameters?: [];
  readonly BodyParameters?: [];
}

export interface ConnectionOAuthClientResponseParameters {
  readonly ClientID?: string;
}

export interface ConnectionOAuthResponseParameters {
  readonly ClientParameters?: ConnectionOAuthClientResponseParameters;
  readonly AuthorizationEndpoint?: string;
  readonly HttpMethod?: string;
  readonly OAuthHttpParameters?: ConnectionHttpParameters;
}

export interface ConnectionQueryStringParameter {
  readonly Key?: string;
  readonly Value?: string;
  readonly IsValueSecret?: boolean;
}

export interface CreateApiDestinationRequest {
  readonly Name: string;
  readonly Description?: string;
  readonly ConnectionArn: string;
  readonly InvocationEndpoint: string;
  readonly HttpMethod: string;
  readonly InvocationRateLimitPerSecond?: number;
}

export interface CreateApiDestinationResponse {
  readonly ApiDestinationArn?: string;
  readonly ApiDestinationState?: string;
  readonly CreationTime?: Date;
  readonly LastModifiedTime?: Date;
}

export interface CreateArchiveRequest {
  readonly ArchiveName: string;
  readonly EventSourceArn: string;
  readonly Description?: string;
  readonly EventPattern?: string;
  readonly RetentionDays?: number;
}

export interface CreateArchiveResponse {
  readonly ArchiveArn?: string;
  readonly State?: string;
  readonly StateReason?: string;
  readonly CreationTime?: Date;
}

export interface CreateConnectionApiKeyAuthRequestParameters {
  readonly ApiKeyName: string;
  readonly ApiKeyValue: string;
}

export interface CreateConnectionAuthRequestParameters {
  readonly BasicAuthParameters?: CreateConnectionBasicAuthRequestParameters;
  readonly OAuthParameters?: CreateConnectionOAuthRequestParameters;
  readonly ApiKeyAuthParameters?: CreateConnectionApiKeyAuthRequestParameters;
  readonly InvocationHttpParameters?: ConnectionHttpParameters;
}

export interface CreateConnectionBasicAuthRequestParameters {
  readonly Username: string;
  readonly Password: string;
}

export interface CreateConnectionOAuthClientRequestParameters {
  readonly ClientID: string;
  readonly ClientSecret: string;
}

export interface CreateConnectionOAuthRequestParameters {
  readonly ClientParameters: CreateConnectionOAuthClientRequestParameters;
  readonly AuthorizationEndpoint: string;
  readonly HttpMethod: string;
  readonly OAuthHttpParameters?: ConnectionHttpParameters;
}

export interface CreateConnectionRequest {
  readonly Name: string;
  readonly Description?: string;
  readonly AuthorizationType: string;
  readonly AuthParameters: CreateConnectionAuthRequestParameters;
}

export interface CreateConnectionResponse {
  readonly ConnectionArn?: string;
  readonly ConnectionState?: string;
  readonly CreationTime?: Date;
  readonly LastModifiedTime?: Date;
}

export interface CreateEventBusRequest {
  readonly Name: string;
  readonly EventSourceName?: string;
  readonly Tags?: [];
}

export interface CreateEventBusResponse {
  readonly EventBusArn?: string;
}

export interface CreatePartnerEventSourceRequest {
  readonly Name: string;
  readonly Account: string;
}

export interface CreatePartnerEventSourceResponse {
  readonly EventSourceArn?: string;
}

export interface DeactivateEventSourceRequest {
  readonly Name: string;
}

export interface DeadLetterConfig {
  readonly Arn?: string;
}

export interface DeauthorizeConnectionRequest {
  readonly Name: string;
}

export interface DeauthorizeConnectionResponse {
  readonly ConnectionArn?: string;
  readonly ConnectionState?: string;
  readonly CreationTime?: Date;
  readonly LastModifiedTime?: Date;
  readonly LastAuthorizedTime?: Date;
}

export interface DeleteApiDestinationRequest {
  readonly Name: string;
}

export interface DeleteApiDestinationResponse {
}

export interface DeleteArchiveRequest {
  readonly ArchiveName: string;
}

export interface DeleteArchiveResponse {
}

export interface DeleteConnectionRequest {
  readonly Name: string;
}

export interface DeleteConnectionResponse {
  readonly ConnectionArn?: string;
  readonly ConnectionState?: string;
  readonly CreationTime?: Date;
  readonly LastModifiedTime?: Date;
  readonly LastAuthorizedTime?: Date;
}

export interface DeleteEventBusRequest {
  readonly Name: string;
}

export interface DeletePartnerEventSourceRequest {
  readonly Name: string;
  readonly Account: string;
}

export interface DeleteRuleRequest {
  readonly Name: string;
  readonly EventBusName?: string;
  readonly Force?: boolean;
}

export interface DescribeApiDestinationRequest {
  readonly Name: string;
}

export interface DescribeApiDestinationResponse {
  readonly ApiDestinationArn?: string;
  readonly Name?: string;
  readonly Description?: string;
  readonly ApiDestinationState?: string;
  readonly ConnectionArn?: string;
  readonly InvocationEndpoint?: string;
  readonly HttpMethod?: string;
  readonly InvocationRateLimitPerSecond?: number;
  readonly CreationTime?: Date;
  readonly LastModifiedTime?: Date;
}

export interface DescribeArchiveRequest {
  readonly ArchiveName: string;
}

export interface DescribeArchiveResponse {
  readonly ArchiveArn?: string;
  readonly ArchiveName?: string;
  readonly EventSourceArn?: string;
  readonly Description?: string;
  readonly EventPattern?: string;
  readonly State?: string;
  readonly StateReason?: string;
  readonly RetentionDays?: number;
  readonly SizeBytes?: number;
  readonly EventCount?: number;
  readonly CreationTime?: Date;
}

export interface DescribeConnectionRequest {
  readonly Name: string;
}

export interface DescribeConnectionResponse {
  readonly ConnectionArn?: string;
  readonly Name?: string;
  readonly Description?: string;
  readonly ConnectionState?: string;
  readonly StateReason?: string;
  readonly AuthorizationType?: string;
  readonly SecretArn?: string;
  readonly AuthParameters?: ConnectionAuthResponseParameters;
  readonly CreationTime?: Date;
  readonly LastModifiedTime?: Date;
  readonly LastAuthorizedTime?: Date;
}

export interface DescribeEventBusRequest {
  readonly Name?: string;
}

export interface DescribeEventBusResponse {
  readonly Name?: string;
  readonly Arn?: string;
  readonly Policy?: string;
}

export interface DescribeEventSourceRequest {
  readonly Name: string;
}

export interface DescribeEventSourceResponse {
  readonly Arn?: string;
  readonly CreatedBy?: string;
  readonly CreationTime?: Date;
  readonly ExpirationTime?: Date;
  readonly Name?: string;
  readonly State?: string;
}

export interface DescribePartnerEventSourceRequest {
  readonly Name: string;
}

export interface DescribePartnerEventSourceResponse {
  readonly Arn?: string;
  readonly Name?: string;
}

export interface DescribeReplayRequest {
  readonly ReplayName: string;
}

export interface DescribeReplayResponse {
  readonly ReplayName?: string;
  readonly ReplayArn?: string;
  readonly Description?: string;
  readonly State?: string;
  readonly StateReason?: string;
  readonly EventSourceArn?: string;
  readonly Destination?: ReplayDestination;
  readonly EventStartTime?: Date;
  readonly EventEndTime?: Date;
  readonly EventLastReplayedTime?: Date;
  readonly ReplayStartTime?: Date;
  readonly ReplayEndTime?: Date;
}

export interface DescribeRuleRequest {
  readonly Name: string;
  readonly EventBusName?: string;
}

export interface DescribeRuleResponse {
  readonly Name?: string;
  readonly Arn?: string;
  readonly EventPattern?: string;
  readonly ScheduleExpression?: string;
  readonly State?: string;
  readonly Description?: string;
  readonly RoleArn?: string;
  readonly ManagedBy?: string;
  readonly EventBusName?: string;
  readonly CreatedBy?: string;
}

export interface DisableRuleRequest {
  readonly Name: string;
  readonly EventBusName?: string;
}

export interface EcsParameters {
  readonly TaskDefinitionArn: string;
  readonly TaskCount?: number;
  readonly LaunchType?: string;
  readonly NetworkConfiguration?: NetworkConfiguration;
  readonly PlatformVersion?: string;
  readonly Group?: string;
  readonly CapacityProviderStrategy?: [];
  readonly EnableECSManagedTags?: boolean;
  readonly EnableExecuteCommand?: boolean;
  readonly PlacementConstraints?: [];
  readonly PlacementStrategy?: [];
  readonly PropagateTags?: string;
  readonly ReferenceId?: string;
  readonly Tags?: [];
}

export interface EnableRuleRequest {
  readonly Name: string;
  readonly EventBusName?: string;
}

export interface EventBus {
  readonly Name?: string;
  readonly Arn?: string;
  readonly Policy?: string;
}

export interface EventSource {
  readonly Arn?: string;
  readonly CreatedBy?: string;
  readonly CreationTime?: Date;
  readonly ExpirationTime?: Date;
  readonly Name?: string;
  readonly State?: string;
}

export interface HttpParameters {
  readonly PathParameterValues?: [];
  readonly HeaderParameters?: {[key: string]: any};
  readonly QueryStringParameters?: {[key: string]: any};
}

export interface IllegalStatusException {
}

export interface InputTransformer {
  readonly InputPathsMap?: {[key: string]: any};
  readonly InputTemplate: string;
}

export interface InternalException {
}

export interface InvalidEventPatternException {
}

export interface InvalidStateException {
}

export interface KinesisParameters {
  readonly PartitionKeyPath: string;
}

export interface LimitExceededException {
}

export interface ListApiDestinationsRequest {
  readonly NamePrefix?: string;
  readonly ConnectionArn?: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface ListApiDestinationsResponse {
  readonly ApiDestinations?: [];
  readonly NextToken?: string;
}

export interface ListArchivesRequest {
  readonly NamePrefix?: string;
  readonly EventSourceArn?: string;
  readonly State?: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface ListArchivesResponse {
  readonly Archives?: [];
  readonly NextToken?: string;
}

export interface ListConnectionsRequest {
  readonly NamePrefix?: string;
  readonly ConnectionState?: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface ListConnectionsResponse {
  readonly Connections?: [];
  readonly NextToken?: string;
}

export interface ListEventBusesRequest {
  readonly NamePrefix?: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface ListEventBusesResponse {
  readonly EventBuses?: [];
  readonly NextToken?: string;
}

export interface ListEventSourcesRequest {
  readonly NamePrefix?: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface ListEventSourcesResponse {
  readonly EventSources?: [];
  readonly NextToken?: string;
}

export interface ListPartnerEventSourceAccountsRequest {
  readonly EventSourceName: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface ListPartnerEventSourceAccountsResponse {
  readonly PartnerEventSourceAccounts?: [];
  readonly NextToken?: string;
}

export interface ListPartnerEventSourcesRequest {
  readonly NamePrefix: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface ListPartnerEventSourcesResponse {
  readonly PartnerEventSources?: [];
  readonly NextToken?: string;
}

export interface ListReplaysRequest {
  readonly NamePrefix?: string;
  readonly State?: string;
  readonly EventSourceArn?: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface ListReplaysResponse {
  readonly Replays?: [];
  readonly NextToken?: string;
}

export interface ListRuleNamesByTargetRequest {
  readonly TargetArn: string;
  readonly EventBusName?: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface ListRuleNamesByTargetResponse {
  readonly RuleNames?: [];
  readonly NextToken?: string;
}

export interface ListRulesRequest {
  readonly NamePrefix?: string;
  readonly EventBusName?: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface ListRulesResponse {
  readonly Rules?: [];
  readonly NextToken?: string;
}

export interface ListTagsForResourceRequest {
  readonly ResourceARN: string;
}

export interface ListTagsForResourceResponse {
  readonly Tags?: [];
}

export interface ListTargetsByRuleRequest {
  readonly Rule: string;
  readonly EventBusName?: string;
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface ListTargetsByRuleResponse {
  readonly Targets?: [];
  readonly NextToken?: string;
}

export interface ManagedRuleException {
}

export interface NetworkConfiguration {
  readonly awsvpcConfiguration?: AwsVpcConfiguration;
}

export interface OperationDisabledException {
}

export interface PartnerEventSource {
  readonly Arn?: string;
  readonly Name?: string;
}

export interface PartnerEventSourceAccount {
  readonly Account?: string;
  readonly CreationTime?: Date;
  readonly ExpirationTime?: Date;
  readonly State?: string;
}

export interface PlacementConstraint {
  readonly type?: string;
  readonly expression?: string;
}

export interface PlacementStrategy {
  readonly type?: string;
  readonly field?: string;
}

export interface PolicyLengthExceededException {
}

export interface PutEventsRequest {
  readonly Entries: [];
}

export interface PutEventsRequestEntry {
  readonly Time?: Date;
  readonly Source?: string;
  readonly Resources?: [];
  readonly DetailType?: string;
  readonly Detail?: string;
  readonly EventBusName?: string;
  readonly TraceHeader?: string;
}

export interface PutEventsResponse {
  readonly FailedEntryCount?: number;
  readonly Entries?: [];
}

export interface PutEventsResultEntry {
  readonly EventId?: string;
  readonly ErrorCode?: string;
  readonly ErrorMessage?: string;
}

export interface PutPartnerEventsRequest {
  readonly Entries: [];
}

export interface PutPartnerEventsRequestEntry {
  readonly Time?: Date;
  readonly Source?: string;
  readonly Resources?: [];
  readonly DetailType?: string;
  readonly Detail?: string;
}

export interface PutPartnerEventsResponse {
  readonly FailedEntryCount?: number;
  readonly Entries?: [];
}

export interface PutPartnerEventsResultEntry {
  readonly EventId?: string;
  readonly ErrorCode?: string;
  readonly ErrorMessage?: string;
}

export interface PutPermissionRequest {
  readonly EventBusName?: string;
  readonly Action?: string;
  readonly Principal?: string;
  readonly StatementId?: string;
  readonly Condition?: Condition;
  readonly Policy?: string;
}

export interface PutRuleRequest {
  readonly Name: string;
  readonly ScheduleExpression?: string;
  readonly EventPattern?: string;
  readonly State?: string;
  readonly Description?: string;
  readonly RoleArn?: string;
  readonly Tags?: [];
  readonly EventBusName?: string;
}

export interface PutRuleResponse {
  readonly RuleArn?: string;
}

export interface PutTargetsRequest {
  readonly Rule: string;
  readonly EventBusName?: string;
  readonly Targets: [];
}

export interface PutTargetsResponse {
  readonly FailedEntryCount?: number;
  readonly FailedEntries?: [];
}

export interface PutTargetsResultEntry {
  readonly TargetId?: string;
  readonly ErrorCode?: string;
  readonly ErrorMessage?: string;
}

export interface RedshiftDataParameters {
  readonly SecretManagerArn?: string;
  readonly Database: string;
  readonly DbUser?: string;
  readonly Sql: string;
  readonly StatementName?: string;
  readonly WithEvent?: boolean;
}

export interface RemovePermissionRequest {
  readonly StatementId?: string;
  readonly RemoveAllPermissions?: boolean;
  readonly EventBusName?: string;
}

export interface RemoveTargetsRequest {
  readonly Rule: string;
  readonly EventBusName?: string;
  readonly Ids: [];
  readonly Force?: boolean;
}

export interface RemoveTargetsResponse {
  readonly FailedEntryCount?: number;
  readonly FailedEntries?: [];
}

export interface RemoveTargetsResultEntry {
  readonly TargetId?: string;
  readonly ErrorCode?: string;
  readonly ErrorMessage?: string;
}

export interface Replay {
  readonly ReplayName?: string;
  readonly EventSourceArn?: string;
  readonly State?: string;
  readonly StateReason?: string;
  readonly EventStartTime?: Date;
  readonly EventEndTime?: Date;
  readonly EventLastReplayedTime?: Date;
  readonly ReplayStartTime?: Date;
  readonly ReplayEndTime?: Date;
}

export interface ReplayDestination {
  readonly Arn: string;
  readonly FilterArns?: [];
}

export interface ResourceAlreadyExistsException {
}

export interface ResourceNotFoundException {
}

export interface RetryPolicy {
  readonly MaximumRetryAttempts?: number;
  readonly MaximumEventAgeInSeconds?: number;
}

export interface Rule {
  readonly Name?: string;
  readonly Arn?: string;
  readonly EventPattern?: string;
  readonly State?: string;
  readonly Description?: string;
  readonly ScheduleExpression?: string;
  readonly RoleArn?: string;
  readonly ManagedBy?: string;
  readonly EventBusName?: string;
}

export interface RunCommandParameters {
  readonly RunCommandTargets: [];
}

export interface RunCommandTarget {
  readonly Key: string;
  readonly Values: [];
}

export interface SageMakerPipelineParameter {
  readonly Name: string;
  readonly Value: string;
}

export interface SageMakerPipelineParameters {
  readonly PipelineParameterList?: [];
}

export interface SqsParameters {
  readonly MessageGroupId?: string;
}

export interface StartReplayRequest {
  readonly ReplayName: string;
  readonly Description?: string;
  readonly EventSourceArn: string;
  readonly EventStartTime: Date;
  readonly EventEndTime: Date;
  readonly Destination: ReplayDestination;
}

export interface StartReplayResponse {
  readonly ReplayArn?: string;
  readonly State?: string;
  readonly StateReason?: string;
  readonly ReplayStartTime?: Date;
}

export interface Tag {
  readonly Key: string;
  readonly Value: string;
}

export interface TagResourceRequest {
  readonly ResourceARN: string;
  readonly Tags: [];
}

export interface TagResourceResponse {
}

export interface Target {
  readonly Id: string;
  readonly Arn: string;
  readonly RoleArn?: string;
  readonly Input?: string;
  readonly InputPath?: string;
  readonly InputTransformer?: InputTransformer;
  readonly KinesisParameters?: KinesisParameters;
  readonly RunCommandParameters?: RunCommandParameters;
  readonly EcsParameters?: EcsParameters;
  readonly BatchParameters?: BatchParameters;
  readonly SqsParameters?: SqsParameters;
  readonly HttpParameters?: HttpParameters;
  readonly RedshiftDataParameters?: RedshiftDataParameters;
  readonly SageMakerPipelineParameters?: SageMakerPipelineParameters;
  readonly DeadLetterConfig?: DeadLetterConfig;
  readonly RetryPolicy?: RetryPolicy;
}

export interface TestEventPatternRequest {
  readonly EventPattern: string;
  readonly Event: string;
}

export interface TestEventPatternResponse {
  readonly Result?: boolean;
}

export interface UntagResourceRequest {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}

export interface UntagResourceResponse {
}

export interface UpdateApiDestinationRequest {
  readonly Name: string;
  readonly Description?: string;
  readonly ConnectionArn?: string;
  readonly InvocationEndpoint?: string;
  readonly HttpMethod?: string;
  readonly InvocationRateLimitPerSecond?: number;
}

export interface UpdateApiDestinationResponse {
  readonly ApiDestinationArn?: string;
  readonly ApiDestinationState?: string;
  readonly CreationTime?: Date;
  readonly LastModifiedTime?: Date;
}

export interface UpdateArchiveRequest {
  readonly ArchiveName: string;
  readonly Description?: string;
  readonly EventPattern?: string;
  readonly RetentionDays?: number;
}

export interface UpdateArchiveResponse {
  readonly ArchiveArn?: string;
  readonly State?: string;
  readonly StateReason?: string;
  readonly CreationTime?: Date;
}

export interface UpdateConnectionApiKeyAuthRequestParameters {
  readonly ApiKeyName?: string;
  readonly ApiKeyValue?: string;
}

export interface UpdateConnectionAuthRequestParameters {
  readonly BasicAuthParameters?: UpdateConnectionBasicAuthRequestParameters;
  readonly OAuthParameters?: UpdateConnectionOAuthRequestParameters;
  readonly ApiKeyAuthParameters?: UpdateConnectionApiKeyAuthRequestParameters;
  readonly InvocationHttpParameters?: ConnectionHttpParameters;
}

export interface UpdateConnectionBasicAuthRequestParameters {
  readonly Username?: string;
  readonly Password?: string;
}

export interface UpdateConnectionOAuthClientRequestParameters {
  readonly ClientID?: string;
  readonly ClientSecret?: string;
}

export interface UpdateConnectionOAuthRequestParameters {
  readonly ClientParameters?: UpdateConnectionOAuthClientRequestParameters;
  readonly AuthorizationEndpoint?: string;
  readonly HttpMethod?: string;
  readonly OAuthHttpParameters?: ConnectionHttpParameters;
}

export interface UpdateConnectionRequest {
  readonly Name: string;
  readonly Description?: string;
  readonly AuthorizationType?: string;
  readonly AuthParameters?: UpdateConnectionAuthRequestParameters;
}

export interface UpdateConnectionResponse {
  readonly ConnectionArn?: string;
  readonly ConnectionState?: string;
  readonly CreationTime?: Date;
  readonly LastModifiedTime?: Date;
  readonly LastAuthorizedTime?: Date;
}


