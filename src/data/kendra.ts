/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AssociateEntitiesToExperience {
  readonly Id: string;
  readonly IndexId: string;
  readonly EntityList: [];
}

export interface AssociatePersonasToEntities {
  readonly Id: string;
  readonly IndexId: string;
  readonly Personas: [];
}

export interface BatchDeleteDocument {
  readonly IndexId: string;
  readonly DocumentIdList: [];
  readonly DataSourceSyncJobMetricTarget?: DataSourceSyncJobMetricTarget;
}

export interface BatchGetDocumentStatus {
  readonly IndexId: string;
  readonly DocumentInfoList: [];
}

export interface BatchPutDocument {
  readonly IndexId: string;
  readonly RoleArn?: string;
  readonly Documents: [];
  readonly CustomDocumentEnrichmentConfiguration?: CustomDocumentEnrichmentConfiguration;
}

export interface ClearQuerySuggestions {
  readonly IndexId: string;
}

export interface CreateDataSource {
  readonly Name: string;
  readonly IndexId: string;
  readonly Type: string;
  readonly Configuration?: DataSourceConfiguration;
  readonly Description?: string;
  readonly Schedule?: string;
  readonly RoleArn?: string;
  readonly Tags?: [];
  readonly ClientToken?: string;
  readonly LanguageCode?: string;
  readonly CustomDocumentEnrichmentConfiguration?: CustomDocumentEnrichmentConfiguration;
}

export interface CreateExperience {
  readonly Name: string;
  readonly IndexId: string;
  readonly RoleArn?: string;
  readonly Configuration?: ExperienceConfiguration;
  readonly Description?: string;
  readonly ClientToken?: string;
}

export interface CreateFaq {
  readonly IndexId: string;
  readonly Name: string;
  readonly Description?: string;
  readonly S3Path: S3Path;
  readonly RoleArn: string;
  readonly Tags?: [];
  readonly FileFormat?: string;
  readonly ClientToken?: string;
  readonly LanguageCode?: string;
}

export interface CreateIndex {
  readonly Name: string;
  readonly Edition?: string;
  readonly RoleArn: string;
  readonly ServerSideEncryptionConfiguration?: ServerSideEncryptionConfiguration;
  readonly Description?: string;
  readonly ClientToken?: string;
  readonly Tags?: [];
  readonly UserTokenConfigurations?: [];
  readonly UserContextPolicy?: string;
  readonly UserGroupResolutionConfiguration?: UserGroupResolutionConfiguration;
}

export interface CreateQuerySuggestionsBlockList {
  readonly IndexId: string;
  readonly Name: string;
  readonly Description?: string;
  readonly SourceS3Path: S3Path;
  readonly ClientToken?: string;
  readonly RoleArn: string;
  readonly Tags?: [];
}

export interface CreateThesaurus {
  readonly IndexId: string;
  readonly Name: string;
  readonly Description?: string;
  readonly RoleArn: string;
  readonly Tags?: [];
  readonly SourceS3Path: S3Path;
  readonly ClientToken?: string;
}

export interface DeleteDataSource {
  readonly Id: string;
  readonly IndexId: string;
}

export interface DeleteExperience {
  readonly Id: string;
  readonly IndexId: string;
}

export interface DeleteFaq {
  readonly Id: string;
  readonly IndexId: string;
}

export interface DeleteIndex {
  readonly Id: string;
}

export interface DeletePrincipalMapping {
  readonly IndexId: string;
  readonly DataSourceId?: string;
  readonly GroupId: string;
  readonly OrderingId?: number;
}

export interface DeleteQuerySuggestionsBlockList {
  readonly IndexId: string;
  readonly Id: string;
}

export interface DeleteThesaurus {
  readonly Id: string;
  readonly IndexId: string;
}

export interface DescribeDataSource {
  readonly Id: string;
  readonly IndexId: string;
}

export interface DescribeExperience {
  readonly Id: string;
  readonly IndexId: string;
}

export interface DescribeFaq {
  readonly Id: string;
  readonly IndexId: string;
}

export interface DescribeIndex {
  readonly Id: string;
}

export interface DescribePrincipalMapping {
  readonly IndexId: string;
  readonly DataSourceId?: string;
  readonly GroupId: string;
}

export interface DescribeQuerySuggestionsBlockList {
  readonly IndexId: string;
  readonly Id: string;
}

export interface DescribeQuerySuggestionsConfig {
  readonly IndexId: string;
}

export interface DescribeThesaurus {
  readonly Id: string;
  readonly IndexId: string;
}

export interface DisassociateEntitiesFromExperience {
  readonly Id: string;
  readonly IndexId: string;
  readonly EntityList: [];
}

export interface DisassociatePersonasFromEntities {
  readonly Id: string;
  readonly IndexId: string;
  readonly EntityIds: [];
}

export interface GetQuerySuggestions {
  readonly IndexId: string;
  readonly QueryText: string;
  readonly MaxSuggestionsCount?: number;
}

export interface GetSnapshots {
  readonly IndexId: string;
  readonly Interval: string;
  readonly MetricType: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListDataSourceSyncJobs {
  readonly Id: string;
  readonly IndexId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly StartTimeFilter?: TimeRange;
  readonly StatusFilter?: string;
}

export interface ListDataSources {
  readonly IndexId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListEntityPersonas {
  readonly Id: string;
  readonly IndexId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListExperienceEntities {
  readonly Id: string;
  readonly IndexId: string;
  readonly NextToken?: string;
}

export interface ListExperiences {
  readonly IndexId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListFaqs {
  readonly IndexId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListGroupsOlderThanOrderingId {
  readonly IndexId: string;
  readonly DataSourceId?: string;
  readonly OrderingId: number;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListIndices {
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListQuerySuggestionsBlockLists {
  readonly IndexId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListTagsForResource {
  readonly ResourceARN: string;
}

export interface ListThesauri {
  readonly IndexId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface PutPrincipalMapping {
  readonly IndexId: string;
  readonly DataSourceId?: string;
  readonly GroupId: string;
  readonly GroupMembers: GroupMembers;
  readonly OrderingId?: number;
  readonly RoleArn?: string;
}

export interface Query {
  readonly IndexId: string;
  readonly QueryText: string;
  readonly AttributeFilter?: AttributeFilter;
  readonly Facets?: [];
  readonly RequestedDocumentAttributes?: [];
  readonly QueryResultTypeFilter?: string;
  readonly DocumentRelevanceOverrideConfigurations?: [];
  readonly PageNumber?: number;
  readonly PageSize?: number;
  readonly SortingConfiguration?: SortingConfiguration;
  readonly UserContext?: UserContext;
  readonly VisitorId?: string;
}

export interface StartDataSourceSyncJob {
  readonly Id: string;
  readonly IndexId: string;
}

export interface StopDataSourceSyncJob {
  readonly Id: string;
  readonly IndexId: string;
}

export interface SubmitFeedback {
  readonly IndexId: string;
  readonly QueryId: string;
  readonly ClickFeedbackItems?: [];
  readonly RelevanceFeedbackItems?: [];
}

export interface TagResource {
  readonly ResourceARN: string;
  readonly Tags: [];
}

export interface UntagResource {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}

export interface UpdateDataSource {
  readonly Id: string;
  readonly Name?: string;
  readonly IndexId: string;
  readonly Configuration?: DataSourceConfiguration;
  readonly Description?: string;
  readonly Schedule?: string;
  readonly RoleArn?: string;
  readonly LanguageCode?: string;
  readonly CustomDocumentEnrichmentConfiguration?: CustomDocumentEnrichmentConfiguration;
}

export interface UpdateExperience {
  readonly Id: string;
  readonly Name?: string;
  readonly IndexId: string;
  readonly RoleArn?: string;
  readonly Configuration?: ExperienceConfiguration;
  readonly Description?: string;
}

export interface UpdateIndex {
  readonly Id: string;
  readonly Name?: string;
  readonly RoleArn?: string;
  readonly Description?: string;
  readonly DocumentMetadataConfigurationUpdates?: [];
  readonly CapacityUnits?: CapacityUnitsConfiguration;
  readonly UserTokenConfigurations?: [];
  readonly UserContextPolicy?: string;
  readonly UserGroupResolutionConfiguration?: UserGroupResolutionConfiguration;
}

export interface UpdateQuerySuggestionsBlockList {
  readonly IndexId: string;
  readonly Id: string;
  readonly Name?: string;
  readonly Description?: string;
  readonly SourceS3Path?: S3Path;
  readonly RoleArn?: string;
}

export interface UpdateQuerySuggestionsConfig {
  readonly IndexId: string;
  readonly Mode?: string;
  readonly QueryLogLookBackWindowInDays?: number;
  readonly IncludeQueriesWithoutUserInformation?: boolean;
  readonly MinimumNumberOfQueryingUsers?: number;
  readonly MinimumQueryCount?: number;
}

export interface UpdateThesaurus {
  readonly Id: string;
  readonly Name?: string;
  readonly IndexId: string;
  readonly Description?: string;
  readonly RoleArn?: string;
  readonly SourceS3Path?: S3Path;
}

export interface AccessControlListConfiguration {
  readonly KeyPath?: string;
}

export interface AccessDeniedException {
  readonly Message?: string;
}

export interface AclConfiguration {
  readonly AllowedGroupsColumnName: string;
}

export interface AdditionalResultAttribute {
  readonly Key: string;
  readonly ValueType: string;
  readonly Value: AdditionalResultAttributeValue;
}

export interface AdditionalResultAttributeValue {
  readonly TextWithHighlightsValue?: TextWithHighlights;
}

export interface AssociateEntitiesToExperienceRequest {
  readonly Id: string;
  readonly IndexId: string;
  readonly EntityList: [];
}

export interface AssociateEntitiesToExperienceResponse {
  readonly FailedEntityList?: [];
}

export interface AssociatePersonasToEntitiesRequest {
  readonly Id: string;
  readonly IndexId: string;
  readonly Personas: [];
}

export interface AssociatePersonasToEntitiesResponse {
  readonly FailedEntityList?: [];
}

export interface AttributeFilter {
  readonly AndAllFilters?: [];
  readonly OrAllFilters?: [];
  readonly NotFilter?: AttributeFilter;
  readonly EqualsTo?: DocumentAttribute;
  readonly ContainsAll?: DocumentAttribute;
  readonly ContainsAny?: DocumentAttribute;
  readonly GreaterThan?: DocumentAttribute;
  readonly GreaterThanOrEquals?: DocumentAttribute;
  readonly LessThan?: DocumentAttribute;
  readonly LessThanOrEquals?: DocumentAttribute;
}

export interface AuthenticationConfiguration {
  readonly BasicAuthentication?: [];
}

export interface BasicAuthenticationConfiguration {
  readonly Host: string;
  readonly Port: number;
  readonly Credentials: string;
}

export interface BatchDeleteDocumentRequest {
  readonly IndexId: string;
  readonly DocumentIdList: [];
  readonly DataSourceSyncJobMetricTarget?: DataSourceSyncJobMetricTarget;
}

export interface BatchDeleteDocumentResponse {
  readonly FailedDocuments?: [];
}

export interface BatchDeleteDocumentResponseFailedDocument {
  readonly Id?: string;
  readonly ErrorCode?: string;
  readonly ErrorMessage?: string;
}

export interface BatchGetDocumentStatusRequest {
  readonly IndexId: string;
  readonly DocumentInfoList: [];
}

export interface BatchGetDocumentStatusResponse {
  readonly Errors?: [];
  readonly DocumentStatusList?: [];
}

export interface BatchGetDocumentStatusResponseError {
  readonly DocumentId?: string;
  readonly ErrorCode?: string;
  readonly ErrorMessage?: string;
}

export interface BatchPutDocumentRequest {
  readonly IndexId: string;
  readonly RoleArn?: string;
  readonly Documents: [];
  readonly CustomDocumentEnrichmentConfiguration?: CustomDocumentEnrichmentConfiguration;
}

export interface BatchPutDocumentResponse {
  readonly FailedDocuments?: [];
}

export interface BatchPutDocumentResponseFailedDocument {
  readonly Id?: string;
  readonly ErrorCode?: string;
  readonly ErrorMessage?: string;
}

export interface CapacityUnitsConfiguration {
  readonly StorageCapacityUnits: number;
  readonly QueryCapacityUnits: number;
}

export interface ClearQuerySuggestionsRequest {
  readonly IndexId: string;
}

export interface ClickFeedback {
  readonly ResultId: string;
  readonly ClickTime: Date;
}

export interface ColumnConfiguration {
  readonly DocumentIdColumnName: string;
  readonly DocumentDataColumnName: string;
  readonly DocumentTitleColumnName?: string;
  readonly FieldMappings?: [];
  readonly ChangeDetectingColumns: [];
}

export interface ConflictException {
  readonly Message?: string;
}

export interface ConfluenceAttachmentConfiguration {
  readonly CrawlAttachments?: boolean;
  readonly AttachmentFieldMappings?: [];
}

export interface ConfluenceAttachmentToIndexFieldMapping {
  readonly DataSourceFieldName?: string;
  readonly DateFieldFormat?: string;
  readonly IndexFieldName?: string;
}

export interface ConfluenceBlogConfiguration {
  readonly BlogFieldMappings?: [];
}

export interface ConfluenceBlogToIndexFieldMapping {
  readonly DataSourceFieldName?: string;
  readonly DateFieldFormat?: string;
  readonly IndexFieldName?: string;
}

export interface ConfluenceConfiguration {
  readonly ServerUrl: string;
  readonly SecretArn: string;
  readonly Version: string;
  readonly SpaceConfiguration?: ConfluenceSpaceConfiguration;
  readonly PageConfiguration?: ConfluencePageConfiguration;
  readonly BlogConfiguration?: ConfluenceBlogConfiguration;
  readonly AttachmentConfiguration?: ConfluenceAttachmentConfiguration;
  readonly VpcConfiguration?: DataSourceVpcConfiguration;
  readonly InclusionPatterns?: [];
  readonly ExclusionPatterns?: [];
}

export interface ConfluencePageConfiguration {
  readonly PageFieldMappings?: [];
}

export interface ConfluencePageToIndexFieldMapping {
  readonly DataSourceFieldName?: string;
  readonly DateFieldFormat?: string;
  readonly IndexFieldName?: string;
}

export interface ConfluenceSpaceConfiguration {
  readonly CrawlPersonalSpaces?: boolean;
  readonly CrawlArchivedSpaces?: boolean;
  readonly IncludeSpaces?: [];
  readonly ExcludeSpaces?: [];
  readonly SpaceFieldMappings?: [];
}

export interface ConfluenceSpaceToIndexFieldMapping {
  readonly DataSourceFieldName?: string;
  readonly DateFieldFormat?: string;
  readonly IndexFieldName?: string;
}

export interface ConnectionConfiguration {
  readonly DatabaseHost: string;
  readonly DatabasePort: number;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly SecretArn: string;
}

export interface ContentSourceConfiguration {
  readonly DataSourceIds?: [];
  readonly FaqIds?: [];
  readonly DirectPutContent?: boolean;
}

export interface CreateDataSourceRequest {
  readonly Name: string;
  readonly IndexId: string;
  readonly Type: string;
  readonly Configuration?: DataSourceConfiguration;
  readonly Description?: string;
  readonly Schedule?: string;
  readonly RoleArn?: string;
  readonly Tags?: [];
  readonly ClientToken?: string;
  readonly LanguageCode?: string;
  readonly CustomDocumentEnrichmentConfiguration?: CustomDocumentEnrichmentConfiguration;
}

export interface CreateDataSourceResponse {
  readonly Id: string;
}

export interface CreateExperienceRequest {
  readonly Name: string;
  readonly IndexId: string;
  readonly RoleArn?: string;
  readonly Configuration?: ExperienceConfiguration;
  readonly Description?: string;
  readonly ClientToken?: string;
}

export interface CreateExperienceResponse {
  readonly Id: string;
}

export interface CreateFaqRequest {
  readonly IndexId: string;
  readonly Name: string;
  readonly Description?: string;
  readonly S3Path: S3Path;
  readonly RoleArn: string;
  readonly Tags?: [];
  readonly FileFormat?: string;
  readonly ClientToken?: string;
  readonly LanguageCode?: string;
}

export interface CreateFaqResponse {
  readonly Id?: string;
}

export interface CreateIndexRequest {
  readonly Name: string;
  readonly Edition?: string;
  readonly RoleArn: string;
  readonly ServerSideEncryptionConfiguration?: ServerSideEncryptionConfiguration;
  readonly Description?: string;
  readonly ClientToken?: string;
  readonly Tags?: [];
  readonly UserTokenConfigurations?: [];
  readonly UserContextPolicy?: string;
  readonly UserGroupResolutionConfiguration?: UserGroupResolutionConfiguration;
}

export interface CreateIndexResponse {
  readonly Id?: string;
}

export interface CreateQuerySuggestionsBlockListRequest {
  readonly IndexId: string;
  readonly Name: string;
  readonly Description?: string;
  readonly SourceS3Path: S3Path;
  readonly ClientToken?: string;
  readonly RoleArn: string;
  readonly Tags?: [];
}

export interface CreateQuerySuggestionsBlockListResponse {
  readonly Id?: string;
}

export interface CreateThesaurusRequest {
  readonly IndexId: string;
  readonly Name: string;
  readonly Description?: string;
  readonly RoleArn: string;
  readonly Tags?: [];
  readonly SourceS3Path: S3Path;
  readonly ClientToken?: string;
}

export interface CreateThesaurusResponse {
  readonly Id?: string;
}

export interface CustomDocumentEnrichmentConfiguration {
  readonly InlineConfigurations?: [];
  readonly PreExtractionHookConfiguration?: HookConfiguration;
  readonly PostExtractionHookConfiguration?: HookConfiguration;
  readonly RoleArn?: string;
}

export interface DataSourceConfiguration {
  readonly S3Configuration?: S3DataSourceConfiguration;
  readonly SharePointConfiguration?: SharePointConfiguration;
  readonly DatabaseConfiguration?: DatabaseConfiguration;
  readonly SalesforceConfiguration?: SalesforceConfiguration;
  readonly OneDriveConfiguration?: OneDriveConfiguration;
  readonly ServiceNowConfiguration?: ServiceNowConfiguration;
  readonly ConfluenceConfiguration?: ConfluenceConfiguration;
  readonly GoogleDriveConfiguration?: GoogleDriveConfiguration;
  readonly WebCrawlerConfiguration?: WebCrawlerConfiguration;
  readonly WorkDocsConfiguration?: WorkDocsConfiguration;
}

export interface DataSourceGroup {
  readonly GroupId: string;
  readonly DataSourceId: string;
}

export interface DataSourceSummary {
  readonly Name?: string;
  readonly Id?: string;
  readonly Type?: string;
  readonly CreatedAt?: Date;
  readonly UpdatedAt?: Date;
  readonly Status?: string;
  readonly LanguageCode?: string;
}

export interface DataSourceSyncJob {
  readonly ExecutionId?: string;
  readonly StartTime?: Date;
  readonly EndTime?: Date;
  readonly Status?: string;
  readonly ErrorMessage?: string;
  readonly ErrorCode?: string;
  readonly DataSourceErrorCode?: string;
  readonly Metrics?: DataSourceSyncJobMetrics;
}

export interface DataSourceSyncJobMetricTarget {
  readonly DataSourceId: string;
  readonly DataSourceSyncJobId?: string;
}

export interface DataSourceSyncJobMetrics {
  readonly DocumentsAdded?: string;
  readonly DocumentsModified?: string;
  readonly DocumentsDeleted?: string;
  readonly DocumentsFailed?: string;
  readonly DocumentsScanned?: string;
}

export interface DataSourceToIndexFieldMapping {
  readonly DataSourceFieldName: string;
  readonly DateFieldFormat?: string;
  readonly IndexFieldName: string;
}

export interface DataSourceVpcConfiguration {
  readonly SubnetIds: [];
  readonly SecurityGroupIds: [];
}

export interface DatabaseConfiguration {
  readonly DatabaseEngineType: string;
  readonly ConnectionConfiguration: ConnectionConfiguration;
  readonly VpcConfiguration?: DataSourceVpcConfiguration;
  readonly ColumnConfiguration: ColumnConfiguration;
  readonly AclConfiguration?: AclConfiguration;
  readonly SqlConfiguration?: SqlConfiguration;
}

export interface DeleteDataSourceRequest {
  readonly Id: string;
  readonly IndexId: string;
}

export interface DeleteExperienceRequest {
  readonly Id: string;
  readonly IndexId: string;
}

export interface DeleteExperienceResponse {
}

export interface DeleteFaqRequest {
  readonly Id: string;
  readonly IndexId: string;
}

export interface DeleteIndexRequest {
  readonly Id: string;
}

export interface DeletePrincipalMappingRequest {
  readonly IndexId: string;
  readonly DataSourceId?: string;
  readonly GroupId: string;
  readonly OrderingId?: number;
}

export interface DeleteQuerySuggestionsBlockListRequest {
  readonly IndexId: string;
  readonly Id: string;
}

export interface DeleteThesaurusRequest {
  readonly Id: string;
  readonly IndexId: string;
}

export interface DescribeDataSourceRequest {
  readonly Id: string;
  readonly IndexId: string;
}

export interface DescribeDataSourceResponse {
  readonly Id?: string;
  readonly IndexId?: string;
  readonly Name?: string;
  readonly Type?: string;
  readonly Configuration?: DataSourceConfiguration;
  readonly CreatedAt?: Date;
  readonly UpdatedAt?: Date;
  readonly Description?: string;
  readonly Status?: string;
  readonly Schedule?: string;
  readonly RoleArn?: string;
  readonly ErrorMessage?: string;
  readonly LanguageCode?: string;
  readonly CustomDocumentEnrichmentConfiguration?: CustomDocumentEnrichmentConfiguration;
}

export interface DescribeExperienceRequest {
  readonly Id: string;
  readonly IndexId: string;
}

export interface DescribeExperienceResponse {
  readonly Id?: string;
  readonly IndexId?: string;
  readonly Name?: string;
  readonly Endpoints?: [];
  readonly Configuration?: ExperienceConfiguration;
  readonly CreatedAt?: Date;
  readonly UpdatedAt?: Date;
  readonly Description?: string;
  readonly Status?: string;
  readonly RoleArn?: string;
  readonly ErrorMessage?: string;
}

export interface DescribeFaqRequest {
  readonly Id: string;
  readonly IndexId: string;
}

export interface DescribeFaqResponse {
  readonly Id?: string;
  readonly IndexId?: string;
  readonly Name?: string;
  readonly Description?: string;
  readonly CreatedAt?: Date;
  readonly UpdatedAt?: Date;
  readonly S3Path?: S3Path;
  readonly Status?: string;
  readonly RoleArn?: string;
  readonly ErrorMessage?: string;
  readonly FileFormat?: string;
  readonly LanguageCode?: string;
}

export interface DescribeIndexRequest {
  readonly Id: string;
}

export interface DescribeIndexResponse {
  readonly Name?: string;
  readonly Id?: string;
  readonly Edition?: string;
  readonly RoleArn?: string;
  readonly ServerSideEncryptionConfiguration?: ServerSideEncryptionConfiguration;
  readonly Status?: string;
  readonly Description?: string;
  readonly CreatedAt?: Date;
  readonly UpdatedAt?: Date;
  readonly DocumentMetadataConfigurations?: [];
  readonly IndexStatistics?: IndexStatistics;
  readonly ErrorMessage?: string;
  readonly CapacityUnits?: CapacityUnitsConfiguration;
  readonly UserTokenConfigurations?: [];
  readonly UserContextPolicy?: string;
  readonly UserGroupResolutionConfiguration?: UserGroupResolutionConfiguration;
}

export interface DescribePrincipalMappingRequest {
  readonly IndexId: string;
  readonly DataSourceId?: string;
  readonly GroupId: string;
}

export interface DescribePrincipalMappingResponse {
  readonly IndexId?: string;
  readonly DataSourceId?: string;
  readonly GroupId?: string;
  readonly GroupOrderingIdSummaries?: [];
}

export interface DescribeQuerySuggestionsBlockListRequest {
  readonly IndexId: string;
  readonly Id: string;
}

export interface DescribeQuerySuggestionsBlockListResponse {
  readonly IndexId?: string;
  readonly Id?: string;
  readonly Name?: string;
  readonly Description?: string;
  readonly Status?: string;
  readonly ErrorMessage?: string;
  readonly CreatedAt?: Date;
  readonly UpdatedAt?: Date;
  readonly SourceS3Path?: S3Path;
  readonly ItemCount?: number;
  readonly FileSizeBytes?: number;
  readonly RoleArn?: string;
}

export interface DescribeQuerySuggestionsConfigRequest {
  readonly IndexId: string;
}

export interface DescribeQuerySuggestionsConfigResponse {
  readonly Mode?: string;
  readonly Status?: string;
  readonly QueryLogLookBackWindowInDays?: number;
  readonly IncludeQueriesWithoutUserInformation?: boolean;
  readonly MinimumNumberOfQueryingUsers?: number;
  readonly MinimumQueryCount?: number;
  readonly LastSuggestionsBuildTime?: Date;
  readonly LastClearTime?: Date;
  readonly TotalSuggestionsCount?: number;
}

export interface DescribeThesaurusRequest {
  readonly Id: string;
  readonly IndexId: string;
}

export interface DescribeThesaurusResponse {
  readonly Id?: string;
  readonly IndexId?: string;
  readonly Name?: string;
  readonly Description?: string;
  readonly Status?: string;
  readonly ErrorMessage?: string;
  readonly CreatedAt?: Date;
  readonly UpdatedAt?: Date;
  readonly RoleArn?: string;
  readonly SourceS3Path?: S3Path;
  readonly FileSizeBytes?: number;
  readonly TermCount?: number;
  readonly SynonymRuleCount?: number;
}

export interface DisassociateEntitiesFromExperienceRequest {
  readonly Id: string;
  readonly IndexId: string;
  readonly EntityList: [];
}

export interface DisassociateEntitiesFromExperienceResponse {
  readonly FailedEntityList?: [];
}

export interface DisassociatePersonasFromEntitiesRequest {
  readonly Id: string;
  readonly IndexId: string;
  readonly EntityIds: [];
}

export interface DisassociatePersonasFromEntitiesResponse {
  readonly FailedEntityList?: [];
}

export interface Document {
  readonly Id: string;
  readonly Title?: string;
  readonly Blob?: unknown;
  readonly S3Path?: S3Path;
  readonly Attributes?: [];
  readonly AccessControlList?: [];
  readonly HierarchicalAccessControlList?: [];
  readonly ContentType?: string;
}

export interface DocumentAttribute {
  readonly Key: string;
  readonly Value: DocumentAttributeValue;
}

export interface DocumentAttributeCondition {
  readonly ConditionDocumentAttributeKey: string;
  readonly Operator: string;
  readonly ConditionOnValue?: DocumentAttributeValue;
}

export interface DocumentAttributeTarget {
  readonly TargetDocumentAttributeKey?: string;
  readonly TargetDocumentAttributeValueDeletion?: boolean;
  readonly TargetDocumentAttributeValue?: DocumentAttributeValue;
}

export interface DocumentAttributeValue {
  readonly StringValue?: string;
  readonly StringListValue?: [];
  readonly LongValue?: number;
  readonly DateValue?: Date;
}

export interface DocumentAttributeValueCountPair {
  readonly DocumentAttributeValue?: DocumentAttributeValue;
  readonly Count?: number;
}

export interface DocumentInfo {
  readonly DocumentId: string;
  readonly Attributes?: [];
}

export interface DocumentMetadataConfiguration {
  readonly Name: string;
  readonly Type: string;
  readonly Relevance?: Relevance;
  readonly Search?: Search;
}

export interface DocumentRelevanceConfiguration {
  readonly Name: string;
  readonly Relevance: Relevance;
}

export interface DocumentsMetadataConfiguration {
  readonly S3Prefix?: string;
}

export interface EntityConfiguration {
  readonly EntityId: string;
  readonly EntityType: string;
}

export interface EntityDisplayData {
  readonly UserName?: string;
  readonly GroupName?: string;
  readonly IdentifiedUserName?: string;
  readonly FirstName?: string;
  readonly LastName?: string;
}

export interface EntityPersonaConfiguration {
  readonly EntityId: string;
  readonly Persona: string;
}

export interface ExperienceConfiguration {
  readonly ContentSourceConfiguration?: ContentSourceConfiguration;
  readonly UserIdentityConfiguration?: UserIdentityConfiguration;
}

export interface ExperienceEndpoint {
  readonly EndpointType?: string;
  readonly Endpoint?: string;
}

export interface ExperienceEntitiesSummary {
  readonly EntityId?: string;
  readonly EntityType?: string;
  readonly DisplayData?: EntityDisplayData;
}

export interface ExperiencesSummary {
  readonly Name?: string;
  readonly Id?: string;
  readonly CreatedAt?: Date;
  readonly Status?: string;
  readonly Endpoints?: [];
}

export interface Facet {
  readonly DocumentAttributeKey?: string;
}

export interface FacetResult {
  readonly DocumentAttributeKey?: string;
  readonly DocumentAttributeValueType?: string;
  readonly DocumentAttributeValueCountPairs?: [];
}

export interface FailedEntity {
  readonly EntityId?: string;
  readonly ErrorMessage?: string;
}

export interface FaqStatistics {
  readonly IndexedQuestionAnswersCount: number;
}

export interface FaqSummary {
  readonly Id?: string;
  readonly Name?: string;
  readonly Status?: string;
  readonly CreatedAt?: Date;
  readonly UpdatedAt?: Date;
  readonly FileFormat?: string;
  readonly LanguageCode?: string;
}

export interface GetQuerySuggestionsRequest {
  readonly IndexId: string;
  readonly QueryText: string;
  readonly MaxSuggestionsCount?: number;
}

export interface GetQuerySuggestionsResponse {
  readonly QuerySuggestionsId?: string;
  readonly Suggestions?: [];
}

export interface GetSnapshotsRequest {
  readonly IndexId: string;
  readonly Interval: string;
  readonly MetricType: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface GetSnapshotsResponse {
  readonly SnapShotTimeFilter?: TimeRange;
  readonly SnapshotsDataHeader?: [];
  readonly SnapshotsData?: [];
  readonly NextToken?: string;
}

export interface GoogleDriveConfiguration {
  readonly SecretArn: string;
  readonly InclusionPatterns?: [];
  readonly ExclusionPatterns?: [];
  readonly FieldMappings?: [];
  readonly ExcludeMimeTypes?: [];
  readonly ExcludeUserAccounts?: [];
  readonly ExcludeSharedDrives?: [];
}

export interface GroupMembers {
  readonly MemberGroups?: [];
  readonly MemberUsers?: [];
  readonly S3PathforGroupMembers?: S3Path;
}

export interface GroupOrderingIdSummary {
  readonly Status?: string;
  readonly LastUpdatedAt?: Date;
  readonly ReceivedAt?: Date;
  readonly OrderingId?: number;
  readonly FailureReason?: string;
}

export interface GroupSummary {
  readonly GroupId?: string;
  readonly OrderingId?: number;
}

export interface HierarchicalPrincipal {
  readonly PrincipalList: [];
}

export interface Highlight {
  readonly BeginOffset: number;
  readonly EndOffset: number;
  readonly TopAnswer?: boolean;
  readonly Type?: string;
}

export interface HookConfiguration {
  readonly InvocationCondition?: DocumentAttributeCondition;
  readonly LambdaArn: string;
  readonly S3Bucket: string;
}

export interface IndexConfigurationSummary {
  readonly Name?: string;
  readonly Id?: string;
  readonly Edition?: string;
  readonly CreatedAt: Date;
  readonly UpdatedAt: Date;
  readonly Status: string;
}

export interface IndexStatistics {
  readonly FaqStatistics: FaqStatistics;
  readonly TextDocumentStatistics: TextDocumentStatistics;
}

export interface InlineCustomDocumentEnrichmentConfiguration {
  readonly Condition?: DocumentAttributeCondition;
  readonly Target?: DocumentAttributeTarget;
  readonly DocumentContentDeletion?: boolean;
}

export interface InternalServerException {
  readonly Message?: string;
}

export interface InvalidRequestException {
  readonly Message?: string;
}

export interface JsonTokenTypeConfiguration {
  readonly UserNameAttributeField: string;
  readonly GroupAttributeField: string;
}

export interface JwtTokenTypeConfiguration {
  readonly KeyLocation: string;
  readonly URL?: string;
  readonly SecretManagerArn?: string;
  readonly UserNameAttributeField?: string;
  readonly GroupAttributeField?: string;
  readonly Issuer?: string;
  readonly ClaimRegex?: string;
}

export interface ListDataSourceSyncJobsRequest {
  readonly Id: string;
  readonly IndexId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly StartTimeFilter?: TimeRange;
  readonly StatusFilter?: string;
}

export interface ListDataSourceSyncJobsResponse {
  readonly History?: [];
  readonly NextToken?: string;
}

export interface ListDataSourcesRequest {
  readonly IndexId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListDataSourcesResponse {
  readonly SummaryItems?: [];
  readonly NextToken?: string;
}

export interface ListEntityPersonasRequest {
  readonly Id: string;
  readonly IndexId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListEntityPersonasResponse {
  readonly SummaryItems?: [];
  readonly NextToken?: string;
}

export interface ListExperienceEntitiesRequest {
  readonly Id: string;
  readonly IndexId: string;
  readonly NextToken?: string;
}

export interface ListExperienceEntitiesResponse {
  readonly SummaryItems?: [];
  readonly NextToken?: string;
}

export interface ListExperiencesRequest {
  readonly IndexId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListExperiencesResponse {
  readonly SummaryItems?: [];
  readonly NextToken?: string;
}

export interface ListFaqsRequest {
  readonly IndexId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListFaqsResponse {
  readonly NextToken?: string;
  readonly FaqSummaryItems?: [];
}

export interface ListGroupsOlderThanOrderingIdRequest {
  readonly IndexId: string;
  readonly DataSourceId?: string;
  readonly OrderingId: number;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListGroupsOlderThanOrderingIdResponse {
  readonly GroupsSummaries?: [];
  readonly NextToken?: string;
}

export interface ListIndicesRequest {
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListIndicesResponse {
  readonly IndexConfigurationSummaryItems?: [];
  readonly NextToken?: string;
}

export interface ListQuerySuggestionsBlockListsRequest {
  readonly IndexId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListQuerySuggestionsBlockListsResponse {
  readonly BlockListSummaryItems?: [];
  readonly NextToken?: string;
}

export interface ListTagsForResourceRequest {
  readonly ResourceARN: string;
}

export interface ListTagsForResourceResponse {
  readonly Tags?: [];
}

export interface ListThesauriRequest {
  readonly IndexId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListThesauriResponse {
  readonly NextToken?: string;
  readonly ThesaurusSummaryItems?: [];
}

export interface MemberGroup {
  readonly GroupId: string;
  readonly DataSourceId?: string;
}

export interface MemberUser {
  readonly UserId: string;
}

export interface OneDriveConfiguration {
  readonly TenantDomain: string;
  readonly SecretArn: string;
  readonly OneDriveUsers: OneDriveUsers;
  readonly InclusionPatterns?: [];
  readonly ExclusionPatterns?: [];
  readonly FieldMappings?: [];
  readonly DisableLocalGroups?: boolean;
}

export interface OneDriveUsers {
  readonly OneDriveUserList?: [];
  readonly OneDriveUserS3Path?: S3Path;
}

export interface PersonasSummary {
  readonly EntityId?: string;
  readonly Persona?: string;
  readonly CreatedAt?: Date;
  readonly UpdatedAt?: Date;
}

export interface Principal {
  readonly Name: string;
  readonly Type: string;
  readonly Access: string;
  readonly DataSourceId?: string;
}

export interface ProxyConfiguration {
  readonly Host: string;
  readonly Port: number;
  readonly Credentials?: string;
}

export interface PutPrincipalMappingRequest {
  readonly IndexId: string;
  readonly DataSourceId?: string;
  readonly GroupId: string;
  readonly GroupMembers: GroupMembers;
  readonly OrderingId?: number;
  readonly RoleArn?: string;
}

export interface QueryRequest {
  readonly IndexId: string;
  readonly QueryText: string;
  readonly AttributeFilter?: AttributeFilter;
  readonly Facets?: [];
  readonly RequestedDocumentAttributes?: [];
  readonly QueryResultTypeFilter?: string;
  readonly DocumentRelevanceOverrideConfigurations?: [];
  readonly PageNumber?: number;
  readonly PageSize?: number;
  readonly SortingConfiguration?: SortingConfiguration;
  readonly UserContext?: UserContext;
  readonly VisitorId?: string;
}

export interface QueryResult {
  readonly QueryId?: string;
  readonly ResultItems?: [];
  readonly FacetResults?: [];
  readonly TotalNumberOfResults?: number;
}

export interface QueryResultItem {
  readonly Id?: string;
  readonly Type?: string;
  readonly AdditionalAttributes?: [];
  readonly DocumentId?: string;
  readonly DocumentTitle?: TextWithHighlights;
  readonly DocumentExcerpt?: TextWithHighlights;
  readonly DocumentURI?: string;
  readonly DocumentAttributes?: [];
  readonly ScoreAttributes?: ScoreAttributes;
  readonly FeedbackToken?: string;
}

export interface QuerySuggestionsBlockListSummary {
  readonly Id?: string;
  readonly Name?: string;
  readonly Status?: string;
  readonly CreatedAt?: Date;
  readonly UpdatedAt?: Date;
  readonly ItemCount?: number;
}

export interface Relevance {
  readonly Freshness?: boolean;
  readonly Importance?: number;
  readonly Duration?: string;
  readonly RankOrder?: string;
  readonly ValueImportanceMap?: {[key: string]: any};
}

export interface RelevanceFeedback {
  readonly ResultId: string;
  readonly RelevanceValue: string;
}

export interface ResourceAlreadyExistException {
  readonly Message?: string;
}

export interface ResourceInUseException {
  readonly Message?: string;
}

export interface ResourceNotFoundException {
  readonly Message?: string;
}

export interface ResourceUnavailableException {
  readonly Message?: string;
}

export interface S3DataSourceConfiguration {
  readonly BucketName: string;
  readonly InclusionPrefixes?: [];
  readonly InclusionPatterns?: [];
  readonly ExclusionPatterns?: [];
  readonly DocumentsMetadataConfiguration?: DocumentsMetadataConfiguration;
  readonly AccessControlListConfiguration?: AccessControlListConfiguration;
}

export interface S3Path {
  readonly Bucket: string;
  readonly Key: string;
}

export interface SalesforceChatterFeedConfiguration {
  readonly DocumentDataFieldName: string;
  readonly DocumentTitleFieldName?: string;
  readonly FieldMappings?: [];
  readonly IncludeFilterTypes?: [];
}

export interface SalesforceConfiguration {
  readonly ServerUrl: string;
  readonly SecretArn: string;
  readonly StandardObjectConfigurations?: [];
  readonly KnowledgeArticleConfiguration?: SalesforceKnowledgeArticleConfiguration;
  readonly ChatterFeedConfiguration?: SalesforceChatterFeedConfiguration;
  readonly CrawlAttachments?: boolean;
  readonly StandardObjectAttachmentConfiguration?: SalesforceStandardObjectAttachmentConfiguration;
  readonly IncludeAttachmentFilePatterns?: [];
  readonly ExcludeAttachmentFilePatterns?: [];
}

export interface SalesforceCustomKnowledgeArticleTypeConfiguration {
  readonly Name: string;
  readonly DocumentDataFieldName: string;
  readonly DocumentTitleFieldName?: string;
  readonly FieldMappings?: [];
}

export interface SalesforceKnowledgeArticleConfiguration {
  readonly IncludedStates: [];
  readonly StandardKnowledgeArticleTypeConfiguration?: SalesforceStandardKnowledgeArticleTypeConfiguration;
  readonly CustomKnowledgeArticleTypeConfigurations?: [];
}

export interface SalesforceStandardKnowledgeArticleTypeConfiguration {
  readonly DocumentDataFieldName: string;
  readonly DocumentTitleFieldName?: string;
  readonly FieldMappings?: [];
}

export interface SalesforceStandardObjectAttachmentConfiguration {
  readonly DocumentTitleFieldName?: string;
  readonly FieldMappings?: [];
}

export interface SalesforceStandardObjectConfiguration {
  readonly Name: string;
  readonly DocumentDataFieldName: string;
  readonly DocumentTitleFieldName?: string;
  readonly FieldMappings?: [];
}

export interface ScoreAttributes {
  readonly ScoreConfidence?: string;
}

export interface Search {
  readonly Facetable?: boolean;
  readonly Searchable?: boolean;
  readonly Displayable?: boolean;
  readonly Sortable?: boolean;
}

export interface SeedUrlConfiguration {
  readonly SeedUrls: [];
  readonly WebCrawlerMode?: string;
}

export interface ServerSideEncryptionConfiguration {
  readonly KmsKeyId?: string;
}

export interface ServiceNowConfiguration {
  readonly HostUrl: string;
  readonly SecretArn: string;
  readonly ServiceNowBuildVersion: string;
  readonly KnowledgeArticleConfiguration?: ServiceNowKnowledgeArticleConfiguration;
  readonly ServiceCatalogConfiguration?: ServiceNowServiceCatalogConfiguration;
  readonly AuthenticationType?: string;
}

export interface ServiceNowKnowledgeArticleConfiguration {
  readonly CrawlAttachments?: boolean;
  readonly IncludeAttachmentFilePatterns?: [];
  readonly ExcludeAttachmentFilePatterns?: [];
  readonly DocumentDataFieldName: string;
  readonly DocumentTitleFieldName?: string;
  readonly FieldMappings?: [];
  readonly FilterQuery?: string;
}

export interface ServiceNowServiceCatalogConfiguration {
  readonly CrawlAttachments?: boolean;
  readonly IncludeAttachmentFilePatterns?: [];
  readonly ExcludeAttachmentFilePatterns?: [];
  readonly DocumentDataFieldName: string;
  readonly DocumentTitleFieldName?: string;
  readonly FieldMappings?: [];
}

export interface ServiceQuotaExceededException {
  readonly Message?: string;
}

export interface SharePointConfiguration {
  readonly SharePointVersion: string;
  readonly Urls: [];
  readonly SecretArn: string;
  readonly CrawlAttachments?: boolean;
  readonly UseChangeLog?: boolean;
  readonly InclusionPatterns?: [];
  readonly ExclusionPatterns?: [];
  readonly VpcConfiguration?: DataSourceVpcConfiguration;
  readonly FieldMappings?: [];
  readonly DocumentTitleFieldName?: string;
  readonly DisableLocalGroups?: boolean;
  readonly SslCertificateS3Path?: S3Path;
}

export interface SiteMapsConfiguration {
  readonly SiteMaps: [];
}

export interface SortingConfiguration {
  readonly DocumentAttributeKey: string;
  readonly SortOrder: string;
}

export interface SqlConfiguration {
  readonly QueryIdentifiersEnclosingOption?: string;
}

export interface StartDataSourceSyncJobRequest {
  readonly Id: string;
  readonly IndexId: string;
}

export interface StartDataSourceSyncJobResponse {
  readonly ExecutionId?: string;
}

export interface Status {
  readonly DocumentId?: string;
  readonly DocumentStatus?: string;
  readonly FailureCode?: string;
  readonly FailureReason?: string;
}

export interface StopDataSourceSyncJobRequest {
  readonly Id: string;
  readonly IndexId: string;
}

export interface SubmitFeedbackRequest {
  readonly IndexId: string;
  readonly QueryId: string;
  readonly ClickFeedbackItems?: [];
  readonly RelevanceFeedbackItems?: [];
}

export interface Suggestion {
  readonly Id?: string;
  readonly Value?: SuggestionValue;
}

export interface SuggestionHighlight {
  readonly BeginOffset?: number;
  readonly EndOffset?: number;
}

export interface SuggestionTextWithHighlights {
  readonly Text?: string;
  readonly Highlights?: [];
}

export interface SuggestionValue {
  readonly Text?: SuggestionTextWithHighlights;
}

export interface Tag {
  readonly Key: string;
  readonly Value: string;
}

export interface TagResourceRequest {
  readonly ResourceARN: string;
  readonly Tags: [];
}

export interface TagResourceResponse {
}

export interface TextDocumentStatistics {
  readonly IndexedTextDocumentsCount: number;
  readonly IndexedTextBytes: number;
}

export interface TextWithHighlights {
  readonly Text?: string;
  readonly Highlights?: [];
}

export interface ThesaurusSummary {
  readonly Id?: string;
  readonly Name?: string;
  readonly Status?: string;
  readonly CreatedAt?: Date;
  readonly UpdatedAt?: Date;
}

export interface ThrottlingException {
  readonly Message?: string;
}

export interface TimeRange {
  readonly StartTime?: Date;
  readonly EndTime?: Date;
}

export interface UntagResourceRequest {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}

export interface UntagResourceResponse {
}

export interface UpdateDataSourceRequest {
  readonly Id: string;
  readonly Name?: string;
  readonly IndexId: string;
  readonly Configuration?: DataSourceConfiguration;
  readonly Description?: string;
  readonly Schedule?: string;
  readonly RoleArn?: string;
  readonly LanguageCode?: string;
  readonly CustomDocumentEnrichmentConfiguration?: CustomDocumentEnrichmentConfiguration;
}

export interface UpdateExperienceRequest {
  readonly Id: string;
  readonly Name?: string;
  readonly IndexId: string;
  readonly RoleArn?: string;
  readonly Configuration?: ExperienceConfiguration;
  readonly Description?: string;
}

export interface UpdateIndexRequest {
  readonly Id: string;
  readonly Name?: string;
  readonly RoleArn?: string;
  readonly Description?: string;
  readonly DocumentMetadataConfigurationUpdates?: [];
  readonly CapacityUnits?: CapacityUnitsConfiguration;
  readonly UserTokenConfigurations?: [];
  readonly UserContextPolicy?: string;
  readonly UserGroupResolutionConfiguration?: UserGroupResolutionConfiguration;
}

export interface UpdateQuerySuggestionsBlockListRequest {
  readonly IndexId: string;
  readonly Id: string;
  readonly Name?: string;
  readonly Description?: string;
  readonly SourceS3Path?: S3Path;
  readonly RoleArn?: string;
}

export interface UpdateQuerySuggestionsConfigRequest {
  readonly IndexId: string;
  readonly Mode?: string;
  readonly QueryLogLookBackWindowInDays?: number;
  readonly IncludeQueriesWithoutUserInformation?: boolean;
  readonly MinimumNumberOfQueryingUsers?: number;
  readonly MinimumQueryCount?: number;
}

export interface UpdateThesaurusRequest {
  readonly Id: string;
  readonly Name?: string;
  readonly IndexId: string;
  readonly Description?: string;
  readonly RoleArn?: string;
  readonly SourceS3Path?: S3Path;
}

export interface Urls {
  readonly SeedUrlConfiguration?: SeedUrlConfiguration;
  readonly SiteMapsConfiguration?: SiteMapsConfiguration;
}

export interface UserContext {
  readonly Token?: string;
  readonly UserId?: string;
  readonly Groups?: [];
  readonly DataSourceGroups?: [];
}

export interface UserGroupResolutionConfiguration {
  readonly UserGroupResolutionMode: string;
}

export interface UserIdentityConfiguration {
  readonly IdentityAttributeName?: string;
}

export interface UserTokenConfiguration {
  readonly JwtTokenTypeConfiguration?: JwtTokenTypeConfiguration;
  readonly JsonTokenTypeConfiguration?: JsonTokenTypeConfiguration;
}

export interface ValidationException {
  readonly Message?: string;
}

export interface WebCrawlerConfiguration {
  readonly Urls: Urls;
  readonly CrawlDepth?: number;
  readonly MaxLinksPerPage?: number;
  readonly MaxContentSizePerPageInMegaBytes?: unknown;
  readonly MaxUrlsPerMinuteCrawlRate?: number;
  readonly UrlInclusionPatterns?: [];
  readonly UrlExclusionPatterns?: [];
  readonly ProxyConfiguration?: ProxyConfiguration;
  readonly AuthenticationConfiguration?: AuthenticationConfiguration;
}

export interface WorkDocsConfiguration {
  readonly OrganizationId: string;
  readonly CrawlComments?: boolean;
  readonly UseChangeLog?: boolean;
  readonly InclusionPatterns?: [];
  readonly ExclusionPatterns?: [];
  readonly FieldMappings?: [];
}


