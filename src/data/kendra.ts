/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AssociateEntitiesToExperience {
  readonly Id: string;
  readonly IndexId: string;
  readonly EntityList: [];
}
export interface AssociatePersonasToEntities {
  readonly Id: string;
  readonly IndexId: string;
  readonly Personas: [];
}
export interface BatchDeleteDocument {
  readonly IndexId: string;
  readonly DocumentIdList: [];
  readonly DataSourceSyncJobMetricTarget?: DataSourceSyncJobMetricTarget;
}
export interface BatchGetDocumentStatus {
  readonly IndexId: string;
  readonly DocumentInfoList: [];
}
export interface BatchPutDocument {
  readonly IndexId: string;
  readonly RoleArn?: string;
  readonly Documents: [];
  readonly CustomDocumentEnrichmentConfiguration?: CustomDocumentEnrichmentConfiguration;
}
export interface ClearQuerySuggestions {
  readonly IndexId: string;
}
export interface CreateDataSource {
  readonly Name: string;
  readonly IndexId: string;
  readonly Type: string;
  readonly Configuration?: DataSourceConfiguration;
  readonly Description?: string;
  readonly Schedule?: string;
  readonly RoleArn?: string;
  readonly Tags?: [];
  readonly ClientToken?: string;
  readonly LanguageCode?: string;
  readonly CustomDocumentEnrichmentConfiguration?: CustomDocumentEnrichmentConfiguration;
}
export interface CreateExperience {
  readonly Name: string;
  readonly IndexId: string;
  readonly RoleArn?: string;
  readonly Configuration?: ExperienceConfiguration;
  readonly Description?: string;
  readonly ClientToken?: string;
}
export interface CreateFaq {
  readonly IndexId: string;
  readonly Name: string;
  readonly Description?: string;
  readonly S3Path: S3Path;
  readonly RoleArn: string;
  readonly Tags?: [];
  readonly FileFormat?: string;
  readonly ClientToken?: string;
  readonly LanguageCode?: string;
}
export interface CreateIndex {
  readonly Name: string;
  readonly Edition?: string;
  readonly RoleArn: string;
  readonly ServerSideEncryptionConfiguration?: ServerSideEncryptionConfiguration;
  readonly Description?: string;
  readonly ClientToken?: string;
  readonly Tags?: [];
  readonly UserTokenConfigurations?: [];
  readonly UserContextPolicy?: string;
  readonly UserGroupResolutionConfiguration?: UserGroupResolutionConfiguration;
}
export interface CreateQuerySuggestionsBlockList {
  readonly IndexId: string;
  readonly Name: string;
  readonly Description?: string;
  readonly SourceS3Path: S3Path;
  readonly ClientToken?: string;
  readonly RoleArn: string;
  readonly Tags?: [];
}
export interface CreateThesaurus {
  readonly IndexId: string;
  readonly Name: string;
  readonly Description?: string;
  readonly RoleArn: string;
  readonly Tags?: [];
  readonly SourceS3Path: S3Path;
  readonly ClientToken?: string;
}
export interface DeleteDataSource {
  readonly Id: string;
  readonly IndexId: string;
}
export interface DeleteExperience {
  readonly Id: string;
  readonly IndexId: string;
}
export interface DeleteFaq {
  readonly Id: string;
  readonly IndexId: string;
}
export interface DeleteIndex {
  readonly Id: string;
}
export interface DeletePrincipalMapping {
  readonly IndexId: string;
  readonly DataSourceId?: string;
  readonly GroupId: string;
  readonly OrderingId?: number;
}
export interface DeleteQuerySuggestionsBlockList {
  readonly IndexId: string;
  readonly Id: string;
}
export interface DeleteThesaurus {
  readonly Id: string;
  readonly IndexId: string;
}
export interface DescribeDataSource {
  readonly Id: string;
  readonly IndexId: string;
}
export interface DescribeExperience {
  readonly Id: string;
  readonly IndexId: string;
}
export interface DescribeFaq {
  readonly Id: string;
  readonly IndexId: string;
}
export interface DescribeIndex {
  readonly Id: string;
}
export interface DescribePrincipalMapping {
  readonly IndexId: string;
  readonly DataSourceId?: string;
  readonly GroupId: string;
}
export interface DescribeQuerySuggestionsBlockList {
  readonly IndexId: string;
  readonly Id: string;
}
export interface DescribeQuerySuggestionsConfig {
  readonly IndexId: string;
}
export interface DescribeThesaurus {
  readonly Id: string;
  readonly IndexId: string;
}
export interface DisassociateEntitiesFromExperience {
  readonly Id: string;
  readonly IndexId: string;
  readonly EntityList: [];
}
export interface DisassociatePersonasFromEntities {
  readonly Id: string;
  readonly IndexId: string;
  readonly EntityIds: [];
}
export interface GetQuerySuggestions {
  readonly IndexId: string;
  readonly QueryText: string;
  readonly MaxSuggestionsCount?: number;
}
export interface GetSnapshots {
  readonly IndexId: string;
  readonly Interval: string;
  readonly MetricType: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface ListDataSourceSyncJobs {
  readonly Id: string;
  readonly IndexId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly StartTimeFilter?: TimeRange;
  readonly StatusFilter?: string;
}
export interface ListDataSources {
  readonly IndexId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface ListEntityPersonas {
  readonly Id: string;
  readonly IndexId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface ListExperienceEntities {
  readonly Id: string;
  readonly IndexId: string;
  readonly NextToken?: string;
}
export interface ListExperiences {
  readonly IndexId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface ListFaqs {
  readonly IndexId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface ListGroupsOlderThanOrderingId {
  readonly IndexId: string;
  readonly DataSourceId?: string;
  readonly OrderingId: number;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface ListIndices {
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface ListQuerySuggestionsBlockLists {
  readonly IndexId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface ListTagsForResource {
  readonly ResourceARN: string;
}
export interface ListThesauri {
  readonly IndexId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface PutPrincipalMapping {
  readonly IndexId: string;
  readonly DataSourceId?: string;
  readonly GroupId: string;
  readonly GroupMembers: GroupMembers;
  readonly OrderingId?: number;
  readonly RoleArn?: string;
}
export interface Query {
  readonly IndexId: string;
  readonly QueryText: string;
  readonly AttributeFilter?: AttributeFilter;
  readonly Facets?: [];
  readonly RequestedDocumentAttributes?: [];
  readonly QueryResultTypeFilter?: string;
  readonly DocumentRelevanceOverrideConfigurations?: [];
  readonly PageNumber?: number;
  readonly PageSize?: number;
  readonly SortingConfiguration?: SortingConfiguration;
  readonly UserContext?: UserContext;
  readonly VisitorId?: string;
}
export interface StartDataSourceSyncJob {
  readonly Id: string;
  readonly IndexId: string;
}
export interface StopDataSourceSyncJob {
  readonly Id: string;
  readonly IndexId: string;
}
export interface SubmitFeedback {
  readonly IndexId: string;
  readonly QueryId: string;
  readonly ClickFeedbackItems?: [];
  readonly RelevanceFeedbackItems?: [];
}
export interface TagResource {
  readonly ResourceARN: string;
  readonly Tags: [];
}
export interface UntagResource {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}
export interface UpdateDataSource {
  readonly Id: string;
  readonly Name?: string;
  readonly IndexId: string;
  readonly Configuration?: DataSourceConfiguration;
  readonly Description?: string;
  readonly Schedule?: string;
  readonly RoleArn?: string;
  readonly LanguageCode?: string;
  readonly CustomDocumentEnrichmentConfiguration?: CustomDocumentEnrichmentConfiguration;
}
export interface UpdateExperience {
  readonly Id: string;
  readonly Name?: string;
  readonly IndexId: string;
  readonly RoleArn?: string;
  readonly Configuration?: ExperienceConfiguration;
  readonly Description?: string;
}
export interface UpdateIndex {
  readonly Id: string;
  readonly Name?: string;
  readonly RoleArn?: string;
  readonly Description?: string;
  readonly DocumentMetadataConfigurationUpdates?: [];
  readonly CapacityUnits?: CapacityUnitsConfiguration;
  readonly UserTokenConfigurations?: [];
  readonly UserContextPolicy?: string;
  readonly UserGroupResolutionConfiguration?: UserGroupResolutionConfiguration;
}
export interface UpdateQuerySuggestionsBlockList {
  readonly IndexId: string;
  readonly Id: string;
  readonly Name?: string;
  readonly Description?: string;
  readonly SourceS3Path?: S3Path;
  readonly RoleArn?: string;
}
export interface UpdateQuerySuggestionsConfig {
  readonly IndexId: string;
  readonly Mode?: string;
  readonly QueryLogLookBackWindowInDays?: number;
  readonly IncludeQueriesWithoutUserInformation?: boolean;
  readonly MinimumNumberOfQueryingUsers?: number;
  readonly MinimumQueryCount?: number;
}
export interface UpdateThesaurus {
  readonly Id: string;
  readonly Name?: string;
  readonly IndexId: string;
  readonly Description?: string;
  readonly RoleArn?: string;
  readonly SourceS3Path?: S3Path;
}



interface AccessControlListConfiguration {
  readonly KeyPath: string;
}

interface AccessDeniedException {
  readonly Message: string;
}

interface AclConfiguration {
  readonly AllowedGroupsColumnName: string;
}

interface AdditionalResultAttribute {
  readonly Key: string;
  readonly ValueType: string;
  readonly Value: AdditionalResultAttributeValue;
}

interface AdditionalResultAttributeValue {
  readonly TextWithHighlightsValue: TextWithHighlights;
}

interface AssociateEntitiesToExperienceRequest {
  readonly Id: string;
  readonly IndexId: string;
  readonly EntityList: [];
}

interface AssociateEntitiesToExperienceResponse {
  readonly FailedEntityList: [];
}

interface AssociatePersonasToEntitiesRequest {
  readonly Id: string;
  readonly IndexId: string;
  readonly Personas: [];
}

interface AssociatePersonasToEntitiesResponse {
  readonly FailedEntityList: [];
}

interface AttributeFilter {
  readonly AndAllFilters: [];
  readonly OrAllFilters: [];
  readonly NotFilter: AttributeFilter;
  readonly EqualsTo: DocumentAttribute;
  readonly ContainsAll: DocumentAttribute;
  readonly ContainsAny: DocumentAttribute;
  readonly GreaterThan: DocumentAttribute;
  readonly GreaterThanOrEquals: DocumentAttribute;
  readonly LessThan: DocumentAttribute;
  readonly LessThanOrEquals: DocumentAttribute;
}

interface AuthenticationConfiguration {
  readonly BasicAuthentication: [];
}

interface BasicAuthenticationConfiguration {
  readonly Host: string;
  readonly Port: number;
  readonly Credentials: string;
}

interface BatchDeleteDocumentRequest {
  readonly IndexId: string;
  readonly DocumentIdList: [];
  readonly DataSourceSyncJobMetricTarget: DataSourceSyncJobMetricTarget;
}

interface BatchDeleteDocumentResponse {
  readonly FailedDocuments: [];
}

interface BatchDeleteDocumentResponseFailedDocument {
  readonly Id: string;
  readonly ErrorCode: string;
  readonly ErrorMessage: string;
}

interface BatchGetDocumentStatusRequest {
  readonly IndexId: string;
  readonly DocumentInfoList: [];
}

interface BatchGetDocumentStatusResponse {
  readonly Errors: [];
  readonly DocumentStatusList: [];
}

interface BatchGetDocumentStatusResponseError {
  readonly DocumentId: string;
  readonly ErrorCode: string;
  readonly ErrorMessage: string;
}

interface BatchPutDocumentRequest {
  readonly IndexId: string;
  readonly RoleArn: string;
  readonly Documents: [];
  readonly CustomDocumentEnrichmentConfiguration: CustomDocumentEnrichmentConfiguration;
}

interface BatchPutDocumentResponse {
  readonly FailedDocuments: [];
}

interface BatchPutDocumentResponseFailedDocument {
  readonly Id: string;
  readonly ErrorCode: string;
  readonly ErrorMessage: string;
}

interface CapacityUnitsConfiguration {
  readonly StorageCapacityUnits: number;
  readonly QueryCapacityUnits: number;
}

interface ClearQuerySuggestionsRequest {
  readonly IndexId: string;
}

interface ClickFeedback {
  readonly ResultId: string;
  readonly ClickTime: Date;
}

interface ColumnConfiguration {
  readonly DocumentIdColumnName: string;
  readonly DocumentDataColumnName: string;
  readonly DocumentTitleColumnName: string;
  readonly FieldMappings: [];
  readonly ChangeDetectingColumns: [];
}

interface ConflictException {
  readonly Message: string;
}

interface ConfluenceAttachmentConfiguration {
  readonly CrawlAttachments: boolean;
  readonly AttachmentFieldMappings: [];
}

interface ConfluenceAttachmentToIndexFieldMapping {
  readonly DataSourceFieldName: string;
  readonly DateFieldFormat: string;
  readonly IndexFieldName: string;
}

interface ConfluenceBlogConfiguration {
  readonly BlogFieldMappings: [];
}

interface ConfluenceBlogToIndexFieldMapping {
  readonly DataSourceFieldName: string;
  readonly DateFieldFormat: string;
  readonly IndexFieldName: string;
}

interface ConfluenceConfiguration {
  readonly ServerUrl: string;
  readonly SecretArn: string;
  readonly Version: string;
  readonly SpaceConfiguration: ConfluenceSpaceConfiguration;
  readonly PageConfiguration: ConfluencePageConfiguration;
  readonly BlogConfiguration: ConfluenceBlogConfiguration;
  readonly AttachmentConfiguration: ConfluenceAttachmentConfiguration;
  readonly VpcConfiguration: DataSourceVpcConfiguration;
  readonly InclusionPatterns: [];
  readonly ExclusionPatterns: [];
}

interface ConfluencePageConfiguration {
  readonly PageFieldMappings: [];
}

interface ConfluencePageToIndexFieldMapping {
  readonly DataSourceFieldName: string;
  readonly DateFieldFormat: string;
  readonly IndexFieldName: string;
}

interface ConfluenceSpaceConfiguration {
  readonly CrawlPersonalSpaces: boolean;
  readonly CrawlArchivedSpaces: boolean;
  readonly IncludeSpaces: [];
  readonly ExcludeSpaces: [];
  readonly SpaceFieldMappings: [];
}

interface ConfluenceSpaceToIndexFieldMapping {
  readonly DataSourceFieldName: string;
  readonly DateFieldFormat: string;
  readonly IndexFieldName: string;
}

interface ConnectionConfiguration {
  readonly DatabaseHost: string;
  readonly DatabasePort: number;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly SecretArn: string;
}

interface ContentSourceConfiguration {
  readonly DataSourceIds: [];
  readonly FaqIds: [];
  readonly DirectPutContent: boolean;
}

interface CreateDataSourceRequest {
  readonly Name: string;
  readonly IndexId: string;
  readonly Type: string;
  readonly Configuration: DataSourceConfiguration;
  readonly Description: string;
  readonly Schedule: string;
  readonly RoleArn: string;
  readonly Tags: [];
  readonly ClientToken: string;
  readonly LanguageCode: string;
  readonly CustomDocumentEnrichmentConfiguration: CustomDocumentEnrichmentConfiguration;
}

interface CreateDataSourceResponse {
  readonly Id: string;
}

interface CreateExperienceRequest {
  readonly Name: string;
  readonly IndexId: string;
  readonly RoleArn: string;
  readonly Configuration: ExperienceConfiguration;
  readonly Description: string;
  readonly ClientToken: string;
}

interface CreateExperienceResponse {
  readonly Id: string;
}

interface CreateFaqRequest {
  readonly IndexId: string;
  readonly Name: string;
  readonly Description: string;
  readonly S3Path: S3Path;
  readonly RoleArn: string;
  readonly Tags: [];
  readonly FileFormat: string;
  readonly ClientToken: string;
  readonly LanguageCode: string;
}

interface CreateFaqResponse {
  readonly Id: string;
}

interface CreateIndexRequest {
  readonly Name: string;
  readonly Edition: string;
  readonly RoleArn: string;
  readonly ServerSideEncryptionConfiguration: ServerSideEncryptionConfiguration;
  readonly Description: string;
  readonly ClientToken: string;
  readonly Tags: [];
  readonly UserTokenConfigurations: [];
  readonly UserContextPolicy: string;
  readonly UserGroupResolutionConfiguration: UserGroupResolutionConfiguration;
}

interface CreateIndexResponse {
  readonly Id: string;
}

interface CreateQuerySuggestionsBlockListRequest {
  readonly IndexId: string;
  readonly Name: string;
  readonly Description: string;
  readonly SourceS3Path: S3Path;
  readonly ClientToken: string;
  readonly RoleArn: string;
  readonly Tags: [];
}

interface CreateQuerySuggestionsBlockListResponse {
  readonly Id: string;
}

interface CreateThesaurusRequest {
  readonly IndexId: string;
  readonly Name: string;
  readonly Description: string;
  readonly RoleArn: string;
  readonly Tags: [];
  readonly SourceS3Path: S3Path;
  readonly ClientToken: string;
}

interface CreateThesaurusResponse {
  readonly Id: string;
}

interface CustomDocumentEnrichmentConfiguration {
  readonly InlineConfigurations: [];
  readonly PreExtractionHookConfiguration: HookConfiguration;
  readonly PostExtractionHookConfiguration: HookConfiguration;
  readonly RoleArn: string;
}

interface DataSourceConfiguration {
  readonly S3Configuration: S3DataSourceConfiguration;
  readonly SharePointConfiguration: SharePointConfiguration;
  readonly DatabaseConfiguration: DatabaseConfiguration;
  readonly SalesforceConfiguration: SalesforceConfiguration;
  readonly OneDriveConfiguration: OneDriveConfiguration;
  readonly ServiceNowConfiguration: ServiceNowConfiguration;
  readonly ConfluenceConfiguration: ConfluenceConfiguration;
  readonly GoogleDriveConfiguration: GoogleDriveConfiguration;
  readonly WebCrawlerConfiguration: WebCrawlerConfiguration;
  readonly WorkDocsConfiguration: WorkDocsConfiguration;
}

interface DataSourceGroup {
  readonly GroupId: string;
  readonly DataSourceId: string;
}

interface DataSourceSummary {
  readonly Name: string;
  readonly Id: string;
  readonly Type: string;
  readonly CreatedAt: Date;
  readonly UpdatedAt: Date;
  readonly Status: string;
  readonly LanguageCode: string;
}

interface DataSourceSyncJob {
  readonly ExecutionId: string;
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly Status: string;
  readonly ErrorMessage: string;
  readonly ErrorCode: string;
  readonly DataSourceErrorCode: string;
  readonly Metrics: DataSourceSyncJobMetrics;
}

interface DataSourceSyncJobMetricTarget {
  readonly DataSourceId: string;
  readonly DataSourceSyncJobId: string;
}

interface DataSourceSyncJobMetrics {
  readonly DocumentsAdded: string;
  readonly DocumentsModified: string;
  readonly DocumentsDeleted: string;
  readonly DocumentsFailed: string;
  readonly DocumentsScanned: string;
}

interface DataSourceToIndexFieldMapping {
  readonly DataSourceFieldName: string;
  readonly DateFieldFormat: string;
  readonly IndexFieldName: string;
}

interface DataSourceVpcConfiguration {
  readonly SubnetIds: [];
  readonly SecurityGroupIds: [];
}

interface DatabaseConfiguration {
  readonly DatabaseEngineType: string;
  readonly ConnectionConfiguration: ConnectionConfiguration;
  readonly VpcConfiguration: DataSourceVpcConfiguration;
  readonly ColumnConfiguration: ColumnConfiguration;
  readonly AclConfiguration: AclConfiguration;
  readonly SqlConfiguration: SqlConfiguration;
}

interface DeleteDataSourceRequest {
  readonly Id: string;
  readonly IndexId: string;
}

interface DeleteExperienceRequest {
  readonly Id: string;
  readonly IndexId: string;
}

interface DeleteExperienceResponse {
}

interface DeleteFaqRequest {
  readonly Id: string;
  readonly IndexId: string;
}

interface DeleteIndexRequest {
  readonly Id: string;
}

interface DeletePrincipalMappingRequest {
  readonly IndexId: string;
  readonly DataSourceId: string;
  readonly GroupId: string;
  readonly OrderingId: number;
}

interface DeleteQuerySuggestionsBlockListRequest {
  readonly IndexId: string;
  readonly Id: string;
}

interface DeleteThesaurusRequest {
  readonly Id: string;
  readonly IndexId: string;
}

interface DescribeDataSourceRequest {
  readonly Id: string;
  readonly IndexId: string;
}

interface DescribeDataSourceResponse {
  readonly Id: string;
  readonly IndexId: string;
  readonly Name: string;
  readonly Type: string;
  readonly Configuration: DataSourceConfiguration;
  readonly CreatedAt: Date;
  readonly UpdatedAt: Date;
  readonly Description: string;
  readonly Status: string;
  readonly Schedule: string;
  readonly RoleArn: string;
  readonly ErrorMessage: string;
  readonly LanguageCode: string;
  readonly CustomDocumentEnrichmentConfiguration: CustomDocumentEnrichmentConfiguration;
}

interface DescribeExperienceRequest {
  readonly Id: string;
  readonly IndexId: string;
}

interface DescribeExperienceResponse {
  readonly Id: string;
  readonly IndexId: string;
  readonly Name: string;
  readonly Endpoints: [];
  readonly Configuration: ExperienceConfiguration;
  readonly CreatedAt: Date;
  readonly UpdatedAt: Date;
  readonly Description: string;
  readonly Status: string;
  readonly RoleArn: string;
  readonly ErrorMessage: string;
}

interface DescribeFaqRequest {
  readonly Id: string;
  readonly IndexId: string;
}

interface DescribeFaqResponse {
  readonly Id: string;
  readonly IndexId: string;
  readonly Name: string;
  readonly Description: string;
  readonly CreatedAt: Date;
  readonly UpdatedAt: Date;
  readonly S3Path: S3Path;
  readonly Status: string;
  readonly RoleArn: string;
  readonly ErrorMessage: string;
  readonly FileFormat: string;
  readonly LanguageCode: string;
}

interface DescribeIndexRequest {
  readonly Id: string;
}

interface DescribeIndexResponse {
  readonly Name: string;
  readonly Id: string;
  readonly Edition: string;
  readonly RoleArn: string;
  readonly ServerSideEncryptionConfiguration: ServerSideEncryptionConfiguration;
  readonly Status: string;
  readonly Description: string;
  readonly CreatedAt: Date;
  readonly UpdatedAt: Date;
  readonly DocumentMetadataConfigurations: [];
  readonly IndexStatistics: IndexStatistics;
  readonly ErrorMessage: string;
  readonly CapacityUnits: CapacityUnitsConfiguration;
  readonly UserTokenConfigurations: [];
  readonly UserContextPolicy: string;
  readonly UserGroupResolutionConfiguration: UserGroupResolutionConfiguration;
}

interface DescribePrincipalMappingRequest {
  readonly IndexId: string;
  readonly DataSourceId: string;
  readonly GroupId: string;
}

interface DescribePrincipalMappingResponse {
  readonly IndexId: string;
  readonly DataSourceId: string;
  readonly GroupId: string;
  readonly GroupOrderingIdSummaries: [];
}

interface DescribeQuerySuggestionsBlockListRequest {
  readonly IndexId: string;
  readonly Id: string;
}

interface DescribeQuerySuggestionsBlockListResponse {
  readonly IndexId: string;
  readonly Id: string;
  readonly Name: string;
  readonly Description: string;
  readonly Status: string;
  readonly ErrorMessage: string;
  readonly CreatedAt: Date;
  readonly UpdatedAt: Date;
  readonly SourceS3Path: S3Path;
  readonly ItemCount: number;
  readonly FileSizeBytes: number;
  readonly RoleArn: string;
}

interface DescribeQuerySuggestionsConfigRequest {
  readonly IndexId: string;
}

interface DescribeQuerySuggestionsConfigResponse {
  readonly Mode: string;
  readonly Status: string;
  readonly QueryLogLookBackWindowInDays: number;
  readonly IncludeQueriesWithoutUserInformation: boolean;
  readonly MinimumNumberOfQueryingUsers: number;
  readonly MinimumQueryCount: number;
  readonly LastSuggestionsBuildTime: Date;
  readonly LastClearTime: Date;
  readonly TotalSuggestionsCount: number;
}

interface DescribeThesaurusRequest {
  readonly Id: string;
  readonly IndexId: string;
}

interface DescribeThesaurusResponse {
  readonly Id: string;
  readonly IndexId: string;
  readonly Name: string;
  readonly Description: string;
  readonly Status: string;
  readonly ErrorMessage: string;
  readonly CreatedAt: Date;
  readonly UpdatedAt: Date;
  readonly RoleArn: string;
  readonly SourceS3Path: S3Path;
  readonly FileSizeBytes: number;
  readonly TermCount: number;
  readonly SynonymRuleCount: number;
}

interface DisassociateEntitiesFromExperienceRequest {
  readonly Id: string;
  readonly IndexId: string;
  readonly EntityList: [];
}

interface DisassociateEntitiesFromExperienceResponse {
  readonly FailedEntityList: [];
}

interface DisassociatePersonasFromEntitiesRequest {
  readonly Id: string;
  readonly IndexId: string;
  readonly EntityIds: [];
}

interface DisassociatePersonasFromEntitiesResponse {
  readonly FailedEntityList: [];
}

interface Document {
  readonly Id: string;
  readonly Title: string;
  readonly Blob: unknown;
  readonly S3Path: S3Path;
  readonly Attributes: [];
  readonly AccessControlList: [];
  readonly HierarchicalAccessControlList: [];
  readonly ContentType: string;
}

interface DocumentAttribute {
  readonly Key: string;
  readonly Value: DocumentAttributeValue;
}

interface DocumentAttributeCondition {
  readonly ConditionDocumentAttributeKey: string;
  readonly Operator: string;
  readonly ConditionOnValue: DocumentAttributeValue;
}

interface DocumentAttributeTarget {
  readonly TargetDocumentAttributeKey: string;
  readonly TargetDocumentAttributeValueDeletion: boolean;
  readonly TargetDocumentAttributeValue: DocumentAttributeValue;
}

interface DocumentAttributeValue {
  readonly StringValue: string;
  readonly StringListValue: [];
  readonly LongValue: number;
  readonly DateValue: Date;
}

interface DocumentAttributeValueCountPair {
  readonly DocumentAttributeValue: DocumentAttributeValue;
  readonly Count: number;
}

interface DocumentInfo {
  readonly DocumentId: string;
  readonly Attributes: [];
}

interface DocumentMetadataConfiguration {
  readonly Name: string;
  readonly Type: string;
  readonly Relevance: Relevance;
  readonly Search: Search;
}

interface DocumentRelevanceConfiguration {
  readonly Name: string;
  readonly Relevance: Relevance;
}

interface DocumentsMetadataConfiguration {
  readonly S3Prefix: string;
}

interface EntityConfiguration {
  readonly EntityId: string;
  readonly EntityType: string;
}

interface EntityDisplayData {
  readonly UserName: string;
  readonly GroupName: string;
  readonly IdentifiedUserName: string;
  readonly FirstName: string;
  readonly LastName: string;
}

interface EntityPersonaConfiguration {
  readonly EntityId: string;
  readonly Persona: string;
}

interface ExperienceConfiguration {
  readonly ContentSourceConfiguration: ContentSourceConfiguration;
  readonly UserIdentityConfiguration: UserIdentityConfiguration;
}

interface ExperienceEndpoint {
  readonly EndpointType: string;
  readonly Endpoint: string;
}

interface ExperienceEntitiesSummary {
  readonly EntityId: string;
  readonly EntityType: string;
  readonly DisplayData: EntityDisplayData;
}

interface ExperiencesSummary {
  readonly Name: string;
  readonly Id: string;
  readonly CreatedAt: Date;
  readonly Status: string;
  readonly Endpoints: [];
}

interface Facet {
  readonly DocumentAttributeKey: string;
}

interface FacetResult {
  readonly DocumentAttributeKey: string;
  readonly DocumentAttributeValueType: string;
  readonly DocumentAttributeValueCountPairs: [];
}

interface FailedEntity {
  readonly EntityId: string;
  readonly ErrorMessage: string;
}

interface FaqStatistics {
  readonly IndexedQuestionAnswersCount: number;
}

interface FaqSummary {
  readonly Id: string;
  readonly Name: string;
  readonly Status: string;
  readonly CreatedAt: Date;
  readonly UpdatedAt: Date;
  readonly FileFormat: string;
  readonly LanguageCode: string;
}

interface GetQuerySuggestionsRequest {
  readonly IndexId: string;
  readonly QueryText: string;
  readonly MaxSuggestionsCount: number;
}

interface GetQuerySuggestionsResponse {
  readonly QuerySuggestionsId: string;
  readonly Suggestions: [];
}

interface GetSnapshotsRequest {
  readonly IndexId: string;
  readonly Interval: string;
  readonly MetricType: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface GetSnapshotsResponse {
  readonly SnapShotTimeFilter: TimeRange;
  readonly SnapshotsDataHeader: [];
  readonly SnapshotsData: [];
  readonly NextToken: string;
}

interface GoogleDriveConfiguration {
  readonly SecretArn: string;
  readonly InclusionPatterns: [];
  readonly ExclusionPatterns: [];
  readonly FieldMappings: [];
  readonly ExcludeMimeTypes: [];
  readonly ExcludeUserAccounts: [];
  readonly ExcludeSharedDrives: [];
}

interface GroupMembers {
  readonly MemberGroups: [];
  readonly MemberUsers: [];
  readonly S3PathforGroupMembers: S3Path;
}

interface GroupOrderingIdSummary {
  readonly Status: string;
  readonly LastUpdatedAt: Date;
  readonly ReceivedAt: Date;
  readonly OrderingId: number;
  readonly FailureReason: string;
}

interface GroupSummary {
  readonly GroupId: string;
  readonly OrderingId: number;
}

interface HierarchicalPrincipal {
  readonly PrincipalList: [];
}

interface Highlight {
  readonly BeginOffset: number;
  readonly EndOffset: number;
  readonly TopAnswer: boolean;
  readonly Type: string;
}

interface HookConfiguration {
  readonly InvocationCondition: DocumentAttributeCondition;
  readonly LambdaArn: string;
  readonly S3Bucket: string;
}

interface IndexConfigurationSummary {
  readonly Name: string;
  readonly Id: string;
  readonly Edition: string;
  readonly CreatedAt: Date;
  readonly UpdatedAt: Date;
  readonly Status: string;
}

interface IndexStatistics {
  readonly FaqStatistics: FaqStatistics;
  readonly TextDocumentStatistics: TextDocumentStatistics;
}

interface InlineCustomDocumentEnrichmentConfiguration {
  readonly Condition: DocumentAttributeCondition;
  readonly Target: DocumentAttributeTarget;
  readonly DocumentContentDeletion: boolean;
}

interface InternalServerException {
  readonly Message: string;
}

interface InvalidRequestException {
  readonly Message: string;
}

interface JsonTokenTypeConfiguration {
  readonly UserNameAttributeField: string;
  readonly GroupAttributeField: string;
}

interface JwtTokenTypeConfiguration {
  readonly KeyLocation: string;
  readonly URL: string;
  readonly SecretManagerArn: string;
  readonly UserNameAttributeField: string;
  readonly GroupAttributeField: string;
  readonly Issuer: string;
  readonly ClaimRegex: string;
}

interface ListDataSourceSyncJobsRequest {
  readonly Id: string;
  readonly IndexId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly StartTimeFilter: TimeRange;
  readonly StatusFilter: string;
}

interface ListDataSourceSyncJobsResponse {
  readonly History: [];
  readonly NextToken: string;
}

interface ListDataSourcesRequest {
  readonly IndexId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListDataSourcesResponse {
  readonly SummaryItems: [];
  readonly NextToken: string;
}

interface ListEntityPersonasRequest {
  readonly Id: string;
  readonly IndexId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListEntityPersonasResponse {
  readonly SummaryItems: [];
  readonly NextToken: string;
}

interface ListExperienceEntitiesRequest {
  readonly Id: string;
  readonly IndexId: string;
  readonly NextToken: string;
}

interface ListExperienceEntitiesResponse {
  readonly SummaryItems: [];
  readonly NextToken: string;
}

interface ListExperiencesRequest {
  readonly IndexId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListExperiencesResponse {
  readonly SummaryItems: [];
  readonly NextToken: string;
}

interface ListFaqsRequest {
  readonly IndexId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListFaqsResponse {
  readonly NextToken: string;
  readonly FaqSummaryItems: [];
}

interface ListGroupsOlderThanOrderingIdRequest {
  readonly IndexId: string;
  readonly DataSourceId: string;
  readonly OrderingId: number;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListGroupsOlderThanOrderingIdResponse {
  readonly GroupsSummaries: [];
  readonly NextToken: string;
}

interface ListIndicesRequest {
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListIndicesResponse {
  readonly IndexConfigurationSummaryItems: [];
  readonly NextToken: string;
}

interface ListQuerySuggestionsBlockListsRequest {
  readonly IndexId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListQuerySuggestionsBlockListsResponse {
  readonly BlockListSummaryItems: [];
  readonly NextToken: string;
}

interface ListTagsForResourceRequest {
  readonly ResourceARN: string;
}

interface ListTagsForResourceResponse {
  readonly Tags: [];
}

interface ListThesauriRequest {
  readonly IndexId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListThesauriResponse {
  readonly NextToken: string;
  readonly ThesaurusSummaryItems: [];
}

interface MemberGroup {
  readonly GroupId: string;
  readonly DataSourceId: string;
}

interface MemberUser {
  readonly UserId: string;
}

interface OneDriveConfiguration {
  readonly TenantDomain: string;
  readonly SecretArn: string;
  readonly OneDriveUsers: OneDriveUsers;
  readonly InclusionPatterns: [];
  readonly ExclusionPatterns: [];
  readonly FieldMappings: [];
  readonly DisableLocalGroups: boolean;
}

interface OneDriveUsers {
  readonly OneDriveUserList: [];
  readonly OneDriveUserS3Path: S3Path;
}

interface PersonasSummary {
  readonly EntityId: string;
  readonly Persona: string;
  readonly CreatedAt: Date;
  readonly UpdatedAt: Date;
}

interface Principal {
  readonly Name: string;
  readonly Type: string;
  readonly Access: string;
  readonly DataSourceId: string;
}

interface ProxyConfiguration {
  readonly Host: string;
  readonly Port: number;
  readonly Credentials: string;
}

interface PutPrincipalMappingRequest {
  readonly IndexId: string;
  readonly DataSourceId: string;
  readonly GroupId: string;
  readonly GroupMembers: GroupMembers;
  readonly OrderingId: number;
  readonly RoleArn: string;
}

interface QueryRequest {
  readonly IndexId: string;
  readonly QueryText: string;
  readonly AttributeFilter: AttributeFilter;
  readonly Facets: [];
  readonly RequestedDocumentAttributes: [];
  readonly QueryResultTypeFilter: string;
  readonly DocumentRelevanceOverrideConfigurations: [];
  readonly PageNumber: number;
  readonly PageSize: number;
  readonly SortingConfiguration: SortingConfiguration;
  readonly UserContext: UserContext;
  readonly VisitorId: string;
}

interface QueryResult {
  readonly QueryId: string;
  readonly ResultItems: [];
  readonly FacetResults: [];
  readonly TotalNumberOfResults: number;
}

interface QueryResultItem {
  readonly Id: string;
  readonly Type: string;
  readonly AdditionalAttributes: [];
  readonly DocumentId: string;
  readonly DocumentTitle: TextWithHighlights;
  readonly DocumentExcerpt: TextWithHighlights;
  readonly DocumentURI: string;
  readonly DocumentAttributes: [];
  readonly ScoreAttributes: ScoreAttributes;
  readonly FeedbackToken: string;
}

interface QuerySuggestionsBlockListSummary {
  readonly Id: string;
  readonly Name: string;
  readonly Status: string;
  readonly CreatedAt: Date;
  readonly UpdatedAt: Date;
  readonly ItemCount: number;
}

interface Relevance {
  readonly Freshness: boolean;
  readonly Importance: number;
  readonly Duration: string;
  readonly RankOrder: string;
  readonly ValueImportanceMap: {[key: string]: any};
}

interface RelevanceFeedback {
  readonly ResultId: string;
  readonly RelevanceValue: string;
}

interface ResourceAlreadyExistException {
  readonly Message: string;
}

interface ResourceInUseException {
  readonly Message: string;
}

interface ResourceNotFoundException {
  readonly Message: string;
}

interface ResourceUnavailableException {
  readonly Message: string;
}

interface S3DataSourceConfiguration {
  readonly BucketName: string;
  readonly InclusionPrefixes: [];
  readonly InclusionPatterns: [];
  readonly ExclusionPatterns: [];
  readonly DocumentsMetadataConfiguration: DocumentsMetadataConfiguration;
  readonly AccessControlListConfiguration: AccessControlListConfiguration;
}

interface S3Path {
  readonly Bucket: string;
  readonly Key: string;
}

interface SalesforceChatterFeedConfiguration {
  readonly DocumentDataFieldName: string;
  readonly DocumentTitleFieldName: string;
  readonly FieldMappings: [];
  readonly IncludeFilterTypes: [];
}

interface SalesforceConfiguration {
  readonly ServerUrl: string;
  readonly SecretArn: string;
  readonly StandardObjectConfigurations: [];
  readonly KnowledgeArticleConfiguration: SalesforceKnowledgeArticleConfiguration;
  readonly ChatterFeedConfiguration: SalesforceChatterFeedConfiguration;
  readonly CrawlAttachments: boolean;
  readonly StandardObjectAttachmentConfiguration: SalesforceStandardObjectAttachmentConfiguration;
  readonly IncludeAttachmentFilePatterns: [];
  readonly ExcludeAttachmentFilePatterns: [];
}

interface SalesforceCustomKnowledgeArticleTypeConfiguration {
  readonly Name: string;
  readonly DocumentDataFieldName: string;
  readonly DocumentTitleFieldName: string;
  readonly FieldMappings: [];
}

interface SalesforceKnowledgeArticleConfiguration {
  readonly IncludedStates: [];
  readonly StandardKnowledgeArticleTypeConfiguration: SalesforceStandardKnowledgeArticleTypeConfiguration;
  readonly CustomKnowledgeArticleTypeConfigurations: [];
}

interface SalesforceStandardKnowledgeArticleTypeConfiguration {
  readonly DocumentDataFieldName: string;
  readonly DocumentTitleFieldName: string;
  readonly FieldMappings: [];
}

interface SalesforceStandardObjectAttachmentConfiguration {
  readonly DocumentTitleFieldName: string;
  readonly FieldMappings: [];
}

interface SalesforceStandardObjectConfiguration {
  readonly Name: string;
  readonly DocumentDataFieldName: string;
  readonly DocumentTitleFieldName: string;
  readonly FieldMappings: [];
}

interface ScoreAttributes {
  readonly ScoreConfidence: string;
}

interface Search {
  readonly Facetable: boolean;
  readonly Searchable: boolean;
  readonly Displayable: boolean;
  readonly Sortable: boolean;
}

interface SeedUrlConfiguration {
  readonly SeedUrls: [];
  readonly WebCrawlerMode: string;
}

interface ServerSideEncryptionConfiguration {
  readonly KmsKeyId: string;
}

interface ServiceNowConfiguration {
  readonly HostUrl: string;
  readonly SecretArn: string;
  readonly ServiceNowBuildVersion: string;
  readonly KnowledgeArticleConfiguration: ServiceNowKnowledgeArticleConfiguration;
  readonly ServiceCatalogConfiguration: ServiceNowServiceCatalogConfiguration;
  readonly AuthenticationType: string;
}

interface ServiceNowKnowledgeArticleConfiguration {
  readonly CrawlAttachments: boolean;
  readonly IncludeAttachmentFilePatterns: [];
  readonly ExcludeAttachmentFilePatterns: [];
  readonly DocumentDataFieldName: string;
  readonly DocumentTitleFieldName: string;
  readonly FieldMappings: [];
  readonly FilterQuery: string;
}

interface ServiceNowServiceCatalogConfiguration {
  readonly CrawlAttachments: boolean;
  readonly IncludeAttachmentFilePatterns: [];
  readonly ExcludeAttachmentFilePatterns: [];
  readonly DocumentDataFieldName: string;
  readonly DocumentTitleFieldName: string;
  readonly FieldMappings: [];
}

interface ServiceQuotaExceededException {
  readonly Message: string;
}

interface SharePointConfiguration {
  readonly SharePointVersion: string;
  readonly Urls: [];
  readonly SecretArn: string;
  readonly CrawlAttachments: boolean;
  readonly UseChangeLog: boolean;
  readonly InclusionPatterns: [];
  readonly ExclusionPatterns: [];
  readonly VpcConfiguration: DataSourceVpcConfiguration;
  readonly FieldMappings: [];
  readonly DocumentTitleFieldName: string;
  readonly DisableLocalGroups: boolean;
  readonly SslCertificateS3Path: S3Path;
}

interface SiteMapsConfiguration {
  readonly SiteMaps: [];
}

interface SortingConfiguration {
  readonly DocumentAttributeKey: string;
  readonly SortOrder: string;
}

interface SqlConfiguration {
  readonly QueryIdentifiersEnclosingOption: string;
}

interface StartDataSourceSyncJobRequest {
  readonly Id: string;
  readonly IndexId: string;
}

interface StartDataSourceSyncJobResponse {
  readonly ExecutionId: string;
}

interface Status {
  readonly DocumentId: string;
  readonly DocumentStatus: string;
  readonly FailureCode: string;
  readonly FailureReason: string;
}

interface StopDataSourceSyncJobRequest {
  readonly Id: string;
  readonly IndexId: string;
}

interface SubmitFeedbackRequest {
  readonly IndexId: string;
  readonly QueryId: string;
  readonly ClickFeedbackItems: [];
  readonly RelevanceFeedbackItems: [];
}

interface Suggestion {
  readonly Id: string;
  readonly Value: SuggestionValue;
}

interface SuggestionHighlight {
  readonly BeginOffset: number;
  readonly EndOffset: number;
}

interface SuggestionTextWithHighlights {
  readonly Text: string;
  readonly Highlights: [];
}

interface SuggestionValue {
  readonly Text: SuggestionTextWithHighlights;
}

interface Tag {
  readonly Key: string;
  readonly Value: string;
}

interface TagResourceRequest {
  readonly ResourceARN: string;
  readonly Tags: [];
}

interface TagResourceResponse {
}

interface TextDocumentStatistics {
  readonly IndexedTextDocumentsCount: number;
  readonly IndexedTextBytes: number;
}

interface TextWithHighlights {
  readonly Text: string;
  readonly Highlights: [];
}

interface ThesaurusSummary {
  readonly Id: string;
  readonly Name: string;
  readonly Status: string;
  readonly CreatedAt: Date;
  readonly UpdatedAt: Date;
}

interface ThrottlingException {
  readonly Message: string;
}

interface TimeRange {
  readonly StartTime: Date;
  readonly EndTime: Date;
}

interface UntagResourceRequest {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}

interface UntagResourceResponse {
}

interface UpdateDataSourceRequest {
  readonly Id: string;
  readonly Name: string;
  readonly IndexId: string;
  readonly Configuration: DataSourceConfiguration;
  readonly Description: string;
  readonly Schedule: string;
  readonly RoleArn: string;
  readonly LanguageCode: string;
  readonly CustomDocumentEnrichmentConfiguration: CustomDocumentEnrichmentConfiguration;
}

interface UpdateExperienceRequest {
  readonly Id: string;
  readonly Name: string;
  readonly IndexId: string;
  readonly RoleArn: string;
  readonly Configuration: ExperienceConfiguration;
  readonly Description: string;
}

interface UpdateIndexRequest {
  readonly Id: string;
  readonly Name: string;
  readonly RoleArn: string;
  readonly Description: string;
  readonly DocumentMetadataConfigurationUpdates: [];
  readonly CapacityUnits: CapacityUnitsConfiguration;
  readonly UserTokenConfigurations: [];
  readonly UserContextPolicy: string;
  readonly UserGroupResolutionConfiguration: UserGroupResolutionConfiguration;
}

interface UpdateQuerySuggestionsBlockListRequest {
  readonly IndexId: string;
  readonly Id: string;
  readonly Name: string;
  readonly Description: string;
  readonly SourceS3Path: S3Path;
  readonly RoleArn: string;
}

interface UpdateQuerySuggestionsConfigRequest {
  readonly IndexId: string;
  readonly Mode: string;
  readonly QueryLogLookBackWindowInDays: number;
  readonly IncludeQueriesWithoutUserInformation: boolean;
  readonly MinimumNumberOfQueryingUsers: number;
  readonly MinimumQueryCount: number;
}

interface UpdateThesaurusRequest {
  readonly Id: string;
  readonly Name: string;
  readonly IndexId: string;
  readonly Description: string;
  readonly RoleArn: string;
  readonly SourceS3Path: S3Path;
}

interface Urls {
  readonly SeedUrlConfiguration: SeedUrlConfiguration;
  readonly SiteMapsConfiguration: SiteMapsConfiguration;
}

interface UserContext {
  readonly Token: string;
  readonly UserId: string;
  readonly Groups: [];
  readonly DataSourceGroups: [];
}

interface UserGroupResolutionConfiguration {
  readonly UserGroupResolutionMode: string;
}

interface UserIdentityConfiguration {
  readonly IdentityAttributeName: string;
}

interface UserTokenConfiguration {
  readonly JwtTokenTypeConfiguration: JwtTokenTypeConfiguration;
  readonly JsonTokenTypeConfiguration: JsonTokenTypeConfiguration;
}

interface ValidationException {
  readonly Message: string;
}

interface WebCrawlerConfiguration {
  readonly Urls: Urls;
  readonly CrawlDepth: number;
  readonly MaxLinksPerPage: number;
  readonly MaxContentSizePerPageInMegaBytes: unknown;
  readonly MaxUrlsPerMinuteCrawlRate: number;
  readonly UrlInclusionPatterns: [];
  readonly UrlExclusionPatterns: [];
  readonly ProxyConfiguration: ProxyConfiguration;
  readonly AuthenticationConfiguration: AuthenticationConfiguration;
}

interface WorkDocsConfiguration {
  readonly OrganizationId: string;
  readonly CrawlComments: boolean;
  readonly UseChangeLog: boolean;
  readonly InclusionPatterns: [];
  readonly ExclusionPatterns: [];
  readonly FieldMappings: [];
}

