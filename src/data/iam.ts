/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AddClientIDToOpenIDConnectProvider {
  readonly OpenIDConnectProviderArn: string;
  readonly ClientID: string;
}

export interface AddRoleToInstanceProfile {
  readonly InstanceProfileName: string;
  readonly RoleName: string;
}

export interface AddUserToGroup {
  readonly GroupName: string;
  readonly UserName: string;
}

export interface AttachGroupPolicy {
  readonly GroupName: string;
  readonly PolicyArn: string;
}

export interface AttachRolePolicy {
  readonly RoleName: string;
  readonly PolicyArn: string;
}

export interface AttachUserPolicy {
  readonly UserName: string;
  readonly PolicyArn: string;
}

export interface ChangePassword {
  readonly OldPassword: string;
  readonly NewPassword: string;
}

export interface CreateAccessKey {
  readonly UserName?: string;
}

export interface CreateAccountAlias {
  readonly AccountAlias: string;
}

export interface CreateGroup {
  readonly Path?: string;
  readonly GroupName: string;
}

export interface CreateInstanceProfile {
  readonly InstanceProfileName: string;
  readonly Path?: string;
  readonly Tags?: [];
}

export interface CreateLoginProfile {
  readonly UserName: string;
  readonly Password: string;
  readonly PasswordResetRequired?: boolean;
}

export interface CreateOpenIDConnectProvider {
  readonly Url: string;
  readonly ClientIDList?: [];
  readonly ThumbprintList: [];
  readonly Tags?: [];
}

export interface CreatePolicy {
  readonly PolicyName: string;
  readonly Path?: string;
  readonly PolicyDocument: string;
  readonly Description?: string;
  readonly Tags?: [];
}

export interface CreatePolicyVersion {
  readonly PolicyArn: string;
  readonly PolicyDocument: string;
  readonly SetAsDefault?: boolean;
}

export interface CreateRole {
  readonly Path?: string;
  readonly RoleName: string;
  readonly AssumeRolePolicyDocument: string;
  readonly Description?: string;
  readonly MaxSessionDuration?: number;
  readonly PermissionsBoundary?: string;
  readonly Tags?: [];
}

export interface CreateSAMLProvider {
  readonly SAMLMetadataDocument: string;
  readonly Name: string;
  readonly Tags?: [];
}

export interface CreateServiceLinkedRole {
  readonly AWSServiceName: string;
  readonly Description?: string;
  readonly CustomSuffix?: string;
}

export interface CreateServiceSpecificCredential {
  readonly UserName: string;
  readonly ServiceName: string;
}

export interface CreateUser {
  readonly Path?: string;
  readonly UserName: string;
  readonly PermissionsBoundary?: string;
  readonly Tags?: [];
}

export interface CreateVirtualMFADevice {
  readonly Path?: string;
  readonly VirtualMFADeviceName: string;
  readonly Tags?: [];
}

export interface DeactivateMFADevice {
  readonly UserName: string;
  readonly SerialNumber: string;
}

export interface DeleteAccessKey {
  readonly UserName?: string;
  readonly AccessKeyId: string;
}

export interface DeleteAccountAlias {
  readonly AccountAlias: string;
}

export interface DeleteGroup {
  readonly GroupName: string;
}

export interface DeleteGroupPolicy {
  readonly GroupName: string;
  readonly PolicyName: string;
}

export interface DeleteInstanceProfile {
  readonly InstanceProfileName: string;
}

export interface DeleteLoginProfile {
  readonly UserName: string;
}

export interface DeleteOpenIDConnectProvider {
  readonly OpenIDConnectProviderArn: string;
}

export interface DeletePolicy {
  readonly PolicyArn: string;
}

export interface DeletePolicyVersion {
  readonly PolicyArn: string;
  readonly VersionId: string;
}

export interface DeleteRole {
  readonly RoleName: string;
}

export interface DeleteRolePermissionsBoundary {
  readonly RoleName: string;
}

export interface DeleteRolePolicy {
  readonly RoleName: string;
  readonly PolicyName: string;
}

export interface DeleteSAMLProvider {
  readonly SAMLProviderArn: string;
}

export interface DeleteSSHPublicKey {
  readonly UserName: string;
  readonly SSHPublicKeyId: string;
}

export interface DeleteServerCertificate {
  readonly ServerCertificateName: string;
}

export interface DeleteServiceLinkedRole {
  readonly RoleName: string;
}

export interface DeleteServiceSpecificCredential {
  readonly UserName?: string;
  readonly ServiceSpecificCredentialId: string;
}

export interface DeleteSigningCertificate {
  readonly UserName?: string;
  readonly CertificateId: string;
}

export interface DeleteUser {
  readonly UserName: string;
}

export interface DeleteUserPermissionsBoundary {
  readonly UserName: string;
}

export interface DeleteUserPolicy {
  readonly UserName: string;
  readonly PolicyName: string;
}

export interface DeleteVirtualMFADevice {
  readonly SerialNumber: string;
}

export interface DetachGroupPolicy {
  readonly GroupName: string;
  readonly PolicyArn: string;
}

export interface DetachRolePolicy {
  readonly RoleName: string;
  readonly PolicyArn: string;
}

export interface DetachUserPolicy {
  readonly UserName: string;
  readonly PolicyArn: string;
}

export interface EnableMFADevice {
  readonly UserName: string;
  readonly SerialNumber: string;
  readonly AuthenticationCode1: string;
  readonly AuthenticationCode2: string;
}

export interface GenerateOrganizationsAccessReport {
  readonly EntityPath: string;
  readonly OrganizationsPolicyId?: string;
}

export interface GenerateServiceLastAccessedDetails {
  readonly Arn: string;
  readonly Granularity?: string;
}

export interface GetAccessKeyLastUsed {
  readonly AccessKeyId: string;
}

export interface GetAccountAuthorizationDetails {
  readonly Filter?: [];
  readonly MaxItems?: number;
  readonly Marker?: string;
}

export interface GetContextKeysForCustomPolicy {
  readonly PolicyInputList: [];
}

export interface GetContextKeysForPrincipalPolicy {
  readonly PolicySourceArn: string;
  readonly PolicyInputList?: [];
}

export interface GetGroup {
  readonly GroupName: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface GetGroupPolicy {
  readonly GroupName: string;
  readonly PolicyName: string;
}

export interface GetInstanceProfile {
  readonly InstanceProfileName: string;
}

export interface GetLoginProfile {
  readonly UserName: string;
}

export interface GetOpenIDConnectProvider {
  readonly OpenIDConnectProviderArn: string;
}

export interface GetOrganizationsAccessReport {
  readonly JobId: string;
  readonly MaxItems?: number;
  readonly Marker?: string;
  readonly SortKey?: string;
}

export interface GetPolicy {
  readonly PolicyArn: string;
}

export interface GetPolicyVersion {
  readonly PolicyArn: string;
  readonly VersionId: string;
}

export interface GetRole {
  readonly RoleName: string;
}

export interface GetRolePolicy {
  readonly RoleName: string;
  readonly PolicyName: string;
}

export interface GetSAMLProvider {
  readonly SAMLProviderArn: string;
}

export interface GetSSHPublicKey {
  readonly UserName: string;
  readonly SSHPublicKeyId: string;
  readonly Encoding: string;
}

export interface GetServerCertificate {
  readonly ServerCertificateName: string;
}

export interface GetServiceLastAccessedDetails {
  readonly JobId: string;
  readonly MaxItems?: number;
  readonly Marker?: string;
}

export interface GetServiceLastAccessedDetailsWithEntities {
  readonly JobId: string;
  readonly ServiceNamespace: string;
  readonly MaxItems?: number;
  readonly Marker?: string;
}

export interface GetServiceLinkedRoleDeletionStatus {
  readonly DeletionTaskId: string;
}

export interface GetUser {
  readonly UserName?: string;
}

export interface GetUserPolicy {
  readonly UserName: string;
  readonly PolicyName: string;
}

export interface ListAccessKeys {
  readonly UserName?: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListAccountAliases {
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListAttachedGroupPolicies {
  readonly GroupName: string;
  readonly PathPrefix?: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListAttachedRolePolicies {
  readonly RoleName: string;
  readonly PathPrefix?: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListAttachedUserPolicies {
  readonly UserName: string;
  readonly PathPrefix?: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListEntitiesForPolicy {
  readonly PolicyArn: string;
  readonly EntityFilter?: string;
  readonly PathPrefix?: string;
  readonly PolicyUsageFilter?: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListGroupPolicies {
  readonly GroupName: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListGroups {
  readonly PathPrefix?: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListGroupsForUser {
  readonly UserName: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListInstanceProfileTags {
  readonly InstanceProfileName: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListInstanceProfiles {
  readonly PathPrefix?: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListInstanceProfilesForRole {
  readonly RoleName: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListMFADeviceTags {
  readonly SerialNumber: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListMFADevices {
  readonly UserName?: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListOpenIDConnectProviderTags {
  readonly OpenIDConnectProviderArn: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListOpenIDConnectProviders {
}

export interface ListPolicies {
  readonly Scope?: string;
  readonly OnlyAttached?: boolean;
  readonly PathPrefix?: string;
  readonly PolicyUsageFilter?: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListPoliciesGrantingServiceAccess {
  readonly Marker?: string;
  readonly Arn: string;
  readonly ServiceNamespaces: [];
}

export interface ListPolicyTags {
  readonly PolicyArn: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListPolicyVersions {
  readonly PolicyArn: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListRolePolicies {
  readonly RoleName: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListRoleTags {
  readonly RoleName: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListRoles {
  readonly PathPrefix?: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListSAMLProviderTags {
  readonly SAMLProviderArn: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListSAMLProviders {
}

export interface ListSSHPublicKeys {
  readonly UserName?: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListServerCertificateTags {
  readonly ServerCertificateName: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListServerCertificates {
  readonly PathPrefix?: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListServiceSpecificCredentials {
  readonly UserName?: string;
  readonly ServiceName?: string;
}

export interface ListSigningCertificates {
  readonly UserName?: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListUserPolicies {
  readonly UserName: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListUserTags {
  readonly UserName: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListUsers {
  readonly PathPrefix?: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListVirtualMFADevices {
  readonly AssignmentStatus?: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface PutGroupPolicy {
  readonly GroupName: string;
  readonly PolicyName: string;
  readonly PolicyDocument: string;
}

export interface PutRolePermissionsBoundary {
  readonly RoleName: string;
  readonly PermissionsBoundary: string;
}

export interface PutRolePolicy {
  readonly RoleName: string;
  readonly PolicyName: string;
  readonly PolicyDocument: string;
}

export interface PutUserPermissionsBoundary {
  readonly UserName: string;
  readonly PermissionsBoundary: string;
}

export interface PutUserPolicy {
  readonly UserName: string;
  readonly PolicyName: string;
  readonly PolicyDocument: string;
}

export interface RemoveClientIDFromOpenIDConnectProvider {
  readonly OpenIDConnectProviderArn: string;
  readonly ClientID: string;
}

export interface RemoveRoleFromInstanceProfile {
  readonly InstanceProfileName: string;
  readonly RoleName: string;
}

export interface RemoveUserFromGroup {
  readonly GroupName: string;
  readonly UserName: string;
}

export interface ResetServiceSpecificCredential {
  readonly UserName?: string;
  readonly ServiceSpecificCredentialId: string;
}

export interface ResyncMFADevice {
  readonly UserName: string;
  readonly SerialNumber: string;
  readonly AuthenticationCode1: string;
  readonly AuthenticationCode2: string;
}

export interface SetDefaultPolicyVersion {
  readonly PolicyArn: string;
  readonly VersionId: string;
}

export interface SetSecurityTokenServicePreferences {
  readonly GlobalEndpointTokenVersion: string;
}

export interface SimulateCustomPolicy {
  readonly PolicyInputList: [];
  readonly PermissionsBoundaryPolicyInputList?: [];
  readonly ActionNames: [];
  readonly ResourceArns?: [];
  readonly ResourcePolicy?: string;
  readonly ResourceOwner?: string;
  readonly CallerArn?: string;
  readonly ContextEntries?: [];
  readonly ResourceHandlingOption?: string;
  readonly MaxItems?: number;
  readonly Marker?: string;
}

export interface SimulatePrincipalPolicy {
  readonly PolicySourceArn: string;
  readonly PolicyInputList?: [];
  readonly PermissionsBoundaryPolicyInputList?: [];
  readonly ActionNames: [];
  readonly ResourceArns?: [];
  readonly ResourcePolicy?: string;
  readonly ResourceOwner?: string;
  readonly CallerArn?: string;
  readonly ContextEntries?: [];
  readonly ResourceHandlingOption?: string;
  readonly MaxItems?: number;
  readonly Marker?: string;
}

export interface TagInstanceProfile {
  readonly InstanceProfileName: string;
  readonly Tags: [];
}

export interface TagMFADevice {
  readonly SerialNumber: string;
  readonly Tags: [];
}

export interface TagOpenIDConnectProvider {
  readonly OpenIDConnectProviderArn: string;
  readonly Tags: [];
}

export interface TagPolicy {
  readonly PolicyArn: string;
  readonly Tags: [];
}

export interface TagRole {
  readonly RoleName: string;
  readonly Tags: [];
}

export interface TagSAMLProvider {
  readonly SAMLProviderArn: string;
  readonly Tags: [];
}

export interface TagServerCertificate {
  readonly ServerCertificateName: string;
  readonly Tags: [];
}

export interface TagUser {
  readonly UserName: string;
  readonly Tags: [];
}

export interface UntagInstanceProfile {
  readonly InstanceProfileName: string;
  readonly TagKeys: [];
}

export interface UntagMFADevice {
  readonly SerialNumber: string;
  readonly TagKeys: [];
}

export interface UntagOpenIDConnectProvider {
  readonly OpenIDConnectProviderArn: string;
  readonly TagKeys: [];
}

export interface UntagPolicy {
  readonly PolicyArn: string;
  readonly TagKeys: [];
}

export interface UntagRole {
  readonly RoleName: string;
  readonly TagKeys: [];
}

export interface UntagSAMLProvider {
  readonly SAMLProviderArn: string;
  readonly TagKeys: [];
}

export interface UntagServerCertificate {
  readonly ServerCertificateName: string;
  readonly TagKeys: [];
}

export interface UntagUser {
  readonly UserName: string;
  readonly TagKeys: [];
}

export interface UpdateAccessKey {
  readonly UserName?: string;
  readonly AccessKeyId: string;
  readonly Status: string;
}

export interface UpdateAccountPasswordPolicy {
  readonly MinimumPasswordLength?: number;
  readonly RequireSymbols?: boolean;
  readonly RequireNumbers?: boolean;
  readonly RequireUppercaseCharacters?: boolean;
  readonly RequireLowercaseCharacters?: boolean;
  readonly AllowUsersToChangePassword?: boolean;
  readonly MaxPasswordAge?: number;
  readonly PasswordReusePrevention?: number;
  readonly HardExpiry?: boolean;
}

export interface UpdateAssumeRolePolicy {
  readonly RoleName: string;
  readonly PolicyDocument: string;
}

export interface UpdateGroup {
  readonly GroupName: string;
  readonly NewPath?: string;
  readonly NewGroupName?: string;
}

export interface UpdateLoginProfile {
  readonly UserName: string;
  readonly Password?: string;
  readonly PasswordResetRequired?: boolean;
}

export interface UpdateOpenIDConnectProviderThumbprint {
  readonly OpenIDConnectProviderArn: string;
  readonly ThumbprintList: [];
}

export interface UpdateRole {
  readonly RoleName: string;
  readonly Description?: string;
  readonly MaxSessionDuration?: number;
}

export interface UpdateRoleDescription {
  readonly RoleName: string;
  readonly Description: string;
}

export interface UpdateSAMLProvider {
  readonly SAMLMetadataDocument: string;
  readonly SAMLProviderArn: string;
}

export interface UpdateSSHPublicKey {
  readonly UserName: string;
  readonly SSHPublicKeyId: string;
  readonly Status: string;
}

export interface UpdateServerCertificate {
  readonly ServerCertificateName: string;
  readonly NewPath?: string;
  readonly NewServerCertificateName?: string;
}

export interface UpdateServiceSpecificCredential {
  readonly UserName?: string;
  readonly ServiceSpecificCredentialId: string;
  readonly Status: string;
}

export interface UpdateSigningCertificate {
  readonly UserName?: string;
  readonly CertificateId: string;
  readonly Status: string;
}

export interface UpdateUser {
  readonly UserName: string;
  readonly NewPath?: string;
  readonly NewUserName?: string;
}

export interface UploadSSHPublicKey {
  readonly UserName: string;
  readonly SSHPublicKeyBody: string;
}

export interface UploadServerCertificate {
  readonly Path?: string;
  readonly ServerCertificateName: string;
  readonly CertificateBody: string;
  readonly PrivateKey: string;
  readonly CertificateChain?: string;
  readonly Tags?: [];
}

export interface UploadSigningCertificate {
  readonly UserName?: string;
  readonly CertificateBody: string;
}

export interface AccessDetail {
  readonly ServiceName: string;
  readonly ServiceNamespace: string;
  readonly Region?: string;
  readonly EntityPath?: string;
  readonly LastAuthenticatedTime?: Date;
  readonly TotalAuthenticatedEntities?: number;
}

export interface AccessKey {
  readonly UserName: string;
  readonly AccessKeyId: string;
  readonly Status: string;
  readonly SecretAccessKey: string;
  readonly CreateDate?: Date;
}

export interface AccessKeyLastUsed {
  readonly LastUsedDate: Date;
  readonly ServiceName: string;
  readonly Region: string;
}

export interface AccessKeyMetadata {
  readonly UserName?: string;
  readonly AccessKeyId?: string;
  readonly Status?: string;
  readonly CreateDate?: Date;
}

export interface AddClientIDToOpenIDConnectProviderRequest {
  readonly OpenIDConnectProviderArn: string;
  readonly ClientID: string;
}

export interface AddRoleToInstanceProfileRequest {
  readonly InstanceProfileName: string;
  readonly RoleName: string;
}

export interface AddUserToGroupRequest {
  readonly GroupName: string;
  readonly UserName: string;
}

export interface AttachGroupPolicyRequest {
  readonly GroupName: string;
  readonly PolicyArn: string;
}

export interface AttachRolePolicyRequest {
  readonly RoleName: string;
  readonly PolicyArn: string;
}

export interface AttachUserPolicyRequest {
  readonly UserName: string;
  readonly PolicyArn: string;
}

export interface AttachedPermissionsBoundary {
  readonly PermissionsBoundaryType?: string;
  readonly PermissionsBoundaryArn?: string;
}

export interface AttachedPolicy {
  readonly PolicyName?: string;
  readonly PolicyArn?: string;
}

export interface ChangePasswordRequest {
  readonly OldPassword: string;
  readonly NewPassword: string;
}

export interface ConcurrentModificationException {
  readonly message?: string;
}

export interface ContextEntry {
  readonly ContextKeyName?: string;
  readonly ContextKeyValues?: [];
  readonly ContextKeyType?: string;
}

export interface CreateAccessKeyRequest {
  readonly UserName?: string;
}

export interface CreateAccessKeyResponse {
  readonly AccessKey: AccessKey;
}

export interface CreateAccountAliasRequest {
  readonly AccountAlias: string;
}

export interface CreateGroupRequest {
  readonly Path?: string;
  readonly GroupName: string;
}

export interface CreateGroupResponse {
  readonly Group: Group;
}

export interface CreateInstanceProfileRequest {
  readonly InstanceProfileName: string;
  readonly Path?: string;
  readonly Tags?: [];
}

export interface CreateInstanceProfileResponse {
  readonly InstanceProfile: InstanceProfile;
}

export interface CreateLoginProfileRequest {
  readonly UserName: string;
  readonly Password: string;
  readonly PasswordResetRequired?: boolean;
}

export interface CreateLoginProfileResponse {
  readonly LoginProfile: LoginProfile;
}

export interface CreateOpenIDConnectProviderRequest {
  readonly Url: string;
  readonly ClientIDList?: [];
  readonly ThumbprintList: [];
  readonly Tags?: [];
}

export interface CreateOpenIDConnectProviderResponse {
  readonly OpenIDConnectProviderArn?: string;
  readonly Tags?: [];
}

export interface CreatePolicyRequest {
  readonly PolicyName: string;
  readonly Path?: string;
  readonly PolicyDocument: string;
  readonly Description?: string;
  readonly Tags?: [];
}

export interface CreatePolicyResponse {
  readonly Policy?: Policy;
}

export interface CreatePolicyVersionRequest {
  readonly PolicyArn: string;
  readonly PolicyDocument: string;
  readonly SetAsDefault?: boolean;
}

export interface CreatePolicyVersionResponse {
  readonly PolicyVersion?: PolicyVersion;
}

export interface CreateRoleRequest {
  readonly Path?: string;
  readonly RoleName: string;
  readonly AssumeRolePolicyDocument: string;
  readonly Description?: string;
  readonly MaxSessionDuration?: number;
  readonly PermissionsBoundary?: string;
  readonly Tags?: [];
}

export interface CreateRoleResponse {
  readonly Role: Role;
}

export interface CreateSAMLProviderRequest {
  readonly SAMLMetadataDocument: string;
  readonly Name: string;
  readonly Tags?: [];
}

export interface CreateSAMLProviderResponse {
  readonly SAMLProviderArn?: string;
  readonly Tags?: [];
}

export interface CreateServiceLinkedRoleRequest {
  readonly AWSServiceName: string;
  readonly Description?: string;
  readonly CustomSuffix?: string;
}

export interface CreateServiceLinkedRoleResponse {
  readonly Role?: Role;
}

export interface CreateServiceSpecificCredentialRequest {
  readonly UserName: string;
  readonly ServiceName: string;
}

export interface CreateServiceSpecificCredentialResponse {
  readonly ServiceSpecificCredential?: ServiceSpecificCredential;
}

export interface CreateUserRequest {
  readonly Path?: string;
  readonly UserName: string;
  readonly PermissionsBoundary?: string;
  readonly Tags?: [];
}

export interface CreateUserResponse {
  readonly User?: User;
}

export interface CreateVirtualMFADeviceRequest {
  readonly Path?: string;
  readonly VirtualMFADeviceName: string;
  readonly Tags?: [];
}

export interface CreateVirtualMFADeviceResponse {
  readonly VirtualMFADevice: VirtualMFADevice;
}

export interface CredentialReportExpiredException {
  readonly message?: string;
}

export interface CredentialReportNotPresentException {
  readonly message?: string;
}

export interface CredentialReportNotReadyException {
  readonly message?: string;
}

export interface DeactivateMFADeviceRequest {
  readonly UserName: string;
  readonly SerialNumber: string;
}

export interface DeleteAccessKeyRequest {
  readonly UserName?: string;
  readonly AccessKeyId: string;
}

export interface DeleteAccountAliasRequest {
  readonly AccountAlias: string;
}

export interface DeleteConflictException {
  readonly message?: string;
}

export interface DeleteGroupPolicyRequest {
  readonly GroupName: string;
  readonly PolicyName: string;
}

export interface DeleteGroupRequest {
  readonly GroupName: string;
}

export interface DeleteInstanceProfileRequest {
  readonly InstanceProfileName: string;
}

export interface DeleteLoginProfileRequest {
  readonly UserName: string;
}

export interface DeleteOpenIDConnectProviderRequest {
  readonly OpenIDConnectProviderArn: string;
}

export interface DeletePolicyRequest {
  readonly PolicyArn: string;
}

export interface DeletePolicyVersionRequest {
  readonly PolicyArn: string;
  readonly VersionId: string;
}

export interface DeleteRolePermissionsBoundaryRequest {
  readonly RoleName: string;
}

export interface DeleteRolePolicyRequest {
  readonly RoleName: string;
  readonly PolicyName: string;
}

export interface DeleteRoleRequest {
  readonly RoleName: string;
}

export interface DeleteSAMLProviderRequest {
  readonly SAMLProviderArn: string;
}

export interface DeleteSSHPublicKeyRequest {
  readonly UserName: string;
  readonly SSHPublicKeyId: string;
}

export interface DeleteServerCertificateRequest {
  readonly ServerCertificateName: string;
}

export interface DeleteServiceLinkedRoleRequest {
  readonly RoleName: string;
}

export interface DeleteServiceLinkedRoleResponse {
  readonly DeletionTaskId: string;
}

export interface DeleteServiceSpecificCredentialRequest {
  readonly UserName?: string;
  readonly ServiceSpecificCredentialId: string;
}

export interface DeleteSigningCertificateRequest {
  readonly UserName?: string;
  readonly CertificateId: string;
}

export interface DeleteUserPermissionsBoundaryRequest {
  readonly UserName: string;
}

export interface DeleteUserPolicyRequest {
  readonly UserName: string;
  readonly PolicyName: string;
}

export interface DeleteUserRequest {
  readonly UserName: string;
}

export interface DeleteVirtualMFADeviceRequest {
  readonly SerialNumber: string;
}

export interface DeletionTaskFailureReasonType {
  readonly Reason?: string;
  readonly RoleUsageList?: [];
}

export interface DetachGroupPolicyRequest {
  readonly GroupName: string;
  readonly PolicyArn: string;
}

export interface DetachRolePolicyRequest {
  readonly RoleName: string;
  readonly PolicyArn: string;
}

export interface DetachUserPolicyRequest {
  readonly UserName: string;
  readonly PolicyArn: string;
}

export interface DuplicateCertificateException {
  readonly message?: string;
}

export interface DuplicateSSHPublicKeyException {
  readonly message?: string;
}

export interface EnableMFADeviceRequest {
  readonly UserName: string;
  readonly SerialNumber: string;
  readonly AuthenticationCode1: string;
  readonly AuthenticationCode2: string;
}

export interface EntityAlreadyExistsException {
  readonly message?: string;
}

export interface EntityDetails {
  readonly EntityInfo: EntityInfo;
  readonly LastAuthenticated?: Date;
}

export interface EntityInfo {
  readonly Arn: string;
  readonly Name: string;
  readonly Type: string;
  readonly Id: string;
  readonly Path?: string;
}

export interface EntityTemporarilyUnmodifiableException {
  readonly message?: string;
}

export interface ErrorDetails {
  readonly Message: string;
  readonly Code: string;
}

export interface EvaluationResult {
  readonly EvalActionName: string;
  readonly EvalResourceName?: string;
  readonly EvalDecision: string;
  readonly MatchedStatements?: [];
  readonly MissingContextValues?: [];
  readonly OrganizationsDecisionDetail?: OrganizationsDecisionDetail;
  readonly PermissionsBoundaryDecisionDetail?: PermissionsBoundaryDecisionDetail;
  readonly EvalDecisionDetails?: {[key: string]: any};
  readonly ResourceSpecificResults?: [];
}

export interface GenerateCredentialReportResponse {
  readonly State?: string;
  readonly Description?: string;
}

export interface GenerateOrganizationsAccessReportRequest {
  readonly EntityPath: string;
  readonly OrganizationsPolicyId?: string;
}

export interface GenerateOrganizationsAccessReportResponse {
  readonly JobId?: string;
}

export interface GenerateServiceLastAccessedDetailsRequest {
  readonly Arn: string;
  readonly Granularity?: string;
}

export interface GenerateServiceLastAccessedDetailsResponse {
  readonly JobId?: string;
}

export interface GetAccessKeyLastUsedRequest {
  readonly AccessKeyId: string;
}

export interface GetAccessKeyLastUsedResponse {
  readonly UserName?: string;
  readonly AccessKeyLastUsed?: AccessKeyLastUsed;
}

export interface GetAccountAuthorizationDetailsRequest {
  readonly Filter?: [];
  readonly MaxItems?: number;
  readonly Marker?: string;
}

export interface GetAccountAuthorizationDetailsResponse {
  readonly UserDetailList?: [];
  readonly GroupDetailList?: [];
  readonly RoleDetailList?: [];
  readonly Policies?: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface GetAccountPasswordPolicyResponse {
  readonly PasswordPolicy: PasswordPolicy;
}

export interface GetAccountSummaryResponse {
  readonly SummaryMap?: {[key: string]: any};
}

export interface GetContextKeysForCustomPolicyRequest {
  readonly PolicyInputList: [];
}

export interface GetContextKeysForPolicyResponse {
  readonly ContextKeyNames?: [];
}

export interface GetContextKeysForPrincipalPolicyRequest {
  readonly PolicySourceArn: string;
  readonly PolicyInputList?: [];
}

export interface GetCredentialReportResponse {
  readonly Content?: unknown;
  readonly ReportFormat?: string;
  readonly GeneratedTime?: Date;
}

export interface GetGroupPolicyRequest {
  readonly GroupName: string;
  readonly PolicyName: string;
}

export interface GetGroupPolicyResponse {
  readonly GroupName: string;
  readonly PolicyName: string;
  readonly PolicyDocument: string;
}

export interface GetGroupRequest {
  readonly GroupName: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface GetGroupResponse {
  readonly Group: Group;
  readonly Users: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface GetInstanceProfileRequest {
  readonly InstanceProfileName: string;
}

export interface GetInstanceProfileResponse {
  readonly InstanceProfile: InstanceProfile;
}

export interface GetLoginProfileRequest {
  readonly UserName: string;
}

export interface GetLoginProfileResponse {
  readonly LoginProfile: LoginProfile;
}

export interface GetOpenIDConnectProviderRequest {
  readonly OpenIDConnectProviderArn: string;
}

export interface GetOpenIDConnectProviderResponse {
  readonly Url?: string;
  readonly ClientIDList?: [];
  readonly ThumbprintList?: [];
  readonly CreateDate?: Date;
  readonly Tags?: [];
}

export interface GetOrganizationsAccessReportRequest {
  readonly JobId: string;
  readonly MaxItems?: number;
  readonly Marker?: string;
  readonly SortKey?: string;
}

export interface GetOrganizationsAccessReportResponse {
  readonly JobStatus: string;
  readonly JobCreationDate: Date;
  readonly JobCompletionDate?: Date;
  readonly NumberOfServicesAccessible?: number;
  readonly NumberOfServicesNotAccessed?: number;
  readonly AccessDetails?: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
  readonly ErrorDetails?: ErrorDetails;
}

export interface GetPolicyRequest {
  readonly PolicyArn: string;
}

export interface GetPolicyResponse {
  readonly Policy?: Policy;
}

export interface GetPolicyVersionRequest {
  readonly PolicyArn: string;
  readonly VersionId: string;
}

export interface GetPolicyVersionResponse {
  readonly PolicyVersion?: PolicyVersion;
}

export interface GetRolePolicyRequest {
  readonly RoleName: string;
  readonly PolicyName: string;
}

export interface GetRolePolicyResponse {
  readonly RoleName: string;
  readonly PolicyName: string;
  readonly PolicyDocument: string;
}

export interface GetRoleRequest {
  readonly RoleName: string;
}

export interface GetRoleResponse {
  readonly Role: Role;
}

export interface GetSAMLProviderRequest {
  readonly SAMLProviderArn: string;
}

export interface GetSAMLProviderResponse {
  readonly SAMLMetadataDocument?: string;
  readonly CreateDate?: Date;
  readonly ValidUntil?: Date;
  readonly Tags?: [];
}

export interface GetSSHPublicKeyRequest {
  readonly UserName: string;
  readonly SSHPublicKeyId: string;
  readonly Encoding: string;
}

export interface GetSSHPublicKeyResponse {
  readonly SSHPublicKey?: SSHPublicKey;
}

export interface GetServerCertificateRequest {
  readonly ServerCertificateName: string;
}

export interface GetServerCertificateResponse {
  readonly ServerCertificate: ServerCertificate;
}

export interface GetServiceLastAccessedDetailsRequest {
  readonly JobId: string;
  readonly MaxItems?: number;
  readonly Marker?: string;
}

export interface GetServiceLastAccessedDetailsResponse {
  readonly JobStatus: string;
  readonly JobType?: string;
  readonly JobCreationDate: Date;
  readonly ServicesLastAccessed: [];
  readonly JobCompletionDate: Date;
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
  readonly Error?: ErrorDetails;
}

export interface GetServiceLastAccessedDetailsWithEntitiesRequest {
  readonly JobId: string;
  readonly ServiceNamespace: string;
  readonly MaxItems?: number;
  readonly Marker?: string;
}

export interface GetServiceLastAccessedDetailsWithEntitiesResponse {
  readonly JobStatus: string;
  readonly JobCreationDate: Date;
  readonly JobCompletionDate: Date;
  readonly EntityDetailsList: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
  readonly Error?: ErrorDetails;
}

export interface GetServiceLinkedRoleDeletionStatusRequest {
  readonly DeletionTaskId: string;
}

export interface GetServiceLinkedRoleDeletionStatusResponse {
  readonly Status: string;
  readonly Reason?: DeletionTaskFailureReasonType;
}

export interface GetUserPolicyRequest {
  readonly UserName: string;
  readonly PolicyName: string;
}

export interface GetUserPolicyResponse {
  readonly UserName: string;
  readonly PolicyName: string;
  readonly PolicyDocument: string;
}

export interface GetUserRequest {
  readonly UserName?: string;
}

export interface GetUserResponse {
  readonly User: User;
}

export interface Group {
  readonly Path: string;
  readonly GroupName: string;
  readonly GroupId: string;
  readonly Arn: string;
  readonly CreateDate: Date;
}

export interface GroupDetail {
  readonly Path?: string;
  readonly GroupName?: string;
  readonly GroupId?: string;
  readonly Arn?: string;
  readonly CreateDate?: Date;
  readonly GroupPolicyList?: [];
  readonly AttachedManagedPolicies?: [];
}

export interface InstanceProfile {
  readonly Path: string;
  readonly InstanceProfileName: string;
  readonly InstanceProfileId: string;
  readonly Arn: string;
  readonly CreateDate: Date;
  readonly Roles: [];
  readonly Tags?: [];
}

export interface InvalidAuthenticationCodeException {
  readonly message?: string;
}

export interface InvalidCertificateException {
  readonly message?: string;
}

export interface InvalidInputException {
  readonly message?: string;
}

export interface InvalidPublicKeyException {
  readonly message?: string;
}

export interface InvalidUserTypeException {
  readonly message?: string;
}

export interface KeyPairMismatchException {
  readonly message?: string;
}

export interface LimitExceededException {
  readonly message?: string;
}

export interface ListAccessKeysRequest {
  readonly UserName?: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListAccessKeysResponse {
  readonly AccessKeyMetadata: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface ListAccountAliasesRequest {
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListAccountAliasesResponse {
  readonly AccountAliases: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface ListAttachedGroupPoliciesRequest {
  readonly GroupName: string;
  readonly PathPrefix?: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListAttachedGroupPoliciesResponse {
  readonly AttachedPolicies?: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface ListAttachedRolePoliciesRequest {
  readonly RoleName: string;
  readonly PathPrefix?: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListAttachedRolePoliciesResponse {
  readonly AttachedPolicies?: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface ListAttachedUserPoliciesRequest {
  readonly UserName: string;
  readonly PathPrefix?: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListAttachedUserPoliciesResponse {
  readonly AttachedPolicies?: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface ListEntitiesForPolicyRequest {
  readonly PolicyArn: string;
  readonly EntityFilter?: string;
  readonly PathPrefix?: string;
  readonly PolicyUsageFilter?: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListEntitiesForPolicyResponse {
  readonly PolicyGroups?: [];
  readonly PolicyUsers?: [];
  readonly PolicyRoles?: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface ListGroupPoliciesRequest {
  readonly GroupName: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListGroupPoliciesResponse {
  readonly PolicyNames: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface ListGroupsForUserRequest {
  readonly UserName: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListGroupsForUserResponse {
  readonly Groups: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface ListGroupsRequest {
  readonly PathPrefix?: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListGroupsResponse {
  readonly Groups: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface ListInstanceProfileTagsRequest {
  readonly InstanceProfileName: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListInstanceProfileTagsResponse {
  readonly Tags: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface ListInstanceProfilesForRoleRequest {
  readonly RoleName: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListInstanceProfilesForRoleResponse {
  readonly InstanceProfiles: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface ListInstanceProfilesRequest {
  readonly PathPrefix?: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListInstanceProfilesResponse {
  readonly InstanceProfiles: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface ListMFADeviceTagsRequest {
  readonly SerialNumber: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListMFADeviceTagsResponse {
  readonly Tags: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface ListMFADevicesRequest {
  readonly UserName?: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListMFADevicesResponse {
  readonly MFADevices: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface ListOpenIDConnectProviderTagsRequest {
  readonly OpenIDConnectProviderArn: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListOpenIDConnectProviderTagsResponse {
  readonly Tags: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface ListOpenIDConnectProvidersRequest {
}

export interface ListOpenIDConnectProvidersResponse {
  readonly OpenIDConnectProviderList?: [];
}

export interface ListPoliciesGrantingServiceAccessEntry {
  readonly ServiceNamespace?: string;
  readonly Policies?: [];
}

export interface ListPoliciesGrantingServiceAccessRequest {
  readonly Marker?: string;
  readonly Arn: string;
  readonly ServiceNamespaces: [];
}

export interface ListPoliciesGrantingServiceAccessResponse {
  readonly PoliciesGrantingServiceAccess: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface ListPoliciesRequest {
  readonly Scope?: string;
  readonly OnlyAttached?: boolean;
  readonly PathPrefix?: string;
  readonly PolicyUsageFilter?: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListPoliciesResponse {
  readonly Policies?: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface ListPolicyTagsRequest {
  readonly PolicyArn: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListPolicyTagsResponse {
  readonly Tags: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface ListPolicyVersionsRequest {
  readonly PolicyArn: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListPolicyVersionsResponse {
  readonly Versions?: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface ListRolePoliciesRequest {
  readonly RoleName: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListRolePoliciesResponse {
  readonly PolicyNames: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface ListRoleTagsRequest {
  readonly RoleName: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListRoleTagsResponse {
  readonly Tags: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface ListRolesRequest {
  readonly PathPrefix?: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListRolesResponse {
  readonly Roles: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface ListSAMLProviderTagsRequest {
  readonly SAMLProviderArn: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListSAMLProviderTagsResponse {
  readonly Tags: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface ListSAMLProvidersRequest {
}

export interface ListSAMLProvidersResponse {
  readonly SAMLProviderList?: [];
}

export interface ListSSHPublicKeysRequest {
  readonly UserName?: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListSSHPublicKeysResponse {
  readonly SSHPublicKeys?: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface ListServerCertificateTagsRequest {
  readonly ServerCertificateName: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListServerCertificateTagsResponse {
  readonly Tags: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface ListServerCertificatesRequest {
  readonly PathPrefix?: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListServerCertificatesResponse {
  readonly ServerCertificateMetadataList: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface ListServiceSpecificCredentialsRequest {
  readonly UserName?: string;
  readonly ServiceName?: string;
}

export interface ListServiceSpecificCredentialsResponse {
  readonly ServiceSpecificCredentials?: [];
}

export interface ListSigningCertificatesRequest {
  readonly UserName?: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListSigningCertificatesResponse {
  readonly Certificates: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface ListUserPoliciesRequest {
  readonly UserName: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListUserPoliciesResponse {
  readonly PolicyNames: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface ListUserTagsRequest {
  readonly UserName: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListUserTagsResponse {
  readonly Tags: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface ListUsersRequest {
  readonly PathPrefix?: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListUsersResponse {
  readonly Users: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface ListVirtualMFADevicesRequest {
  readonly AssignmentStatus?: string;
  readonly Marker?: string;
  readonly MaxItems?: number;
}

export interface ListVirtualMFADevicesResponse {
  readonly VirtualMFADevices: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface LoginProfile {
  readonly UserName: string;
  readonly CreateDate: Date;
  readonly PasswordResetRequired?: boolean;
}

export interface MFADevice {
  readonly UserName: string;
  readonly SerialNumber: string;
  readonly EnableDate: Date;
}

export interface MalformedCertificateException {
  readonly message?: string;
}

export interface MalformedPolicyDocumentException {
  readonly message?: string;
}

export interface ManagedPolicyDetail {
  readonly PolicyName?: string;
  readonly PolicyId?: string;
  readonly Arn?: string;
  readonly Path?: string;
  readonly DefaultVersionId?: string;
  readonly AttachmentCount?: number;
  readonly PermissionsBoundaryUsageCount?: number;
  readonly IsAttachable?: boolean;
  readonly Description?: string;
  readonly CreateDate?: Date;
  readonly UpdateDate?: Date;
  readonly PolicyVersionList?: [];
}

export interface NoSuchEntityException {
  readonly message?: string;
}

export interface OpenIDConnectProviderListEntry {
  readonly Arn?: string;
}

export interface OrganizationsDecisionDetail {
  readonly AllowedByOrganizations?: boolean;
}

export interface PasswordPolicy {
  readonly MinimumPasswordLength?: number;
  readonly RequireSymbols?: boolean;
  readonly RequireNumbers?: boolean;
  readonly RequireUppercaseCharacters?: boolean;
  readonly RequireLowercaseCharacters?: boolean;
  readonly AllowUsersToChangePassword?: boolean;
  readonly ExpirePasswords?: boolean;
  readonly MaxPasswordAge?: number;
  readonly PasswordReusePrevention?: number;
  readonly HardExpiry?: boolean;
}

export interface PasswordPolicyViolationException {
  readonly message?: string;
}

export interface PermissionsBoundaryDecisionDetail {
  readonly AllowedByPermissionsBoundary?: boolean;
}

export interface Policy {
  readonly PolicyName?: string;
  readonly PolicyId?: string;
  readonly Arn?: string;
  readonly Path?: string;
  readonly DefaultVersionId?: string;
  readonly AttachmentCount?: number;
  readonly PermissionsBoundaryUsageCount?: number;
  readonly IsAttachable?: boolean;
  readonly Description?: string;
  readonly CreateDate?: Date;
  readonly UpdateDate?: Date;
  readonly Tags?: [];
}

export interface PolicyDetail {
  readonly PolicyName?: string;
  readonly PolicyDocument?: string;
}

export interface PolicyEvaluationException {
  readonly message?: string;
}

export interface PolicyGrantingServiceAccess {
  readonly PolicyName: string;
  readonly PolicyType: string;
  readonly PolicyArn?: string;
  readonly EntityType?: string;
  readonly EntityName?: string;
}

export interface PolicyGroup {
  readonly GroupName?: string;
  readonly GroupId?: string;
}

export interface PolicyNotAttachableException {
  readonly message?: string;
}

export interface PolicyRole {
  readonly RoleName?: string;
  readonly RoleId?: string;
}

export interface PolicyUser {
  readonly UserName?: string;
  readonly UserId?: string;
}

export interface PolicyVersion {
  readonly Document?: string;
  readonly VersionId?: string;
  readonly IsDefaultVersion?: boolean;
  readonly CreateDate?: Date;
}

export interface Position {
  readonly Line?: number;
  readonly Column?: number;
}

export interface PutGroupPolicyRequest {
  readonly GroupName: string;
  readonly PolicyName: string;
  readonly PolicyDocument: string;
}

export interface PutRolePermissionsBoundaryRequest {
  readonly RoleName: string;
  readonly PermissionsBoundary: string;
}

export interface PutRolePolicyRequest {
  readonly RoleName: string;
  readonly PolicyName: string;
  readonly PolicyDocument: string;
}

export interface PutUserPermissionsBoundaryRequest {
  readonly UserName: string;
  readonly PermissionsBoundary: string;
}

export interface PutUserPolicyRequest {
  readonly UserName: string;
  readonly PolicyName: string;
  readonly PolicyDocument: string;
}

export interface RemoveClientIDFromOpenIDConnectProviderRequest {
  readonly OpenIDConnectProviderArn: string;
  readonly ClientID: string;
}

export interface RemoveRoleFromInstanceProfileRequest {
  readonly InstanceProfileName: string;
  readonly RoleName: string;
}

export interface RemoveUserFromGroupRequest {
  readonly GroupName: string;
  readonly UserName: string;
}

export interface ReportGenerationLimitExceededException {
  readonly message?: string;
}

export interface ResetServiceSpecificCredentialRequest {
  readonly UserName?: string;
  readonly ServiceSpecificCredentialId: string;
}

export interface ResetServiceSpecificCredentialResponse {
  readonly ServiceSpecificCredential?: ServiceSpecificCredential;
}

export interface ResourceSpecificResult {
  readonly EvalResourceName: string;
  readonly EvalResourceDecision: string;
  readonly MatchedStatements?: [];
  readonly MissingContextValues?: [];
  readonly EvalDecisionDetails?: {[key: string]: any};
  readonly PermissionsBoundaryDecisionDetail?: PermissionsBoundaryDecisionDetail;
}

export interface ResyncMFADeviceRequest {
  readonly UserName: string;
  readonly SerialNumber: string;
  readonly AuthenticationCode1: string;
  readonly AuthenticationCode2: string;
}

export interface Role {
  readonly Path: string;
  readonly RoleName: string;
  readonly RoleId: string;
  readonly Arn: string;
  readonly CreateDate: Date;
  readonly AssumeRolePolicyDocument?: string;
  readonly Description?: string;
  readonly MaxSessionDuration?: number;
  readonly PermissionsBoundary?: AttachedPermissionsBoundary;
  readonly Tags?: [];
  readonly RoleLastUsed?: RoleLastUsed;
}

export interface RoleDetail {
  readonly Path?: string;
  readonly RoleName?: string;
  readonly RoleId?: string;
  readonly Arn?: string;
  readonly CreateDate?: Date;
  readonly AssumeRolePolicyDocument?: string;
  readonly InstanceProfileList?: [];
  readonly RolePolicyList?: [];
  readonly AttachedManagedPolicies?: [];
  readonly PermissionsBoundary?: AttachedPermissionsBoundary;
  readonly Tags?: [];
  readonly RoleLastUsed?: RoleLastUsed;
}

export interface RoleLastUsed {
  readonly LastUsedDate?: Date;
  readonly Region?: string;
}

export interface RoleUsageType {
  readonly Region?: string;
  readonly Resources?: [];
}

export interface SAMLProviderListEntry {
  readonly Arn?: string;
  readonly ValidUntil?: Date;
  readonly CreateDate?: Date;
}

export interface SSHPublicKey {
  readonly UserName: string;
  readonly SSHPublicKeyId: string;
  readonly Fingerprint: string;
  readonly SSHPublicKeyBody: string;
  readonly Status: string;
  readonly UploadDate?: Date;
}

export interface SSHPublicKeyMetadata {
  readonly UserName: string;
  readonly SSHPublicKeyId: string;
  readonly Status: string;
  readonly UploadDate: Date;
}

export interface ServerCertificate {
  readonly ServerCertificateMetadata: ServerCertificateMetadata;
  readonly CertificateBody: string;
  readonly CertificateChain?: string;
  readonly Tags?: [];
}

export interface ServerCertificateMetadata {
  readonly Path: string;
  readonly ServerCertificateName: string;
  readonly ServerCertificateId: string;
  readonly Arn: string;
  readonly UploadDate?: Date;
  readonly Expiration?: Date;
}

export interface ServiceFailureException {
  readonly message?: string;
}

export interface ServiceLastAccessed {
  readonly ServiceName: string;
  readonly LastAuthenticated?: Date;
  readonly ServiceNamespace: string;
  readonly LastAuthenticatedEntity?: string;
  readonly LastAuthenticatedRegion?: string;
  readonly TotalAuthenticatedEntities?: number;
  readonly TrackedActionsLastAccessed?: [];
}

export interface ServiceNotSupportedException {
  readonly message?: string;
}

export interface ServiceSpecificCredential {
  readonly CreateDate: Date;
  readonly ServiceName: string;
  readonly ServiceUserName: string;
  readonly ServicePassword: string;
  readonly ServiceSpecificCredentialId: string;
  readonly UserName: string;
  readonly Status: string;
}

export interface ServiceSpecificCredentialMetadata {
  readonly UserName: string;
  readonly Status: string;
  readonly ServiceUserName: string;
  readonly CreateDate: Date;
  readonly ServiceSpecificCredentialId: string;
  readonly ServiceName: string;
}

export interface SetDefaultPolicyVersionRequest {
  readonly PolicyArn: string;
  readonly VersionId: string;
}

export interface SetSecurityTokenServicePreferencesRequest {
  readonly GlobalEndpointTokenVersion: string;
}

export interface SigningCertificate {
  readonly UserName: string;
  readonly CertificateId: string;
  readonly CertificateBody: string;
  readonly Status: string;
  readonly UploadDate?: Date;
}

export interface SimulateCustomPolicyRequest {
  readonly PolicyInputList: [];
  readonly PermissionsBoundaryPolicyInputList?: [];
  readonly ActionNames: [];
  readonly ResourceArns?: [];
  readonly ResourcePolicy?: string;
  readonly ResourceOwner?: string;
  readonly CallerArn?: string;
  readonly ContextEntries?: [];
  readonly ResourceHandlingOption?: string;
  readonly MaxItems?: number;
  readonly Marker?: string;
}

export interface SimulatePolicyResponse {
  readonly EvaluationResults?: [];
  readonly IsTruncated?: boolean;
  readonly Marker?: string;
}

export interface SimulatePrincipalPolicyRequest {
  readonly PolicySourceArn: string;
  readonly PolicyInputList?: [];
  readonly PermissionsBoundaryPolicyInputList?: [];
  readonly ActionNames: [];
  readonly ResourceArns?: [];
  readonly ResourcePolicy?: string;
  readonly ResourceOwner?: string;
  readonly CallerArn?: string;
  readonly ContextEntries?: [];
  readonly ResourceHandlingOption?: string;
  readonly MaxItems?: number;
  readonly Marker?: string;
}

export interface Statement {
  readonly SourcePolicyId?: string;
  readonly SourcePolicyType?: string;
  readonly StartPosition?: Position;
  readonly EndPosition?: Position;
}

export interface Tag {
  readonly Key: string;
  readonly Value: string;
}

export interface TagInstanceProfileRequest {
  readonly InstanceProfileName: string;
  readonly Tags: [];
}

export interface TagMFADeviceRequest {
  readonly SerialNumber: string;
  readonly Tags: [];
}

export interface TagOpenIDConnectProviderRequest {
  readonly OpenIDConnectProviderArn: string;
  readonly Tags: [];
}

export interface TagPolicyRequest {
  readonly PolicyArn: string;
  readonly Tags: [];
}

export interface TagRoleRequest {
  readonly RoleName: string;
  readonly Tags: [];
}

export interface TagSAMLProviderRequest {
  readonly SAMLProviderArn: string;
  readonly Tags: [];
}

export interface TagServerCertificateRequest {
  readonly ServerCertificateName: string;
  readonly Tags: [];
}

export interface TagUserRequest {
  readonly UserName: string;
  readonly Tags: [];
}

export interface TrackedActionLastAccessed {
  readonly ActionName?: string;
  readonly LastAccessedEntity?: string;
  readonly LastAccessedTime?: Date;
  readonly LastAccessedRegion?: string;
}

export interface UnmodifiableEntityException {
  readonly message?: string;
}

export interface UnrecognizedPublicKeyEncodingException {
  readonly message?: string;
}

export interface UntagInstanceProfileRequest {
  readonly InstanceProfileName: string;
  readonly TagKeys: [];
}

export interface UntagMFADeviceRequest {
  readonly SerialNumber: string;
  readonly TagKeys: [];
}

export interface UntagOpenIDConnectProviderRequest {
  readonly OpenIDConnectProviderArn: string;
  readonly TagKeys: [];
}

export interface UntagPolicyRequest {
  readonly PolicyArn: string;
  readonly TagKeys: [];
}

export interface UntagRoleRequest {
  readonly RoleName: string;
  readonly TagKeys: [];
}

export interface UntagSAMLProviderRequest {
  readonly SAMLProviderArn: string;
  readonly TagKeys: [];
}

export interface UntagServerCertificateRequest {
  readonly ServerCertificateName: string;
  readonly TagKeys: [];
}

export interface UntagUserRequest {
  readonly UserName: string;
  readonly TagKeys: [];
}

export interface UpdateAccessKeyRequest {
  readonly UserName?: string;
  readonly AccessKeyId: string;
  readonly Status: string;
}

export interface UpdateAccountPasswordPolicyRequest {
  readonly MinimumPasswordLength?: number;
  readonly RequireSymbols?: boolean;
  readonly RequireNumbers?: boolean;
  readonly RequireUppercaseCharacters?: boolean;
  readonly RequireLowercaseCharacters?: boolean;
  readonly AllowUsersToChangePassword?: boolean;
  readonly MaxPasswordAge?: number;
  readonly PasswordReusePrevention?: number;
  readonly HardExpiry?: boolean;
}

export interface UpdateAssumeRolePolicyRequest {
  readonly RoleName: string;
  readonly PolicyDocument: string;
}

export interface UpdateGroupRequest {
  readonly GroupName: string;
  readonly NewPath?: string;
  readonly NewGroupName?: string;
}

export interface UpdateLoginProfileRequest {
  readonly UserName: string;
  readonly Password?: string;
  readonly PasswordResetRequired?: boolean;
}

export interface UpdateOpenIDConnectProviderThumbprintRequest {
  readonly OpenIDConnectProviderArn: string;
  readonly ThumbprintList: [];
}

export interface UpdateRoleDescriptionRequest {
  readonly RoleName: string;
  readonly Description: string;
}

export interface UpdateRoleDescriptionResponse {
  readonly Role?: Role;
}

export interface UpdateRoleRequest {
  readonly RoleName: string;
  readonly Description?: string;
  readonly MaxSessionDuration?: number;
}

export interface UpdateRoleResponse {
}

export interface UpdateSAMLProviderRequest {
  readonly SAMLMetadataDocument: string;
  readonly SAMLProviderArn: string;
}

export interface UpdateSAMLProviderResponse {
  readonly SAMLProviderArn?: string;
}

export interface UpdateSSHPublicKeyRequest {
  readonly UserName: string;
  readonly SSHPublicKeyId: string;
  readonly Status: string;
}

export interface UpdateServerCertificateRequest {
  readonly ServerCertificateName: string;
  readonly NewPath?: string;
  readonly NewServerCertificateName?: string;
}

export interface UpdateServiceSpecificCredentialRequest {
  readonly UserName?: string;
  readonly ServiceSpecificCredentialId: string;
  readonly Status: string;
}

export interface UpdateSigningCertificateRequest {
  readonly UserName?: string;
  readonly CertificateId: string;
  readonly Status: string;
}

export interface UpdateUserRequest {
  readonly UserName: string;
  readonly NewPath?: string;
  readonly NewUserName?: string;
}

export interface UploadSSHPublicKeyRequest {
  readonly UserName: string;
  readonly SSHPublicKeyBody: string;
}

export interface UploadSSHPublicKeyResponse {
  readonly SSHPublicKey?: SSHPublicKey;
}

export interface UploadServerCertificateRequest {
  readonly Path?: string;
  readonly ServerCertificateName: string;
  readonly CertificateBody: string;
  readonly PrivateKey: string;
  readonly CertificateChain?: string;
  readonly Tags?: [];
}

export interface UploadServerCertificateResponse {
  readonly ServerCertificateMetadata?: ServerCertificateMetadata;
  readonly Tags?: [];
}

export interface UploadSigningCertificateRequest {
  readonly UserName?: string;
  readonly CertificateBody: string;
}

export interface UploadSigningCertificateResponse {
  readonly Certificate: SigningCertificate;
}

export interface User {
  readonly Path: string;
  readonly UserName: string;
  readonly UserId: string;
  readonly Arn: string;
  readonly CreateDate: Date;
  readonly PasswordLastUsed?: Date;
  readonly PermissionsBoundary?: AttachedPermissionsBoundary;
  readonly Tags?: [];
}

export interface UserDetail {
  readonly Path?: string;
  readonly UserName?: string;
  readonly UserId?: string;
  readonly Arn?: string;
  readonly CreateDate?: Date;
  readonly UserPolicyList?: [];
  readonly GroupList?: [];
  readonly AttachedManagedPolicies?: [];
  readonly PermissionsBoundary?: AttachedPermissionsBoundary;
  readonly Tags?: [];
}

export interface VirtualMFADevice {
  readonly SerialNumber: string;
  readonly Base32StringSeed?: unknown;
  readonly QRCodePNG?: unknown;
  readonly User?: User;
  readonly EnableDate?: Date;
  readonly Tags?: [];
}


