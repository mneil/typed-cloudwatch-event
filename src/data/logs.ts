/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AssociateKmsKey {
  readonly logGroupName: string;
  readonly kmsKeyId: string;
}

export interface CancelExportTask {
  readonly taskId: string;
}

export interface CreateExportTask {
  readonly taskName?: string;
  readonly logGroupName: string;
  readonly logStreamNamePrefix?: string;
  readonly from: number;
  readonly to: number;
  readonly destination: string;
  readonly destinationPrefix?: string;
}

export interface CreateLogGroup {
  readonly logGroupName: string;
  readonly kmsKeyId?: string;
  readonly tags?: {[key: string]: any};
}

export interface CreateLogStream {
  readonly logGroupName: string;
  readonly logStreamName: string;
}

export interface DeleteDestination {
  readonly destinationName: string;
}

export interface DeleteLogGroup {
  readonly logGroupName: string;
}

export interface DeleteLogStream {
  readonly logGroupName: string;
  readonly logStreamName: string;
}

export interface DeleteMetricFilter {
  readonly logGroupName: string;
  readonly filterName: string;
}

export interface DeleteQueryDefinition {
  readonly queryDefinitionId: string;
}

export interface DeleteResourcePolicy {
  readonly policyName?: string;
}

export interface DeleteRetentionPolicy {
  readonly logGroupName: string;
}

export interface DeleteSubscriptionFilter {
  readonly logGroupName: string;
  readonly filterName: string;
}

export interface DescribeDestinations {
  readonly DestinationNamePrefix?: string;
  readonly nextToken?: string;
  readonly limit?: number;
}

export interface DescribeExportTasks {
  readonly taskId?: string;
  readonly statusCode?: string;
  readonly nextToken?: string;
  readonly limit?: number;
}

export interface DescribeLogGroups {
  readonly logGroupNamePrefix?: string;
  readonly nextToken?: string;
  readonly limit?: number;
}

export interface DescribeLogStreams {
  readonly logGroupName: string;
  readonly logStreamNamePrefix?: string;
  readonly orderBy?: string;
  readonly descending?: boolean;
  readonly nextToken?: string;
  readonly limit?: number;
}

export interface DescribeMetricFilters {
  readonly logGroupName?: string;
  readonly filterNamePrefix?: string;
  readonly nextToken?: string;
  readonly limit?: number;
  readonly metricName?: string;
  readonly metricNamespace?: string;
}

export interface DescribeQueries {
  readonly logGroupName?: string;
  readonly status?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface DescribeQueryDefinitions {
  readonly queryDefinitionNamePrefix?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface DescribeResourcePolicies {
  readonly nextToken?: string;
  readonly limit?: number;
}

export interface DescribeSubscriptionFilters {
  readonly logGroupName: string;
  readonly filterNamePrefix?: string;
  readonly nextToken?: string;
  readonly limit?: number;
}

export interface DisassociateKmsKey {
  readonly logGroupName: string;
}

export interface FilterLogEvents {
  readonly logGroupName: string;
  readonly logStreamNames?: [];
  readonly logStreamNamePrefix?: string;
  readonly startTime?: number;
  readonly endTime?: number;
  readonly filterPattern?: string;
  readonly nextToken?: string;
  readonly limit?: number;
  readonly interleaved?: boolean;
}

export interface GetLogEvents {
  readonly logGroupName: string;
  readonly logStreamName: string;
  readonly startTime?: number;
  readonly endTime?: number;
  readonly nextToken?: string;
  readonly limit?: number;
  readonly startFromHead?: boolean;
}

export interface GetLogGroupFields {
  readonly logGroupName: string;
  readonly time?: number;
}

export interface GetLogRecord {
  readonly logRecordPointer: string;
}

export interface GetQueryResults {
  readonly queryId: string;
}

export interface ListTagsLogGroup {
  readonly logGroupName: string;
}

export interface PutDestination {
  readonly destinationName: string;
  readonly targetArn: string;
  readonly roleArn: string;
}

export interface PutDestinationPolicy {
  readonly destinationName: string;
  readonly accessPolicy: string;
  readonly forceUpdate?: boolean;
}

export interface PutLogEvents {
  readonly logGroupName: string;
  readonly logStreamName: string;
  readonly logEvents: [];
  readonly sequenceToken?: string;
}

export interface PutMetricFilter {
  readonly logGroupName: string;
  readonly filterName: string;
  readonly filterPattern: string;
  readonly metricTransformations: [];
}

export interface PutQueryDefinition {
  readonly name: string;
  readonly queryDefinitionId?: string;
  readonly logGroupNames?: [];
  readonly queryString: string;
}

export interface PutResourcePolicy {
  readonly policyName?: string;
  readonly policyDocument?: string;
}

export interface PutRetentionPolicy {
  readonly logGroupName: string;
  readonly retentionInDays: number;
}

export interface PutSubscriptionFilter {
  readonly logGroupName: string;
  readonly filterName: string;
  readonly filterPattern: string;
  readonly destinationArn: string;
  readonly roleArn?: string;
  readonly distribution?: string;
}

export interface StartQuery {
  readonly logGroupName?: string;
  readonly logGroupNames?: [];
  readonly startTime: number;
  readonly endTime: number;
  readonly queryString: string;
  readonly limit?: number;
}

export interface StopQuery {
  readonly queryId: string;
}

export interface TagLogGroup {
  readonly logGroupName: string;
  readonly tags: {[key: string]: any};
}

export interface TestMetricFilter {
  readonly filterPattern: string;
  readonly logEventMessages: [];
}

export interface UntagLogGroup {
  readonly logGroupName: string;
  readonly tags: [];
}

export interface AssociateKmsKeyRequest {
  readonly logGroupName: string;
  readonly kmsKeyId: string;
}

export interface CancelExportTaskRequest {
  readonly taskId: string;
}

export interface CreateExportTaskRequest {
  readonly taskName?: string;
  readonly logGroupName: string;
  readonly logStreamNamePrefix?: string;
  readonly from: number;
  readonly to: number;
  readonly destination: string;
  readonly destinationPrefix?: string;
}

export interface CreateExportTaskResponse {
  readonly taskId?: string;
}

export interface CreateLogGroupRequest {
  readonly logGroupName: string;
  readonly kmsKeyId?: string;
  readonly tags?: {[key: string]: any};
}

export interface CreateLogStreamRequest {
  readonly logGroupName: string;
  readonly logStreamName: string;
}

export interface DataAlreadyAcceptedException {
  readonly expectedSequenceToken?: string;
}

export interface DeleteDestinationRequest {
  readonly destinationName: string;
}

export interface DeleteLogGroupRequest {
  readonly logGroupName: string;
}

export interface DeleteLogStreamRequest {
  readonly logGroupName: string;
  readonly logStreamName: string;
}

export interface DeleteMetricFilterRequest {
  readonly logGroupName: string;
  readonly filterName: string;
}

export interface DeleteQueryDefinitionRequest {
  readonly queryDefinitionId: string;
}

export interface DeleteQueryDefinitionResponse {
  readonly success?: boolean;
}

export interface DeleteResourcePolicyRequest {
  readonly policyName?: string;
}

export interface DeleteRetentionPolicyRequest {
  readonly logGroupName: string;
}

export interface DeleteSubscriptionFilterRequest {
  readonly logGroupName: string;
  readonly filterName: string;
}

export interface DescribeDestinationsRequest {
  readonly DestinationNamePrefix?: string;
  readonly nextToken?: string;
  readonly limit?: number;
}

export interface DescribeDestinationsResponse {
  readonly destinations?: [];
  readonly nextToken?: string;
}

export interface DescribeExportTasksRequest {
  readonly taskId?: string;
  readonly statusCode?: string;
  readonly nextToken?: string;
  readonly limit?: number;
}

export interface DescribeExportTasksResponse {
  readonly exportTasks?: [];
  readonly nextToken?: string;
}

export interface DescribeLogGroupsRequest {
  readonly logGroupNamePrefix?: string;
  readonly nextToken?: string;
  readonly limit?: number;
}

export interface DescribeLogGroupsResponse {
  readonly logGroups?: [];
  readonly nextToken?: string;
}

export interface DescribeLogStreamsRequest {
  readonly logGroupName: string;
  readonly logStreamNamePrefix?: string;
  readonly orderBy?: string;
  readonly descending?: boolean;
  readonly nextToken?: string;
  readonly limit?: number;
}

export interface DescribeLogStreamsResponse {
  readonly logStreams?: [];
  readonly nextToken?: string;
}

export interface DescribeMetricFiltersRequest {
  readonly logGroupName?: string;
  readonly filterNamePrefix?: string;
  readonly nextToken?: string;
  readonly limit?: number;
  readonly metricName?: string;
  readonly metricNamespace?: string;
}

export interface DescribeMetricFiltersResponse {
  readonly metricFilters?: [];
  readonly nextToken?: string;
}

export interface DescribeQueriesRequest {
  readonly logGroupName?: string;
  readonly status?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface DescribeQueriesResponse {
  readonly queries?: [];
  readonly nextToken?: string;
}

export interface DescribeQueryDefinitionsRequest {
  readonly queryDefinitionNamePrefix?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface DescribeQueryDefinitionsResponse {
  readonly queryDefinitions?: [];
  readonly nextToken?: string;
}

export interface DescribeResourcePoliciesRequest {
  readonly nextToken?: string;
  readonly limit?: number;
}

export interface DescribeResourcePoliciesResponse {
  readonly resourcePolicies?: [];
  readonly nextToken?: string;
}

export interface DescribeSubscriptionFiltersRequest {
  readonly logGroupName: string;
  readonly filterNamePrefix?: string;
  readonly nextToken?: string;
  readonly limit?: number;
}

export interface DescribeSubscriptionFiltersResponse {
  readonly subscriptionFilters?: [];
  readonly nextToken?: string;
}

export interface Destination {
  readonly destinationName?: string;
  readonly targetArn?: string;
  readonly roleArn?: string;
  readonly accessPolicy?: string;
  readonly arn?: string;
  readonly creationTime?: number;
}

export interface DisassociateKmsKeyRequest {
  readonly logGroupName: string;
}

export interface ExportTask {
  readonly taskId?: string;
  readonly taskName?: string;
  readonly logGroupName?: string;
  readonly from?: number;
  readonly to?: number;
  readonly destination?: string;
  readonly destinationPrefix?: string;
  readonly status?: ExportTaskStatus;
  readonly executionInfo?: ExportTaskExecutionInfo;
}

export interface ExportTaskExecutionInfo {
  readonly creationTime?: number;
  readonly completionTime?: number;
}

export interface ExportTaskStatus {
  readonly code?: string;
  readonly message?: string;
}

export interface FilterLogEventsRequest {
  readonly logGroupName: string;
  readonly logStreamNames?: [];
  readonly logStreamNamePrefix?: string;
  readonly startTime?: number;
  readonly endTime?: number;
  readonly filterPattern?: string;
  readonly nextToken?: string;
  readonly limit?: number;
  readonly interleaved?: boolean;
}

export interface FilterLogEventsResponse {
  readonly events?: [];
  readonly searchedLogStreams?: [];
  readonly nextToken?: string;
}

export interface FilteredLogEvent {
  readonly logStreamName?: string;
  readonly timestamp?: number;
  readonly message?: string;
  readonly ingestionTime?: number;
  readonly eventId?: string;
}

export interface GetLogEventsRequest {
  readonly logGroupName: string;
  readonly logStreamName: string;
  readonly startTime?: number;
  readonly endTime?: number;
  readonly nextToken?: string;
  readonly limit?: number;
  readonly startFromHead?: boolean;
}

export interface GetLogEventsResponse {
  readonly events?: [];
  readonly nextForwardToken?: string;
  readonly nextBackwardToken?: string;
}

export interface GetLogGroupFieldsRequest {
  readonly logGroupName: string;
  readonly time?: number;
}

export interface GetLogGroupFieldsResponse {
  readonly logGroupFields?: [];
}

export interface GetLogRecordRequest {
  readonly logRecordPointer: string;
}

export interface GetLogRecordResponse {
  readonly logRecord?: {[key: string]: any};
}

export interface GetQueryResultsRequest {
  readonly queryId: string;
}

export interface GetQueryResultsResponse {
  readonly results?: [];
  readonly statistics?: QueryStatistics;
  readonly status?: string;
}

export interface InputLogEvent {
  readonly timestamp: number;
  readonly message: string;
}

export interface InvalidOperationException {
}

export interface InvalidParameterException {
}

export interface InvalidSequenceTokenException {
  readonly expectedSequenceToken?: string;
}

export interface LimitExceededException {
}

export interface ListTagsLogGroupRequest {
  readonly logGroupName: string;
}

export interface ListTagsLogGroupResponse {
  readonly tags?: {[key: string]: any};
}

export interface LogGroup {
  readonly logGroupName?: string;
  readonly creationTime?: number;
  readonly retentionInDays?: number;
  readonly metricFilterCount?: number;
  readonly arn?: string;
  readonly storedBytes?: number;
  readonly kmsKeyId?: string;
}

export interface LogGroupField {
  readonly name?: string;
  readonly percent?: number;
}

export interface LogStream {
  readonly logStreamName?: string;
  readonly creationTime?: number;
  readonly firstEventTimestamp?: number;
  readonly lastEventTimestamp?: number;
  readonly lastIngestionTime?: number;
  readonly uploadSequenceToken?: string;
  readonly arn?: string;
  readonly storedBytes?: number;
}

export interface MalformedQueryException {
  readonly queryCompileError?: QueryCompileError;
}

export interface MetricFilter {
  readonly filterName?: string;
  readonly filterPattern?: string;
  readonly metricTransformations?: [];
  readonly creationTime?: number;
  readonly logGroupName?: string;
}

export interface MetricFilterMatchRecord {
  readonly eventNumber?: number;
  readonly eventMessage?: string;
  readonly extractedValues?: {[key: string]: any};
}

export interface MetricTransformation {
  readonly metricName: string;
  readonly metricNamespace: string;
  readonly metricValue: string;
  readonly defaultValue?: unknown;
  readonly dimensions?: {[key: string]: any};
  readonly unit?: string;
}

export interface OperationAbortedException {
}

export interface OutputLogEvent {
  readonly timestamp?: number;
  readonly message?: string;
  readonly ingestionTime?: number;
}

export interface PutDestinationPolicyRequest {
  readonly destinationName: string;
  readonly accessPolicy: string;
  readonly forceUpdate?: boolean;
}

export interface PutDestinationRequest {
  readonly destinationName: string;
  readonly targetArn: string;
  readonly roleArn: string;
}

export interface PutDestinationResponse {
  readonly destination?: Destination;
}

export interface PutLogEventsRequest {
  readonly logGroupName: string;
  readonly logStreamName: string;
  readonly logEvents: [];
  readonly sequenceToken?: string;
}

export interface PutLogEventsResponse {
  readonly nextSequenceToken?: string;
  readonly rejectedLogEventsInfo?: RejectedLogEventsInfo;
}

export interface PutMetricFilterRequest {
  readonly logGroupName: string;
  readonly filterName: string;
  readonly filterPattern: string;
  readonly metricTransformations: [];
}

export interface PutQueryDefinitionRequest {
  readonly name: string;
  readonly queryDefinitionId?: string;
  readonly logGroupNames?: [];
  readonly queryString: string;
}

export interface PutQueryDefinitionResponse {
  readonly queryDefinitionId?: string;
}

export interface PutResourcePolicyRequest {
  readonly policyName?: string;
  readonly policyDocument?: string;
}

export interface PutResourcePolicyResponse {
  readonly resourcePolicy?: ResourcePolicy;
}

export interface PutRetentionPolicyRequest {
  readonly logGroupName: string;
  readonly retentionInDays: number;
}

export interface PutSubscriptionFilterRequest {
  readonly logGroupName: string;
  readonly filterName: string;
  readonly filterPattern: string;
  readonly destinationArn: string;
  readonly roleArn?: string;
  readonly distribution?: string;
}

export interface QueryCompileError {
  readonly location?: QueryCompileErrorLocation;
  readonly message?: string;
}

export interface QueryCompileErrorLocation {
  readonly startCharOffset?: number;
  readonly endCharOffset?: number;
}

export interface QueryDefinition {
  readonly queryDefinitionId?: string;
  readonly name?: string;
  readonly queryString?: string;
  readonly lastModified?: number;
  readonly logGroupNames?: [];
}

export interface QueryInfo {
  readonly queryId?: string;
  readonly queryString?: string;
  readonly status?: string;
  readonly createTime?: number;
  readonly logGroupName?: string;
}

export interface QueryStatistics {
  readonly recordsMatched?: unknown;
  readonly recordsScanned?: unknown;
  readonly bytesScanned?: unknown;
}

export interface RejectedLogEventsInfo {
  readonly tooNewLogEventStartIndex?: number;
  readonly tooOldLogEventEndIndex?: number;
  readonly expiredLogEventEndIndex?: number;
}

export interface ResourceAlreadyExistsException {
}

export interface ResourceNotFoundException {
}

export interface ResourcePolicy {
  readonly policyName?: string;
  readonly policyDocument?: string;
  readonly lastUpdatedTime?: number;
}

export interface ResultField {
  readonly field?: string;
  readonly value?: string;
}

export interface SearchedLogStream {
  readonly logStreamName?: string;
  readonly searchedCompletely?: boolean;
}

export interface ServiceUnavailableException {
}

export interface StartQueryRequest {
  readonly logGroupName?: string;
  readonly logGroupNames?: [];
  readonly startTime: number;
  readonly endTime: number;
  readonly queryString: string;
  readonly limit?: number;
}

export interface StartQueryResponse {
  readonly queryId?: string;
}

export interface StopQueryRequest {
  readonly queryId: string;
}

export interface StopQueryResponse {
  readonly success?: boolean;
}

export interface SubscriptionFilter {
  readonly filterName?: string;
  readonly logGroupName?: string;
  readonly filterPattern?: string;
  readonly destinationArn?: string;
  readonly roleArn?: string;
  readonly distribution?: string;
  readonly creationTime?: number;
}

export interface TagLogGroupRequest {
  readonly logGroupName: string;
  readonly tags: {[key: string]: any};
}

export interface TestMetricFilterRequest {
  readonly filterPattern: string;
  readonly logEventMessages: [];
}

export interface TestMetricFilterResponse {
  readonly matches?: [];
}

export interface UnrecognizedClientException {
}

export interface UntagLogGroupRequest {
  readonly logGroupName: string;
  readonly tags: [];
}


