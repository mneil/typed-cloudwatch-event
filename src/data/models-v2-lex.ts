/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface BuildBotLocale {
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
}

export interface CreateBot {
  readonly botName: string;
  readonly description?: string;
  readonly roleArn: string;
  readonly dataPrivacy: DataPrivacy;
  readonly idleSessionTTLInSeconds: number;
  readonly botTags?: {[key: string]: any};
  readonly testBotAliasTags?: {[key: string]: any};
}

export interface CreateBotAlias {
  readonly botAliasName: string;
  readonly description?: string;
  readonly botVersion?: string;
  readonly botAliasLocaleSettings?: {[key: string]: any};
  readonly conversationLogSettings?: ConversationLogSettings;
  readonly sentimentAnalysisSettings?: SentimentAnalysisSettings;
  readonly botId: string;
  readonly tags?: {[key: string]: any};
}

export interface CreateBotLocale {
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly description?: string;
  readonly nluIntentConfidenceThreshold: unknown;
  readonly voiceSettings?: VoiceSettings;
}

export interface CreateBotVersion {
  readonly botId: string;
  readonly description?: string;
  readonly botVersionLocaleSpecification: {[key: string]: any};
}

export interface CreateExport {
  readonly resourceSpecification: ExportResourceSpecification;
  readonly fileFormat: string;
  readonly filePassword?: string;
}

export interface CreateIntent {
  readonly intentName: string;
  readonly description?: string;
  readonly parentIntentSignature?: string;
  readonly sampleUtterances?: [];
  readonly dialogCodeHook?: DialogCodeHookSettings;
  readonly fulfillmentCodeHook?: FulfillmentCodeHookSettings;
  readonly intentConfirmationSetting?: IntentConfirmationSetting;
  readonly intentClosingSetting?: IntentClosingSetting;
  readonly inputContexts?: [];
  readonly outputContexts?: [];
  readonly kendraConfiguration?: KendraConfiguration;
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
}

export interface CreateResourcePolicy {
  readonly resourceArn: string;
  readonly policy: string;
}

export interface CreateResourcePolicyStatement {
  readonly resourceArn: string;
  readonly statementId: string;
  readonly effect: string;
  readonly principal: [];
  readonly action: [];
  readonly condition?: {[key: string]: any};
  readonly expectedRevisionId?: string;
}

export interface CreateSlot {
  readonly slotName: string;
  readonly description?: string;
  readonly slotTypeId: string;
  readonly valueElicitationSetting: SlotValueElicitationSetting;
  readonly obfuscationSetting?: ObfuscationSetting;
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly intentId: string;
  readonly multipleValuesSetting?: MultipleValuesSetting;
}

export interface CreateSlotType {
  readonly slotTypeName: string;
  readonly description?: string;
  readonly slotTypeValues?: [];
  readonly valueSelectionSetting?: SlotValueSelectionSetting;
  readonly parentSlotTypeSignature?: string;
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly externalSourceSetting?: ExternalSourceSetting;
}

export interface CreateUploadUrl {
}

export interface DeleteBot {
  readonly botId: string;
  readonly skipResourceInUseCheck?: boolean;
}

export interface DeleteBotAlias {
  readonly botAliasId: string;
  readonly botId: string;
  readonly skipResourceInUseCheck?: boolean;
}

export interface DeleteBotLocale {
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
}

export interface DeleteBotVersion {
  readonly botId: string;
  readonly botVersion: string;
  readonly skipResourceInUseCheck?: boolean;
}

export interface DeleteExport {
  readonly exportId: string;
}

export interface DeleteImport {
  readonly importId: string;
}

export interface DeleteIntent {
  readonly intentId: string;
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
}

export interface DeleteResourcePolicy {
  readonly resourceArn: string;
  readonly expectedRevisionId?: string;
}

export interface DeleteResourcePolicyStatement {
  readonly resourceArn: string;
  readonly statementId: string;
  readonly expectedRevisionId?: string;
}

export interface DeleteSlot {
  readonly slotId: string;
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly intentId: string;
}

export interface DeleteSlotType {
  readonly slotTypeId: string;
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly skipResourceInUseCheck?: boolean;
}

export interface DeleteUtterances {
  readonly botId: string;
  readonly localeId?: string;
  readonly sessionId?: string;
}

export interface DescribeBot {
  readonly botId: string;
}

export interface DescribeBotAlias {
  readonly botAliasId: string;
  readonly botId: string;
}

export interface DescribeBotLocale {
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
}

export interface DescribeBotRecommendation {
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly botRecommendationId: string;
}

export interface DescribeBotVersion {
  readonly botId: string;
  readonly botVersion: string;
}

export interface DescribeExport {
  readonly exportId: string;
}

export interface DescribeImport {
  readonly importId: string;
}

export interface DescribeIntent {
  readonly intentId: string;
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
}

export interface DescribeResourcePolicy {
  readonly resourceArn: string;
}

export interface DescribeSlot {
  readonly slotId: string;
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly intentId: string;
}

export interface DescribeSlotType {
  readonly slotTypeId: string;
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
}

export interface ListAggregatedUtterances {
  readonly botId: string;
  readonly botAliasId?: string;
  readonly botVersion?: string;
  readonly localeId: string;
  readonly aggregationDuration: UtteranceAggregationDuration;
  readonly sortBy?: AggregatedUtterancesSortBy;
  readonly filters?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListBotAliases {
  readonly botId: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListBotLocales {
  readonly botId: string;
  readonly botVersion: string;
  readonly sortBy?: BotLocaleSortBy;
  readonly filters?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListBotRecommendations {
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListBotVersions {
  readonly botId: string;
  readonly sortBy?: BotVersionSortBy;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListBots {
  readonly sortBy?: BotSortBy;
  readonly filters?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListBuiltInIntents {
  readonly localeId: string;
  readonly sortBy?: BuiltInIntentSortBy;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListBuiltInSlotTypes {
  readonly localeId: string;
  readonly sortBy?: BuiltInSlotTypeSortBy;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListExports {
  readonly botId?: string;
  readonly botVersion?: string;
  readonly sortBy?: ExportSortBy;
  readonly filters?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListImports {
  readonly botId?: string;
  readonly botVersion?: string;
  readonly sortBy?: ImportSortBy;
  readonly filters?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListIntents {
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly sortBy?: IntentSortBy;
  readonly filters?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListRecommendedIntents {
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly botRecommendationId: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListSlotTypes {
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly sortBy?: SlotTypeSortBy;
  readonly filters?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListSlots {
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly intentId: string;
  readonly sortBy?: SlotSortBy;
  readonly filters?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListTagsForResource {
  readonly resourceARN: string;
}

export interface SearchAssociatedTranscripts {
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly botRecommendationId: string;
  readonly searchOrder?: string;
  readonly filters: [];
  readonly maxResults?: number;
  readonly nextIndex?: number;
}

export interface StartBotRecommendation {
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly transcriptSourceSetting: TranscriptSourceSetting;
  readonly encryptionSetting?: EncryptionSetting;
}

export interface StartImport {
  readonly importId: string;
  readonly resourceSpecification: ImportResourceSpecification;
  readonly mergeStrategy: string;
  readonly filePassword?: string;
}

export interface TagResource {
  readonly resourceARN: string;
  readonly tags: {[key: string]: any};
}

export interface UntagResource {
  readonly resourceARN: string;
  readonly tagKeys: [];
}

export interface UpdateBot {
  readonly botId: string;
  readonly botName: string;
  readonly description?: string;
  readonly roleArn: string;
  readonly dataPrivacy: DataPrivacy;
  readonly idleSessionTTLInSeconds: number;
}

export interface UpdateBotAlias {
  readonly botAliasId: string;
  readonly botAliasName: string;
  readonly description?: string;
  readonly botVersion?: string;
  readonly botAliasLocaleSettings?: {[key: string]: any};
  readonly conversationLogSettings?: ConversationLogSettings;
  readonly sentimentAnalysisSettings?: SentimentAnalysisSettings;
  readonly botId: string;
}

export interface UpdateBotLocale {
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly description?: string;
  readonly nluIntentConfidenceThreshold: unknown;
  readonly voiceSettings?: VoiceSettings;
}

export interface UpdateBotRecommendation {
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly botRecommendationId: string;
  readonly encryptionSetting: EncryptionSetting;
}

export interface UpdateExport {
  readonly exportId: string;
  readonly filePassword?: string;
}

export interface UpdateIntent {
  readonly intentId: string;
  readonly intentName: string;
  readonly description?: string;
  readonly parentIntentSignature?: string;
  readonly sampleUtterances?: [];
  readonly dialogCodeHook?: DialogCodeHookSettings;
  readonly fulfillmentCodeHook?: FulfillmentCodeHookSettings;
  readonly slotPriorities?: [];
  readonly intentConfirmationSetting?: IntentConfirmationSetting;
  readonly intentClosingSetting?: IntentClosingSetting;
  readonly inputContexts?: [];
  readonly outputContexts?: [];
  readonly kendraConfiguration?: KendraConfiguration;
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
}

export interface UpdateResourcePolicy {
  readonly resourceArn: string;
  readonly policy: string;
  readonly expectedRevisionId?: string;
}

export interface UpdateSlot {
  readonly slotId: string;
  readonly slotName: string;
  readonly description?: string;
  readonly slotTypeId: string;
  readonly valueElicitationSetting: SlotValueElicitationSetting;
  readonly obfuscationSetting?: ObfuscationSetting;
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly intentId: string;
  readonly multipleValuesSetting?: MultipleValuesSetting;
}

export interface UpdateSlotType {
  readonly slotTypeId: string;
  readonly slotTypeName: string;
  readonly description?: string;
  readonly slotTypeValues?: [];
  readonly valueSelectionSetting?: SlotValueSelectionSetting;
  readonly parentSlotTypeSignature?: string;
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly externalSourceSetting?: ExternalSourceSetting;
}

export interface AggregatedUtterancesFilter {
  readonly name: string;
  readonly values: [];
  readonly operator: string;
}

export interface AggregatedUtterancesSortBy {
  readonly attribute: string;
  readonly order: string;
}

export interface AggregatedUtterancesSummary {
  readonly utterance?: string;
  readonly hitCount?: number;
  readonly missedCount?: number;
  readonly utteranceFirstRecordedInAggregationDuration?: Date;
  readonly utteranceLastRecordedInAggregationDuration?: Date;
  readonly containsDataFromDeletedResources?: boolean;
}

export interface AssociatedTranscript {
  readonly transcript?: string;
}

export interface AssociatedTranscriptFilter {
  readonly name: string;
  readonly values: [];
}

export interface AudioLogDestination {
  readonly s3Bucket: S3BucketLogDestination;
}

export interface AudioLogSetting {
  readonly enabled: boolean;
  readonly destination: AudioLogDestination;
}

export interface BotAliasHistoryEvent {
  readonly botVersion?: string;
  readonly startDate?: Date;
  readonly endDate?: Date;
}

export interface BotAliasLocaleSettings {
  readonly enabled: boolean;
  readonly codeHookSpecification?: CodeHookSpecification;
}

export interface BotAliasSummary {
  readonly botAliasId?: string;
  readonly botAliasName?: string;
  readonly description?: string;
  readonly botVersion?: string;
  readonly botAliasStatus?: string;
  readonly creationDateTime?: Date;
  readonly lastUpdatedDateTime?: Date;
}

export interface BotExportSpecification {
  readonly botId: string;
  readonly botVersion: string;
}

export interface BotFilter {
  readonly name: string;
  readonly values: [];
  readonly operator: string;
}

export interface BotImportSpecification {
  readonly botName: string;
  readonly roleArn: string;
  readonly dataPrivacy: DataPrivacy;
  readonly idleSessionTTLInSeconds?: number;
  readonly botTags?: {[key: string]: any};
  readonly testBotAliasTags?: {[key: string]: any};
}

export interface BotLocaleExportSpecification {
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
}

export interface BotLocaleFilter {
  readonly name: string;
  readonly values: [];
  readonly operator: string;
}

export interface BotLocaleHistoryEvent {
  readonly event: string;
  readonly eventDate: Date;
}

export interface BotLocaleImportSpecification {
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly nluIntentConfidenceThreshold?: unknown;
  readonly voiceSettings?: VoiceSettings;
}

export interface BotLocaleSortBy {
  readonly attribute: string;
  readonly order: string;
}

export interface BotLocaleSummary {
  readonly localeId?: string;
  readonly localeName?: string;
  readonly description?: string;
  readonly botLocaleStatus?: string;
  readonly lastUpdatedDateTime?: Date;
  readonly lastBuildSubmittedDateTime?: Date;
}

export interface BotRecommendationResultStatistics {
  readonly intents?: IntentStatistics;
  readonly slotTypes?: SlotTypeStatistics;
}

export interface BotRecommendationResults {
  readonly botLocaleExportUrl?: string;
  readonly associatedTranscriptsUrl?: string;
  readonly statistics?: BotRecommendationResultStatistics;
}

export interface BotRecommendationSummary {
  readonly botRecommendationStatus: string;
  readonly botRecommendationId: string;
  readonly creationDateTime?: Date;
  readonly lastUpdatedDateTime?: Date;
}

export interface BotSortBy {
  readonly attribute: string;
  readonly order: string;
}

export interface BotSummary {
  readonly botId?: string;
  readonly botName?: string;
  readonly description?: string;
  readonly botStatus?: string;
  readonly latestBotVersion?: string;
  readonly lastUpdatedDateTime?: Date;
}

export interface BotVersionLocaleDetails {
  readonly sourceBotVersion: string;
}

export interface BotVersionSortBy {
  readonly attribute: string;
  readonly order: string;
}

export interface BotVersionSummary {
  readonly botName?: string;
  readonly botVersion?: string;
  readonly description?: string;
  readonly botStatus?: string;
  readonly creationDateTime?: Date;
}

export interface BuildBotLocaleRequest {
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
}

export interface BuildBotLocaleResponse {
  readonly botId?: string;
  readonly botVersion?: string;
  readonly localeId?: string;
  readonly botLocaleStatus?: string;
  readonly lastBuildSubmittedDateTime?: Date;
}

export interface BuiltInIntentSortBy {
  readonly attribute: string;
  readonly order: string;
}

export interface BuiltInIntentSummary {
  readonly intentSignature?: string;
  readonly description?: string;
}

export interface BuiltInSlotTypeSortBy {
  readonly attribute: string;
  readonly order: string;
}

export interface BuiltInSlotTypeSummary {
  readonly slotTypeSignature?: string;
  readonly description?: string;
}

export interface Button {
  readonly text: string;
  readonly value: string;
}

export interface CloudWatchLogGroupLogDestination {
  readonly cloudWatchLogGroupArn: string;
  readonly logPrefix: string;
}

export interface CodeHookSpecification {
  readonly lambdaCodeHook: LambdaCodeHook;
}

export interface ConflictException {
  readonly message?: string;
}

export interface ConversationLogSettings {
  readonly textLogSettings?: [];
  readonly audioLogSettings?: [];
}

export interface CreateBotAliasRequest {
  readonly botAliasName: string;
  readonly description?: string;
  readonly botVersion?: string;
  readonly botAliasLocaleSettings?: {[key: string]: any};
  readonly conversationLogSettings?: ConversationLogSettings;
  readonly sentimentAnalysisSettings?: SentimentAnalysisSettings;
  readonly botId: string;
  readonly tags?: {[key: string]: any};
}

export interface CreateBotAliasResponse {
  readonly botAliasId?: string;
  readonly botAliasName?: string;
  readonly description?: string;
  readonly botVersion?: string;
  readonly botAliasLocaleSettings?: {[key: string]: any};
  readonly conversationLogSettings?: ConversationLogSettings;
  readonly sentimentAnalysisSettings?: SentimentAnalysisSettings;
  readonly botAliasStatus?: string;
  readonly botId?: string;
  readonly creationDateTime?: Date;
  readonly tags?: {[key: string]: any};
}

export interface CreateBotLocaleRequest {
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly description?: string;
  readonly nluIntentConfidenceThreshold: unknown;
  readonly voiceSettings?: VoiceSettings;
}

export interface CreateBotLocaleResponse {
  readonly botId?: string;
  readonly botVersion?: string;
  readonly localeName?: string;
  readonly localeId?: string;
  readonly description?: string;
  readonly nluIntentConfidenceThreshold?: unknown;
  readonly voiceSettings?: VoiceSettings;
  readonly botLocaleStatus?: string;
  readonly creationDateTime?: Date;
}

export interface CreateBotRequest {
  readonly botName: string;
  readonly description?: string;
  readonly roleArn: string;
  readonly dataPrivacy: DataPrivacy;
  readonly idleSessionTTLInSeconds: number;
  readonly botTags?: {[key: string]: any};
  readonly testBotAliasTags?: {[key: string]: any};
}

export interface CreateBotResponse {
  readonly botId?: string;
  readonly botName?: string;
  readonly description?: string;
  readonly roleArn?: string;
  readonly dataPrivacy?: DataPrivacy;
  readonly idleSessionTTLInSeconds?: number;
  readonly botStatus?: string;
  readonly creationDateTime?: Date;
  readonly botTags?: {[key: string]: any};
  readonly testBotAliasTags?: {[key: string]: any};
}

export interface CreateBotVersionRequest {
  readonly botId: string;
  readonly description?: string;
  readonly botVersionLocaleSpecification: {[key: string]: any};
}

export interface CreateBotVersionResponse {
  readonly botId?: string;
  readonly description?: string;
  readonly botVersion?: string;
  readonly botVersionLocaleSpecification?: {[key: string]: any};
  readonly botStatus?: string;
  readonly creationDateTime?: Date;
}

export interface CreateExportRequest {
  readonly resourceSpecification: ExportResourceSpecification;
  readonly fileFormat: string;
  readonly filePassword?: string;
}

export interface CreateExportResponse {
  readonly exportId?: string;
  readonly resourceSpecification?: ExportResourceSpecification;
  readonly fileFormat?: string;
  readonly exportStatus?: string;
  readonly creationDateTime?: Date;
}

export interface CreateIntentRequest {
  readonly intentName: string;
  readonly description?: string;
  readonly parentIntentSignature?: string;
  readonly sampleUtterances?: [];
  readonly dialogCodeHook?: DialogCodeHookSettings;
  readonly fulfillmentCodeHook?: FulfillmentCodeHookSettings;
  readonly intentConfirmationSetting?: IntentConfirmationSetting;
  readonly intentClosingSetting?: IntentClosingSetting;
  readonly inputContexts?: [];
  readonly outputContexts?: [];
  readonly kendraConfiguration?: KendraConfiguration;
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
}

export interface CreateIntentResponse {
  readonly intentId?: string;
  readonly intentName?: string;
  readonly description?: string;
  readonly parentIntentSignature?: string;
  readonly sampleUtterances?: [];
  readonly dialogCodeHook?: DialogCodeHookSettings;
  readonly fulfillmentCodeHook?: FulfillmentCodeHookSettings;
  readonly intentConfirmationSetting?: IntentConfirmationSetting;
  readonly intentClosingSetting?: IntentClosingSetting;
  readonly inputContexts?: [];
  readonly outputContexts?: [];
  readonly kendraConfiguration?: KendraConfiguration;
  readonly botId?: string;
  readonly botVersion?: string;
  readonly localeId?: string;
  readonly creationDateTime?: Date;
}

export interface CreateResourcePolicyRequest {
  readonly resourceArn: string;
  readonly policy: string;
}

export interface CreateResourcePolicyResponse {
  readonly resourceArn?: string;
  readonly revisionId?: string;
}

export interface CreateResourcePolicyStatementRequest {
  readonly resourceArn: string;
  readonly statementId: string;
  readonly effect: string;
  readonly principal: [];
  readonly action: [];
  readonly condition?: {[key: string]: any};
  readonly expectedRevisionId?: string;
}

export interface CreateResourcePolicyStatementResponse {
  readonly resourceArn?: string;
  readonly revisionId?: string;
}

export interface CreateSlotRequest {
  readonly slotName: string;
  readonly description?: string;
  readonly slotTypeId: string;
  readonly valueElicitationSetting: SlotValueElicitationSetting;
  readonly obfuscationSetting?: ObfuscationSetting;
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly intentId: string;
  readonly multipleValuesSetting?: MultipleValuesSetting;
}

export interface CreateSlotResponse {
  readonly slotId?: string;
  readonly slotName?: string;
  readonly description?: string;
  readonly slotTypeId?: string;
  readonly valueElicitationSetting?: SlotValueElicitationSetting;
  readonly obfuscationSetting?: ObfuscationSetting;
  readonly botId?: string;
  readonly botVersion?: string;
  readonly localeId?: string;
  readonly intentId?: string;
  readonly creationDateTime?: Date;
  readonly multipleValuesSetting?: MultipleValuesSetting;
}

export interface CreateSlotTypeRequest {
  readonly slotTypeName: string;
  readonly description?: string;
  readonly slotTypeValues?: [];
  readonly valueSelectionSetting?: SlotValueSelectionSetting;
  readonly parentSlotTypeSignature?: string;
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly externalSourceSetting?: ExternalSourceSetting;
}

export interface CreateSlotTypeResponse {
  readonly slotTypeId?: string;
  readonly slotTypeName?: string;
  readonly description?: string;
  readonly slotTypeValues?: [];
  readonly valueSelectionSetting?: SlotValueSelectionSetting;
  readonly parentSlotTypeSignature?: string;
  readonly botId?: string;
  readonly botVersion?: string;
  readonly localeId?: string;
  readonly creationDateTime?: Date;
  readonly externalSourceSetting?: ExternalSourceSetting;
}

export interface CreateUploadUrlRequest {
}

export interface CreateUploadUrlResponse {
  readonly importId?: string;
  readonly uploadUrl?: string;
}

export interface CustomPayload {
  readonly value: string;
}

export interface DataPrivacy {
  readonly childDirected: boolean;
}

export interface DateRangeFilter {
  readonly startDateTime: Date;
  readonly endDateTime: Date;
}

export interface DeleteBotAliasRequest {
  readonly botAliasId: string;
  readonly botId: string;
  readonly skipResourceInUseCheck?: boolean;
}

export interface DeleteBotAliasResponse {
  readonly botAliasId?: string;
  readonly botId?: string;
  readonly botAliasStatus?: string;
}

export interface DeleteBotLocaleRequest {
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
}

export interface DeleteBotLocaleResponse {
  readonly botId?: string;
  readonly botVersion?: string;
  readonly localeId?: string;
  readonly botLocaleStatus?: string;
}

export interface DeleteBotRequest {
  readonly botId: string;
  readonly skipResourceInUseCheck?: boolean;
}

export interface DeleteBotResponse {
  readonly botId?: string;
  readonly botStatus?: string;
}

export interface DeleteBotVersionRequest {
  readonly botId: string;
  readonly botVersion: string;
  readonly skipResourceInUseCheck?: boolean;
}

export interface DeleteBotVersionResponse {
  readonly botId?: string;
  readonly botVersion?: string;
  readonly botStatus?: string;
}

export interface DeleteExportRequest {
  readonly exportId: string;
}

export interface DeleteExportResponse {
  readonly exportId?: string;
  readonly exportStatus?: string;
}

export interface DeleteImportRequest {
  readonly importId: string;
}

export interface DeleteImportResponse {
  readonly importId?: string;
  readonly importStatus?: string;
}

export interface DeleteIntentRequest {
  readonly intentId: string;
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
}

export interface DeleteResourcePolicyRequest {
  readonly resourceArn: string;
  readonly expectedRevisionId?: string;
}

export interface DeleteResourcePolicyResponse {
  readonly resourceArn?: string;
  readonly revisionId?: string;
}

export interface DeleteResourcePolicyStatementRequest {
  readonly resourceArn: string;
  readonly statementId: string;
  readonly expectedRevisionId?: string;
}

export interface DeleteResourcePolicyStatementResponse {
  readonly resourceArn?: string;
  readonly revisionId?: string;
}

export interface DeleteSlotRequest {
  readonly slotId: string;
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly intentId: string;
}

export interface DeleteSlotTypeRequest {
  readonly slotTypeId: string;
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly skipResourceInUseCheck?: boolean;
}

export interface DeleteUtterancesRequest {
  readonly botId: string;
  readonly localeId?: string;
  readonly sessionId?: string;
}

export interface DeleteUtterancesResponse {
}

export interface DescribeBotAliasRequest {
  readonly botAliasId: string;
  readonly botId: string;
}

export interface DescribeBotAliasResponse {
  readonly botAliasId?: string;
  readonly botAliasName?: string;
  readonly description?: string;
  readonly botVersion?: string;
  readonly botAliasLocaleSettings?: {[key: string]: any};
  readonly conversationLogSettings?: ConversationLogSettings;
  readonly sentimentAnalysisSettings?: SentimentAnalysisSettings;
  readonly botAliasHistoryEvents?: [];
  readonly botAliasStatus?: string;
  readonly botId?: string;
  readonly creationDateTime?: Date;
  readonly lastUpdatedDateTime?: Date;
}

export interface DescribeBotLocaleRequest {
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
}

export interface DescribeBotLocaleResponse {
  readonly botId?: string;
  readonly botVersion?: string;
  readonly localeId?: string;
  readonly localeName?: string;
  readonly description?: string;
  readonly nluIntentConfidenceThreshold?: unknown;
  readonly voiceSettings?: VoiceSettings;
  readonly intentsCount?: number;
  readonly slotTypesCount?: number;
  readonly botLocaleStatus?: string;
  readonly failureReasons?: [];
  readonly creationDateTime?: Date;
  readonly lastUpdatedDateTime?: Date;
  readonly lastBuildSubmittedDateTime?: Date;
  readonly botLocaleHistoryEvents?: [];
  readonly recommendedActions?: [];
}

export interface DescribeBotRecommendationRequest {
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly botRecommendationId: string;
}

export interface DescribeBotRecommendationResponse {
  readonly botId?: string;
  readonly botVersion?: string;
  readonly localeId?: string;
  readonly botRecommendationStatus?: string;
  readonly botRecommendationId?: string;
  readonly failureReasons?: [];
  readonly creationDateTime?: Date;
  readonly lastUpdatedDateTime?: Date;
  readonly transcriptSourceSetting?: TranscriptSourceSetting;
  readonly encryptionSetting?: EncryptionSetting;
  readonly botRecommendationResults?: BotRecommendationResults;
}

export interface DescribeBotRequest {
  readonly botId: string;
}

export interface DescribeBotResponse {
  readonly botId?: string;
  readonly botName?: string;
  readonly description?: string;
  readonly roleArn?: string;
  readonly dataPrivacy?: DataPrivacy;
  readonly idleSessionTTLInSeconds?: number;
  readonly botStatus?: string;
  readonly creationDateTime?: Date;
  readonly lastUpdatedDateTime?: Date;
}

export interface DescribeBotVersionRequest {
  readonly botId: string;
  readonly botVersion: string;
}

export interface DescribeBotVersionResponse {
  readonly botId?: string;
  readonly botName?: string;
  readonly botVersion?: string;
  readonly description?: string;
  readonly roleArn?: string;
  readonly dataPrivacy?: DataPrivacy;
  readonly idleSessionTTLInSeconds?: number;
  readonly botStatus?: string;
  readonly failureReasons?: [];
  readonly creationDateTime?: Date;
}

export interface DescribeExportRequest {
  readonly exportId: string;
}

export interface DescribeExportResponse {
  readonly exportId?: string;
  readonly resourceSpecification?: ExportResourceSpecification;
  readonly fileFormat?: string;
  readonly exportStatus?: string;
  readonly failureReasons?: [];
  readonly downloadUrl?: string;
  readonly creationDateTime?: Date;
  readonly lastUpdatedDateTime?: Date;
}

export interface DescribeImportRequest {
  readonly importId: string;
}

export interface DescribeImportResponse {
  readonly importId?: string;
  readonly resourceSpecification?: ImportResourceSpecification;
  readonly importedResourceId?: string;
  readonly importedResourceName?: string;
  readonly mergeStrategy?: string;
  readonly importStatus?: string;
  readonly failureReasons?: [];
  readonly creationDateTime?: Date;
  readonly lastUpdatedDateTime?: Date;
}

export interface DescribeIntentRequest {
  readonly intentId: string;
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
}

export interface DescribeIntentResponse {
  readonly intentId?: string;
  readonly intentName?: string;
  readonly description?: string;
  readonly parentIntentSignature?: string;
  readonly sampleUtterances?: [];
  readonly dialogCodeHook?: DialogCodeHookSettings;
  readonly fulfillmentCodeHook?: FulfillmentCodeHookSettings;
  readonly slotPriorities?: [];
  readonly intentConfirmationSetting?: IntentConfirmationSetting;
  readonly intentClosingSetting?: IntentClosingSetting;
  readonly inputContexts?: [];
  readonly outputContexts?: [];
  readonly kendraConfiguration?: KendraConfiguration;
  readonly botId?: string;
  readonly botVersion?: string;
  readonly localeId?: string;
  readonly creationDateTime?: Date;
  readonly lastUpdatedDateTime?: Date;
}

export interface DescribeResourcePolicyRequest {
  readonly resourceArn: string;
}

export interface DescribeResourcePolicyResponse {
  readonly resourceArn?: string;
  readonly policy?: string;
  readonly revisionId?: string;
}

export interface DescribeSlotRequest {
  readonly slotId: string;
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly intentId: string;
}

export interface DescribeSlotResponse {
  readonly slotId?: string;
  readonly slotName?: string;
  readonly description?: string;
  readonly slotTypeId?: string;
  readonly valueElicitationSetting?: SlotValueElicitationSetting;
  readonly obfuscationSetting?: ObfuscationSetting;
  readonly botId?: string;
  readonly botVersion?: string;
  readonly localeId?: string;
  readonly intentId?: string;
  readonly creationDateTime?: Date;
  readonly lastUpdatedDateTime?: Date;
  readonly multipleValuesSetting?: MultipleValuesSetting;
}

export interface DescribeSlotTypeRequest {
  readonly slotTypeId: string;
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
}

export interface DescribeSlotTypeResponse {
  readonly slotTypeId?: string;
  readonly slotTypeName?: string;
  readonly description?: string;
  readonly slotTypeValues?: [];
  readonly valueSelectionSetting?: SlotValueSelectionSetting;
  readonly parentSlotTypeSignature?: string;
  readonly botId?: string;
  readonly botVersion?: string;
  readonly localeId?: string;
  readonly creationDateTime?: Date;
  readonly lastUpdatedDateTime?: Date;
  readonly externalSourceSetting?: ExternalSourceSetting;
}

export interface DialogCodeHookSettings {
  readonly enabled: boolean;
}

export interface EncryptionSetting {
  readonly kmsKeyArn?: string;
  readonly botLocaleExportPassword?: string;
  readonly associatedTranscriptsPassword?: string;
}

export interface ExportFilter {
  readonly name: string;
  readonly values: [];
  readonly operator: string;
}

export interface ExportResourceSpecification {
  readonly botExportSpecification?: BotExportSpecification;
  readonly botLocaleExportSpecification?: BotLocaleExportSpecification;
}

export interface ExportSortBy {
  readonly attribute: string;
  readonly order: string;
}

export interface ExportSummary {
  readonly exportId?: string;
  readonly resourceSpecification?: ExportResourceSpecification;
  readonly fileFormat?: string;
  readonly exportStatus?: string;
  readonly creationDateTime?: Date;
  readonly lastUpdatedDateTime?: Date;
}

export interface ExternalSourceSetting {
  readonly grammarSlotTypeSetting?: GrammarSlotTypeSetting;
}

export interface FulfillmentCodeHookSettings {
  readonly enabled: boolean;
  readonly postFulfillmentStatusSpecification?: PostFulfillmentStatusSpecification;
  readonly fulfillmentUpdatesSpecification?: FulfillmentUpdatesSpecification;
}

export interface FulfillmentStartResponseSpecification {
  readonly delayInSeconds: number;
  readonly messageGroups: [];
  readonly allowInterrupt?: boolean;
}

export interface FulfillmentUpdateResponseSpecification {
  readonly frequencyInSeconds: number;
  readonly messageGroups: [];
  readonly allowInterrupt?: boolean;
}

export interface FulfillmentUpdatesSpecification {
  readonly active: boolean;
  readonly startResponse?: FulfillmentStartResponseSpecification;
  readonly updateResponse?: FulfillmentUpdateResponseSpecification;
  readonly timeoutInSeconds?: number;
}

export interface GrammarSlotTypeSetting {
  readonly source?: GrammarSlotTypeSource;
}

export interface GrammarSlotTypeSource {
  readonly s3BucketName: string;
  readonly s3ObjectKey: string;
  readonly kmsKeyArn?: string;
}

export interface ImageResponseCard {
  readonly title: string;
  readonly subtitle?: string;
  readonly imageUrl?: string;
  readonly buttons?: [];
}

export interface ImportFilter {
  readonly name: string;
  readonly values: [];
  readonly operator: string;
}

export interface ImportResourceSpecification {
  readonly botImportSpecification?: BotImportSpecification;
  readonly botLocaleImportSpecification?: BotLocaleImportSpecification;
}

export interface ImportSortBy {
  readonly attribute: string;
  readonly order: string;
}

export interface ImportSummary {
  readonly importId?: string;
  readonly importedResourceId?: string;
  readonly importedResourceName?: string;
  readonly importStatus?: string;
  readonly mergeStrategy?: string;
  readonly creationDateTime?: Date;
  readonly lastUpdatedDateTime?: Date;
}

export interface InputContext {
  readonly name: string;
}

export interface IntentClosingSetting {
  readonly closingResponse: ResponseSpecification;
  readonly active?: boolean;
}

export interface IntentConfirmationSetting {
  readonly promptSpecification: PromptSpecification;
  readonly declinationResponse: ResponseSpecification;
  readonly active?: boolean;
}

export interface IntentFilter {
  readonly name: string;
  readonly values: [];
  readonly operator: string;
}

export interface IntentSortBy {
  readonly attribute: string;
  readonly order: string;
}

export interface IntentStatistics {
  readonly discoveredIntentCount?: number;
}

export interface IntentSummary {
  readonly intentId?: string;
  readonly intentName?: string;
  readonly description?: string;
  readonly parentIntentSignature?: string;
  readonly inputContexts?: [];
  readonly outputContexts?: [];
  readonly lastUpdatedDateTime?: Date;
}

export interface InternalServerException {
  readonly message?: string;
}

export interface KendraConfiguration {
  readonly kendraIndex: string;
  readonly queryFilterStringEnabled?: boolean;
  readonly queryFilterString?: string;
}

export interface LambdaCodeHook {
  readonly lambdaARN: string;
  readonly codeHookInterfaceVersion: string;
}

export interface LexTranscriptFilter {
  readonly dateRangeFilter?: DateRangeFilter;
}

export interface ListAggregatedUtterancesRequest {
  readonly botId: string;
  readonly botAliasId?: string;
  readonly botVersion?: string;
  readonly localeId: string;
  readonly aggregationDuration: UtteranceAggregationDuration;
  readonly sortBy?: AggregatedUtterancesSortBy;
  readonly filters?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListAggregatedUtterancesResponse {
  readonly botId?: string;
  readonly botAliasId?: string;
  readonly botVersion?: string;
  readonly localeId?: string;
  readonly aggregationDuration?: UtteranceAggregationDuration;
  readonly aggregationWindowStartTime?: Date;
  readonly aggregationWindowEndTime?: Date;
  readonly aggregationLastRefreshedDateTime?: Date;
  readonly aggregatedUtterancesSummaries?: [];
  readonly nextToken?: string;
}

export interface ListBotAliasesRequest {
  readonly botId: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListBotAliasesResponse {
  readonly botAliasSummaries?: [];
  readonly nextToken?: string;
  readonly botId?: string;
}

export interface ListBotLocalesRequest {
  readonly botId: string;
  readonly botVersion: string;
  readonly sortBy?: BotLocaleSortBy;
  readonly filters?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListBotLocalesResponse {
  readonly botId?: string;
  readonly botVersion?: string;
  readonly nextToken?: string;
  readonly botLocaleSummaries?: [];
}

export interface ListBotRecommendationsRequest {
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListBotRecommendationsResponse {
  readonly botId?: string;
  readonly botVersion?: string;
  readonly localeId?: string;
  readonly botRecommendationSummaries?: [];
  readonly nextToken?: string;
}

export interface ListBotVersionsRequest {
  readonly botId: string;
  readonly sortBy?: BotVersionSortBy;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListBotVersionsResponse {
  readonly botId?: string;
  readonly botVersionSummaries?: [];
  readonly nextToken?: string;
}

export interface ListBotsRequest {
  readonly sortBy?: BotSortBy;
  readonly filters?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListBotsResponse {
  readonly botSummaries?: [];
  readonly nextToken?: string;
}

export interface ListBuiltInIntentsRequest {
  readonly localeId: string;
  readonly sortBy?: BuiltInIntentSortBy;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListBuiltInIntentsResponse {
  readonly builtInIntentSummaries?: [];
  readonly nextToken?: string;
  readonly localeId?: string;
}

export interface ListBuiltInSlotTypesRequest {
  readonly localeId: string;
  readonly sortBy?: BuiltInSlotTypeSortBy;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListBuiltInSlotTypesResponse {
  readonly builtInSlotTypeSummaries?: [];
  readonly nextToken?: string;
  readonly localeId?: string;
}

export interface ListExportsRequest {
  readonly botId?: string;
  readonly botVersion?: string;
  readonly sortBy?: ExportSortBy;
  readonly filters?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListExportsResponse {
  readonly botId?: string;
  readonly botVersion?: string;
  readonly exportSummaries?: [];
  readonly nextToken?: string;
}

export interface ListImportsRequest {
  readonly botId?: string;
  readonly botVersion?: string;
  readonly sortBy?: ImportSortBy;
  readonly filters?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListImportsResponse {
  readonly botId?: string;
  readonly botVersion?: string;
  readonly importSummaries?: [];
  readonly nextToken?: string;
}

export interface ListIntentsRequest {
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly sortBy?: IntentSortBy;
  readonly filters?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListIntentsResponse {
  readonly botId?: string;
  readonly botVersion?: string;
  readonly localeId?: string;
  readonly intentSummaries?: [];
  readonly nextToken?: string;
}

export interface ListRecommendedIntentsRequest {
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly botRecommendationId: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListRecommendedIntentsResponse {
  readonly botId?: string;
  readonly botVersion?: string;
  readonly localeId?: string;
  readonly botRecommendationId?: string;
  readonly summaryList?: [];
  readonly nextToken?: string;
}

export interface ListSlotTypesRequest {
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly sortBy?: SlotTypeSortBy;
  readonly filters?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListSlotTypesResponse {
  readonly botId?: string;
  readonly botVersion?: string;
  readonly localeId?: string;
  readonly slotTypeSummaries?: [];
  readonly nextToken?: string;
}

export interface ListSlotsRequest {
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly intentId: string;
  readonly sortBy?: SlotSortBy;
  readonly filters?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListSlotsResponse {
  readonly botId?: string;
  readonly botVersion?: string;
  readonly localeId?: string;
  readonly intentId?: string;
  readonly slotSummaries?: [];
  readonly nextToken?: string;
}

export interface ListTagsForResourceRequest {
  readonly resourceARN: string;
}

export interface ListTagsForResourceResponse {
  readonly tags?: {[key: string]: any};
}

export interface Message {
  readonly plainTextMessage?: PlainTextMessage;
  readonly customPayload?: CustomPayload;
  readonly ssmlMessage?: SSMLMessage;
  readonly imageResponseCard?: ImageResponseCard;
}

export interface MessageGroup {
  readonly message: Message;
  readonly variations?: [];
}

export interface MultipleValuesSetting {
  readonly allowMultipleValues?: boolean;
}

export interface ObfuscationSetting {
  readonly obfuscationSettingType: string;
}

export interface OutputContext {
  readonly name: string;
  readonly timeToLiveInSeconds: number;
  readonly turnsToLive: number;
}

export interface PathFormat {
  readonly objectPrefixes?: [];
}

export interface PlainTextMessage {
  readonly value: string;
}

export interface PostFulfillmentStatusSpecification {
  readonly successResponse?: ResponseSpecification;
  readonly failureResponse?: ResponseSpecification;
  readonly timeoutResponse?: ResponseSpecification;
}

export interface PreconditionFailedException {
  readonly message?: string;
}

export interface Principal {
  readonly service?: string;
  readonly arn?: string;
}

export interface PromptSpecification {
  readonly messageGroups: [];
  readonly maxRetries: number;
  readonly allowInterrupt?: boolean;
}

export interface RecommendedIntentSummary {
  readonly intentId?: string;
  readonly intentName?: string;
  readonly sampleUtterancesCount?: number;
}

export interface RelativeAggregationDuration {
  readonly timeDimension: string;
  readonly timeValue: number;
}

export interface ResourceNotFoundException {
  readonly message?: string;
}

export interface ResponseSpecification {
  readonly messageGroups: [];
  readonly allowInterrupt?: boolean;
}

export interface S3BucketLogDestination {
  readonly kmsKeyArn?: string;
  readonly s3BucketArn: string;
  readonly logPrefix: string;
}

export interface S3BucketTranscriptSource {
  readonly s3BucketName: string;
  readonly pathFormat?: PathFormat;
  readonly transcriptFormat: string;
  readonly transcriptFilter?: TranscriptFilter;
  readonly kmsKeyArn?: string;
}

export interface SSMLMessage {
  readonly value: string;
}

export interface SampleUtterance {
  readonly utterance: string;
}

export interface SampleValue {
  readonly value: string;
}

export interface SearchAssociatedTranscriptsRequest {
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly botRecommendationId: string;
  readonly searchOrder?: string;
  readonly filters: [];
  readonly maxResults?: number;
  readonly nextIndex?: number;
}

export interface SearchAssociatedTranscriptsResponse {
  readonly botId?: string;
  readonly botVersion?: string;
  readonly localeId?: string;
  readonly botRecommendationId?: string;
  readonly nextIndex?: number;
  readonly associatedTranscripts?: [];
  readonly totalResults?: number;
}

export interface SentimentAnalysisSettings {
  readonly detectSentiment: boolean;
}

export interface ServiceQuotaExceededException {
  readonly message?: string;
}

export interface SlotDefaultValue {
  readonly defaultValue: string;
}

export interface SlotDefaultValueSpecification {
  readonly defaultValueList: [];
}

export interface SlotFilter {
  readonly name: string;
  readonly values: [];
  readonly operator: string;
}

export interface SlotPriority {
  readonly priority: number;
  readonly slotId: string;
}

export interface SlotSortBy {
  readonly attribute: string;
  readonly order: string;
}

export interface SlotSummary {
  readonly slotId?: string;
  readonly slotName?: string;
  readonly description?: string;
  readonly slotConstraint?: string;
  readonly slotTypeId?: string;
  readonly valueElicitationPromptSpecification?: PromptSpecification;
  readonly lastUpdatedDateTime?: Date;
}

export interface SlotTypeFilter {
  readonly name: string;
  readonly values: [];
  readonly operator: string;
}

export interface SlotTypeSortBy {
  readonly attribute: string;
  readonly order: string;
}

export interface SlotTypeStatistics {
  readonly discoveredSlotTypeCount?: number;
}

export interface SlotTypeSummary {
  readonly slotTypeId?: string;
  readonly slotTypeName?: string;
  readonly description?: string;
  readonly parentSlotTypeSignature?: string;
  readonly lastUpdatedDateTime?: Date;
  readonly slotTypeCategory?: string;
}

export interface SlotTypeValue {
  readonly sampleValue?: SampleValue;
  readonly synonyms?: [];
}

export interface SlotValueElicitationSetting {
  readonly defaultValueSpecification?: SlotDefaultValueSpecification;
  readonly slotConstraint: string;
  readonly promptSpecification?: PromptSpecification;
  readonly sampleUtterances?: [];
  readonly waitAndContinueSpecification?: WaitAndContinueSpecification;
}

export interface SlotValueRegexFilter {
  readonly pattern: string;
}

export interface SlotValueSelectionSetting {
  readonly resolutionStrategy: string;
  readonly regexFilter?: SlotValueRegexFilter;
}

export interface StartBotRecommendationRequest {
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly transcriptSourceSetting: TranscriptSourceSetting;
  readonly encryptionSetting?: EncryptionSetting;
}

export interface StartBotRecommendationResponse {
  readonly botId?: string;
  readonly botVersion?: string;
  readonly localeId?: string;
  readonly botRecommendationStatus?: string;
  readonly botRecommendationId?: string;
  readonly creationDateTime?: Date;
  readonly transcriptSourceSetting?: TranscriptSourceSetting;
  readonly encryptionSetting?: EncryptionSetting;
}

export interface StartImportRequest {
  readonly importId: string;
  readonly resourceSpecification: ImportResourceSpecification;
  readonly mergeStrategy: string;
  readonly filePassword?: string;
}

export interface StartImportResponse {
  readonly importId?: string;
  readonly resourceSpecification?: ImportResourceSpecification;
  readonly mergeStrategy?: string;
  readonly importStatus?: string;
  readonly creationDateTime?: Date;
}

export interface StillWaitingResponseSpecification {
  readonly messageGroups: [];
  readonly frequencyInSeconds: number;
  readonly timeoutInSeconds: number;
  readonly allowInterrupt?: boolean;
}

export interface TagResourceRequest {
  readonly resourceARN: string;
  readonly tags: {[key: string]: any};
}

export interface TagResourceResponse {
}

export interface TextLogDestination {
  readonly cloudWatch: CloudWatchLogGroupLogDestination;
}

export interface TextLogSetting {
  readonly enabled: boolean;
  readonly destination: TextLogDestination;
}

export interface ThrottlingException {
  readonly retryAfterSeconds?: number;
  readonly message?: string;
}

export interface TranscriptFilter {
  readonly lexTranscriptFilter?: LexTranscriptFilter;
}

export interface TranscriptSourceSetting {
  readonly s3BucketTranscriptSource?: S3BucketTranscriptSource;
}

export interface UntagResourceRequest {
  readonly resourceARN: string;
  readonly tagKeys: [];
}

export interface UntagResourceResponse {
}

export interface UpdateBotAliasRequest {
  readonly botAliasId: string;
  readonly botAliasName: string;
  readonly description?: string;
  readonly botVersion?: string;
  readonly botAliasLocaleSettings?: {[key: string]: any};
  readonly conversationLogSettings?: ConversationLogSettings;
  readonly sentimentAnalysisSettings?: SentimentAnalysisSettings;
  readonly botId: string;
}

export interface UpdateBotAliasResponse {
  readonly botAliasId?: string;
  readonly botAliasName?: string;
  readonly description?: string;
  readonly botVersion?: string;
  readonly botAliasLocaleSettings?: {[key: string]: any};
  readonly conversationLogSettings?: ConversationLogSettings;
  readonly sentimentAnalysisSettings?: SentimentAnalysisSettings;
  readonly botAliasStatus?: string;
  readonly botId?: string;
  readonly creationDateTime?: Date;
  readonly lastUpdatedDateTime?: Date;
}

export interface UpdateBotLocaleRequest {
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly description?: string;
  readonly nluIntentConfidenceThreshold: unknown;
  readonly voiceSettings?: VoiceSettings;
}

export interface UpdateBotLocaleResponse {
  readonly botId?: string;
  readonly botVersion?: string;
  readonly localeId?: string;
  readonly localeName?: string;
  readonly description?: string;
  readonly nluIntentConfidenceThreshold?: unknown;
  readonly voiceSettings?: VoiceSettings;
  readonly botLocaleStatus?: string;
  readonly failureReasons?: [];
  readonly creationDateTime?: Date;
  readonly lastUpdatedDateTime?: Date;
  readonly recommendedActions?: [];
}

export interface UpdateBotRecommendationRequest {
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly botRecommendationId: string;
  readonly encryptionSetting: EncryptionSetting;
}

export interface UpdateBotRecommendationResponse {
  readonly botId?: string;
  readonly botVersion?: string;
  readonly localeId?: string;
  readonly botRecommendationStatus?: string;
  readonly botRecommendationId?: string;
  readonly creationDateTime?: Date;
  readonly lastUpdatedDateTime?: Date;
  readonly transcriptSourceSetting?: TranscriptSourceSetting;
  readonly encryptionSetting?: EncryptionSetting;
}

export interface UpdateBotRequest {
  readonly botId: string;
  readonly botName: string;
  readonly description?: string;
  readonly roleArn: string;
  readonly dataPrivacy: DataPrivacy;
  readonly idleSessionTTLInSeconds: number;
}

export interface UpdateBotResponse {
  readonly botId?: string;
  readonly botName?: string;
  readonly description?: string;
  readonly roleArn?: string;
  readonly dataPrivacy?: DataPrivacy;
  readonly idleSessionTTLInSeconds?: number;
  readonly botStatus?: string;
  readonly creationDateTime?: Date;
  readonly lastUpdatedDateTime?: Date;
}

export interface UpdateExportRequest {
  readonly exportId: string;
  readonly filePassword?: string;
}

export interface UpdateExportResponse {
  readonly exportId?: string;
  readonly resourceSpecification?: ExportResourceSpecification;
  readonly fileFormat?: string;
  readonly exportStatus?: string;
  readonly creationDateTime?: Date;
  readonly lastUpdatedDateTime?: Date;
}

export interface UpdateIntentRequest {
  readonly intentId: string;
  readonly intentName: string;
  readonly description?: string;
  readonly parentIntentSignature?: string;
  readonly sampleUtterances?: [];
  readonly dialogCodeHook?: DialogCodeHookSettings;
  readonly fulfillmentCodeHook?: FulfillmentCodeHookSettings;
  readonly slotPriorities?: [];
  readonly intentConfirmationSetting?: IntentConfirmationSetting;
  readonly intentClosingSetting?: IntentClosingSetting;
  readonly inputContexts?: [];
  readonly outputContexts?: [];
  readonly kendraConfiguration?: KendraConfiguration;
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
}

export interface UpdateIntentResponse {
  readonly intentId?: string;
  readonly intentName?: string;
  readonly description?: string;
  readonly parentIntentSignature?: string;
  readonly sampleUtterances?: [];
  readonly dialogCodeHook?: DialogCodeHookSettings;
  readonly fulfillmentCodeHook?: FulfillmentCodeHookSettings;
  readonly slotPriorities?: [];
  readonly intentConfirmationSetting?: IntentConfirmationSetting;
  readonly intentClosingSetting?: IntentClosingSetting;
  readonly inputContexts?: [];
  readonly outputContexts?: [];
  readonly kendraConfiguration?: KendraConfiguration;
  readonly botId?: string;
  readonly botVersion?: string;
  readonly localeId?: string;
  readonly creationDateTime?: Date;
  readonly lastUpdatedDateTime?: Date;
}

export interface UpdateResourcePolicyRequest {
  readonly resourceArn: string;
  readonly policy: string;
  readonly expectedRevisionId?: string;
}

export interface UpdateResourcePolicyResponse {
  readonly resourceArn?: string;
  readonly revisionId?: string;
}

export interface UpdateSlotRequest {
  readonly slotId: string;
  readonly slotName: string;
  readonly description?: string;
  readonly slotTypeId: string;
  readonly valueElicitationSetting: SlotValueElicitationSetting;
  readonly obfuscationSetting?: ObfuscationSetting;
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly intentId: string;
  readonly multipleValuesSetting?: MultipleValuesSetting;
}

export interface UpdateSlotResponse {
  readonly slotId?: string;
  readonly slotName?: string;
  readonly description?: string;
  readonly slotTypeId?: string;
  readonly valueElicitationSetting?: SlotValueElicitationSetting;
  readonly obfuscationSetting?: ObfuscationSetting;
  readonly botId?: string;
  readonly botVersion?: string;
  readonly localeId?: string;
  readonly intentId?: string;
  readonly creationDateTime?: Date;
  readonly lastUpdatedDateTime?: Date;
  readonly multipleValuesSetting?: MultipleValuesSetting;
}

export interface UpdateSlotTypeRequest {
  readonly slotTypeId: string;
  readonly slotTypeName: string;
  readonly description?: string;
  readonly slotTypeValues?: [];
  readonly valueSelectionSetting?: SlotValueSelectionSetting;
  readonly parentSlotTypeSignature?: string;
  readonly botId: string;
  readonly botVersion: string;
  readonly localeId: string;
  readonly externalSourceSetting?: ExternalSourceSetting;
}

export interface UpdateSlotTypeResponse {
  readonly slotTypeId?: string;
  readonly slotTypeName?: string;
  readonly description?: string;
  readonly slotTypeValues?: [];
  readonly valueSelectionSetting?: SlotValueSelectionSetting;
  readonly parentSlotTypeSignature?: string;
  readonly botId?: string;
  readonly botVersion?: string;
  readonly localeId?: string;
  readonly creationDateTime?: Date;
  readonly lastUpdatedDateTime?: Date;
  readonly externalSourceSetting?: ExternalSourceSetting;
}

export interface UtteranceAggregationDuration {
  readonly relativeAggregationDuration: RelativeAggregationDuration;
}

export interface ValidationException {
  readonly message?: string;
}

export interface VoiceSettings {
  readonly voiceId: string;
  readonly engine?: string;
}

export interface WaitAndContinueSpecification {
  readonly waitingResponse: ResponseSpecification;
  readonly continueResponse: ResponseSpecification;
  readonly stillWaitingResponse?: StillWaitingResponseSpecification;
  readonly active?: boolean;
}


