/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CreateCluster {
  readonly ClusterName: string;
  readonly NodeType: string;
  readonly Description?: string;
  readonly ReplicationFactor: number;
  readonly AvailabilityZones?: [];
  readonly SubnetGroupName?: string;
  readonly SecurityGroupIds?: [];
  readonly PreferredMaintenanceWindow?: string;
  readonly NotificationTopicArn?: string;
  readonly IamRoleArn: string;
  readonly ParameterGroupName?: string;
  readonly Tags?: [];
  readonly SSESpecification?: SSESpecification;
  readonly ClusterEndpointEncryptionType?: string;
}
export interface CreateParameterGroup {
  readonly ParameterGroupName: string;
  readonly Description?: string;
}
export interface CreateSubnetGroup {
  readonly SubnetGroupName: string;
  readonly Description?: string;
  readonly SubnetIds: [];
}
export interface DecreaseReplicationFactor {
  readonly ClusterName: string;
  readonly NewReplicationFactor: number;
  readonly AvailabilityZones?: [];
  readonly NodeIdsToRemove?: [];
}
export interface DeleteCluster {
  readonly ClusterName: string;
}
export interface DeleteParameterGroup {
  readonly ParameterGroupName: string;
}
export interface DeleteSubnetGroup {
  readonly SubnetGroupName: string;
}
export interface DescribeClusters {
  readonly ClusterNames?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribeDefaultParameters {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribeEvents {
  readonly SourceName?: string;
  readonly SourceType?: string;
  readonly StartTime?: Date;
  readonly EndTime?: Date;
  readonly Duration?: number;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribeParameterGroups {
  readonly ParameterGroupNames?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribeParameters {
  readonly ParameterGroupName: string;
  readonly Source?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface DescribeSubnetGroups {
  readonly SubnetGroupNames?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface IncreaseReplicationFactor {
  readonly ClusterName: string;
  readonly NewReplicationFactor: number;
  readonly AvailabilityZones?: [];
}
export interface ListTags {
  readonly ResourceName: string;
  readonly NextToken?: string;
}
export interface RebootNode {
  readonly ClusterName: string;
  readonly NodeId: string;
}
export interface TagResource {
  readonly ResourceName: string;
  readonly Tags: [];
}
export interface UntagResource {
  readonly ResourceName: string;
  readonly TagKeys: [];
}
export interface UpdateCluster {
  readonly ClusterName: string;
  readonly Description?: string;
  readonly PreferredMaintenanceWindow?: string;
  readonly NotificationTopicArn?: string;
  readonly NotificationTopicStatus?: string;
  readonly ParameterGroupName?: string;
  readonly SecurityGroupIds?: [];
}
export interface UpdateParameterGroup {
  readonly ParameterGroupName: string;
  readonly ParameterNameValues: [];
}
export interface UpdateSubnetGroup {
  readonly SubnetGroupName: string;
  readonly Description?: string;
  readonly SubnetIds?: [];
}



interface Cluster {
  readonly ClusterName: string;
  readonly Description: string;
  readonly ClusterArn: string;
  readonly TotalNodes: number;
  readonly ActiveNodes: number;
  readonly NodeType: string;
  readonly Status: string;
  readonly ClusterDiscoveryEndpoint: Endpoint;
  readonly NodeIdsToRemove: [];
  readonly Nodes: [];
  readonly PreferredMaintenanceWindow: string;
  readonly NotificationConfiguration: NotificationConfiguration;
  readonly SubnetGroup: string;
  readonly SecurityGroups: [];
  readonly IamRoleArn: string;
  readonly ParameterGroup: ParameterGroupStatus;
  readonly SSEDescription: SSEDescription;
  readonly ClusterEndpointEncryptionType: string;
}

interface ClusterAlreadyExistsFault {
}

interface ClusterNotFoundFault {
}

interface ClusterQuotaForCustomerExceededFault {
}

interface CreateClusterRequest {
  readonly ClusterName: string;
  readonly NodeType: string;
  readonly Description: string;
  readonly ReplicationFactor: number;
  readonly AvailabilityZones: [];
  readonly SubnetGroupName: string;
  readonly SecurityGroupIds: [];
  readonly PreferredMaintenanceWindow: string;
  readonly NotificationTopicArn: string;
  readonly IamRoleArn: string;
  readonly ParameterGroupName: string;
  readonly Tags: [];
  readonly SSESpecification: SSESpecification;
  readonly ClusterEndpointEncryptionType: string;
}

interface CreateClusterResponse {
  readonly Cluster: Cluster;
}

interface CreateParameterGroupRequest {
  readonly ParameterGroupName: string;
  readonly Description: string;
}

interface CreateParameterGroupResponse {
  readonly ParameterGroup: ParameterGroup;
}

interface CreateSubnetGroupRequest {
  readonly SubnetGroupName: string;
  readonly Description: string;
  readonly SubnetIds: [];
}

interface CreateSubnetGroupResponse {
  readonly SubnetGroup: SubnetGroup;
}

interface DecreaseReplicationFactorRequest {
  readonly ClusterName: string;
  readonly NewReplicationFactor: number;
  readonly AvailabilityZones: [];
  readonly NodeIdsToRemove: [];
}

interface DecreaseReplicationFactorResponse {
  readonly Cluster: Cluster;
}

interface DeleteClusterRequest {
  readonly ClusterName: string;
}

interface DeleteClusterResponse {
  readonly Cluster: Cluster;
}

interface DeleteParameterGroupRequest {
  readonly ParameterGroupName: string;
}

interface DeleteParameterGroupResponse {
  readonly DeletionMessage: string;
}

interface DeleteSubnetGroupRequest {
  readonly SubnetGroupName: string;
}

interface DeleteSubnetGroupResponse {
  readonly DeletionMessage: string;
}

interface DescribeClustersRequest {
  readonly ClusterNames: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeClustersResponse {
  readonly NextToken: string;
  readonly Clusters: [];
}

interface DescribeDefaultParametersRequest {
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeDefaultParametersResponse {
  readonly NextToken: string;
  readonly Parameters: [];
}

interface DescribeEventsRequest {
  readonly SourceName: string;
  readonly SourceType: string;
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly Duration: number;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeEventsResponse {
  readonly NextToken: string;
  readonly Events: [];
}

interface DescribeParameterGroupsRequest {
  readonly ParameterGroupNames: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeParameterGroupsResponse {
  readonly NextToken: string;
  readonly ParameterGroups: [];
}

interface DescribeParametersRequest {
  readonly ParameterGroupName: string;
  readonly Source: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeParametersResponse {
  readonly NextToken: string;
  readonly Parameters: [];
}

interface DescribeSubnetGroupsRequest {
  readonly SubnetGroupNames: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeSubnetGroupsResponse {
  readonly NextToken: string;
  readonly SubnetGroups: [];
}

interface Endpoint {
  readonly Address: string;
  readonly Port: number;
  readonly URL: string;
}

interface Event {
  readonly SourceName: string;
  readonly SourceType: string;
  readonly Message: string;
  readonly Date: Date;
}

interface IncreaseReplicationFactorRequest {
  readonly ClusterName: string;
  readonly NewReplicationFactor: number;
  readonly AvailabilityZones: [];
}

interface IncreaseReplicationFactorResponse {
  readonly Cluster: Cluster;
}

interface InsufficientClusterCapacityFault {
}

interface InvalidARNFault {
}

interface InvalidClusterStateFault {
}

interface InvalidParameterCombinationException {
  readonly message: string;
}

interface InvalidParameterGroupStateFault {
}

interface InvalidParameterValueException {
  readonly message: string;
}

interface InvalidSubnet {
}

interface InvalidVPCNetworkStateFault {
}

interface ListTagsRequest {
  readonly ResourceName: string;
  readonly NextToken: string;
}

interface ListTagsResponse {
  readonly Tags: [];
  readonly NextToken: string;
}

interface Node {
  readonly NodeId: string;
  readonly Endpoint: Endpoint;
  readonly NodeCreateTime: Date;
  readonly AvailabilityZone: string;
  readonly NodeStatus: string;
  readonly ParameterGroupStatus: string;
}

interface NodeNotFoundFault {
}

interface NodeQuotaForClusterExceededFault {
}

interface NodeQuotaForCustomerExceededFault {
}

interface NodeTypeSpecificValue {
  readonly NodeType: string;
  readonly Value: string;
}

interface NotificationConfiguration {
  readonly TopicArn: string;
  readonly TopicStatus: string;
}

interface Parameter {
  readonly ParameterName: string;
  readonly ParameterType: string;
  readonly ParameterValue: string;
  readonly NodeTypeSpecificValues: [];
  readonly Description: string;
  readonly Source: string;
  readonly DataType: string;
  readonly AllowedValues: string;
  readonly IsModifiable: string;
  readonly ChangeType: string;
}

interface ParameterGroup {
  readonly ParameterGroupName: string;
  readonly Description: string;
}

interface ParameterGroupAlreadyExistsFault {
}

interface ParameterGroupNotFoundFault {
}

interface ParameterGroupQuotaExceededFault {
}

interface ParameterGroupStatus {
  readonly ParameterGroupName: string;
  readonly ParameterApplyStatus: string;
  readonly NodeIdsToReboot: [];
}

interface ParameterNameValue {
  readonly ParameterName: string;
  readonly ParameterValue: string;
}

interface RebootNodeRequest {
  readonly ClusterName: string;
  readonly NodeId: string;
}

interface RebootNodeResponse {
  readonly Cluster: Cluster;
}

interface SSEDescription {
  readonly Status: string;
}

interface SSESpecification {
  readonly Enabled: boolean;
}

interface SecurityGroupMembership {
  readonly SecurityGroupIdentifier: string;
  readonly Status: string;
}

interface ServiceLinkedRoleNotFoundFault {
}

interface ServiceQuotaExceededException {
}

interface Subnet {
  readonly SubnetIdentifier: string;
  readonly SubnetAvailabilityZone: string;
}

interface SubnetGroup {
  readonly SubnetGroupName: string;
  readonly Description: string;
  readonly VpcId: string;
  readonly Subnets: [];
}

interface SubnetGroupAlreadyExistsFault {
}

interface SubnetGroupInUseFault {
}

interface SubnetGroupNotFoundFault {
}

interface SubnetGroupQuotaExceededFault {
}

interface SubnetInUse {
}

interface SubnetQuotaExceededFault {
}

interface Tag {
  readonly Key: string;
  readonly Value: string;
}

interface TagNotFoundFault {
}

interface TagQuotaPerResourceExceeded {
}

interface TagResourceRequest {
  readonly ResourceName: string;
  readonly Tags: [];
}

interface TagResourceResponse {
  readonly Tags: [];
}

interface UntagResourceRequest {
  readonly ResourceName: string;
  readonly TagKeys: [];
}

interface UntagResourceResponse {
  readonly Tags: [];
}

interface UpdateClusterRequest {
  readonly ClusterName: string;
  readonly Description: string;
  readonly PreferredMaintenanceWindow: string;
  readonly NotificationTopicArn: string;
  readonly NotificationTopicStatus: string;
  readonly ParameterGroupName: string;
  readonly SecurityGroupIds: [];
}

interface UpdateClusterResponse {
  readonly Cluster: Cluster;
}

interface UpdateParameterGroupRequest {
  readonly ParameterGroupName: string;
  readonly ParameterNameValues: [];
}

interface UpdateParameterGroupResponse {
  readonly ParameterGroup: ParameterGroup;
}

interface UpdateSubnetGroupRequest {
  readonly SubnetGroupName: string;
  readonly Description: string;
  readonly SubnetIds: [];
}

interface UpdateSubnetGroupResponse {
  readonly SubnetGroup: SubnetGroup;
}

