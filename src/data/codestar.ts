/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AssociateTeamMember {
  readonly projectId: string;
  readonly clientRequestToken?: string;
  readonly userArn: string;
  readonly projectRole: string;
  readonly remoteAccessAllowed?: boolean;
}

export interface CreateProject {
  readonly name: string;
  readonly id: string;
  readonly description?: string;
  readonly clientRequestToken?: string;
  readonly sourceCode?: [];
  readonly toolchain?: Toolchain;
  readonly tags?: {[key: string]: any};
}

export interface CreateUserProfile {
  readonly userArn: string;
  readonly displayName: string;
  readonly emailAddress: string;
  readonly sshPublicKey?: string;
}

export interface DeleteProject {
  readonly id: string;
  readonly clientRequestToken?: string;
  readonly deleteStack?: boolean;
}

export interface DeleteUserProfile {
  readonly userArn: string;
}

export interface DescribeProject {
  readonly id: string;
}

export interface DescribeUserProfile {
  readonly userArn: string;
}

export interface DisassociateTeamMember {
  readonly projectId: string;
  readonly userArn: string;
}

export interface ListProjects {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListResources {
  readonly projectId: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListTagsForProject {
  readonly id: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListTeamMembers {
  readonly projectId: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListUserProfiles {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface TagProject {
  readonly id: string;
  readonly tags: {[key: string]: any};
}

export interface UntagProject {
  readonly id: string;
  readonly tags: [];
}

export interface UpdateProject {
  readonly id: string;
  readonly name?: string;
  readonly description?: string;
}

export interface UpdateTeamMember {
  readonly projectId: string;
  readonly userArn: string;
  readonly projectRole?: string;
  readonly remoteAccessAllowed?: boolean;
}

export interface UpdateUserProfile {
  readonly userArn: string;
  readonly displayName?: string;
  readonly emailAddress?: string;
  readonly sshPublicKey?: string;
}

export interface AssociateTeamMemberRequest {
  readonly projectId: string;
  readonly clientRequestToken?: string;
  readonly userArn: string;
  readonly projectRole: string;
  readonly remoteAccessAllowed?: boolean;
}

export interface AssociateTeamMemberResult {
  readonly clientRequestToken?: string;
}

export interface Code {
  readonly source: CodeSource;
  readonly destination: CodeDestination;
}

export interface CodeCommitCodeDestination {
  readonly name: string;
}

export interface CodeDestination {
  readonly codeCommit?: CodeCommitCodeDestination;
  readonly gitHub?: GitHubCodeDestination;
}

export interface CodeSource {
  readonly s3: S3Location;
}

export interface ConcurrentModificationException {
}

export interface CreateProjectRequest {
  readonly name: string;
  readonly id: string;
  readonly description?: string;
  readonly clientRequestToken?: string;
  readonly sourceCode?: [];
  readonly toolchain?: Toolchain;
  readonly tags?: {[key: string]: any};
}

export interface CreateProjectResult {
  readonly id: string;
  readonly arn: string;
  readonly clientRequestToken?: string;
  readonly projectTemplateId?: string;
}

export interface CreateUserProfileRequest {
  readonly userArn: string;
  readonly displayName: string;
  readonly emailAddress: string;
  readonly sshPublicKey?: string;
}

export interface CreateUserProfileResult {
  readonly userArn: string;
  readonly displayName?: string;
  readonly emailAddress?: string;
  readonly sshPublicKey?: string;
  readonly createdTimestamp?: Date;
  readonly lastModifiedTimestamp?: Date;
}

export interface DeleteProjectRequest {
  readonly id: string;
  readonly clientRequestToken?: string;
  readonly deleteStack?: boolean;
}

export interface DeleteProjectResult {
  readonly stackId?: string;
  readonly projectArn?: string;
}

export interface DeleteUserProfileRequest {
  readonly userArn: string;
}

export interface DeleteUserProfileResult {
  readonly userArn: string;
}

export interface DescribeProjectRequest {
  readonly id: string;
}

export interface DescribeProjectResult {
  readonly name?: string;
  readonly id?: string;
  readonly arn?: string;
  readonly description?: string;
  readonly clientRequestToken?: string;
  readonly createdTimeStamp?: Date;
  readonly stackId?: string;
  readonly projectTemplateId?: string;
  readonly status?: ProjectStatus;
}

export interface DescribeUserProfileRequest {
  readonly userArn: string;
}

export interface DescribeUserProfileResult {
  readonly userArn: string;
  readonly displayName?: string;
  readonly emailAddress?: string;
  readonly sshPublicKey?: string;
  readonly createdTimestamp: Date;
  readonly lastModifiedTimestamp: Date;
}

export interface DisassociateTeamMemberRequest {
  readonly projectId: string;
  readonly userArn: string;
}

export interface DisassociateTeamMemberResult {
}

export interface GitHubCodeDestination {
  readonly name: string;
  readonly description?: string;
  readonly type: string;
  readonly owner: string;
  readonly privateRepository: boolean;
  readonly issuesEnabled: boolean;
  readonly token: string;
}

export interface InvalidNextTokenException {
}

export interface InvalidServiceRoleException {
}

export interface LimitExceededException {
}

export interface ListProjectsRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListProjectsResult {
  readonly projects: [];
  readonly nextToken?: string;
}

export interface ListResourcesRequest {
  readonly projectId: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListResourcesResult {
  readonly resources?: [];
  readonly nextToken?: string;
}

export interface ListTagsForProjectRequest {
  readonly id: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListTagsForProjectResult {
  readonly tags?: {[key: string]: any};
  readonly nextToken?: string;
}

export interface ListTeamMembersRequest {
  readonly projectId: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListTeamMembersResult {
  readonly teamMembers: [];
  readonly nextToken?: string;
}

export interface ListUserProfilesRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListUserProfilesResult {
  readonly userProfiles: [];
  readonly nextToken?: string;
}

export interface ProjectAlreadyExistsException {
}

export interface ProjectConfigurationException {
}

export interface ProjectCreationFailedException {
}

export interface ProjectNotFoundException {
}

export interface ProjectStatus {
  readonly state: string;
  readonly reason?: string;
}

export interface ProjectSummary {
  readonly projectId?: string;
  readonly projectArn?: string;
}

export interface Resource {
  readonly id: string;
}

export interface S3Location {
  readonly bucketName?: string;
  readonly bucketKey?: string;
}

export interface TagProjectRequest {
  readonly id: string;
  readonly tags: {[key: string]: any};
}

export interface TagProjectResult {
  readonly tags?: {[key: string]: any};
}

export interface TeamMember {
  readonly userArn: string;
  readonly projectRole: string;
  readonly remoteAccessAllowed?: boolean;
}

export interface TeamMemberAlreadyAssociatedException {
}

export interface TeamMemberNotFoundException {
}

export interface Toolchain {
  readonly source: ToolchainSource;
  readonly roleArn?: string;
  readonly stackParameters?: {[key: string]: any};
}

export interface ToolchainSource {
  readonly s3: S3Location;
}

export interface UntagProjectRequest {
  readonly id: string;
  readonly tags: [];
}

export interface UntagProjectResult {
}

export interface UpdateProjectRequest {
  readonly id: string;
  readonly name?: string;
  readonly description?: string;
}

export interface UpdateProjectResult {
}

export interface UpdateTeamMemberRequest {
  readonly projectId: string;
  readonly userArn: string;
  readonly projectRole?: string;
  readonly remoteAccessAllowed?: boolean;
}

export interface UpdateTeamMemberResult {
  readonly userArn?: string;
  readonly projectRole?: string;
  readonly remoteAccessAllowed?: boolean;
}

export interface UpdateUserProfileRequest {
  readonly userArn: string;
  readonly displayName?: string;
  readonly emailAddress?: string;
  readonly sshPublicKey?: string;
}

export interface UpdateUserProfileResult {
  readonly userArn: string;
  readonly displayName?: string;
  readonly emailAddress?: string;
  readonly sshPublicKey?: string;
  readonly createdTimestamp?: Date;
  readonly lastModifiedTimestamp?: Date;
}

export interface UserProfileAlreadyExistsException {
}

export interface UserProfileNotFoundException {
}

export interface UserProfileSummary {
  readonly userArn?: string;
  readonly displayName?: string;
  readonly emailAddress?: string;
  readonly sshPublicKey?: string;
}

export interface ValidationException {
}


