/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CreateEnvironment {
  readonly name: string;
  readonly description?: string;
  readonly kmsKeyId?: string;
  readonly tags?: {[key: string]: any};
  readonly federationMode?: string;
  readonly federationParameters?: FederationParameters;
  readonly superuserParameters?: SuperuserParameters;
  readonly dataBundles?: [];
}

export interface DeleteEnvironment {
  readonly environmentId: string;
}

export interface GetEnvironment {
  readonly environmentId: string;
}

export interface ListEnvironments {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListTagsForResource {
  readonly resourceArn: string;
}

export interface TagResource {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

export interface UntagResource {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface UpdateEnvironment {
  readonly environmentId: string;
  readonly name?: string;
  readonly description?: string;
  readonly federationMode?: string;
  readonly federationParameters?: FederationParameters;
}

export interface AccessDeniedException {
}

export interface CreateEnvironmentRequest {
  readonly name: string;
  readonly description?: string;
  readonly kmsKeyId?: string;
  readonly tags?: {[key: string]: any};
  readonly federationMode?: string;
  readonly federationParameters?: FederationParameters;
  readonly superuserParameters?: SuperuserParameters;
  readonly dataBundles?: [];
}

export interface CreateEnvironmentResponse {
  readonly environmentId?: string;
  readonly environmentArn?: string;
  readonly environmentUrl?: string;
}

export interface DeleteEnvironmentRequest {
  readonly environmentId: string;
}

export interface DeleteEnvironmentResponse {
}

export interface Environment {
  readonly name?: string;
  readonly environmentId?: string;
  readonly awsAccountId?: string;
  readonly status?: string;
  readonly environmentUrl?: string;
  readonly description?: string;
  readonly environmentArn?: string;
  readonly sageMakerStudioDomainUrl?: string;
  readonly kmsKeyId?: string;
  readonly dedicatedServiceAccountId?: string;
  readonly federationMode?: string;
  readonly federationParameters?: FederationParameters;
}

export interface FederationParameters {
  readonly samlMetadataDocument?: string;
  readonly samlMetadataURL?: string;
  readonly applicationCallBackURL?: string;
  readonly federationURN?: string;
  readonly federationProviderName?: string;
  readonly attributeMap?: {[key: string]: any};
}

export interface GetEnvironmentRequest {
  readonly environmentId: string;
}

export interface GetEnvironmentResponse {
  readonly environment?: Environment;
}

export interface InternalServerException {
  readonly message?: string;
}

export interface InvalidRequestException {
  readonly message?: string;
}

export interface LimitExceededException {
  readonly message?: string;
}

export interface ListEnvironmentsRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListEnvironmentsResponse {
  readonly environments?: [];
  readonly nextToken?: string;
}

export interface ListTagsForResourceRequest {
  readonly resourceArn: string;
}

export interface ListTagsForResourceResponse {
  readonly tags?: {[key: string]: any};
}

export interface ResourceNotFoundException {
  readonly message?: string;
}

export interface ServiceQuotaExceededException {
  readonly message?: string;
}

export interface SuperuserParameters {
  readonly emailAddress: string;
  readonly firstName: string;
  readonly lastName: string;
}

export interface TagResourceRequest {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

export interface TagResourceResponse {
}

export interface ThrottlingException {
}

export interface UntagResourceRequest {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface UntagResourceResponse {
}

export interface UpdateEnvironmentRequest {
  readonly environmentId: string;
  readonly name?: string;
  readonly description?: string;
  readonly federationMode?: string;
  readonly federationParameters?: FederationParameters;
}

export interface UpdateEnvironmentResponse {
  readonly environment?: Environment;
}

export interface ValidationException {
  readonly message?: string;
}


