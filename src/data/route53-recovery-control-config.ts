/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CreateCluster {
  readonly ClientToken?: string;
  readonly ClusterName: string;
  readonly Tags?: {[key: string]: any};
}

export interface CreateControlPanel {
  readonly ClientToken?: string;
  readonly ClusterArn: string;
  readonly ControlPanelName: string;
  readonly Tags?: {[key: string]: any};
}

export interface CreateRoutingControl {
  readonly ClientToken?: string;
  readonly ClusterArn: string;
  readonly ControlPanelArn?: string;
  readonly RoutingControlName: string;
}

export interface CreateSafetyRule {
  readonly AssertionRule?: NewAssertionRule;
  readonly ClientToken?: string;
  readonly GatingRule?: NewGatingRule;
  readonly Tags?: {[key: string]: any};
}

export interface DeleteCluster {
  readonly ClusterArn: string;
}

export interface DeleteControlPanel {
  readonly ControlPanelArn: string;
}

export interface DeleteRoutingControl {
  readonly RoutingControlArn: string;
}

export interface DeleteSafetyRule {
  readonly SafetyRuleArn: string;
}

export interface DescribeCluster {
  readonly ClusterArn: string;
}

export interface DescribeControlPanel {
  readonly ControlPanelArn: string;
}

export interface DescribeRoutingControl {
  readonly RoutingControlArn: string;
}

export interface DescribeSafetyRule {
  readonly SafetyRuleArn: string;
}

export interface ListAssociatedRoute53HealthChecks {
  readonly MaxResults?: number;
  readonly NextToken?: string;
  readonly RoutingControlArn: string;
}

export interface ListClusters {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListControlPanels {
  readonly ClusterArn?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListRoutingControls {
  readonly ControlPanelArn: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListSafetyRules {
  readonly ControlPanelArn: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListTagsForResource {
  readonly ResourceArn: string;
}

export interface TagResource {
  readonly ResourceArn: string;
  readonly Tags: {[key: string]: any};
}

export interface UntagResource {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}

export interface UpdateControlPanel {
  readonly ControlPanelArn: string;
  readonly ControlPanelName: string;
}

export interface UpdateRoutingControl {
  readonly RoutingControlArn: string;
  readonly RoutingControlName: string;
}

export interface UpdateSafetyRule {
  readonly AssertionRuleUpdate?: AssertionRuleUpdate;
  readonly GatingRuleUpdate?: GatingRuleUpdate;
}

export interface AccessDeniedException {
  readonly Message: string;
}

export interface AssertionRule {
  readonly AssertedControls: [];
  readonly ControlPanelArn: string;
  readonly Name: string;
  readonly RuleConfig: RuleConfig;
  readonly SafetyRuleArn: string;
  readonly Status: string;
  readonly WaitPeriodMs: number;
}

export interface AssertionRuleUpdate {
  readonly Name: string;
  readonly SafetyRuleArn: string;
  readonly WaitPeriodMs: number;
}

export interface Cluster {
  readonly ClusterArn?: string;
  readonly ClusterEndpoints?: [];
  readonly Name?: string;
  readonly Status?: string;
}

export interface ClusterEndpoint {
  readonly Endpoint?: string;
  readonly Region?: string;
}

export interface ConflictException {
  readonly Message: string;
}

export interface ControlPanel {
  readonly ClusterArn?: string;
  readonly ControlPanelArn?: string;
  readonly DefaultControlPanel?: boolean;
  readonly Name?: string;
  readonly RoutingControlCount?: number;
  readonly Status?: string;
}

export interface CreateClusterRequest {
  readonly ClientToken?: string;
  readonly ClusterName: string;
  readonly Tags?: {[key: string]: any};
}

export interface CreateClusterResponse {
  readonly Cluster?: Cluster;
}

export interface CreateControlPanelRequest {
  readonly ClientToken?: string;
  readonly ClusterArn: string;
  readonly ControlPanelName: string;
  readonly Tags?: {[key: string]: any};
}

export interface CreateControlPanelResponse {
  readonly ControlPanel?: ControlPanel;
}

export interface CreateRoutingControlRequest {
  readonly ClientToken?: string;
  readonly ClusterArn: string;
  readonly ControlPanelArn?: string;
  readonly RoutingControlName: string;
}

export interface CreateRoutingControlResponse {
  readonly RoutingControl?: RoutingControl;
}

export interface CreateSafetyRuleRequest {
  readonly AssertionRule?: NewAssertionRule;
  readonly ClientToken?: string;
  readonly GatingRule?: NewGatingRule;
  readonly Tags?: {[key: string]: any};
}

export interface CreateSafetyRuleResponse {
  readonly AssertionRule?: AssertionRule;
  readonly GatingRule?: GatingRule;
}

export interface DeleteClusterRequest {
  readonly ClusterArn: string;
}

export interface DeleteClusterResponse {
}

export interface DeleteControlPanelRequest {
  readonly ControlPanelArn: string;
}

export interface DeleteControlPanelResponse {
}

export interface DeleteRoutingControlRequest {
  readonly RoutingControlArn: string;
}

export interface DeleteRoutingControlResponse {
}

export interface DeleteSafetyRuleRequest {
  readonly SafetyRuleArn: string;
}

export interface DeleteSafetyRuleResponse {
}

export interface DescribeClusterRequest {
  readonly ClusterArn: string;
}

export interface DescribeClusterResponse {
  readonly Cluster?: Cluster;
}

export interface DescribeControlPanelRequest {
  readonly ControlPanelArn: string;
}

export interface DescribeControlPanelResponse {
  readonly ControlPanel?: ControlPanel;
}

export interface DescribeRoutingControlRequest {
  readonly RoutingControlArn: string;
}

export interface DescribeRoutingControlResponse {
  readonly RoutingControl?: RoutingControl;
}

export interface DescribeSafetyRuleRequest {
  readonly SafetyRuleArn: string;
}

export interface DescribeSafetyRuleResponse {
  readonly AssertionRule?: AssertionRule;
  readonly GatingRule?: GatingRule;
}

export interface GatingRule {
  readonly ControlPanelArn: string;
  readonly GatingControls: [];
  readonly Name: string;
  readonly RuleConfig: RuleConfig;
  readonly SafetyRuleArn: string;
  readonly Status: string;
  readonly TargetControls: [];
  readonly WaitPeriodMs: number;
}

export interface GatingRuleUpdate {
  readonly Name: string;
  readonly SafetyRuleArn: string;
  readonly WaitPeriodMs: number;
}

export interface InternalServerException {
  readonly Message: string;
}

export interface ListAssociatedRoute53HealthChecksRequest {
  readonly MaxResults?: number;
  readonly NextToken?: string;
  readonly RoutingControlArn: string;
}

export interface ListAssociatedRoute53HealthChecksResponse {
  readonly HealthCheckIds?: [];
  readonly NextToken?: string;
}

export interface ListClustersRequest {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListClustersResponse {
  readonly Clusters?: [];
  readonly NextToken?: string;
}

export interface ListControlPanelsRequest {
  readonly ClusterArn?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListControlPanelsResponse {
  readonly ControlPanels?: [];
  readonly NextToken?: string;
}

export interface ListRoutingControlsRequest {
  readonly ControlPanelArn: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListRoutingControlsResponse {
  readonly NextToken?: string;
  readonly RoutingControls?: [];
}

export interface ListSafetyRulesRequest {
  readonly ControlPanelArn: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListSafetyRulesResponse {
  readonly NextToken?: string;
  readonly SafetyRules?: [];
}

export interface ListTagsForResourceRequest {
  readonly ResourceArn: string;
}

export interface ListTagsForResourceResponse {
  readonly Tags?: {[key: string]: any};
}

export interface NewAssertionRule {
  readonly AssertedControls: [];
  readonly ControlPanelArn: string;
  readonly Name: string;
  readonly RuleConfig: RuleConfig;
  readonly WaitPeriodMs: number;
}

export interface NewGatingRule {
  readonly ControlPanelArn: string;
  readonly GatingControls: [];
  readonly Name: string;
  readonly RuleConfig: RuleConfig;
  readonly TargetControls: [];
  readonly WaitPeriodMs: number;
}

export interface ResourceNotFoundException {
  readonly Message: string;
}

export interface RoutingControl {
  readonly ControlPanelArn?: string;
  readonly Name?: string;
  readonly RoutingControlArn?: string;
  readonly Status?: string;
}

export interface Rule {
  readonly ASSERTION?: AssertionRule;
  readonly GATING?: GatingRule;
}

export interface RuleConfig {
  readonly Inverted: boolean;
  readonly Threshold: number;
  readonly Type: string;
}

export interface ServiceQuotaExceededException {
  readonly Message: string;
}

export interface TagResourceRequest {
  readonly ResourceArn: string;
  readonly Tags: {[key: string]: any};
}

export interface TagResourceResponse {
}

export interface ThrottlingException {
  readonly Message: string;
}

export interface UntagResourceRequest {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}

export interface UntagResourceResponse {
}

export interface UpdateControlPanelRequest {
  readonly ControlPanelArn: string;
  readonly ControlPanelName: string;
}

export interface UpdateControlPanelResponse {
  readonly ControlPanel?: ControlPanel;
}

export interface UpdateRoutingControlRequest {
  readonly RoutingControlArn: string;
  readonly RoutingControlName: string;
}

export interface UpdateRoutingControlResponse {
  readonly RoutingControl?: RoutingControl;
}

export interface UpdateSafetyRuleRequest {
  readonly AssertionRuleUpdate?: AssertionRuleUpdate;
  readonly GatingRuleUpdate?: GatingRuleUpdate;
}

export interface UpdateSafetyRuleResponse {
  readonly AssertionRule?: AssertionRule;
  readonly GatingRule?: GatingRule;
}

export interface ValidationException {
  readonly Message: string;
}


