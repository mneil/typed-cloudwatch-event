/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface BatchCreateVariable {
  readonly variableEntries: [];
  readonly tags: [];
}
export interface BatchGetVariable {
  readonly names: [];
}
export interface CancelBatchImportJob {
  readonly jobId: string;
}
export interface CancelBatchPredictionJob {
  readonly jobId: string;
}
export interface CreateBatchImportJob {
  readonly jobId: string;
  readonly inputPath: string;
  readonly outputPath: string;
  readonly eventTypeName: string;
  readonly iamRoleArn: string;
  readonly tags: [];
}
export interface CreateBatchPredictionJob {
  readonly jobId: string;
  readonly inputPath: string;
  readonly outputPath: string;
  readonly eventTypeName: string;
  readonly detectorName: string;
  readonly detectorVersion: string;
  readonly iamRoleArn: string;
  readonly tags: [];
}
export interface CreateDetectorVersion {
  readonly detectorId: string;
  readonly description: string;
  readonly externalModelEndpoints: [];
  readonly rules: [];
  readonly modelVersions: [];
  readonly ruleExecutionMode: string;
  readonly tags: [];
}
export interface CreateModel {
  readonly modelId: string;
  readonly modelType: string;
  readonly description: string;
  readonly eventTypeName: string;
  readonly tags: [];
}
export interface CreateModelVersion {
  readonly modelId: string;
  readonly modelType: string;
  readonly trainingDataSource: string;
  readonly trainingDataSchema: TrainingDataSchema;
  readonly externalEventsDetail: ExternalEventsDetail;
  readonly ingestedEventsDetail: IngestedEventsDetail;
  readonly tags: [];
}
export interface CreateRule {
  readonly ruleId: string;
  readonly detectorId: string;
  readonly description: string;
  readonly expression: string;
  readonly language: string;
  readonly outcomes: [];
  readonly tags: [];
}
export interface CreateVariable {
  readonly name: string;
  readonly dataType: string;
  readonly dataSource: string;
  readonly defaultValue: string;
  readonly description: string;
  readonly variableType: string;
  readonly tags: [];
}
export interface DeleteBatchImportJob {
  readonly jobId: string;
}
export interface DeleteBatchPredictionJob {
  readonly jobId: string;
}
export interface DeleteDetector {
  readonly detectorId: string;
}
export interface DeleteDetectorVersion {
  readonly detectorId: string;
  readonly detectorVersionId: string;
}
export interface DeleteEntityType {
  readonly name: string;
}
export interface DeleteEvent {
  readonly eventId: string;
  readonly eventTypeName: string;
  readonly deleteAuditHistory: boolean;
}
export interface DeleteEventType {
  readonly name: string;
}
export interface DeleteEventsByEventType {
  readonly eventTypeName: string;
}
export interface DeleteExternalModel {
  readonly modelEndpoint: string;
}
export interface DeleteLabel {
  readonly name: string;
}
export interface DeleteModel {
  readonly modelId: string;
  readonly modelType: string;
}
export interface DeleteModelVersion {
  readonly modelId: string;
  readonly modelType: string;
  readonly modelVersionNumber: string;
}
export interface DeleteOutcome {
  readonly name: string;
}
export interface DeleteRule {
  readonly rule: Rule;
}
export interface DeleteVariable {
  readonly name: string;
}
export interface DescribeDetector {
  readonly detectorId: string;
  readonly nextToken: string;
  readonly maxResults: number;
}
export interface DescribeModelVersions {
  readonly modelId: string;
  readonly modelVersionNumber: string;
  readonly modelType: string;
  readonly nextToken: string;
  readonly maxResults: number;
}
export interface GetBatchImportJobs {
  readonly jobId: string;
  readonly maxResults: number;
  readonly nextToken: string;
}
export interface GetBatchPredictionJobs {
  readonly jobId: string;
  readonly maxResults: number;
  readonly nextToken: string;
}
export interface GetDeleteEventsByEventTypeStatus {
  readonly eventTypeName: string;
}
export interface GetDetectorVersion {
  readonly detectorId: string;
  readonly detectorVersionId: string;
}
export interface GetDetectors {
  readonly detectorId: string;
  readonly nextToken: string;
  readonly maxResults: number;
}
export interface GetEntityTypes {
  readonly name: string;
  readonly nextToken: string;
  readonly maxResults: number;
}
export interface GetEvent {
  readonly eventId: string;
  readonly eventTypeName: string;
}
export interface GetEventPrediction {
  readonly detectorId: string;
  readonly detectorVersionId: string;
  readonly eventId: string;
  readonly eventTypeName: string;
  readonly entities: [];
  readonly eventTimestamp: string;
  readonly eventVariables: {[key: string]: any};
  readonly externalModelEndpointDataBlobs: {[key: string]: any};
}
export interface GetEventTypes {
  readonly name: string;
  readonly nextToken: string;
  readonly maxResults: number;
}
export interface GetExternalModels {
  readonly modelEndpoint: string;
  readonly nextToken: string;
  readonly maxResults: number;
}
export interface GetLabels {
  readonly name: string;
  readonly nextToken: string;
  readonly maxResults: number;
}
export interface GetModelVersion {
  readonly modelId: string;
  readonly modelType: string;
  readonly modelVersionNumber: string;
}
export interface GetModels {
  readonly modelId: string;
  readonly modelType: string;
  readonly nextToken: string;
  readonly maxResults: number;
}
export interface GetOutcomes {
  readonly name: string;
  readonly nextToken: string;
  readonly maxResults: number;
}
export interface GetRules {
  readonly ruleId: string;
  readonly detectorId: string;
  readonly ruleVersion: string;
  readonly nextToken: string;
  readonly maxResults: number;
}
export interface GetVariables {
  readonly name: string;
  readonly nextToken: string;
  readonly maxResults: number;
}
export interface ListTagsForResource {
  readonly resourceARN: string;
  readonly nextToken: string;
  readonly maxResults: number;
}
export interface PutDetector {
  readonly detectorId: string;
  readonly description: string;
  readonly eventTypeName: string;
  readonly tags: [];
}
export interface PutEntityType {
  readonly name: string;
  readonly description: string;
  readonly tags: [];
}
export interface PutEventType {
  readonly name: string;
  readonly description: string;
  readonly eventVariables: [];
  readonly labels: [];
  readonly entityTypes: [];
  readonly eventIngestion: string;
  readonly tags: [];
}
export interface PutExternalModel {
  readonly modelEndpoint: string;
  readonly modelSource: string;
  readonly invokeModelEndpointRoleArn: string;
  readonly inputConfiguration: ModelInputConfiguration;
  readonly outputConfiguration: ModelOutputConfiguration;
  readonly modelEndpointStatus: string;
  readonly tags: [];
}
export interface PutKMSEncryptionKey {
  readonly kmsEncryptionKeyArn: string;
}
export interface PutLabel {
  readonly name: string;
  readonly description: string;
  readonly tags: [];
}
export interface PutOutcome {
  readonly name: string;
  readonly description: string;
  readonly tags: [];
}
export interface SendEvent {
  readonly eventId: string;
  readonly eventTypeName: string;
  readonly eventTimestamp: string;
  readonly eventVariables: {[key: string]: any};
  readonly assignedLabel: string;
  readonly labelTimestamp: string;
  readonly entities: [];
}
export interface TagResource {
  readonly resourceARN: string;
  readonly tags: [];
}
export interface UntagResource {
  readonly resourceARN: string;
  readonly tagKeys: [];
}
export interface UpdateDetectorVersion {
  readonly detectorId: string;
  readonly detectorVersionId: string;
  readonly externalModelEndpoints: [];
  readonly rules: [];
  readonly description: string;
  readonly modelVersions: [];
  readonly ruleExecutionMode: string;
}
export interface UpdateDetectorVersionMetadata {
  readonly detectorId: string;
  readonly detectorVersionId: string;
  readonly description: string;
}
export interface UpdateDetectorVersionStatus {
  readonly detectorId: string;
  readonly detectorVersionId: string;
  readonly status: string;
}
export interface UpdateEventLabel {
  readonly eventId: string;
  readonly eventTypeName: string;
  readonly assignedLabel: string;
  readonly labelTimestamp: string;
}
export interface UpdateModel {
  readonly modelId: string;
  readonly modelType: string;
  readonly description: string;
}
export interface UpdateModelVersion {
  readonly modelId: string;
  readonly modelType: string;
  readonly majorVersionNumber: string;
  readonly externalEventsDetail: ExternalEventsDetail;
  readonly ingestedEventsDetail: IngestedEventsDetail;
  readonly tags: [];
}
export interface UpdateModelVersionStatus {
  readonly modelId: string;
  readonly modelType: string;
  readonly modelVersionNumber: string;
  readonly status: string;
}
export interface UpdateRuleMetadata {
  readonly rule: Rule;
  readonly description: string;
}
export interface UpdateRuleVersion {
  readonly rule: Rule;
  readonly description: string;
  readonly expression: string;
  readonly language: string;
  readonly outcomes: [];
  readonly tags: [];
}
export interface UpdateVariable {
  readonly name: string;
  readonly defaultValue: string;
  readonly description: string;
  readonly variableType: string;
}



interface AccessDeniedException {
  readonly message: string;
}

interface BatchCreateVariableError {
  readonly name: string;
  readonly code: number;
  readonly message: string;
}

interface BatchCreateVariableRequest {
  readonly variableEntries: [];
  readonly tags: [];
}

interface BatchCreateVariableResult {
  readonly errors: [];
}

interface BatchGetVariableError {
  readonly name: string;
  readonly code: number;
  readonly message: string;
}

interface BatchGetVariableRequest {
  readonly names: [];
}

interface BatchGetVariableResult {
  readonly variables: [];
  readonly errors: [];
}

interface BatchImport {
  readonly jobId: string;
  readonly status: string;
  readonly failureReason: string;
  readonly startTime: string;
  readonly completionTime: string;
  readonly inputPath: string;
  readonly outputPath: string;
  readonly eventTypeName: string;
  readonly iamRoleArn: string;
  readonly arn: string;
  readonly processedRecordsCount: number;
  readonly failedRecordsCount: number;
  readonly totalRecordsCount: number;
}

interface BatchPrediction {
  readonly jobId: string;
  readonly status: string;
  readonly failureReason: string;
  readonly startTime: string;
  readonly completionTime: string;
  readonly lastHeartbeatTime: string;
  readonly inputPath: string;
  readonly outputPath: string;
  readonly eventTypeName: string;
  readonly detectorName: string;
  readonly detectorVersion: string;
  readonly iamRoleArn: string;
  readonly arn: string;
  readonly processedRecordsCount: number;
  readonly totalRecordsCount: number;
}

interface CancelBatchImportJobRequest {
  readonly jobId: string;
}

interface CancelBatchImportJobResult {
}

interface CancelBatchPredictionJobRequest {
  readonly jobId: string;
}

interface CancelBatchPredictionJobResult {
}

interface ConflictException {
  readonly message: string;
}

interface CreateBatchImportJobRequest {
  readonly jobId: string;
  readonly inputPath: string;
  readonly outputPath: string;
  readonly eventTypeName: string;
  readonly iamRoleArn: string;
  readonly tags: [];
}

interface CreateBatchImportJobResult {
}

interface CreateBatchPredictionJobRequest {
  readonly jobId: string;
  readonly inputPath: string;
  readonly outputPath: string;
  readonly eventTypeName: string;
  readonly detectorName: string;
  readonly detectorVersion: string;
  readonly iamRoleArn: string;
  readonly tags: [];
}

interface CreateBatchPredictionJobResult {
}

interface CreateDetectorVersionRequest {
  readonly detectorId: string;
  readonly description: string;
  readonly externalModelEndpoints: [];
  readonly rules: [];
  readonly modelVersions: [];
  readonly ruleExecutionMode: string;
  readonly tags: [];
}

interface CreateDetectorVersionResult {
  readonly detectorId: string;
  readonly detectorVersionId: string;
  readonly status: string;
}

interface CreateModelRequest {
  readonly modelId: string;
  readonly modelType: string;
  readonly description: string;
  readonly eventTypeName: string;
  readonly tags: [];
}

interface CreateModelResult {
}

interface CreateModelVersionRequest {
  readonly modelId: string;
  readonly modelType: string;
  readonly trainingDataSource: string;
  readonly trainingDataSchema: TrainingDataSchema;
  readonly externalEventsDetail: ExternalEventsDetail;
  readonly ingestedEventsDetail: IngestedEventsDetail;
  readonly tags: [];
}

interface CreateModelVersionResult {
  readonly modelId: string;
  readonly modelType: string;
  readonly modelVersionNumber: string;
  readonly status: string;
}

interface CreateRuleRequest {
  readonly ruleId: string;
  readonly detectorId: string;
  readonly description: string;
  readonly expression: string;
  readonly language: string;
  readonly outcomes: [];
  readonly tags: [];
}

interface CreateRuleResult {
  readonly rule: Rule;
}

interface CreateVariableRequest {
  readonly name: string;
  readonly dataType: string;
  readonly dataSource: string;
  readonly defaultValue: string;
  readonly description: string;
  readonly variableType: string;
  readonly tags: [];
}

interface CreateVariableResult {
}

interface DataValidationMetrics {
  readonly fileLevelMessages: [];
  readonly fieldLevelMessages: [];
}

interface DeleteBatchImportJobRequest {
  readonly jobId: string;
}

interface DeleteBatchImportJobResult {
}

interface DeleteBatchPredictionJobRequest {
  readonly jobId: string;
}

interface DeleteBatchPredictionJobResult {
}

interface DeleteDetectorRequest {
  readonly detectorId: string;
}

interface DeleteDetectorResult {
}

interface DeleteDetectorVersionRequest {
  readonly detectorId: string;
  readonly detectorVersionId: string;
}

interface DeleteDetectorVersionResult {
}

interface DeleteEntityTypeRequest {
  readonly name: string;
}

interface DeleteEntityTypeResult {
}

interface DeleteEventRequest {
  readonly eventId: string;
  readonly eventTypeName: string;
  readonly deleteAuditHistory: boolean;
}

interface DeleteEventResult {
}

interface DeleteEventTypeRequest {
  readonly name: string;
}

interface DeleteEventTypeResult {
}

interface DeleteEventsByEventTypeRequest {
  readonly eventTypeName: string;
}

interface DeleteEventsByEventTypeResult {
  readonly eventTypeName: string;
  readonly eventsDeletionStatus: string;
}

interface DeleteExternalModelRequest {
  readonly modelEndpoint: string;
}

interface DeleteExternalModelResult {
}

interface DeleteLabelRequest {
  readonly name: string;
}

interface DeleteLabelResult {
}

interface DeleteModelRequest {
  readonly modelId: string;
  readonly modelType: string;
}

interface DeleteModelResult {
}

interface DeleteModelVersionRequest {
  readonly modelId: string;
  readonly modelType: string;
  readonly modelVersionNumber: string;
}

interface DeleteModelVersionResult {
}

interface DeleteOutcomeRequest {
  readonly name: string;
}

interface DeleteOutcomeResult {
}

interface DeleteRuleRequest {
  readonly rule: Rule;
}

interface DeleteRuleResult {
}

interface DeleteVariableRequest {
  readonly name: string;
}

interface DeleteVariableResult {
}

interface DescribeDetectorRequest {
  readonly detectorId: string;
  readonly nextToken: string;
  readonly maxResults: number;
}

interface DescribeDetectorResult {
  readonly detectorId: string;
  readonly detectorVersionSummaries: [];
  readonly nextToken: string;
  readonly arn: string;
}

interface DescribeModelVersionsRequest {
  readonly modelId: string;
  readonly modelVersionNumber: string;
  readonly modelType: string;
  readonly nextToken: string;
  readonly maxResults: number;
}

interface DescribeModelVersionsResult {
  readonly modelVersionDetails: [];
  readonly nextToken: string;
}

interface Detector {
  readonly detectorId: string;
  readonly description: string;
  readonly eventTypeName: string;
  readonly lastUpdatedTime: string;
  readonly createdTime: string;
  readonly arn: string;
}

interface DetectorVersionSummary {
  readonly detectorVersionId: string;
  readonly status: string;
  readonly description: string;
  readonly lastUpdatedTime: string;
}

interface Entity {
  readonly entityType: string;
  readonly entityId: string;
}

interface EntityType {
  readonly name: string;
  readonly description: string;
  readonly lastUpdatedTime: string;
  readonly createdTime: string;
  readonly arn: string;
}

interface Event {
  readonly eventId: string;
  readonly eventTypeName: string;
  readonly eventTimestamp: string;
  readonly eventVariables: {[key: string]: any};
  readonly currentLabel: string;
  readonly labelTimestamp: string;
  readonly entities: [];
}

interface EventType {
  readonly name: string;
  readonly description: string;
  readonly eventVariables: [];
  readonly labels: [];
  readonly entityTypes: [];
  readonly eventIngestion: string;
  readonly ingestedEventStatistics: IngestedEventStatistics;
  readonly lastUpdatedTime: string;
  readonly createdTime: string;
  readonly arn: string;
}

interface ExternalEventsDetail {
  readonly dataLocation: string;
  readonly dataAccessRoleArn: string;
}

interface ExternalModel {
  readonly modelEndpoint: string;
  readonly modelSource: string;
  readonly invokeModelEndpointRoleArn: string;
  readonly inputConfiguration: ModelInputConfiguration;
  readonly outputConfiguration: ModelOutputConfiguration;
  readonly modelEndpointStatus: string;
  readonly lastUpdatedTime: string;
  readonly createdTime: string;
  readonly arn: string;
}

interface ExternalModelOutputs {
  readonly externalModel: ExternalModelSummary;
  readonly outputs: {[key: string]: any};
}

interface ExternalModelSummary {
  readonly modelEndpoint: string;
  readonly modelSource: string;
}

interface FieldValidationMessage {
  readonly fieldName: string;
  readonly identifier: string;
  readonly title: string;
  readonly content: string;
  readonly type: string;
}

interface FileValidationMessage {
  readonly title: string;
  readonly content: string;
  readonly type: string;
}

interface GetBatchImportJobsRequest {
  readonly jobId: string;
  readonly maxResults: number;
  readonly nextToken: string;
}

interface GetBatchImportJobsResult {
  readonly batchImports: [];
  readonly nextToken: string;
}

interface GetBatchPredictionJobsRequest {
  readonly jobId: string;
  readonly maxResults: number;
  readonly nextToken: string;
}

interface GetBatchPredictionJobsResult {
  readonly batchPredictions: [];
  readonly nextToken: string;
}

interface GetDeleteEventsByEventTypeStatusRequest {
  readonly eventTypeName: string;
}

interface GetDeleteEventsByEventTypeStatusResult {
  readonly eventTypeName: string;
  readonly eventsDeletionStatus: string;
}

interface GetDetectorVersionRequest {
  readonly detectorId: string;
  readonly detectorVersionId: string;
}

interface GetDetectorVersionResult {
  readonly detectorId: string;
  readonly detectorVersionId: string;
  readonly description: string;
  readonly externalModelEndpoints: [];
  readonly modelVersions: [];
  readonly rules: [];
  readonly status: string;
  readonly lastUpdatedTime: string;
  readonly createdTime: string;
  readonly ruleExecutionMode: string;
  readonly arn: string;
}

interface GetDetectorsRequest {
  readonly detectorId: string;
  readonly nextToken: string;
  readonly maxResults: number;
}

interface GetDetectorsResult {
  readonly detectors: [];
  readonly nextToken: string;
}

interface GetEntityTypesRequest {
  readonly name: string;
  readonly nextToken: string;
  readonly maxResults: number;
}

interface GetEntityTypesResult {
  readonly entityTypes: [];
  readonly nextToken: string;
}

interface GetEventPredictionRequest {
  readonly detectorId: string;
  readonly detectorVersionId: string;
  readonly eventId: string;
  readonly eventTypeName: string;
  readonly entities: [];
  readonly eventTimestamp: string;
  readonly eventVariables: {[key: string]: any};
  readonly externalModelEndpointDataBlobs: {[key: string]: any};
}

interface GetEventPredictionResult {
  readonly modelScores: [];
  readonly ruleResults: [];
  readonly externalModelOutputs: [];
}

interface GetEventRequest {
  readonly eventId: string;
  readonly eventTypeName: string;
}

interface GetEventResult {
  readonly event: Event;
}

interface GetEventTypesRequest {
  readonly name: string;
  readonly nextToken: string;
  readonly maxResults: number;
}

interface GetEventTypesResult {
  readonly eventTypes: [];
  readonly nextToken: string;
}

interface GetExternalModelsRequest {
  readonly modelEndpoint: string;
  readonly nextToken: string;
  readonly maxResults: number;
}

interface GetExternalModelsResult {
  readonly externalModels: [];
  readonly nextToken: string;
}

interface GetKMSEncryptionKeyResult {
  readonly kmsKey: KMSKey;
}

interface GetLabelsRequest {
  readonly name: string;
  readonly nextToken: string;
  readonly maxResults: number;
}

interface GetLabelsResult {
  readonly labels: [];
  readonly nextToken: string;
}

interface GetModelVersionRequest {
  readonly modelId: string;
  readonly modelType: string;
  readonly modelVersionNumber: string;
}

interface GetModelVersionResult {
  readonly modelId: string;
  readonly modelType: string;
  readonly modelVersionNumber: string;
  readonly trainingDataSource: string;
  readonly trainingDataSchema: TrainingDataSchema;
  readonly externalEventsDetail: ExternalEventsDetail;
  readonly ingestedEventsDetail: IngestedEventsDetail;
  readonly status: string;
  readonly arn: string;
}

interface GetModelsRequest {
  readonly modelId: string;
  readonly modelType: string;
  readonly nextToken: string;
  readonly maxResults: number;
}

interface GetModelsResult {
  readonly nextToken: string;
  readonly models: [];
}

interface GetOutcomesRequest {
  readonly name: string;
  readonly nextToken: string;
  readonly maxResults: number;
}

interface GetOutcomesResult {
  readonly outcomes: [];
  readonly nextToken: string;
}

interface GetRulesRequest {
  readonly ruleId: string;
  readonly detectorId: string;
  readonly ruleVersion: string;
  readonly nextToken: string;
  readonly maxResults: number;
}

interface GetRulesResult {
  readonly ruleDetails: [];
  readonly nextToken: string;
}

interface GetVariablesRequest {
  readonly name: string;
  readonly nextToken: string;
  readonly maxResults: number;
}

interface GetVariablesResult {
  readonly variables: [];
  readonly nextToken: string;
}

interface IngestedEventStatistics {
  readonly numberOfEvents: number;
  readonly eventDataSizeInBytes: number;
  readonly leastRecentEvent: string;
  readonly mostRecentEvent: string;
  readonly lastUpdatedTime: string;
}

interface IngestedEventsDetail {
  readonly ingestedEventsTimeWindow: IngestedEventsTimeWindow;
}

interface IngestedEventsTimeWindow {
  readonly startTime: string;
  readonly endTime: string;
}

interface InternalServerException {
  readonly message: string;
}

interface KMSKey {
  readonly kmsEncryptionKeyArn: string;
}

interface Label {
  readonly name: string;
  readonly description: string;
  readonly lastUpdatedTime: string;
  readonly createdTime: string;
  readonly arn: string;
}

interface LabelSchema {
  readonly labelMapper: {[key: string]: any};
  readonly unlabeledEventsTreatment: string;
}

interface ListTagsForResourceRequest {
  readonly resourceARN: string;
  readonly nextToken: string;
  readonly maxResults: number;
}

interface ListTagsForResourceResult {
  readonly tags: [];
  readonly nextToken: string;
}

interface LogOddsMetric {
  readonly variableName: string;
  readonly variableType: string;
  readonly variableImportance: unknown;
}

interface MetricDataPoint {
  readonly fpr: unknown;
  readonly precision: unknown;
  readonly tpr: unknown;
  readonly threshold: unknown;
}

interface Model {
  readonly modelId: string;
  readonly modelType: string;
  readonly description: string;
  readonly eventTypeName: string;
  readonly createdTime: string;
  readonly lastUpdatedTime: string;
  readonly arn: string;
}

interface ModelEndpointDataBlob {
  readonly byteBuffer: unknown;
  readonly contentType: string;
}

interface ModelInputConfiguration {
  readonly eventTypeName: string;
  readonly format: string;
  readonly useEventVariables: boolean;
  readonly jsonInputTemplate: string;
  readonly csvInputTemplate: string;
}

interface ModelOutputConfiguration {
  readonly format: string;
  readonly jsonKeyToVariableMap: {[key: string]: any};
  readonly csvIndexToVariableMap: {[key: string]: any};
}

interface ModelScores {
  readonly modelVersion: ModelVersion;
  readonly scores: {[key: string]: any};
}

interface ModelVersion {
  readonly modelId: string;
  readonly modelType: string;
  readonly modelVersionNumber: string;
  readonly arn: string;
}

interface ModelVersionDetail {
  readonly modelId: string;
  readonly modelType: string;
  readonly modelVersionNumber: string;
  readonly status: string;
  readonly trainingDataSource: string;
  readonly trainingDataSchema: TrainingDataSchema;
  readonly externalEventsDetail: ExternalEventsDetail;
  readonly ingestedEventsDetail: IngestedEventsDetail;
  readonly trainingResult: TrainingResult;
  readonly lastUpdatedTime: string;
  readonly createdTime: string;
  readonly arn: string;
}

interface Outcome {
  readonly name: string;
  readonly description: string;
  readonly lastUpdatedTime: string;
  readonly createdTime: string;
  readonly arn: string;
}

interface PutDetectorRequest {
  readonly detectorId: string;
  readonly description: string;
  readonly eventTypeName: string;
  readonly tags: [];
}

interface PutDetectorResult {
}

interface PutEntityTypeRequest {
  readonly name: string;
  readonly description: string;
  readonly tags: [];
}

interface PutEntityTypeResult {
}

interface PutEventTypeRequest {
  readonly name: string;
  readonly description: string;
  readonly eventVariables: [];
  readonly labels: [];
  readonly entityTypes: [];
  readonly eventIngestion: string;
  readonly tags: [];
}

interface PutEventTypeResult {
}

interface PutExternalModelRequest {
  readonly modelEndpoint: string;
  readonly modelSource: string;
  readonly invokeModelEndpointRoleArn: string;
  readonly inputConfiguration: ModelInputConfiguration;
  readonly outputConfiguration: ModelOutputConfiguration;
  readonly modelEndpointStatus: string;
  readonly tags: [];
}

interface PutExternalModelResult {
}

interface PutKMSEncryptionKeyRequest {
  readonly kmsEncryptionKeyArn: string;
}

interface PutKMSEncryptionKeyResult {
}

interface PutLabelRequest {
  readonly name: string;
  readonly description: string;
  readonly tags: [];
}

interface PutLabelResult {
}

interface PutOutcomeRequest {
  readonly name: string;
  readonly description: string;
  readonly tags: [];
}

interface PutOutcomeResult {
}

interface ResourceNotFoundException {
  readonly message: string;
}

interface ResourceUnavailableException {
  readonly message: string;
}

interface Rule {
  readonly detectorId: string;
  readonly ruleId: string;
  readonly ruleVersion: string;
}

interface RuleDetail {
  readonly ruleId: string;
  readonly description: string;
  readonly detectorId: string;
  readonly ruleVersion: string;
  readonly expression: string;
  readonly language: string;
  readonly outcomes: [];
  readonly lastUpdatedTime: string;
  readonly createdTime: string;
  readonly arn: string;
}

interface RuleResult {
  readonly ruleId: string;
  readonly outcomes: [];
}

interface SendEventRequest {
  readonly eventId: string;
  readonly eventTypeName: string;
  readonly eventTimestamp: string;
  readonly eventVariables: {[key: string]: any};
  readonly assignedLabel: string;
  readonly labelTimestamp: string;
  readonly entities: [];
}

interface SendEventResult {
}

interface Tag {
  readonly key: string;
  readonly value: string;
}

interface TagResourceRequest {
  readonly resourceARN: string;
  readonly tags: [];
}

interface TagResourceResult {
}

interface ThrottlingException {
  readonly message: string;
}

interface TrainingDataSchema {
  readonly modelVariables: [];
  readonly labelSchema: LabelSchema;
}

interface TrainingMetrics {
  readonly auc: unknown;
  readonly metricDataPoints: [];
}

interface TrainingResult {
  readonly dataValidationMetrics: DataValidationMetrics;
  readonly trainingMetrics: TrainingMetrics;
  readonly variableImportanceMetrics: VariableImportanceMetrics;
}

interface UntagResourceRequest {
  readonly resourceARN: string;
  readonly tagKeys: [];
}

interface UntagResourceResult {
}

interface UpdateDetectorVersionMetadataRequest {
  readonly detectorId: string;
  readonly detectorVersionId: string;
  readonly description: string;
}

interface UpdateDetectorVersionMetadataResult {
}

interface UpdateDetectorVersionRequest {
  readonly detectorId: string;
  readonly detectorVersionId: string;
  readonly externalModelEndpoints: [];
  readonly rules: [];
  readonly description: string;
  readonly modelVersions: [];
  readonly ruleExecutionMode: string;
}

interface UpdateDetectorVersionResult {
}

interface UpdateDetectorVersionStatusRequest {
  readonly detectorId: string;
  readonly detectorVersionId: string;
  readonly status: string;
}

interface UpdateDetectorVersionStatusResult {
}

interface UpdateEventLabelRequest {
  readonly eventId: string;
  readonly eventTypeName: string;
  readonly assignedLabel: string;
  readonly labelTimestamp: string;
}

interface UpdateEventLabelResult {
}

interface UpdateModelRequest {
  readonly modelId: string;
  readonly modelType: string;
  readonly description: string;
}

interface UpdateModelResult {
}

interface UpdateModelVersionRequest {
  readonly modelId: string;
  readonly modelType: string;
  readonly majorVersionNumber: string;
  readonly externalEventsDetail: ExternalEventsDetail;
  readonly ingestedEventsDetail: IngestedEventsDetail;
  readonly tags: [];
}

interface UpdateModelVersionResult {
  readonly modelId: string;
  readonly modelType: string;
  readonly modelVersionNumber: string;
  readonly status: string;
}

interface UpdateModelVersionStatusRequest {
  readonly modelId: string;
  readonly modelType: string;
  readonly modelVersionNumber: string;
  readonly status: string;
}

interface UpdateModelVersionStatusResult {
}

interface UpdateRuleMetadataRequest {
  readonly rule: Rule;
  readonly description: string;
}

interface UpdateRuleMetadataResult {
}

interface UpdateRuleVersionRequest {
  readonly rule: Rule;
  readonly description: string;
  readonly expression: string;
  readonly language: string;
  readonly outcomes: [];
  readonly tags: [];
}

interface UpdateRuleVersionResult {
  readonly rule: Rule;
}

interface UpdateVariableRequest {
  readonly name: string;
  readonly defaultValue: string;
  readonly description: string;
  readonly variableType: string;
}

interface UpdateVariableResult {
}

interface ValidationException {
  readonly message: string;
}

interface Variable {
  readonly name: string;
  readonly dataType: string;
  readonly dataSource: string;
  readonly defaultValue: string;
  readonly description: string;
  readonly variableType: string;
  readonly lastUpdatedTime: string;
  readonly createdTime: string;
  readonly arn: string;
}

interface VariableEntry {
  readonly name: string;
  readonly dataType: string;
  readonly dataSource: string;
  readonly defaultValue: string;
  readonly description: string;
  readonly variableType: string;
}

interface VariableImportanceMetrics {
  readonly logOddsMetrics: [];
}

