/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CancelContact {
  readonly contactId: string;
}
export interface CreateConfig {
  readonly configData: ConfigTypeData;
  readonly name: string;
  readonly tags?: {[key: string]: any};
}
export interface CreateDataflowEndpointGroup {
  readonly endpointDetails: [];
  readonly tags?: {[key: string]: any};
}
export interface CreateMissionProfile {
  readonly contactPostPassDurationSeconds?: number;
  readonly contactPrePassDurationSeconds?: number;
  readonly dataflowEdges: [];
  readonly minimumViableContactDurationSeconds: number;
  readonly name: string;
  readonly tags?: {[key: string]: any};
  readonly trackingConfigArn: string;
}
export interface DeleteConfig {
  readonly configId: string;
  readonly configType: string;
}
export interface DeleteDataflowEndpointGroup {
  readonly dataflowEndpointGroupId: string;
}
export interface DeleteMissionProfile {
  readonly missionProfileId: string;
}
export interface DescribeContact {
  readonly contactId: string;
}
export interface GetConfig {
  readonly configId: string;
  readonly configType: string;
}
export interface GetDataflowEndpointGroup {
  readonly dataflowEndpointGroupId: string;
}
export interface GetMinuteUsage {
  readonly month: number;
  readonly year: number;
}
export interface GetMissionProfile {
  readonly missionProfileId: string;
}
export interface GetSatellite {
  readonly satelliteId: string;
}
export interface ListConfigs {
  readonly maxResults?: number;
  readonly nextToken?: string;
}
export interface ListContacts {
  readonly endTime: Date;
  readonly groundStation?: string;
  readonly maxResults?: number;
  readonly missionProfileArn?: string;
  readonly nextToken?: string;
  readonly satelliteArn?: string;
  readonly startTime: Date;
  readonly statusList: [];
}
export interface ListDataflowEndpointGroups {
  readonly maxResults?: number;
  readonly nextToken?: string;
}
export interface ListGroundStations {
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly satelliteId?: string;
}
export interface ListMissionProfiles {
  readonly maxResults?: number;
  readonly nextToken?: string;
}
export interface ListSatellites {
  readonly maxResults?: number;
  readonly nextToken?: string;
}
export interface ListTagsForResource {
  readonly resourceArn: string;
}
export interface ReserveContact {
  readonly endTime: Date;
  readonly groundStation: string;
  readonly missionProfileArn: string;
  readonly satelliteArn: string;
  readonly startTime: Date;
  readonly tags?: {[key: string]: any};
}
export interface TagResource {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}
export interface UntagResource {
  readonly resourceArn: string;
  readonly tagKeys: [];
}
export interface UpdateConfig {
  readonly configData: ConfigTypeData;
  readonly configId: string;
  readonly configType: string;
  readonly name: string;
}
export interface UpdateMissionProfile {
  readonly contactPostPassDurationSeconds?: number;
  readonly contactPrePassDurationSeconds?: number;
  readonly dataflowEdges?: [];
  readonly minimumViableContactDurationSeconds?: number;
  readonly missionProfileId: string;
  readonly name?: string;
  readonly trackingConfigArn?: string;
}



interface AntennaDemodDecodeDetails {
  readonly outputNode: string;
}

interface AntennaDownlinkConfig {
  readonly spectrumConfig: SpectrumConfig;
}

interface AntennaDownlinkDemodDecodeConfig {
  readonly decodeConfig: DecodeConfig;
  readonly demodulationConfig: DemodulationConfig;
  readonly spectrumConfig: SpectrumConfig;
}

interface AntennaUplinkConfig {
  readonly spectrumConfig: UplinkSpectrumConfig;
  readonly targetEirp: Eirp;
  readonly transmitDisabled: boolean;
}

interface CancelContactRequest {
  readonly contactId: string;
}

interface ConfigDetails {
  readonly antennaDemodDecodeDetails: AntennaDemodDecodeDetails;
  readonly endpointDetails: EndpointDetails;
  readonly s3RecordingDetails: S3RecordingDetails;
}

interface ConfigIdResponse {
  readonly configArn: string;
  readonly configId: string;
  readonly configType: string;
}

interface ConfigListItem {
  readonly configArn: string;
  readonly configId: string;
  readonly configType: string;
  readonly name: string;
}

interface ConfigTypeData {
  readonly antennaDownlinkConfig: AntennaDownlinkConfig;
  readonly antennaDownlinkDemodDecodeConfig: AntennaDownlinkDemodDecodeConfig;
  readonly antennaUplinkConfig: AntennaUplinkConfig;
  readonly dataflowEndpointConfig: DataflowEndpointConfig;
  readonly s3RecordingConfig: S3RecordingConfig;
  readonly trackingConfig: TrackingConfig;
  readonly uplinkEchoConfig: UplinkEchoConfig;
}

interface ContactData {
  readonly contactId: string;
  readonly contactStatus: string;
  readonly endTime: Date;
  readonly errorMessage: string;
  readonly groundStation: string;
  readonly maximumElevation: Elevation;
  readonly missionProfileArn: string;
  readonly postPassEndTime: Date;
  readonly prePassStartTime: Date;
  readonly region: string;
  readonly satelliteArn: string;
  readonly startTime: Date;
  readonly tags: {[key: string]: any};
}

interface ContactIdResponse {
  readonly contactId: string;
}

interface CreateConfigRequest {
  readonly configData: ConfigTypeData;
  readonly name: string;
  readonly tags: {[key: string]: any};
}

interface CreateDataflowEndpointGroupRequest {
  readonly endpointDetails: [];
  readonly tags: {[key: string]: any};
}

interface CreateMissionProfileRequest {
  readonly contactPostPassDurationSeconds: number;
  readonly contactPrePassDurationSeconds: number;
  readonly dataflowEdges: [];
  readonly minimumViableContactDurationSeconds: number;
  readonly name: string;
  readonly tags: {[key: string]: any};
  readonly trackingConfigArn: string;
}

interface DataflowDetail {
  readonly destination: Destination;
  readonly errorMessage: string;
  readonly source: Source;
}

interface DataflowEndpoint {
  readonly address: SocketAddress;
  readonly mtu: number;
  readonly name: string;
  readonly status: string;
}

interface DataflowEndpointConfig {
  readonly dataflowEndpointName: string;
  readonly dataflowEndpointRegion: string;
}

interface DataflowEndpointGroupIdResponse {
  readonly dataflowEndpointGroupId: string;
}

interface DataflowEndpointListItem {
  readonly dataflowEndpointGroupArn: string;
  readonly dataflowEndpointGroupId: string;
}

interface DecodeConfig {
  readonly unvalidatedJSON: string;
}

interface DeleteConfigRequest {
  readonly configId: string;
  readonly configType: string;
}

interface DeleteDataflowEndpointGroupRequest {
  readonly dataflowEndpointGroupId: string;
}

interface DeleteMissionProfileRequest {
  readonly missionProfileId: string;
}

interface DemodulationConfig {
  readonly unvalidatedJSON: string;
}

interface DependencyException {
  readonly message: string;
  readonly parameterName: string;
}

interface DescribeContactRequest {
  readonly contactId: string;
}

interface DescribeContactResponse {
  readonly contactId: string;
  readonly contactStatus: string;
  readonly dataflowList: [];
  readonly endTime: Date;
  readonly errorMessage: string;
  readonly groundStation: string;
  readonly maximumElevation: Elevation;
  readonly missionProfileArn: string;
  readonly postPassEndTime: Date;
  readonly prePassStartTime: Date;
  readonly region: string;
  readonly satelliteArn: string;
  readonly startTime: Date;
  readonly tags: {[key: string]: any};
}

interface Destination {
  readonly configDetails: ConfigDetails;
  readonly configId: string;
  readonly configType: string;
  readonly dataflowDestinationRegion: string;
}

interface Eirp {
  readonly units: string;
  readonly value: unknown;
}

interface Elevation {
  readonly unit: string;
  readonly value: unknown;
}

interface EndpointDetails {
  readonly endpoint: DataflowEndpoint;
  readonly securityDetails: SecurityDetails;
}

interface Frequency {
  readonly units: string;
  readonly value: unknown;
}

interface FrequencyBandwidth {
  readonly units: string;
  readonly value: unknown;
}

interface GetConfigRequest {
  readonly configId: string;
  readonly configType: string;
}

interface GetConfigResponse {
  readonly configArn: string;
  readonly configData: ConfigTypeData;
  readonly configId: string;
  readonly configType: string;
  readonly name: string;
  readonly tags: {[key: string]: any};
}

interface GetDataflowEndpointGroupRequest {
  readonly dataflowEndpointGroupId: string;
}

interface GetDataflowEndpointGroupResponse {
  readonly dataflowEndpointGroupArn: string;
  readonly dataflowEndpointGroupId: string;
  readonly endpointsDetails: [];
  readonly tags: {[key: string]: any};
}

interface GetMinuteUsageRequest {
  readonly month: number;
  readonly year: number;
}

interface GetMinuteUsageResponse {
  readonly estimatedMinutesRemaining: number;
  readonly isReservedMinutesCustomer: boolean;
  readonly totalReservedMinuteAllocation: number;
  readonly totalScheduledMinutes: number;
  readonly upcomingMinutesScheduled: number;
}

interface GetMissionProfileRequest {
  readonly missionProfileId: string;
}

interface GetMissionProfileResponse {
  readonly contactPostPassDurationSeconds: number;
  readonly contactPrePassDurationSeconds: number;
  readonly dataflowEdges: [];
  readonly minimumViableContactDurationSeconds: number;
  readonly missionProfileArn: string;
  readonly missionProfileId: string;
  readonly name: string;
  readonly region: string;
  readonly tags: {[key: string]: any};
  readonly trackingConfigArn: string;
}

interface GetSatelliteRequest {
  readonly satelliteId: string;
}

interface GetSatelliteResponse {
  readonly groundStations: [];
  readonly noradSatelliteID: number;
  readonly satelliteArn: string;
  readonly satelliteId: string;
}

interface GroundStationData {
  readonly groundStationId: string;
  readonly groundStationName: string;
  readonly region: string;
}

interface InvalidParameterException {
  readonly message: string;
  readonly parameterName: string;
}

interface ListConfigsRequest {
  readonly maxResults: number;
  readonly nextToken: string;
}

interface ListConfigsResponse {
  readonly configList: [];
  readonly nextToken: string;
}

interface ListContactsRequest {
  readonly endTime: Date;
  readonly groundStation: string;
  readonly maxResults: number;
  readonly missionProfileArn: string;
  readonly nextToken: string;
  readonly satelliteArn: string;
  readonly startTime: Date;
  readonly statusList: [];
}

interface ListContactsResponse {
  readonly contactList: [];
  readonly nextToken: string;
}

interface ListDataflowEndpointGroupsRequest {
  readonly maxResults: number;
  readonly nextToken: string;
}

interface ListDataflowEndpointGroupsResponse {
  readonly dataflowEndpointGroupList: [];
  readonly nextToken: string;
}

interface ListGroundStationsRequest {
  readonly maxResults: number;
  readonly nextToken: string;
  readonly satelliteId: string;
}

interface ListGroundStationsResponse {
  readonly groundStationList: [];
  readonly nextToken: string;
}

interface ListMissionProfilesRequest {
  readonly maxResults: number;
  readonly nextToken: string;
}

interface ListMissionProfilesResponse {
  readonly missionProfileList: [];
  readonly nextToken: string;
}

interface ListSatellitesRequest {
  readonly maxResults: number;
  readonly nextToken: string;
}

interface ListSatellitesResponse {
  readonly nextToken: string;
  readonly satellites: [];
}

interface ListTagsForResourceRequest {
  readonly resourceArn: string;
}

interface ListTagsForResourceResponse {
  readonly tags: {[key: string]: any};
}

interface MissionProfileIdResponse {
  readonly missionProfileId: string;
}

interface MissionProfileListItem {
  readonly missionProfileArn: string;
  readonly missionProfileId: string;
  readonly name: string;
  readonly region: string;
}

interface ReserveContactRequest {
  readonly endTime: Date;
  readonly groundStation: string;
  readonly missionProfileArn: string;
  readonly satelliteArn: string;
  readonly startTime: Date;
  readonly tags: {[key: string]: any};
}

interface ResourceLimitExceededException {
  readonly message: string;
  readonly parameterName: string;
}

interface ResourceNotFoundException {
  readonly message: string;
}

interface S3RecordingConfig {
  readonly bucketArn: string;
  readonly prefix: string;
  readonly roleArn: string;
}

interface S3RecordingDetails {
  readonly bucketArn: string;
  readonly keyTemplate: string;
}

interface SatelliteListItem {
  readonly groundStations: [];
  readonly noradSatelliteID: number;
  readonly satelliteArn: string;
  readonly satelliteId: string;
}

interface SecurityDetails {
  readonly roleArn: string;
  readonly securityGroupIds: [];
  readonly subnetIds: [];
}

interface SocketAddress {
  readonly name: string;
  readonly port: number;
}

interface Source {
  readonly configDetails: ConfigDetails;
  readonly configId: string;
  readonly configType: string;
  readonly dataflowSourceRegion: string;
}

interface SpectrumConfig {
  readonly bandwidth: FrequencyBandwidth;
  readonly centerFrequency: Frequency;
  readonly polarization: string;
}

interface TagResourceRequest {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

interface TagResourceResponse {
}

interface TrackingConfig {
  readonly autotrack: string;
}

interface UntagResourceRequest {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

interface UntagResourceResponse {
}

interface UpdateConfigRequest {
  readonly configData: ConfigTypeData;
  readonly configId: string;
  readonly configType: string;
  readonly name: string;
}

interface UpdateMissionProfileRequest {
  readonly contactPostPassDurationSeconds: number;
  readonly contactPrePassDurationSeconds: number;
  readonly dataflowEdges: [];
  readonly minimumViableContactDurationSeconds: number;
  readonly missionProfileId: string;
  readonly name: string;
  readonly trackingConfigArn: string;
}

interface UplinkEchoConfig {
  readonly antennaUplinkConfigArn: string;
  readonly enabled: boolean;
}

interface UplinkSpectrumConfig {
  readonly centerFrequency: Frequency;
  readonly polarization: string;
}

