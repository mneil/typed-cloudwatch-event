/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface BatchEvaluateFeature {
  readonly project: string;
  readonly requests: [];
}

export interface CreateExperiment {
  readonly description?: string;
  readonly metricGoals: [];
  readonly name: string;
  readonly onlineAbConfig?: OnlineAbConfig;
  readonly project: string;
  readonly randomizationSalt?: string;
  readonly samplingRate?: number;
  readonly tags?: {[key: string]: any};
  readonly treatments: [];
}

export interface CreateFeature {
  readonly defaultVariation?: string;
  readonly description?: string;
  readonly entityOverrides?: {[key: string]: any};
  readonly evaluationStrategy?: string;
  readonly name: string;
  readonly project: string;
  readonly tags?: {[key: string]: any};
  readonly variations: [];
}

export interface CreateLaunch {
  readonly description?: string;
  readonly groups: [];
  readonly metricMonitors?: [];
  readonly name: string;
  readonly project: string;
  readonly randomizationSalt?: string;
  readonly scheduledSplitsConfig?: ScheduledSplitsLaunchConfig;
  readonly tags?: {[key: string]: any};
}

export interface CreateProject {
  readonly dataDelivery?: ProjectDataDeliveryConfig;
  readonly description?: string;
  readonly name: string;
  readonly tags?: {[key: string]: any};
}

export interface DeleteExperiment {
  readonly experiment: string;
  readonly project: string;
}

export interface DeleteFeature {
  readonly feature: string;
  readonly project: string;
}

export interface DeleteLaunch {
  readonly launch: string;
  readonly project: string;
}

export interface DeleteProject {
  readonly project: string;
}

export interface EvaluateFeature {
  readonly entityId: string;
  readonly evaluationContext?: string;
  readonly feature: string;
  readonly project: string;
}

export interface GetExperiment {
  readonly experiment: string;
  readonly project: string;
}

export interface GetExperimentResults {
  readonly baseStat?: string;
  readonly endTime?: Date;
  readonly experiment: string;
  readonly metricNames: [];
  readonly period?: number;
  readonly project: string;
  readonly reportNames?: [];
  readonly resultStats?: [];
  readonly startTime?: Date;
  readonly treatmentNames: [];
}

export interface GetFeature {
  readonly feature: string;
  readonly project: string;
}

export interface GetLaunch {
  readonly launch: string;
  readonly project: string;
}

export interface GetProject {
  readonly project: string;
}

export interface ListExperiments {
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly project: string;
}

export interface ListFeatures {
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly project: string;
}

export interface ListLaunches {
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly project: string;
}

export interface ListProjects {
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListTagsForResource {
  readonly resourceArn: string;
}

export interface PutProjectEvents {
  readonly events: [];
  readonly project: string;
}

export interface StartExperiment {
  readonly analysisCompleteTime: Date;
  readonly experiment: string;
  readonly project: string;
}

export interface StartLaunch {
  readonly launch: string;
  readonly project: string;
}

export interface StopExperiment {
  readonly desiredState?: string;
  readonly experiment: string;
  readonly project: string;
  readonly reason?: string;
}

export interface StopLaunch {
  readonly desiredState?: string;
  readonly launch: string;
  readonly project: string;
  readonly reason?: string;
}

export interface TagResource {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

export interface UntagResource {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface UpdateExperiment {
  readonly description?: string;
  readonly experiment: string;
  readonly metricGoals?: [];
  readonly onlineAbConfig?: OnlineAbConfig;
  readonly project: string;
  readonly randomizationSalt?: string;
  readonly samplingRate?: number;
  readonly treatments?: [];
}

export interface UpdateFeature {
  readonly addOrUpdateVariations?: [];
  readonly defaultVariation?: string;
  readonly description?: string;
  readonly entityOverrides?: {[key: string]: any};
  readonly evaluationStrategy?: string;
  readonly feature: string;
  readonly project: string;
  readonly removeVariations?: [];
}

export interface UpdateLaunch {
  readonly description?: string;
  readonly groups?: [];
  readonly launch: string;
  readonly metricMonitors?: [];
  readonly project: string;
  readonly randomizationSalt?: string;
  readonly scheduledSplitsConfig?: ScheduledSplitsLaunchConfig;
}

export interface UpdateProject {
  readonly description?: string;
  readonly project: string;
}

export interface UpdateProjectDataDelivery {
  readonly cloudWatchLogs?: CloudWatchLogsDestinationConfig;
  readonly project: string;
  readonly s3Destination?: S3DestinationConfig;
}

export interface AccessDeniedException {
  readonly message?: string;
}

export interface BatchEvaluateFeatureRequest {
  readonly project: string;
  readonly requests: [];
}

export interface BatchEvaluateFeatureResponse {
  readonly results?: [];
}

export interface CloudWatchLogsDestination {
  readonly logGroup?: string;
}

export interface CloudWatchLogsDestinationConfig {
  readonly logGroup?: string;
}

export interface ConflictException {
  readonly message?: string;
  readonly resourceId?: string;
  readonly resourceType?: string;
}

export interface CreateExperimentRequest {
  readonly description?: string;
  readonly metricGoals: [];
  readonly name: string;
  readonly onlineAbConfig?: OnlineAbConfig;
  readonly project: string;
  readonly randomizationSalt?: string;
  readonly samplingRate?: number;
  readonly tags?: {[key: string]: any};
  readonly treatments: [];
}

export interface CreateExperimentResponse {
  readonly experiment: Experiment;
}

export interface CreateFeatureRequest {
  readonly defaultVariation?: string;
  readonly description?: string;
  readonly entityOverrides?: {[key: string]: any};
  readonly evaluationStrategy?: string;
  readonly name: string;
  readonly project: string;
  readonly tags?: {[key: string]: any};
  readonly variations: [];
}

export interface CreateFeatureResponse {
  readonly feature?: Feature;
}

export interface CreateLaunchRequest {
  readonly description?: string;
  readonly groups: [];
  readonly metricMonitors?: [];
  readonly name: string;
  readonly project: string;
  readonly randomizationSalt?: string;
  readonly scheduledSplitsConfig?: ScheduledSplitsLaunchConfig;
  readonly tags?: {[key: string]: any};
}

export interface CreateLaunchResponse {
  readonly launch: Launch;
}

export interface CreateProjectRequest {
  readonly dataDelivery?: ProjectDataDeliveryConfig;
  readonly description?: string;
  readonly name: string;
  readonly tags?: {[key: string]: any};
}

export interface CreateProjectResponse {
  readonly project: Project;
}

export interface DeleteExperimentRequest {
  readonly experiment: string;
  readonly project: string;
}

export interface DeleteExperimentResponse {
}

export interface DeleteFeatureRequest {
  readonly feature: string;
  readonly project: string;
}

export interface DeleteFeatureResponse {
}

export interface DeleteLaunchRequest {
  readonly launch: string;
  readonly project: string;
}

export interface DeleteLaunchResponse {
}

export interface DeleteProjectRequest {
  readonly project: string;
}

export interface DeleteProjectResponse {
}

export interface EvaluateFeatureRequest {
  readonly entityId: string;
  readonly evaluationContext?: string;
  readonly feature: string;
  readonly project: string;
}

export interface EvaluateFeatureResponse {
  readonly details?: string;
  readonly reason?: string;
  readonly value?: VariableValue;
  readonly variation?: string;
}

export interface EvaluationRequest {
  readonly entityId: string;
  readonly evaluationContext?: string;
  readonly feature: string;
}

export interface EvaluationResult {
  readonly details?: string;
  readonly entityId: string;
  readonly feature: string;
  readonly project?: string;
  readonly reason?: string;
  readonly value?: VariableValue;
  readonly variation?: string;
}

export interface EvaluationRule {
  readonly name?: string;
  readonly type: string;
}

export interface Event {
  readonly data: string;
  readonly timestamp: Date;
  readonly type: string;
}

export interface Experiment {
  readonly arn: string;
  readonly createdTime: Date;
  readonly description?: string;
  readonly execution?: ExperimentExecution;
  readonly lastUpdatedTime: Date;
  readonly metricGoals?: [];
  readonly name: string;
  readonly onlineAbDefinition?: OnlineAbDefinition;
  readonly project?: string;
  readonly randomizationSalt?: string;
  readonly samplingRate?: number;
  readonly schedule?: ExperimentSchedule;
  readonly status: string;
  readonly statusReason?: string;
  readonly tags?: {[key: string]: any};
  readonly treatments?: [];
  readonly type: string;
}

export interface ExperimentExecution {
  readonly endedTime?: Date;
  readonly startedTime?: Date;
}

export interface ExperimentReport {
  readonly content?: string;
  readonly metricName?: string;
  readonly reportName?: string;
  readonly treatmentName?: string;
}

export interface ExperimentResultsData {
  readonly metricName?: string;
  readonly resultStat?: string;
  readonly treatmentName?: string;
  readonly values?: [];
}

export interface ExperimentSchedule {
  readonly analysisCompleteTime?: Date;
}

export interface Feature {
  readonly arn: string;
  readonly createdTime: Date;
  readonly defaultVariation?: string;
  readonly description?: string;
  readonly entityOverrides?: {[key: string]: any};
  readonly evaluationRules?: [];
  readonly evaluationStrategy: string;
  readonly lastUpdatedTime: Date;
  readonly name: string;
  readonly project?: string;
  readonly status: string;
  readonly tags?: {[key: string]: any};
  readonly valueType: string;
  readonly variations: [];
}

export interface FeatureSummary {
  readonly arn: string;
  readonly createdTime: Date;
  readonly defaultVariation?: string;
  readonly evaluationRules?: [];
  readonly evaluationStrategy: string;
  readonly lastUpdatedTime: Date;
  readonly name: string;
  readonly project?: string;
  readonly status: string;
  readonly tags?: {[key: string]: any};
}

export interface GetExperimentRequest {
  readonly experiment: string;
  readonly project: string;
}

export interface GetExperimentResponse {
  readonly experiment?: Experiment;
}

export interface GetExperimentResultsRequest {
  readonly baseStat?: string;
  readonly endTime?: Date;
  readonly experiment: string;
  readonly metricNames: [];
  readonly period?: number;
  readonly project: string;
  readonly reportNames?: [];
  readonly resultStats?: [];
  readonly startTime?: Date;
  readonly treatmentNames: [];
}

export interface GetExperimentResultsResponse {
  readonly reports?: [];
  readonly resultsData?: [];
  readonly timestamps?: [];
}

export interface GetFeatureRequest {
  readonly feature: string;
  readonly project: string;
}

export interface GetFeatureResponse {
  readonly feature: Feature;
}

export interface GetLaunchRequest {
  readonly launch: string;
  readonly project: string;
}

export interface GetLaunchResponse {
  readonly launch?: Launch;
}

export interface GetProjectRequest {
  readonly project: string;
}

export interface GetProjectResponse {
  readonly project: Project;
}

export interface InternalServerException {
  readonly message?: string;
}

export interface Launch {
  readonly arn: string;
  readonly createdTime: Date;
  readonly description?: string;
  readonly execution?: LaunchExecution;
  readonly groups?: [];
  readonly lastUpdatedTime: Date;
  readonly metricMonitors?: [];
  readonly name: string;
  readonly project?: string;
  readonly randomizationSalt?: string;
  readonly scheduledSplitsDefinition?: ScheduledSplitsLaunchDefinition;
  readonly status: string;
  readonly statusReason?: string;
  readonly tags?: {[key: string]: any};
  readonly type: string;
}

export interface LaunchExecution {
  readonly endedTime?: Date;
  readonly startedTime?: Date;
}

export interface LaunchGroup {
  readonly description?: string;
  readonly featureVariations: {[key: string]: any};
  readonly name: string;
}

export interface LaunchGroupConfig {
  readonly description?: string;
  readonly feature: string;
  readonly name: string;
  readonly variation: string;
}

export interface ListExperimentsRequest {
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly project: string;
}

export interface ListExperimentsResponse {
  readonly experiments?: [];
  readonly nextToken?: string;
}

export interface ListFeaturesRequest {
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly project: string;
}

export interface ListFeaturesResponse {
  readonly features?: [];
  readonly nextToken?: string;
}

export interface ListLaunchesRequest {
  readonly maxResults?: number;
  readonly nextToken?: string;
  readonly project: string;
}

export interface ListLaunchesResponse {
  readonly launches?: [];
  readonly nextToken?: string;
}

export interface ListProjectsRequest {
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListProjectsResponse {
  readonly nextToken?: string;
  readonly projects?: [];
}

export interface ListTagsForResourceRequest {
  readonly resourceArn: string;
}

export interface ListTagsForResourceResponse {
  readonly tags?: {[key: string]: any};
}

export interface MetricDefinition {
  readonly entityIdKey?: string;
  readonly eventPattern?: string;
  readonly name?: string;
  readonly unitLabel?: string;
  readonly valueKey?: string;
}

export interface MetricDefinitionConfig {
  readonly entityIdKey?: string;
  readonly eventPattern?: string;
  readonly name?: string;
  readonly unitLabel?: string;
  readonly valueKey?: string;
}

export interface MetricGoal {
  readonly desiredChange?: string;
  readonly metricDefinition: MetricDefinition;
}

export interface MetricGoalConfig {
  readonly desiredChange?: string;
  readonly metricDefinition: MetricDefinitionConfig;
}

export interface MetricMonitor {
  readonly metricDefinition: MetricDefinition;
}

export interface MetricMonitorConfig {
  readonly metricDefinition: MetricDefinitionConfig;
}

export interface OnlineAbConfig {
  readonly controlTreatmentName?: string;
  readonly treatmentWeights?: {[key: string]: any};
}

export interface OnlineAbDefinition {
  readonly controlTreatmentName?: string;
  readonly treatmentWeights?: {[key: string]: any};
}

export interface Project {
  readonly activeExperimentCount?: number;
  readonly activeLaunchCount?: number;
  readonly arn: string;
  readonly createdTime: Date;
  readonly dataDelivery?: ProjectDataDelivery;
  readonly description?: string;
  readonly experimentCount?: number;
  readonly featureCount?: number;
  readonly lastUpdatedTime: Date;
  readonly launchCount?: number;
  readonly name: string;
  readonly status: string;
  readonly tags?: {[key: string]: any};
}

export interface ProjectDataDelivery {
  readonly cloudWatchLogs?: CloudWatchLogsDestination;
  readonly s3Destination?: S3Destination;
}

export interface ProjectDataDeliveryConfig {
  readonly cloudWatchLogs?: CloudWatchLogsDestinationConfig;
  readonly s3Destination?: S3DestinationConfig;
}

export interface ProjectSummary {
  readonly activeExperimentCount?: number;
  readonly activeLaunchCount?: number;
  readonly arn: string;
  readonly createdTime: Date;
  readonly description?: string;
  readonly experimentCount?: number;
  readonly featureCount?: number;
  readonly lastUpdatedTime: Date;
  readonly launchCount?: number;
  readonly name: string;
  readonly status: string;
  readonly tags?: {[key: string]: any};
}

export interface PutProjectEventsRequest {
  readonly events: [];
  readonly project: string;
}

export interface PutProjectEventsResponse {
  readonly eventResults?: [];
  readonly failedEventCount?: number;
}

export interface PutProjectEventsResultEntry {
  readonly errorCode?: string;
  readonly errorMessage?: string;
  readonly eventId?: string;
}

export interface ResourceNotFoundException {
  readonly message?: string;
  readonly resourceId?: string;
  readonly resourceType?: string;
}

export interface S3Destination {
  readonly bucket?: string;
  readonly prefix?: string;
}

export interface S3DestinationConfig {
  readonly bucket?: string;
  readonly prefix?: string;
}

export interface ScheduledSplit {
  readonly groupWeights?: {[key: string]: any};
  readonly startTime: Date;
}

export interface ScheduledSplitConfig {
  readonly groupWeights: {[key: string]: any};
  readonly startTime: Date;
}

export interface ScheduledSplitsLaunchConfig {
  readonly steps: [];
}

export interface ScheduledSplitsLaunchDefinition {
  readonly steps?: [];
}

export interface ServiceQuotaExceededException {
  readonly message?: string;
  readonly quotaCode?: string;
  readonly resourceId?: string;
  readonly resourceType?: string;
  readonly serviceCode?: string;
}

export interface ServiceUnavailableException {
  readonly message?: string;
}

export interface StartExperimentRequest {
  readonly analysisCompleteTime: Date;
  readonly experiment: string;
  readonly project: string;
}

export interface StartExperimentResponse {
  readonly startedTime?: Date;
}

export interface StartLaunchRequest {
  readonly launch: string;
  readonly project: string;
}

export interface StartLaunchResponse {
  readonly launch: Launch;
}

export interface StopExperimentRequest {
  readonly desiredState?: string;
  readonly experiment: string;
  readonly project: string;
  readonly reason?: string;
}

export interface StopExperimentResponse {
  readonly endedTime?: Date;
}

export interface StopLaunchRequest {
  readonly desiredState?: string;
  readonly launch: string;
  readonly project: string;
  readonly reason?: string;
}

export interface StopLaunchResponse {
  readonly endedTime?: Date;
}

export interface TagResourceRequest {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

export interface TagResourceResponse {
}

export interface ThrottlingException {
  readonly message?: string;
  readonly quotaCode?: string;
  readonly serviceCode?: string;
}

export interface Treatment {
  readonly description?: string;
  readonly featureVariations?: {[key: string]: any};
  readonly name: string;
}

export interface TreatmentConfig {
  readonly description?: string;
  readonly feature: string;
  readonly name: string;
  readonly variation: string;
}

export interface UntagResourceRequest {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface UntagResourceResponse {
}

export interface UpdateExperimentRequest {
  readonly description?: string;
  readonly experiment: string;
  readonly metricGoals?: [];
  readonly onlineAbConfig?: OnlineAbConfig;
  readonly project: string;
  readonly randomizationSalt?: string;
  readonly samplingRate?: number;
  readonly treatments?: [];
}

export interface UpdateExperimentResponse {
  readonly experiment: Experiment;
}

export interface UpdateFeatureRequest {
  readonly addOrUpdateVariations?: [];
  readonly defaultVariation?: string;
  readonly description?: string;
  readonly entityOverrides?: {[key: string]: any};
  readonly evaluationStrategy?: string;
  readonly feature: string;
  readonly project: string;
  readonly removeVariations?: [];
}

export interface UpdateFeatureResponse {
  readonly feature: Feature;
}

export interface UpdateLaunchRequest {
  readonly description?: string;
  readonly groups?: [];
  readonly launch: string;
  readonly metricMonitors?: [];
  readonly project: string;
  readonly randomizationSalt?: string;
  readonly scheduledSplitsConfig?: ScheduledSplitsLaunchConfig;
}

export interface UpdateLaunchResponse {
  readonly launch: Launch;
}

export interface UpdateProjectDataDeliveryRequest {
  readonly cloudWatchLogs?: CloudWatchLogsDestinationConfig;
  readonly project: string;
  readonly s3Destination?: S3DestinationConfig;
}

export interface UpdateProjectDataDeliveryResponse {
  readonly project: Project;
}

export interface UpdateProjectRequest {
  readonly description?: string;
  readonly project: string;
}

export interface UpdateProjectResponse {
  readonly project: Project;
}

export interface ValidationException {
  readonly fieldList?: [];
  readonly message?: string;
  readonly reason?: string;
}

export interface ValidationExceptionField {
  readonly message: string;
  readonly name: string;
}

export interface VariableValue {
  readonly boolValue?: boolean;
  readonly doubleValue?: unknown;
  readonly longValue?: number;
  readonly stringValue?: string;
}

export interface Variation {
  readonly name?: string;
  readonly value?: VariableValue;
}

export interface VariationConfig {
  readonly name: string;
  readonly value: VariableValue;
}


