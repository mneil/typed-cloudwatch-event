/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CreateHttpNamespace {
  readonly Name: string;
  readonly CreatorRequestId: string;
  readonly Description: string;
  readonly Tags: [];
}
export interface CreatePrivateDnsNamespace {
  readonly Name: string;
  readonly CreatorRequestId: string;
  readonly Description: string;
  readonly Vpc: string;
  readonly Tags: [];
  readonly Properties: PrivateDnsNamespaceProperties;
}
export interface CreatePublicDnsNamespace {
  readonly Name: string;
  readonly CreatorRequestId: string;
  readonly Description: string;
  readonly Tags: [];
  readonly Properties: PublicDnsNamespaceProperties;
}
export interface CreateService {
  readonly Name: string;
  readonly NamespaceId: string;
  readonly CreatorRequestId: string;
  readonly Description: string;
  readonly DnsConfig: DnsConfig;
  readonly HealthCheckConfig: HealthCheckConfig;
  readonly HealthCheckCustomConfig: HealthCheckCustomConfig;
  readonly Tags: [];
  readonly Type: string;
}
export interface DeleteNamespace {
  readonly Id: string;
}
export interface DeleteService {
  readonly Id: string;
}
export interface DeregisterInstance {
  readonly ServiceId: string;
  readonly InstanceId: string;
}
export interface DiscoverInstances {
  readonly NamespaceName: string;
  readonly ServiceName: string;
  readonly MaxResults: number;
  readonly QueryParameters: {[key: string]: any};
  readonly OptionalParameters: {[key: string]: any};
  readonly HealthStatus: string;
}
export interface GetInstance {
  readonly ServiceId: string;
  readonly InstanceId: string;
}
export interface GetInstancesHealthStatus {
  readonly ServiceId: string;
  readonly Instances: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface GetNamespace {
  readonly Id: string;
}
export interface GetOperation {
  readonly OperationId: string;
}
export interface GetService {
  readonly Id: string;
}
export interface ListInstances {
  readonly ServiceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListNamespaces {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly Filters: [];
}
export interface ListOperations {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly Filters: [];
}
export interface ListServices {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly Filters: [];
}
export interface ListTagsForResource {
  readonly ResourceARN: string;
}
export interface RegisterInstance {
  readonly ServiceId: string;
  readonly InstanceId: string;
  readonly CreatorRequestId: string;
  readonly Attributes: {[key: string]: any};
}
export interface TagResource {
  readonly ResourceARN: string;
  readonly Tags: [];
}
export interface UntagResource {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}
export interface UpdateHttpNamespace {
  readonly Id: string;
  readonly UpdaterRequestId: string;
  readonly Namespace: HttpNamespaceChange;
}
export interface UpdateInstanceCustomHealthStatus {
  readonly ServiceId: string;
  readonly InstanceId: string;
  readonly Status: string;
}
export interface UpdatePrivateDnsNamespace {
  readonly Id: string;
  readonly UpdaterRequestId: string;
  readonly Namespace: PrivateDnsNamespaceChange;
}
export interface UpdatePublicDnsNamespace {
  readonly Id: string;
  readonly UpdaterRequestId: string;
  readonly Namespace: PublicDnsNamespaceChange;
}
export interface UpdateService {
  readonly Id: string;
  readonly Service: ServiceChange;
}



interface CreateHttpNamespaceRequest {
  readonly Name: string;
  readonly CreatorRequestId: string;
  readonly Description: string;
  readonly Tags: [];
}

interface CreateHttpNamespaceResponse {
  readonly OperationId: string;
}

interface CreatePrivateDnsNamespaceRequest {
  readonly Name: string;
  readonly CreatorRequestId: string;
  readonly Description: string;
  readonly Vpc: string;
  readonly Tags: [];
  readonly Properties: PrivateDnsNamespaceProperties;
}

interface CreatePrivateDnsNamespaceResponse {
  readonly OperationId: string;
}

interface CreatePublicDnsNamespaceRequest {
  readonly Name: string;
  readonly CreatorRequestId: string;
  readonly Description: string;
  readonly Tags: [];
  readonly Properties: PublicDnsNamespaceProperties;
}

interface CreatePublicDnsNamespaceResponse {
  readonly OperationId: string;
}

interface CreateServiceRequest {
  readonly Name: string;
  readonly NamespaceId: string;
  readonly CreatorRequestId: string;
  readonly Description: string;
  readonly DnsConfig: DnsConfig;
  readonly HealthCheckConfig: HealthCheckConfig;
  readonly HealthCheckCustomConfig: HealthCheckCustomConfig;
  readonly Tags: [];
  readonly Type: string;
}

interface CreateServiceResponse {
  readonly Service: Service;
}

interface CustomHealthNotFound {
  readonly Message: string;
}

interface DeleteNamespaceRequest {
  readonly Id: string;
}

interface DeleteNamespaceResponse {
  readonly OperationId: string;
}

interface DeleteServiceRequest {
  readonly Id: string;
}

interface DeleteServiceResponse {
}

interface DeregisterInstanceRequest {
  readonly ServiceId: string;
  readonly InstanceId: string;
}

interface DeregisterInstanceResponse {
  readonly OperationId: string;
}

interface DiscoverInstancesRequest {
  readonly NamespaceName: string;
  readonly ServiceName: string;
  readonly MaxResults: number;
  readonly QueryParameters: {[key: string]: any};
  readonly OptionalParameters: {[key: string]: any};
  readonly HealthStatus: string;
}

interface DiscoverInstancesResponse {
  readonly Instances: [];
}

interface DnsConfig {
  readonly NamespaceId: string;
  readonly RoutingPolicy: string;
  readonly DnsRecords: [];
}

interface DnsConfigChange {
  readonly DnsRecords: [];
}

interface DnsProperties {
  readonly HostedZoneId: string;
  readonly SOA: SOA;
}

interface DnsRecord {
  readonly Type: string;
  readonly TTL: number;
}

interface DuplicateRequest {
  readonly Message: string;
  readonly DuplicateOperationId: string;
}

interface GetInstanceRequest {
  readonly ServiceId: string;
  readonly InstanceId: string;
}

interface GetInstanceResponse {
  readonly Instance: Instance;
}

interface GetInstancesHealthStatusRequest {
  readonly ServiceId: string;
  readonly Instances: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface GetInstancesHealthStatusResponse {
  readonly Status: {[key: string]: any};
  readonly NextToken: string;
}

interface GetNamespaceRequest {
  readonly Id: string;
}

interface GetNamespaceResponse {
  readonly Namespace: Namespace;
}

interface GetOperationRequest {
  readonly OperationId: string;
}

interface GetOperationResponse {
  readonly Operation: Operation;
}

interface GetServiceRequest {
  readonly Id: string;
}

interface GetServiceResponse {
  readonly Service: Service;
}

interface HealthCheckConfig {
  readonly Type: string;
  readonly ResourcePath: string;
  readonly FailureThreshold: number;
}

interface HealthCheckCustomConfig {
  readonly FailureThreshold: number;
}

interface HttpInstanceSummary {
  readonly InstanceId: string;
  readonly NamespaceName: string;
  readonly ServiceName: string;
  readonly HealthStatus: string;
  readonly Attributes: {[key: string]: any};
}

interface HttpNamespaceChange {
  readonly Description: string;
}

interface HttpProperties {
  readonly HttpName: string;
}

interface Instance {
  readonly Id: string;
  readonly CreatorRequestId: string;
  readonly Attributes: {[key: string]: any};
}

interface InstanceNotFound {
  readonly Message: string;
}

interface InstanceSummary {
  readonly Id: string;
  readonly Attributes: {[key: string]: any};
}

interface InvalidInput {
  readonly Message: string;
}

interface ListInstancesRequest {
  readonly ServiceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListInstancesResponse {
  readonly Instances: [];
  readonly NextToken: string;
}

interface ListNamespacesRequest {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly Filters: [];
}

interface ListNamespacesResponse {
  readonly Namespaces: [];
  readonly NextToken: string;
}

interface ListOperationsRequest {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly Filters: [];
}

interface ListOperationsResponse {
  readonly Operations: [];
  readonly NextToken: string;
}

interface ListServicesRequest {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly Filters: [];
}

interface ListServicesResponse {
  readonly Services: [];
  readonly NextToken: string;
}

interface ListTagsForResourceRequest {
  readonly ResourceARN: string;
}

interface ListTagsForResourceResponse {
  readonly Tags: [];
}

interface Namespace {
  readonly Id: string;
  readonly Arn: string;
  readonly Name: string;
  readonly Type: string;
  readonly Description: string;
  readonly ServiceCount: number;
  readonly Properties: NamespaceProperties;
  readonly CreateDate: Date;
  readonly CreatorRequestId: string;
}

interface NamespaceAlreadyExists {
  readonly Message: string;
  readonly CreatorRequestId: string;
  readonly NamespaceId: string;
}

interface NamespaceFilter {
  readonly Name: string;
  readonly Values: [];
  readonly Condition: string;
}

interface NamespaceNotFound {
  readonly Message: string;
}

interface NamespaceProperties {
  readonly DnsProperties: DnsProperties;
  readonly HttpProperties: HttpProperties;
}

interface NamespaceSummary {
  readonly Id: string;
  readonly Arn: string;
  readonly Name: string;
  readonly Type: string;
  readonly Description: string;
  readonly ServiceCount: number;
  readonly Properties: NamespaceProperties;
  readonly CreateDate: Date;
}

interface Operation {
  readonly Id: string;
  readonly Type: string;
  readonly Status: string;
  readonly ErrorMessage: string;
  readonly ErrorCode: string;
  readonly CreateDate: Date;
  readonly UpdateDate: Date;
  readonly Targets: {[key: string]: any};
}

interface OperationFilter {
  readonly Name: string;
  readonly Values: [];
  readonly Condition: string;
}

interface OperationNotFound {
  readonly Message: string;
}

interface OperationSummary {
  readonly Id: string;
  readonly Status: string;
}

interface PrivateDnsNamespaceChange {
  readonly Description: string;
  readonly Properties: PrivateDnsNamespacePropertiesChange;
}

interface PrivateDnsNamespaceProperties {
  readonly DnsProperties: PrivateDnsPropertiesMutable;
}

interface PrivateDnsNamespacePropertiesChange {
  readonly DnsProperties: PrivateDnsPropertiesMutableChange;
}

interface PrivateDnsPropertiesMutable {
  readonly SOA: SOA;
}

interface PrivateDnsPropertiesMutableChange {
  readonly SOA: SOAChange;
}

interface PublicDnsNamespaceChange {
  readonly Description: string;
  readonly Properties: PublicDnsNamespacePropertiesChange;
}

interface PublicDnsNamespaceProperties {
  readonly DnsProperties: PublicDnsPropertiesMutable;
}

interface PublicDnsNamespacePropertiesChange {
  readonly DnsProperties: PublicDnsPropertiesMutableChange;
}

interface PublicDnsPropertiesMutable {
  readonly SOA: SOA;
}

interface PublicDnsPropertiesMutableChange {
  readonly SOA: SOAChange;
}

interface RegisterInstanceRequest {
  readonly ServiceId: string;
  readonly InstanceId: string;
  readonly CreatorRequestId: string;
  readonly Attributes: {[key: string]: any};
}

interface RegisterInstanceResponse {
  readonly OperationId: string;
}

interface RequestLimitExceeded {
  readonly Message: string;
}

interface ResourceInUse {
  readonly Message: string;
}

interface ResourceLimitExceeded {
  readonly Message: string;
}

interface ResourceNotFoundException {
  readonly Message: string;
}

interface SOA {
  readonly TTL: number;
}

interface SOAChange {
  readonly TTL: number;
}

interface Service {
  readonly Id: string;
  readonly Arn: string;
  readonly Name: string;
  readonly NamespaceId: string;
  readonly Description: string;
  readonly InstanceCount: number;
  readonly DnsConfig: DnsConfig;
  readonly Type: string;
  readonly HealthCheckConfig: HealthCheckConfig;
  readonly HealthCheckCustomConfig: HealthCheckCustomConfig;
  readonly CreateDate: Date;
  readonly CreatorRequestId: string;
}

interface ServiceAlreadyExists {
  readonly Message: string;
  readonly CreatorRequestId: string;
  readonly ServiceId: string;
}

interface ServiceChange {
  readonly Description: string;
  readonly DnsConfig: DnsConfigChange;
  readonly HealthCheckConfig: HealthCheckConfig;
}

interface ServiceFilter {
  readonly Name: string;
  readonly Values: [];
  readonly Condition: string;
}

interface ServiceNotFound {
  readonly Message: string;
}

interface ServiceSummary {
  readonly Id: string;
  readonly Arn: string;
  readonly Name: string;
  readonly Type: string;
  readonly Description: string;
  readonly InstanceCount: number;
  readonly DnsConfig: DnsConfig;
  readonly HealthCheckConfig: HealthCheckConfig;
  readonly HealthCheckCustomConfig: HealthCheckCustomConfig;
  readonly CreateDate: Date;
}

interface Tag {
  readonly Key: string;
  readonly Value: string;
}

interface TagResourceRequest {
  readonly ResourceARN: string;
  readonly Tags: [];
}

interface TagResourceResponse {
}

interface TooManyTagsException {
  readonly Message: string;
  readonly ResourceName: string;
}

interface UntagResourceRequest {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}

interface UntagResourceResponse {
}

interface UpdateHttpNamespaceRequest {
  readonly Id: string;
  readonly UpdaterRequestId: string;
  readonly Namespace: HttpNamespaceChange;
}

interface UpdateHttpNamespaceResponse {
  readonly OperationId: string;
}

interface UpdateInstanceCustomHealthStatusRequest {
  readonly ServiceId: string;
  readonly InstanceId: string;
  readonly Status: string;
}

interface UpdatePrivateDnsNamespaceRequest {
  readonly Id: string;
  readonly UpdaterRequestId: string;
  readonly Namespace: PrivateDnsNamespaceChange;
}

interface UpdatePrivateDnsNamespaceResponse {
  readonly OperationId: string;
}

interface UpdatePublicDnsNamespaceRequest {
  readonly Id: string;
  readonly UpdaterRequestId: string;
  readonly Namespace: PublicDnsNamespaceChange;
}

interface UpdatePublicDnsNamespaceResponse {
  readonly OperationId: string;
}

interface UpdateServiceRequest {
  readonly Id: string;
  readonly Service: ServiceChange;
}

interface UpdateServiceResponse {
  readonly OperationId: string;
}

