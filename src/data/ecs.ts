/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CreateCapacityProvider {
  readonly name: string;
  readonly autoScalingGroupProvider: AutoScalingGroupProvider;
  readonly tags?: [];
}

export interface CreateCluster {
  readonly clusterName?: string;
  readonly tags?: [];
  readonly settings?: [];
  readonly configuration?: ClusterConfiguration;
  readonly capacityProviders?: [];
  readonly defaultCapacityProviderStrategy?: [];
}

export interface CreateService {
  readonly cluster?: string;
  readonly serviceName: string;
  readonly taskDefinition?: string;
  readonly loadBalancers?: [];
  readonly serviceRegistries?: [];
  readonly desiredCount?: number;
  readonly clientToken?: string;
  readonly launchType?: string;
  readonly capacityProviderStrategy?: [];
  readonly platformVersion?: string;
  readonly role?: string;
  readonly deploymentConfiguration?: DeploymentConfiguration;
  readonly placementConstraints?: [];
  readonly placementStrategy?: [];
  readonly networkConfiguration?: NetworkConfiguration;
  readonly healthCheckGracePeriodSeconds?: number;
  readonly schedulingStrategy?: string;
  readonly deploymentController?: DeploymentController;
  readonly tags?: [];
  readonly enableECSManagedTags?: boolean;
  readonly propagateTags?: string;
  readonly enableExecuteCommand?: boolean;
}

export interface CreateTaskSet {
  readonly service: string;
  readonly cluster: string;
  readonly externalId?: string;
  readonly taskDefinition: string;
  readonly networkConfiguration?: NetworkConfiguration;
  readonly loadBalancers?: [];
  readonly serviceRegistries?: [];
  readonly launchType?: string;
  readonly capacityProviderStrategy?: [];
  readonly platformVersion?: string;
  readonly scale?: Scale;
  readonly clientToken?: string;
  readonly tags?: [];
}

export interface DeleteAccountSetting {
  readonly name: string;
  readonly principalArn?: string;
}

export interface DeleteAttributes {
  readonly cluster?: string;
  readonly attributes: [];
}

export interface DeleteCapacityProvider {
  readonly capacityProvider: string;
}

export interface DeleteCluster {
  readonly cluster: string;
}

export interface DeleteService {
  readonly cluster?: string;
  readonly service: string;
  readonly force?: boolean;
}

export interface DeleteTaskSet {
  readonly cluster: string;
  readonly service: string;
  readonly taskSet: string;
  readonly force?: boolean;
}

export interface DeregisterContainerInstance {
  readonly cluster?: string;
  readonly containerInstance: string;
  readonly force?: boolean;
}

export interface DeregisterTaskDefinition {
  readonly taskDefinition: string;
}

export interface DescribeCapacityProviders {
  readonly capacityProviders?: [];
  readonly include?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface DescribeClusters {
  readonly clusters?: [];
  readonly include?: [];
}

export interface DescribeContainerInstances {
  readonly cluster?: string;
  readonly containerInstances: [];
  readonly include?: [];
}

export interface DescribeServices {
  readonly cluster?: string;
  readonly services: [];
  readonly include?: [];
}

export interface DescribeTaskDefinition {
  readonly taskDefinition: string;
  readonly include?: [];
}

export interface DescribeTaskSets {
  readonly cluster: string;
  readonly service: string;
  readonly taskSets?: [];
  readonly include?: [];
}

export interface DescribeTasks {
  readonly cluster?: string;
  readonly tasks: [];
  readonly include?: [];
}

export interface DiscoverPollEndpoint {
  readonly containerInstance?: string;
  readonly cluster?: string;
}

export interface ExecuteCommand {
  readonly cluster?: string;
  readonly container?: string;
  readonly command: string;
  readonly interactive: boolean;
  readonly task: string;
}

export interface ListAccountSettings {
  readonly name?: string;
  readonly value?: string;
  readonly principalArn?: string;
  readonly effectiveSettings?: boolean;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListAttributes {
  readonly cluster?: string;
  readonly targetType: string;
  readonly attributeName?: string;
  readonly attributeValue?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListClusters {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListContainerInstances {
  readonly cluster?: string;
  readonly filter?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly status?: string;
}

export interface ListServices {
  readonly cluster?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly launchType?: string;
  readonly schedulingStrategy?: string;
}

export interface ListTagsForResource {
  readonly resourceArn: string;
}

export interface ListTaskDefinitionFamilies {
  readonly familyPrefix?: string;
  readonly status?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListTaskDefinitions {
  readonly familyPrefix?: string;
  readonly status?: string;
  readonly sort?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListTasks {
  readonly cluster?: string;
  readonly containerInstance?: string;
  readonly family?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly startedBy?: string;
  readonly serviceName?: string;
  readonly desiredStatus?: string;
  readonly launchType?: string;
}

export interface PutAccountSetting {
  readonly name: string;
  readonly value: string;
  readonly principalArn?: string;
}

export interface PutAccountSettingDefault {
  readonly name: string;
  readonly value: string;
}

export interface PutAttributes {
  readonly cluster?: string;
  readonly attributes: [];
}

export interface PutClusterCapacityProviders {
  readonly cluster: string;
  readonly capacityProviders: [];
  readonly defaultCapacityProviderStrategy: [];
}

export interface RegisterContainerInstance {
  readonly cluster?: string;
  readonly instanceIdentityDocument?: string;
  readonly instanceIdentityDocumentSignature?: string;
  readonly totalResources?: [];
  readonly versionInfo?: VersionInfo;
  readonly containerInstanceArn?: string;
  readonly attributes?: [];
  readonly platformDevices?: [];
  readonly tags?: [];
}

export interface RegisterTaskDefinition {
  readonly family: string;
  readonly taskRoleArn?: string;
  readonly executionRoleArn?: string;
  readonly networkMode?: string;
  readonly containerDefinitions: [];
  readonly volumes?: [];
  readonly placementConstraints?: [];
  readonly requiresCompatibilities?: [];
  readonly cpu?: string;
  readonly memory?: string;
  readonly tags?: [];
  readonly pidMode?: string;
  readonly ipcMode?: string;
  readonly proxyConfiguration?: ProxyConfiguration;
  readonly inferenceAccelerators?: [];
  readonly ephemeralStorage?: EphemeralStorage;
  readonly runtimePlatform?: RuntimePlatform;
}

export interface RunTask {
  readonly capacityProviderStrategy?: [];
  readonly cluster?: string;
  readonly count?: number;
  readonly enableECSManagedTags?: boolean;
  readonly enableExecuteCommand?: boolean;
  readonly group?: string;
  readonly launchType?: string;
  readonly networkConfiguration?: NetworkConfiguration;
  readonly overrides?: TaskOverride;
  readonly placementConstraints?: [];
  readonly placementStrategy?: [];
  readonly platformVersion?: string;
  readonly propagateTags?: string;
  readonly referenceId?: string;
  readonly startedBy?: string;
  readonly tags?: [];
  readonly taskDefinition: string;
}

export interface StartTask {
  readonly cluster?: string;
  readonly containerInstances: [];
  readonly enableECSManagedTags?: boolean;
  readonly enableExecuteCommand?: boolean;
  readonly group?: string;
  readonly networkConfiguration?: NetworkConfiguration;
  readonly overrides?: TaskOverride;
  readonly propagateTags?: string;
  readonly referenceId?: string;
  readonly startedBy?: string;
  readonly tags?: [];
  readonly taskDefinition: string;
}

export interface StopTask {
  readonly cluster?: string;
  readonly task: string;
  readonly reason?: string;
}

export interface SubmitAttachmentStateChanges {
  readonly cluster?: string;
  readonly attachments: [];
}

export interface SubmitContainerStateChange {
  readonly cluster?: string;
  readonly task?: string;
  readonly containerName?: string;
  readonly runtimeId?: string;
  readonly status?: string;
  readonly exitCode?: number;
  readonly reason?: string;
  readonly networkBindings?: [];
}

export interface SubmitTaskStateChange {
  readonly cluster?: string;
  readonly task?: string;
  readonly status?: string;
  readonly reason?: string;
  readonly containers?: [];
  readonly attachments?: [];
  readonly managedAgents?: [];
  readonly pullStartedAt?: Date;
  readonly pullStoppedAt?: Date;
  readonly executionStoppedAt?: Date;
}

export interface TagResource {
  readonly resourceArn: string;
  readonly tags: [];
}

export interface UntagResource {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface UpdateCapacityProvider {
  readonly name: string;
  readonly autoScalingGroupProvider: AutoScalingGroupProviderUpdate;
}

export interface UpdateCluster {
  readonly cluster: string;
  readonly settings?: [];
  readonly configuration?: ClusterConfiguration;
}

export interface UpdateClusterSettings {
  readonly cluster: string;
  readonly settings: [];
}

export interface UpdateContainerAgent {
  readonly cluster?: string;
  readonly containerInstance: string;
}

export interface UpdateContainerInstancesState {
  readonly cluster?: string;
  readonly containerInstances: [];
  readonly status: string;
}

export interface UpdateService {
  readonly cluster?: string;
  readonly service: string;
  readonly desiredCount?: number;
  readonly taskDefinition?: string;
  readonly capacityProviderStrategy?: [];
  readonly deploymentConfiguration?: DeploymentConfiguration;
  readonly networkConfiguration?: NetworkConfiguration;
  readonly placementConstraints?: [];
  readonly placementStrategy?: [];
  readonly platformVersion?: string;
  readonly forceNewDeployment?: boolean;
  readonly healthCheckGracePeriodSeconds?: number;
  readonly enableExecuteCommand?: boolean;
}

export interface UpdateServicePrimaryTaskSet {
  readonly cluster: string;
  readonly service: string;
  readonly primaryTaskSet: string;
}

export interface UpdateTaskSet {
  readonly cluster: string;
  readonly service: string;
  readonly taskSet: string;
  readonly scale: Scale;
}

export interface AccessDeniedException {
}

export interface Attachment {
  readonly id?: string;
  readonly type?: string;
  readonly status?: string;
  readonly details?: [];
}

export interface AttachmentStateChange {
  readonly attachmentArn: string;
  readonly status: string;
}

export interface Attribute {
  readonly name: string;
  readonly value?: string;
  readonly targetType?: string;
  readonly targetId?: string;
}

export interface AttributeLimitExceededException {
}

export interface AutoScalingGroupProvider {
  readonly autoScalingGroupArn: string;
  readonly managedScaling?: ManagedScaling;
  readonly managedTerminationProtection?: string;
}

export interface AutoScalingGroupProviderUpdate {
  readonly managedScaling?: ManagedScaling;
  readonly managedTerminationProtection?: string;
}

export interface AwsVpcConfiguration {
  readonly subnets: [];
  readonly securityGroups?: [];
  readonly assignPublicIp?: string;
}

export interface BlockedException {
}

export interface CapacityProvider {
  readonly capacityProviderArn?: string;
  readonly name?: string;
  readonly status?: string;
  readonly autoScalingGroupProvider?: AutoScalingGroupProvider;
  readonly updateStatus?: string;
  readonly updateStatusReason?: string;
  readonly tags?: [];
}

export interface CapacityProviderStrategyItem {
  readonly capacityProvider: string;
  readonly weight?: number;
  readonly base?: number;
}

export interface ClientException {
  readonly message?: string;
}

export interface Cluster {
  readonly clusterArn?: string;
  readonly clusterName?: string;
  readonly configuration?: ClusterConfiguration;
  readonly status?: string;
  readonly registeredContainerInstancesCount?: number;
  readonly runningTasksCount?: number;
  readonly pendingTasksCount?: number;
  readonly activeServicesCount?: number;
  readonly statistics?: [];
  readonly tags?: [];
  readonly settings?: [];
  readonly capacityProviders?: [];
  readonly defaultCapacityProviderStrategy?: [];
  readonly attachments?: [];
  readonly attachmentsStatus?: string;
}

export interface ClusterConfiguration {
  readonly executeCommandConfiguration?: ExecuteCommandConfiguration;
}

export interface ClusterContainsContainerInstancesException {
}

export interface ClusterContainsServicesException {
}

export interface ClusterContainsTasksException {
}

export interface ClusterNotFoundException {
}

export interface ClusterSetting {
  readonly name?: string;
  readonly value?: string;
}

export interface Container {
  readonly containerArn?: string;
  readonly taskArn?: string;
  readonly name?: string;
  readonly image?: string;
  readonly imageDigest?: string;
  readonly runtimeId?: string;
  readonly lastStatus?: string;
  readonly exitCode?: number;
  readonly reason?: string;
  readonly networkBindings?: [];
  readonly networkInterfaces?: [];
  readonly healthStatus?: string;
  readonly managedAgents?: [];
  readonly cpu?: string;
  readonly memory?: string;
  readonly memoryReservation?: string;
  readonly gpuIds?: [];
}

export interface ContainerDefinition {
  readonly name?: string;
  readonly image?: string;
  readonly repositoryCredentials?: RepositoryCredentials;
  readonly cpu?: number;
  readonly memory?: number;
  readonly memoryReservation?: number;
  readonly links?: [];
  readonly portMappings?: [];
  readonly essential?: boolean;
  readonly entryPoint?: [];
  readonly command?: [];
  readonly environment?: [];
  readonly environmentFiles?: [];
  readonly mountPoints?: [];
  readonly volumesFrom?: [];
  readonly linuxParameters?: LinuxParameters;
  readonly secrets?: [];
  readonly dependsOn?: [];
  readonly startTimeout?: number;
  readonly stopTimeout?: number;
  readonly hostname?: string;
  readonly user?: string;
  readonly workingDirectory?: string;
  readonly disableNetworking?: boolean;
  readonly privileged?: boolean;
  readonly readonlyRootFilesystem?: boolean;
  readonly dnsServers?: [];
  readonly dnsSearchDomains?: [];
  readonly extraHosts?: [];
  readonly dockerSecurityOptions?: [];
  readonly interactive?: boolean;
  readonly pseudoTerminal?: boolean;
  readonly dockerLabels?: {[key: string]: any};
  readonly ulimits?: [];
  readonly logConfiguration?: LogConfiguration;
  readonly healthCheck?: HealthCheck;
  readonly systemControls?: [];
  readonly resourceRequirements?: [];
  readonly firelensConfiguration?: FirelensConfiguration;
}

export interface ContainerDependency {
  readonly containerName: string;
  readonly condition: string;
}

export interface ContainerInstance {
  readonly containerInstanceArn?: string;
  readonly ec2InstanceId?: string;
  readonly capacityProviderName?: string;
  readonly version?: number;
  readonly versionInfo?: VersionInfo;
  readonly remainingResources?: [];
  readonly registeredResources?: [];
  readonly status?: string;
  readonly statusReason?: string;
  readonly agentConnected?: boolean;
  readonly runningTasksCount?: number;
  readonly pendingTasksCount?: number;
  readonly agentUpdateStatus?: string;
  readonly attributes?: [];
  readonly registeredAt?: Date;
  readonly attachments?: [];
  readonly tags?: [];
  readonly healthStatus?: ContainerInstanceHealthStatus;
}

export interface ContainerInstanceHealthStatus {
  readonly overallStatus?: string;
  readonly details?: [];
}

export interface ContainerOverride {
  readonly name?: string;
  readonly command?: [];
  readonly environment?: [];
  readonly environmentFiles?: [];
  readonly cpu?: number;
  readonly memory?: number;
  readonly memoryReservation?: number;
  readonly resourceRequirements?: [];
}

export interface ContainerStateChange {
  readonly containerName?: string;
  readonly imageDigest?: string;
  readonly runtimeId?: string;
  readonly exitCode?: number;
  readonly networkBindings?: [];
  readonly reason?: string;
  readonly status?: string;
}

export interface CreateCapacityProviderRequest {
  readonly name: string;
  readonly autoScalingGroupProvider: AutoScalingGroupProvider;
  readonly tags?: [];
}

export interface CreateCapacityProviderResponse {
  readonly capacityProvider?: CapacityProvider;
}

export interface CreateClusterRequest {
  readonly clusterName?: string;
  readonly tags?: [];
  readonly settings?: [];
  readonly configuration?: ClusterConfiguration;
  readonly capacityProviders?: [];
  readonly defaultCapacityProviderStrategy?: [];
}

export interface CreateClusterResponse {
  readonly cluster?: Cluster;
}

export interface CreateServiceRequest {
  readonly cluster?: string;
  readonly serviceName: string;
  readonly taskDefinition?: string;
  readonly loadBalancers?: [];
  readonly serviceRegistries?: [];
  readonly desiredCount?: number;
  readonly clientToken?: string;
  readonly launchType?: string;
  readonly capacityProviderStrategy?: [];
  readonly platformVersion?: string;
  readonly role?: string;
  readonly deploymentConfiguration?: DeploymentConfiguration;
  readonly placementConstraints?: [];
  readonly placementStrategy?: [];
  readonly networkConfiguration?: NetworkConfiguration;
  readonly healthCheckGracePeriodSeconds?: number;
  readonly schedulingStrategy?: string;
  readonly deploymentController?: DeploymentController;
  readonly tags?: [];
  readonly enableECSManagedTags?: boolean;
  readonly propagateTags?: string;
  readonly enableExecuteCommand?: boolean;
}

export interface CreateServiceResponse {
  readonly service?: Service;
}

export interface CreateTaskSetRequest {
  readonly service: string;
  readonly cluster: string;
  readonly externalId?: string;
  readonly taskDefinition: string;
  readonly networkConfiguration?: NetworkConfiguration;
  readonly loadBalancers?: [];
  readonly serviceRegistries?: [];
  readonly launchType?: string;
  readonly capacityProviderStrategy?: [];
  readonly platformVersion?: string;
  readonly scale?: Scale;
  readonly clientToken?: string;
  readonly tags?: [];
}

export interface CreateTaskSetResponse {
  readonly taskSet?: TaskSet;
}

export interface DeleteAccountSettingRequest {
  readonly name: string;
  readonly principalArn?: string;
}

export interface DeleteAccountSettingResponse {
  readonly setting?: Setting;
}

export interface DeleteAttributesRequest {
  readonly cluster?: string;
  readonly attributes: [];
}

export interface DeleteAttributesResponse {
  readonly attributes?: [];
}

export interface DeleteCapacityProviderRequest {
  readonly capacityProvider: string;
}

export interface DeleteCapacityProviderResponse {
  readonly capacityProvider?: CapacityProvider;
}

export interface DeleteClusterRequest {
  readonly cluster: string;
}

export interface DeleteClusterResponse {
  readonly cluster?: Cluster;
}

export interface DeleteServiceRequest {
  readonly cluster?: string;
  readonly service: string;
  readonly force?: boolean;
}

export interface DeleteServiceResponse {
  readonly service?: Service;
}

export interface DeleteTaskSetRequest {
  readonly cluster: string;
  readonly service: string;
  readonly taskSet: string;
  readonly force?: boolean;
}

export interface DeleteTaskSetResponse {
  readonly taskSet?: TaskSet;
}

export interface Deployment {
  readonly id?: string;
  readonly status?: string;
  readonly taskDefinition?: string;
  readonly desiredCount?: number;
  readonly pendingCount?: number;
  readonly runningCount?: number;
  readonly failedTasks?: number;
  readonly createdAt?: Date;
  readonly updatedAt?: Date;
  readonly capacityProviderStrategy?: [];
  readonly launchType?: string;
  readonly platformVersion?: string;
  readonly platformFamily?: string;
  readonly networkConfiguration?: NetworkConfiguration;
  readonly rolloutState?: string;
  readonly rolloutStateReason?: string;
}

export interface DeploymentCircuitBreaker {
  readonly enable: boolean;
  readonly rollback: boolean;
}

export interface DeploymentConfiguration {
  readonly deploymentCircuitBreaker?: DeploymentCircuitBreaker;
  readonly maximumPercent?: number;
  readonly minimumHealthyPercent?: number;
}

export interface DeploymentController {
  readonly type: string;
}

export interface DeregisterContainerInstanceRequest {
  readonly cluster?: string;
  readonly containerInstance: string;
  readonly force?: boolean;
}

export interface DeregisterContainerInstanceResponse {
  readonly containerInstance?: ContainerInstance;
}

export interface DeregisterTaskDefinitionRequest {
  readonly taskDefinition: string;
}

export interface DeregisterTaskDefinitionResponse {
  readonly taskDefinition?: TaskDefinition;
}

export interface DescribeCapacityProvidersRequest {
  readonly capacityProviders?: [];
  readonly include?: [];
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface DescribeCapacityProvidersResponse {
  readonly capacityProviders?: [];
  readonly failures?: [];
  readonly nextToken?: string;
}

export interface DescribeClustersRequest {
  readonly clusters?: [];
  readonly include?: [];
}

export interface DescribeClustersResponse {
  readonly clusters?: [];
  readonly failures?: [];
}

export interface DescribeContainerInstancesRequest {
  readonly cluster?: string;
  readonly containerInstances: [];
  readonly include?: [];
}

export interface DescribeContainerInstancesResponse {
  readonly containerInstances?: [];
  readonly failures?: [];
}

export interface DescribeServicesRequest {
  readonly cluster?: string;
  readonly services: [];
  readonly include?: [];
}

export interface DescribeServicesResponse {
  readonly services?: [];
  readonly failures?: [];
}

export interface DescribeTaskDefinitionRequest {
  readonly taskDefinition: string;
  readonly include?: [];
}

export interface DescribeTaskDefinitionResponse {
  readonly taskDefinition?: TaskDefinition;
  readonly tags?: [];
}

export interface DescribeTaskSetsRequest {
  readonly cluster: string;
  readonly service: string;
  readonly taskSets?: [];
  readonly include?: [];
}

export interface DescribeTaskSetsResponse {
  readonly taskSets?: [];
  readonly failures?: [];
}

export interface DescribeTasksRequest {
  readonly cluster?: string;
  readonly tasks: [];
  readonly include?: [];
}

export interface DescribeTasksResponse {
  readonly tasks?: [];
  readonly failures?: [];
}

export interface Device {
  readonly hostPath: string;
  readonly containerPath?: string;
  readonly permissions?: [];
}

export interface DiscoverPollEndpointRequest {
  readonly containerInstance?: string;
  readonly cluster?: string;
}

export interface DiscoverPollEndpointResponse {
  readonly endpoint?: string;
  readonly telemetryEndpoint?: string;
}

export interface DockerVolumeConfiguration {
  readonly scope?: string;
  readonly autoprovision?: boolean;
  readonly driver?: string;
  readonly driverOpts?: {[key: string]: any};
  readonly labels?: {[key: string]: any};
}

export interface EFSAuthorizationConfig {
  readonly accessPointId?: string;
  readonly iam?: string;
}

export interface EFSVolumeConfiguration {
  readonly fileSystemId: string;
  readonly rootDirectory?: string;
  readonly transitEncryption?: string;
  readonly transitEncryptionPort?: number;
  readonly authorizationConfig?: EFSAuthorizationConfig;
}

export interface EnvironmentFile {
  readonly value: string;
  readonly type: string;
}

export interface EphemeralStorage {
  readonly sizeInGiB: number;
}

export interface ExecuteCommandConfiguration {
  readonly kmsKeyId?: string;
  readonly logging?: string;
  readonly logConfiguration?: ExecuteCommandLogConfiguration;
}

export interface ExecuteCommandLogConfiguration {
  readonly cloudWatchLogGroupName?: string;
  readonly cloudWatchEncryptionEnabled?: boolean;
  readonly s3BucketName?: string;
  readonly s3EncryptionEnabled?: boolean;
  readonly s3KeyPrefix?: string;
}

export interface ExecuteCommandRequest {
  readonly cluster?: string;
  readonly container?: string;
  readonly command: string;
  readonly interactive: boolean;
  readonly task: string;
}

export interface ExecuteCommandResponse {
  readonly clusterArn?: string;
  readonly containerArn?: string;
  readonly containerName?: string;
  readonly interactive?: boolean;
  readonly session?: Session;
  readonly taskArn?: string;
}

export interface FSxWindowsFileServerAuthorizationConfig {
  readonly credentialsParameter: string;
  readonly domain: string;
}

export interface FSxWindowsFileServerVolumeConfiguration {
  readonly fileSystemId: string;
  readonly rootDirectory: string;
  readonly authorizationConfig: FSxWindowsFileServerAuthorizationConfig;
}

export interface Failure {
  readonly arn?: string;
  readonly reason?: string;
  readonly detail?: string;
}

export interface FirelensConfiguration {
  readonly type: string;
  readonly options?: {[key: string]: any};
}

export interface HealthCheck {
  readonly command: [];
  readonly interval?: number;
  readonly timeout?: number;
  readonly retries?: number;
  readonly startPeriod?: number;
}

export interface HostEntry {
  readonly hostname: string;
  readonly ipAddress: string;
}

export interface HostVolumeProperties {
  readonly sourcePath?: string;
}

export interface InferenceAccelerator {
  readonly deviceName: string;
  readonly deviceType: string;
}

export interface InferenceAcceleratorOverride {
  readonly deviceName?: string;
  readonly deviceType?: string;
}

export interface InstanceHealthCheckResult {
  readonly type?: string;
  readonly status?: string;
  readonly lastUpdated?: Date;
  readonly lastStatusChange?: Date;
}

export interface InvalidParameterException {
}

export interface KernelCapabilities {
  readonly add?: [];
  readonly drop?: [];
}

export interface KeyValuePair {
  readonly name?: string;
  readonly value?: string;
}

export interface LimitExceededException {
}

export interface LinuxParameters {
  readonly capabilities?: KernelCapabilities;
  readonly devices?: [];
  readonly initProcessEnabled?: boolean;
  readonly sharedMemorySize?: number;
  readonly tmpfs?: [];
  readonly maxSwap?: number;
  readonly swappiness?: number;
}

export interface ListAccountSettingsRequest {
  readonly name?: string;
  readonly value?: string;
  readonly principalArn?: string;
  readonly effectiveSettings?: boolean;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListAccountSettingsResponse {
  readonly settings?: [];
  readonly nextToken?: string;
}

export interface ListAttributesRequest {
  readonly cluster?: string;
  readonly targetType: string;
  readonly attributeName?: string;
  readonly attributeValue?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListAttributesResponse {
  readonly attributes?: [];
  readonly nextToken?: string;
}

export interface ListClustersRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListClustersResponse {
  readonly clusterArns?: [];
  readonly nextToken?: string;
}

export interface ListContainerInstancesRequest {
  readonly cluster?: string;
  readonly filter?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly status?: string;
}

export interface ListContainerInstancesResponse {
  readonly containerInstanceArns?: [];
  readonly nextToken?: string;
}

export interface ListServicesRequest {
  readonly cluster?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly launchType?: string;
  readonly schedulingStrategy?: string;
}

export interface ListServicesResponse {
  readonly serviceArns?: [];
  readonly nextToken?: string;
}

export interface ListTagsForResourceRequest {
  readonly resourceArn: string;
}

export interface ListTagsForResourceResponse {
  readonly tags?: [];
}

export interface ListTaskDefinitionFamiliesRequest {
  readonly familyPrefix?: string;
  readonly status?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListTaskDefinitionFamiliesResponse {
  readonly families?: [];
  readonly nextToken?: string;
}

export interface ListTaskDefinitionsRequest {
  readonly familyPrefix?: string;
  readonly status?: string;
  readonly sort?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListTaskDefinitionsResponse {
  readonly taskDefinitionArns?: [];
  readonly nextToken?: string;
}

export interface ListTasksRequest {
  readonly cluster?: string;
  readonly containerInstance?: string;
  readonly family?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly startedBy?: string;
  readonly serviceName?: string;
  readonly desiredStatus?: string;
  readonly launchType?: string;
}

export interface ListTasksResponse {
  readonly taskArns?: [];
  readonly nextToken?: string;
}

export interface LoadBalancer {
  readonly targetGroupArn?: string;
  readonly loadBalancerName?: string;
  readonly containerName?: string;
  readonly containerPort?: number;
}

export interface LogConfiguration {
  readonly logDriver: string;
  readonly options?: {[key: string]: any};
  readonly secretOptions?: [];
}

export interface ManagedAgent {
  readonly lastStartedAt?: Date;
  readonly name?: string;
  readonly reason?: string;
  readonly lastStatus?: string;
}

export interface ManagedAgentStateChange {
  readonly containerName: string;
  readonly managedAgentName: string;
  readonly status: string;
  readonly reason?: string;
}

export interface ManagedScaling {
  readonly status?: string;
  readonly targetCapacity?: number;
  readonly minimumScalingStepSize?: number;
  readonly maximumScalingStepSize?: number;
  readonly instanceWarmupPeriod?: number;
}

export interface MissingVersionException {
}

export interface MountPoint {
  readonly sourceVolume?: string;
  readonly containerPath?: string;
  readonly readOnly?: boolean;
}

export interface NetworkBinding {
  readonly bindIP?: string;
  readonly containerPort?: number;
  readonly hostPort?: number;
  readonly protocol?: string;
}

export interface NetworkConfiguration {
  readonly awsvpcConfiguration?: AwsVpcConfiguration;
}

export interface NetworkInterface {
  readonly attachmentId?: string;
  readonly privateIpv4Address?: string;
  readonly ipv6Address?: string;
}

export interface NoUpdateAvailableException {
}

export interface PlacementConstraint {
  readonly type?: string;
  readonly expression?: string;
}

export interface PlacementStrategy {
  readonly type?: string;
  readonly field?: string;
}

export interface PlatformDevice {
  readonly id: string;
  readonly type: string;
}

export interface PlatformTaskDefinitionIncompatibilityException {
}

export interface PlatformUnknownException {
}

export interface PortMapping {
  readonly containerPort?: number;
  readonly hostPort?: number;
  readonly protocol?: string;
}

export interface ProxyConfiguration {
  readonly type?: string;
  readonly containerName: string;
  readonly properties?: [];
}

export interface PutAccountSettingDefaultRequest {
  readonly name: string;
  readonly value: string;
}

export interface PutAccountSettingDefaultResponse {
  readonly setting?: Setting;
}

export interface PutAccountSettingRequest {
  readonly name: string;
  readonly value: string;
  readonly principalArn?: string;
}

export interface PutAccountSettingResponse {
  readonly setting?: Setting;
}

export interface PutAttributesRequest {
  readonly cluster?: string;
  readonly attributes: [];
}

export interface PutAttributesResponse {
  readonly attributes?: [];
}

export interface PutClusterCapacityProvidersRequest {
  readonly cluster: string;
  readonly capacityProviders: [];
  readonly defaultCapacityProviderStrategy: [];
}

export interface PutClusterCapacityProvidersResponse {
  readonly cluster?: Cluster;
}

export interface RegisterContainerInstanceRequest {
  readonly cluster?: string;
  readonly instanceIdentityDocument?: string;
  readonly instanceIdentityDocumentSignature?: string;
  readonly totalResources?: [];
  readonly versionInfo?: VersionInfo;
  readonly containerInstanceArn?: string;
  readonly attributes?: [];
  readonly platformDevices?: [];
  readonly tags?: [];
}

export interface RegisterContainerInstanceResponse {
  readonly containerInstance?: ContainerInstance;
}

export interface RegisterTaskDefinitionRequest {
  readonly family: string;
  readonly taskRoleArn?: string;
  readonly executionRoleArn?: string;
  readonly networkMode?: string;
  readonly containerDefinitions: [];
  readonly volumes?: [];
  readonly placementConstraints?: [];
  readonly requiresCompatibilities?: [];
  readonly cpu?: string;
  readonly memory?: string;
  readonly tags?: [];
  readonly pidMode?: string;
  readonly ipcMode?: string;
  readonly proxyConfiguration?: ProxyConfiguration;
  readonly inferenceAccelerators?: [];
  readonly ephemeralStorage?: EphemeralStorage;
  readonly runtimePlatform?: RuntimePlatform;
}

export interface RegisterTaskDefinitionResponse {
  readonly taskDefinition?: TaskDefinition;
  readonly tags?: [];
}

export interface RepositoryCredentials {
  readonly credentialsParameter: string;
}

export interface Resource {
  readonly name?: string;
  readonly type?: string;
  readonly doubleValue?: unknown;
  readonly longValue?: number;
  readonly integerValue?: number;
  readonly stringSetValue?: [];
}

export interface ResourceInUseException {
}

export interface ResourceNotFoundException {
}

export interface ResourceRequirement {
  readonly value: string;
  readonly type: string;
}

export interface RunTaskRequest {
  readonly capacityProviderStrategy?: [];
  readonly cluster?: string;
  readonly count?: number;
  readonly enableECSManagedTags?: boolean;
  readonly enableExecuteCommand?: boolean;
  readonly group?: string;
  readonly launchType?: string;
  readonly networkConfiguration?: NetworkConfiguration;
  readonly overrides?: TaskOverride;
  readonly placementConstraints?: [];
  readonly placementStrategy?: [];
  readonly platformVersion?: string;
  readonly propagateTags?: string;
  readonly referenceId?: string;
  readonly startedBy?: string;
  readonly tags?: [];
  readonly taskDefinition: string;
}

export interface RunTaskResponse {
  readonly tasks?: [];
  readonly failures?: [];
}

export interface RuntimePlatform {
  readonly cpuArchitecture?: string;
  readonly operatingSystemFamily?: string;
}

export interface Scale {
  readonly value?: unknown;
  readonly unit?: string;
}

export interface Secret {
  readonly name: string;
  readonly valueFrom: string;
}

export interface ServerException {
  readonly message?: string;
}

export interface Service {
  readonly serviceArn?: string;
  readonly serviceName?: string;
  readonly clusterArn?: string;
  readonly loadBalancers?: [];
  readonly serviceRegistries?: [];
  readonly status?: string;
  readonly desiredCount?: number;
  readonly runningCount?: number;
  readonly pendingCount?: number;
  readonly launchType?: string;
  readonly capacityProviderStrategy?: [];
  readonly platformVersion?: string;
  readonly platformFamily?: string;
  readonly taskDefinition?: string;
  readonly deploymentConfiguration?: DeploymentConfiguration;
  readonly taskSets?: [];
  readonly deployments?: [];
  readonly roleArn?: string;
  readonly events?: [];
  readonly createdAt?: Date;
  readonly placementConstraints?: [];
  readonly placementStrategy?: [];
  readonly networkConfiguration?: NetworkConfiguration;
  readonly healthCheckGracePeriodSeconds?: number;
  readonly schedulingStrategy?: string;
  readonly deploymentController?: DeploymentController;
  readonly tags?: [];
  readonly createdBy?: string;
  readonly enableECSManagedTags?: boolean;
  readonly propagateTags?: string;
  readonly enableExecuteCommand?: boolean;
}

export interface ServiceEvent {
  readonly id?: string;
  readonly createdAt?: Date;
  readonly message?: string;
}

export interface ServiceNotActiveException {
}

export interface ServiceNotFoundException {
}

export interface ServiceRegistry {
  readonly registryArn?: string;
  readonly port?: number;
  readonly containerName?: string;
  readonly containerPort?: number;
}

export interface Session {
  readonly sessionId?: string;
  readonly streamUrl?: string;
  readonly tokenValue?: string;
}

export interface Setting {
  readonly name?: string;
  readonly value?: string;
  readonly principalArn?: string;
}

export interface StartTaskRequest {
  readonly cluster?: string;
  readonly containerInstances: [];
  readonly enableECSManagedTags?: boolean;
  readonly enableExecuteCommand?: boolean;
  readonly group?: string;
  readonly networkConfiguration?: NetworkConfiguration;
  readonly overrides?: TaskOverride;
  readonly propagateTags?: string;
  readonly referenceId?: string;
  readonly startedBy?: string;
  readonly tags?: [];
  readonly taskDefinition: string;
}

export interface StartTaskResponse {
  readonly tasks?: [];
  readonly failures?: [];
}

export interface StopTaskRequest {
  readonly cluster?: string;
  readonly task: string;
  readonly reason?: string;
}

export interface StopTaskResponse {
  readonly task?: Task;
}

export interface SubmitAttachmentStateChangesRequest {
  readonly cluster?: string;
  readonly attachments: [];
}

export interface SubmitAttachmentStateChangesResponse {
  readonly acknowledgment?: string;
}

export interface SubmitContainerStateChangeRequest {
  readonly cluster?: string;
  readonly task?: string;
  readonly containerName?: string;
  readonly runtimeId?: string;
  readonly status?: string;
  readonly exitCode?: number;
  readonly reason?: string;
  readonly networkBindings?: [];
}

export interface SubmitContainerStateChangeResponse {
  readonly acknowledgment?: string;
}

export interface SubmitTaskStateChangeRequest {
  readonly cluster?: string;
  readonly task?: string;
  readonly status?: string;
  readonly reason?: string;
  readonly containers?: [];
  readonly attachments?: [];
  readonly managedAgents?: [];
  readonly pullStartedAt?: Date;
  readonly pullStoppedAt?: Date;
  readonly executionStoppedAt?: Date;
}

export interface SubmitTaskStateChangeResponse {
  readonly acknowledgment?: string;
}

export interface SystemControl {
  readonly namespace?: string;
  readonly value?: string;
}

export interface Tag {
  readonly key?: string;
  readonly value?: string;
}

export interface TagResourceRequest {
  readonly resourceArn: string;
  readonly tags: [];
}

export interface TagResourceResponse {
}

export interface TargetNotConnectedException {
}

export interface TargetNotFoundException {
}

export interface Task {
  readonly attachments?: [];
  readonly attributes?: [];
  readonly availabilityZone?: string;
  readonly capacityProviderName?: string;
  readonly clusterArn?: string;
  readonly connectivity?: string;
  readonly connectivityAt?: Date;
  readonly containerInstanceArn?: string;
  readonly containers?: [];
  readonly cpu?: string;
  readonly createdAt?: Date;
  readonly desiredStatus?: string;
  readonly enableExecuteCommand?: boolean;
  readonly executionStoppedAt?: Date;
  readonly group?: string;
  readonly healthStatus?: string;
  readonly inferenceAccelerators?: [];
  readonly lastStatus?: string;
  readonly launchType?: string;
  readonly memory?: string;
  readonly overrides?: TaskOverride;
  readonly platformVersion?: string;
  readonly platformFamily?: string;
  readonly pullStartedAt?: Date;
  readonly pullStoppedAt?: Date;
  readonly startedAt?: Date;
  readonly startedBy?: string;
  readonly stopCode?: string;
  readonly stoppedAt?: Date;
  readonly stoppedReason?: string;
  readonly stoppingAt?: Date;
  readonly tags?: [];
  readonly taskArn?: string;
  readonly taskDefinitionArn?: string;
  readonly version?: number;
  readonly ephemeralStorage?: EphemeralStorage;
}

export interface TaskDefinition {
  readonly taskDefinitionArn?: string;
  readonly containerDefinitions?: [];
  readonly family?: string;
  readonly taskRoleArn?: string;
  readonly executionRoleArn?: string;
  readonly networkMode?: string;
  readonly revision?: number;
  readonly volumes?: [];
  readonly status?: string;
  readonly requiresAttributes?: [];
  readonly placementConstraints?: [];
  readonly compatibilities?: [];
  readonly runtimePlatform?: RuntimePlatform;
  readonly requiresCompatibilities?: [];
  readonly cpu?: string;
  readonly memory?: string;
  readonly inferenceAccelerators?: [];
  readonly pidMode?: string;
  readonly ipcMode?: string;
  readonly proxyConfiguration?: ProxyConfiguration;
  readonly registeredAt?: Date;
  readonly deregisteredAt?: Date;
  readonly registeredBy?: string;
  readonly ephemeralStorage?: EphemeralStorage;
}

export interface TaskDefinitionPlacementConstraint {
  readonly type?: string;
  readonly expression?: string;
}

export interface TaskOverride {
  readonly containerOverrides?: [];
  readonly cpu?: string;
  readonly inferenceAcceleratorOverrides?: [];
  readonly executionRoleArn?: string;
  readonly memory?: string;
  readonly taskRoleArn?: string;
  readonly ephemeralStorage?: EphemeralStorage;
}

export interface TaskSet {
  readonly id?: string;
  readonly taskSetArn?: string;
  readonly serviceArn?: string;
  readonly clusterArn?: string;
  readonly startedBy?: string;
  readonly externalId?: string;
  readonly status?: string;
  readonly taskDefinition?: string;
  readonly computedDesiredCount?: number;
  readonly pendingCount?: number;
  readonly runningCount?: number;
  readonly createdAt?: Date;
  readonly updatedAt?: Date;
  readonly launchType?: string;
  readonly capacityProviderStrategy?: [];
  readonly platformVersion?: string;
  readonly platformFamily?: string;
  readonly networkConfiguration?: NetworkConfiguration;
  readonly loadBalancers?: [];
  readonly serviceRegistries?: [];
  readonly scale?: Scale;
  readonly stabilityStatus?: string;
  readonly stabilityStatusAt?: Date;
  readonly tags?: [];
}

export interface TaskSetNotFoundException {
}

export interface Tmpfs {
  readonly containerPath: string;
  readonly size: number;
  readonly mountOptions?: [];
}

export interface Ulimit {
  readonly name: string;
  readonly softLimit: number;
  readonly hardLimit: number;
}

export interface UnsupportedFeatureException {
}

export interface UntagResourceRequest {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface UntagResourceResponse {
}

export interface UpdateCapacityProviderRequest {
  readonly name: string;
  readonly autoScalingGroupProvider: AutoScalingGroupProviderUpdate;
}

export interface UpdateCapacityProviderResponse {
  readonly capacityProvider?: CapacityProvider;
}

export interface UpdateClusterRequest {
  readonly cluster: string;
  readonly settings?: [];
  readonly configuration?: ClusterConfiguration;
}

export interface UpdateClusterResponse {
  readonly cluster?: Cluster;
}

export interface UpdateClusterSettingsRequest {
  readonly cluster: string;
  readonly settings: [];
}

export interface UpdateClusterSettingsResponse {
  readonly cluster?: Cluster;
}

export interface UpdateContainerAgentRequest {
  readonly cluster?: string;
  readonly containerInstance: string;
}

export interface UpdateContainerAgentResponse {
  readonly containerInstance?: ContainerInstance;
}

export interface UpdateContainerInstancesStateRequest {
  readonly cluster?: string;
  readonly containerInstances: [];
  readonly status: string;
}

export interface UpdateContainerInstancesStateResponse {
  readonly containerInstances?: [];
  readonly failures?: [];
}

export interface UpdateInProgressException {
}

export interface UpdateServicePrimaryTaskSetRequest {
  readonly cluster: string;
  readonly service: string;
  readonly primaryTaskSet: string;
}

export interface UpdateServicePrimaryTaskSetResponse {
  readonly taskSet?: TaskSet;
}

export interface UpdateServiceRequest {
  readonly cluster?: string;
  readonly service: string;
  readonly desiredCount?: number;
  readonly taskDefinition?: string;
  readonly capacityProviderStrategy?: [];
  readonly deploymentConfiguration?: DeploymentConfiguration;
  readonly networkConfiguration?: NetworkConfiguration;
  readonly placementConstraints?: [];
  readonly placementStrategy?: [];
  readonly platformVersion?: string;
  readonly forceNewDeployment?: boolean;
  readonly healthCheckGracePeriodSeconds?: number;
  readonly enableExecuteCommand?: boolean;
}

export interface UpdateServiceResponse {
  readonly service?: Service;
}

export interface UpdateTaskSetRequest {
  readonly cluster: string;
  readonly service: string;
  readonly taskSet: string;
  readonly scale: Scale;
}

export interface UpdateTaskSetResponse {
  readonly taskSet?: TaskSet;
}

export interface VersionInfo {
  readonly agentVersion?: string;
  readonly agentHash?: string;
  readonly dockerVersion?: string;
}

export interface Volume {
  readonly name?: string;
  readonly host?: HostVolumeProperties;
  readonly dockerVolumeConfiguration?: DockerVolumeConfiguration;
  readonly efsVolumeConfiguration?: EFSVolumeConfiguration;
  readonly fsxWindowsFileServerVolumeConfiguration?: FSxWindowsFileServerVolumeConfiguration;
}

export interface VolumeFrom {
  readonly sourceContainer?: string;
  readonly readOnly?: boolean;
}


