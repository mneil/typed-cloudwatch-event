/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AssociateCertificate {
  readonly Arn: string;
}

export interface CancelJob {
  readonly Id: string;
}

export interface CreateJob {
  readonly AccelerationSettings?: AccelerationSettings;
  readonly BillingTagsSource?: string;
  readonly ClientRequestToken?: string;
  readonly HopDestinations?: [];
  readonly JobTemplate?: string;
  readonly Priority?: number;
  readonly Queue?: string;
  readonly Role: string;
  readonly Settings: JobSettings;
  readonly SimulateReservedQueue?: string;
  readonly StatusUpdateInterval?: string;
  readonly Tags?: {[key: string]: any};
  readonly UserMetadata?: {[key: string]: any};
}

export interface CreateJobTemplate {
  readonly AccelerationSettings?: AccelerationSettings;
  readonly Category?: string;
  readonly Description?: string;
  readonly HopDestinations?: [];
  readonly Name: string;
  readonly Priority?: number;
  readonly Queue?: string;
  readonly Settings: JobTemplateSettings;
  readonly StatusUpdateInterval?: string;
  readonly Tags?: {[key: string]: any};
}

export interface CreatePreset {
  readonly Category?: string;
  readonly Description?: string;
  readonly Name: string;
  readonly Settings: PresetSettings;
  readonly Tags?: {[key: string]: any};
}

export interface CreateQueue {
  readonly Description?: string;
  readonly Name: string;
  readonly PricingPlan?: string;
  readonly ReservationPlanSettings?: ReservationPlanSettings;
  readonly Status?: string;
  readonly Tags?: {[key: string]: any};
}

export interface DeleteJobTemplate {
  readonly Name: string;
}

export interface DeletePolicy {
}

export interface DeletePreset {
  readonly Name: string;
}

export interface DeleteQueue {
  readonly Name: string;
}

export interface DescribeEndpoints {
  readonly MaxResults?: number;
  readonly Mode?: string;
  readonly NextToken?: string;
}

export interface DisassociateCertificate {
  readonly Arn: string;
}

export interface GetJob {
  readonly Id: string;
}

export interface GetJobTemplate {
  readonly Name: string;
}

export interface GetPolicy {
}

export interface GetPreset {
  readonly Name: string;
}

export interface GetQueue {
  readonly Name: string;
}

export interface ListJobTemplates {
  readonly Category?: string;
  readonly ListBy?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
  readonly Order?: string;
}

export interface ListJobs {
  readonly MaxResults?: number;
  readonly NextToken?: string;
  readonly Order?: string;
  readonly Queue?: string;
  readonly Status?: string;
}

export interface ListPresets {
  readonly Category?: string;
  readonly ListBy?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
  readonly Order?: string;
}

export interface ListQueues {
  readonly ListBy?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
  readonly Order?: string;
}

export interface ListTagsForResource {
  readonly Arn: string;
}

export interface PutPolicy {
  readonly Policy: Policy;
}

export interface TagResource {
  readonly Arn: string;
  readonly Tags: {[key: string]: any};
}

export interface UntagResource {
  readonly Arn: string;
  readonly TagKeys?: [];
}

export interface UpdateJobTemplate {
  readonly AccelerationSettings?: AccelerationSettings;
  readonly Category?: string;
  readonly Description?: string;
  readonly HopDestinations?: [];
  readonly Name: string;
  readonly Priority?: number;
  readonly Queue?: string;
  readonly Settings?: JobTemplateSettings;
  readonly StatusUpdateInterval?: string;
}

export interface UpdatePreset {
  readonly Category?: string;
  readonly Description?: string;
  readonly Name: string;
  readonly Settings?: PresetSettings;
}

export interface UpdateQueue {
  readonly Description?: string;
  readonly Name: string;
  readonly ReservationPlanSettings?: ReservationPlanSettings;
  readonly Status?: string;
}

export interface AacSettings {
  readonly AudioDescriptionBroadcasterMix?: string;
  readonly Bitrate?: number;
  readonly CodecProfile?: string;
  readonly CodingMode?: string;
  readonly RateControlMode?: string;
  readonly RawFormat?: string;
  readonly SampleRate?: number;
  readonly Specification?: string;
  readonly VbrQuality?: string;
}

export interface Ac3Settings {
  readonly Bitrate?: number;
  readonly BitstreamMode?: string;
  readonly CodingMode?: string;
  readonly Dialnorm?: number;
  readonly DynamicRangeCompressionLine?: string;
  readonly DynamicRangeCompressionProfile?: string;
  readonly DynamicRangeCompressionRf?: string;
  readonly LfeFilter?: string;
  readonly MetadataControl?: string;
  readonly SampleRate?: number;
}

export interface AccelerationSettings {
  readonly Mode: string;
}

export interface AiffSettings {
  readonly BitDepth?: number;
  readonly Channels?: number;
  readonly SampleRate?: number;
}

export interface AncillarySourceSettings {
  readonly Convert608To708?: string;
  readonly SourceAncillaryChannelNumber?: number;
  readonly TerminateCaptions?: string;
}

export interface AssociateCertificateRequest {
  readonly Arn: string;
}

export interface AssociateCertificateResponse {
}

export interface AudioChannelTaggingSettings {
  readonly ChannelTag?: string;
}

export interface AudioCodecSettings {
  readonly AacSettings?: AacSettings;
  readonly Ac3Settings?: Ac3Settings;
  readonly AiffSettings?: AiffSettings;
  readonly Codec?: string;
  readonly Eac3AtmosSettings?: Eac3AtmosSettings;
  readonly Eac3Settings?: Eac3Settings;
  readonly Mp2Settings?: Mp2Settings;
  readonly Mp3Settings?: Mp3Settings;
  readonly OpusSettings?: OpusSettings;
  readonly VorbisSettings?: VorbisSettings;
  readonly WavSettings?: WavSettings;
}

export interface AudioDescription {
  readonly AudioChannelTaggingSettings?: AudioChannelTaggingSettings;
  readonly AudioNormalizationSettings?: AudioNormalizationSettings;
  readonly AudioSourceName?: string;
  readonly AudioType?: number;
  readonly AudioTypeControl?: string;
  readonly CodecSettings?: AudioCodecSettings;
  readonly CustomLanguageCode?: string;
  readonly LanguageCode?: string;
  readonly LanguageCodeControl?: string;
  readonly RemixSettings?: RemixSettings;
  readonly StreamName?: string;
}

export interface AudioNormalizationSettings {
  readonly Algorithm?: string;
  readonly AlgorithmControl?: string;
  readonly CorrectionGateLevel?: number;
  readonly LoudnessLogging?: string;
  readonly PeakCalculation?: string;
  readonly TargetLkfs?: unknown;
}

export interface AudioSelector {
  readonly CustomLanguageCode?: string;
  readonly DefaultSelection?: string;
  readonly ExternalAudioFileInput?: string;
  readonly HlsRenditionGroupSettings?: HlsRenditionGroupSettings;
  readonly LanguageCode?: string;
  readonly Offset?: number;
  readonly Pids?: [];
  readonly ProgramSelection?: number;
  readonly RemixSettings?: RemixSettings;
  readonly SelectorType?: string;
  readonly Tracks?: [];
}

export interface AudioSelectorGroup {
  readonly AudioSelectorNames?: [];
}

export interface AutomatedAbrSettings {
  readonly MaxAbrBitrate?: number;
  readonly MaxRenditions?: number;
  readonly MinAbrBitrate?: number;
}

export interface AutomatedEncodingSettings {
  readonly AbrSettings?: AutomatedAbrSettings;
}

export interface Av1QvbrSettings {
  readonly QvbrQualityLevel?: number;
  readonly QvbrQualityLevelFineTune?: unknown;
}

export interface Av1Settings {
  readonly AdaptiveQuantization?: string;
  readonly FramerateControl?: string;
  readonly FramerateConversionAlgorithm?: string;
  readonly FramerateDenominator?: number;
  readonly FramerateNumerator?: number;
  readonly GopSize?: unknown;
  readonly MaxBitrate?: number;
  readonly NumberBFramesBetweenReferenceFrames?: number;
  readonly QvbrSettings?: Av1QvbrSettings;
  readonly RateControlMode?: string;
  readonly Slices?: number;
  readonly SpatialAdaptiveQuantization?: string;
}

export interface AvailBlanking {
  readonly AvailBlankingImage?: string;
}

export interface AvcIntraSettings {
  readonly AvcIntraClass?: string;
  readonly AvcIntraUhdSettings?: AvcIntraUhdSettings;
  readonly FramerateControl?: string;
  readonly FramerateConversionAlgorithm?: string;
  readonly FramerateDenominator?: number;
  readonly FramerateNumerator?: number;
  readonly InterlaceMode?: string;
  readonly ScanTypeConversionMode?: string;
  readonly SlowPal?: string;
  readonly Telecine?: string;
}

export interface AvcIntraUhdSettings {
  readonly QualityTuningLevel?: string;
}

export interface BadRequestException {
  readonly Message?: string;
}

export interface BurninDestinationSettings {
  readonly Alignment?: string;
  readonly ApplyFontColor?: string;
  readonly BackgroundColor?: string;
  readonly BackgroundOpacity?: number;
  readonly FallbackFont?: string;
  readonly FontColor?: string;
  readonly FontOpacity?: number;
  readonly FontResolution?: number;
  readonly FontScript?: string;
  readonly FontSize?: number;
  readonly HexFontColor?: string;
  readonly OutlineColor?: string;
  readonly OutlineSize?: number;
  readonly ShadowColor?: string;
  readonly ShadowOpacity?: number;
  readonly ShadowXOffset?: number;
  readonly ShadowYOffset?: number;
  readonly StylePassthrough?: string;
  readonly TeletextSpacing?: string;
  readonly XPosition?: number;
  readonly YPosition?: number;
}

export interface CancelJobRequest {
  readonly Id: string;
}

export interface CancelJobResponse {
}

export interface CaptionDescription {
  readonly CaptionSelectorName?: string;
  readonly CustomLanguageCode?: string;
  readonly DestinationSettings?: CaptionDestinationSettings;
  readonly LanguageCode?: string;
  readonly LanguageDescription?: string;
}

export interface CaptionDescriptionPreset {
  readonly CustomLanguageCode?: string;
  readonly DestinationSettings?: CaptionDestinationSettings;
  readonly LanguageCode?: string;
  readonly LanguageDescription?: string;
}

export interface CaptionDestinationSettings {
  readonly BurninDestinationSettings?: BurninDestinationSettings;
  readonly DestinationType?: string;
  readonly DvbSubDestinationSettings?: DvbSubDestinationSettings;
  readonly EmbeddedDestinationSettings?: EmbeddedDestinationSettings;
  readonly ImscDestinationSettings?: ImscDestinationSettings;
  readonly SccDestinationSettings?: SccDestinationSettings;
  readonly SrtDestinationSettings?: SrtDestinationSettings;
  readonly TeletextDestinationSettings?: TeletextDestinationSettings;
  readonly TtmlDestinationSettings?: TtmlDestinationSettings;
  readonly WebvttDestinationSettings?: WebvttDestinationSettings;
}

export interface CaptionSelector {
  readonly CustomLanguageCode?: string;
  readonly LanguageCode?: string;
  readonly SourceSettings?: CaptionSourceSettings;
}

export interface CaptionSourceFramerate {
  readonly FramerateDenominator?: number;
  readonly FramerateNumerator?: number;
}

export interface CaptionSourceSettings {
  readonly AncillarySourceSettings?: AncillarySourceSettings;
  readonly DvbSubSourceSettings?: DvbSubSourceSettings;
  readonly EmbeddedSourceSettings?: EmbeddedSourceSettings;
  readonly FileSourceSettings?: FileSourceSettings;
  readonly SourceType?: string;
  readonly TeletextSourceSettings?: TeletextSourceSettings;
  readonly TrackSourceSettings?: TrackSourceSettings;
  readonly WebvttHlsSourceSettings?: WebvttHlsSourceSettings;
}

export interface ChannelMapping {
  readonly OutputChannels?: [];
}

export interface CmafAdditionalManifest {
  readonly ManifestNameModifier?: string;
  readonly SelectedOutputs?: [];
}

export interface CmafEncryptionSettings {
  readonly ConstantInitializationVector?: string;
  readonly EncryptionMethod?: string;
  readonly InitializationVectorInManifest?: string;
  readonly SpekeKeyProvider?: SpekeKeyProviderCmaf;
  readonly StaticKeyProvider?: StaticKeyProvider;
  readonly Type?: string;
}

export interface CmafGroupSettings {
  readonly AdditionalManifests?: [];
  readonly BaseUrl?: string;
  readonly ClientCache?: string;
  readonly CodecSpecification?: string;
  readonly Destination?: string;
  readonly DestinationSettings?: DestinationSettings;
  readonly Encryption?: CmafEncryptionSettings;
  readonly FragmentLength?: number;
  readonly ImageBasedTrickPlay?: string;
  readonly ImageBasedTrickPlaySettings?: CmafImageBasedTrickPlaySettings;
  readonly ManifestCompression?: string;
  readonly ManifestDurationFormat?: string;
  readonly MinBufferTime?: number;
  readonly MinFinalSegmentLength?: unknown;
  readonly MpdProfile?: string;
  readonly PtsOffsetHandlingForBFrames?: string;
  readonly SegmentControl?: string;
  readonly SegmentLength?: number;
  readonly SegmentLengthControl?: string;
  readonly StreamInfResolution?: string;
  readonly TargetDurationCompatibilityMode?: string;
  readonly WriteDashManifest?: string;
  readonly WriteHlsManifest?: string;
  readonly WriteSegmentTimelineInRepresentation?: string;
}

export interface CmafImageBasedTrickPlaySettings {
  readonly IntervalCadence?: string;
  readonly ThumbnailHeight?: number;
  readonly ThumbnailInterval?: unknown;
  readonly ThumbnailWidth?: number;
  readonly TileHeight?: number;
  readonly TileWidth?: number;
}

export interface CmfcSettings {
  readonly AudioDuration?: string;
  readonly AudioGroupId?: string;
  readonly AudioRenditionSets?: string;
  readonly AudioTrackType?: string;
  readonly DescriptiveVideoServiceFlag?: string;
  readonly IFrameOnlyManifest?: string;
  readonly Scte35Esam?: string;
  readonly Scte35Source?: string;
}

export interface ColorCorrector {
  readonly Brightness?: number;
  readonly ColorSpaceConversion?: string;
  readonly Contrast?: number;
  readonly Hdr10Metadata?: Hdr10Metadata;
  readonly Hue?: number;
  readonly SampleRangeConversion?: string;
  readonly Saturation?: number;
}

export interface ConflictException {
  readonly Message?: string;
}

export interface ContainerSettings {
  readonly CmfcSettings?: CmfcSettings;
  readonly Container?: string;
  readonly F4vSettings?: F4vSettings;
  readonly M2tsSettings?: M2tsSettings;
  readonly M3u8Settings?: M3u8Settings;
  readonly MovSettings?: MovSettings;
  readonly Mp4Settings?: Mp4Settings;
  readonly MpdSettings?: MpdSettings;
  readonly MxfSettings?: MxfSettings;
}

export interface CreateJobRequest {
  readonly AccelerationSettings?: AccelerationSettings;
  readonly BillingTagsSource?: string;
  readonly ClientRequestToken?: string;
  readonly HopDestinations?: [];
  readonly JobTemplate?: string;
  readonly Priority?: number;
  readonly Queue?: string;
  readonly Role: string;
  readonly Settings: JobSettings;
  readonly SimulateReservedQueue?: string;
  readonly StatusUpdateInterval?: string;
  readonly Tags?: {[key: string]: any};
  readonly UserMetadata?: {[key: string]: any};
}

export interface CreateJobResponse {
  readonly Job?: Job;
}

export interface CreateJobTemplateRequest {
  readonly AccelerationSettings?: AccelerationSettings;
  readonly Category?: string;
  readonly Description?: string;
  readonly HopDestinations?: [];
  readonly Name: string;
  readonly Priority?: number;
  readonly Queue?: string;
  readonly Settings: JobTemplateSettings;
  readonly StatusUpdateInterval?: string;
  readonly Tags?: {[key: string]: any};
}

export interface CreateJobTemplateResponse {
  readonly JobTemplate?: JobTemplate;
}

export interface CreatePresetRequest {
  readonly Category?: string;
  readonly Description?: string;
  readonly Name: string;
  readonly Settings: PresetSettings;
  readonly Tags?: {[key: string]: any};
}

export interface CreatePresetResponse {
  readonly Preset?: Preset;
}

export interface CreateQueueRequest {
  readonly Description?: string;
  readonly Name: string;
  readonly PricingPlan?: string;
  readonly ReservationPlanSettings?: ReservationPlanSettings;
  readonly Status?: string;
  readonly Tags?: {[key: string]: any};
}

export interface CreateQueueResponse {
  readonly Queue?: Queue;
}

export interface DashAdditionalManifest {
  readonly ManifestNameModifier?: string;
  readonly SelectedOutputs?: [];
}

export interface DashIsoEncryptionSettings {
  readonly PlaybackDeviceCompatibility?: string;
  readonly SpekeKeyProvider?: SpekeKeyProvider;
}

export interface DashIsoGroupSettings {
  readonly AdditionalManifests?: [];
  readonly AudioChannelConfigSchemeIdUri?: string;
  readonly BaseUrl?: string;
  readonly Destination?: string;
  readonly DestinationSettings?: DestinationSettings;
  readonly Encryption?: DashIsoEncryptionSettings;
  readonly FragmentLength?: number;
  readonly HbbtvCompliance?: string;
  readonly ImageBasedTrickPlay?: string;
  readonly ImageBasedTrickPlaySettings?: DashIsoImageBasedTrickPlaySettings;
  readonly MinBufferTime?: number;
  readonly MinFinalSegmentLength?: unknown;
  readonly MpdProfile?: string;
  readonly PtsOffsetHandlingForBFrames?: string;
  readonly SegmentControl?: string;
  readonly SegmentLength?: number;
  readonly SegmentLengthControl?: string;
  readonly WriteSegmentTimelineInRepresentation?: string;
}

export interface DashIsoImageBasedTrickPlaySettings {
  readonly IntervalCadence?: string;
  readonly ThumbnailHeight?: number;
  readonly ThumbnailInterval?: unknown;
  readonly ThumbnailWidth?: number;
  readonly TileHeight?: number;
  readonly TileWidth?: number;
}

export interface Deinterlacer {
  readonly Algorithm?: string;
  readonly Control?: string;
  readonly Mode?: string;
}

export interface DeleteJobTemplateRequest {
  readonly Name: string;
}

export interface DeleteJobTemplateResponse {
}

export interface DeletePolicyRequest {
}

export interface DeletePolicyResponse {
}

export interface DeletePresetRequest {
  readonly Name: string;
}

export interface DeletePresetResponse {
}

export interface DeleteQueueRequest {
  readonly Name: string;
}

export interface DeleteQueueResponse {
}

export interface DescribeEndpointsRequest {
  readonly MaxResults?: number;
  readonly Mode?: string;
  readonly NextToken?: string;
}

export interface DescribeEndpointsResponse {
  readonly Endpoints?: [];
  readonly NextToken?: string;
}

export interface DestinationSettings {
  readonly S3Settings?: S3DestinationSettings;
}

export interface DisassociateCertificateRequest {
  readonly Arn: string;
}

export interface DisassociateCertificateResponse {
}

export interface DolbyVision {
  readonly L6Metadata?: DolbyVisionLevel6Metadata;
  readonly L6Mode?: string;
  readonly Profile?: string;
}

export interface DolbyVisionLevel6Metadata {
  readonly MaxCll?: number;
  readonly MaxFall?: number;
}

export interface DvbNitSettings {
  readonly NetworkId?: number;
  readonly NetworkName?: string;
  readonly NitInterval?: number;
}

export interface DvbSdtSettings {
  readonly OutputSdt?: string;
  readonly SdtInterval?: number;
  readonly ServiceName?: string;
  readonly ServiceProviderName?: string;
}

export interface DvbSubDestinationSettings {
  readonly Alignment?: string;
  readonly ApplyFontColor?: string;
  readonly BackgroundColor?: string;
  readonly BackgroundOpacity?: number;
  readonly DdsHandling?: string;
  readonly DdsXCoordinate?: number;
  readonly DdsYCoordinate?: number;
  readonly FallbackFont?: string;
  readonly FontColor?: string;
  readonly FontOpacity?: number;
  readonly FontResolution?: number;
  readonly FontScript?: string;
  readonly FontSize?: number;
  readonly Height?: number;
  readonly HexFontColor?: string;
  readonly OutlineColor?: string;
  readonly OutlineSize?: number;
  readonly ShadowColor?: string;
  readonly ShadowOpacity?: number;
  readonly ShadowXOffset?: number;
  readonly ShadowYOffset?: number;
  readonly StylePassthrough?: string;
  readonly SubtitlingType?: string;
  readonly TeletextSpacing?: string;
  readonly Width?: number;
  readonly XPosition?: number;
  readonly YPosition?: number;
}

export interface DvbSubSourceSettings {
  readonly Pid?: number;
}

export interface DvbTdtSettings {
  readonly TdtInterval?: number;
}

export interface Eac3AtmosSettings {
  readonly Bitrate?: number;
  readonly BitstreamMode?: string;
  readonly CodingMode?: string;
  readonly DialogueIntelligence?: string;
  readonly DownmixControl?: string;
  readonly DynamicRangeCompressionLine?: string;
  readonly DynamicRangeCompressionRf?: string;
  readonly DynamicRangeControl?: string;
  readonly LoRoCenterMixLevel?: unknown;
  readonly LoRoSurroundMixLevel?: unknown;
  readonly LtRtCenterMixLevel?: unknown;
  readonly LtRtSurroundMixLevel?: unknown;
  readonly MeteringMode?: string;
  readonly SampleRate?: number;
  readonly SpeechThreshold?: number;
  readonly StereoDownmix?: string;
  readonly SurroundExMode?: string;
}

export interface Eac3Settings {
  readonly AttenuationControl?: string;
  readonly Bitrate?: number;
  readonly BitstreamMode?: string;
  readonly CodingMode?: string;
  readonly DcFilter?: string;
  readonly Dialnorm?: number;
  readonly DynamicRangeCompressionLine?: string;
  readonly DynamicRangeCompressionRf?: string;
  readonly LfeControl?: string;
  readonly LfeFilter?: string;
  readonly LoRoCenterMixLevel?: unknown;
  readonly LoRoSurroundMixLevel?: unknown;
  readonly LtRtCenterMixLevel?: unknown;
  readonly LtRtSurroundMixLevel?: unknown;
  readonly MetadataControl?: string;
  readonly PassthroughControl?: string;
  readonly PhaseControl?: string;
  readonly SampleRate?: number;
  readonly StereoDownmix?: string;
  readonly SurroundExMode?: string;
  readonly SurroundMode?: string;
}

export interface EmbeddedDestinationSettings {
  readonly Destination608ChannelNumber?: number;
  readonly Destination708ServiceNumber?: number;
}

export interface EmbeddedSourceSettings {
  readonly Convert608To708?: string;
  readonly Source608ChannelNumber?: number;
  readonly Source608TrackNumber?: number;
  readonly TerminateCaptions?: string;
}

export interface Endpoint {
  readonly Url?: string;
}

export interface EsamManifestConfirmConditionNotification {
  readonly MccXml?: string;
}

export interface EsamSettings {
  readonly ManifestConfirmConditionNotification?: EsamManifestConfirmConditionNotification;
  readonly ResponseSignalPreroll?: number;
  readonly SignalProcessingNotification?: EsamSignalProcessingNotification;
}

export interface EsamSignalProcessingNotification {
  readonly SccXml?: string;
}

export interface ExceptionBody {
  readonly Message?: string;
}

export interface ExtendedDataServices {
  readonly CopyProtectionAction?: string;
  readonly VchipAction?: string;
}

export interface F4vSettings {
  readonly MoovPlacement?: string;
}

export interface FileGroupSettings {
  readonly Destination?: string;
  readonly DestinationSettings?: DestinationSettings;
}

export interface FileSourceSettings {
  readonly Convert608To708?: string;
  readonly Framerate?: CaptionSourceFramerate;
  readonly SourceFile?: string;
  readonly TimeDelta?: number;
  readonly TimeDeltaUnits?: string;
}

export interface ForbiddenException {
  readonly Message?: string;
}

export interface FrameCaptureSettings {
  readonly FramerateDenominator?: number;
  readonly FramerateNumerator?: number;
  readonly MaxCaptures?: number;
  readonly Quality?: number;
}

export interface GetJobRequest {
  readonly Id: string;
}

export interface GetJobResponse {
  readonly Job?: Job;
}

export interface GetJobTemplateRequest {
  readonly Name: string;
}

export interface GetJobTemplateResponse {
  readonly JobTemplate?: JobTemplate;
}

export interface GetPolicyRequest {
}

export interface GetPolicyResponse {
  readonly Policy?: Policy;
}

export interface GetPresetRequest {
  readonly Name: string;
}

export interface GetPresetResponse {
  readonly Preset?: Preset;
}

export interface GetQueueRequest {
  readonly Name: string;
}

export interface GetQueueResponse {
  readonly Queue?: Queue;
}

export interface H264QvbrSettings {
  readonly MaxAverageBitrate?: number;
  readonly QvbrQualityLevel?: number;
  readonly QvbrQualityLevelFineTune?: unknown;
}

export interface H264Settings {
  readonly AdaptiveQuantization?: string;
  readonly Bitrate?: number;
  readonly CodecLevel?: string;
  readonly CodecProfile?: string;
  readonly DynamicSubGop?: string;
  readonly EntropyEncoding?: string;
  readonly FieldEncoding?: string;
  readonly FlickerAdaptiveQuantization?: string;
  readonly FramerateControl?: string;
  readonly FramerateConversionAlgorithm?: string;
  readonly FramerateDenominator?: number;
  readonly FramerateNumerator?: number;
  readonly GopBReference?: string;
  readonly GopClosedCadence?: number;
  readonly GopSize?: unknown;
  readonly GopSizeUnits?: string;
  readonly HrdBufferInitialFillPercentage?: number;
  readonly HrdBufferSize?: number;
  readonly InterlaceMode?: string;
  readonly MaxBitrate?: number;
  readonly MinIInterval?: number;
  readonly NumberBFramesBetweenReferenceFrames?: number;
  readonly NumberReferenceFrames?: number;
  readonly ParControl?: string;
  readonly ParDenominator?: number;
  readonly ParNumerator?: number;
  readonly QualityTuningLevel?: string;
  readonly QvbrSettings?: H264QvbrSettings;
  readonly RateControlMode?: string;
  readonly RepeatPps?: string;
  readonly ScanTypeConversionMode?: string;
  readonly SceneChangeDetect?: string;
  readonly Slices?: number;
  readonly SlowPal?: string;
  readonly Softness?: number;
  readonly SpatialAdaptiveQuantization?: string;
  readonly Syntax?: string;
  readonly Telecine?: string;
  readonly TemporalAdaptiveQuantization?: string;
  readonly UnregisteredSeiTimecode?: string;
}

export interface H265QvbrSettings {
  readonly MaxAverageBitrate?: number;
  readonly QvbrQualityLevel?: number;
  readonly QvbrQualityLevelFineTune?: unknown;
}

export interface H265Settings {
  readonly AdaptiveQuantization?: string;
  readonly AlternateTransferFunctionSei?: string;
  readonly Bitrate?: number;
  readonly CodecLevel?: string;
  readonly CodecProfile?: string;
  readonly DynamicSubGop?: string;
  readonly FlickerAdaptiveQuantization?: string;
  readonly FramerateControl?: string;
  readonly FramerateConversionAlgorithm?: string;
  readonly FramerateDenominator?: number;
  readonly FramerateNumerator?: number;
  readonly GopBReference?: string;
  readonly GopClosedCadence?: number;
  readonly GopSize?: unknown;
  readonly GopSizeUnits?: string;
  readonly HrdBufferInitialFillPercentage?: number;
  readonly HrdBufferSize?: number;
  readonly InterlaceMode?: string;
  readonly MaxBitrate?: number;
  readonly MinIInterval?: number;
  readonly NumberBFramesBetweenReferenceFrames?: number;
  readonly NumberReferenceFrames?: number;
  readonly ParControl?: string;
  readonly ParDenominator?: number;
  readonly ParNumerator?: number;
  readonly QualityTuningLevel?: string;
  readonly QvbrSettings?: H265QvbrSettings;
  readonly RateControlMode?: string;
  readonly SampleAdaptiveOffsetFilterMode?: string;
  readonly ScanTypeConversionMode?: string;
  readonly SceneChangeDetect?: string;
  readonly Slices?: number;
  readonly SlowPal?: string;
  readonly SpatialAdaptiveQuantization?: string;
  readonly Telecine?: string;
  readonly TemporalAdaptiveQuantization?: string;
  readonly TemporalIds?: string;
  readonly Tiles?: string;
  readonly UnregisteredSeiTimecode?: string;
  readonly WriteMp4PackagingType?: string;
}

export interface Hdr10Metadata {
  readonly BluePrimaryX?: number;
  readonly BluePrimaryY?: number;
  readonly GreenPrimaryX?: number;
  readonly GreenPrimaryY?: number;
  readonly MaxContentLightLevel?: number;
  readonly MaxFrameAverageLightLevel?: number;
  readonly MaxLuminance?: number;
  readonly MinLuminance?: number;
  readonly RedPrimaryX?: number;
  readonly RedPrimaryY?: number;
  readonly WhitePointX?: number;
  readonly WhitePointY?: number;
}

export interface Hdr10Plus {
  readonly MasteringMonitorNits?: number;
  readonly TargetMonitorNits?: number;
}

export interface HlsAdditionalManifest {
  readonly ManifestNameModifier?: string;
  readonly SelectedOutputs?: [];
}

export interface HlsCaptionLanguageMapping {
  readonly CaptionChannel?: number;
  readonly CustomLanguageCode?: string;
  readonly LanguageCode?: string;
  readonly LanguageDescription?: string;
}

export interface HlsEncryptionSettings {
  readonly ConstantInitializationVector?: string;
  readonly EncryptionMethod?: string;
  readonly InitializationVectorInManifest?: string;
  readonly OfflineEncrypted?: string;
  readonly SpekeKeyProvider?: SpekeKeyProvider;
  readonly StaticKeyProvider?: StaticKeyProvider;
  readonly Type?: string;
}

export interface HlsGroupSettings {
  readonly AdMarkers?: [];
  readonly AdditionalManifests?: [];
  readonly AudioOnlyHeader?: string;
  readonly BaseUrl?: string;
  readonly CaptionLanguageMappings?: [];
  readonly CaptionLanguageSetting?: string;
  readonly ClientCache?: string;
  readonly CodecSpecification?: string;
  readonly Destination?: string;
  readonly DestinationSettings?: DestinationSettings;
  readonly DirectoryStructure?: string;
  readonly Encryption?: HlsEncryptionSettings;
  readonly ImageBasedTrickPlay?: string;
  readonly ImageBasedTrickPlaySettings?: HlsImageBasedTrickPlaySettings;
  readonly ManifestCompression?: string;
  readonly ManifestDurationFormat?: string;
  readonly MinFinalSegmentLength?: unknown;
  readonly MinSegmentLength?: number;
  readonly OutputSelection?: string;
  readonly ProgramDateTime?: string;
  readonly ProgramDateTimePeriod?: number;
  readonly SegmentControl?: string;
  readonly SegmentLength?: number;
  readonly SegmentLengthControl?: string;
  readonly SegmentsPerSubdirectory?: number;
  readonly StreamInfResolution?: string;
  readonly TargetDurationCompatibilityMode?: string;
  readonly TimedMetadataId3Frame?: string;
  readonly TimedMetadataId3Period?: number;
  readonly TimestampDeltaMilliseconds?: number;
}

export interface HlsImageBasedTrickPlaySettings {
  readonly IntervalCadence?: string;
  readonly ThumbnailHeight?: number;
  readonly ThumbnailInterval?: unknown;
  readonly ThumbnailWidth?: number;
  readonly TileHeight?: number;
  readonly TileWidth?: number;
}

export interface HlsRenditionGroupSettings {
  readonly RenditionGroupId?: string;
  readonly RenditionLanguageCode?: string;
  readonly RenditionName?: string;
}

export interface HlsSettings {
  readonly AudioGroupId?: string;
  readonly AudioOnlyContainer?: string;
  readonly AudioRenditionSets?: string;
  readonly AudioTrackType?: string;
  readonly DescriptiveVideoServiceFlag?: string;
  readonly IFrameOnlyManifest?: string;
  readonly SegmentModifier?: string;
}

export interface HopDestination {
  readonly Priority?: number;
  readonly Queue?: string;
  readonly WaitMinutes?: number;
}

export interface Id3Insertion {
  readonly Id3?: string;
  readonly Timecode?: string;
}

export interface ImageInserter {
  readonly InsertableImages?: [];
}

export interface ImscDestinationSettings {
  readonly StylePassthrough?: string;
}

export interface Input {
  readonly AudioSelectorGroups?: {[key: string]: any};
  readonly AudioSelectors?: {[key: string]: any};
  readonly CaptionSelectors?: {[key: string]: any};
  readonly Crop?: Rectangle;
  readonly DeblockFilter?: string;
  readonly DecryptionSettings?: InputDecryptionSettings;
  readonly DenoiseFilter?: string;
  readonly FileInput?: string;
  readonly FilterEnable?: string;
  readonly FilterStrength?: number;
  readonly ImageInserter?: ImageInserter;
  readonly InputClippings?: [];
  readonly InputScanType?: string;
  readonly Position?: Rectangle;
  readonly ProgramNumber?: number;
  readonly PsiControl?: string;
  readonly SupplementalImps?: [];
  readonly TimecodeSource?: string;
  readonly TimecodeStart?: string;
  readonly VideoSelector?: VideoSelector;
}

export interface InputClipping {
  readonly EndTimecode?: string;
  readonly StartTimecode?: string;
}

export interface InputDecryptionSettings {
  readonly DecryptionMode?: string;
  readonly EncryptedDecryptionKey?: string;
  readonly InitializationVector?: string;
  readonly KmsKeyRegion?: string;
}

export interface InputTemplate {
  readonly AudioSelectorGroups?: {[key: string]: any};
  readonly AudioSelectors?: {[key: string]: any};
  readonly CaptionSelectors?: {[key: string]: any};
  readonly Crop?: Rectangle;
  readonly DeblockFilter?: string;
  readonly DenoiseFilter?: string;
  readonly FilterEnable?: string;
  readonly FilterStrength?: number;
  readonly ImageInserter?: ImageInserter;
  readonly InputClippings?: [];
  readonly InputScanType?: string;
  readonly Position?: Rectangle;
  readonly ProgramNumber?: number;
  readonly PsiControl?: string;
  readonly TimecodeSource?: string;
  readonly TimecodeStart?: string;
  readonly VideoSelector?: VideoSelector;
}

export interface InsertableImage {
  readonly Duration?: number;
  readonly FadeIn?: number;
  readonly FadeOut?: number;
  readonly Height?: number;
  readonly ImageInserterInput?: string;
  readonly ImageX?: number;
  readonly ImageY?: number;
  readonly Layer?: number;
  readonly Opacity?: number;
  readonly StartTime?: string;
  readonly Width?: number;
}

export interface InternalServerErrorException {
  readonly Message?: string;
}

export interface Job {
  readonly AccelerationSettings?: AccelerationSettings;
  readonly AccelerationStatus?: string;
  readonly Arn?: string;
  readonly BillingTagsSource?: string;
  readonly CreatedAt?: Date;
  readonly CurrentPhase?: string;
  readonly ErrorCode?: number;
  readonly ErrorMessage?: string;
  readonly HopDestinations?: [];
  readonly Id?: string;
  readonly JobPercentComplete?: number;
  readonly JobTemplate?: string;
  readonly Messages?: JobMessages;
  readonly OutputGroupDetails?: [];
  readonly Priority?: number;
  readonly Queue?: string;
  readonly QueueTransitions?: [];
  readonly RetryCount?: number;
  readonly Role: string;
  readonly Settings: JobSettings;
  readonly SimulateReservedQueue?: string;
  readonly Status?: string;
  readonly StatusUpdateInterval?: string;
  readonly Timing?: Timing;
  readonly UserMetadata?: {[key: string]: any};
}

export interface JobMessages {
  readonly Info?: [];
  readonly Warning?: [];
}

export interface JobSettings {
  readonly AdAvailOffset?: number;
  readonly AvailBlanking?: AvailBlanking;
  readonly Esam?: EsamSettings;
  readonly ExtendedDataServices?: ExtendedDataServices;
  readonly Inputs?: [];
  readonly KantarWatermark?: KantarWatermarkSettings;
  readonly MotionImageInserter?: MotionImageInserter;
  readonly NielsenConfiguration?: NielsenConfiguration;
  readonly NielsenNonLinearWatermark?: NielsenNonLinearWatermarkSettings;
  readonly OutputGroups?: [];
  readonly TimecodeConfig?: TimecodeConfig;
  readonly TimedMetadataInsertion?: TimedMetadataInsertion;
}

export interface JobTemplate {
  readonly AccelerationSettings?: AccelerationSettings;
  readonly Arn?: string;
  readonly Category?: string;
  readonly CreatedAt?: Date;
  readonly Description?: string;
  readonly HopDestinations?: [];
  readonly LastUpdated?: Date;
  readonly Name: string;
  readonly Priority?: number;
  readonly Queue?: string;
  readonly Settings: JobTemplateSettings;
  readonly StatusUpdateInterval?: string;
  readonly Type?: string;
}

export interface JobTemplateSettings {
  readonly AdAvailOffset?: number;
  readonly AvailBlanking?: AvailBlanking;
  readonly Esam?: EsamSettings;
  readonly ExtendedDataServices?: ExtendedDataServices;
  readonly Inputs?: [];
  readonly KantarWatermark?: KantarWatermarkSettings;
  readonly MotionImageInserter?: MotionImageInserter;
  readonly NielsenConfiguration?: NielsenConfiguration;
  readonly NielsenNonLinearWatermark?: NielsenNonLinearWatermarkSettings;
  readonly OutputGroups?: [];
  readonly TimecodeConfig?: TimecodeConfig;
  readonly TimedMetadataInsertion?: TimedMetadataInsertion;
}

export interface KantarWatermarkSettings {
  readonly ChannelName?: string;
  readonly ContentReference?: string;
  readonly CredentialsSecretName?: string;
  readonly FileOffset?: unknown;
  readonly KantarLicenseId?: number;
  readonly KantarServerUrl?: string;
  readonly LogDestination?: string;
  readonly Metadata3?: string;
  readonly Metadata4?: string;
  readonly Metadata5?: string;
  readonly Metadata6?: string;
  readonly Metadata7?: string;
  readonly Metadata8?: string;
}

export interface ListJobTemplatesRequest {
  readonly Category?: string;
  readonly ListBy?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
  readonly Order?: string;
}

export interface ListJobTemplatesResponse {
  readonly JobTemplates?: [];
  readonly NextToken?: string;
}

export interface ListJobsRequest {
  readonly MaxResults?: number;
  readonly NextToken?: string;
  readonly Order?: string;
  readonly Queue?: string;
  readonly Status?: string;
}

export interface ListJobsResponse {
  readonly Jobs?: [];
  readonly NextToken?: string;
}

export interface ListPresetsRequest {
  readonly Category?: string;
  readonly ListBy?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
  readonly Order?: string;
}

export interface ListPresetsResponse {
  readonly NextToken?: string;
  readonly Presets?: [];
}

export interface ListQueuesRequest {
  readonly ListBy?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
  readonly Order?: string;
}

export interface ListQueuesResponse {
  readonly NextToken?: string;
  readonly Queues?: [];
}

export interface ListTagsForResourceRequest {
  readonly Arn: string;
}

export interface ListTagsForResourceResponse {
  readonly ResourceTags?: ResourceTags;
}

export interface M2tsScte35Esam {
  readonly Scte35EsamPid?: number;
}

export interface M2tsSettings {
  readonly AudioBufferModel?: string;
  readonly AudioDuration?: string;
  readonly AudioFramesPerPes?: number;
  readonly AudioPids?: [];
  readonly Bitrate?: number;
  readonly BufferModel?: string;
  readonly DataPTSControl?: string;
  readonly DvbNitSettings?: DvbNitSettings;
  readonly DvbSdtSettings?: DvbSdtSettings;
  readonly DvbSubPids?: [];
  readonly DvbTdtSettings?: DvbTdtSettings;
  readonly DvbTeletextPid?: number;
  readonly EbpAudioInterval?: string;
  readonly EbpPlacement?: string;
  readonly EsRateInPes?: string;
  readonly ForceTsVideoEbpOrder?: string;
  readonly FragmentTime?: unknown;
  readonly MaxPcrInterval?: number;
  readonly MinEbpInterval?: number;
  readonly NielsenId3?: string;
  readonly NullPacketBitrate?: unknown;
  readonly PatInterval?: number;
  readonly PcrControl?: string;
  readonly PcrPid?: number;
  readonly PmtInterval?: number;
  readonly PmtPid?: number;
  readonly PrivateMetadataPid?: number;
  readonly ProgramNumber?: number;
  readonly RateMode?: string;
  readonly Scte35Esam?: M2tsScte35Esam;
  readonly Scte35Pid?: number;
  readonly Scte35Source?: string;
  readonly SegmentationMarkers?: string;
  readonly SegmentationStyle?: string;
  readonly SegmentationTime?: unknown;
  readonly TimedMetadataPid?: number;
  readonly TransportStreamId?: number;
  readonly VideoPid?: number;
}

export interface M3u8Settings {
  readonly AudioDuration?: string;
  readonly AudioFramesPerPes?: number;
  readonly AudioPids?: [];
  readonly DataPTSControl?: string;
  readonly MaxPcrInterval?: number;
  readonly NielsenId3?: string;
  readonly PatInterval?: number;
  readonly PcrControl?: string;
  readonly PcrPid?: number;
  readonly PmtInterval?: number;
  readonly PmtPid?: number;
  readonly PrivateMetadataPid?: number;
  readonly ProgramNumber?: number;
  readonly Scte35Pid?: number;
  readonly Scte35Source?: string;
  readonly TimedMetadata?: string;
  readonly TimedMetadataPid?: number;
  readonly TransportStreamId?: number;
  readonly VideoPid?: number;
}

export interface MotionImageInserter {
  readonly Framerate?: MotionImageInsertionFramerate;
  readonly Input?: string;
  readonly InsertionMode?: string;
  readonly Offset?: MotionImageInsertionOffset;
  readonly Playback?: string;
  readonly StartTime?: string;
}

export interface MotionImageInsertionFramerate {
  readonly FramerateDenominator?: number;
  readonly FramerateNumerator?: number;
}

export interface MotionImageInsertionOffset {
  readonly ImageX?: number;
  readonly ImageY?: number;
}

export interface MovSettings {
  readonly ClapAtom?: string;
  readonly CslgAtom?: string;
  readonly Mpeg2FourCCControl?: string;
  readonly PaddingControl?: string;
  readonly Reference?: string;
}

export interface Mp2Settings {
  readonly Bitrate?: number;
  readonly Channels?: number;
  readonly SampleRate?: number;
}

export interface Mp3Settings {
  readonly Bitrate?: number;
  readonly Channels?: number;
  readonly RateControlMode?: string;
  readonly SampleRate?: number;
  readonly VbrQuality?: number;
}

export interface Mp4Settings {
  readonly AudioDuration?: string;
  readonly CslgAtom?: string;
  readonly CttsVersion?: number;
  readonly FreeSpaceBox?: string;
  readonly MoovPlacement?: string;
  readonly Mp4MajorBrand?: string;
}

export interface MpdSettings {
  readonly AccessibilityCaptionHints?: string;
  readonly AudioDuration?: string;
  readonly CaptionContainerType?: string;
  readonly Scte35Esam?: string;
  readonly Scte35Source?: string;
}

export interface Mpeg2Settings {
  readonly AdaptiveQuantization?: string;
  readonly Bitrate?: number;
  readonly CodecLevel?: string;
  readonly CodecProfile?: string;
  readonly DynamicSubGop?: string;
  readonly FramerateControl?: string;
  readonly FramerateConversionAlgorithm?: string;
  readonly FramerateDenominator?: number;
  readonly FramerateNumerator?: number;
  readonly GopClosedCadence?: number;
  readonly GopSize?: unknown;
  readonly GopSizeUnits?: string;
  readonly HrdBufferInitialFillPercentage?: number;
  readonly HrdBufferSize?: number;
  readonly InterlaceMode?: string;
  readonly IntraDcPrecision?: string;
  readonly MaxBitrate?: number;
  readonly MinIInterval?: number;
  readonly NumberBFramesBetweenReferenceFrames?: number;
  readonly ParControl?: string;
  readonly ParDenominator?: number;
  readonly ParNumerator?: number;
  readonly QualityTuningLevel?: string;
  readonly RateControlMode?: string;
  readonly ScanTypeConversionMode?: string;
  readonly SceneChangeDetect?: string;
  readonly SlowPal?: string;
  readonly Softness?: number;
  readonly SpatialAdaptiveQuantization?: string;
  readonly Syntax?: string;
  readonly Telecine?: string;
  readonly TemporalAdaptiveQuantization?: string;
}

export interface MsSmoothAdditionalManifest {
  readonly ManifestNameModifier?: string;
  readonly SelectedOutputs?: [];
}

export interface MsSmoothEncryptionSettings {
  readonly SpekeKeyProvider?: SpekeKeyProvider;
}

export interface MsSmoothGroupSettings {
  readonly AdditionalManifests?: [];
  readonly AudioDeduplication?: string;
  readonly Destination?: string;
  readonly DestinationSettings?: DestinationSettings;
  readonly Encryption?: MsSmoothEncryptionSettings;
  readonly FragmentLength?: number;
  readonly FragmentLengthControl?: string;
  readonly ManifestEncoding?: string;
}

export interface MxfSettings {
  readonly AfdSignaling?: string;
  readonly Profile?: string;
  readonly XavcProfileSettings?: MxfXavcProfileSettings;
}

export interface MxfXavcProfileSettings {
  readonly DurationMode?: string;
  readonly MaxAncDataSize?: number;
}

export interface NexGuardFileMarkerSettings {
  readonly License?: string;
  readonly Payload?: number;
  readonly Preset?: string;
  readonly Strength?: string;
}

export interface NielsenConfiguration {
  readonly BreakoutCode?: number;
  readonly DistributorId?: string;
}

export interface NielsenNonLinearWatermarkSettings {
  readonly ActiveWatermarkProcess?: string;
  readonly AdiFilename?: string;
  readonly AssetId?: string;
  readonly AssetName?: string;
  readonly CbetSourceId?: string;
  readonly EpisodeId?: string;
  readonly MetadataDestination?: string;
  readonly SourceId?: number;
  readonly SourceWatermarkStatus?: string;
  readonly TicServerUrl?: string;
  readonly UniqueTicPerAudioTrack?: string;
}

export interface NoiseReducer {
  readonly Filter?: string;
  readonly FilterSettings?: NoiseReducerFilterSettings;
  readonly SpatialFilterSettings?: NoiseReducerSpatialFilterSettings;
  readonly TemporalFilterSettings?: NoiseReducerTemporalFilterSettings;
}

export interface NoiseReducerFilterSettings {
  readonly Strength?: number;
}

export interface NoiseReducerSpatialFilterSettings {
  readonly PostFilterSharpenStrength?: number;
  readonly Speed?: number;
  readonly Strength?: number;
}

export interface NoiseReducerTemporalFilterSettings {
  readonly AggressiveMode?: number;
  readonly PostTemporalSharpening?: string;
  readonly Speed?: number;
  readonly Strength?: number;
}

export interface NotFoundException {
  readonly Message?: string;
}

export interface OpusSettings {
  readonly Bitrate?: number;
  readonly Channels?: number;
  readonly SampleRate?: number;
}

export interface Output {
  readonly AudioDescriptions?: [];
  readonly CaptionDescriptions?: [];
  readonly ContainerSettings?: ContainerSettings;
  readonly Extension?: string;
  readonly NameModifier?: string;
  readonly OutputSettings?: OutputSettings;
  readonly Preset?: string;
  readonly VideoDescription?: VideoDescription;
}

export interface OutputChannelMapping {
  readonly InputChannels?: [];
  readonly InputChannelsFineTune?: [];
}

export interface OutputDetail {
  readonly DurationInMs?: number;
  readonly VideoDetails?: VideoDetail;
}

export interface OutputGroup {
  readonly AutomatedEncodingSettings?: AutomatedEncodingSettings;
  readonly CustomName?: string;
  readonly Name?: string;
  readonly OutputGroupSettings?: OutputGroupSettings;
  readonly Outputs?: [];
}

export interface OutputGroupDetail {
  readonly OutputDetails?: [];
}

export interface OutputGroupSettings {
  readonly CmafGroupSettings?: CmafGroupSettings;
  readonly DashIsoGroupSettings?: DashIsoGroupSettings;
  readonly FileGroupSettings?: FileGroupSettings;
  readonly HlsGroupSettings?: HlsGroupSettings;
  readonly MsSmoothGroupSettings?: MsSmoothGroupSettings;
  readonly Type?: string;
}

export interface OutputSettings {
  readonly HlsSettings?: HlsSettings;
}

export interface PartnerWatermarking {
  readonly NexguardFileMarkerSettings?: NexGuardFileMarkerSettings;
}

export interface Policy {
  readonly HttpInputs?: string;
  readonly HttpsInputs?: string;
  readonly S3Inputs?: string;
}

export interface Preset {
  readonly Arn?: string;
  readonly Category?: string;
  readonly CreatedAt?: Date;
  readonly Description?: string;
  readonly LastUpdated?: Date;
  readonly Name: string;
  readonly Settings: PresetSettings;
  readonly Type?: string;
}

export interface PresetSettings {
  readonly AudioDescriptions?: [];
  readonly CaptionDescriptions?: [];
  readonly ContainerSettings?: ContainerSettings;
  readonly VideoDescription?: VideoDescription;
}

export interface ProresSettings {
  readonly ChromaSampling?: string;
  readonly CodecProfile?: string;
  readonly FramerateControl?: string;
  readonly FramerateConversionAlgorithm?: string;
  readonly FramerateDenominator?: number;
  readonly FramerateNumerator?: number;
  readonly InterlaceMode?: string;
  readonly ParControl?: string;
  readonly ParDenominator?: number;
  readonly ParNumerator?: number;
  readonly ScanTypeConversionMode?: string;
  readonly SlowPal?: string;
  readonly Telecine?: string;
}

export interface PutPolicyRequest {
  readonly Policy: Policy;
}

export interface PutPolicyResponse {
  readonly Policy?: Policy;
}

export interface Queue {
  readonly Arn?: string;
  readonly CreatedAt?: Date;
  readonly Description?: string;
  readonly LastUpdated?: Date;
  readonly Name: string;
  readonly PricingPlan?: string;
  readonly ProgressingJobsCount?: number;
  readonly ReservationPlan?: ReservationPlan;
  readonly Status?: string;
  readonly SubmittedJobsCount?: number;
  readonly Type?: string;
}

export interface QueueTransition {
  readonly DestinationQueue?: string;
  readonly SourceQueue?: string;
  readonly Timestamp?: Date;
}

export interface Rectangle {
  readonly Height?: number;
  readonly Width?: number;
  readonly X?: number;
  readonly Y?: number;
}

export interface RemixSettings {
  readonly ChannelMapping?: ChannelMapping;
  readonly ChannelsIn?: number;
  readonly ChannelsOut?: number;
}

export interface ReservationPlan {
  readonly Commitment?: string;
  readonly ExpiresAt?: Date;
  readonly PurchasedAt?: Date;
  readonly RenewalType?: string;
  readonly ReservedSlots?: number;
  readonly Status?: string;
}

export interface ReservationPlanSettings {
  readonly Commitment: string;
  readonly RenewalType: string;
  readonly ReservedSlots: number;
}

export interface ResourceTags {
  readonly Arn?: string;
  readonly Tags?: {[key: string]: any};
}

export interface S3DestinationAccessControl {
  readonly CannedAcl?: string;
}

export interface S3DestinationSettings {
  readonly AccessControl?: S3DestinationAccessControl;
  readonly Encryption?: S3EncryptionSettings;
}

export interface S3EncryptionSettings {
  readonly EncryptionType?: string;
  readonly KmsEncryptionContext?: string;
  readonly KmsKeyArn?: string;
}

export interface SccDestinationSettings {
  readonly Framerate?: string;
}

export interface SpekeKeyProvider {
  readonly CertificateArn?: string;
  readonly ResourceId?: string;
  readonly SystemIds?: [];
  readonly Url?: string;
}

export interface SpekeKeyProviderCmaf {
  readonly CertificateArn?: string;
  readonly DashSignaledSystemIds?: [];
  readonly HlsSignaledSystemIds?: [];
  readonly ResourceId?: string;
  readonly Url?: string;
}

export interface SrtDestinationSettings {
  readonly StylePassthrough?: string;
}

export interface StaticKeyProvider {
  readonly KeyFormat?: string;
  readonly KeyFormatVersions?: string;
  readonly StaticKeyValue?: string;
  readonly Url?: string;
}

export interface TagResourceRequest {
  readonly Arn: string;
  readonly Tags: {[key: string]: any};
}

export interface TagResourceResponse {
}

export interface TeletextDestinationSettings {
  readonly PageNumber?: string;
  readonly PageTypes?: [];
}

export interface TeletextSourceSettings {
  readonly PageNumber?: string;
}

export interface TimecodeBurnin {
  readonly FontSize?: number;
  readonly Position?: string;
  readonly Prefix?: string;
}

export interface TimecodeConfig {
  readonly Anchor?: string;
  readonly Source?: string;
  readonly Start?: string;
  readonly TimestampOffset?: string;
}

export interface TimedMetadataInsertion {
  readonly Id3Insertions?: [];
}

export interface Timing {
  readonly FinishTime?: Date;
  readonly StartTime?: Date;
  readonly SubmitTime?: Date;
}

export interface TooManyRequestsException {
  readonly Message?: string;
}

export interface TrackSourceSettings {
  readonly TrackNumber?: number;
}

export interface TtmlDestinationSettings {
  readonly StylePassthrough?: string;
}

export interface UntagResourceRequest {
  readonly Arn: string;
  readonly TagKeys?: [];
}

export interface UntagResourceResponse {
}

export interface UpdateJobTemplateRequest {
  readonly AccelerationSettings?: AccelerationSettings;
  readonly Category?: string;
  readonly Description?: string;
  readonly HopDestinations?: [];
  readonly Name: string;
  readonly Priority?: number;
  readonly Queue?: string;
  readonly Settings?: JobTemplateSettings;
  readonly StatusUpdateInterval?: string;
}

export interface UpdateJobTemplateResponse {
  readonly JobTemplate?: JobTemplate;
}

export interface UpdatePresetRequest {
  readonly Category?: string;
  readonly Description?: string;
  readonly Name: string;
  readonly Settings?: PresetSettings;
}

export interface UpdatePresetResponse {
  readonly Preset?: Preset;
}

export interface UpdateQueueRequest {
  readonly Description?: string;
  readonly Name: string;
  readonly ReservationPlanSettings?: ReservationPlanSettings;
  readonly Status?: string;
}

export interface UpdateQueueResponse {
  readonly Queue?: Queue;
}

export interface Vc3Settings {
  readonly FramerateControl?: string;
  readonly FramerateConversionAlgorithm?: string;
  readonly FramerateDenominator?: number;
  readonly FramerateNumerator?: number;
  readonly InterlaceMode?: string;
  readonly ScanTypeConversionMode?: string;
  readonly SlowPal?: string;
  readonly Telecine?: string;
  readonly Vc3Class?: string;
}

export interface VideoCodecSettings {
  readonly Av1Settings?: Av1Settings;
  readonly AvcIntraSettings?: AvcIntraSettings;
  readonly Codec?: string;
  readonly FrameCaptureSettings?: FrameCaptureSettings;
  readonly H264Settings?: H264Settings;
  readonly H265Settings?: H265Settings;
  readonly Mpeg2Settings?: Mpeg2Settings;
  readonly ProresSettings?: ProresSettings;
  readonly Vc3Settings?: Vc3Settings;
  readonly Vp8Settings?: Vp8Settings;
  readonly Vp9Settings?: Vp9Settings;
  readonly XavcSettings?: XavcSettings;
}

export interface VideoDescription {
  readonly AfdSignaling?: string;
  readonly AntiAlias?: string;
  readonly CodecSettings?: VideoCodecSettings;
  readonly ColorMetadata?: string;
  readonly Crop?: Rectangle;
  readonly DropFrameTimecode?: string;
  readonly FixedAfd?: number;
  readonly Height?: number;
  readonly Position?: Rectangle;
  readonly RespondToAfd?: string;
  readonly ScalingBehavior?: string;
  readonly Sharpness?: number;
  readonly TimecodeInsertion?: string;
  readonly VideoPreprocessors?: VideoPreprocessor;
  readonly Width?: number;
}

export interface VideoDetail {
  readonly HeightInPx?: number;
  readonly WidthInPx?: number;
}

export interface VideoPreprocessor {
  readonly ColorCorrector?: ColorCorrector;
  readonly Deinterlacer?: Deinterlacer;
  readonly DolbyVision?: DolbyVision;
  readonly Hdr10Plus?: Hdr10Plus;
  readonly ImageInserter?: ImageInserter;
  readonly NoiseReducer?: NoiseReducer;
  readonly PartnerWatermarking?: PartnerWatermarking;
  readonly TimecodeBurnin?: TimecodeBurnin;
}

export interface VideoSelector {
  readonly AlphaBehavior?: string;
  readonly ColorSpace?: string;
  readonly ColorSpaceUsage?: string;
  readonly Hdr10Metadata?: Hdr10Metadata;
  readonly Pid?: number;
  readonly ProgramNumber?: number;
  readonly Rotate?: string;
  readonly SampleRange?: string;
}

export interface VorbisSettings {
  readonly Channels?: number;
  readonly SampleRate?: number;
  readonly VbrQuality?: number;
}

export interface Vp8Settings {
  readonly Bitrate?: number;
  readonly FramerateControl?: string;
  readonly FramerateConversionAlgorithm?: string;
  readonly FramerateDenominator?: number;
  readonly FramerateNumerator?: number;
  readonly GopSize?: unknown;
  readonly HrdBufferSize?: number;
  readonly MaxBitrate?: number;
  readonly ParControl?: string;
  readonly ParDenominator?: number;
  readonly ParNumerator?: number;
  readonly QualityTuningLevel?: string;
  readonly RateControlMode?: string;
}

export interface Vp9Settings {
  readonly Bitrate?: number;
  readonly FramerateControl?: string;
  readonly FramerateConversionAlgorithm?: string;
  readonly FramerateDenominator?: number;
  readonly FramerateNumerator?: number;
  readonly GopSize?: unknown;
  readonly HrdBufferSize?: number;
  readonly MaxBitrate?: number;
  readonly ParControl?: string;
  readonly ParDenominator?: number;
  readonly ParNumerator?: number;
  readonly QualityTuningLevel?: string;
  readonly RateControlMode?: string;
}

export interface WavSettings {
  readonly BitDepth?: number;
  readonly Channels?: number;
  readonly Format?: string;
  readonly SampleRate?: number;
}

export interface WebvttDestinationSettings {
  readonly StylePassthrough?: string;
}

export interface WebvttHlsSourceSettings {
  readonly RenditionGroupId?: string;
  readonly RenditionLanguageCode?: string;
  readonly RenditionName?: string;
}

export interface Xavc4kIntraCbgProfileSettings {
  readonly XavcClass?: string;
}

export interface Xavc4kIntraVbrProfileSettings {
  readonly XavcClass?: string;
}

export interface Xavc4kProfileSettings {
  readonly BitrateClass?: string;
  readonly CodecProfile?: string;
  readonly FlickerAdaptiveQuantization?: string;
  readonly GopBReference?: string;
  readonly GopClosedCadence?: number;
  readonly HrdBufferSize?: number;
  readonly QualityTuningLevel?: string;
  readonly Slices?: number;
}

export interface XavcHdIntraCbgProfileSettings {
  readonly XavcClass?: string;
}

export interface XavcHdProfileSettings {
  readonly BitrateClass?: string;
  readonly FlickerAdaptiveQuantization?: string;
  readonly GopBReference?: string;
  readonly GopClosedCadence?: number;
  readonly HrdBufferSize?: number;
  readonly InterlaceMode?: string;
  readonly QualityTuningLevel?: string;
  readonly Slices?: number;
  readonly Telecine?: string;
}

export interface XavcSettings {
  readonly AdaptiveQuantization?: string;
  readonly EntropyEncoding?: string;
  readonly FramerateControl?: string;
  readonly FramerateConversionAlgorithm?: string;
  readonly FramerateDenominator?: number;
  readonly FramerateNumerator?: number;
  readonly Profile?: string;
  readonly SlowPal?: string;
  readonly Softness?: number;
  readonly SpatialAdaptiveQuantization?: string;
  readonly TemporalAdaptiveQuantization?: string;
  readonly Xavc4kIntraCbgProfileSettings?: Xavc4kIntraCbgProfileSettings;
  readonly Xavc4kIntraVbrProfileSettings?: Xavc4kIntraVbrProfileSettings;
  readonly Xavc4kProfileSettings?: Xavc4kProfileSettings;
  readonly XavcHdIntraCbgProfileSettings?: XavcHdIntraCbgProfileSettings;
  readonly XavcHdProfileSettings?: XavcHdProfileSettings;
}


