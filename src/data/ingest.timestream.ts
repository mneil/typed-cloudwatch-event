/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CreateDatabase {
  readonly DatabaseName: string;
  readonly KmsKeyId?: string;
  readonly Tags?: [];
}

export interface CreateTable {
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly RetentionProperties?: RetentionProperties;
  readonly Tags?: [];
  readonly MagneticStoreWriteProperties?: MagneticStoreWriteProperties;
}

export interface DeleteDatabase {
  readonly DatabaseName: string;
}

export interface DeleteTable {
  readonly DatabaseName: string;
  readonly TableName: string;
}

export interface DescribeDatabase {
  readonly DatabaseName: string;
}

export interface DescribeEndpoints {
}

export interface DescribeTable {
  readonly DatabaseName: string;
  readonly TableName: string;
}

export interface ListDatabases {
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListTables {
  readonly DatabaseName?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListTagsForResource {
  readonly ResourceARN: string;
}

export interface TagResource {
  readonly ResourceARN: string;
  readonly Tags: [];
}

export interface UntagResource {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}

export interface UpdateDatabase {
  readonly DatabaseName: string;
  readonly KmsKeyId: string;
}

export interface UpdateTable {
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly RetentionProperties?: RetentionProperties;
  readonly MagneticStoreWriteProperties?: MagneticStoreWriteProperties;
}

export interface WriteRecords {
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly CommonAttributes?: Record;
  readonly Records: [];
}

export interface AccessDeniedException {
  readonly Message: string;
}

export interface ConflictException {
  readonly Message: string;
}

export interface CreateDatabaseRequest {
  readonly DatabaseName: string;
  readonly KmsKeyId?: string;
  readonly Tags?: [];
}

export interface CreateDatabaseResponse {
  readonly Database?: Database;
}

export interface CreateTableRequest {
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly RetentionProperties?: RetentionProperties;
  readonly Tags?: [];
  readonly MagneticStoreWriteProperties?: MagneticStoreWriteProperties;
}

export interface CreateTableResponse {
  readonly Table?: Table;
}

export interface Database {
  readonly Arn?: string;
  readonly DatabaseName?: string;
  readonly TableCount?: number;
  readonly KmsKeyId?: string;
  readonly CreationTime?: Date;
  readonly LastUpdatedTime?: Date;
}

export interface DeleteDatabaseRequest {
  readonly DatabaseName: string;
}

export interface DeleteTableRequest {
  readonly DatabaseName: string;
  readonly TableName: string;
}

export interface DescribeDatabaseRequest {
  readonly DatabaseName: string;
}

export interface DescribeDatabaseResponse {
  readonly Database?: Database;
}

export interface DescribeEndpointsRequest {
}

export interface DescribeEndpointsResponse {
  readonly Endpoints: [];
}

export interface DescribeTableRequest {
  readonly DatabaseName: string;
  readonly TableName: string;
}

export interface DescribeTableResponse {
  readonly Table?: Table;
}

export interface Dimension {
  readonly Name: string;
  readonly Value: string;
  readonly DimensionValueType?: string;
}

export interface Endpoint {
  readonly Address: string;
  readonly CachePeriodInMinutes: number;
}

export interface InternalServerException {
  readonly Message: string;
}

export interface InvalidEndpointException {
  readonly Message?: string;
}

export interface ListDatabasesRequest {
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListDatabasesResponse {
  readonly Databases?: [];
  readonly NextToken?: string;
}

export interface ListTablesRequest {
  readonly DatabaseName?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListTablesResponse {
  readonly Tables?: [];
  readonly NextToken?: string;
}

export interface ListTagsForResourceRequest {
  readonly ResourceARN: string;
}

export interface ListTagsForResourceResponse {
  readonly Tags?: [];
}

export interface MagneticStoreRejectedDataLocation {
  readonly S3Configuration?: S3Configuration;
}

export interface MagneticStoreWriteProperties {
  readonly EnableMagneticStoreWrites: boolean;
  readonly MagneticStoreRejectedDataLocation?: MagneticStoreRejectedDataLocation;
}

export interface MeasureValue {
  readonly Name: string;
  readonly Value: string;
  readonly Type: string;
}

export interface Record {
  readonly Dimensions?: [];
  readonly MeasureName?: string;
  readonly MeasureValue?: string;
  readonly MeasureValueType?: string;
  readonly Time?: string;
  readonly TimeUnit?: string;
  readonly Version?: number;
  readonly MeasureValues?: [];
}

export interface RecordsIngested {
  readonly Total?: number;
  readonly MemoryStore?: number;
  readonly MagneticStore?: number;
}

export interface RejectedRecord {
  readonly RecordIndex?: number;
  readonly Reason?: string;
  readonly ExistingVersion?: number;
}

export interface RejectedRecordsException {
  readonly Message?: string;
  readonly RejectedRecords?: [];
}

export interface ResourceNotFoundException {
  readonly Message?: string;
}

export interface RetentionProperties {
  readonly MemoryStoreRetentionPeriodInHours: number;
  readonly MagneticStoreRetentionPeriodInDays: number;
}

export interface S3Configuration {
  readonly BucketName?: string;
  readonly ObjectKeyPrefix?: string;
  readonly EncryptionOption?: string;
  readonly KmsKeyId?: string;
}

export interface ServiceQuotaExceededException {
  readonly Message?: string;
}

export interface Table {
  readonly Arn?: string;
  readonly TableName?: string;
  readonly DatabaseName?: string;
  readonly TableStatus?: string;
  readonly RetentionProperties?: RetentionProperties;
  readonly CreationTime?: Date;
  readonly LastUpdatedTime?: Date;
  readonly MagneticStoreWriteProperties?: MagneticStoreWriteProperties;
}

export interface Tag {
  readonly Key: string;
  readonly Value: string;
}

export interface TagResourceRequest {
  readonly ResourceARN: string;
  readonly Tags: [];
}

export interface TagResourceResponse {
}

export interface ThrottlingException {
  readonly Message: string;
}

export interface UntagResourceRequest {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}

export interface UntagResourceResponse {
}

export interface UpdateDatabaseRequest {
  readonly DatabaseName: string;
  readonly KmsKeyId: string;
}

export interface UpdateDatabaseResponse {
  readonly Database?: Database;
}

export interface UpdateTableRequest {
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly RetentionProperties?: RetentionProperties;
  readonly MagneticStoreWriteProperties?: MagneticStoreWriteProperties;
}

export interface UpdateTableResponse {
  readonly Table?: Table;
}

export interface ValidationException {
  readonly Message: string;
}

export interface WriteRecordsRequest {
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly CommonAttributes?: Record;
  readonly Records: [];
}

export interface WriteRecordsResponse {
  readonly RecordsIngested?: RecordsIngested;
}


