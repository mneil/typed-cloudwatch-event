/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CreateDatabase {
  readonly DatabaseName: string;
  readonly KmsKeyId: string;
  readonly Tags: [];
}
export interface CreateTable {
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly RetentionProperties: RetentionProperties;
  readonly Tags: [];
  readonly MagneticStoreWriteProperties: MagneticStoreWriteProperties;
}
export interface DeleteDatabase {
  readonly DatabaseName: string;
}
export interface DeleteTable {
  readonly DatabaseName: string;
  readonly TableName: string;
}
export interface DescribeDatabase {
  readonly DatabaseName: string;
}
export interface DescribeEndpoints {
}
export interface DescribeTable {
  readonly DatabaseName: string;
  readonly TableName: string;
}
export interface ListDatabases {
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListTables {
  readonly DatabaseName: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListTagsForResource {
  readonly ResourceARN: string;
}
export interface TagResource {
  readonly ResourceARN: string;
  readonly Tags: [];
}
export interface UntagResource {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}
export interface UpdateDatabase {
  readonly DatabaseName: string;
  readonly KmsKeyId: string;
}
export interface UpdateTable {
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly RetentionProperties: RetentionProperties;
  readonly MagneticStoreWriteProperties: MagneticStoreWriteProperties;
}
export interface WriteRecords {
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly CommonAttributes: Record;
  readonly Records: [];
}



interface AccessDeniedException {
  readonly Message: string;
}

interface ConflictException {
  readonly Message: string;
}

interface CreateDatabaseRequest {
  readonly DatabaseName: string;
  readonly KmsKeyId: string;
  readonly Tags: [];
}

interface CreateDatabaseResponse {
  readonly Database: Database;
}

interface CreateTableRequest {
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly RetentionProperties: RetentionProperties;
  readonly Tags: [];
  readonly MagneticStoreWriteProperties: MagneticStoreWriteProperties;
}

interface CreateTableResponse {
  readonly Table: Table;
}

interface Database {
  readonly Arn: string;
  readonly DatabaseName: string;
  readonly TableCount: number;
  readonly KmsKeyId: string;
  readonly CreationTime: Date;
  readonly LastUpdatedTime: Date;
}

interface DeleteDatabaseRequest {
  readonly DatabaseName: string;
}

interface DeleteTableRequest {
  readonly DatabaseName: string;
  readonly TableName: string;
}

interface DescribeDatabaseRequest {
  readonly DatabaseName: string;
}

interface DescribeDatabaseResponse {
  readonly Database: Database;
}

interface DescribeEndpointsRequest {
}

interface DescribeEndpointsResponse {
  readonly Endpoints: [];
}

interface DescribeTableRequest {
  readonly DatabaseName: string;
  readonly TableName: string;
}

interface DescribeTableResponse {
  readonly Table: Table;
}

interface Dimension {
  readonly Name: string;
  readonly Value: string;
  readonly DimensionValueType: string;
}

interface Endpoint {
  readonly Address: string;
  readonly CachePeriodInMinutes: number;
}

interface InternalServerException {
  readonly Message: string;
}

interface InvalidEndpointException {
  readonly Message: string;
}

interface ListDatabasesRequest {
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListDatabasesResponse {
  readonly Databases: [];
  readonly NextToken: string;
}

interface ListTablesRequest {
  readonly DatabaseName: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListTablesResponse {
  readonly Tables: [];
  readonly NextToken: string;
}

interface ListTagsForResourceRequest {
  readonly ResourceARN: string;
}

interface ListTagsForResourceResponse {
  readonly Tags: [];
}

interface MagneticStoreRejectedDataLocation {
  readonly S3Configuration: S3Configuration;
}

interface MagneticStoreWriteProperties {
  readonly EnableMagneticStoreWrites: boolean;
  readonly MagneticStoreRejectedDataLocation: MagneticStoreRejectedDataLocation;
}

interface MeasureValue {
  readonly Name: string;
  readonly Value: string;
  readonly Type: string;
}

interface Record {
  readonly Dimensions: [];
  readonly MeasureName: string;
  readonly MeasureValue: string;
  readonly MeasureValueType: string;
  readonly Time: string;
  readonly TimeUnit: string;
  readonly Version: number;
  readonly MeasureValues: [];
}

interface RecordsIngested {
  readonly Total: number;
  readonly MemoryStore: number;
  readonly MagneticStore: number;
}

interface RejectedRecord {
  readonly RecordIndex: number;
  readonly Reason: string;
  readonly ExistingVersion: number;
}

interface RejectedRecordsException {
  readonly Message: string;
  readonly RejectedRecords: [];
}

interface ResourceNotFoundException {
  readonly Message: string;
}

interface RetentionProperties {
  readonly MemoryStoreRetentionPeriodInHours: number;
  readonly MagneticStoreRetentionPeriodInDays: number;
}

interface S3Configuration {
  readonly BucketName: string;
  readonly ObjectKeyPrefix: string;
  readonly EncryptionOption: string;
  readonly KmsKeyId: string;
}

interface ServiceQuotaExceededException {
  readonly Message: string;
}

interface Table {
  readonly Arn: string;
  readonly TableName: string;
  readonly DatabaseName: string;
  readonly TableStatus: string;
  readonly RetentionProperties: RetentionProperties;
  readonly CreationTime: Date;
  readonly LastUpdatedTime: Date;
  readonly MagneticStoreWriteProperties: MagneticStoreWriteProperties;
}

interface Tag {
  readonly Key: string;
  readonly Value: string;
}

interface TagResourceRequest {
  readonly ResourceARN: string;
  readonly Tags: [];
}

interface TagResourceResponse {
}

interface ThrottlingException {
  readonly Message: string;
}

interface UntagResourceRequest {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}

interface UntagResourceResponse {
}

interface UpdateDatabaseRequest {
  readonly DatabaseName: string;
  readonly KmsKeyId: string;
}

interface UpdateDatabaseResponse {
  readonly Database: Database;
}

interface UpdateTableRequest {
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly RetentionProperties: RetentionProperties;
  readonly MagneticStoreWriteProperties: MagneticStoreWriteProperties;
}

interface UpdateTableResponse {
  readonly Table: Table;
}

interface ValidationException {
  readonly Message: string;
}

interface WriteRecordsRequest {
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly CommonAttributes: Record;
  readonly Records: [];
}

interface WriteRecordsResponse {
  readonly RecordsIngested: RecordsIngested;
}

