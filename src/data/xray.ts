/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface BatchGetTraces {
  readonly TraceIds: [];
  readonly NextToken?: string;
}

export interface CreateGroup {
  readonly GroupName: string;
  readonly FilterExpression?: string;
  readonly InsightsConfiguration?: InsightsConfiguration;
  readonly Tags?: [];
}

export interface CreateSamplingRule {
  readonly SamplingRule: SamplingRule;
  readonly Tags?: [];
}

export interface DeleteGroup {
  readonly GroupName?: string;
  readonly GroupARN?: string;
}

export interface DeleteSamplingRule {
  readonly RuleName?: string;
  readonly RuleARN?: string;
}

export interface GetEncryptionConfig {
}

export interface GetGroup {
  readonly GroupName?: string;
  readonly GroupARN?: string;
}

export interface GetGroups {
  readonly NextToken?: string;
}

export interface GetInsight {
  readonly InsightId: string;
}

export interface GetInsightEvents {
  readonly InsightId: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetInsightImpactGraph {
  readonly InsightId: string;
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly NextToken?: string;
}

export interface GetInsightSummaries {
  readonly States?: [];
  readonly GroupARN?: string;
  readonly GroupName?: string;
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetSamplingRules {
  readonly NextToken?: string;
}

export interface GetSamplingStatisticSummaries {
  readonly NextToken?: string;
}

export interface GetSamplingTargets {
  readonly SamplingStatisticsDocuments: [];
}

export interface GetServiceGraph {
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly GroupName?: string;
  readonly GroupARN?: string;
  readonly NextToken?: string;
}

export interface GetTimeSeriesServiceStatistics {
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly GroupName?: string;
  readonly GroupARN?: string;
  readonly EntitySelectorExpression?: string;
  readonly Period?: number;
  readonly ForecastStatistics?: boolean;
  readonly NextToken?: string;
}

export interface GetTraceGraph {
  readonly TraceIds: [];
  readonly NextToken?: string;
}

export interface GetTraceSummaries {
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly TimeRangeType?: string;
  readonly Sampling?: boolean;
  readonly SamplingStrategy?: SamplingStrategy;
  readonly FilterExpression?: string;
  readonly NextToken?: string;
}

export interface ListTagsForResource {
  readonly ResourceARN: string;
  readonly NextToken?: string;
}

export interface PutEncryptionConfig {
  readonly KeyId?: string;
  readonly Type: string;
}

export interface PutTelemetryRecords {
  readonly TelemetryRecords: [];
  readonly EC2InstanceId?: string;
  readonly Hostname?: string;
  readonly ResourceARN?: string;
}

export interface PutTraceSegments {
  readonly TraceSegmentDocuments: [];
}

export interface TagResource {
  readonly ResourceARN: string;
  readonly Tags: [];
}

export interface UntagResource {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}

export interface UpdateGroup {
  readonly GroupName?: string;
  readonly GroupARN?: string;
  readonly FilterExpression?: string;
  readonly InsightsConfiguration?: InsightsConfiguration;
}

export interface UpdateSamplingRule {
  readonly SamplingRuleUpdate: SamplingRuleUpdate;
}

export interface Alias {
  readonly Name?: string;
  readonly Names?: [];
  readonly Type?: string;
}

export interface AnnotationValue {
  readonly NumberValue?: unknown;
  readonly BooleanValue?: boolean;
  readonly StringValue?: string;
}

export interface AnomalousService {
  readonly ServiceId?: ServiceId;
}

export interface AvailabilityZoneDetail {
  readonly Name?: string;
}

export interface BackendConnectionErrors {
  readonly TimeoutCount?: number;
  readonly ConnectionRefusedCount?: number;
  readonly HTTPCode4XXCount?: number;
  readonly HTTPCode5XXCount?: number;
  readonly UnknownHostCount?: number;
  readonly OtherCount?: number;
}

export interface BatchGetTracesRequest {
  readonly TraceIds: [];
  readonly NextToken?: string;
}

export interface BatchGetTracesResult {
  readonly Traces?: [];
  readonly UnprocessedTraceIds?: [];
  readonly NextToken?: string;
}

export interface CreateGroupRequest {
  readonly GroupName: string;
  readonly FilterExpression?: string;
  readonly InsightsConfiguration?: InsightsConfiguration;
  readonly Tags?: [];
}

export interface CreateGroupResult {
  readonly Group?: Group;
}

export interface CreateSamplingRuleRequest {
  readonly SamplingRule: SamplingRule;
  readonly Tags?: [];
}

export interface CreateSamplingRuleResult {
  readonly SamplingRuleRecord?: SamplingRuleRecord;
}

export interface DeleteGroupRequest {
  readonly GroupName?: string;
  readonly GroupARN?: string;
}

export interface DeleteGroupResult {
}

export interface DeleteSamplingRuleRequest {
  readonly RuleName?: string;
  readonly RuleARN?: string;
}

export interface DeleteSamplingRuleResult {
  readonly SamplingRuleRecord?: SamplingRuleRecord;
}

export interface Edge {
  readonly ReferenceId?: number;
  readonly StartTime?: Date;
  readonly EndTime?: Date;
  readonly SummaryStatistics?: EdgeStatistics;
  readonly ResponseTimeHistogram?: [];
  readonly Aliases?: [];
}

export interface EdgeStatistics {
  readonly OkCount?: number;
  readonly ErrorStatistics?: ErrorStatistics;
  readonly FaultStatistics?: FaultStatistics;
  readonly TotalCount?: number;
  readonly TotalResponseTime?: unknown;
}

export interface EncryptionConfig {
  readonly KeyId?: string;
  readonly Status?: string;
  readonly Type?: string;
}

export interface ErrorRootCause {
  readonly Services?: [];
  readonly ClientImpacting?: boolean;
}

export interface ErrorRootCauseEntity {
  readonly Name?: string;
  readonly Exceptions?: [];
  readonly Remote?: boolean;
}

export interface ErrorRootCauseService {
  readonly Name?: string;
  readonly Names?: [];
  readonly Type?: string;
  readonly AccountId?: string;
  readonly EntityPath?: [];
  readonly Inferred?: boolean;
}

export interface ErrorStatistics {
  readonly ThrottleCount?: number;
  readonly OtherCount?: number;
  readonly TotalCount?: number;
}

export interface FaultRootCause {
  readonly Services?: [];
  readonly ClientImpacting?: boolean;
}

export interface FaultRootCauseEntity {
  readonly Name?: string;
  readonly Exceptions?: [];
  readonly Remote?: boolean;
}

export interface FaultRootCauseService {
  readonly Name?: string;
  readonly Names?: [];
  readonly Type?: string;
  readonly AccountId?: string;
  readonly EntityPath?: [];
  readonly Inferred?: boolean;
}

export interface FaultStatistics {
  readonly OtherCount?: number;
  readonly TotalCount?: number;
}

export interface ForecastStatistics {
  readonly FaultCountHigh?: number;
  readonly FaultCountLow?: number;
}

export interface GetEncryptionConfigRequest {
}

export interface GetEncryptionConfigResult {
  readonly EncryptionConfig?: EncryptionConfig;
}

export interface GetGroupRequest {
  readonly GroupName?: string;
  readonly GroupARN?: string;
}

export interface GetGroupResult {
  readonly Group?: Group;
}

export interface GetGroupsRequest {
  readonly NextToken?: string;
}

export interface GetGroupsResult {
  readonly Groups?: [];
  readonly NextToken?: string;
}

export interface GetInsightEventsRequest {
  readonly InsightId: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetInsightEventsResult {
  readonly InsightEvents?: [];
  readonly NextToken?: string;
}

export interface GetInsightImpactGraphRequest {
  readonly InsightId: string;
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly NextToken?: string;
}

export interface GetInsightImpactGraphResult {
  readonly InsightId?: string;
  readonly StartTime?: Date;
  readonly EndTime?: Date;
  readonly ServiceGraphStartTime?: Date;
  readonly ServiceGraphEndTime?: Date;
  readonly Services?: [];
  readonly NextToken?: string;
}

export interface GetInsightRequest {
  readonly InsightId: string;
}

export interface GetInsightResult {
  readonly Insight?: Insight;
}

export interface GetInsightSummariesRequest {
  readonly States?: [];
  readonly GroupARN?: string;
  readonly GroupName?: string;
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetInsightSummariesResult {
  readonly InsightSummaries?: [];
  readonly NextToken?: string;
}

export interface GetSamplingRulesRequest {
  readonly NextToken?: string;
}

export interface GetSamplingRulesResult {
  readonly SamplingRuleRecords?: [];
  readonly NextToken?: string;
}

export interface GetSamplingStatisticSummariesRequest {
  readonly NextToken?: string;
}

export interface GetSamplingStatisticSummariesResult {
  readonly SamplingStatisticSummaries?: [];
  readonly NextToken?: string;
}

export interface GetSamplingTargetsRequest {
  readonly SamplingStatisticsDocuments: [];
}

export interface GetSamplingTargetsResult {
  readonly SamplingTargetDocuments?: [];
  readonly LastRuleModification?: Date;
  readonly UnprocessedStatistics?: [];
}

export interface GetServiceGraphRequest {
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly GroupName?: string;
  readonly GroupARN?: string;
  readonly NextToken?: string;
}

export interface GetServiceGraphResult {
  readonly StartTime?: Date;
  readonly EndTime?: Date;
  readonly Services?: [];
  readonly ContainsOldGroupVersions?: boolean;
  readonly NextToken?: string;
}

export interface GetTimeSeriesServiceStatisticsRequest {
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly GroupName?: string;
  readonly GroupARN?: string;
  readonly EntitySelectorExpression?: string;
  readonly Period?: number;
  readonly ForecastStatistics?: boolean;
  readonly NextToken?: string;
}

export interface GetTimeSeriesServiceStatisticsResult {
  readonly TimeSeriesServiceStatistics?: [];
  readonly ContainsOldGroupVersions?: boolean;
  readonly NextToken?: string;
}

export interface GetTraceGraphRequest {
  readonly TraceIds: [];
  readonly NextToken?: string;
}

export interface GetTraceGraphResult {
  readonly Services?: [];
  readonly NextToken?: string;
}

export interface GetTraceSummariesRequest {
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly TimeRangeType?: string;
  readonly Sampling?: boolean;
  readonly SamplingStrategy?: SamplingStrategy;
  readonly FilterExpression?: string;
  readonly NextToken?: string;
}

export interface GetTraceSummariesResult {
  readonly TraceSummaries?: [];
  readonly ApproximateTime?: Date;
  readonly TracesProcessedCount?: number;
  readonly NextToken?: string;
}

export interface Group {
  readonly GroupName?: string;
  readonly GroupARN?: string;
  readonly FilterExpression?: string;
  readonly InsightsConfiguration?: InsightsConfiguration;
}

export interface GroupSummary {
  readonly GroupName?: string;
  readonly GroupARN?: string;
  readonly FilterExpression?: string;
  readonly InsightsConfiguration?: InsightsConfiguration;
}

export interface HistogramEntry {
  readonly Value?: unknown;
  readonly Count?: number;
}

export interface Http {
  readonly HttpURL?: string;
  readonly HttpStatus?: number;
  readonly HttpMethod?: string;
  readonly UserAgent?: string;
  readonly ClientIp?: string;
}

export interface Insight {
  readonly InsightId?: string;
  readonly GroupARN?: string;
  readonly GroupName?: string;
  readonly RootCauseServiceId?: ServiceId;
  readonly Categories?: [];
  readonly State?: string;
  readonly StartTime?: Date;
  readonly EndTime?: Date;
  readonly Summary?: string;
  readonly ClientRequestImpactStatistics?: RequestImpactStatistics;
  readonly RootCauseServiceRequestImpactStatistics?: RequestImpactStatistics;
  readonly TopAnomalousServices?: [];
}

export interface InsightEvent {
  readonly Summary?: string;
  readonly EventTime?: Date;
  readonly ClientRequestImpactStatistics?: RequestImpactStatistics;
  readonly RootCauseServiceRequestImpactStatistics?: RequestImpactStatistics;
  readonly TopAnomalousServices?: [];
}

export interface InsightImpactGraphEdge {
  readonly ReferenceId?: number;
}

export interface InsightImpactGraphService {
  readonly ReferenceId?: number;
  readonly Type?: string;
  readonly Name?: string;
  readonly Names?: [];
  readonly AccountId?: string;
  readonly Edges?: [];
}

export interface InsightSummary {
  readonly InsightId?: string;
  readonly GroupARN?: string;
  readonly GroupName?: string;
  readonly RootCauseServiceId?: ServiceId;
  readonly Categories?: [];
  readonly State?: string;
  readonly StartTime?: Date;
  readonly EndTime?: Date;
  readonly Summary?: string;
  readonly ClientRequestImpactStatistics?: RequestImpactStatistics;
  readonly RootCauseServiceRequestImpactStatistics?: RequestImpactStatistics;
  readonly TopAnomalousServices?: [];
  readonly LastUpdateTime?: Date;
}

export interface InsightsConfiguration {
  readonly InsightsEnabled?: boolean;
  readonly NotificationsEnabled?: boolean;
}

export interface InstanceIdDetail {
  readonly Id?: string;
}

export interface InvalidRequestException {
  readonly Message?: string;
}

export interface ListTagsForResourceRequest {
  readonly ResourceARN: string;
  readonly NextToken?: string;
}

export interface ListTagsForResourceResponse {
  readonly Tags?: [];
  readonly NextToken?: string;
}

export interface PutEncryptionConfigRequest {
  readonly KeyId?: string;
  readonly Type: string;
}

export interface PutEncryptionConfigResult {
  readonly EncryptionConfig?: EncryptionConfig;
}

export interface PutTelemetryRecordsRequest {
  readonly TelemetryRecords: [];
  readonly EC2InstanceId?: string;
  readonly Hostname?: string;
  readonly ResourceARN?: string;
}

export interface PutTelemetryRecordsResult {
}

export interface PutTraceSegmentsRequest {
  readonly TraceSegmentDocuments: [];
}

export interface PutTraceSegmentsResult {
  readonly UnprocessedTraceSegments?: [];
}

export interface RequestImpactStatistics {
  readonly FaultCount?: number;
  readonly OkCount?: number;
  readonly TotalCount?: number;
}

export interface ResourceARNDetail {
  readonly ARN?: string;
}

export interface ResourceNotFoundException {
  readonly Message?: string;
  readonly ResourceName?: string;
}

export interface ResponseTimeRootCause {
  readonly Services?: [];
  readonly ClientImpacting?: boolean;
}

export interface ResponseTimeRootCauseEntity {
  readonly Name?: string;
  readonly Coverage?: unknown;
  readonly Remote?: boolean;
}

export interface ResponseTimeRootCauseService {
  readonly Name?: string;
  readonly Names?: [];
  readonly Type?: string;
  readonly AccountId?: string;
  readonly EntityPath?: [];
  readonly Inferred?: boolean;
}

export interface RootCauseException {
  readonly Name?: string;
  readonly Message?: string;
}

export interface RuleLimitExceededException {
  readonly Message?: string;
}

export interface SamplingRule {
  readonly RuleName?: string;
  readonly RuleARN?: string;
  readonly ResourceARN: string;
  readonly Priority: number;
  readonly FixedRate: unknown;
  readonly ReservoirSize: number;
  readonly ServiceName: string;
  readonly ServiceType: string;
  readonly Host: string;
  readonly HTTPMethod: string;
  readonly URLPath: string;
  readonly Version: number;
  readonly Attributes?: {[key: string]: any};
}

export interface SamplingRuleRecord {
  readonly SamplingRule?: SamplingRule;
  readonly CreatedAt?: Date;
  readonly ModifiedAt?: Date;
}

export interface SamplingRuleUpdate {
  readonly RuleName?: string;
  readonly RuleARN?: string;
  readonly ResourceARN?: string;
  readonly Priority?: number;
  readonly FixedRate?: unknown;
  readonly ReservoirSize?: number;
  readonly Host?: string;
  readonly ServiceName?: string;
  readonly ServiceType?: string;
  readonly HTTPMethod?: string;
  readonly URLPath?: string;
  readonly Attributes?: {[key: string]: any};
}

export interface SamplingStatisticSummary {
  readonly RuleName?: string;
  readonly Timestamp?: Date;
  readonly RequestCount?: number;
  readonly BorrowCount?: number;
  readonly SampledCount?: number;
}

export interface SamplingStatisticsDocument {
  readonly RuleName: string;
  readonly ClientID: string;
  readonly Timestamp: Date;
  readonly RequestCount: number;
  readonly SampledCount: number;
  readonly BorrowCount?: number;
}

export interface SamplingStrategy {
  readonly Name?: string;
  readonly Value?: unknown;
}

export interface SamplingTargetDocument {
  readonly RuleName?: string;
  readonly FixedRate?: unknown;
  readonly ReservoirQuota?: number;
  readonly ReservoirQuotaTTL?: Date;
  readonly Interval?: number;
}

export interface Segment {
  readonly Id?: string;
  readonly Document?: string;
}

export interface Service {
  readonly ReferenceId?: number;
  readonly Name?: string;
  readonly Names?: [];
  readonly Root?: boolean;
  readonly AccountId?: string;
  readonly Type?: string;
  readonly State?: string;
  readonly StartTime?: Date;
  readonly EndTime?: Date;
  readonly Edges?: [];
  readonly SummaryStatistics?: ServiceStatistics;
  readonly DurationHistogram?: [];
  readonly ResponseTimeHistogram?: [];
}

export interface ServiceId {
  readonly Name?: string;
  readonly Names?: [];
  readonly AccountId?: string;
  readonly Type?: string;
}

export interface ServiceStatistics {
  readonly OkCount?: number;
  readonly ErrorStatistics?: ErrorStatistics;
  readonly FaultStatistics?: FaultStatistics;
  readonly TotalCount?: number;
  readonly TotalResponseTime?: unknown;
}

export interface Tag {
  readonly Key: string;
  readonly Value: string;
}

export interface TagResourceRequest {
  readonly ResourceARN: string;
  readonly Tags: [];
}

export interface TagResourceResponse {
}

export interface TelemetryRecord {
  readonly Timestamp: Date;
  readonly SegmentsReceivedCount?: number;
  readonly SegmentsSentCount?: number;
  readonly SegmentsSpilloverCount?: number;
  readonly SegmentsRejectedCount?: number;
  readonly BackendConnectionErrors?: BackendConnectionErrors;
}

export interface ThrottledException {
  readonly Message?: string;
}

export interface TimeSeriesServiceStatistics {
  readonly Timestamp?: Date;
  readonly EdgeSummaryStatistics?: EdgeStatistics;
  readonly ServiceSummaryStatistics?: ServiceStatistics;
  readonly ServiceForecastStatistics?: ForecastStatistics;
  readonly ResponseTimeHistogram?: [];
}

export interface TooManyTagsException {
  readonly Message?: string;
  readonly ResourceName?: string;
}

export interface Trace {
  readonly Id?: string;
  readonly Duration?: unknown;
  readonly LimitExceeded?: boolean;
  readonly Segments?: [];
}

export interface TraceSummary {
  readonly Id?: string;
  readonly Duration?: unknown;
  readonly ResponseTime?: unknown;
  readonly HasFault?: boolean;
  readonly HasError?: boolean;
  readonly HasThrottle?: boolean;
  readonly IsPartial?: boolean;
  readonly Http?: Http;
  readonly Annotations?: {[key: string]: any};
  readonly Users?: [];
  readonly ServiceIds?: [];
  readonly ResourceARNs?: [];
  readonly InstanceIds?: [];
  readonly AvailabilityZones?: [];
  readonly EntryPoint?: ServiceId;
  readonly FaultRootCauses?: [];
  readonly ErrorRootCauses?: [];
  readonly ResponseTimeRootCauses?: [];
  readonly Revision?: number;
  readonly MatchedEventTime?: Date;
}

export interface TraceUser {
  readonly UserName?: string;
  readonly ServiceIds?: [];
}

export interface UnprocessedStatistics {
  readonly RuleName?: string;
  readonly ErrorCode?: string;
  readonly Message?: string;
}

export interface UnprocessedTraceSegment {
  readonly Id?: string;
  readonly ErrorCode?: string;
  readonly Message?: string;
}

export interface UntagResourceRequest {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}

export interface UntagResourceResponse {
}

export interface UpdateGroupRequest {
  readonly GroupName?: string;
  readonly GroupARN?: string;
  readonly FilterExpression?: string;
  readonly InsightsConfiguration?: InsightsConfiguration;
}

export interface UpdateGroupResult {
  readonly Group?: Group;
}

export interface UpdateSamplingRuleRequest {
  readonly SamplingRuleUpdate: SamplingRuleUpdate;
}

export interface UpdateSamplingRuleResult {
  readonly SamplingRuleRecord?: SamplingRuleRecord;
}

export interface ValueWithServiceIds {
  readonly AnnotationValue?: AnnotationValue;
  readonly ServiceIds?: [];
}


