/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AssociateFirewallPolicy {
  readonly UpdateToken?: string;
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly FirewallPolicyArn: string;
}

export interface AssociateSubnets {
  readonly UpdateToken?: string;
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly SubnetMappings: [];
}

export interface CreateFirewall {
  readonly FirewallName: string;
  readonly FirewallPolicyArn: string;
  readonly VpcId: string;
  readonly SubnetMappings: [];
  readonly DeleteProtection?: boolean;
  readonly SubnetChangeProtection?: boolean;
  readonly FirewallPolicyChangeProtection?: boolean;
  readonly Description?: string;
  readonly Tags?: [];
}

export interface CreateFirewallPolicy {
  readonly FirewallPolicyName: string;
  readonly FirewallPolicy: FirewallPolicy;
  readonly Description?: string;
  readonly Tags?: [];
  readonly DryRun?: boolean;
}

export interface CreateRuleGroup {
  readonly RuleGroupName: string;
  readonly RuleGroup?: RuleGroup;
  readonly Rules?: string;
  readonly Type: string;
  readonly Description?: string;
  readonly Capacity: number;
  readonly Tags?: [];
  readonly DryRun?: boolean;
}

export interface DeleteFirewall {
  readonly FirewallName?: string;
  readonly FirewallArn?: string;
}

export interface DeleteFirewallPolicy {
  readonly FirewallPolicyName?: string;
  readonly FirewallPolicyArn?: string;
}

export interface DeleteResourcePolicy {
  readonly ResourceArn: string;
}

export interface DeleteRuleGroup {
  readonly RuleGroupName?: string;
  readonly RuleGroupArn?: string;
  readonly Type?: string;
}

export interface DescribeFirewall {
  readonly FirewallName?: string;
  readonly FirewallArn?: string;
}

export interface DescribeFirewallPolicy {
  readonly FirewallPolicyName?: string;
  readonly FirewallPolicyArn?: string;
}

export interface DescribeLoggingConfiguration {
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
}

export interface DescribeResourcePolicy {
  readonly ResourceArn: string;
}

export interface DescribeRuleGroup {
  readonly RuleGroupName?: string;
  readonly RuleGroupArn?: string;
  readonly Type?: string;
}

export interface DescribeRuleGroupMetadata {
  readonly RuleGroupName?: string;
  readonly RuleGroupArn?: string;
  readonly Type?: string;
}

export interface DisassociateSubnets {
  readonly UpdateToken?: string;
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly SubnetIds: [];
}

export interface ListFirewallPolicies {
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListFirewalls {
  readonly NextToken?: string;
  readonly VpcIds?: [];
  readonly MaxResults?: number;
}

export interface ListRuleGroups {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly Scope?: string;
}

export interface ListTagsForResource {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly ResourceArn: string;
}

export interface PutResourcePolicy {
  readonly ResourceArn: string;
  readonly Policy: string;
}

export interface TagResource {
  readonly ResourceArn: string;
  readonly Tags: [];
}

export interface UntagResource {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}

export interface UpdateFirewallDeleteProtection {
  readonly UpdateToken?: string;
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly DeleteProtection: boolean;
}

export interface UpdateFirewallDescription {
  readonly UpdateToken?: string;
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly Description?: string;
}

export interface UpdateFirewallPolicy {
  readonly UpdateToken: string;
  readonly FirewallPolicyArn?: string;
  readonly FirewallPolicyName?: string;
  readonly FirewallPolicy: FirewallPolicy;
  readonly Description?: string;
  readonly DryRun?: boolean;
}

export interface UpdateFirewallPolicyChangeProtection {
  readonly UpdateToken?: string;
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly FirewallPolicyChangeProtection: boolean;
}

export interface UpdateLoggingConfiguration {
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly LoggingConfiguration?: LoggingConfiguration;
}

export interface UpdateRuleGroup {
  readonly UpdateToken: string;
  readonly RuleGroupArn?: string;
  readonly RuleGroupName?: string;
  readonly RuleGroup?: RuleGroup;
  readonly Rules?: string;
  readonly Type?: string;
  readonly Description?: string;
  readonly DryRun?: boolean;
}

export interface UpdateSubnetChangeProtection {
  readonly UpdateToken?: string;
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly SubnetChangeProtection: boolean;
}

export interface ActionDefinition {
  readonly PublishMetricAction?: PublishMetricAction;
}

export interface Address {
  readonly AddressDefinition: string;
}

export interface AssociateFirewallPolicyRequest {
  readonly UpdateToken?: string;
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly FirewallPolicyArn: string;
}

export interface AssociateFirewallPolicyResponse {
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly FirewallPolicyArn?: string;
  readonly UpdateToken?: string;
}

export interface AssociateSubnetsRequest {
  readonly UpdateToken?: string;
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly SubnetMappings: [];
}

export interface AssociateSubnetsResponse {
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly SubnetMappings?: [];
  readonly UpdateToken?: string;
}

export interface Attachment {
  readonly SubnetId?: string;
  readonly EndpointId?: string;
  readonly Status?: string;
}

export interface CreateFirewallPolicyRequest {
  readonly FirewallPolicyName: string;
  readonly FirewallPolicy: FirewallPolicy;
  readonly Description?: string;
  readonly Tags?: [];
  readonly DryRun?: boolean;
}

export interface CreateFirewallPolicyResponse {
  readonly UpdateToken: string;
  readonly FirewallPolicyResponse: FirewallPolicyResponse;
}

export interface CreateFirewallRequest {
  readonly FirewallName: string;
  readonly FirewallPolicyArn: string;
  readonly VpcId: string;
  readonly SubnetMappings: [];
  readonly DeleteProtection?: boolean;
  readonly SubnetChangeProtection?: boolean;
  readonly FirewallPolicyChangeProtection?: boolean;
  readonly Description?: string;
  readonly Tags?: [];
}

export interface CreateFirewallResponse {
  readonly Firewall?: Firewall;
  readonly FirewallStatus?: FirewallStatus;
}

export interface CreateRuleGroupRequest {
  readonly RuleGroupName: string;
  readonly RuleGroup?: RuleGroup;
  readonly Rules?: string;
  readonly Type: string;
  readonly Description?: string;
  readonly Capacity: number;
  readonly Tags?: [];
  readonly DryRun?: boolean;
}

export interface CreateRuleGroupResponse {
  readonly UpdateToken: string;
  readonly RuleGroupResponse: RuleGroupResponse;
}

export interface CustomAction {
  readonly ActionName: string;
  readonly ActionDefinition: ActionDefinition;
}

export interface DeleteFirewallPolicyRequest {
  readonly FirewallPolicyName?: string;
  readonly FirewallPolicyArn?: string;
}

export interface DeleteFirewallPolicyResponse {
  readonly FirewallPolicyResponse: FirewallPolicyResponse;
}

export interface DeleteFirewallRequest {
  readonly FirewallName?: string;
  readonly FirewallArn?: string;
}

export interface DeleteFirewallResponse {
  readonly Firewall?: Firewall;
  readonly FirewallStatus?: FirewallStatus;
}

export interface DeleteResourcePolicyRequest {
  readonly ResourceArn: string;
}

export interface DeleteResourcePolicyResponse {
}

export interface DeleteRuleGroupRequest {
  readonly RuleGroupName?: string;
  readonly RuleGroupArn?: string;
  readonly Type?: string;
}

export interface DeleteRuleGroupResponse {
  readonly RuleGroupResponse: RuleGroupResponse;
}

export interface DescribeFirewallPolicyRequest {
  readonly FirewallPolicyName?: string;
  readonly FirewallPolicyArn?: string;
}

export interface DescribeFirewallPolicyResponse {
  readonly UpdateToken: string;
  readonly FirewallPolicyResponse: FirewallPolicyResponse;
  readonly FirewallPolicy?: FirewallPolicy;
}

export interface DescribeFirewallRequest {
  readonly FirewallName?: string;
  readonly FirewallArn?: string;
}

export interface DescribeFirewallResponse {
  readonly UpdateToken?: string;
  readonly Firewall?: Firewall;
  readonly FirewallStatus?: FirewallStatus;
}

export interface DescribeLoggingConfigurationRequest {
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
}

export interface DescribeLoggingConfigurationResponse {
  readonly FirewallArn?: string;
  readonly LoggingConfiguration?: LoggingConfiguration;
}

export interface DescribeResourcePolicyRequest {
  readonly ResourceArn: string;
}

export interface DescribeResourcePolicyResponse {
  readonly Policy?: string;
}

export interface DescribeRuleGroupMetadataRequest {
  readonly RuleGroupName?: string;
  readonly RuleGroupArn?: string;
  readonly Type?: string;
}

export interface DescribeRuleGroupMetadataResponse {
  readonly RuleGroupArn: string;
  readonly RuleGroupName: string;
  readonly Description?: string;
  readonly Type?: string;
  readonly Capacity?: number;
  readonly StatefulRuleOptions?: StatefulRuleOptions;
}

export interface DescribeRuleGroupRequest {
  readonly RuleGroupName?: string;
  readonly RuleGroupArn?: string;
  readonly Type?: string;
}

export interface DescribeRuleGroupResponse {
  readonly UpdateToken: string;
  readonly RuleGroup?: RuleGroup;
  readonly RuleGroupResponse: RuleGroupResponse;
}

export interface Dimension {
  readonly Value: string;
}

export interface DisassociateSubnetsRequest {
  readonly UpdateToken?: string;
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly SubnetIds: [];
}

export interface DisassociateSubnetsResponse {
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly SubnetMappings?: [];
  readonly UpdateToken?: string;
}

export interface Firewall {
  readonly FirewallName?: string;
  readonly FirewallArn?: string;
  readonly FirewallPolicyArn: string;
  readonly VpcId: string;
  readonly SubnetMappings: [];
  readonly DeleteProtection?: boolean;
  readonly SubnetChangeProtection?: boolean;
  readonly FirewallPolicyChangeProtection?: boolean;
  readonly Description?: string;
  readonly FirewallId: string;
  readonly Tags?: [];
}

export interface FirewallMetadata {
  readonly FirewallName?: string;
  readonly FirewallArn?: string;
}

export interface FirewallPolicy {
  readonly StatelessRuleGroupReferences?: [];
  readonly StatelessDefaultActions: [];
  readonly StatelessFragmentDefaultActions: [];
  readonly StatelessCustomActions?: [];
  readonly StatefulRuleGroupReferences?: [];
  readonly StatefulDefaultActions?: [];
  readonly StatefulEngineOptions?: StatefulEngineOptions;
}

export interface FirewallPolicyMetadata {
  readonly Name?: string;
  readonly Arn?: string;
}

export interface FirewallPolicyResponse {
  readonly FirewallPolicyName: string;
  readonly FirewallPolicyArn: string;
  readonly FirewallPolicyId: string;
  readonly Description?: string;
  readonly FirewallPolicyStatus?: string;
  readonly Tags?: [];
  readonly ConsumedStatelessRuleCapacity?: number;
  readonly ConsumedStatefulRuleCapacity?: number;
  readonly NumberOfAssociations?: number;
}

export interface FirewallStatus {
  readonly Status: string;
  readonly ConfigurationSyncStateSummary: string;
  readonly SyncStates?: {[key: string]: any};
}

export interface Header {
  readonly Protocol: string;
  readonly Source: string;
  readonly SourcePort: string;
  readonly Direction: string;
  readonly Destination: string;
  readonly DestinationPort: string;
}

export interface IPSet {
  readonly Definition: [];
}

export interface InsufficientCapacityException {
  readonly Message?: string;
}

export interface InternalServerError {
  readonly Message?: string;
}

export interface InvalidOperationException {
  readonly Message?: string;
}

export interface InvalidRequestException {
  readonly Message?: string;
}

export interface InvalidResourcePolicyException {
  readonly Message?: string;
}

export interface InvalidTokenException {
  readonly Message?: string;
}

export interface LimitExceededException {
  readonly Message?: string;
}

export interface ListFirewallPoliciesRequest {
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListFirewallPoliciesResponse {
  readonly NextToken?: string;
  readonly FirewallPolicies?: [];
}

export interface ListFirewallsRequest {
  readonly NextToken?: string;
  readonly VpcIds?: [];
  readonly MaxResults?: number;
}

export interface ListFirewallsResponse {
  readonly NextToken?: string;
  readonly Firewalls?: [];
}

export interface ListRuleGroupsRequest {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly Scope?: string;
}

export interface ListRuleGroupsResponse {
  readonly NextToken?: string;
  readonly RuleGroups?: [];
}

export interface ListTagsForResourceRequest {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly ResourceArn: string;
}

export interface ListTagsForResourceResponse {
  readonly NextToken?: string;
  readonly Tags?: [];
}

export interface LogDestinationConfig {
  readonly LogType: string;
  readonly LogDestinationType: string;
  readonly LogDestination: {[key: string]: any};
}

export interface LogDestinationPermissionException {
  readonly Message?: string;
}

export interface LoggingConfiguration {
  readonly LogDestinationConfigs: [];
}

export interface MatchAttributes {
  readonly Sources?: [];
  readonly Destinations?: [];
  readonly SourcePorts?: [];
  readonly DestinationPorts?: [];
  readonly Protocols?: [];
  readonly TCPFlags?: [];
}

export interface PerObjectStatus {
  readonly SyncStatus?: string;
  readonly UpdateToken?: string;
}

export interface PortRange {
  readonly FromPort: number;
  readonly ToPort: number;
}

export interface PortSet {
  readonly Definition?: [];
}

export interface PublishMetricAction {
  readonly Dimensions: [];
}

export interface PutResourcePolicyRequest {
  readonly ResourceArn: string;
  readonly Policy: string;
}

export interface PutResourcePolicyResponse {
}

export interface ResourceNotFoundException {
  readonly Message?: string;
}

export interface ResourceOwnerCheckException {
  readonly Message?: string;
}

export interface RuleDefinition {
  readonly MatchAttributes: MatchAttributes;
  readonly Actions: [];
}

export interface RuleGroup {
  readonly RuleVariables?: RuleVariables;
  readonly RulesSource: RulesSource;
  readonly StatefulRuleOptions?: StatefulRuleOptions;
}

export interface RuleGroupMetadata {
  readonly Name?: string;
  readonly Arn?: string;
}

export interface RuleGroupResponse {
  readonly RuleGroupArn: string;
  readonly RuleGroupName: string;
  readonly RuleGroupId: string;
  readonly Description?: string;
  readonly Type?: string;
  readonly Capacity?: number;
  readonly RuleGroupStatus?: string;
  readonly Tags?: [];
  readonly ConsumedCapacity?: number;
  readonly NumberOfAssociations?: number;
}

export interface RuleOption {
  readonly Keyword: string;
  readonly Settings?: [];
}

export interface RuleVariables {
  readonly IPSets?: {[key: string]: any};
  readonly PortSets?: {[key: string]: any};
}

export interface RulesSource {
  readonly RulesString?: string;
  readonly RulesSourceList?: RulesSourceList;
  readonly StatefulRules?: [];
  readonly StatelessRulesAndCustomActions?: StatelessRulesAndCustomActions;
}

export interface RulesSourceList {
  readonly Targets: [];
  readonly TargetTypes: [];
  readonly GeneratedRulesType: string;
}

export interface StatefulEngineOptions {
  readonly RuleOrder?: string;
}

export interface StatefulRule {
  readonly Action: string;
  readonly Header: Header;
  readonly RuleOptions: [];
}

export interface StatefulRuleGroupOverride {
  readonly Action?: string;
}

export interface StatefulRuleGroupReference {
  readonly ResourceArn: string;
  readonly Priority?: number;
  readonly Override?: StatefulRuleGroupOverride;
}

export interface StatefulRuleOptions {
  readonly RuleOrder?: string;
}

export interface StatelessRule {
  readonly RuleDefinition: RuleDefinition;
  readonly Priority: number;
}

export interface StatelessRuleGroupReference {
  readonly ResourceArn: string;
  readonly Priority: number;
}

export interface StatelessRulesAndCustomActions {
  readonly StatelessRules: [];
  readonly CustomActions?: [];
}

export interface SubnetMapping {
  readonly SubnetId: string;
}

export interface SyncState {
  readonly Attachment?: Attachment;
  readonly Config?: {[key: string]: any};
}

export interface TCPFlagField {
  readonly Flags: [];
  readonly Masks?: [];
}

export interface Tag {
  readonly Key: string;
  readonly Value: string;
}

export interface TagResourceRequest {
  readonly ResourceArn: string;
  readonly Tags: [];
}

export interface TagResourceResponse {
}

export interface ThrottlingException {
  readonly Message?: string;
}

export interface UnsupportedOperationException {
  readonly Message?: string;
}

export interface UntagResourceRequest {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}

export interface UntagResourceResponse {
}

export interface UpdateFirewallDeleteProtectionRequest {
  readonly UpdateToken?: string;
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly DeleteProtection: boolean;
}

export interface UpdateFirewallDeleteProtectionResponse {
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly DeleteProtection?: boolean;
  readonly UpdateToken?: string;
}

export interface UpdateFirewallDescriptionRequest {
  readonly UpdateToken?: string;
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly Description?: string;
}

export interface UpdateFirewallDescriptionResponse {
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly Description?: string;
  readonly UpdateToken?: string;
}

export interface UpdateFirewallPolicyChangeProtectionRequest {
  readonly UpdateToken?: string;
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly FirewallPolicyChangeProtection: boolean;
}

export interface UpdateFirewallPolicyChangeProtectionResponse {
  readonly UpdateToken?: string;
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly FirewallPolicyChangeProtection?: boolean;
}

export interface UpdateFirewallPolicyRequest {
  readonly UpdateToken: string;
  readonly FirewallPolicyArn?: string;
  readonly FirewallPolicyName?: string;
  readonly FirewallPolicy: FirewallPolicy;
  readonly Description?: string;
  readonly DryRun?: boolean;
}

export interface UpdateFirewallPolicyResponse {
  readonly UpdateToken: string;
  readonly FirewallPolicyResponse: FirewallPolicyResponse;
}

export interface UpdateLoggingConfigurationRequest {
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly LoggingConfiguration?: LoggingConfiguration;
}

export interface UpdateLoggingConfigurationResponse {
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly LoggingConfiguration?: LoggingConfiguration;
}

export interface UpdateRuleGroupRequest {
  readonly UpdateToken: string;
  readonly RuleGroupArn?: string;
  readonly RuleGroupName?: string;
  readonly RuleGroup?: RuleGroup;
  readonly Rules?: string;
  readonly Type?: string;
  readonly Description?: string;
  readonly DryRun?: boolean;
}

export interface UpdateRuleGroupResponse {
  readonly UpdateToken: string;
  readonly RuleGroupResponse: RuleGroupResponse;
}

export interface UpdateSubnetChangeProtectionRequest {
  readonly UpdateToken?: string;
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly SubnetChangeProtection: boolean;
}

export interface UpdateSubnetChangeProtectionResponse {
  readonly UpdateToken?: string;
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly SubnetChangeProtection?: boolean;
}


