/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AssociateFirewallPolicy {
  readonly UpdateToken?: string;
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly FirewallPolicyArn: string;
}
export interface AssociateSubnets {
  readonly UpdateToken?: string;
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly SubnetMappings: [];
}
export interface CreateFirewall {
  readonly FirewallName: string;
  readonly FirewallPolicyArn: string;
  readonly VpcId: string;
  readonly SubnetMappings: [];
  readonly DeleteProtection?: boolean;
  readonly SubnetChangeProtection?: boolean;
  readonly FirewallPolicyChangeProtection?: boolean;
  readonly Description?: string;
  readonly Tags?: [];
}
export interface CreateFirewallPolicy {
  readonly FirewallPolicyName: string;
  readonly FirewallPolicy: FirewallPolicy;
  readonly Description?: string;
  readonly Tags?: [];
  readonly DryRun?: boolean;
}
export interface CreateRuleGroup {
  readonly RuleGroupName: string;
  readonly RuleGroup?: RuleGroup;
  readonly Rules?: string;
  readonly Type: string;
  readonly Description?: string;
  readonly Capacity: number;
  readonly Tags?: [];
  readonly DryRun?: boolean;
}
export interface DeleteFirewall {
  readonly FirewallName?: string;
  readonly FirewallArn?: string;
}
export interface DeleteFirewallPolicy {
  readonly FirewallPolicyName?: string;
  readonly FirewallPolicyArn?: string;
}
export interface DeleteResourcePolicy {
  readonly ResourceArn: string;
}
export interface DeleteRuleGroup {
  readonly RuleGroupName?: string;
  readonly RuleGroupArn?: string;
  readonly Type?: string;
}
export interface DescribeFirewall {
  readonly FirewallName?: string;
  readonly FirewallArn?: string;
}
export interface DescribeFirewallPolicy {
  readonly FirewallPolicyName?: string;
  readonly FirewallPolicyArn?: string;
}
export interface DescribeLoggingConfiguration {
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
}
export interface DescribeResourcePolicy {
  readonly ResourceArn: string;
}
export interface DescribeRuleGroup {
  readonly RuleGroupName?: string;
  readonly RuleGroupArn?: string;
  readonly Type?: string;
}
export interface DescribeRuleGroupMetadata {
  readonly RuleGroupName?: string;
  readonly RuleGroupArn?: string;
  readonly Type?: string;
}
export interface DisassociateSubnets {
  readonly UpdateToken?: string;
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly SubnetIds: [];
}
export interface ListFirewallPolicies {
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface ListFirewalls {
  readonly NextToken?: string;
  readonly VpcIds?: [];
  readonly MaxResults?: number;
}
export interface ListRuleGroups {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly Scope?: string;
}
export interface ListTagsForResource {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly ResourceArn: string;
}
export interface PutResourcePolicy {
  readonly ResourceArn: string;
  readonly Policy: string;
}
export interface TagResource {
  readonly ResourceArn: string;
  readonly Tags: [];
}
export interface UntagResource {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}
export interface UpdateFirewallDeleteProtection {
  readonly UpdateToken?: string;
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly DeleteProtection: boolean;
}
export interface UpdateFirewallDescription {
  readonly UpdateToken?: string;
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly Description?: string;
}
export interface UpdateFirewallPolicy {
  readonly UpdateToken: string;
  readonly FirewallPolicyArn?: string;
  readonly FirewallPolicyName?: string;
  readonly FirewallPolicy: FirewallPolicy;
  readonly Description?: string;
  readonly DryRun?: boolean;
}
export interface UpdateFirewallPolicyChangeProtection {
  readonly UpdateToken?: string;
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly FirewallPolicyChangeProtection: boolean;
}
export interface UpdateLoggingConfiguration {
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly LoggingConfiguration?: LoggingConfiguration;
}
export interface UpdateRuleGroup {
  readonly UpdateToken: string;
  readonly RuleGroupArn?: string;
  readonly RuleGroupName?: string;
  readonly RuleGroup?: RuleGroup;
  readonly Rules?: string;
  readonly Type?: string;
  readonly Description?: string;
  readonly DryRun?: boolean;
}
export interface UpdateSubnetChangeProtection {
  readonly UpdateToken?: string;
  readonly FirewallArn?: string;
  readonly FirewallName?: string;
  readonly SubnetChangeProtection: boolean;
}



interface ActionDefinition {
  readonly PublishMetricAction: PublishMetricAction;
}

interface Address {
  readonly AddressDefinition: string;
}

interface AssociateFirewallPolicyRequest {
  readonly UpdateToken: string;
  readonly FirewallArn: string;
  readonly FirewallName: string;
  readonly FirewallPolicyArn: string;
}

interface AssociateFirewallPolicyResponse {
  readonly FirewallArn: string;
  readonly FirewallName: string;
  readonly FirewallPolicyArn: string;
  readonly UpdateToken: string;
}

interface AssociateSubnetsRequest {
  readonly UpdateToken: string;
  readonly FirewallArn: string;
  readonly FirewallName: string;
  readonly SubnetMappings: [];
}

interface AssociateSubnetsResponse {
  readonly FirewallArn: string;
  readonly FirewallName: string;
  readonly SubnetMappings: [];
  readonly UpdateToken: string;
}

interface Attachment {
  readonly SubnetId: string;
  readonly EndpointId: string;
  readonly Status: string;
}

interface CreateFirewallPolicyRequest {
  readonly FirewallPolicyName: string;
  readonly FirewallPolicy: FirewallPolicy;
  readonly Description: string;
  readonly Tags: [];
  readonly DryRun: boolean;
}

interface CreateFirewallPolicyResponse {
  readonly UpdateToken: string;
  readonly FirewallPolicyResponse: FirewallPolicyResponse;
}

interface CreateFirewallRequest {
  readonly FirewallName: string;
  readonly FirewallPolicyArn: string;
  readonly VpcId: string;
  readonly SubnetMappings: [];
  readonly DeleteProtection: boolean;
  readonly SubnetChangeProtection: boolean;
  readonly FirewallPolicyChangeProtection: boolean;
  readonly Description: string;
  readonly Tags: [];
}

interface CreateFirewallResponse {
  readonly Firewall: Firewall;
  readonly FirewallStatus: FirewallStatus;
}

interface CreateRuleGroupRequest {
  readonly RuleGroupName: string;
  readonly RuleGroup: RuleGroup;
  readonly Rules: string;
  readonly Type: string;
  readonly Description: string;
  readonly Capacity: number;
  readonly Tags: [];
  readonly DryRun: boolean;
}

interface CreateRuleGroupResponse {
  readonly UpdateToken: string;
  readonly RuleGroupResponse: RuleGroupResponse;
}

interface CustomAction {
  readonly ActionName: string;
  readonly ActionDefinition: ActionDefinition;
}

interface DeleteFirewallPolicyRequest {
  readonly FirewallPolicyName: string;
  readonly FirewallPolicyArn: string;
}

interface DeleteFirewallPolicyResponse {
  readonly FirewallPolicyResponse: FirewallPolicyResponse;
}

interface DeleteFirewallRequest {
  readonly FirewallName: string;
  readonly FirewallArn: string;
}

interface DeleteFirewallResponse {
  readonly Firewall: Firewall;
  readonly FirewallStatus: FirewallStatus;
}

interface DeleteResourcePolicyRequest {
  readonly ResourceArn: string;
}

interface DeleteResourcePolicyResponse {
}

interface DeleteRuleGroupRequest {
  readonly RuleGroupName: string;
  readonly RuleGroupArn: string;
  readonly Type: string;
}

interface DeleteRuleGroupResponse {
  readonly RuleGroupResponse: RuleGroupResponse;
}

interface DescribeFirewallPolicyRequest {
  readonly FirewallPolicyName: string;
  readonly FirewallPolicyArn: string;
}

interface DescribeFirewallPolicyResponse {
  readonly UpdateToken: string;
  readonly FirewallPolicyResponse: FirewallPolicyResponse;
  readonly FirewallPolicy: FirewallPolicy;
}

interface DescribeFirewallRequest {
  readonly FirewallName: string;
  readonly FirewallArn: string;
}

interface DescribeFirewallResponse {
  readonly UpdateToken: string;
  readonly Firewall: Firewall;
  readonly FirewallStatus: FirewallStatus;
}

interface DescribeLoggingConfigurationRequest {
  readonly FirewallArn: string;
  readonly FirewallName: string;
}

interface DescribeLoggingConfigurationResponse {
  readonly FirewallArn: string;
  readonly LoggingConfiguration: LoggingConfiguration;
}

interface DescribeResourcePolicyRequest {
  readonly ResourceArn: string;
}

interface DescribeResourcePolicyResponse {
  readonly Policy: string;
}

interface DescribeRuleGroupMetadataRequest {
  readonly RuleGroupName: string;
  readonly RuleGroupArn: string;
  readonly Type: string;
}

interface DescribeRuleGroupMetadataResponse {
  readonly RuleGroupArn: string;
  readonly RuleGroupName: string;
  readonly Description: string;
  readonly Type: string;
  readonly Capacity: number;
  readonly StatefulRuleOptions: StatefulRuleOptions;
}

interface DescribeRuleGroupRequest {
  readonly RuleGroupName: string;
  readonly RuleGroupArn: string;
  readonly Type: string;
}

interface DescribeRuleGroupResponse {
  readonly UpdateToken: string;
  readonly RuleGroup: RuleGroup;
  readonly RuleGroupResponse: RuleGroupResponse;
}

interface Dimension {
  readonly Value: string;
}

interface DisassociateSubnetsRequest {
  readonly UpdateToken: string;
  readonly FirewallArn: string;
  readonly FirewallName: string;
  readonly SubnetIds: [];
}

interface DisassociateSubnetsResponse {
  readonly FirewallArn: string;
  readonly FirewallName: string;
  readonly SubnetMappings: [];
  readonly UpdateToken: string;
}

interface Firewall {
  readonly FirewallName: string;
  readonly FirewallArn: string;
  readonly FirewallPolicyArn: string;
  readonly VpcId: string;
  readonly SubnetMappings: [];
  readonly DeleteProtection: boolean;
  readonly SubnetChangeProtection: boolean;
  readonly FirewallPolicyChangeProtection: boolean;
  readonly Description: string;
  readonly FirewallId: string;
  readonly Tags: [];
}

interface FirewallMetadata {
  readonly FirewallName: string;
  readonly FirewallArn: string;
}

interface FirewallPolicy {
  readonly StatelessRuleGroupReferences: [];
  readonly StatelessDefaultActions: [];
  readonly StatelessFragmentDefaultActions: [];
  readonly StatelessCustomActions: [];
  readonly StatefulRuleGroupReferences: [];
  readonly StatefulDefaultActions: [];
  readonly StatefulEngineOptions: StatefulEngineOptions;
}

interface FirewallPolicyMetadata {
  readonly Name: string;
  readonly Arn: string;
}

interface FirewallPolicyResponse {
  readonly FirewallPolicyName: string;
  readonly FirewallPolicyArn: string;
  readonly FirewallPolicyId: string;
  readonly Description: string;
  readonly FirewallPolicyStatus: string;
  readonly Tags: [];
  readonly ConsumedStatelessRuleCapacity: number;
  readonly ConsumedStatefulRuleCapacity: number;
  readonly NumberOfAssociations: number;
}

interface FirewallStatus {
  readonly Status: string;
  readonly ConfigurationSyncStateSummary: string;
  readonly SyncStates: {[key: string]: any};
}

interface Header {
  readonly Protocol: string;
  readonly Source: string;
  readonly SourcePort: string;
  readonly Direction: string;
  readonly Destination: string;
  readonly DestinationPort: string;
}

interface IPSet {
  readonly Definition: [];
}

interface InsufficientCapacityException {
  readonly Message: string;
}

interface InternalServerError {
  readonly Message: string;
}

interface InvalidOperationException {
  readonly Message: string;
}

interface InvalidRequestException {
  readonly Message: string;
}

interface InvalidResourcePolicyException {
  readonly Message: string;
}

interface InvalidTokenException {
  readonly Message: string;
}

interface LimitExceededException {
  readonly Message: string;
}

interface ListFirewallPoliciesRequest {
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListFirewallPoliciesResponse {
  readonly NextToken: string;
  readonly FirewallPolicies: [];
}

interface ListFirewallsRequest {
  readonly NextToken: string;
  readonly VpcIds: [];
  readonly MaxResults: number;
}

interface ListFirewallsResponse {
  readonly NextToken: string;
  readonly Firewalls: [];
}

interface ListRuleGroupsRequest {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly Scope: string;
}

interface ListRuleGroupsResponse {
  readonly NextToken: string;
  readonly RuleGroups: [];
}

interface ListTagsForResourceRequest {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly ResourceArn: string;
}

interface ListTagsForResourceResponse {
  readonly NextToken: string;
  readonly Tags: [];
}

interface LogDestinationConfig {
  readonly LogType: string;
  readonly LogDestinationType: string;
  readonly LogDestination: {[key: string]: any};
}

interface LogDestinationPermissionException {
  readonly Message: string;
}

interface LoggingConfiguration {
  readonly LogDestinationConfigs: [];
}

interface MatchAttributes {
  readonly Sources: [];
  readonly Destinations: [];
  readonly SourcePorts: [];
  readonly DestinationPorts: [];
  readonly Protocols: [];
  readonly TCPFlags: [];
}

interface PerObjectStatus {
  readonly SyncStatus: string;
  readonly UpdateToken: string;
}

interface PortRange {
  readonly FromPort: number;
  readonly ToPort: number;
}

interface PortSet {
  readonly Definition: [];
}

interface PublishMetricAction {
  readonly Dimensions: [];
}

interface PutResourcePolicyRequest {
  readonly ResourceArn: string;
  readonly Policy: string;
}

interface PutResourcePolicyResponse {
}

interface ResourceNotFoundException {
  readonly Message: string;
}

interface ResourceOwnerCheckException {
  readonly Message: string;
}

interface RuleDefinition {
  readonly MatchAttributes: MatchAttributes;
  readonly Actions: [];
}

interface RuleGroup {
  readonly RuleVariables: RuleVariables;
  readonly RulesSource: RulesSource;
  readonly StatefulRuleOptions: StatefulRuleOptions;
}

interface RuleGroupMetadata {
  readonly Name: string;
  readonly Arn: string;
}

interface RuleGroupResponse {
  readonly RuleGroupArn: string;
  readonly RuleGroupName: string;
  readonly RuleGroupId: string;
  readonly Description: string;
  readonly Type: string;
  readonly Capacity: number;
  readonly RuleGroupStatus: string;
  readonly Tags: [];
  readonly ConsumedCapacity: number;
  readonly NumberOfAssociations: number;
}

interface RuleOption {
  readonly Keyword: string;
  readonly Settings: [];
}

interface RuleVariables {
  readonly IPSets: {[key: string]: any};
  readonly PortSets: {[key: string]: any};
}

interface RulesSource {
  readonly RulesString: string;
  readonly RulesSourceList: RulesSourceList;
  readonly StatefulRules: [];
  readonly StatelessRulesAndCustomActions: StatelessRulesAndCustomActions;
}

interface RulesSourceList {
  readonly Targets: [];
  readonly TargetTypes: [];
  readonly GeneratedRulesType: string;
}

interface StatefulEngineOptions {
  readonly RuleOrder: string;
}

interface StatefulRule {
  readonly Action: string;
  readonly Header: Header;
  readonly RuleOptions: [];
}

interface StatefulRuleGroupOverride {
  readonly Action: string;
}

interface StatefulRuleGroupReference {
  readonly ResourceArn: string;
  readonly Priority: number;
  readonly Override: StatefulRuleGroupOverride;
}

interface StatefulRuleOptions {
  readonly RuleOrder: string;
}

interface StatelessRule {
  readonly RuleDefinition: RuleDefinition;
  readonly Priority: number;
}

interface StatelessRuleGroupReference {
  readonly ResourceArn: string;
  readonly Priority: number;
}

interface StatelessRulesAndCustomActions {
  readonly StatelessRules: [];
  readonly CustomActions: [];
}

interface SubnetMapping {
  readonly SubnetId: string;
}

interface SyncState {
  readonly Attachment: Attachment;
  readonly Config: {[key: string]: any};
}

interface TCPFlagField {
  readonly Flags: [];
  readonly Masks: [];
}

interface Tag {
  readonly Key: string;
  readonly Value: string;
}

interface TagResourceRequest {
  readonly ResourceArn: string;
  readonly Tags: [];
}

interface TagResourceResponse {
}

interface ThrottlingException {
  readonly Message: string;
}

interface UnsupportedOperationException {
  readonly Message: string;
}

interface UntagResourceRequest {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}

interface UntagResourceResponse {
}

interface UpdateFirewallDeleteProtectionRequest {
  readonly UpdateToken: string;
  readonly FirewallArn: string;
  readonly FirewallName: string;
  readonly DeleteProtection: boolean;
}

interface UpdateFirewallDeleteProtectionResponse {
  readonly FirewallArn: string;
  readonly FirewallName: string;
  readonly DeleteProtection: boolean;
  readonly UpdateToken: string;
}

interface UpdateFirewallDescriptionRequest {
  readonly UpdateToken: string;
  readonly FirewallArn: string;
  readonly FirewallName: string;
  readonly Description: string;
}

interface UpdateFirewallDescriptionResponse {
  readonly FirewallArn: string;
  readonly FirewallName: string;
  readonly Description: string;
  readonly UpdateToken: string;
}

interface UpdateFirewallPolicyChangeProtectionRequest {
  readonly UpdateToken: string;
  readonly FirewallArn: string;
  readonly FirewallName: string;
  readonly FirewallPolicyChangeProtection: boolean;
}

interface UpdateFirewallPolicyChangeProtectionResponse {
  readonly UpdateToken: string;
  readonly FirewallArn: string;
  readonly FirewallName: string;
  readonly FirewallPolicyChangeProtection: boolean;
}

interface UpdateFirewallPolicyRequest {
  readonly UpdateToken: string;
  readonly FirewallPolicyArn: string;
  readonly FirewallPolicyName: string;
  readonly FirewallPolicy: FirewallPolicy;
  readonly Description: string;
  readonly DryRun: boolean;
}

interface UpdateFirewallPolicyResponse {
  readonly UpdateToken: string;
  readonly FirewallPolicyResponse: FirewallPolicyResponse;
}

interface UpdateLoggingConfigurationRequest {
  readonly FirewallArn: string;
  readonly FirewallName: string;
  readonly LoggingConfiguration: LoggingConfiguration;
}

interface UpdateLoggingConfigurationResponse {
  readonly FirewallArn: string;
  readonly FirewallName: string;
  readonly LoggingConfiguration: LoggingConfiguration;
}

interface UpdateRuleGroupRequest {
  readonly UpdateToken: string;
  readonly RuleGroupArn: string;
  readonly RuleGroupName: string;
  readonly RuleGroup: RuleGroup;
  readonly Rules: string;
  readonly Type: string;
  readonly Description: string;
  readonly DryRun: boolean;
}

interface UpdateRuleGroupResponse {
  readonly UpdateToken: string;
  readonly RuleGroupResponse: RuleGroupResponse;
}

interface UpdateSubnetChangeProtectionRequest {
  readonly UpdateToken: string;
  readonly FirewallArn: string;
  readonly FirewallName: string;
  readonly SubnetChangeProtection: boolean;
}

interface UpdateSubnetChangeProtectionResponse {
  readonly UpdateToken: string;
  readonly FirewallArn: string;
  readonly FirewallName: string;
  readonly SubnetChangeProtection: boolean;
}

