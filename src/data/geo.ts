/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AssociateTrackerConsumer {
  readonly ConsumerArn: string;
  readonly TrackerName: string;
}
export interface BatchDeleteDevicePositionHistory {
  readonly DeviceIds: [];
  readonly TrackerName: string;
}
export interface BatchDeleteGeofence {
  readonly CollectionName: string;
  readonly GeofenceIds: [];
}
export interface BatchEvaluateGeofences {
  readonly CollectionName: string;
  readonly DevicePositionUpdates: [];
}
export interface BatchGetDevicePosition {
  readonly DeviceIds: [];
  readonly TrackerName: string;
}
export interface BatchPutGeofence {
  readonly CollectionName: string;
  readonly Entries: [];
}
export interface BatchUpdateDevicePosition {
  readonly TrackerName: string;
  readonly Updates: [];
}
export interface CalculateRoute {
  readonly CalculatorName: string;
  readonly CarModeOptions?: CalculateRouteCarModeOptions;
  readonly DepartNow?: boolean;
  readonly DeparturePosition: [];
  readonly DepartureTime?: Date;
  readonly DestinationPosition: [];
  readonly DistanceUnit?: string;
  readonly IncludeLegGeometry?: boolean;
  readonly TravelMode?: string;
  readonly TruckModeOptions?: CalculateRouteTruckModeOptions;
  readonly WaypointPositions?: [];
}
export interface CreateGeofenceCollection {
  readonly CollectionName: string;
  readonly Description?: string;
  readonly KmsKeyId?: string;
  readonly PricingPlan: string;
  readonly PricingPlanDataSource?: string;
  readonly Tags?: {[key: string]: any};
}
export interface CreateMap {
  readonly Configuration: MapConfiguration;
  readonly Description?: string;
  readonly MapName: string;
  readonly PricingPlan: string;
  readonly Tags?: {[key: string]: any};
}
export interface CreatePlaceIndex {
  readonly DataSource: string;
  readonly DataSourceConfiguration?: DataSourceConfiguration;
  readonly Description?: string;
  readonly IndexName: string;
  readonly PricingPlan: string;
  readonly Tags?: {[key: string]: any};
}
export interface CreateRouteCalculator {
  readonly CalculatorName: string;
  readonly DataSource: string;
  readonly Description?: string;
  readonly PricingPlan: string;
  readonly Tags?: {[key: string]: any};
}
export interface CreateTracker {
  readonly Description?: string;
  readonly KmsKeyId?: string;
  readonly PositionFiltering?: string;
  readonly PricingPlan: string;
  readonly PricingPlanDataSource?: string;
  readonly Tags?: {[key: string]: any};
  readonly TrackerName: string;
}
export interface DeleteGeofenceCollection {
  readonly CollectionName: string;
}
export interface DeleteMap {
  readonly MapName: string;
}
export interface DeletePlaceIndex {
  readonly IndexName: string;
}
export interface DeleteRouteCalculator {
  readonly CalculatorName: string;
}
export interface DeleteTracker {
  readonly TrackerName: string;
}
export interface DescribeGeofenceCollection {
  readonly CollectionName: string;
}
export interface DescribeMap {
  readonly MapName: string;
}
export interface DescribePlaceIndex {
  readonly IndexName: string;
}
export interface DescribeRouteCalculator {
  readonly CalculatorName: string;
}
export interface DescribeTracker {
  readonly TrackerName: string;
}
export interface DisassociateTrackerConsumer {
  readonly ConsumerArn: string;
  readonly TrackerName: string;
}
export interface GetDevicePosition {
  readonly DeviceId: string;
  readonly TrackerName: string;
}
export interface GetDevicePositionHistory {
  readonly DeviceId: string;
  readonly EndTimeExclusive?: Date;
  readonly NextToken?: string;
  readonly StartTimeInclusive?: Date;
  readonly TrackerName: string;
}
export interface GetGeofence {
  readonly CollectionName: string;
  readonly GeofenceId: string;
}
export interface GetMapGlyphs {
  readonly FontStack: string;
  readonly FontUnicodeRange: string;
  readonly MapName: string;
}
export interface GetMapSprites {
  readonly FileName: string;
  readonly MapName: string;
}
export interface GetMapStyleDescriptor {
  readonly MapName: string;
}
export interface GetMapTile {
  readonly MapName: string;
  readonly X: string;
  readonly Y: string;
  readonly Z: string;
}
export interface ListDevicePositions {
  readonly MaxResults?: number;
  readonly NextToken?: string;
  readonly TrackerName: string;
}
export interface ListGeofenceCollections {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface ListGeofences {
  readonly CollectionName: string;
  readonly NextToken?: string;
}
export interface ListMaps {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface ListPlaceIndexes {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface ListRouteCalculators {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface ListTagsForResource {
  readonly ResourceArn: string;
}
export interface ListTrackerConsumers {
  readonly MaxResults?: number;
  readonly NextToken?: string;
  readonly TrackerName: string;
}
export interface ListTrackers {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface PutGeofence {
  readonly CollectionName: string;
  readonly GeofenceId: string;
  readonly Geometry: GeofenceGeometry;
}
export interface SearchPlaceIndexForPosition {
  readonly IndexName: string;
  readonly Language?: string;
  readonly MaxResults?: number;
  readonly Position: [];
}
export interface SearchPlaceIndexForSuggestions {
  readonly BiasPosition?: [];
  readonly FilterBBox?: [];
  readonly FilterCountries?: [];
  readonly IndexName: string;
  readonly Language?: string;
  readonly MaxResults?: number;
  readonly Text: string;
}
export interface SearchPlaceIndexForText {
  readonly BiasPosition?: [];
  readonly FilterBBox?: [];
  readonly FilterCountries?: [];
  readonly IndexName: string;
  readonly Language?: string;
  readonly MaxResults?: number;
  readonly Text: string;
}
export interface TagResource {
  readonly ResourceArn: string;
  readonly Tags: {[key: string]: any};
}
export interface UntagResource {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}
export interface UpdateGeofenceCollection {
  readonly CollectionName: string;
  readonly Description?: string;
  readonly PricingPlan?: string;
  readonly PricingPlanDataSource?: string;
}
export interface UpdateMap {
  readonly Description?: string;
  readonly MapName: string;
  readonly PricingPlan?: string;
}
export interface UpdatePlaceIndex {
  readonly DataSourceConfiguration?: DataSourceConfiguration;
  readonly Description?: string;
  readonly IndexName: string;
  readonly PricingPlan?: string;
}
export interface UpdateRouteCalculator {
  readonly CalculatorName: string;
  readonly Description?: string;
  readonly PricingPlan?: string;
}
export interface UpdateTracker {
  readonly Description?: string;
  readonly PositionFiltering?: string;
  readonly PricingPlan?: string;
  readonly PricingPlanDataSource?: string;
  readonly TrackerName: string;
}



interface AccessDeniedException {
  readonly Message: string;
}

interface AssociateTrackerConsumerRequest {
  readonly ConsumerArn: string;
  readonly TrackerName: string;
}

interface AssociateTrackerConsumerResponse {
}

interface BatchDeleteDevicePositionHistoryError {
  readonly DeviceId: string;
  readonly Error: BatchItemError;
}

interface BatchDeleteDevicePositionHistoryRequest {
  readonly DeviceIds: [];
  readonly TrackerName: string;
}

interface BatchDeleteDevicePositionHistoryResponse {
  readonly Errors: [];
}

interface BatchDeleteGeofenceError {
  readonly Error: BatchItemError;
  readonly GeofenceId: string;
}

interface BatchDeleteGeofenceRequest {
  readonly CollectionName: string;
  readonly GeofenceIds: [];
}

interface BatchDeleteGeofenceResponse {
  readonly Errors: [];
}

interface BatchEvaluateGeofencesError {
  readonly DeviceId: string;
  readonly Error: BatchItemError;
  readonly SampleTime: Date;
}

interface BatchEvaluateGeofencesRequest {
  readonly CollectionName: string;
  readonly DevicePositionUpdates: [];
}

interface BatchEvaluateGeofencesResponse {
  readonly Errors: [];
}

interface BatchGetDevicePositionError {
  readonly DeviceId: string;
  readonly Error: BatchItemError;
}

interface BatchGetDevicePositionRequest {
  readonly DeviceIds: [];
  readonly TrackerName: string;
}

interface BatchGetDevicePositionResponse {
  readonly DevicePositions: [];
  readonly Errors: [];
}

interface BatchItemError {
  readonly Code: string;
  readonly Message: string;
}

interface BatchPutGeofenceError {
  readonly Error: BatchItemError;
  readonly GeofenceId: string;
}

interface BatchPutGeofenceRequest {
  readonly CollectionName: string;
  readonly Entries: [];
}

interface BatchPutGeofenceRequestEntry {
  readonly GeofenceId: string;
  readonly Geometry: GeofenceGeometry;
}

interface BatchPutGeofenceResponse {
  readonly Errors: [];
  readonly Successes: [];
}

interface BatchPutGeofenceSuccess {
  readonly CreateTime: Date;
  readonly GeofenceId: string;
  readonly UpdateTime: Date;
}

interface BatchUpdateDevicePositionError {
  readonly DeviceId: string;
  readonly Error: BatchItemError;
  readonly SampleTime: Date;
}

interface BatchUpdateDevicePositionRequest {
  readonly TrackerName: string;
  readonly Updates: [];
}

interface BatchUpdateDevicePositionResponse {
  readonly Errors: [];
}

interface CalculateRouteCarModeOptions {
  readonly AvoidFerries: boolean;
  readonly AvoidTolls: boolean;
}

interface CalculateRouteRequest {
  readonly CalculatorName: string;
  readonly CarModeOptions: CalculateRouteCarModeOptions;
  readonly DepartNow: boolean;
  readonly DeparturePosition: [];
  readonly DepartureTime: Date;
  readonly DestinationPosition: [];
  readonly DistanceUnit: string;
  readonly IncludeLegGeometry: boolean;
  readonly TravelMode: string;
  readonly TruckModeOptions: CalculateRouteTruckModeOptions;
  readonly WaypointPositions: [];
}

interface CalculateRouteResponse {
  readonly Legs: [];
  readonly Summary: CalculateRouteSummary;
}

interface CalculateRouteSummary {
  readonly DataSource: string;
  readonly Distance: unknown;
  readonly DistanceUnit: string;
  readonly DurationSeconds: unknown;
  readonly RouteBBox: [];
}

interface CalculateRouteTruckModeOptions {
  readonly AvoidFerries: boolean;
  readonly AvoidTolls: boolean;
  readonly Dimensions: TruckDimensions;
  readonly Weight: TruckWeight;
}

interface ConflictException {
  readonly Message: string;
}

interface CreateGeofenceCollectionRequest {
  readonly CollectionName: string;
  readonly Description: string;
  readonly KmsKeyId: string;
  readonly PricingPlan: string;
  readonly PricingPlanDataSource: string;
  readonly Tags: {[key: string]: any};
}

interface CreateGeofenceCollectionResponse {
  readonly CollectionArn: string;
  readonly CollectionName: string;
  readonly CreateTime: Date;
}

interface CreateMapRequest {
  readonly Configuration: MapConfiguration;
  readonly Description: string;
  readonly MapName: string;
  readonly PricingPlan: string;
  readonly Tags: {[key: string]: any};
}

interface CreateMapResponse {
  readonly CreateTime: Date;
  readonly MapArn: string;
  readonly MapName: string;
}

interface CreatePlaceIndexRequest {
  readonly DataSource: string;
  readonly DataSourceConfiguration: DataSourceConfiguration;
  readonly Description: string;
  readonly IndexName: string;
  readonly PricingPlan: string;
  readonly Tags: {[key: string]: any};
}

interface CreatePlaceIndexResponse {
  readonly CreateTime: Date;
  readonly IndexArn: string;
  readonly IndexName: string;
}

interface CreateRouteCalculatorRequest {
  readonly CalculatorName: string;
  readonly DataSource: string;
  readonly Description: string;
  readonly PricingPlan: string;
  readonly Tags: {[key: string]: any};
}

interface CreateRouteCalculatorResponse {
  readonly CalculatorArn: string;
  readonly CalculatorName: string;
  readonly CreateTime: Date;
}

interface CreateTrackerRequest {
  readonly Description: string;
  readonly KmsKeyId: string;
  readonly PositionFiltering: string;
  readonly PricingPlan: string;
  readonly PricingPlanDataSource: string;
  readonly Tags: {[key: string]: any};
  readonly TrackerName: string;
}

interface CreateTrackerResponse {
  readonly CreateTime: Date;
  readonly TrackerArn: string;
  readonly TrackerName: string;
}

interface DataSourceConfiguration {
  readonly IntendedUse: string;
}

interface DeleteGeofenceCollectionRequest {
  readonly CollectionName: string;
}

interface DeleteGeofenceCollectionResponse {
}

interface DeleteMapRequest {
  readonly MapName: string;
}

interface DeleteMapResponse {
}

interface DeletePlaceIndexRequest {
  readonly IndexName: string;
}

interface DeletePlaceIndexResponse {
}

interface DeleteRouteCalculatorRequest {
  readonly CalculatorName: string;
}

interface DeleteRouteCalculatorResponse {
}

interface DeleteTrackerRequest {
  readonly TrackerName: string;
}

interface DeleteTrackerResponse {
}

interface DescribeGeofenceCollectionRequest {
  readonly CollectionName: string;
}

interface DescribeGeofenceCollectionResponse {
  readonly CollectionArn: string;
  readonly CollectionName: string;
  readonly CreateTime: Date;
  readonly Description: string;
  readonly KmsKeyId: string;
  readonly PricingPlan: string;
  readonly PricingPlanDataSource: string;
  readonly Tags: {[key: string]: any};
  readonly UpdateTime: Date;
}

interface DescribeMapRequest {
  readonly MapName: string;
}

interface DescribeMapResponse {
  readonly Configuration: MapConfiguration;
  readonly CreateTime: Date;
  readonly DataSource: string;
  readonly Description: string;
  readonly MapArn: string;
  readonly MapName: string;
  readonly PricingPlan: string;
  readonly Tags: {[key: string]: any};
  readonly UpdateTime: Date;
}

interface DescribePlaceIndexRequest {
  readonly IndexName: string;
}

interface DescribePlaceIndexResponse {
  readonly CreateTime: Date;
  readonly DataSource: string;
  readonly DataSourceConfiguration: DataSourceConfiguration;
  readonly Description: string;
  readonly IndexArn: string;
  readonly IndexName: string;
  readonly PricingPlan: string;
  readonly Tags: {[key: string]: any};
  readonly UpdateTime: Date;
}

interface DescribeRouteCalculatorRequest {
  readonly CalculatorName: string;
}

interface DescribeRouteCalculatorResponse {
  readonly CalculatorArn: string;
  readonly CalculatorName: string;
  readonly CreateTime: Date;
  readonly DataSource: string;
  readonly Description: string;
  readonly PricingPlan: string;
  readonly Tags: {[key: string]: any};
  readonly UpdateTime: Date;
}

interface DescribeTrackerRequest {
  readonly TrackerName: string;
}

interface DescribeTrackerResponse {
  readonly CreateTime: Date;
  readonly Description: string;
  readonly KmsKeyId: string;
  readonly PositionFiltering: string;
  readonly PricingPlan: string;
  readonly PricingPlanDataSource: string;
  readonly Tags: {[key: string]: any};
  readonly TrackerArn: string;
  readonly TrackerName: string;
  readonly UpdateTime: Date;
}

interface DevicePosition {
  readonly Accuracy: PositionalAccuracy;
  readonly DeviceId: string;
  readonly Position: [];
  readonly PositionProperties: {[key: string]: any};
  readonly ReceivedTime: Date;
  readonly SampleTime: Date;
}

interface DevicePositionUpdate {
  readonly Accuracy: PositionalAccuracy;
  readonly DeviceId: string;
  readonly Position: [];
  readonly PositionProperties: {[key: string]: any};
  readonly SampleTime: Date;
}

interface DisassociateTrackerConsumerRequest {
  readonly ConsumerArn: string;
  readonly TrackerName: string;
}

interface DisassociateTrackerConsumerResponse {
}

interface GeofenceGeometry {
  readonly Polygon: [];
}

interface GetDevicePositionHistoryRequest {
  readonly DeviceId: string;
  readonly EndTimeExclusive: Date;
  readonly NextToken: string;
  readonly StartTimeInclusive: Date;
  readonly TrackerName: string;
}

interface GetDevicePositionHistoryResponse {
  readonly DevicePositions: [];
  readonly NextToken: string;
}

interface GetDevicePositionRequest {
  readonly DeviceId: string;
  readonly TrackerName: string;
}

interface GetDevicePositionResponse {
  readonly Accuracy: PositionalAccuracy;
  readonly DeviceId: string;
  readonly Position: [];
  readonly PositionProperties: {[key: string]: any};
  readonly ReceivedTime: Date;
  readonly SampleTime: Date;
}

interface GetGeofenceRequest {
  readonly CollectionName: string;
  readonly GeofenceId: string;
}

interface GetGeofenceResponse {
  readonly CreateTime: Date;
  readonly GeofenceId: string;
  readonly Geometry: GeofenceGeometry;
  readonly Status: string;
  readonly UpdateTime: Date;
}

interface GetMapGlyphsRequest {
  readonly FontStack: string;
  readonly FontUnicodeRange: string;
  readonly MapName: string;
}

interface GetMapGlyphsResponse {
  readonly Blob: unknown;
  readonly ContentType: string;
}

interface GetMapSpritesRequest {
  readonly FileName: string;
  readonly MapName: string;
}

interface GetMapSpritesResponse {
  readonly Blob: unknown;
  readonly ContentType: string;
}

interface GetMapStyleDescriptorRequest {
  readonly MapName: string;
}

interface GetMapStyleDescriptorResponse {
  readonly Blob: unknown;
  readonly ContentType: string;
}

interface GetMapTileRequest {
  readonly MapName: string;
  readonly X: string;
  readonly Y: string;
  readonly Z: string;
}

interface GetMapTileResponse {
  readonly Blob: unknown;
  readonly ContentType: string;
}

interface InternalServerException {
  readonly Message: string;
}

interface Leg {
  readonly Distance: unknown;
  readonly DurationSeconds: unknown;
  readonly EndPosition: [];
  readonly Geometry: LegGeometry;
  readonly StartPosition: [];
  readonly Steps: [];
}

interface LegGeometry {
  readonly LineString: [];
}

interface ListDevicePositionsRequest {
  readonly MaxResults: number;
  readonly NextToken: string;
  readonly TrackerName: string;
}

interface ListDevicePositionsResponse {
  readonly Entries: [];
  readonly NextToken: string;
}

interface ListDevicePositionsResponseEntry {
  readonly Accuracy: PositionalAccuracy;
  readonly DeviceId: string;
  readonly Position: [];
  readonly PositionProperties: {[key: string]: any};
  readonly SampleTime: Date;
}

interface ListGeofenceCollectionsRequest {
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListGeofenceCollectionsResponse {
  readonly Entries: [];
  readonly NextToken: string;
}

interface ListGeofenceCollectionsResponseEntry {
  readonly CollectionName: string;
  readonly CreateTime: Date;
  readonly Description: string;
  readonly PricingPlan: string;
  readonly PricingPlanDataSource: string;
  readonly UpdateTime: Date;
}

interface ListGeofenceResponseEntry {
  readonly CreateTime: Date;
  readonly GeofenceId: string;
  readonly Geometry: GeofenceGeometry;
  readonly Status: string;
  readonly UpdateTime: Date;
}

interface ListGeofencesRequest {
  readonly CollectionName: string;
  readonly NextToken: string;
}

interface ListGeofencesResponse {
  readonly Entries: [];
  readonly NextToken: string;
}

interface ListMapsRequest {
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListMapsResponse {
  readonly Entries: [];
  readonly NextToken: string;
}

interface ListMapsResponseEntry {
  readonly CreateTime: Date;
  readonly DataSource: string;
  readonly Description: string;
  readonly MapName: string;
  readonly PricingPlan: string;
  readonly UpdateTime: Date;
}

interface ListPlaceIndexesRequest {
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListPlaceIndexesResponse {
  readonly Entries: [];
  readonly NextToken: string;
}

interface ListPlaceIndexesResponseEntry {
  readonly CreateTime: Date;
  readonly DataSource: string;
  readonly Description: string;
  readonly IndexName: string;
  readonly PricingPlan: string;
  readonly UpdateTime: Date;
}

interface ListRouteCalculatorsRequest {
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListRouteCalculatorsResponse {
  readonly Entries: [];
  readonly NextToken: string;
}

interface ListRouteCalculatorsResponseEntry {
  readonly CalculatorName: string;
  readonly CreateTime: Date;
  readonly DataSource: string;
  readonly Description: string;
  readonly PricingPlan: string;
  readonly UpdateTime: Date;
}

interface ListTagsForResourceRequest {
  readonly ResourceArn: string;
}

interface ListTagsForResourceResponse {
  readonly Tags: {[key: string]: any};
}

interface ListTrackerConsumersRequest {
  readonly MaxResults: number;
  readonly NextToken: string;
  readonly TrackerName: string;
}

interface ListTrackerConsumersResponse {
  readonly ConsumerArns: [];
  readonly NextToken: string;
}

interface ListTrackersRequest {
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListTrackersResponse {
  readonly Entries: [];
  readonly NextToken: string;
}

interface ListTrackersResponseEntry {
  readonly CreateTime: Date;
  readonly Description: string;
  readonly PricingPlan: string;
  readonly PricingPlanDataSource: string;
  readonly TrackerName: string;
  readonly UpdateTime: Date;
}

interface MapConfiguration {
  readonly Style: string;
}

interface Place {
  readonly AddressNumber: string;
  readonly Country: string;
  readonly Geometry: PlaceGeometry;
  readonly Interpolated: boolean;
  readonly Label: string;
  readonly Municipality: string;
  readonly Neighborhood: string;
  readonly PostalCode: string;
  readonly Region: string;
  readonly Street: string;
  readonly SubRegion: string;
  readonly TimeZone: TimeZone;
}

interface PlaceGeometry {
  readonly Point: [];
}

interface PositionalAccuracy {
  readonly Horizontal: unknown;
}

interface PutGeofenceRequest {
  readonly CollectionName: string;
  readonly GeofenceId: string;
  readonly Geometry: GeofenceGeometry;
}

interface PutGeofenceResponse {
  readonly CreateTime: Date;
  readonly GeofenceId: string;
  readonly UpdateTime: Date;
}

interface ResourceNotFoundException {
  readonly Message: string;
}

interface SearchForPositionResult {
  readonly Distance: unknown;
  readonly Place: Place;
}

interface SearchForSuggestionsResult {
  readonly Text: string;
}

interface SearchForTextResult {
  readonly Distance: unknown;
  readonly Place: Place;
  readonly Relevance: unknown;
}

interface SearchPlaceIndexForPositionRequest {
  readonly IndexName: string;
  readonly Language: string;
  readonly MaxResults: number;
  readonly Position: [];
}

interface SearchPlaceIndexForPositionResponse {
  readonly Results: [];
  readonly Summary: SearchPlaceIndexForPositionSummary;
}

interface SearchPlaceIndexForPositionSummary {
  readonly DataSource: string;
  readonly Language: string;
  readonly MaxResults: number;
  readonly Position: [];
}

interface SearchPlaceIndexForSuggestionsRequest {
  readonly BiasPosition: [];
  readonly FilterBBox: [];
  readonly FilterCountries: [];
  readonly IndexName: string;
  readonly Language: string;
  readonly MaxResults: number;
  readonly Text: string;
}

interface SearchPlaceIndexForSuggestionsResponse {
  readonly Results: [];
  readonly Summary: SearchPlaceIndexForSuggestionsSummary;
}

interface SearchPlaceIndexForSuggestionsSummary {
  readonly BiasPosition: [];
  readonly DataSource: string;
  readonly FilterBBox: [];
  readonly FilterCountries: [];
  readonly Language: string;
  readonly MaxResults: number;
  readonly Text: string;
}

interface SearchPlaceIndexForTextRequest {
  readonly BiasPosition: [];
  readonly FilterBBox: [];
  readonly FilterCountries: [];
  readonly IndexName: string;
  readonly Language: string;
  readonly MaxResults: number;
  readonly Text: string;
}

interface SearchPlaceIndexForTextResponse {
  readonly Results: [];
  readonly Summary: SearchPlaceIndexForTextSummary;
}

interface SearchPlaceIndexForTextSummary {
  readonly BiasPosition: [];
  readonly DataSource: string;
  readonly FilterBBox: [];
  readonly FilterCountries: [];
  readonly Language: string;
  readonly MaxResults: number;
  readonly ResultBBox: [];
  readonly Text: string;
}

interface ServiceQuotaExceededException {
  readonly Message: string;
}

interface Step {
  readonly Distance: unknown;
  readonly DurationSeconds: unknown;
  readonly EndPosition: [];
  readonly GeometryOffset: number;
  readonly StartPosition: [];
}

interface TagResourceRequest {
  readonly ResourceArn: string;
  readonly Tags: {[key: string]: any};
}

interface TagResourceResponse {
}

interface ThrottlingException {
  readonly Message: string;
}

interface TimeZone {
  readonly Name: string;
  readonly Offset: number;
}

interface TruckDimensions {
  readonly Height: unknown;
  readonly Length: unknown;
  readonly Unit: string;
  readonly Width: unknown;
}

interface TruckWeight {
  readonly Total: unknown;
  readonly Unit: string;
}

interface UntagResourceRequest {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}

interface UntagResourceResponse {
}

interface UpdateGeofenceCollectionRequest {
  readonly CollectionName: string;
  readonly Description: string;
  readonly PricingPlan: string;
  readonly PricingPlanDataSource: string;
}

interface UpdateGeofenceCollectionResponse {
  readonly CollectionArn: string;
  readonly CollectionName: string;
  readonly UpdateTime: Date;
}

interface UpdateMapRequest {
  readonly Description: string;
  readonly MapName: string;
  readonly PricingPlan: string;
}

interface UpdateMapResponse {
  readonly MapArn: string;
  readonly MapName: string;
  readonly UpdateTime: Date;
}

interface UpdatePlaceIndexRequest {
  readonly DataSourceConfiguration: DataSourceConfiguration;
  readonly Description: string;
  readonly IndexName: string;
  readonly PricingPlan: string;
}

interface UpdatePlaceIndexResponse {
  readonly IndexArn: string;
  readonly IndexName: string;
  readonly UpdateTime: Date;
}

interface UpdateRouteCalculatorRequest {
  readonly CalculatorName: string;
  readonly Description: string;
  readonly PricingPlan: string;
}

interface UpdateRouteCalculatorResponse {
  readonly CalculatorArn: string;
  readonly CalculatorName: string;
  readonly UpdateTime: Date;
}

interface UpdateTrackerRequest {
  readonly Description: string;
  readonly PositionFiltering: string;
  readonly PricingPlan: string;
  readonly PricingPlanDataSource: string;
  readonly TrackerName: string;
}

interface UpdateTrackerResponse {
  readonly TrackerArn: string;
  readonly TrackerName: string;
  readonly UpdateTime: Date;
}

interface ValidationException {
  readonly FieldList: [];
  readonly Message: string;
  readonly Reason: string;
}

interface ValidationExceptionField {
  readonly Message: string;
  readonly Name: string;
}

