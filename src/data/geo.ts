/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AssociateTrackerConsumer {
  readonly ConsumerArn: string;
  readonly TrackerName: string;
}

export interface BatchDeleteDevicePositionHistory {
  readonly DeviceIds: [];
  readonly TrackerName: string;
}

export interface BatchDeleteGeofence {
  readonly CollectionName: string;
  readonly GeofenceIds: [];
}

export interface BatchEvaluateGeofences {
  readonly CollectionName: string;
  readonly DevicePositionUpdates: [];
}

export interface BatchGetDevicePosition {
  readonly DeviceIds: [];
  readonly TrackerName: string;
}

export interface BatchPutGeofence {
  readonly CollectionName: string;
  readonly Entries: [];
}

export interface BatchUpdateDevicePosition {
  readonly TrackerName: string;
  readonly Updates: [];
}

export interface CalculateRoute {
  readonly CalculatorName: string;
  readonly CarModeOptions?: CalculateRouteCarModeOptions;
  readonly DepartNow?: boolean;
  readonly DeparturePosition: [];
  readonly DepartureTime?: Date;
  readonly DestinationPosition: [];
  readonly DistanceUnit?: string;
  readonly IncludeLegGeometry?: boolean;
  readonly TravelMode?: string;
  readonly TruckModeOptions?: CalculateRouteTruckModeOptions;
  readonly WaypointPositions?: [];
}

export interface CreateGeofenceCollection {
  readonly CollectionName: string;
  readonly Description?: string;
  readonly KmsKeyId?: string;
  readonly PricingPlan: string;
  readonly PricingPlanDataSource?: string;
  readonly Tags?: {[key: string]: any};
}

export interface CreateMap {
  readonly Configuration: MapConfiguration;
  readonly Description?: string;
  readonly MapName: string;
  readonly PricingPlan: string;
  readonly Tags?: {[key: string]: any};
}

export interface CreatePlaceIndex {
  readonly DataSource: string;
  readonly DataSourceConfiguration?: DataSourceConfiguration;
  readonly Description?: string;
  readonly IndexName: string;
  readonly PricingPlan: string;
  readonly Tags?: {[key: string]: any};
}

export interface CreateRouteCalculator {
  readonly CalculatorName: string;
  readonly DataSource: string;
  readonly Description?: string;
  readonly PricingPlan: string;
  readonly Tags?: {[key: string]: any};
}

export interface CreateTracker {
  readonly Description?: string;
  readonly KmsKeyId?: string;
  readonly PositionFiltering?: string;
  readonly PricingPlan: string;
  readonly PricingPlanDataSource?: string;
  readonly Tags?: {[key: string]: any};
  readonly TrackerName: string;
}

export interface DeleteGeofenceCollection {
  readonly CollectionName: string;
}

export interface DeleteMap {
  readonly MapName: string;
}

export interface DeletePlaceIndex {
  readonly IndexName: string;
}

export interface DeleteRouteCalculator {
  readonly CalculatorName: string;
}

export interface DeleteTracker {
  readonly TrackerName: string;
}

export interface DescribeGeofenceCollection {
  readonly CollectionName: string;
}

export interface DescribeMap {
  readonly MapName: string;
}

export interface DescribePlaceIndex {
  readonly IndexName: string;
}

export interface DescribeRouteCalculator {
  readonly CalculatorName: string;
}

export interface DescribeTracker {
  readonly TrackerName: string;
}

export interface DisassociateTrackerConsumer {
  readonly ConsumerArn: string;
  readonly TrackerName: string;
}

export interface GetDevicePosition {
  readonly DeviceId: string;
  readonly TrackerName: string;
}

export interface GetDevicePositionHistory {
  readonly DeviceId: string;
  readonly EndTimeExclusive?: Date;
  readonly NextToken?: string;
  readonly StartTimeInclusive?: Date;
  readonly TrackerName: string;
}

export interface GetGeofence {
  readonly CollectionName: string;
  readonly GeofenceId: string;
}

export interface GetMapGlyphs {
  readonly FontStack: string;
  readonly FontUnicodeRange: string;
  readonly MapName: string;
}

export interface GetMapSprites {
  readonly FileName: string;
  readonly MapName: string;
}

export interface GetMapStyleDescriptor {
  readonly MapName: string;
}

export interface GetMapTile {
  readonly MapName: string;
  readonly X: string;
  readonly Y: string;
  readonly Z: string;
}

export interface ListDevicePositions {
  readonly MaxResults?: number;
  readonly NextToken?: string;
  readonly TrackerName: string;
}

export interface ListGeofenceCollections {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListGeofences {
  readonly CollectionName: string;
  readonly NextToken?: string;
}

export interface ListMaps {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListPlaceIndexes {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListRouteCalculators {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListTagsForResource {
  readonly ResourceArn: string;
}

export interface ListTrackerConsumers {
  readonly MaxResults?: number;
  readonly NextToken?: string;
  readonly TrackerName: string;
}

export interface ListTrackers {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface PutGeofence {
  readonly CollectionName: string;
  readonly GeofenceId: string;
  readonly Geometry: GeofenceGeometry;
}

export interface SearchPlaceIndexForPosition {
  readonly IndexName: string;
  readonly Language?: string;
  readonly MaxResults?: number;
  readonly Position: [];
}

export interface SearchPlaceIndexForSuggestions {
  readonly BiasPosition?: [];
  readonly FilterBBox?: [];
  readonly FilterCountries?: [];
  readonly IndexName: string;
  readonly Language?: string;
  readonly MaxResults?: number;
  readonly Text: string;
}

export interface SearchPlaceIndexForText {
  readonly BiasPosition?: [];
  readonly FilterBBox?: [];
  readonly FilterCountries?: [];
  readonly IndexName: string;
  readonly Language?: string;
  readonly MaxResults?: number;
  readonly Text: string;
}

export interface TagResource {
  readonly ResourceArn: string;
  readonly Tags: {[key: string]: any};
}

export interface UntagResource {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}

export interface UpdateGeofenceCollection {
  readonly CollectionName: string;
  readonly Description?: string;
  readonly PricingPlan?: string;
  readonly PricingPlanDataSource?: string;
}

export interface UpdateMap {
  readonly Description?: string;
  readonly MapName: string;
  readonly PricingPlan?: string;
}

export interface UpdatePlaceIndex {
  readonly DataSourceConfiguration?: DataSourceConfiguration;
  readonly Description?: string;
  readonly IndexName: string;
  readonly PricingPlan?: string;
}

export interface UpdateRouteCalculator {
  readonly CalculatorName: string;
  readonly Description?: string;
  readonly PricingPlan?: string;
}

export interface UpdateTracker {
  readonly Description?: string;
  readonly PositionFiltering?: string;
  readonly PricingPlan?: string;
  readonly PricingPlanDataSource?: string;
  readonly TrackerName: string;
}

export interface AccessDeniedException {
  readonly Message: string;
}

export interface AssociateTrackerConsumerRequest {
  readonly ConsumerArn: string;
  readonly TrackerName: string;
}

export interface AssociateTrackerConsumerResponse {
}

export interface BatchDeleteDevicePositionHistoryError {
  readonly DeviceId: string;
  readonly Error: BatchItemError;
}

export interface BatchDeleteDevicePositionHistoryRequest {
  readonly DeviceIds: [];
  readonly TrackerName: string;
}

export interface BatchDeleteDevicePositionHistoryResponse {
  readonly Errors: [];
}

export interface BatchDeleteGeofenceError {
  readonly Error: BatchItemError;
  readonly GeofenceId: string;
}

export interface BatchDeleteGeofenceRequest {
  readonly CollectionName: string;
  readonly GeofenceIds: [];
}

export interface BatchDeleteGeofenceResponse {
  readonly Errors: [];
}

export interface BatchEvaluateGeofencesError {
  readonly DeviceId: string;
  readonly Error: BatchItemError;
  readonly SampleTime: Date;
}

export interface BatchEvaluateGeofencesRequest {
  readonly CollectionName: string;
  readonly DevicePositionUpdates: [];
}

export interface BatchEvaluateGeofencesResponse {
  readonly Errors: [];
}

export interface BatchGetDevicePositionError {
  readonly DeviceId: string;
  readonly Error: BatchItemError;
}

export interface BatchGetDevicePositionRequest {
  readonly DeviceIds: [];
  readonly TrackerName: string;
}

export interface BatchGetDevicePositionResponse {
  readonly DevicePositions: [];
  readonly Errors: [];
}

export interface BatchItemError {
  readonly Code?: string;
  readonly Message?: string;
}

export interface BatchPutGeofenceError {
  readonly Error: BatchItemError;
  readonly GeofenceId: string;
}

export interface BatchPutGeofenceRequest {
  readonly CollectionName: string;
  readonly Entries: [];
}

export interface BatchPutGeofenceRequestEntry {
  readonly GeofenceId: string;
  readonly Geometry: GeofenceGeometry;
}

export interface BatchPutGeofenceResponse {
  readonly Errors: [];
  readonly Successes: [];
}

export interface BatchPutGeofenceSuccess {
  readonly CreateTime: Date;
  readonly GeofenceId: string;
  readonly UpdateTime: Date;
}

export interface BatchUpdateDevicePositionError {
  readonly DeviceId: string;
  readonly Error: BatchItemError;
  readonly SampleTime: Date;
}

export interface BatchUpdateDevicePositionRequest {
  readonly TrackerName: string;
  readonly Updates: [];
}

export interface BatchUpdateDevicePositionResponse {
  readonly Errors: [];
}

export interface CalculateRouteCarModeOptions {
  readonly AvoidFerries?: boolean;
  readonly AvoidTolls?: boolean;
}

export interface CalculateRouteRequest {
  readonly CalculatorName: string;
  readonly CarModeOptions?: CalculateRouteCarModeOptions;
  readonly DepartNow?: boolean;
  readonly DeparturePosition: [];
  readonly DepartureTime?: Date;
  readonly DestinationPosition: [];
  readonly DistanceUnit?: string;
  readonly IncludeLegGeometry?: boolean;
  readonly TravelMode?: string;
  readonly TruckModeOptions?: CalculateRouteTruckModeOptions;
  readonly WaypointPositions?: [];
}

export interface CalculateRouteResponse {
  readonly Legs: [];
  readonly Summary: CalculateRouteSummary;
}

export interface CalculateRouteSummary {
  readonly DataSource: string;
  readonly Distance: unknown;
  readonly DistanceUnit: string;
  readonly DurationSeconds: unknown;
  readonly RouteBBox: [];
}

export interface CalculateRouteTruckModeOptions {
  readonly AvoidFerries?: boolean;
  readonly AvoidTolls?: boolean;
  readonly Dimensions?: TruckDimensions;
  readonly Weight?: TruckWeight;
}

export interface ConflictException {
  readonly Message: string;
}

export interface CreateGeofenceCollectionRequest {
  readonly CollectionName: string;
  readonly Description?: string;
  readonly KmsKeyId?: string;
  readonly PricingPlan: string;
  readonly PricingPlanDataSource?: string;
  readonly Tags?: {[key: string]: any};
}

export interface CreateGeofenceCollectionResponse {
  readonly CollectionArn: string;
  readonly CollectionName: string;
  readonly CreateTime: Date;
}

export interface CreateMapRequest {
  readonly Configuration: MapConfiguration;
  readonly Description?: string;
  readonly MapName: string;
  readonly PricingPlan: string;
  readonly Tags?: {[key: string]: any};
}

export interface CreateMapResponse {
  readonly CreateTime: Date;
  readonly MapArn: string;
  readonly MapName: string;
}

export interface CreatePlaceIndexRequest {
  readonly DataSource: string;
  readonly DataSourceConfiguration?: DataSourceConfiguration;
  readonly Description?: string;
  readonly IndexName: string;
  readonly PricingPlan: string;
  readonly Tags?: {[key: string]: any};
}

export interface CreatePlaceIndexResponse {
  readonly CreateTime: Date;
  readonly IndexArn: string;
  readonly IndexName: string;
}

export interface CreateRouteCalculatorRequest {
  readonly CalculatorName: string;
  readonly DataSource: string;
  readonly Description?: string;
  readonly PricingPlan: string;
  readonly Tags?: {[key: string]: any};
}

export interface CreateRouteCalculatorResponse {
  readonly CalculatorArn: string;
  readonly CalculatorName: string;
  readonly CreateTime: Date;
}

export interface CreateTrackerRequest {
  readonly Description?: string;
  readonly KmsKeyId?: string;
  readonly PositionFiltering?: string;
  readonly PricingPlan: string;
  readonly PricingPlanDataSource?: string;
  readonly Tags?: {[key: string]: any};
  readonly TrackerName: string;
}

export interface CreateTrackerResponse {
  readonly CreateTime: Date;
  readonly TrackerArn: string;
  readonly TrackerName: string;
}

export interface DataSourceConfiguration {
  readonly IntendedUse?: string;
}

export interface DeleteGeofenceCollectionRequest {
  readonly CollectionName: string;
}

export interface DeleteGeofenceCollectionResponse {
}

export interface DeleteMapRequest {
  readonly MapName: string;
}

export interface DeleteMapResponse {
}

export interface DeletePlaceIndexRequest {
  readonly IndexName: string;
}

export interface DeletePlaceIndexResponse {
}

export interface DeleteRouteCalculatorRequest {
  readonly CalculatorName: string;
}

export interface DeleteRouteCalculatorResponse {
}

export interface DeleteTrackerRequest {
  readonly TrackerName: string;
}

export interface DeleteTrackerResponse {
}

export interface DescribeGeofenceCollectionRequest {
  readonly CollectionName: string;
}

export interface DescribeGeofenceCollectionResponse {
  readonly CollectionArn: string;
  readonly CollectionName: string;
  readonly CreateTime: Date;
  readonly Description: string;
  readonly KmsKeyId?: string;
  readonly PricingPlan: string;
  readonly PricingPlanDataSource?: string;
  readonly Tags?: {[key: string]: any};
  readonly UpdateTime: Date;
}

export interface DescribeMapRequest {
  readonly MapName: string;
}

export interface DescribeMapResponse {
  readonly Configuration: MapConfiguration;
  readonly CreateTime: Date;
  readonly DataSource: string;
  readonly Description: string;
  readonly MapArn: string;
  readonly MapName: string;
  readonly PricingPlan: string;
  readonly Tags?: {[key: string]: any};
  readonly UpdateTime: Date;
}

export interface DescribePlaceIndexRequest {
  readonly IndexName: string;
}

export interface DescribePlaceIndexResponse {
  readonly CreateTime: Date;
  readonly DataSource: string;
  readonly DataSourceConfiguration: DataSourceConfiguration;
  readonly Description: string;
  readonly IndexArn: string;
  readonly IndexName: string;
  readonly PricingPlan: string;
  readonly Tags?: {[key: string]: any};
  readonly UpdateTime: Date;
}

export interface DescribeRouteCalculatorRequest {
  readonly CalculatorName: string;
}

export interface DescribeRouteCalculatorResponse {
  readonly CalculatorArn: string;
  readonly CalculatorName: string;
  readonly CreateTime: Date;
  readonly DataSource: string;
  readonly Description: string;
  readonly PricingPlan: string;
  readonly Tags?: {[key: string]: any};
  readonly UpdateTime: Date;
}

export interface DescribeTrackerRequest {
  readonly TrackerName: string;
}

export interface DescribeTrackerResponse {
  readonly CreateTime: Date;
  readonly Description: string;
  readonly KmsKeyId?: string;
  readonly PositionFiltering?: string;
  readonly PricingPlan: string;
  readonly PricingPlanDataSource?: string;
  readonly Tags?: {[key: string]: any};
  readonly TrackerArn: string;
  readonly TrackerName: string;
  readonly UpdateTime: Date;
}

export interface DevicePosition {
  readonly Accuracy?: PositionalAccuracy;
  readonly DeviceId?: string;
  readonly Position: [];
  readonly PositionProperties?: {[key: string]: any};
  readonly ReceivedTime: Date;
  readonly SampleTime: Date;
}

export interface DevicePositionUpdate {
  readonly Accuracy?: PositionalAccuracy;
  readonly DeviceId: string;
  readonly Position: [];
  readonly PositionProperties?: {[key: string]: any};
  readonly SampleTime: Date;
}

export interface DisassociateTrackerConsumerRequest {
  readonly ConsumerArn: string;
  readonly TrackerName: string;
}

export interface DisassociateTrackerConsumerResponse {
}

export interface GeofenceGeometry {
  readonly Polygon?: [];
}

export interface GetDevicePositionHistoryRequest {
  readonly DeviceId: string;
  readonly EndTimeExclusive?: Date;
  readonly NextToken?: string;
  readonly StartTimeInclusive?: Date;
  readonly TrackerName: string;
}

export interface GetDevicePositionHistoryResponse {
  readonly DevicePositions: [];
  readonly NextToken?: string;
}

export interface GetDevicePositionRequest {
  readonly DeviceId: string;
  readonly TrackerName: string;
}

export interface GetDevicePositionResponse {
  readonly Accuracy?: PositionalAccuracy;
  readonly DeviceId?: string;
  readonly Position: [];
  readonly PositionProperties?: {[key: string]: any};
  readonly ReceivedTime: Date;
  readonly SampleTime: Date;
}

export interface GetGeofenceRequest {
  readonly CollectionName: string;
  readonly GeofenceId: string;
}

export interface GetGeofenceResponse {
  readonly CreateTime: Date;
  readonly GeofenceId: string;
  readonly Geometry: GeofenceGeometry;
  readonly Status: string;
  readonly UpdateTime: Date;
}

export interface GetMapGlyphsRequest {
  readonly FontStack: string;
  readonly FontUnicodeRange: string;
  readonly MapName: string;
}

export interface GetMapGlyphsResponse {
  readonly Blob?: unknown;
  readonly ContentType?: string;
}

export interface GetMapSpritesRequest {
  readonly FileName: string;
  readonly MapName: string;
}

export interface GetMapSpritesResponse {
  readonly Blob?: unknown;
  readonly ContentType?: string;
}

export interface GetMapStyleDescriptorRequest {
  readonly MapName: string;
}

export interface GetMapStyleDescriptorResponse {
  readonly Blob?: unknown;
  readonly ContentType?: string;
}

export interface GetMapTileRequest {
  readonly MapName: string;
  readonly X: string;
  readonly Y: string;
  readonly Z: string;
}

export interface GetMapTileResponse {
  readonly Blob?: unknown;
  readonly ContentType?: string;
}

export interface InternalServerException {
  readonly Message: string;
}

export interface Leg {
  readonly Distance: unknown;
  readonly DurationSeconds: unknown;
  readonly EndPosition: [];
  readonly Geometry?: LegGeometry;
  readonly StartPosition: [];
  readonly Steps: [];
}

export interface LegGeometry {
  readonly LineString?: [];
}

export interface ListDevicePositionsRequest {
  readonly MaxResults?: number;
  readonly NextToken?: string;
  readonly TrackerName: string;
}

export interface ListDevicePositionsResponse {
  readonly Entries: [];
  readonly NextToken?: string;
}

export interface ListDevicePositionsResponseEntry {
  readonly Accuracy?: PositionalAccuracy;
  readonly DeviceId: string;
  readonly Position: [];
  readonly PositionProperties?: {[key: string]: any};
  readonly SampleTime: Date;
}

export interface ListGeofenceCollectionsRequest {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListGeofenceCollectionsResponse {
  readonly Entries: [];
  readonly NextToken?: string;
}

export interface ListGeofenceCollectionsResponseEntry {
  readonly CollectionName: string;
  readonly CreateTime: Date;
  readonly Description: string;
  readonly PricingPlan: string;
  readonly PricingPlanDataSource?: string;
  readonly UpdateTime: Date;
}

export interface ListGeofenceResponseEntry {
  readonly CreateTime: Date;
  readonly GeofenceId: string;
  readonly Geometry: GeofenceGeometry;
  readonly Status: string;
  readonly UpdateTime: Date;
}

export interface ListGeofencesRequest {
  readonly CollectionName: string;
  readonly NextToken?: string;
}

export interface ListGeofencesResponse {
  readonly Entries: [];
  readonly NextToken?: string;
}

export interface ListMapsRequest {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListMapsResponse {
  readonly Entries: [];
  readonly NextToken?: string;
}

export interface ListMapsResponseEntry {
  readonly CreateTime: Date;
  readonly DataSource: string;
  readonly Description: string;
  readonly MapName: string;
  readonly PricingPlan: string;
  readonly UpdateTime: Date;
}

export interface ListPlaceIndexesRequest {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListPlaceIndexesResponse {
  readonly Entries: [];
  readonly NextToken?: string;
}

export interface ListPlaceIndexesResponseEntry {
  readonly CreateTime: Date;
  readonly DataSource: string;
  readonly Description: string;
  readonly IndexName: string;
  readonly PricingPlan: string;
  readonly UpdateTime: Date;
}

export interface ListRouteCalculatorsRequest {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListRouteCalculatorsResponse {
  readonly Entries: [];
  readonly NextToken?: string;
}

export interface ListRouteCalculatorsResponseEntry {
  readonly CalculatorName: string;
  readonly CreateTime: Date;
  readonly DataSource: string;
  readonly Description: string;
  readonly PricingPlan: string;
  readonly UpdateTime: Date;
}

export interface ListTagsForResourceRequest {
  readonly ResourceArn: string;
}

export interface ListTagsForResourceResponse {
  readonly Tags?: {[key: string]: any};
}

export interface ListTrackerConsumersRequest {
  readonly MaxResults?: number;
  readonly NextToken?: string;
  readonly TrackerName: string;
}

export interface ListTrackerConsumersResponse {
  readonly ConsumerArns: [];
  readonly NextToken?: string;
}

export interface ListTrackersRequest {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListTrackersResponse {
  readonly Entries: [];
  readonly NextToken?: string;
}

export interface ListTrackersResponseEntry {
  readonly CreateTime: Date;
  readonly Description: string;
  readonly PricingPlan: string;
  readonly PricingPlanDataSource?: string;
  readonly TrackerName: string;
  readonly UpdateTime: Date;
}

export interface MapConfiguration {
  readonly Style: string;
}

export interface Place {
  readonly AddressNumber?: string;
  readonly Country?: string;
  readonly Geometry: PlaceGeometry;
  readonly Interpolated?: boolean;
  readonly Label?: string;
  readonly Municipality?: string;
  readonly Neighborhood?: string;
  readonly PostalCode?: string;
  readonly Region?: string;
  readonly Street?: string;
  readonly SubRegion?: string;
  readonly TimeZone?: TimeZone;
}

export interface PlaceGeometry {
  readonly Point?: [];
}

export interface PositionalAccuracy {
  readonly Horizontal: unknown;
}

export interface PutGeofenceRequest {
  readonly CollectionName: string;
  readonly GeofenceId: string;
  readonly Geometry: GeofenceGeometry;
}

export interface PutGeofenceResponse {
  readonly CreateTime: Date;
  readonly GeofenceId: string;
  readonly UpdateTime: Date;
}

export interface ResourceNotFoundException {
  readonly Message: string;
}

export interface SearchForPositionResult {
  readonly Distance: unknown;
  readonly Place: Place;
}

export interface SearchForSuggestionsResult {
  readonly Text: string;
}

export interface SearchForTextResult {
  readonly Distance?: unknown;
  readonly Place: Place;
  readonly Relevance?: unknown;
}

export interface SearchPlaceIndexForPositionRequest {
  readonly IndexName: string;
  readonly Language?: string;
  readonly MaxResults?: number;
  readonly Position: [];
}

export interface SearchPlaceIndexForPositionResponse {
  readonly Results: [];
  readonly Summary: SearchPlaceIndexForPositionSummary;
}

export interface SearchPlaceIndexForPositionSummary {
  readonly DataSource: string;
  readonly Language?: string;
  readonly MaxResults?: number;
  readonly Position: [];
}

export interface SearchPlaceIndexForSuggestionsRequest {
  readonly BiasPosition?: [];
  readonly FilterBBox?: [];
  readonly FilterCountries?: [];
  readonly IndexName: string;
  readonly Language?: string;
  readonly MaxResults?: number;
  readonly Text: string;
}

export interface SearchPlaceIndexForSuggestionsResponse {
  readonly Results: [];
  readonly Summary: SearchPlaceIndexForSuggestionsSummary;
}

export interface SearchPlaceIndexForSuggestionsSummary {
  readonly BiasPosition?: [];
  readonly DataSource: string;
  readonly FilterBBox?: [];
  readonly FilterCountries?: [];
  readonly Language?: string;
  readonly MaxResults?: number;
  readonly Text: string;
}

export interface SearchPlaceIndexForTextRequest {
  readonly BiasPosition?: [];
  readonly FilterBBox?: [];
  readonly FilterCountries?: [];
  readonly IndexName: string;
  readonly Language?: string;
  readonly MaxResults?: number;
  readonly Text: string;
}

export interface SearchPlaceIndexForTextResponse {
  readonly Results: [];
  readonly Summary: SearchPlaceIndexForTextSummary;
}

export interface SearchPlaceIndexForTextSummary {
  readonly BiasPosition?: [];
  readonly DataSource: string;
  readonly FilterBBox?: [];
  readonly FilterCountries?: [];
  readonly Language?: string;
  readonly MaxResults?: number;
  readonly ResultBBox?: [];
  readonly Text: string;
}

export interface ServiceQuotaExceededException {
  readonly Message: string;
}

export interface Step {
  readonly Distance: unknown;
  readonly DurationSeconds: unknown;
  readonly EndPosition: [];
  readonly GeometryOffset?: number;
  readonly StartPosition: [];
}

export interface TagResourceRequest {
  readonly ResourceArn: string;
  readonly Tags: {[key: string]: any};
}

export interface TagResourceResponse {
}

export interface ThrottlingException {
  readonly Message: string;
}

export interface TimeZone {
  readonly Name: string;
  readonly Offset?: number;
}

export interface TruckDimensions {
  readonly Height?: unknown;
  readonly Length?: unknown;
  readonly Unit?: string;
  readonly Width?: unknown;
}

export interface TruckWeight {
  readonly Total?: unknown;
  readonly Unit?: string;
}

export interface UntagResourceRequest {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}

export interface UntagResourceResponse {
}

export interface UpdateGeofenceCollectionRequest {
  readonly CollectionName: string;
  readonly Description?: string;
  readonly PricingPlan?: string;
  readonly PricingPlanDataSource?: string;
}

export interface UpdateGeofenceCollectionResponse {
  readonly CollectionArn: string;
  readonly CollectionName: string;
  readonly UpdateTime: Date;
}

export interface UpdateMapRequest {
  readonly Description?: string;
  readonly MapName: string;
  readonly PricingPlan?: string;
}

export interface UpdateMapResponse {
  readonly MapArn: string;
  readonly MapName: string;
  readonly UpdateTime: Date;
}

export interface UpdatePlaceIndexRequest {
  readonly DataSourceConfiguration?: DataSourceConfiguration;
  readonly Description?: string;
  readonly IndexName: string;
  readonly PricingPlan?: string;
}

export interface UpdatePlaceIndexResponse {
  readonly IndexArn: string;
  readonly IndexName: string;
  readonly UpdateTime: Date;
}

export interface UpdateRouteCalculatorRequest {
  readonly CalculatorName: string;
  readonly Description?: string;
  readonly PricingPlan?: string;
}

export interface UpdateRouteCalculatorResponse {
  readonly CalculatorArn: string;
  readonly CalculatorName: string;
  readonly UpdateTime: Date;
}

export interface UpdateTrackerRequest {
  readonly Description?: string;
  readonly PositionFiltering?: string;
  readonly PricingPlan?: string;
  readonly PricingPlanDataSource?: string;
  readonly TrackerName: string;
}

export interface UpdateTrackerResponse {
  readonly TrackerArn: string;
  readonly TrackerName: string;
  readonly UpdateTime: Date;
}

export interface ValidationException {
  readonly FieldList: [];
  readonly Message: string;
  readonly Reason: string;
}

export interface ValidationExceptionField {
  readonly Message: string;
  readonly Name: string;
}


