/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CancelQuery {
  readonly QueryId: string;
}
export interface CreateScheduledQuery {
  readonly Name: string;
  readonly QueryString: string;
  readonly ScheduleConfiguration: ScheduleConfiguration;
  readonly NotificationConfiguration: NotificationConfiguration;
  readonly TargetConfiguration?: TargetConfiguration;
  readonly ClientToken?: string;
  readonly ScheduledQueryExecutionRoleArn: string;
  readonly Tags?: [];
  readonly KmsKeyId?: string;
  readonly ErrorReportConfiguration: ErrorReportConfiguration;
}
export interface DeleteScheduledQuery {
  readonly ScheduledQueryArn: string;
}
export interface DescribeEndpoints {
}
export interface DescribeScheduledQuery {
  readonly ScheduledQueryArn: string;
}
export interface ExecuteScheduledQuery {
  readonly ScheduledQueryArn: string;
  readonly InvocationTime: Date;
  readonly ClientToken?: string;
}
export interface ListScheduledQueries {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface ListTagsForResource {
  readonly ResourceARN: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface PrepareQuery {
  readonly QueryString: string;
  readonly ValidateOnly?: boolean;
}
export interface Query {
  readonly QueryString: string;
  readonly ClientToken?: string;
  readonly NextToken?: string;
  readonly MaxRows?: number;
}
export interface TagResource {
  readonly ResourceARN: string;
  readonly Tags: [];
}
export interface UntagResource {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}
export interface UpdateScheduledQuery {
  readonly ScheduledQueryArn: string;
  readonly State: string;
}



interface AccessDeniedException {
  readonly Message: string;
}

interface CancelQueryRequest {
  readonly QueryId: string;
}

interface CancelQueryResponse {
  readonly CancellationMessage: string;
}

interface ColumnInfo {
  readonly Name: string;
  readonly Type: Type;
}

interface ConflictException {
  readonly Message: string;
}

interface CreateScheduledQueryRequest {
  readonly Name: string;
  readonly QueryString: string;
  readonly ScheduleConfiguration: ScheduleConfiguration;
  readonly NotificationConfiguration: NotificationConfiguration;
  readonly TargetConfiguration: TargetConfiguration;
  readonly ClientToken: string;
  readonly ScheduledQueryExecutionRoleArn: string;
  readonly Tags: [];
  readonly KmsKeyId: string;
  readonly ErrorReportConfiguration: ErrorReportConfiguration;
}

interface CreateScheduledQueryResponse {
  readonly Arn: string;
}

interface Datum {
  readonly ScalarValue: string;
  readonly TimeSeriesValue: [];
  readonly ArrayValue: [];
  readonly RowValue: Row;
  readonly NullValue: boolean;
}

interface DeleteScheduledQueryRequest {
  readonly ScheduledQueryArn: string;
}

interface DescribeEndpointsRequest {
}

interface DescribeEndpointsResponse {
  readonly Endpoints: [];
}

interface DescribeScheduledQueryRequest {
  readonly ScheduledQueryArn: string;
}

interface DescribeScheduledQueryResponse {
  readonly ScheduledQuery: ScheduledQueryDescription;
}

interface DimensionMapping {
  readonly Name: string;
  readonly DimensionValueType: string;
}

interface Endpoint {
  readonly Address: string;
  readonly CachePeriodInMinutes: number;
}

interface ErrorReportConfiguration {
  readonly S3Configuration: S3Configuration;
}

interface ErrorReportLocation {
  readonly S3ReportLocation: S3ReportLocation;
}

interface ExecuteScheduledQueryRequest {
  readonly ScheduledQueryArn: string;
  readonly InvocationTime: Date;
  readonly ClientToken: string;
}

interface ExecutionStats {
  readonly ExecutionTimeInMillis: number;
  readonly DataWrites: number;
  readonly BytesMetered: number;
  readonly RecordsIngested: number;
  readonly QueryResultRows: number;
}

interface InternalServerException {
  readonly Message: string;
}

interface InvalidEndpointException {
  readonly Message: string;
}

interface ListScheduledQueriesRequest {
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListScheduledQueriesResponse {
  readonly ScheduledQueries: [];
  readonly NextToken: string;
}

interface ListTagsForResourceRequest {
  readonly ResourceARN: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListTagsForResourceResponse {
  readonly Tags: [];
  readonly NextToken: string;
}

interface MixedMeasureMapping {
  readonly MeasureName: string;
  readonly SourceColumn: string;
  readonly TargetMeasureName: string;
  readonly MeasureValueType: string;
  readonly MultiMeasureAttributeMappings: [];
}

interface MultiMeasureAttributeMapping {
  readonly SourceColumn: string;
  readonly TargetMultiMeasureAttributeName: string;
  readonly MeasureValueType: string;
}

interface MultiMeasureMappings {
  readonly TargetMultiMeasureName: string;
  readonly MultiMeasureAttributeMappings: [];
}

interface NotificationConfiguration {
  readonly SnsConfiguration: SnsConfiguration;
}

interface ParameterMapping {
  readonly Name: string;
  readonly Type: Type;
}

interface PrepareQueryRequest {
  readonly QueryString: string;
  readonly ValidateOnly: boolean;
}

interface PrepareQueryResponse {
  readonly QueryString: string;
  readonly Columns: [];
  readonly Parameters: [];
}

interface QueryExecutionException {
  readonly Message: string;
}

interface QueryRequest {
  readonly QueryString: string;
  readonly ClientToken: string;
  readonly NextToken: string;
  readonly MaxRows: number;
}

interface QueryResponse {
  readonly QueryId: string;
  readonly NextToken: string;
  readonly Rows: [];
  readonly ColumnInfo: [];
  readonly QueryStatus: QueryStatus;
}

interface QueryStatus {
  readonly ProgressPercentage: unknown;
  readonly CumulativeBytesScanned: number;
  readonly CumulativeBytesMetered: number;
}

interface ResourceNotFoundException {
  readonly Message: string;
  readonly ScheduledQueryArn: string;
}

interface Row {
  readonly Data: [];
}

interface S3Configuration {
  readonly BucketName: string;
  readonly ObjectKeyPrefix: string;
  readonly EncryptionOption: string;
}

interface S3ReportLocation {
  readonly BucketName: string;
  readonly ObjectKey: string;
}

interface ScheduleConfiguration {
  readonly ScheduleExpression: string;
}

interface ScheduledQuery {
  readonly Arn: string;
  readonly Name: string;
  readonly CreationTime: Date;
  readonly State: string;
  readonly PreviousInvocationTime: Date;
  readonly NextInvocationTime: Date;
  readonly ErrorReportConfiguration: ErrorReportConfiguration;
  readonly TargetDestination: TargetDestination;
  readonly LastRunStatus: string;
}

interface ScheduledQueryDescription {
  readonly Arn: string;
  readonly Name: string;
  readonly QueryString: string;
  readonly CreationTime: Date;
  readonly State: string;
  readonly PreviousInvocationTime: Date;
  readonly NextInvocationTime: Date;
  readonly ScheduleConfiguration: ScheduleConfiguration;
  readonly NotificationConfiguration: NotificationConfiguration;
  readonly TargetConfiguration: TargetConfiguration;
  readonly ScheduledQueryExecutionRoleArn: string;
  readonly KmsKeyId: string;
  readonly ErrorReportConfiguration: ErrorReportConfiguration;
  readonly LastRunSummary: ScheduledQueryRunSummary;
  readonly RecentlyFailedRuns: [];
}

interface ScheduledQueryRunSummary {
  readonly InvocationTime: Date;
  readonly TriggerTime: Date;
  readonly RunStatus: string;
  readonly ExecutionStats: ExecutionStats;
  readonly ErrorReportLocation: ErrorReportLocation;
  readonly FailureReason: string;
}

interface SelectColumn {
  readonly Name: string;
  readonly Type: Type;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly Aliased: boolean;
}

interface ServiceQuotaExceededException {
  readonly Message: string;
}

interface SnsConfiguration {
  readonly TopicArn: string;
}

interface Tag {
  readonly Key: string;
  readonly Value: string;
}

interface TagResourceRequest {
  readonly ResourceARN: string;
  readonly Tags: [];
}

interface TagResourceResponse {
}

interface TargetConfiguration {
  readonly TimestreamConfiguration: TimestreamConfiguration;
}

interface TargetDestination {
  readonly TimestreamDestination: TimestreamDestination;
}

interface ThrottlingException {
  readonly Message: string;
}

interface TimeSeriesDataPoint {
  readonly Time: string;
  readonly Value: Datum;
}

interface TimestreamConfiguration {
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly TimeColumn: string;
  readonly DimensionMappings: [];
  readonly MultiMeasureMappings: MultiMeasureMappings;
  readonly MixedMeasureMappings: [];
  readonly MeasureNameColumn: string;
}

interface TimestreamDestination {
  readonly DatabaseName: string;
  readonly TableName: string;
}

interface Type {
  readonly ScalarType: string;
  readonly ArrayColumnInfo: ColumnInfo;
  readonly TimeSeriesMeasureValueColumnInfo: ColumnInfo;
  readonly RowColumnInfo: [];
}

interface UntagResourceRequest {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}

interface UntagResourceResponse {
}

interface UpdateScheduledQueryRequest {
  readonly ScheduledQueryArn: string;
  readonly State: string;
}

interface ValidationException {
  readonly Message: string;
}

