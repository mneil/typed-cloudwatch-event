/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AssociateFileSystemAliases {
  readonly ClientRequestToken?: string;
  readonly FileSystemId: string;
  readonly Aliases: [];
}

export interface CancelDataRepositoryTask {
  readonly TaskId: string;
}

export interface CopyBackup {
  readonly ClientRequestToken?: string;
  readonly SourceBackupId: string;
  readonly SourceRegion?: string;
  readonly KmsKeyId?: string;
  readonly CopyTags?: boolean;
  readonly Tags?: [];
}

export interface CreateBackup {
  readonly FileSystemId?: string;
  readonly ClientRequestToken?: string;
  readonly Tags?: [];
  readonly VolumeId?: string;
}

export interface CreateDataRepositoryAssociation {
  readonly FileSystemId: string;
  readonly FileSystemPath: string;
  readonly DataRepositoryPath: string;
  readonly BatchImportMetaDataOnCreate?: boolean;
  readonly ImportedFileChunkSize?: number;
  readonly S3?: S3DataRepositoryConfiguration;
  readonly ClientRequestToken?: string;
  readonly Tags?: [];
}

export interface CreateDataRepositoryTask {
  readonly Type: string;
  readonly Paths?: [];
  readonly FileSystemId: string;
  readonly Report: CompletionReport;
  readonly ClientRequestToken?: string;
  readonly Tags?: [];
}

export interface CreateFileSystem {
  readonly ClientRequestToken?: string;
  readonly FileSystemType: string;
  readonly StorageCapacity: number;
  readonly StorageType?: string;
  readonly SubnetIds: [];
  readonly SecurityGroupIds?: [];
  readonly Tags?: [];
  readonly KmsKeyId?: string;
  readonly WindowsConfiguration?: CreateFileSystemWindowsConfiguration;
  readonly LustreConfiguration?: CreateFileSystemLustreConfiguration;
  readonly OntapConfiguration?: CreateFileSystemOntapConfiguration;
  readonly FileSystemTypeVersion?: string;
  readonly OpenZFSConfiguration?: CreateFileSystemOpenZFSConfiguration;
}

export interface CreateFileSystemFromBackup {
  readonly BackupId: string;
  readonly ClientRequestToken?: string;
  readonly SubnetIds: [];
  readonly SecurityGroupIds?: [];
  readonly Tags?: [];
  readonly WindowsConfiguration?: CreateFileSystemWindowsConfiguration;
  readonly LustreConfiguration?: CreateFileSystemLustreConfiguration;
  readonly StorageType?: string;
  readonly KmsKeyId?: string;
  readonly FileSystemTypeVersion?: string;
  readonly OpenZFSConfiguration?: CreateFileSystemOpenZFSConfiguration;
}

export interface CreateSnapshot {
  readonly ClientRequestToken?: string;
  readonly Name: string;
  readonly VolumeId: string;
  readonly Tags?: [];
}

export interface CreateStorageVirtualMachine {
  readonly ActiveDirectoryConfiguration?: CreateSvmActiveDirectoryConfiguration;
  readonly ClientRequestToken?: string;
  readonly FileSystemId: string;
  readonly Name: string;
  readonly SvmAdminPassword?: string;
  readonly Tags?: [];
  readonly RootVolumeSecurityStyle?: string;
}

export interface CreateVolume {
  readonly ClientRequestToken?: string;
  readonly VolumeType: string;
  readonly Name: string;
  readonly OntapConfiguration?: CreateOntapVolumeConfiguration;
  readonly Tags?: [];
  readonly OpenZFSConfiguration?: CreateOpenZFSVolumeConfiguration;
}

export interface CreateVolumeFromBackup {
  readonly BackupId: string;
  readonly ClientRequestToken?: string;
  readonly Name: string;
  readonly OntapConfiguration?: CreateOntapVolumeConfiguration;
  readonly Tags?: [];
}

export interface DeleteBackup {
  readonly BackupId: string;
  readonly ClientRequestToken?: string;
}

export interface DeleteDataRepositoryAssociation {
  readonly AssociationId: string;
  readonly ClientRequestToken?: string;
  readonly DeleteDataInFileSystem: boolean;
}

export interface DeleteFileSystem {
  readonly FileSystemId: string;
  readonly ClientRequestToken?: string;
  readonly WindowsConfiguration?: DeleteFileSystemWindowsConfiguration;
  readonly LustreConfiguration?: DeleteFileSystemLustreConfiguration;
  readonly OpenZFSConfiguration?: DeleteFileSystemOpenZFSConfiguration;
}

export interface DeleteSnapshot {
  readonly ClientRequestToken?: string;
  readonly SnapshotId: string;
}

export interface DeleteStorageVirtualMachine {
  readonly ClientRequestToken?: string;
  readonly StorageVirtualMachineId: string;
}

export interface DeleteVolume {
  readonly ClientRequestToken?: string;
  readonly VolumeId: string;
  readonly OntapConfiguration?: DeleteVolumeOntapConfiguration;
  readonly OpenZFSConfiguration?: DeleteVolumeOpenZFSConfiguration;
}

export interface DescribeBackups {
  readonly BackupIds?: [];
  readonly Filters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface DescribeDataRepositoryAssociations {
  readonly AssociationIds?: [];
  readonly Filters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface DescribeDataRepositoryTasks {
  readonly TaskIds?: [];
  readonly Filters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface DescribeFileSystemAliases {
  readonly ClientRequestToken?: string;
  readonly FileSystemId: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface DescribeFileSystems {
  readonly FileSystemIds?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface DescribeSnapshots {
  readonly SnapshotIds?: [];
  readonly Filters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface DescribeStorageVirtualMachines {
  readonly StorageVirtualMachineIds?: [];
  readonly Filters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface DescribeVolumes {
  readonly VolumeIds?: [];
  readonly Filters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface DisassociateFileSystemAliases {
  readonly ClientRequestToken?: string;
  readonly FileSystemId: string;
  readonly Aliases: [];
}

export interface ListTagsForResource {
  readonly ResourceARN: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ReleaseFileSystemNfsV3Locks {
  readonly FileSystemId: string;
  readonly ClientRequestToken?: string;
}

export interface RestoreVolumeFromSnapshot {
  readonly ClientRequestToken?: string;
  readonly VolumeId: string;
  readonly SnapshotId: string;
  readonly Options?: [];
}

export interface TagResource {
  readonly ResourceARN: string;
  readonly Tags: [];
}

export interface UntagResource {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}

export interface UpdateDataRepositoryAssociation {
  readonly AssociationId: string;
  readonly ClientRequestToken?: string;
  readonly ImportedFileChunkSize?: number;
  readonly S3?: S3DataRepositoryConfiguration;
}

export interface UpdateFileSystem {
  readonly FileSystemId: string;
  readonly ClientRequestToken?: string;
  readonly StorageCapacity?: number;
  readonly WindowsConfiguration?: UpdateFileSystemWindowsConfiguration;
  readonly LustreConfiguration?: UpdateFileSystemLustreConfiguration;
  readonly OntapConfiguration?: UpdateFileSystemOntapConfiguration;
  readonly OpenZFSConfiguration?: UpdateFileSystemOpenZFSConfiguration;
}

export interface UpdateSnapshot {
  readonly ClientRequestToken?: string;
  readonly Name: string;
  readonly SnapshotId: string;
}

export interface UpdateStorageVirtualMachine {
  readonly ActiveDirectoryConfiguration?: UpdateSvmActiveDirectoryConfiguration;
  readonly ClientRequestToken?: string;
  readonly StorageVirtualMachineId: string;
  readonly SvmAdminPassword?: string;
}

export interface UpdateVolume {
  readonly ClientRequestToken?: string;
  readonly VolumeId: string;
  readonly OntapConfiguration?: UpdateOntapVolumeConfiguration;
  readonly Name?: string;
  readonly OpenZFSConfiguration?: UpdateOpenZFSVolumeConfiguration;
}

export interface ActiveDirectoryBackupAttributes {
  readonly DomainName?: string;
  readonly ActiveDirectoryId?: string;
  readonly ResourceARN?: string;
}

export interface ActiveDirectoryError {
  readonly ActiveDirectoryId: string;
  readonly Type?: string;
  readonly Message?: string;
}

export interface AdministrativeAction {
  readonly AdministrativeActionType?: string;
  readonly ProgressPercent?: number;
  readonly RequestTime?: Date;
  readonly Status?: string;
  readonly TargetFileSystemValues?: FileSystem;
  readonly FailureDetails?: AdministrativeActionFailureDetails;
  readonly TargetVolumeValues?: Volume;
  readonly TargetSnapshotValues?: Snapshot;
}

export interface AdministrativeActionFailureDetails {
  readonly Message?: string;
}

export interface Alias {
  readonly Name?: string;
  readonly Lifecycle?: string;
}

export interface AssociateFileSystemAliasesRequest {
  readonly ClientRequestToken?: string;
  readonly FileSystemId: string;
  readonly Aliases: [];
}

export interface AssociateFileSystemAliasesResponse {
  readonly Aliases?: [];
}

export interface AutoExportPolicy {
  readonly Events?: [];
}

export interface AutoImportPolicy {
  readonly Events?: [];
}

export interface Backup {
  readonly BackupId: string;
  readonly Lifecycle: string;
  readonly FailureDetails?: BackupFailureDetails;
  readonly Type: string;
  readonly ProgressPercent?: number;
  readonly CreationTime: Date;
  readonly KmsKeyId?: string;
  readonly ResourceARN?: string;
  readonly Tags?: [];
  readonly FileSystem: FileSystem;
  readonly DirectoryInformation?: ActiveDirectoryBackupAttributes;
  readonly OwnerId?: string;
  readonly SourceBackupId?: string;
  readonly SourceBackupRegion?: string;
  readonly ResourceType?: string;
  readonly Volume?: Volume;
}

export interface BackupBeingCopied {
  readonly Message?: string;
  readonly BackupId?: string;
}

export interface BackupFailureDetails {
  readonly Message?: string;
}

export interface BackupInProgress {
  readonly Message?: string;
}

export interface BackupNotFound {
  readonly Message?: string;
}

export interface BackupRestoring {
  readonly Message?: string;
  readonly FileSystemId?: string;
}

export interface BadRequest {
  readonly Message?: string;
}

export interface CancelDataRepositoryTaskRequest {
  readonly TaskId: string;
}

export interface CancelDataRepositoryTaskResponse {
  readonly Lifecycle?: string;
  readonly TaskId?: string;
}

export interface CompletionReport {
  readonly Enabled: boolean;
  readonly Path?: string;
  readonly Format?: string;
  readonly Scope?: string;
}

export interface CopyBackupRequest {
  readonly ClientRequestToken?: string;
  readonly SourceBackupId: string;
  readonly SourceRegion?: string;
  readonly KmsKeyId?: string;
  readonly CopyTags?: boolean;
  readonly Tags?: [];
}

export interface CopyBackupResponse {
  readonly Backup?: Backup;
}

export interface CreateBackupRequest {
  readonly FileSystemId?: string;
  readonly ClientRequestToken?: string;
  readonly Tags?: [];
  readonly VolumeId?: string;
}

export interface CreateBackupResponse {
  readonly Backup?: Backup;
}

export interface CreateDataRepositoryAssociationRequest {
  readonly FileSystemId: string;
  readonly FileSystemPath: string;
  readonly DataRepositoryPath: string;
  readonly BatchImportMetaDataOnCreate?: boolean;
  readonly ImportedFileChunkSize?: number;
  readonly S3?: S3DataRepositoryConfiguration;
  readonly ClientRequestToken?: string;
  readonly Tags?: [];
}

export interface CreateDataRepositoryAssociationResponse {
  readonly Association?: DataRepositoryAssociation;
}

export interface CreateDataRepositoryTaskRequest {
  readonly Type: string;
  readonly Paths?: [];
  readonly FileSystemId: string;
  readonly Report: CompletionReport;
  readonly ClientRequestToken?: string;
  readonly Tags?: [];
}

export interface CreateDataRepositoryTaskResponse {
  readonly DataRepositoryTask?: DataRepositoryTask;
}

export interface CreateFileSystemFromBackupRequest {
  readonly BackupId: string;
  readonly ClientRequestToken?: string;
  readonly SubnetIds: [];
  readonly SecurityGroupIds?: [];
  readonly Tags?: [];
  readonly WindowsConfiguration?: CreateFileSystemWindowsConfiguration;
  readonly LustreConfiguration?: CreateFileSystemLustreConfiguration;
  readonly StorageType?: string;
  readonly KmsKeyId?: string;
  readonly FileSystemTypeVersion?: string;
  readonly OpenZFSConfiguration?: CreateFileSystemOpenZFSConfiguration;
}

export interface CreateFileSystemFromBackupResponse {
  readonly FileSystem?: FileSystem;
}

export interface CreateFileSystemLustreConfiguration {
  readonly WeeklyMaintenanceStartTime?: string;
  readonly ImportPath?: string;
  readonly ExportPath?: string;
  readonly ImportedFileChunkSize?: number;
  readonly DeploymentType?: string;
  readonly AutoImportPolicy?: string;
  readonly PerUnitStorageThroughput?: number;
  readonly DailyAutomaticBackupStartTime?: string;
  readonly AutomaticBackupRetentionDays?: number;
  readonly CopyTagsToBackups?: boolean;
  readonly DriveCacheType?: string;
  readonly DataCompressionType?: string;
  readonly LogConfiguration?: LustreLogCreateConfiguration;
}

export interface CreateFileSystemOntapConfiguration {
  readonly AutomaticBackupRetentionDays?: number;
  readonly DailyAutomaticBackupStartTime?: string;
  readonly DeploymentType: string;
  readonly EndpointIpAddressRange?: string;
  readonly FsxAdminPassword?: string;
  readonly DiskIopsConfiguration?: DiskIopsConfiguration;
  readonly PreferredSubnetId?: string;
  readonly RouteTableIds?: [];
  readonly ThroughputCapacity: number;
  readonly WeeklyMaintenanceStartTime?: string;
}

export interface CreateFileSystemOpenZFSConfiguration {
  readonly AutomaticBackupRetentionDays?: number;
  readonly CopyTagsToBackups?: boolean;
  readonly CopyTagsToVolumes?: boolean;
  readonly DailyAutomaticBackupStartTime?: string;
  readonly DeploymentType: string;
  readonly ThroughputCapacity: number;
  readonly WeeklyMaintenanceStartTime?: string;
  readonly DiskIopsConfiguration?: DiskIopsConfiguration;
  readonly RootVolumeConfiguration?: OpenZFSCreateRootVolumeConfiguration;
}

export interface CreateFileSystemRequest {
  readonly ClientRequestToken?: string;
  readonly FileSystemType: string;
  readonly StorageCapacity: number;
  readonly StorageType?: string;
  readonly SubnetIds: [];
  readonly SecurityGroupIds?: [];
  readonly Tags?: [];
  readonly KmsKeyId?: string;
  readonly WindowsConfiguration?: CreateFileSystemWindowsConfiguration;
  readonly LustreConfiguration?: CreateFileSystemLustreConfiguration;
  readonly OntapConfiguration?: CreateFileSystemOntapConfiguration;
  readonly FileSystemTypeVersion?: string;
  readonly OpenZFSConfiguration?: CreateFileSystemOpenZFSConfiguration;
}

export interface CreateFileSystemResponse {
  readonly FileSystem?: FileSystem;
}

export interface CreateFileSystemWindowsConfiguration {
  readonly ActiveDirectoryId?: string;
  readonly SelfManagedActiveDirectoryConfiguration?: SelfManagedActiveDirectoryConfiguration;
  readonly DeploymentType?: string;
  readonly PreferredSubnetId?: string;
  readonly ThroughputCapacity: number;
  readonly WeeklyMaintenanceStartTime?: string;
  readonly DailyAutomaticBackupStartTime?: string;
  readonly AutomaticBackupRetentionDays?: number;
  readonly CopyTagsToBackups?: boolean;
  readonly Aliases?: [];
  readonly AuditLogConfiguration?: WindowsAuditLogCreateConfiguration;
}

export interface CreateOntapVolumeConfiguration {
  readonly JunctionPath: string;
  readonly SecurityStyle?: string;
  readonly SizeInMegabytes: number;
  readonly StorageEfficiencyEnabled: boolean;
  readonly StorageVirtualMachineId: string;
  readonly TieringPolicy?: TieringPolicy;
}

export interface CreateOpenZFSOriginSnapshotConfiguration {
  readonly SnapshotARN: string;
  readonly CopyStrategy: string;
}

export interface CreateOpenZFSVolumeConfiguration {
  readonly ParentVolumeId: string;
  readonly StorageCapacityReservationGiB?: number;
  readonly StorageCapacityQuotaGiB?: number;
  readonly DataCompressionType?: string;
  readonly CopyTagsToSnapshots?: boolean;
  readonly OriginSnapshot?: CreateOpenZFSOriginSnapshotConfiguration;
  readonly ReadOnly?: boolean;
  readonly NfsExports?: [];
  readonly UserAndGroupQuotas?: [];
}

export interface CreateSnapshotRequest {
  readonly ClientRequestToken?: string;
  readonly Name: string;
  readonly VolumeId: string;
  readonly Tags?: [];
}

export interface CreateSnapshotResponse {
  readonly Snapshot?: Snapshot;
}

export interface CreateStorageVirtualMachineRequest {
  readonly ActiveDirectoryConfiguration?: CreateSvmActiveDirectoryConfiguration;
  readonly ClientRequestToken?: string;
  readonly FileSystemId: string;
  readonly Name: string;
  readonly SvmAdminPassword?: string;
  readonly Tags?: [];
  readonly RootVolumeSecurityStyle?: string;
}

export interface CreateStorageVirtualMachineResponse {
  readonly StorageVirtualMachine?: StorageVirtualMachine;
}

export interface CreateSvmActiveDirectoryConfiguration {
  readonly NetBiosName: string;
  readonly SelfManagedActiveDirectoryConfiguration?: SelfManagedActiveDirectoryConfiguration;
}

export interface CreateVolumeFromBackupRequest {
  readonly BackupId: string;
  readonly ClientRequestToken?: string;
  readonly Name: string;
  readonly OntapConfiguration?: CreateOntapVolumeConfiguration;
  readonly Tags?: [];
}

export interface CreateVolumeFromBackupResponse {
  readonly Volume?: Volume;
}

export interface CreateVolumeRequest {
  readonly ClientRequestToken?: string;
  readonly VolumeType: string;
  readonly Name: string;
  readonly OntapConfiguration?: CreateOntapVolumeConfiguration;
  readonly Tags?: [];
  readonly OpenZFSConfiguration?: CreateOpenZFSVolumeConfiguration;
}

export interface CreateVolumeResponse {
  readonly Volume?: Volume;
}

export interface DataRepositoryAssociation {
  readonly AssociationId?: string;
  readonly ResourceARN?: string;
  readonly FileSystemId?: string;
  readonly Lifecycle?: string;
  readonly FailureDetails?: DataRepositoryFailureDetails;
  readonly FileSystemPath?: string;
  readonly DataRepositoryPath?: string;
  readonly BatchImportMetaDataOnCreate?: boolean;
  readonly ImportedFileChunkSize?: number;
  readonly S3?: S3DataRepositoryConfiguration;
  readonly Tags?: [];
  readonly CreationTime?: Date;
}

export interface DataRepositoryAssociationNotFound {
  readonly Message?: string;
}

export interface DataRepositoryConfiguration {
  readonly Lifecycle?: string;
  readonly ImportPath?: string;
  readonly ExportPath?: string;
  readonly ImportedFileChunkSize?: number;
  readonly AutoImportPolicy?: string;
  readonly FailureDetails?: DataRepositoryFailureDetails;
}

export interface DataRepositoryFailureDetails {
  readonly Message?: string;
}

export interface DataRepositoryTask {
  readonly TaskId: string;
  readonly Lifecycle: string;
  readonly Type: string;
  readonly CreationTime: Date;
  readonly StartTime?: Date;
  readonly EndTime?: Date;
  readonly ResourceARN?: string;
  readonly Tags?: [];
  readonly FileSystemId: string;
  readonly Paths?: [];
  readonly FailureDetails?: DataRepositoryTaskFailureDetails;
  readonly Status?: DataRepositoryTaskStatus;
  readonly Report?: CompletionReport;
}

export interface DataRepositoryTaskEnded {
  readonly Message?: string;
}

export interface DataRepositoryTaskExecuting {
  readonly Message?: string;
}

export interface DataRepositoryTaskFailureDetails {
  readonly Message?: string;
}

export interface DataRepositoryTaskFilter {
  readonly Name?: string;
  readonly Values?: [];
}

export interface DataRepositoryTaskNotFound {
  readonly Message?: string;
}

export interface DataRepositoryTaskStatus {
  readonly TotalCount?: number;
  readonly SucceededCount?: number;
  readonly FailedCount?: number;
  readonly LastUpdatedTime?: Date;
}

export interface DeleteBackupRequest {
  readonly BackupId: string;
  readonly ClientRequestToken?: string;
}

export interface DeleteBackupResponse {
  readonly BackupId?: string;
  readonly Lifecycle?: string;
}

export interface DeleteDataRepositoryAssociationRequest {
  readonly AssociationId: string;
  readonly ClientRequestToken?: string;
  readonly DeleteDataInFileSystem: boolean;
}

export interface DeleteDataRepositoryAssociationResponse {
  readonly AssociationId?: string;
  readonly Lifecycle?: string;
  readonly DeleteDataInFileSystem?: boolean;
}

export interface DeleteFileSystemLustreConfiguration {
  readonly SkipFinalBackup?: boolean;
  readonly FinalBackupTags?: [];
}

export interface DeleteFileSystemLustreResponse {
  readonly FinalBackupId?: string;
  readonly FinalBackupTags?: [];
}

export interface DeleteFileSystemOpenZFSConfiguration {
  readonly SkipFinalBackup?: boolean;
  readonly FinalBackupTags?: [];
}

export interface DeleteFileSystemOpenZFSResponse {
  readonly FinalBackupId?: string;
  readonly FinalBackupTags?: [];
}

export interface DeleteFileSystemRequest {
  readonly FileSystemId: string;
  readonly ClientRequestToken?: string;
  readonly WindowsConfiguration?: DeleteFileSystemWindowsConfiguration;
  readonly LustreConfiguration?: DeleteFileSystemLustreConfiguration;
  readonly OpenZFSConfiguration?: DeleteFileSystemOpenZFSConfiguration;
}

export interface DeleteFileSystemResponse {
  readonly FileSystemId?: string;
  readonly Lifecycle?: string;
  readonly WindowsResponse?: DeleteFileSystemWindowsResponse;
  readonly LustreResponse?: DeleteFileSystemLustreResponse;
  readonly OpenZFSResponse?: DeleteFileSystemOpenZFSResponse;
}

export interface DeleteFileSystemWindowsConfiguration {
  readonly SkipFinalBackup?: boolean;
  readonly FinalBackupTags?: [];
}

export interface DeleteFileSystemWindowsResponse {
  readonly FinalBackupId?: string;
  readonly FinalBackupTags?: [];
}

export interface DeleteSnapshotRequest {
  readonly ClientRequestToken?: string;
  readonly SnapshotId: string;
}

export interface DeleteSnapshotResponse {
  readonly SnapshotId?: string;
  readonly Lifecycle?: string;
}

export interface DeleteStorageVirtualMachineRequest {
  readonly ClientRequestToken?: string;
  readonly StorageVirtualMachineId: string;
}

export interface DeleteStorageVirtualMachineResponse {
  readonly StorageVirtualMachineId?: string;
  readonly Lifecycle?: string;
}

export interface DeleteVolumeOntapConfiguration {
  readonly SkipFinalBackup?: boolean;
  readonly FinalBackupTags?: [];
}

export interface DeleteVolumeOntapResponse {
  readonly FinalBackupId?: string;
  readonly FinalBackupTags?: [];
}

export interface DeleteVolumeOpenZFSConfiguration {
  readonly Options?: [];
}

export interface DeleteVolumeRequest {
  readonly ClientRequestToken?: string;
  readonly VolumeId: string;
  readonly OntapConfiguration?: DeleteVolumeOntapConfiguration;
  readonly OpenZFSConfiguration?: DeleteVolumeOpenZFSConfiguration;
}

export interface DeleteVolumeResponse {
  readonly VolumeId?: string;
  readonly Lifecycle?: string;
  readonly OntapResponse?: DeleteVolumeOntapResponse;
}

export interface DescribeBackupsRequest {
  readonly BackupIds?: [];
  readonly Filters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface DescribeBackupsResponse {
  readonly Backups?: [];
  readonly NextToken?: string;
}

export interface DescribeDataRepositoryAssociationsRequest {
  readonly AssociationIds?: [];
  readonly Filters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface DescribeDataRepositoryAssociationsResponse {
  readonly Associations?: [];
  readonly NextToken?: string;
}

export interface DescribeDataRepositoryTasksRequest {
  readonly TaskIds?: [];
  readonly Filters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface DescribeDataRepositoryTasksResponse {
  readonly DataRepositoryTasks?: [];
  readonly NextToken?: string;
}

export interface DescribeFileSystemAliasesRequest {
  readonly ClientRequestToken?: string;
  readonly FileSystemId: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface DescribeFileSystemAliasesResponse {
  readonly Aliases?: [];
  readonly NextToken?: string;
}

export interface DescribeFileSystemsRequest {
  readonly FileSystemIds?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface DescribeFileSystemsResponse {
  readonly FileSystems?: [];
  readonly NextToken?: string;
}

export interface DescribeSnapshotsRequest {
  readonly SnapshotIds?: [];
  readonly Filters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface DescribeSnapshotsResponse {
  readonly Snapshots?: [];
  readonly NextToken?: string;
}

export interface DescribeStorageVirtualMachinesRequest {
  readonly StorageVirtualMachineIds?: [];
  readonly Filters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface DescribeStorageVirtualMachinesResponse {
  readonly StorageVirtualMachines?: [];
  readonly NextToken?: string;
}

export interface DescribeVolumesRequest {
  readonly VolumeIds?: [];
  readonly Filters?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface DescribeVolumesResponse {
  readonly Volumes?: [];
  readonly NextToken?: string;
}

export interface DisassociateFileSystemAliasesRequest {
  readonly ClientRequestToken?: string;
  readonly FileSystemId: string;
  readonly Aliases: [];
}

export interface DisassociateFileSystemAliasesResponse {
  readonly Aliases?: [];
}

export interface DiskIopsConfiguration {
  readonly Mode?: string;
  readonly Iops?: number;
}

export interface FileSystem {
  readonly OwnerId?: string;
  readonly CreationTime?: Date;
  readonly FileSystemId?: string;
  readonly FileSystemType?: string;
  readonly Lifecycle?: string;
  readonly FailureDetails?: FileSystemFailureDetails;
  readonly StorageCapacity?: number;
  readonly StorageType?: string;
  readonly VpcId?: string;
  readonly SubnetIds?: [];
  readonly NetworkInterfaceIds?: [];
  readonly DNSName?: string;
  readonly KmsKeyId?: string;
  readonly ResourceARN?: string;
  readonly Tags?: [];
  readonly WindowsConfiguration?: WindowsFileSystemConfiguration;
  readonly LustreConfiguration?: LustreFileSystemConfiguration;
  readonly AdministrativeActions?: [];
  readonly OntapConfiguration?: OntapFileSystemConfiguration;
  readonly FileSystemTypeVersion?: string;
  readonly OpenZFSConfiguration?: OpenZFSFileSystemConfiguration;
}

export interface FileSystemEndpoint {
  readonly DNSName?: string;
  readonly IpAddresses?: [];
}

export interface FileSystemEndpoints {
  readonly Intercluster?: FileSystemEndpoint;
  readonly Management?: FileSystemEndpoint;
}

export interface FileSystemFailureDetails {
  readonly Message?: string;
}

export interface FileSystemNotFound {
  readonly Message?: string;
}

export interface Filter {
  readonly Name?: string;
  readonly Values?: [];
}

export interface IncompatibleParameterError {
  readonly Parameter: string;
  readonly Message?: string;
}

export interface IncompatibleRegionForMultiAZ {
  readonly Message?: string;
}

export interface InternalServerError {
  readonly Message?: string;
}

export interface InvalidDataRepositoryType {
  readonly Message?: string;
}

export interface InvalidDestinationKmsKey {
  readonly Message?: string;
}

export interface InvalidExportPath {
  readonly Message?: string;
}

export interface InvalidImportPath {
  readonly Message?: string;
}

export interface InvalidNetworkSettings {
  readonly Message?: string;
  readonly InvalidSubnetId?: string;
  readonly InvalidSecurityGroupId?: string;
  readonly InvalidRouteTableId?: string;
}

export interface InvalidPerUnitStorageThroughput {
  readonly Message?: string;
}

export interface InvalidRegion {
  readonly Message?: string;
}

export interface InvalidSourceKmsKey {
  readonly Message?: string;
}

export interface LifecycleTransitionReason {
  readonly Message?: string;
}

export interface ListTagsForResourceRequest {
  readonly ResourceARN: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListTagsForResourceResponse {
  readonly Tags?: [];
  readonly NextToken?: string;
}

export interface LustreFileSystemConfiguration {
  readonly WeeklyMaintenanceStartTime?: string;
  readonly DataRepositoryConfiguration?: DataRepositoryConfiguration;
  readonly DeploymentType?: string;
  readonly PerUnitStorageThroughput?: number;
  readonly MountName?: string;
  readonly DailyAutomaticBackupStartTime?: string;
  readonly AutomaticBackupRetentionDays?: number;
  readonly CopyTagsToBackups?: boolean;
  readonly DriveCacheType?: string;
  readonly DataCompressionType?: string;
  readonly LogConfiguration?: LustreLogConfiguration;
}

export interface LustreLogConfiguration {
  readonly Level: string;
  readonly Destination?: string;
}

export interface LustreLogCreateConfiguration {
  readonly Level: string;
  readonly Destination?: string;
}

export interface MissingFileSystemConfiguration {
  readonly Message?: string;
}

export interface MissingVolumeConfiguration {
  readonly Message?: string;
}

export interface NotServiceResourceError {
  readonly ResourceARN: string;
  readonly Message?: string;
}

export interface OntapFileSystemConfiguration {
  readonly AutomaticBackupRetentionDays?: number;
  readonly DailyAutomaticBackupStartTime?: string;
  readonly DeploymentType?: string;
  readonly EndpointIpAddressRange?: string;
  readonly Endpoints?: FileSystemEndpoints;
  readonly DiskIopsConfiguration?: DiskIopsConfiguration;
  readonly PreferredSubnetId?: string;
  readonly RouteTableIds?: [];
  readonly ThroughputCapacity?: number;
  readonly WeeklyMaintenanceStartTime?: string;
}

export interface OntapVolumeConfiguration {
  readonly FlexCacheEndpointType?: string;
  readonly JunctionPath?: string;
  readonly SecurityStyle?: string;
  readonly SizeInMegabytes?: number;
  readonly StorageEfficiencyEnabled?: boolean;
  readonly StorageVirtualMachineId?: string;
  readonly StorageVirtualMachineRoot?: boolean;
  readonly TieringPolicy?: TieringPolicy;
  readonly UUID?: string;
  readonly OntapVolumeType?: string;
}

export interface OpenZFSClientConfiguration {
  readonly Clients: string;
  readonly Options: [];
}

export interface OpenZFSCreateRootVolumeConfiguration {
  readonly DataCompressionType?: string;
  readonly NfsExports?: [];
  readonly UserAndGroupQuotas?: [];
  readonly CopyTagsToSnapshots?: boolean;
  readonly ReadOnly?: boolean;
}

export interface OpenZFSFileSystemConfiguration {
  readonly AutomaticBackupRetentionDays?: number;
  readonly CopyTagsToBackups?: boolean;
  readonly CopyTagsToVolumes?: boolean;
  readonly DailyAutomaticBackupStartTime?: string;
  readonly DeploymentType?: string;
  readonly ThroughputCapacity?: number;
  readonly WeeklyMaintenanceStartTime?: string;
  readonly DiskIopsConfiguration?: DiskIopsConfiguration;
  readonly RootVolumeId?: string;
}

export interface OpenZFSNfsExport {
  readonly ClientConfigurations: [];
}

export interface OpenZFSOriginSnapshotConfiguration {
  readonly SnapshotARN?: string;
  readonly CopyStrategy?: string;
}

export interface OpenZFSUserOrGroupQuota {
  readonly Type: string;
  readonly Id: number;
  readonly StorageCapacityQuotaGiB: number;
}

export interface OpenZFSVolumeConfiguration {
  readonly ParentVolumeId?: string;
  readonly VolumePath?: string;
  readonly StorageCapacityReservationGiB?: number;
  readonly StorageCapacityQuotaGiB?: number;
  readonly DataCompressionType?: string;
  readonly CopyTagsToSnapshots?: boolean;
  readonly OriginSnapshot?: OpenZFSOriginSnapshotConfiguration;
  readonly ReadOnly?: boolean;
  readonly NfsExports?: [];
  readonly UserAndGroupQuotas?: [];
}

export interface ReleaseFileSystemNfsV3LocksRequest {
  readonly FileSystemId: string;
  readonly ClientRequestToken?: string;
}

export interface ReleaseFileSystemNfsV3LocksResponse {
  readonly FileSystem?: FileSystem;
}

export interface ResourceDoesNotSupportTagging {
  readonly ResourceARN: string;
  readonly Message?: string;
}

export interface ResourceNotFound {
  readonly ResourceARN: string;
  readonly Message?: string;
}

export interface RestoreVolumeFromSnapshotRequest {
  readonly ClientRequestToken?: string;
  readonly VolumeId: string;
  readonly SnapshotId: string;
  readonly Options?: [];
}

export interface RestoreVolumeFromSnapshotResponse {
  readonly VolumeId?: string;
  readonly Lifecycle?: string;
}

export interface S3DataRepositoryConfiguration {
  readonly AutoImportPolicy?: AutoImportPolicy;
  readonly AutoExportPolicy?: AutoExportPolicy;
}

export interface SelfManagedActiveDirectoryAttributes {
  readonly DomainName?: string;
  readonly OrganizationalUnitDistinguishedName?: string;
  readonly FileSystemAdministratorsGroup?: string;
  readonly UserName?: string;
  readonly DnsIps?: [];
}

export interface SelfManagedActiveDirectoryConfiguration {
  readonly DomainName: string;
  readonly OrganizationalUnitDistinguishedName?: string;
  readonly FileSystemAdministratorsGroup?: string;
  readonly UserName: string;
  readonly Password: string;
  readonly DnsIps: [];
}

export interface SelfManagedActiveDirectoryConfigurationUpdates {
  readonly UserName?: string;
  readonly Password?: string;
  readonly DnsIps?: [];
}

export interface ServiceLimitExceeded {
  readonly Limit: string;
  readonly Message?: string;
}

export interface Snapshot {
  readonly ResourceARN?: string;
  readonly SnapshotId?: string;
  readonly Name?: string;
  readonly VolumeId?: string;
  readonly CreationTime?: Date;
  readonly Lifecycle?: string;
  readonly Tags?: [];
  readonly AdministrativeActions?: [];
}

export interface SnapshotFilter {
  readonly Name?: string;
  readonly Values?: [];
}

export interface SnapshotNotFound {
  readonly Message?: string;
}

export interface SourceBackupUnavailable {
  readonly Message?: string;
  readonly BackupId?: string;
}

export interface StorageVirtualMachine {
  readonly ActiveDirectoryConfiguration?: SvmActiveDirectoryConfiguration;
  readonly CreationTime?: Date;
  readonly Endpoints?: SvmEndpoints;
  readonly FileSystemId?: string;
  readonly Lifecycle?: string;
  readonly Name?: string;
  readonly ResourceARN?: string;
  readonly StorageVirtualMachineId?: string;
  readonly Subtype?: string;
  readonly UUID?: string;
  readonly Tags?: [];
  readonly LifecycleTransitionReason?: LifecycleTransitionReason;
  readonly RootVolumeSecurityStyle?: string;
}

export interface StorageVirtualMachineFilter {
  readonly Name?: string;
  readonly Values?: [];
}

export interface StorageVirtualMachineNotFound {
  readonly Message?: string;
}

export interface SvmActiveDirectoryConfiguration {
  readonly NetBiosName?: string;
  readonly SelfManagedActiveDirectoryConfiguration?: SelfManagedActiveDirectoryAttributes;
}

export interface SvmEndpoint {
  readonly DNSName?: string;
  readonly IpAddresses?: [];
}

export interface SvmEndpoints {
  readonly Iscsi?: SvmEndpoint;
  readonly Management?: SvmEndpoint;
  readonly Nfs?: SvmEndpoint;
  readonly Smb?: SvmEndpoint;
}

export interface Tag {
  readonly Key: string;
  readonly Value: string;
}

export interface TagResourceRequest {
  readonly ResourceARN: string;
  readonly Tags: [];
}

export interface TagResourceResponse {
}

export interface TieringPolicy {
  readonly CoolingPeriod?: number;
  readonly Name?: string;
}

export interface UnsupportedOperation {
  readonly Message?: string;
}

export interface UntagResourceRequest {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}

export interface UntagResourceResponse {
}

export interface UpdateDataRepositoryAssociationRequest {
  readonly AssociationId: string;
  readonly ClientRequestToken?: string;
  readonly ImportedFileChunkSize?: number;
  readonly S3?: S3DataRepositoryConfiguration;
}

export interface UpdateDataRepositoryAssociationResponse {
  readonly Association?: DataRepositoryAssociation;
}

export interface UpdateFileSystemLustreConfiguration {
  readonly WeeklyMaintenanceStartTime?: string;
  readonly DailyAutomaticBackupStartTime?: string;
  readonly AutomaticBackupRetentionDays?: number;
  readonly AutoImportPolicy?: string;
  readonly DataCompressionType?: string;
  readonly LogConfiguration?: LustreLogCreateConfiguration;
}

export interface UpdateFileSystemOntapConfiguration {
  readonly AutomaticBackupRetentionDays?: number;
  readonly DailyAutomaticBackupStartTime?: string;
  readonly FsxAdminPassword?: string;
  readonly WeeklyMaintenanceStartTime?: string;
}

export interface UpdateFileSystemOpenZFSConfiguration {
  readonly AutomaticBackupRetentionDays?: number;
  readonly CopyTagsToBackups?: boolean;
  readonly CopyTagsToVolumes?: boolean;
  readonly DailyAutomaticBackupStartTime?: string;
  readonly ThroughputCapacity?: number;
  readonly WeeklyMaintenanceStartTime?: string;
  readonly DiskIopsConfiguration?: DiskIopsConfiguration;
}

export interface UpdateFileSystemRequest {
  readonly FileSystemId: string;
  readonly ClientRequestToken?: string;
  readonly StorageCapacity?: number;
  readonly WindowsConfiguration?: UpdateFileSystemWindowsConfiguration;
  readonly LustreConfiguration?: UpdateFileSystemLustreConfiguration;
  readonly OntapConfiguration?: UpdateFileSystemOntapConfiguration;
  readonly OpenZFSConfiguration?: UpdateFileSystemOpenZFSConfiguration;
}

export interface UpdateFileSystemResponse {
  readonly FileSystem?: FileSystem;
}

export interface UpdateFileSystemWindowsConfiguration {
  readonly WeeklyMaintenanceStartTime?: string;
  readonly DailyAutomaticBackupStartTime?: string;
  readonly AutomaticBackupRetentionDays?: number;
  readonly ThroughputCapacity?: number;
  readonly SelfManagedActiveDirectoryConfiguration?: SelfManagedActiveDirectoryConfigurationUpdates;
  readonly AuditLogConfiguration?: WindowsAuditLogCreateConfiguration;
}

export interface UpdateOntapVolumeConfiguration {
  readonly JunctionPath?: string;
  readonly SecurityStyle?: string;
  readonly SizeInMegabytes?: number;
  readonly StorageEfficiencyEnabled?: boolean;
  readonly TieringPolicy?: TieringPolicy;
}

export interface UpdateOpenZFSVolumeConfiguration {
  readonly StorageCapacityReservationGiB?: number;
  readonly StorageCapacityQuotaGiB?: number;
  readonly DataCompressionType?: string;
  readonly NfsExports?: [];
  readonly UserAndGroupQuotas?: [];
  readonly ReadOnly?: boolean;
}

export interface UpdateSnapshotRequest {
  readonly ClientRequestToken?: string;
  readonly Name: string;
  readonly SnapshotId: string;
}

export interface UpdateSnapshotResponse {
  readonly Snapshot?: Snapshot;
}

export interface UpdateStorageVirtualMachineRequest {
  readonly ActiveDirectoryConfiguration?: UpdateSvmActiveDirectoryConfiguration;
  readonly ClientRequestToken?: string;
  readonly StorageVirtualMachineId: string;
  readonly SvmAdminPassword?: string;
}

export interface UpdateStorageVirtualMachineResponse {
  readonly StorageVirtualMachine?: StorageVirtualMachine;
}

export interface UpdateSvmActiveDirectoryConfiguration {
  readonly SelfManagedActiveDirectoryConfiguration?: SelfManagedActiveDirectoryConfigurationUpdates;
}

export interface UpdateVolumeRequest {
  readonly ClientRequestToken?: string;
  readonly VolumeId: string;
  readonly OntapConfiguration?: UpdateOntapVolumeConfiguration;
  readonly Name?: string;
  readonly OpenZFSConfiguration?: UpdateOpenZFSVolumeConfiguration;
}

export interface UpdateVolumeResponse {
  readonly Volume?: Volume;
}

export interface Volume {
  readonly CreationTime?: Date;
  readonly FileSystemId?: string;
  readonly Lifecycle?: string;
  readonly Name?: string;
  readonly OntapConfiguration?: OntapVolumeConfiguration;
  readonly ResourceARN?: string;
  readonly Tags?: [];
  readonly VolumeId?: string;
  readonly VolumeType?: string;
  readonly LifecycleTransitionReason?: LifecycleTransitionReason;
  readonly AdministrativeActions?: [];
  readonly OpenZFSConfiguration?: OpenZFSVolumeConfiguration;
}

export interface VolumeFilter {
  readonly Name?: string;
  readonly Values?: [];
}

export interface VolumeNotFound {
  readonly Message?: string;
}

export interface WindowsAuditLogConfiguration {
  readonly FileAccessAuditLogLevel: string;
  readonly FileShareAccessAuditLogLevel: string;
  readonly AuditLogDestination?: string;
}

export interface WindowsAuditLogCreateConfiguration {
  readonly FileAccessAuditLogLevel: string;
  readonly FileShareAccessAuditLogLevel: string;
  readonly AuditLogDestination?: string;
}

export interface WindowsFileSystemConfiguration {
  readonly ActiveDirectoryId?: string;
  readonly SelfManagedActiveDirectoryConfiguration?: SelfManagedActiveDirectoryAttributes;
  readonly DeploymentType?: string;
  readonly RemoteAdministrationEndpoint?: string;
  readonly PreferredSubnetId?: string;
  readonly PreferredFileServerIp?: string;
  readonly ThroughputCapacity?: number;
  readonly MaintenanceOperationsInProgress?: [];
  readonly WeeklyMaintenanceStartTime?: string;
  readonly DailyAutomaticBackupStartTime?: string;
  readonly AutomaticBackupRetentionDays?: number;
  readonly CopyTagsToBackups?: boolean;
  readonly Aliases?: [];
  readonly AuditLogConfiguration?: WindowsAuditLogConfiguration;
}


