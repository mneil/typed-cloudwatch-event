/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CreateEnvironmentEC2 {
  readonly name: string;
  readonly description?: string;
  readonly clientRequestToken?: string;
  readonly instanceType: string;
  readonly subnetId?: string;
  readonly imageId?: string;
  readonly automaticStopTimeMinutes?: number;
  readonly ownerArn?: string;
  readonly tags?: [];
  readonly connectionType?: string;
  readonly dryRun?: boolean;
}

export interface CreateEnvironmentMembership {
  readonly environmentId: string;
  readonly userArn: string;
  readonly permissions: string;
}

export interface DeleteEnvironment {
  readonly environmentId: string;
}

export interface DeleteEnvironmentMembership {
  readonly environmentId: string;
  readonly userArn: string;
}

export interface DescribeEnvironmentMemberships {
  readonly userArn?: string;
  readonly environmentId?: string;
  readonly permissions?: [];
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface DescribeEnvironmentStatus {
  readonly environmentId: string;
}

export interface DescribeEnvironments {
  readonly environmentIds: [];
}

export interface ListEnvironments {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListTagsForResource {
  readonly ResourceARN: string;
}

export interface TagResource {
  readonly ResourceARN: string;
  readonly Tags: [];
}

export interface UntagResource {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}

export interface UpdateEnvironment {
  readonly environmentId: string;
  readonly name?: string;
  readonly description?: string;
  readonly managedCredentialsAction?: string;
}

export interface UpdateEnvironmentMembership {
  readonly environmentId: string;
  readonly userArn: string;
  readonly permissions: string;
}

export interface BadRequestException {
}

export interface ConcurrentAccessException {
}

export interface ConflictException {
}

export interface CreateEnvironmentEC2Request {
  readonly name: string;
  readonly description?: string;
  readonly clientRequestToken?: string;
  readonly instanceType: string;
  readonly subnetId?: string;
  readonly imageId?: string;
  readonly automaticStopTimeMinutes?: number;
  readonly ownerArn?: string;
  readonly tags?: [];
  readonly connectionType?: string;
  readonly dryRun?: boolean;
}

export interface CreateEnvironmentEC2Result {
  readonly environmentId?: string;
}

export interface CreateEnvironmentMembershipRequest {
  readonly environmentId: string;
  readonly userArn: string;
  readonly permissions: string;
}

export interface CreateEnvironmentMembershipResult {
  readonly membership: EnvironmentMember;
}

export interface DeleteEnvironmentMembershipRequest {
  readonly environmentId: string;
  readonly userArn: string;
}

export interface DeleteEnvironmentMembershipResult {
}

export interface DeleteEnvironmentRequest {
  readonly environmentId: string;
}

export interface DeleteEnvironmentResult {
}

export interface DescribeEnvironmentMembershipsRequest {
  readonly userArn?: string;
  readonly environmentId?: string;
  readonly permissions?: [];
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface DescribeEnvironmentMembershipsResult {
  readonly memberships?: [];
  readonly nextToken?: string;
}

export interface DescribeEnvironmentStatusRequest {
  readonly environmentId: string;
}

export interface DescribeEnvironmentStatusResult {
  readonly status: string;
  readonly message: string;
}

export interface DescribeEnvironmentsRequest {
  readonly environmentIds: [];
}

export interface DescribeEnvironmentsResult {
  readonly environments?: [];
}

export interface Environment {
  readonly id?: string;
  readonly name?: string;
  readonly description?: string;
  readonly type: string;
  readonly connectionType?: string;
  readonly arn: string;
  readonly ownerArn: string;
  readonly lifecycle?: EnvironmentLifecycle;
  readonly managedCredentialsStatus?: string;
}

export interface EnvironmentLifecycle {
  readonly status?: string;
  readonly reason?: string;
  readonly failureResource?: string;
}

export interface EnvironmentMember {
  readonly permissions: string;
  readonly userId: string;
  readonly userArn: string;
  readonly environmentId: string;
  readonly lastAccess?: Date;
}

export interface ForbiddenException {
}

export interface InternalServerErrorException {
}

export interface LimitExceededException {
}

export interface ListEnvironmentsRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListEnvironmentsResult {
  readonly nextToken?: string;
  readonly environmentIds?: [];
}

export interface ListTagsForResourceRequest {
  readonly ResourceARN: string;
}

export interface ListTagsForResourceResponse {
  readonly Tags?: [];
}

export interface NotFoundException {
}

export interface Tag {
  readonly Key: string;
  readonly Value: string;
}

export interface TagResourceRequest {
  readonly ResourceARN: string;
  readonly Tags: [];
}

export interface TagResourceResponse {
}

export interface TooManyRequestsException {
}

export interface UntagResourceRequest {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}

export interface UntagResourceResponse {
}

export interface UpdateEnvironmentMembershipRequest {
  readonly environmentId: string;
  readonly userArn: string;
  readonly permissions: string;
}

export interface UpdateEnvironmentMembershipResult {
  readonly membership?: EnvironmentMember;
}

export interface UpdateEnvironmentRequest {
  readonly environmentId: string;
  readonly name?: string;
  readonly description?: string;
  readonly managedCredentialsAction?: string;
}

export interface UpdateEnvironmentResult {
}


