/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CreateAlertManagerDefinition {
  readonly clientToken?: string;
  readonly data: unknown;
  readonly workspaceId: string;
}

export interface CreateRuleGroupsNamespace {
  readonly clientToken?: string;
  readonly data: unknown;
  readonly name: string;
  readonly tags?: {[key: string]: any};
  readonly workspaceId: string;
}

export interface CreateWorkspace {
  readonly alias?: string;
  readonly clientToken?: string;
  readonly tags?: {[key: string]: any};
}

export interface DeleteAlertManagerDefinition {
  readonly clientToken?: string;
  readonly workspaceId: string;
}

export interface DeleteRuleGroupsNamespace {
  readonly clientToken?: string;
  readonly name: string;
  readonly workspaceId: string;
}

export interface DeleteWorkspace {
  readonly clientToken?: string;
  readonly workspaceId: string;
}

export interface DescribeAlertManagerDefinition {
  readonly workspaceId: string;
}

export interface DescribeRuleGroupsNamespace {
  readonly name: string;
  readonly workspaceId: string;
}

export interface DescribeWorkspace {
  readonly workspaceId: string;
}

export interface ListRuleGroupsNamespaces {
  readonly maxResults?: number;
  readonly name?: string;
  readonly nextToken?: string;
  readonly workspaceId: string;
}

export interface ListTagsForResource {
  readonly resourceArn: string;
}

export interface ListWorkspaces {
  readonly alias?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface PutAlertManagerDefinition {
  readonly clientToken?: string;
  readonly data: unknown;
  readonly workspaceId: string;
}

export interface PutRuleGroupsNamespace {
  readonly clientToken?: string;
  readonly data: unknown;
  readonly name: string;
  readonly workspaceId: string;
}

export interface TagResource {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

export interface UntagResource {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface UpdateWorkspaceAlias {
  readonly alias?: string;
  readonly clientToken?: string;
  readonly workspaceId: string;
}

export interface AccessDeniedException {
  readonly message: string;
}

export interface AlertManagerDefinitionDescription {
  readonly createdAt: Date;
  readonly data: unknown;
  readonly modifiedAt: Date;
  readonly status: AlertManagerDefinitionStatus;
}

export interface AlertManagerDefinitionStatus {
  readonly statusCode: string;
  readonly statusReason?: string;
}

export interface ConflictException {
  readonly message: string;
  readonly resourceId: string;
  readonly resourceType: string;
}

export interface CreateAlertManagerDefinitionRequest {
  readonly clientToken?: string;
  readonly data: unknown;
  readonly workspaceId: string;
}

export interface CreateAlertManagerDefinitionResponse {
  readonly status: AlertManagerDefinitionStatus;
}

export interface CreateRuleGroupsNamespaceRequest {
  readonly clientToken?: string;
  readonly data: unknown;
  readonly name: string;
  readonly tags?: {[key: string]: any};
  readonly workspaceId: string;
}

export interface CreateRuleGroupsNamespaceResponse {
  readonly arn: string;
  readonly name: string;
  readonly status: RuleGroupsNamespaceStatus;
  readonly tags?: {[key: string]: any};
}

export interface CreateWorkspaceRequest {
  readonly alias?: string;
  readonly clientToken?: string;
  readonly tags?: {[key: string]: any};
}

export interface CreateWorkspaceResponse {
  readonly arn: string;
  readonly status: WorkspaceStatus;
  readonly tags?: {[key: string]: any};
  readonly workspaceId: string;
}

export interface DeleteAlertManagerDefinitionRequest {
  readonly clientToken?: string;
  readonly workspaceId: string;
}

export interface DeleteRuleGroupsNamespaceRequest {
  readonly clientToken?: string;
  readonly name: string;
  readonly workspaceId: string;
}

export interface DeleteWorkspaceRequest {
  readonly clientToken?: string;
  readonly workspaceId: string;
}

export interface DescribeAlertManagerDefinitionRequest {
  readonly workspaceId: string;
}

export interface DescribeAlertManagerDefinitionResponse {
  readonly alertManagerDefinition: AlertManagerDefinitionDescription;
}

export interface DescribeRuleGroupsNamespaceRequest {
  readonly name: string;
  readonly workspaceId: string;
}

export interface DescribeRuleGroupsNamespaceResponse {
  readonly ruleGroupsNamespace: RuleGroupsNamespaceDescription;
}

export interface DescribeWorkspaceRequest {
  readonly workspaceId: string;
}

export interface DescribeWorkspaceResponse {
  readonly workspace: WorkspaceDescription;
}

export interface InternalServerException {
  readonly message: string;
  readonly retryAfterSeconds?: number;
}

export interface ListRuleGroupsNamespacesRequest {
  readonly maxResults?: number;
  readonly name?: string;
  readonly nextToken?: string;
  readonly workspaceId: string;
}

export interface ListRuleGroupsNamespacesResponse {
  readonly nextToken?: string;
  readonly ruleGroupsNamespaces: [];
}

export interface ListTagsForResourceRequest {
  readonly resourceArn: string;
}

export interface ListTagsForResourceResponse {
  readonly tags?: {[key: string]: any};
}

export interface ListWorkspacesRequest {
  readonly alias?: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListWorkspacesResponse {
  readonly nextToken?: string;
  readonly workspaces: [];
}

export interface PutAlertManagerDefinitionRequest {
  readonly clientToken?: string;
  readonly data: unknown;
  readonly workspaceId: string;
}

export interface PutAlertManagerDefinitionResponse {
  readonly status: AlertManagerDefinitionStatus;
}

export interface PutRuleGroupsNamespaceRequest {
  readonly clientToken?: string;
  readonly data: unknown;
  readonly name: string;
  readonly workspaceId: string;
}

export interface PutRuleGroupsNamespaceResponse {
  readonly arn: string;
  readonly name: string;
  readonly status: RuleGroupsNamespaceStatus;
  readonly tags?: {[key: string]: any};
}

export interface ResourceNotFoundException {
  readonly message: string;
  readonly resourceId: string;
  readonly resourceType: string;
}

export interface RuleGroupsNamespaceDescription {
  readonly arn: string;
  readonly createdAt: Date;
  readonly data: unknown;
  readonly modifiedAt: Date;
  readonly name: string;
  readonly status: RuleGroupsNamespaceStatus;
  readonly tags?: {[key: string]: any};
}

export interface RuleGroupsNamespaceStatus {
  readonly statusCode: string;
  readonly statusReason?: string;
}

export interface RuleGroupsNamespaceSummary {
  readonly arn: string;
  readonly createdAt: Date;
  readonly modifiedAt: Date;
  readonly name: string;
  readonly status: RuleGroupsNamespaceStatus;
  readonly tags?: {[key: string]: any};
}

export interface ServiceQuotaExceededException {
  readonly message: string;
  readonly quotaCode: string;
  readonly resourceId: string;
  readonly resourceType: string;
  readonly serviceCode: string;
}

export interface TagResourceRequest {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

export interface TagResourceResponse {
}

export interface ThrottlingException {
  readonly message: string;
  readonly quotaCode?: string;
  readonly retryAfterSeconds?: number;
  readonly serviceCode?: string;
}

export interface UntagResourceRequest {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface UntagResourceResponse {
}

export interface UpdateWorkspaceAliasRequest {
  readonly alias?: string;
  readonly clientToken?: string;
  readonly workspaceId: string;
}

export interface ValidationException {
  readonly fieldList?: [];
  readonly message: string;
  readonly reason: string;
}

export interface ValidationExceptionField {
  readonly message: string;
  readonly name: string;
}

export interface WorkspaceDescription {
  readonly alias?: string;
  readonly arn: string;
  readonly createdAt: Date;
  readonly prometheusEndpoint?: string;
  readonly status: WorkspaceStatus;
  readonly tags?: {[key: string]: any};
  readonly workspaceId: string;
}

export interface WorkspaceStatus {
  readonly statusCode: string;
}

export interface WorkspaceSummary {
  readonly alias?: string;
  readonly arn: string;
  readonly createdAt: Date;
  readonly status: WorkspaceStatus;
  readonly tags?: {[key: string]: any};
  readonly workspaceId: string;
}


