/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AssociateAssets {
  readonly assetId: string;
  readonly hierarchyId: string;
  readonly childAssetId: string;
  readonly clientToken?: string;
}

export interface AssociateTimeSeriesToAssetProperty {
  readonly alias: string;
  readonly assetId: string;
  readonly propertyId: string;
  readonly clientToken?: string;
}

export interface BatchAssociateProjectAssets {
  readonly projectId: string;
  readonly assetIds: [];
  readonly clientToken?: string;
}

export interface BatchDisassociateProjectAssets {
  readonly projectId: string;
  readonly assetIds: [];
  readonly clientToken?: string;
}

export interface BatchPutAssetPropertyValue {
  readonly entries: [];
}

export interface CreateAccessPolicy {
  readonly accessPolicyIdentity: Identity;
  readonly accessPolicyResource: Resource;
  readonly accessPolicyPermission: string;
  readonly clientToken?: string;
  readonly tags?: {[key: string]: any};
}

export interface CreateAsset {
  readonly assetName: string;
  readonly assetModelId: string;
  readonly clientToken?: string;
  readonly tags?: {[key: string]: any};
}

export interface CreateAssetModel {
  readonly assetModelName: string;
  readonly assetModelDescription?: string;
  readonly assetModelProperties?: [];
  readonly assetModelHierarchies?: [];
  readonly assetModelCompositeModels?: [];
  readonly clientToken?: string;
  readonly tags?: {[key: string]: any};
}

export interface CreateDashboard {
  readonly projectId: string;
  readonly dashboardName: string;
  readonly dashboardDescription?: string;
  readonly dashboardDefinition: string;
  readonly clientToken?: string;
  readonly tags?: {[key: string]: any};
}

export interface CreateGateway {
  readonly gatewayName: string;
  readonly gatewayPlatform: GatewayPlatform;
  readonly tags?: {[key: string]: any};
}

export interface CreatePortal {
  readonly portalName: string;
  readonly portalDescription?: string;
  readonly portalContactEmail: string;
  readonly clientToken?: string;
  readonly portalLogoImageFile?: ImageFile;
  readonly roleArn: string;
  readonly tags?: {[key: string]: any};
  readonly portalAuthMode?: string;
  readonly notificationSenderEmail?: string;
  readonly alarms?: Alarms;
}

export interface CreateProject {
  readonly portalId: string;
  readonly projectName: string;
  readonly projectDescription?: string;
  readonly clientToken?: string;
  readonly tags?: {[key: string]: any};
}

export interface DeleteAccessPolicy {
  readonly accessPolicyId: string;
  readonly clientToken?: string;
}

export interface DeleteAsset {
  readonly assetId: string;
  readonly clientToken?: string;
}

export interface DeleteAssetModel {
  readonly assetModelId: string;
  readonly clientToken?: string;
}

export interface DeleteDashboard {
  readonly dashboardId: string;
  readonly clientToken?: string;
}

export interface DeleteGateway {
  readonly gatewayId: string;
}

export interface DeletePortal {
  readonly portalId: string;
  readonly clientToken?: string;
}

export interface DeleteProject {
  readonly projectId: string;
  readonly clientToken?: string;
}

export interface DeleteTimeSeries {
  readonly alias?: string;
  readonly assetId?: string;
  readonly propertyId?: string;
  readonly clientToken?: string;
}

export interface DescribeAccessPolicy {
  readonly accessPolicyId: string;
}

export interface DescribeAsset {
  readonly assetId: string;
}

export interface DescribeAssetModel {
  readonly assetModelId: string;
}

export interface DescribeAssetProperty {
  readonly assetId: string;
  readonly propertyId: string;
}

export interface DescribeDashboard {
  readonly dashboardId: string;
}

export interface DescribeDefaultEncryptionConfiguration {
}

export interface DescribeGateway {
  readonly gatewayId: string;
}

export interface DescribeGatewayCapabilityConfiguration {
  readonly gatewayId: string;
  readonly capabilityNamespace: string;
}

export interface DescribeLoggingOptions {
}

export interface DescribePortal {
  readonly portalId: string;
}

export interface DescribeProject {
  readonly projectId: string;
}

export interface DescribeStorageConfiguration {
}

export interface DescribeTimeSeries {
  readonly alias?: string;
  readonly assetId?: string;
  readonly propertyId?: string;
}

export interface DisassociateAssets {
  readonly assetId: string;
  readonly hierarchyId: string;
  readonly childAssetId: string;
  readonly clientToken?: string;
}

export interface DisassociateTimeSeriesFromAssetProperty {
  readonly alias: string;
  readonly assetId: string;
  readonly propertyId: string;
  readonly clientToken?: string;
}

export interface GetAssetPropertyAggregates {
  readonly assetId?: string;
  readonly propertyId?: string;
  readonly propertyAlias?: string;
  readonly aggregateTypes: [];
  readonly resolution: string;
  readonly qualities?: [];
  readonly startDate: Date;
  readonly endDate: Date;
  readonly timeOrdering?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface GetAssetPropertyValue {
  readonly assetId?: string;
  readonly propertyId?: string;
  readonly propertyAlias?: string;
}

export interface GetAssetPropertyValueHistory {
  readonly assetId?: string;
  readonly propertyId?: string;
  readonly propertyAlias?: string;
  readonly startDate?: Date;
  readonly endDate?: Date;
  readonly qualities?: [];
  readonly timeOrdering?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface GetInterpolatedAssetPropertyValues {
  readonly assetId?: string;
  readonly propertyId?: string;
  readonly propertyAlias?: string;
  readonly startTimeInSeconds: number;
  readonly startTimeOffsetInNanos?: number;
  readonly endTimeInSeconds: number;
  readonly endTimeOffsetInNanos?: number;
  readonly quality: string;
  readonly intervalInSeconds: number;
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly type: string;
  readonly intervalWindowInSeconds?: number;
}

export interface ListAccessPolicies {
  readonly identityType?: string;
  readonly identityId?: string;
  readonly resourceType?: string;
  readonly resourceId?: string;
  readonly iamArn?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListAssetModels {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListAssetRelationships {
  readonly assetId: string;
  readonly traversalType: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListAssets {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly assetModelId?: string;
  readonly filter?: string;
}

export interface ListAssociatedAssets {
  readonly assetId: string;
  readonly hierarchyId?: string;
  readonly traversalDirection?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListDashboards {
  readonly projectId: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListGateways {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListPortals {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListProjectAssets {
  readonly projectId: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListProjects {
  readonly portalId: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListTagsForResource {
  readonly resourceArn: string;
}

export interface ListTimeSeries {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly assetId?: string;
  readonly aliasPrefix?: string;
  readonly timeSeriesType?: string;
}

export interface PutDefaultEncryptionConfiguration {
  readonly encryptionType: string;
  readonly kmsKeyId?: string;
}

export interface PutLoggingOptions {
  readonly loggingOptions: LoggingOptions;
}

export interface PutStorageConfiguration {
  readonly storageType: string;
  readonly multiLayerStorage?: MultiLayerStorage;
  readonly disassociatedDataStorage?: string;
  readonly retentionPeriod?: RetentionPeriod;
}

export interface TagResource {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

export interface UntagResource {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface UpdateAccessPolicy {
  readonly accessPolicyId: string;
  readonly accessPolicyIdentity: Identity;
  readonly accessPolicyResource: Resource;
  readonly accessPolicyPermission: string;
  readonly clientToken?: string;
}

export interface UpdateAsset {
  readonly assetId: string;
  readonly assetName: string;
  readonly clientToken?: string;
}

export interface UpdateAssetModel {
  readonly assetModelId: string;
  readonly assetModelName: string;
  readonly assetModelDescription?: string;
  readonly assetModelProperties?: [];
  readonly assetModelHierarchies?: [];
  readonly assetModelCompositeModels?: [];
  readonly clientToken?: string;
}

export interface UpdateAssetProperty {
  readonly assetId: string;
  readonly propertyId: string;
  readonly propertyAlias?: string;
  readonly propertyNotificationState?: string;
  readonly clientToken?: string;
}

export interface UpdateDashboard {
  readonly dashboardId: string;
  readonly dashboardName: string;
  readonly dashboardDescription?: string;
  readonly dashboardDefinition: string;
  readonly clientToken?: string;
}

export interface UpdateGateway {
  readonly gatewayId: string;
  readonly gatewayName: string;
}

export interface UpdateGatewayCapabilityConfiguration {
  readonly gatewayId: string;
  readonly capabilityNamespace: string;
  readonly capabilityConfiguration: string;
}

export interface UpdatePortal {
  readonly portalId: string;
  readonly portalName: string;
  readonly portalDescription?: string;
  readonly portalContactEmail: string;
  readonly portalLogoImage?: Image;
  readonly roleArn: string;
  readonly clientToken?: string;
  readonly notificationSenderEmail?: string;
  readonly alarms?: Alarms;
}

export interface UpdateProject {
  readonly projectId: string;
  readonly projectName: string;
  readonly projectDescription?: string;
  readonly clientToken?: string;
}

export interface AccessPolicySummary {
  readonly id: string;
  readonly identity: Identity;
  readonly resource: Resource;
  readonly permission: string;
  readonly creationDate?: Date;
  readonly lastUpdateDate?: Date;
}

export interface AggregatedValue {
  readonly timestamp: Date;
  readonly quality?: string;
  readonly value: Aggregates;
}

export interface Aggregates {
  readonly average?: unknown;
  readonly count?: unknown;
  readonly maximum?: unknown;
  readonly minimum?: unknown;
  readonly sum?: unknown;
  readonly standardDeviation?: unknown;
}

export interface Alarms {
  readonly alarmRoleArn: string;
  readonly notificationLambdaArn?: string;
}

export interface AssetCompositeModel {
  readonly name: string;
  readonly description?: string;
  readonly type: string;
  readonly properties: [];
}

export interface AssetErrorDetails {
  readonly assetId: string;
  readonly code: string;
  readonly message: string;
}

export interface AssetHierarchy {
  readonly id?: string;
  readonly name: string;
}

export interface AssetHierarchyInfo {
  readonly parentAssetId?: string;
  readonly childAssetId?: string;
}

export interface AssetModelCompositeModel {
  readonly name: string;
  readonly description?: string;
  readonly type: string;
  readonly properties?: [];
}

export interface AssetModelCompositeModelDefinition {
  readonly name: string;
  readonly description?: string;
  readonly type: string;
  readonly properties?: [];
}

export interface AssetModelHierarchy {
  readonly id?: string;
  readonly name: string;
  readonly childAssetModelId: string;
}

export interface AssetModelHierarchyDefinition {
  readonly name: string;
  readonly childAssetModelId: string;
}

export interface AssetModelProperty {
  readonly id?: string;
  readonly name: string;
  readonly dataType: string;
  readonly dataTypeSpec?: string;
  readonly unit?: string;
  readonly type: PropertyType;
}

export interface AssetModelPropertyDefinition {
  readonly name: string;
  readonly dataType: string;
  readonly dataTypeSpec?: string;
  readonly unit?: string;
  readonly type: PropertyType;
}

export interface AssetModelStatus {
  readonly state: string;
  readonly error?: ErrorDetails;
}

export interface AssetModelSummary {
  readonly id: string;
  readonly arn: string;
  readonly name: string;
  readonly description: string;
  readonly creationDate: Date;
  readonly lastUpdateDate: Date;
  readonly status: AssetModelStatus;
}

export interface AssetProperty {
  readonly id: string;
  readonly name: string;
  readonly alias?: string;
  readonly notification?: PropertyNotification;
  readonly dataType: string;
  readonly dataTypeSpec?: string;
  readonly unit?: string;
}

export interface AssetPropertyValue {
  readonly value: Variant;
  readonly timestamp: TimeInNanos;
  readonly quality?: string;
}

export interface AssetRelationshipSummary {
  readonly hierarchyInfo?: AssetHierarchyInfo;
  readonly relationshipType: string;
}

export interface AssetStatus {
  readonly state: string;
  readonly error?: ErrorDetails;
}

export interface AssetSummary {
  readonly id: string;
  readonly arn: string;
  readonly name: string;
  readonly assetModelId: string;
  readonly creationDate: Date;
  readonly lastUpdateDate: Date;
  readonly status: AssetStatus;
  readonly hierarchies: [];
}

export interface AssociateAssetsRequest {
  readonly assetId: string;
  readonly hierarchyId: string;
  readonly childAssetId: string;
  readonly clientToken?: string;
}

export interface AssociateTimeSeriesToAssetPropertyRequest {
  readonly alias: string;
  readonly assetId: string;
  readonly propertyId: string;
  readonly clientToken?: string;
}

export interface AssociatedAssetsSummary {
  readonly id: string;
  readonly arn: string;
  readonly name: string;
  readonly assetModelId: string;
  readonly creationDate: Date;
  readonly lastUpdateDate: Date;
  readonly status: AssetStatus;
  readonly hierarchies: [];
}

export interface Attribute {
  readonly defaultValue?: string;
}

export interface BatchAssociateProjectAssetsRequest {
  readonly projectId: string;
  readonly assetIds: [];
  readonly clientToken?: string;
}

export interface BatchAssociateProjectAssetsResponse {
  readonly errors?: [];
}

export interface BatchDisassociateProjectAssetsRequest {
  readonly projectId: string;
  readonly assetIds: [];
  readonly clientToken?: string;
}

export interface BatchDisassociateProjectAssetsResponse {
  readonly errors?: [];
}

export interface BatchPutAssetPropertyError {
  readonly errorCode: string;
  readonly errorMessage: string;
  readonly timestamps: [];
}

export interface BatchPutAssetPropertyErrorEntry {
  readonly entryId: string;
  readonly errors: [];
}

export interface BatchPutAssetPropertyValueRequest {
  readonly entries: [];
}

export interface BatchPutAssetPropertyValueResponse {
  readonly errorEntries: [];
}

export interface CompositeModelProperty {
  readonly name: string;
  readonly type: string;
  readonly assetProperty: Property;
}

export interface ConfigurationErrorDetails {
  readonly code: string;
  readonly message: string;
}

export interface ConfigurationStatus {
  readonly state: string;
  readonly error?: ConfigurationErrorDetails;
}

export interface ConflictingOperationException {
  readonly message: string;
  readonly resourceId: string;
  readonly resourceArn: string;
}

export interface CreateAccessPolicyRequest {
  readonly accessPolicyIdentity: Identity;
  readonly accessPolicyResource: Resource;
  readonly accessPolicyPermission: string;
  readonly clientToken?: string;
  readonly tags?: {[key: string]: any};
}

export interface CreateAccessPolicyResponse {
  readonly accessPolicyId: string;
  readonly accessPolicyArn: string;
}

export interface CreateAssetModelRequest {
  readonly assetModelName: string;
  readonly assetModelDescription?: string;
  readonly assetModelProperties?: [];
  readonly assetModelHierarchies?: [];
  readonly assetModelCompositeModels?: [];
  readonly clientToken?: string;
  readonly tags?: {[key: string]: any};
}

export interface CreateAssetModelResponse {
  readonly assetModelId: string;
  readonly assetModelArn: string;
  readonly assetModelStatus: AssetModelStatus;
}

export interface CreateAssetRequest {
  readonly assetName: string;
  readonly assetModelId: string;
  readonly clientToken?: string;
  readonly tags?: {[key: string]: any};
}

export interface CreateAssetResponse {
  readonly assetId: string;
  readonly assetArn: string;
  readonly assetStatus: AssetStatus;
}

export interface CreateDashboardRequest {
  readonly projectId: string;
  readonly dashboardName: string;
  readonly dashboardDescription?: string;
  readonly dashboardDefinition: string;
  readonly clientToken?: string;
  readonly tags?: {[key: string]: any};
}

export interface CreateDashboardResponse {
  readonly dashboardId: string;
  readonly dashboardArn: string;
}

export interface CreateGatewayRequest {
  readonly gatewayName: string;
  readonly gatewayPlatform: GatewayPlatform;
  readonly tags?: {[key: string]: any};
}

export interface CreateGatewayResponse {
  readonly gatewayId: string;
  readonly gatewayArn: string;
}

export interface CreatePortalRequest {
  readonly portalName: string;
  readonly portalDescription?: string;
  readonly portalContactEmail: string;
  readonly clientToken?: string;
  readonly portalLogoImageFile?: ImageFile;
  readonly roleArn: string;
  readonly tags?: {[key: string]: any};
  readonly portalAuthMode?: string;
  readonly notificationSenderEmail?: string;
  readonly alarms?: Alarms;
}

export interface CreatePortalResponse {
  readonly portalId: string;
  readonly portalArn: string;
  readonly portalStartUrl: string;
  readonly portalStatus: PortalStatus;
  readonly ssoApplicationId: string;
}

export interface CreateProjectRequest {
  readonly portalId: string;
  readonly projectName: string;
  readonly projectDescription?: string;
  readonly clientToken?: string;
  readonly tags?: {[key: string]: any};
}

export interface CreateProjectResponse {
  readonly projectId: string;
  readonly projectArn: string;
}

export interface CustomerManagedS3Storage {
  readonly s3ResourceArn: string;
  readonly roleArn: string;
}

export interface DashboardSummary {
  readonly id: string;
  readonly name: string;
  readonly description?: string;
  readonly creationDate?: Date;
  readonly lastUpdateDate?: Date;
}

export interface DeleteAccessPolicyRequest {
  readonly accessPolicyId: string;
  readonly clientToken?: string;
}

export interface DeleteAccessPolicyResponse {
}

export interface DeleteAssetModelRequest {
  readonly assetModelId: string;
  readonly clientToken?: string;
}

export interface DeleteAssetModelResponse {
  readonly assetModelStatus: AssetModelStatus;
}

export interface DeleteAssetRequest {
  readonly assetId: string;
  readonly clientToken?: string;
}

export interface DeleteAssetResponse {
  readonly assetStatus: AssetStatus;
}

export interface DeleteDashboardRequest {
  readonly dashboardId: string;
  readonly clientToken?: string;
}

export interface DeleteDashboardResponse {
}

export interface DeleteGatewayRequest {
  readonly gatewayId: string;
}

export interface DeletePortalRequest {
  readonly portalId: string;
  readonly clientToken?: string;
}

export interface DeletePortalResponse {
  readonly portalStatus: PortalStatus;
}

export interface DeleteProjectRequest {
  readonly projectId: string;
  readonly clientToken?: string;
}

export interface DeleteProjectResponse {
}

export interface DeleteTimeSeriesRequest {
  readonly alias?: string;
  readonly assetId?: string;
  readonly propertyId?: string;
  readonly clientToken?: string;
}

export interface DescribeAccessPolicyRequest {
  readonly accessPolicyId: string;
}

export interface DescribeAccessPolicyResponse {
  readonly accessPolicyId: string;
  readonly accessPolicyArn: string;
  readonly accessPolicyIdentity: Identity;
  readonly accessPolicyResource: Resource;
  readonly accessPolicyPermission: string;
  readonly accessPolicyCreationDate: Date;
  readonly accessPolicyLastUpdateDate: Date;
}

export interface DescribeAssetModelRequest {
  readonly assetModelId: string;
}

export interface DescribeAssetModelResponse {
  readonly assetModelId: string;
  readonly assetModelArn: string;
  readonly assetModelName: string;
  readonly assetModelDescription: string;
  readonly assetModelProperties: [];
  readonly assetModelHierarchies: [];
  readonly assetModelCompositeModels?: [];
  readonly assetModelCreationDate: Date;
  readonly assetModelLastUpdateDate: Date;
  readonly assetModelStatus: AssetModelStatus;
}

export interface DescribeAssetPropertyRequest {
  readonly assetId: string;
  readonly propertyId: string;
}

export interface DescribeAssetPropertyResponse {
  readonly assetId: string;
  readonly assetName: string;
  readonly assetModelId: string;
  readonly assetProperty?: Property;
  readonly compositeModel?: CompositeModelProperty;
}

export interface DescribeAssetRequest {
  readonly assetId: string;
}

export interface DescribeAssetResponse {
  readonly assetId: string;
  readonly assetArn: string;
  readonly assetName: string;
  readonly assetModelId: string;
  readonly assetProperties: [];
  readonly assetHierarchies: [];
  readonly assetCompositeModels?: [];
  readonly assetCreationDate: Date;
  readonly assetLastUpdateDate: Date;
  readonly assetStatus: AssetStatus;
}

export interface DescribeDashboardRequest {
  readonly dashboardId: string;
}

export interface DescribeDashboardResponse {
  readonly dashboardId: string;
  readonly dashboardArn: string;
  readonly dashboardName: string;
  readonly projectId: string;
  readonly dashboardDescription?: string;
  readonly dashboardDefinition: string;
  readonly dashboardCreationDate: Date;
  readonly dashboardLastUpdateDate: Date;
}

export interface DescribeDefaultEncryptionConfigurationRequest {
}

export interface DescribeDefaultEncryptionConfigurationResponse {
  readonly encryptionType: string;
  readonly kmsKeyArn?: string;
  readonly configurationStatus: ConfigurationStatus;
}

export interface DescribeGatewayCapabilityConfigurationRequest {
  readonly gatewayId: string;
  readonly capabilityNamespace: string;
}

export interface DescribeGatewayCapabilityConfigurationResponse {
  readonly gatewayId: string;
  readonly capabilityNamespace: string;
  readonly capabilityConfiguration: string;
  readonly capabilitySyncStatus: string;
}

export interface DescribeGatewayRequest {
  readonly gatewayId: string;
}

export interface DescribeGatewayResponse {
  readonly gatewayId: string;
  readonly gatewayName: string;
  readonly gatewayArn: string;
  readonly gatewayPlatform?: GatewayPlatform;
  readonly gatewayCapabilitySummaries: [];
  readonly creationDate: Date;
  readonly lastUpdateDate: Date;
}

export interface DescribeLoggingOptionsRequest {
}

export interface DescribeLoggingOptionsResponse {
  readonly loggingOptions: LoggingOptions;
}

export interface DescribePortalRequest {
  readonly portalId: string;
}

export interface DescribePortalResponse {
  readonly portalId: string;
  readonly portalArn: string;
  readonly portalName: string;
  readonly portalDescription?: string;
  readonly portalClientId: string;
  readonly portalStartUrl: string;
  readonly portalContactEmail: string;
  readonly portalStatus: PortalStatus;
  readonly portalCreationDate: Date;
  readonly portalLastUpdateDate: Date;
  readonly portalLogoImageLocation?: ImageLocation;
  readonly roleArn?: string;
  readonly portalAuthMode?: string;
  readonly notificationSenderEmail?: string;
  readonly alarms?: Alarms;
}

export interface DescribeProjectRequest {
  readonly projectId: string;
}

export interface DescribeProjectResponse {
  readonly projectId: string;
  readonly projectArn: string;
  readonly projectName: string;
  readonly portalId: string;
  readonly projectDescription?: string;
  readonly projectCreationDate: Date;
  readonly projectLastUpdateDate: Date;
}

export interface DescribeStorageConfigurationRequest {
}

export interface DescribeStorageConfigurationResponse {
  readonly storageType: string;
  readonly multiLayerStorage?: MultiLayerStorage;
  readonly disassociatedDataStorage?: string;
  readonly retentionPeriod?: RetentionPeriod;
  readonly configurationStatus: ConfigurationStatus;
  readonly lastUpdateDate?: Date;
}

export interface DescribeTimeSeriesRequest {
  readonly alias?: string;
  readonly assetId?: string;
  readonly propertyId?: string;
}

export interface DescribeTimeSeriesResponse {
  readonly assetId?: string;
  readonly propertyId?: string;
  readonly alias?: string;
  readonly timeSeriesId: string;
  readonly dataType: string;
  readonly dataTypeSpec?: string;
  readonly timeSeriesCreationDate: Date;
  readonly timeSeriesLastUpdateDate: Date;
}

export interface DetailedError {
  readonly code: string;
  readonly message: string;
}

export interface DisassociateAssetsRequest {
  readonly assetId: string;
  readonly hierarchyId: string;
  readonly childAssetId: string;
  readonly clientToken?: string;
}

export interface DisassociateTimeSeriesFromAssetPropertyRequest {
  readonly alias: string;
  readonly assetId: string;
  readonly propertyId: string;
  readonly clientToken?: string;
}

export interface ErrorDetails {
  readonly code: string;
  readonly message: string;
  readonly details?: [];
}

export interface ExpressionVariable {
  readonly name: string;
  readonly value: VariableValue;
}

export interface ForwardingConfig {
  readonly state: string;
}

export interface GatewayCapabilitySummary {
  readonly capabilityNamespace: string;
  readonly capabilitySyncStatus: string;
}

export interface GatewayPlatform {
  readonly greengrass?: Greengrass;
  readonly greengrassV2?: GreengrassV2;
}

export interface GatewaySummary {
  readonly gatewayId: string;
  readonly gatewayName: string;
  readonly gatewayPlatform?: GatewayPlatform;
  readonly gatewayCapabilitySummaries?: [];
  readonly creationDate: Date;
  readonly lastUpdateDate: Date;
}

export interface GetAssetPropertyAggregatesRequest {
  readonly assetId?: string;
  readonly propertyId?: string;
  readonly propertyAlias?: string;
  readonly aggregateTypes: [];
  readonly resolution: string;
  readonly qualities?: [];
  readonly startDate: Date;
  readonly endDate: Date;
  readonly timeOrdering?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface GetAssetPropertyAggregatesResponse {
  readonly aggregatedValues: [];
  readonly nextToken?: string;
}

export interface GetAssetPropertyValueHistoryRequest {
  readonly assetId?: string;
  readonly propertyId?: string;
  readonly propertyAlias?: string;
  readonly startDate?: Date;
  readonly endDate?: Date;
  readonly qualities?: [];
  readonly timeOrdering?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface GetAssetPropertyValueHistoryResponse {
  readonly assetPropertyValueHistory: [];
  readonly nextToken?: string;
}

export interface GetAssetPropertyValueRequest {
  readonly assetId?: string;
  readonly propertyId?: string;
  readonly propertyAlias?: string;
}

export interface GetAssetPropertyValueResponse {
  readonly propertyValue?: AssetPropertyValue;
}

export interface GetInterpolatedAssetPropertyValuesRequest {
  readonly assetId?: string;
  readonly propertyId?: string;
  readonly propertyAlias?: string;
  readonly startTimeInSeconds: number;
  readonly startTimeOffsetInNanos?: number;
  readonly endTimeInSeconds: number;
  readonly endTimeOffsetInNanos?: number;
  readonly quality: string;
  readonly intervalInSeconds: number;
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly type: string;
  readonly intervalWindowInSeconds?: number;
}

export interface GetInterpolatedAssetPropertyValuesResponse {
  readonly interpolatedAssetPropertyValues: [];
  readonly nextToken?: string;
}

export interface Greengrass {
  readonly groupArn: string;
}

export interface GreengrassV2 {
  readonly coreDeviceThingName: string;
}

export interface GroupIdentity {
  readonly id: string;
}

export interface IAMRoleIdentity {
  readonly arn: string;
}

export interface IAMUserIdentity {
  readonly arn: string;
}

export interface Identity {
  readonly user?: UserIdentity;
  readonly group?: GroupIdentity;
  readonly iamUser?: IAMUserIdentity;
  readonly iamRole?: IAMRoleIdentity;
}

export interface Image {
  readonly id?: string;
  readonly file?: ImageFile;
}

export interface ImageFile {
  readonly data: unknown;
  readonly type: string;
}

export interface ImageLocation {
  readonly id: string;
  readonly url: string;
}

export interface InternalFailureException {
  readonly message: string;
}

export interface InterpolatedAssetPropertyValue {
  readonly timestamp: TimeInNanos;
  readonly value: Variant;
}

export interface InvalidRequestException {
  readonly message: string;
}

export interface LimitExceededException {
  readonly message: string;
}

export interface ListAccessPoliciesRequest {
  readonly identityType?: string;
  readonly identityId?: string;
  readonly resourceType?: string;
  readonly resourceId?: string;
  readonly iamArn?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListAccessPoliciesResponse {
  readonly accessPolicySummaries: [];
  readonly nextToken?: string;
}

export interface ListAssetModelsRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListAssetModelsResponse {
  readonly assetModelSummaries: [];
  readonly nextToken?: string;
}

export interface ListAssetRelationshipsRequest {
  readonly assetId: string;
  readonly traversalType: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListAssetRelationshipsResponse {
  readonly assetRelationshipSummaries: [];
  readonly nextToken?: string;
}

export interface ListAssetsRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly assetModelId?: string;
  readonly filter?: string;
}

export interface ListAssetsResponse {
  readonly assetSummaries: [];
  readonly nextToken?: string;
}

export interface ListAssociatedAssetsRequest {
  readonly assetId: string;
  readonly hierarchyId?: string;
  readonly traversalDirection?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListAssociatedAssetsResponse {
  readonly assetSummaries: [];
  readonly nextToken?: string;
}

export interface ListDashboardsRequest {
  readonly projectId: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListDashboardsResponse {
  readonly dashboardSummaries: [];
  readonly nextToken?: string;
}

export interface ListGatewaysRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListGatewaysResponse {
  readonly gatewaySummaries: [];
  readonly nextToken?: string;
}

export interface ListPortalsRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListPortalsResponse {
  readonly portalSummaries?: [];
  readonly nextToken?: string;
}

export interface ListProjectAssetsRequest {
  readonly projectId: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListProjectAssetsResponse {
  readonly assetIds: [];
  readonly nextToken?: string;
}

export interface ListProjectsRequest {
  readonly portalId: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListProjectsResponse {
  readonly projectSummaries: [];
  readonly nextToken?: string;
}

export interface ListTagsForResourceRequest {
  readonly resourceArn: string;
}

export interface ListTagsForResourceResponse {
  readonly tags?: {[key: string]: any};
}

export interface ListTimeSeriesRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly assetId?: string;
  readonly aliasPrefix?: string;
  readonly timeSeriesType?: string;
}

export interface ListTimeSeriesResponse {
  readonly TimeSeriesSummaries: [];
  readonly nextToken?: string;
}

export interface LoggingOptions {
  readonly level: string;
}

export interface Measurement {
  readonly processingConfig?: MeasurementProcessingConfig;
}

export interface MeasurementProcessingConfig {
  readonly forwardingConfig: ForwardingConfig;
}

export interface Metric {
  readonly expression: string;
  readonly variables: [];
  readonly window: MetricWindow;
  readonly processingConfig?: MetricProcessingConfig;
}

export interface MetricProcessingConfig {
  readonly computeLocation: string;
}

export interface MetricWindow {
  readonly tumbling?: TumblingWindow;
}

export interface MonitorErrorDetails {
  readonly code?: string;
  readonly message?: string;
}

export interface MultiLayerStorage {
  readonly customerManagedS3Storage: CustomerManagedS3Storage;
}

export interface PortalResource {
  readonly id: string;
}

export interface PortalStatus {
  readonly state: string;
  readonly error?: MonitorErrorDetails;
}

export interface PortalSummary {
  readonly id: string;
  readonly name: string;
  readonly description?: string;
  readonly startUrl: string;
  readonly creationDate?: Date;
  readonly lastUpdateDate?: Date;
  readonly roleArn?: string;
  readonly status: PortalStatus;
}

export interface ProjectResource {
  readonly id: string;
}

export interface ProjectSummary {
  readonly id: string;
  readonly name: string;
  readonly description?: string;
  readonly creationDate?: Date;
  readonly lastUpdateDate?: Date;
}

export interface Property {
  readonly id: string;
  readonly name: string;
  readonly alias?: string;
  readonly notification?: PropertyNotification;
  readonly dataType: string;
  readonly unit?: string;
  readonly type?: PropertyType;
}

export interface PropertyNotification {
  readonly topic: string;
  readonly state: string;
}

export interface PropertyType {
  readonly attribute?: Attribute;
  readonly measurement?: Measurement;
  readonly transform?: Transform;
  readonly metric?: Metric;
}

export interface PutAssetPropertyValueEntry {
  readonly entryId: string;
  readonly assetId?: string;
  readonly propertyId?: string;
  readonly propertyAlias?: string;
  readonly propertyValues: [];
}

export interface PutDefaultEncryptionConfigurationRequest {
  readonly encryptionType: string;
  readonly kmsKeyId?: string;
}

export interface PutDefaultEncryptionConfigurationResponse {
  readonly encryptionType: string;
  readonly kmsKeyArn?: string;
  readonly configurationStatus: ConfigurationStatus;
}

export interface PutLoggingOptionsRequest {
  readonly loggingOptions: LoggingOptions;
}

export interface PutLoggingOptionsResponse {
}

export interface PutStorageConfigurationRequest {
  readonly storageType: string;
  readonly multiLayerStorage?: MultiLayerStorage;
  readonly disassociatedDataStorage?: string;
  readonly retentionPeriod?: RetentionPeriod;
}

export interface PutStorageConfigurationResponse {
  readonly storageType: string;
  readonly multiLayerStorage?: MultiLayerStorage;
  readonly disassociatedDataStorage?: string;
  readonly retentionPeriod?: RetentionPeriod;
  readonly configurationStatus: ConfigurationStatus;
}

export interface Resource {
  readonly portal?: PortalResource;
  readonly project?: ProjectResource;
}

export interface ResourceAlreadyExistsException {
  readonly message: string;
  readonly resourceId: string;
  readonly resourceArn: string;
}

export interface ResourceNotFoundException {
  readonly message: string;
}

export interface RetentionPeriod {
  readonly numberOfDays?: number;
  readonly unlimited?: boolean;
}

export interface ServiceUnavailableException {
  readonly message: string;
}

export interface TagResourceRequest {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

export interface TagResourceResponse {
}

export interface ThrottlingException {
  readonly message: string;
}

export interface TimeInNanos {
  readonly timeInSeconds: number;
  readonly offsetInNanos?: number;
}

export interface TimeSeriesSummary {
  readonly assetId?: string;
  readonly propertyId?: string;
  readonly alias?: string;
  readonly timeSeriesId: string;
  readonly dataType: string;
  readonly dataTypeSpec?: string;
  readonly timeSeriesCreationDate: Date;
  readonly timeSeriesLastUpdateDate: Date;
}

export interface TooManyTagsException {
  readonly message?: string;
  readonly resourceName?: string;
}

export interface Transform {
  readonly expression: string;
  readonly variables: [];
  readonly processingConfig?: TransformProcessingConfig;
}

export interface TransformProcessingConfig {
  readonly computeLocation: string;
  readonly forwardingConfig?: ForwardingConfig;
}

export interface TumblingWindow {
  readonly interval: string;
  readonly offset?: string;
}

export interface UnauthorizedException {
  readonly message: string;
}

export interface UntagResourceRequest {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface UntagResourceResponse {
}

export interface UpdateAccessPolicyRequest {
  readonly accessPolicyId: string;
  readonly accessPolicyIdentity: Identity;
  readonly accessPolicyResource: Resource;
  readonly accessPolicyPermission: string;
  readonly clientToken?: string;
}

export interface UpdateAccessPolicyResponse {
}

export interface UpdateAssetModelRequest {
  readonly assetModelId: string;
  readonly assetModelName: string;
  readonly assetModelDescription?: string;
  readonly assetModelProperties?: [];
  readonly assetModelHierarchies?: [];
  readonly assetModelCompositeModels?: [];
  readonly clientToken?: string;
}

export interface UpdateAssetModelResponse {
  readonly assetModelStatus: AssetModelStatus;
}

export interface UpdateAssetPropertyRequest {
  readonly assetId: string;
  readonly propertyId: string;
  readonly propertyAlias?: string;
  readonly propertyNotificationState?: string;
  readonly clientToken?: string;
}

export interface UpdateAssetRequest {
  readonly assetId: string;
  readonly assetName: string;
  readonly clientToken?: string;
}

export interface UpdateAssetResponse {
  readonly assetStatus: AssetStatus;
}

export interface UpdateDashboardRequest {
  readonly dashboardId: string;
  readonly dashboardName: string;
  readonly dashboardDescription?: string;
  readonly dashboardDefinition: string;
  readonly clientToken?: string;
}

export interface UpdateDashboardResponse {
}

export interface UpdateGatewayCapabilityConfigurationRequest {
  readonly gatewayId: string;
  readonly capabilityNamespace: string;
  readonly capabilityConfiguration: string;
}

export interface UpdateGatewayCapabilityConfigurationResponse {
  readonly capabilityNamespace: string;
  readonly capabilitySyncStatus: string;
}

export interface UpdateGatewayRequest {
  readonly gatewayId: string;
  readonly gatewayName: string;
}

export interface UpdatePortalRequest {
  readonly portalId: string;
  readonly portalName: string;
  readonly portalDescription?: string;
  readonly portalContactEmail: string;
  readonly portalLogoImage?: Image;
  readonly roleArn: string;
  readonly clientToken?: string;
  readonly notificationSenderEmail?: string;
  readonly alarms?: Alarms;
}

export interface UpdatePortalResponse {
  readonly portalStatus: PortalStatus;
}

export interface UpdateProjectRequest {
  readonly projectId: string;
  readonly projectName: string;
  readonly projectDescription?: string;
  readonly clientToken?: string;
}

export interface UpdateProjectResponse {
}

export interface UserIdentity {
  readonly id: string;
}

export interface VariableValue {
  readonly propertyId: string;
  readonly hierarchyId?: string;
}

export interface Variant {
  readonly stringValue?: string;
  readonly integerValue?: number;
  readonly doubleValue?: unknown;
  readonly booleanValue?: boolean;
}


