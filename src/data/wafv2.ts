/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AssociateWebACL {
  readonly WebACLArn: string;
  readonly ResourceArn: string;
}

export interface CheckCapacity {
  readonly Scope: string;
  readonly Rules: [];
}

export interface CreateIPSet {
  readonly Name: string;
  readonly Scope: string;
  readonly Description?: string;
  readonly IPAddressVersion: string;
  readonly Addresses: [];
  readonly Tags?: [];
}

export interface CreateRegexPatternSet {
  readonly Name: string;
  readonly Scope: string;
  readonly Description?: string;
  readonly RegularExpressionList: [];
  readonly Tags?: [];
}

export interface CreateRuleGroup {
  readonly Name: string;
  readonly Scope: string;
  readonly Capacity: number;
  readonly Description?: string;
  readonly Rules?: [];
  readonly VisibilityConfig: VisibilityConfig;
  readonly Tags?: [];
  readonly CustomResponseBodies?: {[key: string]: any};
}

export interface CreateWebACL {
  readonly Name: string;
  readonly Scope: string;
  readonly DefaultAction: DefaultAction;
  readonly Description?: string;
  readonly Rules?: [];
  readonly VisibilityConfig: VisibilityConfig;
  readonly Tags?: [];
  readonly CustomResponseBodies?: {[key: string]: any};
  readonly CaptchaConfig?: CaptchaConfig;
}

export interface DeleteFirewallManagerRuleGroups {
  readonly WebACLArn: string;
  readonly WebACLLockToken: string;
}

export interface DeleteIPSet {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly LockToken: string;
}

export interface DeleteLoggingConfiguration {
  readonly ResourceArn: string;
}

export interface DeletePermissionPolicy {
  readonly ResourceArn: string;
}

export interface DeleteRegexPatternSet {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly LockToken: string;
}

export interface DeleteRuleGroup {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly LockToken: string;
}

export interface DeleteWebACL {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly LockToken: string;
}

export interface DescribeManagedRuleGroup {
  readonly VendorName: string;
  readonly Name: string;
  readonly Scope: string;
  readonly VersionName?: string;
}

export interface DisassociateWebACL {
  readonly ResourceArn: string;
}

export interface GetIPSet {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
}

export interface GetLoggingConfiguration {
  readonly ResourceArn: string;
}

export interface GetManagedRuleSet {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
}

export interface GetPermissionPolicy {
  readonly ResourceArn: string;
}

export interface GetRateBasedStatementManagedKeys {
  readonly Scope: string;
  readonly WebACLName: string;
  readonly WebACLId: string;
  readonly RuleGroupRuleName?: string;
  readonly RuleName: string;
}

export interface GetRegexPatternSet {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
}

export interface GetRuleGroup {
  readonly Name?: string;
  readonly Scope?: string;
  readonly Id?: string;
  readonly ARN?: string;
}

export interface GetSampledRequests {
  readonly WebAclArn: string;
  readonly RuleMetricName: string;
  readonly Scope: string;
  readonly TimeWindow: TimeWindow;
  readonly MaxItems: number;
}

export interface GetWebACL {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
}

export interface GetWebACLForResource {
  readonly ResourceArn: string;
}

export interface ListAvailableManagedRuleGroupVersions {
  readonly VendorName: string;
  readonly Name: string;
  readonly Scope: string;
  readonly NextMarker?: string;
  readonly Limit?: number;
}

export interface ListAvailableManagedRuleGroups {
  readonly Scope: string;
  readonly NextMarker?: string;
  readonly Limit?: number;
}

export interface ListIPSets {
  readonly Scope: string;
  readonly NextMarker?: string;
  readonly Limit?: number;
}

export interface ListLoggingConfigurations {
  readonly Scope: string;
  readonly NextMarker?: string;
  readonly Limit?: number;
}

export interface ListManagedRuleSets {
  readonly Scope: string;
  readonly NextMarker?: string;
  readonly Limit?: number;
}

export interface ListRegexPatternSets {
  readonly Scope: string;
  readonly NextMarker?: string;
  readonly Limit?: number;
}

export interface ListResourcesForWebACL {
  readonly WebACLArn: string;
  readonly ResourceType?: string;
}

export interface ListRuleGroups {
  readonly Scope: string;
  readonly NextMarker?: string;
  readonly Limit?: number;
}

export interface ListTagsForResource {
  readonly NextMarker?: string;
  readonly Limit?: number;
  readonly ResourceARN: string;
}

export interface ListWebACLs {
  readonly Scope: string;
  readonly NextMarker?: string;
  readonly Limit?: number;
}

export interface PutLoggingConfiguration {
  readonly LoggingConfiguration: LoggingConfiguration;
}

export interface PutManagedRuleSetVersions {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly LockToken: string;
  readonly RecommendedVersion?: string;
  readonly VersionsToPublish?: {[key: string]: any};
}

export interface PutPermissionPolicy {
  readonly ResourceArn: string;
  readonly Policy: string;
}

export interface TagResource {
  readonly ResourceARN: string;
  readonly Tags: [];
}

export interface UntagResource {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}

export interface UpdateIPSet {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly Description?: string;
  readonly Addresses: [];
  readonly LockToken: string;
}

export interface UpdateManagedRuleSetVersionExpiryDate {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly LockToken: string;
  readonly VersionToExpire: string;
  readonly ExpiryTimestamp: Date;
}

export interface UpdateRegexPatternSet {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly Description?: string;
  readonly RegularExpressionList: [];
  readonly LockToken: string;
}

export interface UpdateRuleGroup {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly Description?: string;
  readonly Rules?: [];
  readonly VisibilityConfig: VisibilityConfig;
  readonly LockToken: string;
  readonly CustomResponseBodies?: {[key: string]: any};
}

export interface UpdateWebACL {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly DefaultAction: DefaultAction;
  readonly Description?: string;
  readonly Rules?: [];
  readonly VisibilityConfig: VisibilityConfig;
  readonly LockToken: string;
  readonly CustomResponseBodies?: {[key: string]: any};
  readonly CaptchaConfig?: CaptchaConfig;
}

export interface ActionCondition {
  readonly Action: string;
}

export interface All {
}

export interface AllQueryArguments {
}

export interface AllowAction {
  readonly CustomRequestHandling?: CustomRequestHandling;
}

export interface AndStatement {
  readonly Statements: [];
}

export interface AssociateWebACLRequest {
  readonly WebACLArn: string;
  readonly ResourceArn: string;
}

export interface AssociateWebACLResponse {
}

export interface BlockAction {
  readonly CustomResponse?: CustomResponse;
}

export interface Body {
}

export interface ByteMatchStatement {
  readonly SearchString: unknown;
  readonly FieldToMatch: FieldToMatch;
  readonly TextTransformations: [];
  readonly PositionalConstraint: string;
}

export interface CaptchaAction {
  readonly CustomRequestHandling?: CustomRequestHandling;
}

export interface CaptchaConfig {
  readonly ImmunityTimeProperty?: ImmunityTimeProperty;
}

export interface CaptchaResponse {
  readonly ResponseCode?: number;
  readonly SolveTimestamp?: number;
  readonly FailureReason?: string;
}

export interface CheckCapacityRequest {
  readonly Scope: string;
  readonly Rules: [];
}

export interface CheckCapacityResponse {
  readonly Capacity?: number;
}

export interface Condition {
  readonly ActionCondition?: ActionCondition;
  readonly LabelNameCondition?: LabelNameCondition;
}

export interface CountAction {
  readonly CustomRequestHandling?: CustomRequestHandling;
}

export interface CreateIPSetRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Description?: string;
  readonly IPAddressVersion: string;
  readonly Addresses: [];
  readonly Tags?: [];
}

export interface CreateIPSetResponse {
  readonly Summary?: IPSetSummary;
}

export interface CreateRegexPatternSetRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Description?: string;
  readonly RegularExpressionList: [];
  readonly Tags?: [];
}

export interface CreateRegexPatternSetResponse {
  readonly Summary?: RegexPatternSetSummary;
}

export interface CreateRuleGroupRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Capacity: number;
  readonly Description?: string;
  readonly Rules?: [];
  readonly VisibilityConfig: VisibilityConfig;
  readonly Tags?: [];
  readonly CustomResponseBodies?: {[key: string]: any};
}

export interface CreateRuleGroupResponse {
  readonly Summary?: RuleGroupSummary;
}

export interface CreateWebACLRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly DefaultAction: DefaultAction;
  readonly Description?: string;
  readonly Rules?: [];
  readonly VisibilityConfig: VisibilityConfig;
  readonly Tags?: [];
  readonly CustomResponseBodies?: {[key: string]: any};
  readonly CaptchaConfig?: CaptchaConfig;
}

export interface CreateWebACLResponse {
  readonly Summary?: WebACLSummary;
}

export interface CustomHTTPHeader {
  readonly Name: string;
  readonly Value: string;
}

export interface CustomRequestHandling {
  readonly InsertHeaders: [];
}

export interface CustomResponse {
  readonly ResponseCode: number;
  readonly CustomResponseBodyKey?: string;
  readonly ResponseHeaders?: [];
}

export interface CustomResponseBody {
  readonly ContentType: string;
  readonly Content: string;
}

export interface DefaultAction {
  readonly Block?: BlockAction;
  readonly Allow?: AllowAction;
}

export interface DeleteFirewallManagerRuleGroupsRequest {
  readonly WebACLArn: string;
  readonly WebACLLockToken: string;
}

export interface DeleteFirewallManagerRuleGroupsResponse {
  readonly NextWebACLLockToken?: string;
}

export interface DeleteIPSetRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly LockToken: string;
}

export interface DeleteIPSetResponse {
}

export interface DeleteLoggingConfigurationRequest {
  readonly ResourceArn: string;
}

export interface DeleteLoggingConfigurationResponse {
}

export interface DeletePermissionPolicyRequest {
  readonly ResourceArn: string;
}

export interface DeletePermissionPolicyResponse {
}

export interface DeleteRegexPatternSetRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly LockToken: string;
}

export interface DeleteRegexPatternSetResponse {
}

export interface DeleteRuleGroupRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly LockToken: string;
}

export interface DeleteRuleGroupResponse {
}

export interface DeleteWebACLRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly LockToken: string;
}

export interface DeleteWebACLResponse {
}

export interface DescribeManagedRuleGroupRequest {
  readonly VendorName: string;
  readonly Name: string;
  readonly Scope: string;
  readonly VersionName?: string;
}

export interface DescribeManagedRuleGroupResponse {
  readonly VersionName?: string;
  readonly SnsTopicArn?: string;
  readonly Capacity?: number;
  readonly Rules?: [];
  readonly LabelNamespace?: string;
  readonly AvailableLabels?: [];
  readonly ConsumedLabels?: [];
}

export interface DisassociateWebACLRequest {
  readonly ResourceArn: string;
}

export interface DisassociateWebACLResponse {
}

export interface ExcludedRule {
  readonly Name: string;
}

export interface FieldToMatch {
  readonly SingleHeader?: SingleHeader;
  readonly SingleQueryArgument?: SingleQueryArgument;
  readonly AllQueryArguments?: AllQueryArguments;
  readonly UriPath?: UriPath;
  readonly QueryString?: QueryString;
  readonly Body?: Body;
  readonly Method?: Method;
  readonly JsonBody?: JsonBody;
}

export interface Filter {
  readonly Behavior: string;
  readonly Requirement: string;
  readonly Conditions: [];
}

export interface FirewallManagerRuleGroup {
  readonly Name: string;
  readonly Priority: number;
  readonly FirewallManagerStatement: FirewallManagerStatement;
  readonly OverrideAction: OverrideAction;
  readonly VisibilityConfig: VisibilityConfig;
}

export interface FirewallManagerStatement {
  readonly ManagedRuleGroupStatement?: ManagedRuleGroupStatement;
  readonly RuleGroupReferenceStatement?: RuleGroupReferenceStatement;
}

export interface ForwardedIPConfig {
  readonly HeaderName: string;
  readonly FallbackBehavior: string;
}

export interface GeoMatchStatement {
  readonly CountryCodes?: [];
  readonly ForwardedIPConfig?: ForwardedIPConfig;
}

export interface GetIPSetRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
}

export interface GetIPSetResponse {
  readonly IPSet?: IPSet;
  readonly LockToken?: string;
}

export interface GetLoggingConfigurationRequest {
  readonly ResourceArn: string;
}

export interface GetLoggingConfigurationResponse {
  readonly LoggingConfiguration?: LoggingConfiguration;
}

export interface GetManagedRuleSetRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
}

export interface GetManagedRuleSetResponse {
  readonly ManagedRuleSet?: ManagedRuleSet;
  readonly LockToken?: string;
}

export interface GetPermissionPolicyRequest {
  readonly ResourceArn: string;
}

export interface GetPermissionPolicyResponse {
  readonly Policy?: string;
}

export interface GetRateBasedStatementManagedKeysRequest {
  readonly Scope: string;
  readonly WebACLName: string;
  readonly WebACLId: string;
  readonly RuleGroupRuleName?: string;
  readonly RuleName: string;
}

export interface GetRateBasedStatementManagedKeysResponse {
  readonly ManagedKeysIPV4?: RateBasedStatementManagedKeysIPSet;
  readonly ManagedKeysIPV6?: RateBasedStatementManagedKeysIPSet;
}

export interface GetRegexPatternSetRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
}

export interface GetRegexPatternSetResponse {
  readonly RegexPatternSet?: RegexPatternSet;
  readonly LockToken?: string;
}

export interface GetRuleGroupRequest {
  readonly Name?: string;
  readonly Scope?: string;
  readonly Id?: string;
  readonly ARN?: string;
}

export interface GetRuleGroupResponse {
  readonly RuleGroup?: RuleGroup;
  readonly LockToken?: string;
}

export interface GetSampledRequestsRequest {
  readonly WebAclArn: string;
  readonly RuleMetricName: string;
  readonly Scope: string;
  readonly TimeWindow: TimeWindow;
  readonly MaxItems: number;
}

export interface GetSampledRequestsResponse {
  readonly SampledRequests?: [];
  readonly PopulationSize?: number;
  readonly TimeWindow?: TimeWindow;
}

export interface GetWebACLForResourceRequest {
  readonly ResourceArn: string;
}

export interface GetWebACLForResourceResponse {
  readonly WebACL?: WebACL;
}

export interface GetWebACLRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
}

export interface GetWebACLResponse {
  readonly WebACL?: WebACL;
  readonly LockToken?: string;
}

export interface HTTPHeader {
  readonly Name?: string;
  readonly Value?: string;
}

export interface HTTPRequest {
  readonly ClientIP?: string;
  readonly Country?: string;
  readonly URI?: string;
  readonly Method?: string;
  readonly HTTPVersion?: string;
  readonly Headers?: [];
}

export interface IPSet {
  readonly Name: string;
  readonly Id: string;
  readonly ARN: string;
  readonly Description?: string;
  readonly IPAddressVersion: string;
  readonly Addresses: [];
}

export interface IPSetForwardedIPConfig {
  readonly HeaderName: string;
  readonly FallbackBehavior: string;
  readonly Position: string;
}

export interface IPSetReferenceStatement {
  readonly ARN: string;
  readonly IPSetForwardedIPConfig?: IPSetForwardedIPConfig;
}

export interface IPSetSummary {
  readonly Name?: string;
  readonly Id?: string;
  readonly Description?: string;
  readonly LockToken?: string;
  readonly ARN?: string;
}

export interface ImmunityTimeProperty {
  readonly ImmunityTime: number;
}

export interface JsonBody {
  readonly MatchPattern: JsonMatchPattern;
  readonly MatchScope: string;
  readonly InvalidFallbackBehavior?: string;
}

export interface JsonMatchPattern {
  readonly All?: All;
  readonly IncludedPaths?: [];
}

export interface Label {
  readonly Name: string;
}

export interface LabelMatchStatement {
  readonly Scope: string;
  readonly Key: string;
}

export interface LabelNameCondition {
  readonly LabelName: string;
}

export interface LabelSummary {
  readonly Name?: string;
}

export interface ListAvailableManagedRuleGroupVersionsRequest {
  readonly VendorName: string;
  readonly Name: string;
  readonly Scope: string;
  readonly NextMarker?: string;
  readonly Limit?: number;
}

export interface ListAvailableManagedRuleGroupVersionsResponse {
  readonly NextMarker?: string;
  readonly Versions?: [];
}

export interface ListAvailableManagedRuleGroupsRequest {
  readonly Scope: string;
  readonly NextMarker?: string;
  readonly Limit?: number;
}

export interface ListAvailableManagedRuleGroupsResponse {
  readonly NextMarker?: string;
  readonly ManagedRuleGroups?: [];
}

export interface ListIPSetsRequest {
  readonly Scope: string;
  readonly NextMarker?: string;
  readonly Limit?: number;
}

export interface ListIPSetsResponse {
  readonly NextMarker?: string;
  readonly IPSets?: [];
}

export interface ListLoggingConfigurationsRequest {
  readonly Scope: string;
  readonly NextMarker?: string;
  readonly Limit?: number;
}

export interface ListLoggingConfigurationsResponse {
  readonly LoggingConfigurations?: [];
  readonly NextMarker?: string;
}

export interface ListManagedRuleSetsRequest {
  readonly Scope: string;
  readonly NextMarker?: string;
  readonly Limit?: number;
}

export interface ListManagedRuleSetsResponse {
  readonly NextMarker?: string;
  readonly ManagedRuleSets?: [];
}

export interface ListRegexPatternSetsRequest {
  readonly Scope: string;
  readonly NextMarker?: string;
  readonly Limit?: number;
}

export interface ListRegexPatternSetsResponse {
  readonly NextMarker?: string;
  readonly RegexPatternSets?: [];
}

export interface ListResourcesForWebACLRequest {
  readonly WebACLArn: string;
  readonly ResourceType?: string;
}

export interface ListResourcesForWebACLResponse {
  readonly ResourceArns?: [];
}

export interface ListRuleGroupsRequest {
  readonly Scope: string;
  readonly NextMarker?: string;
  readonly Limit?: number;
}

export interface ListRuleGroupsResponse {
  readonly NextMarker?: string;
  readonly RuleGroups?: [];
}

export interface ListTagsForResourceRequest {
  readonly NextMarker?: string;
  readonly Limit?: number;
  readonly ResourceARN: string;
}

export interface ListTagsForResourceResponse {
  readonly NextMarker?: string;
  readonly TagInfoForResource?: TagInfoForResource;
}

export interface ListWebACLsRequest {
  readonly Scope: string;
  readonly NextMarker?: string;
  readonly Limit?: number;
}

export interface ListWebACLsResponse {
  readonly NextMarker?: string;
  readonly WebACLs?: [];
}

export interface LoggingConfiguration {
  readonly ResourceArn: string;
  readonly LogDestinationConfigs: [];
  readonly RedactedFields?: [];
  readonly ManagedByFirewallManager?: boolean;
  readonly LoggingFilter?: LoggingFilter;
}

export interface LoggingFilter {
  readonly Filters: [];
  readonly DefaultBehavior: string;
}

export interface ManagedRuleGroupStatement {
  readonly VendorName: string;
  readonly Name: string;
  readonly Version?: string;
  readonly ExcludedRules?: [];
  readonly ScopeDownStatement?: Statement;
}

export interface ManagedRuleGroupSummary {
  readonly VendorName?: string;
  readonly Name?: string;
  readonly Description?: string;
}

export interface ManagedRuleGroupVersion {
  readonly Name?: string;
  readonly LastUpdateTimestamp?: Date;
}

export interface ManagedRuleSet {
  readonly Name: string;
  readonly Id: string;
  readonly ARN: string;
  readonly Description?: string;
  readonly PublishedVersions?: {[key: string]: any};
  readonly RecommendedVersion?: string;
  readonly LabelNamespace?: string;
}

export interface ManagedRuleSetSummary {
  readonly Name?: string;
  readonly Id?: string;
  readonly Description?: string;
  readonly LockToken?: string;
  readonly ARN?: string;
  readonly LabelNamespace?: string;
}

export interface ManagedRuleSetVersion {
  readonly AssociatedRuleGroupArn?: string;
  readonly Capacity?: number;
  readonly ForecastedLifetime?: number;
  readonly PublishTimestamp?: Date;
  readonly LastUpdateTimestamp?: Date;
  readonly ExpiryTimestamp?: Date;
}

export interface Method {
}

export interface NoneAction {
}

export interface NotStatement {
  readonly Statement: Statement;
}

export interface OrStatement {
  readonly Statements: [];
}

export interface OverrideAction {
  readonly Count?: CountAction;
  readonly None?: NoneAction;
}

export interface PutLoggingConfigurationRequest {
  readonly LoggingConfiguration: LoggingConfiguration;
}

export interface PutLoggingConfigurationResponse {
  readonly LoggingConfiguration?: LoggingConfiguration;
}

export interface PutManagedRuleSetVersionsRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly LockToken: string;
  readonly RecommendedVersion?: string;
  readonly VersionsToPublish?: {[key: string]: any};
}

export interface PutManagedRuleSetVersionsResponse {
  readonly NextLockToken?: string;
}

export interface PutPermissionPolicyRequest {
  readonly ResourceArn: string;
  readonly Policy: string;
}

export interface PutPermissionPolicyResponse {
}

export interface QueryString {
}

export interface RateBasedStatement {
  readonly Limit: number;
  readonly AggregateKeyType: string;
  readonly ScopeDownStatement?: Statement;
  readonly ForwardedIPConfig?: ForwardedIPConfig;
}

export interface RateBasedStatementManagedKeysIPSet {
  readonly IPAddressVersion?: string;
  readonly Addresses?: [];
}

export interface Regex {
  readonly RegexString?: string;
}

export interface RegexMatchStatement {
  readonly RegexString: string;
  readonly FieldToMatch: FieldToMatch;
  readonly TextTransformations: [];
}

export interface RegexPatternSet {
  readonly Name?: string;
  readonly Id?: string;
  readonly ARN?: string;
  readonly Description?: string;
  readonly RegularExpressionList?: [];
}

export interface RegexPatternSetReferenceStatement {
  readonly ARN: string;
  readonly FieldToMatch: FieldToMatch;
  readonly TextTransformations: [];
}

export interface RegexPatternSetSummary {
  readonly Name?: string;
  readonly Id?: string;
  readonly Description?: string;
  readonly LockToken?: string;
  readonly ARN?: string;
}

export interface Rule {
  readonly Name: string;
  readonly Priority: number;
  readonly Statement: Statement;
  readonly Action?: RuleAction;
  readonly OverrideAction?: OverrideAction;
  readonly RuleLabels?: [];
  readonly VisibilityConfig: VisibilityConfig;
  readonly CaptchaConfig?: CaptchaConfig;
}

export interface RuleAction {
  readonly Block?: BlockAction;
  readonly Allow?: AllowAction;
  readonly Count?: CountAction;
  readonly Captcha?: CaptchaAction;
}

export interface RuleGroup {
  readonly Name: string;
  readonly Id: string;
  readonly Capacity: number;
  readonly ARN: string;
  readonly Description?: string;
  readonly Rules?: [];
  readonly VisibilityConfig: VisibilityConfig;
  readonly LabelNamespace?: string;
  readonly CustomResponseBodies?: {[key: string]: any};
  readonly AvailableLabels?: [];
  readonly ConsumedLabels?: [];
}

export interface RuleGroupReferenceStatement {
  readonly ARN: string;
  readonly ExcludedRules?: [];
}

export interface RuleGroupSummary {
  readonly Name?: string;
  readonly Id?: string;
  readonly Description?: string;
  readonly LockToken?: string;
  readonly ARN?: string;
}

export interface RuleSummary {
  readonly Name?: string;
  readonly Action?: RuleAction;
}

export interface SampledHTTPRequest {
  readonly Request: HTTPRequest;
  readonly Weight: number;
  readonly Timestamp?: Date;
  readonly Action?: string;
  readonly RuleNameWithinRuleGroup?: string;
  readonly RequestHeadersInserted?: [];
  readonly ResponseCodeSent?: number;
  readonly Labels?: [];
  readonly CaptchaResponse?: CaptchaResponse;
}

export interface SingleHeader {
  readonly Name: string;
}

export interface SingleQueryArgument {
  readonly Name: string;
}

export interface SizeConstraintStatement {
  readonly FieldToMatch: FieldToMatch;
  readonly ComparisonOperator: string;
  readonly Size: number;
  readonly TextTransformations: [];
}

export interface SqliMatchStatement {
  readonly FieldToMatch: FieldToMatch;
  readonly TextTransformations: [];
}

export interface Statement {
  readonly ByteMatchStatement?: ByteMatchStatement;
  readonly SqliMatchStatement?: SqliMatchStatement;
  readonly XssMatchStatement?: XssMatchStatement;
  readonly SizeConstraintStatement?: SizeConstraintStatement;
  readonly GeoMatchStatement?: GeoMatchStatement;
  readonly RuleGroupReferenceStatement?: RuleGroupReferenceStatement;
  readonly IPSetReferenceStatement?: IPSetReferenceStatement;
  readonly RegexPatternSetReferenceStatement?: RegexPatternSetReferenceStatement;
  readonly RateBasedStatement?: RateBasedStatement;
  readonly AndStatement?: AndStatement;
  readonly OrStatement?: OrStatement;
  readonly NotStatement?: NotStatement;
  readonly ManagedRuleGroupStatement?: ManagedRuleGroupStatement;
  readonly LabelMatchStatement?: LabelMatchStatement;
  readonly RegexMatchStatement?: RegexMatchStatement;
}

export interface Tag {
  readonly Key: string;
  readonly Value: string;
}

export interface TagInfoForResource {
  readonly ResourceARN?: string;
  readonly TagList?: [];
}

export interface TagResourceRequest {
  readonly ResourceARN: string;
  readonly Tags: [];
}

export interface TagResourceResponse {
}

export interface TextTransformation {
  readonly Priority: number;
  readonly Type: string;
}

export interface TimeWindow {
  readonly StartTime: Date;
  readonly EndTime: Date;
}

export interface UntagResourceRequest {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}

export interface UntagResourceResponse {
}

export interface UpdateIPSetRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly Description?: string;
  readonly Addresses: [];
  readonly LockToken: string;
}

export interface UpdateIPSetResponse {
  readonly NextLockToken?: string;
}

export interface UpdateManagedRuleSetVersionExpiryDateRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly LockToken: string;
  readonly VersionToExpire: string;
  readonly ExpiryTimestamp: Date;
}

export interface UpdateManagedRuleSetVersionExpiryDateResponse {
  readonly ExpiringVersion?: string;
  readonly ExpiryTimestamp?: Date;
  readonly NextLockToken?: string;
}

export interface UpdateRegexPatternSetRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly Description?: string;
  readonly RegularExpressionList: [];
  readonly LockToken: string;
}

export interface UpdateRegexPatternSetResponse {
  readonly NextLockToken?: string;
}

export interface UpdateRuleGroupRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly Description?: string;
  readonly Rules?: [];
  readonly VisibilityConfig: VisibilityConfig;
  readonly LockToken: string;
  readonly CustomResponseBodies?: {[key: string]: any};
}

export interface UpdateRuleGroupResponse {
  readonly NextLockToken?: string;
}

export interface UpdateWebACLRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly DefaultAction: DefaultAction;
  readonly Description?: string;
  readonly Rules?: [];
  readonly VisibilityConfig: VisibilityConfig;
  readonly LockToken: string;
  readonly CustomResponseBodies?: {[key: string]: any};
  readonly CaptchaConfig?: CaptchaConfig;
}

export interface UpdateWebACLResponse {
  readonly NextLockToken?: string;
}

export interface UriPath {
}

export interface VersionToPublish {
  readonly AssociatedRuleGroupArn?: string;
  readonly ForecastedLifetime?: number;
}

export interface VisibilityConfig {
  readonly SampledRequestsEnabled: boolean;
  readonly CloudWatchMetricsEnabled: boolean;
  readonly MetricName: string;
}

export interface WAFAssociatedItemException {
  readonly Message?: string;
}

export interface WAFDuplicateItemException {
  readonly Message?: string;
}

export interface WAFExpiredManagedRuleGroupVersionException {
  readonly Message?: string;
}

export interface WAFInternalErrorException {
  readonly Message?: string;
}

export interface WAFInvalidOperationException {
  readonly Message?: string;
}

export interface WAFInvalidParameterException {
  readonly message?: string;
  readonly Field?: string;
  readonly Parameter?: string;
  readonly Reason?: string;
}

export interface WAFInvalidPermissionPolicyException {
  readonly Message?: string;
}

export interface WAFInvalidResourceException {
  readonly Message?: string;
}

export interface WAFLimitsExceededException {
  readonly Message?: string;
}

export interface WAFLogDestinationPermissionIssueException {
  readonly Message?: string;
}

export interface WAFNonexistentItemException {
  readonly Message?: string;
}

export interface WAFOptimisticLockException {
  readonly Message?: string;
}

export interface WAFServiceLinkedRoleErrorException {
  readonly message?: string;
}

export interface WAFSubscriptionNotFoundException {
  readonly Message?: string;
}

export interface WAFTagOperationException {
  readonly Message?: string;
}

export interface WAFTagOperationInternalErrorException {
  readonly Message?: string;
}

export interface WAFUnavailableEntityException {
  readonly Message?: string;
}

export interface WebACL {
  readonly Name: string;
  readonly Id: string;
  readonly ARN: string;
  readonly DefaultAction: DefaultAction;
  readonly Description?: string;
  readonly Rules?: [];
  readonly VisibilityConfig: VisibilityConfig;
  readonly Capacity?: number;
  readonly PreProcessFirewallManagerRuleGroups?: [];
  readonly PostProcessFirewallManagerRuleGroups?: [];
  readonly ManagedByFirewallManager?: boolean;
  readonly LabelNamespace?: string;
  readonly CustomResponseBodies?: {[key: string]: any};
  readonly CaptchaConfig?: CaptchaConfig;
}

export interface WebACLSummary {
  readonly Name?: string;
  readonly Id?: string;
  readonly Description?: string;
  readonly LockToken?: string;
  readonly ARN?: string;
}

export interface XssMatchStatement {
  readonly FieldToMatch: FieldToMatch;
  readonly TextTransformations: [];
}


