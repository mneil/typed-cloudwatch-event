/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AssociateWebACL {
  readonly WebACLArn: string;
  readonly ResourceArn: string;
}
export interface CheckCapacity {
  readonly Scope: string;
  readonly Rules: [];
}
export interface CreateIPSet {
  readonly Name: string;
  readonly Scope: string;
  readonly Description?: string;
  readonly IPAddressVersion: string;
  readonly Addresses: [];
  readonly Tags?: [];
}
export interface CreateRegexPatternSet {
  readonly Name: string;
  readonly Scope: string;
  readonly Description?: string;
  readonly RegularExpressionList: [];
  readonly Tags?: [];
}
export interface CreateRuleGroup {
  readonly Name: string;
  readonly Scope: string;
  readonly Capacity: number;
  readonly Description?: string;
  readonly Rules?: [];
  readonly VisibilityConfig: VisibilityConfig;
  readonly Tags?: [];
  readonly CustomResponseBodies?: {[key: string]: any};
}
export interface CreateWebACL {
  readonly Name: string;
  readonly Scope: string;
  readonly DefaultAction: DefaultAction;
  readonly Description?: string;
  readonly Rules?: [];
  readonly VisibilityConfig: VisibilityConfig;
  readonly Tags?: [];
  readonly CustomResponseBodies?: {[key: string]: any};
  readonly CaptchaConfig?: CaptchaConfig;
}
export interface DeleteFirewallManagerRuleGroups {
  readonly WebACLArn: string;
  readonly WebACLLockToken: string;
}
export interface DeleteIPSet {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly LockToken: string;
}
export interface DeleteLoggingConfiguration {
  readonly ResourceArn: string;
}
export interface DeletePermissionPolicy {
  readonly ResourceArn: string;
}
export interface DeleteRegexPatternSet {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly LockToken: string;
}
export interface DeleteRuleGroup {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly LockToken: string;
}
export interface DeleteWebACL {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly LockToken: string;
}
export interface DescribeManagedRuleGroup {
  readonly VendorName: string;
  readonly Name: string;
  readonly Scope: string;
  readonly VersionName?: string;
}
export interface DisassociateWebACL {
  readonly ResourceArn: string;
}
export interface GetIPSet {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
}
export interface GetLoggingConfiguration {
  readonly ResourceArn: string;
}
export interface GetManagedRuleSet {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
}
export interface GetPermissionPolicy {
  readonly ResourceArn: string;
}
export interface GetRateBasedStatementManagedKeys {
  readonly Scope: string;
  readonly WebACLName: string;
  readonly WebACLId: string;
  readonly RuleGroupRuleName?: string;
  readonly RuleName: string;
}
export interface GetRegexPatternSet {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
}
export interface GetRuleGroup {
  readonly Name?: string;
  readonly Scope?: string;
  readonly Id?: string;
  readonly ARN?: string;
}
export interface GetSampledRequests {
  readonly WebAclArn: string;
  readonly RuleMetricName: string;
  readonly Scope: string;
  readonly TimeWindow: TimeWindow;
  readonly MaxItems: number;
}
export interface GetWebACL {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
}
export interface GetWebACLForResource {
  readonly ResourceArn: string;
}
export interface ListAvailableManagedRuleGroupVersions {
  readonly VendorName: string;
  readonly Name: string;
  readonly Scope: string;
  readonly NextMarker?: string;
  readonly Limit?: number;
}
export interface ListAvailableManagedRuleGroups {
  readonly Scope: string;
  readonly NextMarker?: string;
  readonly Limit?: number;
}
export interface ListIPSets {
  readonly Scope: string;
  readonly NextMarker?: string;
  readonly Limit?: number;
}
export interface ListLoggingConfigurations {
  readonly Scope: string;
  readonly NextMarker?: string;
  readonly Limit?: number;
}
export interface ListManagedRuleSets {
  readonly Scope: string;
  readonly NextMarker?: string;
  readonly Limit?: number;
}
export interface ListRegexPatternSets {
  readonly Scope: string;
  readonly NextMarker?: string;
  readonly Limit?: number;
}
export interface ListResourcesForWebACL {
  readonly WebACLArn: string;
  readonly ResourceType?: string;
}
export interface ListRuleGroups {
  readonly Scope: string;
  readonly NextMarker?: string;
  readonly Limit?: number;
}
export interface ListTagsForResource {
  readonly NextMarker?: string;
  readonly Limit?: number;
  readonly ResourceARN: string;
}
export interface ListWebACLs {
  readonly Scope: string;
  readonly NextMarker?: string;
  readonly Limit?: number;
}
export interface PutLoggingConfiguration {
  readonly LoggingConfiguration: LoggingConfiguration;
}
export interface PutManagedRuleSetVersions {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly LockToken: string;
  readonly RecommendedVersion?: string;
  readonly VersionsToPublish?: {[key: string]: any};
}
export interface PutPermissionPolicy {
  readonly ResourceArn: string;
  readonly Policy: string;
}
export interface TagResource {
  readonly ResourceARN: string;
  readonly Tags: [];
}
export interface UntagResource {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}
export interface UpdateIPSet {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly Description?: string;
  readonly Addresses: [];
  readonly LockToken: string;
}
export interface UpdateManagedRuleSetVersionExpiryDate {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly LockToken: string;
  readonly VersionToExpire: string;
  readonly ExpiryTimestamp: Date;
}
export interface UpdateRegexPatternSet {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly Description?: string;
  readonly RegularExpressionList: [];
  readonly LockToken: string;
}
export interface UpdateRuleGroup {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly Description?: string;
  readonly Rules?: [];
  readonly VisibilityConfig: VisibilityConfig;
  readonly LockToken: string;
  readonly CustomResponseBodies?: {[key: string]: any};
}
export interface UpdateWebACL {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly DefaultAction: DefaultAction;
  readonly Description?: string;
  readonly Rules?: [];
  readonly VisibilityConfig: VisibilityConfig;
  readonly LockToken: string;
  readonly CustomResponseBodies?: {[key: string]: any};
  readonly CaptchaConfig?: CaptchaConfig;
}



interface ActionCondition {
  readonly Action: string;
}

interface All {
}

interface AllQueryArguments {
}

interface AllowAction {
  readonly CustomRequestHandling: CustomRequestHandling;
}

interface AndStatement {
  readonly Statements: [];
}

interface AssociateWebACLRequest {
  readonly WebACLArn: string;
  readonly ResourceArn: string;
}

interface AssociateWebACLResponse {
}

interface BlockAction {
  readonly CustomResponse: CustomResponse;
}

interface Body {
}

interface ByteMatchStatement {
  readonly SearchString: unknown;
  readonly FieldToMatch: FieldToMatch;
  readonly TextTransformations: [];
  readonly PositionalConstraint: string;
}

interface CaptchaAction {
  readonly CustomRequestHandling: CustomRequestHandling;
}

interface CaptchaConfig {
  readonly ImmunityTimeProperty: ImmunityTimeProperty;
}

interface CaptchaResponse {
  readonly ResponseCode: number;
  readonly SolveTimestamp: number;
  readonly FailureReason: string;
}

interface CheckCapacityRequest {
  readonly Scope: string;
  readonly Rules: [];
}

interface CheckCapacityResponse {
  readonly Capacity: number;
}

interface Condition {
  readonly ActionCondition: ActionCondition;
  readonly LabelNameCondition: LabelNameCondition;
}

interface CountAction {
  readonly CustomRequestHandling: CustomRequestHandling;
}

interface CreateIPSetRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Description: string;
  readonly IPAddressVersion: string;
  readonly Addresses: [];
  readonly Tags: [];
}

interface CreateIPSetResponse {
  readonly Summary: IPSetSummary;
}

interface CreateRegexPatternSetRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Description: string;
  readonly RegularExpressionList: [];
  readonly Tags: [];
}

interface CreateRegexPatternSetResponse {
  readonly Summary: RegexPatternSetSummary;
}

interface CreateRuleGroupRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Capacity: number;
  readonly Description: string;
  readonly Rules: [];
  readonly VisibilityConfig: VisibilityConfig;
  readonly Tags: [];
  readonly CustomResponseBodies: {[key: string]: any};
}

interface CreateRuleGroupResponse {
  readonly Summary: RuleGroupSummary;
}

interface CreateWebACLRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly DefaultAction: DefaultAction;
  readonly Description: string;
  readonly Rules: [];
  readonly VisibilityConfig: VisibilityConfig;
  readonly Tags: [];
  readonly CustomResponseBodies: {[key: string]: any};
  readonly CaptchaConfig: CaptchaConfig;
}

interface CreateWebACLResponse {
  readonly Summary: WebACLSummary;
}

interface CustomHTTPHeader {
  readonly Name: string;
  readonly Value: string;
}

interface CustomRequestHandling {
  readonly InsertHeaders: [];
}

interface CustomResponse {
  readonly ResponseCode: number;
  readonly CustomResponseBodyKey: string;
  readonly ResponseHeaders: [];
}

interface CustomResponseBody {
  readonly ContentType: string;
  readonly Content: string;
}

interface DefaultAction {
  readonly Block: BlockAction;
  readonly Allow: AllowAction;
}

interface DeleteFirewallManagerRuleGroupsRequest {
  readonly WebACLArn: string;
  readonly WebACLLockToken: string;
}

interface DeleteFirewallManagerRuleGroupsResponse {
  readonly NextWebACLLockToken: string;
}

interface DeleteIPSetRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly LockToken: string;
}

interface DeleteIPSetResponse {
}

interface DeleteLoggingConfigurationRequest {
  readonly ResourceArn: string;
}

interface DeleteLoggingConfigurationResponse {
}

interface DeletePermissionPolicyRequest {
  readonly ResourceArn: string;
}

interface DeletePermissionPolicyResponse {
}

interface DeleteRegexPatternSetRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly LockToken: string;
}

interface DeleteRegexPatternSetResponse {
}

interface DeleteRuleGroupRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly LockToken: string;
}

interface DeleteRuleGroupResponse {
}

interface DeleteWebACLRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly LockToken: string;
}

interface DeleteWebACLResponse {
}

interface DescribeManagedRuleGroupRequest {
  readonly VendorName: string;
  readonly Name: string;
  readonly Scope: string;
  readonly VersionName: string;
}

interface DescribeManagedRuleGroupResponse {
  readonly VersionName: string;
  readonly SnsTopicArn: string;
  readonly Capacity: number;
  readonly Rules: [];
  readonly LabelNamespace: string;
  readonly AvailableLabels: [];
  readonly ConsumedLabels: [];
}

interface DisassociateWebACLRequest {
  readonly ResourceArn: string;
}

interface DisassociateWebACLResponse {
}

interface ExcludedRule {
  readonly Name: string;
}

interface FieldToMatch {
  readonly SingleHeader: SingleHeader;
  readonly SingleQueryArgument: SingleQueryArgument;
  readonly AllQueryArguments: AllQueryArguments;
  readonly UriPath: UriPath;
  readonly QueryString: QueryString;
  readonly Body: Body;
  readonly Method: Method;
  readonly JsonBody: JsonBody;
}

interface Filter {
  readonly Behavior: string;
  readonly Requirement: string;
  readonly Conditions: [];
}

interface FirewallManagerRuleGroup {
  readonly Name: string;
  readonly Priority: number;
  readonly FirewallManagerStatement: FirewallManagerStatement;
  readonly OverrideAction: OverrideAction;
  readonly VisibilityConfig: VisibilityConfig;
}

interface FirewallManagerStatement {
  readonly ManagedRuleGroupStatement: ManagedRuleGroupStatement;
  readonly RuleGroupReferenceStatement: RuleGroupReferenceStatement;
}

interface ForwardedIPConfig {
  readonly HeaderName: string;
  readonly FallbackBehavior: string;
}

interface GeoMatchStatement {
  readonly CountryCodes: [];
  readonly ForwardedIPConfig: ForwardedIPConfig;
}

interface GetIPSetRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
}

interface GetIPSetResponse {
  readonly IPSet: IPSet;
  readonly LockToken: string;
}

interface GetLoggingConfigurationRequest {
  readonly ResourceArn: string;
}

interface GetLoggingConfigurationResponse {
  readonly LoggingConfiguration: LoggingConfiguration;
}

interface GetManagedRuleSetRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
}

interface GetManagedRuleSetResponse {
  readonly ManagedRuleSet: ManagedRuleSet;
  readonly LockToken: string;
}

interface GetPermissionPolicyRequest {
  readonly ResourceArn: string;
}

interface GetPermissionPolicyResponse {
  readonly Policy: string;
}

interface GetRateBasedStatementManagedKeysRequest {
  readonly Scope: string;
  readonly WebACLName: string;
  readonly WebACLId: string;
  readonly RuleGroupRuleName: string;
  readonly RuleName: string;
}

interface GetRateBasedStatementManagedKeysResponse {
  readonly ManagedKeysIPV4: RateBasedStatementManagedKeysIPSet;
  readonly ManagedKeysIPV6: RateBasedStatementManagedKeysIPSet;
}

interface GetRegexPatternSetRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
}

interface GetRegexPatternSetResponse {
  readonly RegexPatternSet: RegexPatternSet;
  readonly LockToken: string;
}

interface GetRuleGroupRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly ARN: string;
}

interface GetRuleGroupResponse {
  readonly RuleGroup: RuleGroup;
  readonly LockToken: string;
}

interface GetSampledRequestsRequest {
  readonly WebAclArn: string;
  readonly RuleMetricName: string;
  readonly Scope: string;
  readonly TimeWindow: TimeWindow;
  readonly MaxItems: number;
}

interface GetSampledRequestsResponse {
  readonly SampledRequests: [];
  readonly PopulationSize: number;
  readonly TimeWindow: TimeWindow;
}

interface GetWebACLForResourceRequest {
  readonly ResourceArn: string;
}

interface GetWebACLForResourceResponse {
  readonly WebACL: WebACL;
}

interface GetWebACLRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
}

interface GetWebACLResponse {
  readonly WebACL: WebACL;
  readonly LockToken: string;
}

interface HTTPHeader {
  readonly Name: string;
  readonly Value: string;
}

interface HTTPRequest {
  readonly ClientIP: string;
  readonly Country: string;
  readonly URI: string;
  readonly Method: string;
  readonly HTTPVersion: string;
  readonly Headers: [];
}

interface IPSet {
  readonly Name: string;
  readonly Id: string;
  readonly ARN: string;
  readonly Description: string;
  readonly IPAddressVersion: string;
  readonly Addresses: [];
}

interface IPSetForwardedIPConfig {
  readonly HeaderName: string;
  readonly FallbackBehavior: string;
  readonly Position: string;
}

interface IPSetReferenceStatement {
  readonly ARN: string;
  readonly IPSetForwardedIPConfig: IPSetForwardedIPConfig;
}

interface IPSetSummary {
  readonly Name: string;
  readonly Id: string;
  readonly Description: string;
  readonly LockToken: string;
  readonly ARN: string;
}

interface ImmunityTimeProperty {
  readonly ImmunityTime: number;
}

interface JsonBody {
  readonly MatchPattern: JsonMatchPattern;
  readonly MatchScope: string;
  readonly InvalidFallbackBehavior: string;
}

interface JsonMatchPattern {
  readonly All: All;
  readonly IncludedPaths: [];
}

interface Label {
  readonly Name: string;
}

interface LabelMatchStatement {
  readonly Scope: string;
  readonly Key: string;
}

interface LabelNameCondition {
  readonly LabelName: string;
}

interface LabelSummary {
  readonly Name: string;
}

interface ListAvailableManagedRuleGroupVersionsRequest {
  readonly VendorName: string;
  readonly Name: string;
  readonly Scope: string;
  readonly NextMarker: string;
  readonly Limit: number;
}

interface ListAvailableManagedRuleGroupVersionsResponse {
  readonly NextMarker: string;
  readonly Versions: [];
}

interface ListAvailableManagedRuleGroupsRequest {
  readonly Scope: string;
  readonly NextMarker: string;
  readonly Limit: number;
}

interface ListAvailableManagedRuleGroupsResponse {
  readonly NextMarker: string;
  readonly ManagedRuleGroups: [];
}

interface ListIPSetsRequest {
  readonly Scope: string;
  readonly NextMarker: string;
  readonly Limit: number;
}

interface ListIPSetsResponse {
  readonly NextMarker: string;
  readonly IPSets: [];
}

interface ListLoggingConfigurationsRequest {
  readonly Scope: string;
  readonly NextMarker: string;
  readonly Limit: number;
}

interface ListLoggingConfigurationsResponse {
  readonly LoggingConfigurations: [];
  readonly NextMarker: string;
}

interface ListManagedRuleSetsRequest {
  readonly Scope: string;
  readonly NextMarker: string;
  readonly Limit: number;
}

interface ListManagedRuleSetsResponse {
  readonly NextMarker: string;
  readonly ManagedRuleSets: [];
}

interface ListRegexPatternSetsRequest {
  readonly Scope: string;
  readonly NextMarker: string;
  readonly Limit: number;
}

interface ListRegexPatternSetsResponse {
  readonly NextMarker: string;
  readonly RegexPatternSets: [];
}

interface ListResourcesForWebACLRequest {
  readonly WebACLArn: string;
  readonly ResourceType: string;
}

interface ListResourcesForWebACLResponse {
  readonly ResourceArns: [];
}

interface ListRuleGroupsRequest {
  readonly Scope: string;
  readonly NextMarker: string;
  readonly Limit: number;
}

interface ListRuleGroupsResponse {
  readonly NextMarker: string;
  readonly RuleGroups: [];
}

interface ListTagsForResourceRequest {
  readonly NextMarker: string;
  readonly Limit: number;
  readonly ResourceARN: string;
}

interface ListTagsForResourceResponse {
  readonly NextMarker: string;
  readonly TagInfoForResource: TagInfoForResource;
}

interface ListWebACLsRequest {
  readonly Scope: string;
  readonly NextMarker: string;
  readonly Limit: number;
}

interface ListWebACLsResponse {
  readonly NextMarker: string;
  readonly WebACLs: [];
}

interface LoggingConfiguration {
  readonly ResourceArn: string;
  readonly LogDestinationConfigs: [];
  readonly RedactedFields: [];
  readonly ManagedByFirewallManager: boolean;
  readonly LoggingFilter: LoggingFilter;
}

interface LoggingFilter {
  readonly Filters: [];
  readonly DefaultBehavior: string;
}

interface ManagedRuleGroupStatement {
  readonly VendorName: string;
  readonly Name: string;
  readonly Version: string;
  readonly ExcludedRules: [];
  readonly ScopeDownStatement: Statement;
}

interface ManagedRuleGroupSummary {
  readonly VendorName: string;
  readonly Name: string;
  readonly Description: string;
}

interface ManagedRuleGroupVersion {
  readonly Name: string;
  readonly LastUpdateTimestamp: Date;
}

interface ManagedRuleSet {
  readonly Name: string;
  readonly Id: string;
  readonly ARN: string;
  readonly Description: string;
  readonly PublishedVersions: {[key: string]: any};
  readonly RecommendedVersion: string;
  readonly LabelNamespace: string;
}

interface ManagedRuleSetSummary {
  readonly Name: string;
  readonly Id: string;
  readonly Description: string;
  readonly LockToken: string;
  readonly ARN: string;
  readonly LabelNamespace: string;
}

interface ManagedRuleSetVersion {
  readonly AssociatedRuleGroupArn: string;
  readonly Capacity: number;
  readonly ForecastedLifetime: number;
  readonly PublishTimestamp: Date;
  readonly LastUpdateTimestamp: Date;
  readonly ExpiryTimestamp: Date;
}

interface Method {
}

interface NoneAction {
}

interface NotStatement {
  readonly Statement: Statement;
}

interface OrStatement {
  readonly Statements: [];
}

interface OverrideAction {
  readonly Count: CountAction;
  readonly None: NoneAction;
}

interface PutLoggingConfigurationRequest {
  readonly LoggingConfiguration: LoggingConfiguration;
}

interface PutLoggingConfigurationResponse {
  readonly LoggingConfiguration: LoggingConfiguration;
}

interface PutManagedRuleSetVersionsRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly LockToken: string;
  readonly RecommendedVersion: string;
  readonly VersionsToPublish: {[key: string]: any};
}

interface PutManagedRuleSetVersionsResponse {
  readonly NextLockToken: string;
}

interface PutPermissionPolicyRequest {
  readonly ResourceArn: string;
  readonly Policy: string;
}

interface PutPermissionPolicyResponse {
}

interface QueryString {
}

interface RateBasedStatement {
  readonly Limit: number;
  readonly AggregateKeyType: string;
  readonly ScopeDownStatement: Statement;
  readonly ForwardedIPConfig: ForwardedIPConfig;
}

interface RateBasedStatementManagedKeysIPSet {
  readonly IPAddressVersion: string;
  readonly Addresses: [];
}

interface Regex {
  readonly RegexString: string;
}

interface RegexMatchStatement {
  readonly RegexString: string;
  readonly FieldToMatch: FieldToMatch;
  readonly TextTransformations: [];
}

interface RegexPatternSet {
  readonly Name: string;
  readonly Id: string;
  readonly ARN: string;
  readonly Description: string;
  readonly RegularExpressionList: [];
}

interface RegexPatternSetReferenceStatement {
  readonly ARN: string;
  readonly FieldToMatch: FieldToMatch;
  readonly TextTransformations: [];
}

interface RegexPatternSetSummary {
  readonly Name: string;
  readonly Id: string;
  readonly Description: string;
  readonly LockToken: string;
  readonly ARN: string;
}

interface Rule {
  readonly Name: string;
  readonly Priority: number;
  readonly Statement: Statement;
  readonly Action: RuleAction;
  readonly OverrideAction: OverrideAction;
  readonly RuleLabels: [];
  readonly VisibilityConfig: VisibilityConfig;
  readonly CaptchaConfig: CaptchaConfig;
}

interface RuleAction {
  readonly Block: BlockAction;
  readonly Allow: AllowAction;
  readonly Count: CountAction;
  readonly Captcha: CaptchaAction;
}

interface RuleGroup {
  readonly Name: string;
  readonly Id: string;
  readonly Capacity: number;
  readonly ARN: string;
  readonly Description: string;
  readonly Rules: [];
  readonly VisibilityConfig: VisibilityConfig;
  readonly LabelNamespace: string;
  readonly CustomResponseBodies: {[key: string]: any};
  readonly AvailableLabels: [];
  readonly ConsumedLabels: [];
}

interface RuleGroupReferenceStatement {
  readonly ARN: string;
  readonly ExcludedRules: [];
}

interface RuleGroupSummary {
  readonly Name: string;
  readonly Id: string;
  readonly Description: string;
  readonly LockToken: string;
  readonly ARN: string;
}

interface RuleSummary {
  readonly Name: string;
  readonly Action: RuleAction;
}

interface SampledHTTPRequest {
  readonly Request: HTTPRequest;
  readonly Weight: number;
  readonly Timestamp: Date;
  readonly Action: string;
  readonly RuleNameWithinRuleGroup: string;
  readonly RequestHeadersInserted: [];
  readonly ResponseCodeSent: number;
  readonly Labels: [];
  readonly CaptchaResponse: CaptchaResponse;
}

interface SingleHeader {
  readonly Name: string;
}

interface SingleQueryArgument {
  readonly Name: string;
}

interface SizeConstraintStatement {
  readonly FieldToMatch: FieldToMatch;
  readonly ComparisonOperator: string;
  readonly Size: number;
  readonly TextTransformations: [];
}

interface SqliMatchStatement {
  readonly FieldToMatch: FieldToMatch;
  readonly TextTransformations: [];
}

interface Statement {
  readonly ByteMatchStatement: ByteMatchStatement;
  readonly SqliMatchStatement: SqliMatchStatement;
  readonly XssMatchStatement: XssMatchStatement;
  readonly SizeConstraintStatement: SizeConstraintStatement;
  readonly GeoMatchStatement: GeoMatchStatement;
  readonly RuleGroupReferenceStatement: RuleGroupReferenceStatement;
  readonly IPSetReferenceStatement: IPSetReferenceStatement;
  readonly RegexPatternSetReferenceStatement: RegexPatternSetReferenceStatement;
  readonly RateBasedStatement: RateBasedStatement;
  readonly AndStatement: AndStatement;
  readonly OrStatement: OrStatement;
  readonly NotStatement: NotStatement;
  readonly ManagedRuleGroupStatement: ManagedRuleGroupStatement;
  readonly LabelMatchStatement: LabelMatchStatement;
  readonly RegexMatchStatement: RegexMatchStatement;
}

interface Tag {
  readonly Key: string;
  readonly Value: string;
}

interface TagInfoForResource {
  readonly ResourceARN: string;
  readonly TagList: [];
}

interface TagResourceRequest {
  readonly ResourceARN: string;
  readonly Tags: [];
}

interface TagResourceResponse {
}

interface TextTransformation {
  readonly Priority: number;
  readonly Type: string;
}

interface TimeWindow {
  readonly StartTime: Date;
  readonly EndTime: Date;
}

interface UntagResourceRequest {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}

interface UntagResourceResponse {
}

interface UpdateIPSetRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly Description: string;
  readonly Addresses: [];
  readonly LockToken: string;
}

interface UpdateIPSetResponse {
  readonly NextLockToken: string;
}

interface UpdateManagedRuleSetVersionExpiryDateRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly LockToken: string;
  readonly VersionToExpire: string;
  readonly ExpiryTimestamp: Date;
}

interface UpdateManagedRuleSetVersionExpiryDateResponse {
  readonly ExpiringVersion: string;
  readonly ExpiryTimestamp: Date;
  readonly NextLockToken: string;
}

interface UpdateRegexPatternSetRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly Description: string;
  readonly RegularExpressionList: [];
  readonly LockToken: string;
}

interface UpdateRegexPatternSetResponse {
  readonly NextLockToken: string;
}

interface UpdateRuleGroupRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly Description: string;
  readonly Rules: [];
  readonly VisibilityConfig: VisibilityConfig;
  readonly LockToken: string;
  readonly CustomResponseBodies: {[key: string]: any};
}

interface UpdateRuleGroupResponse {
  readonly NextLockToken: string;
}

interface UpdateWebACLRequest {
  readonly Name: string;
  readonly Scope: string;
  readonly Id: string;
  readonly DefaultAction: DefaultAction;
  readonly Description: string;
  readonly Rules: [];
  readonly VisibilityConfig: VisibilityConfig;
  readonly LockToken: string;
  readonly CustomResponseBodies: {[key: string]: any};
  readonly CaptchaConfig: CaptchaConfig;
}

interface UpdateWebACLResponse {
  readonly NextLockToken: string;
}

interface UriPath {
}

interface VersionToPublish {
  readonly AssociatedRuleGroupArn: string;
  readonly ForecastedLifetime: number;
}

interface VisibilityConfig {
  readonly SampledRequestsEnabled: boolean;
  readonly CloudWatchMetricsEnabled: boolean;
  readonly MetricName: string;
}

interface WAFAssociatedItemException {
  readonly Message: string;
}

interface WAFDuplicateItemException {
  readonly Message: string;
}

interface WAFExpiredManagedRuleGroupVersionException {
  readonly Message: string;
}

interface WAFInternalErrorException {
  readonly Message: string;
}

interface WAFInvalidOperationException {
  readonly Message: string;
}

interface WAFInvalidParameterException {
  readonly message: string;
  readonly Field: string;
  readonly Parameter: string;
  readonly Reason: string;
}

interface WAFInvalidPermissionPolicyException {
  readonly Message: string;
}

interface WAFInvalidResourceException {
  readonly Message: string;
}

interface WAFLimitsExceededException {
  readonly Message: string;
}

interface WAFLogDestinationPermissionIssueException {
  readonly Message: string;
}

interface WAFNonexistentItemException {
  readonly Message: string;
}

interface WAFOptimisticLockException {
  readonly Message: string;
}

interface WAFServiceLinkedRoleErrorException {
  readonly message: string;
}

interface WAFSubscriptionNotFoundException {
  readonly Message: string;
}

interface WAFTagOperationException {
  readonly Message: string;
}

interface WAFTagOperationInternalErrorException {
  readonly Message: string;
}

interface WAFUnavailableEntityException {
  readonly Message: string;
}

interface WebACL {
  readonly Name: string;
  readonly Id: string;
  readonly ARN: string;
  readonly DefaultAction: DefaultAction;
  readonly Description: string;
  readonly Rules: [];
  readonly VisibilityConfig: VisibilityConfig;
  readonly Capacity: number;
  readonly PreProcessFirewallManagerRuleGroups: [];
  readonly PostProcessFirewallManagerRuleGroups: [];
  readonly ManagedByFirewallManager: boolean;
  readonly LabelNamespace: string;
  readonly CustomResponseBodies: {[key: string]: any};
  readonly CaptchaConfig: CaptchaConfig;
}

interface WebACLSummary {
  readonly Name: string;
  readonly Id: string;
  readonly Description: string;
  readonly LockToken: string;
  readonly ARN: string;
}

interface XssMatchStatement {
  readonly FieldToMatch: FieldToMatch;
  readonly TextTransformations: [];
}

