/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CreateCertificateAuthority {
  readonly CertificateAuthorityConfiguration: CertificateAuthorityConfiguration;
  readonly RevocationConfiguration?: RevocationConfiguration;
  readonly CertificateAuthorityType: string;
  readonly IdempotencyToken?: string;
  readonly KeyStorageSecurityStandard?: string;
  readonly Tags?: [];
}

export interface CreateCertificateAuthorityAuditReport {
  readonly CertificateAuthorityArn: string;
  readonly S3BucketName: string;
  readonly AuditReportResponseFormat: string;
}

export interface CreatePermission {
  readonly CertificateAuthorityArn: string;
  readonly Principal: string;
  readonly SourceAccount?: string;
  readonly Actions: [];
}

export interface DeleteCertificateAuthority {
  readonly CertificateAuthorityArn: string;
  readonly PermanentDeletionTimeInDays?: number;
}

export interface DeletePermission {
  readonly CertificateAuthorityArn: string;
  readonly Principal: string;
  readonly SourceAccount?: string;
}

export interface DeletePolicy {
  readonly ResourceArn: string;
}

export interface DescribeCertificateAuthority {
  readonly CertificateAuthorityArn: string;
}

export interface DescribeCertificateAuthorityAuditReport {
  readonly CertificateAuthorityArn: string;
  readonly AuditReportId: string;
}

export interface GetCertificate {
  readonly CertificateAuthorityArn: string;
  readonly CertificateArn: string;
}

export interface GetCertificateAuthorityCertificate {
  readonly CertificateAuthorityArn: string;
}

export interface GetCertificateAuthorityCsr {
  readonly CertificateAuthorityArn: string;
}

export interface GetPolicy {
  readonly ResourceArn: string;
}

export interface ImportCertificateAuthorityCertificate {
  readonly CertificateAuthorityArn: string;
  readonly Certificate: unknown;
  readonly CertificateChain?: unknown;
}

export interface IssueCertificate {
  readonly ApiPassthrough?: ApiPassthrough;
  readonly CertificateAuthorityArn: string;
  readonly Csr: unknown;
  readonly SigningAlgorithm: string;
  readonly TemplateArn?: string;
  readonly Validity: Validity;
  readonly ValidityNotBefore?: Validity;
  readonly IdempotencyToken?: string;
}

export interface ListCertificateAuthorities {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly ResourceOwner?: string;
}

export interface ListPermissions {
  readonly CertificateAuthorityArn: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListTags {
  readonly CertificateAuthorityArn: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface PutPolicy {
  readonly ResourceArn: string;
  readonly Policy: string;
}

export interface RestoreCertificateAuthority {
  readonly CertificateAuthorityArn: string;
}

export interface RevokeCertificate {
  readonly CertificateAuthorityArn: string;
  readonly CertificateSerial: string;
  readonly RevocationReason: string;
}

export interface TagCertificateAuthority {
  readonly CertificateAuthorityArn: string;
  readonly Tags: [];
}

export interface UntagCertificateAuthority {
  readonly CertificateAuthorityArn: string;
  readonly Tags: [];
}

export interface UpdateCertificateAuthority {
  readonly CertificateAuthorityArn: string;
  readonly RevocationConfiguration?: RevocationConfiguration;
  readonly Status?: string;
}

export interface ASN1Subject {
  readonly Country?: string;
  readonly Organization?: string;
  readonly OrganizationalUnit?: string;
  readonly DistinguishedNameQualifier?: string;
  readonly State?: string;
  readonly CommonName?: string;
  readonly SerialNumber?: string;
  readonly Locality?: string;
  readonly Title?: string;
  readonly Surname?: string;
  readonly GivenName?: string;
  readonly Initials?: string;
  readonly Pseudonym?: string;
  readonly GenerationQualifier?: string;
}

export interface AccessDescription {
  readonly AccessMethod: AccessMethod;
  readonly AccessLocation: GeneralName;
}

export interface AccessMethod {
  readonly CustomObjectIdentifier?: string;
  readonly AccessMethodType?: string;
}

export interface ApiPassthrough {
  readonly Extensions?: Extensions;
  readonly Subject?: ASN1Subject;
}

export interface CertificateAuthority {
  readonly Arn?: string;
  readonly OwnerAccount?: string;
  readonly CreatedAt?: Date;
  readonly LastStateChangeAt?: Date;
  readonly Type?: string;
  readonly Serial?: string;
  readonly Status?: string;
  readonly NotBefore?: Date;
  readonly NotAfter?: Date;
  readonly FailureReason?: string;
  readonly CertificateAuthorityConfiguration?: CertificateAuthorityConfiguration;
  readonly RevocationConfiguration?: RevocationConfiguration;
  readonly RestorableUntil?: Date;
  readonly KeyStorageSecurityStandard?: string;
}

export interface CertificateAuthorityConfiguration {
  readonly KeyAlgorithm: string;
  readonly SigningAlgorithm: string;
  readonly Subject: ASN1Subject;
  readonly CsrExtensions?: CsrExtensions;
}

export interface CertificateMismatchException {
  readonly message?: string;
}

export interface ConcurrentModificationException {
  readonly message?: string;
}

export interface CreateCertificateAuthorityAuditReportRequest {
  readonly CertificateAuthorityArn: string;
  readonly S3BucketName: string;
  readonly AuditReportResponseFormat: string;
}

export interface CreateCertificateAuthorityAuditReportResponse {
  readonly AuditReportId?: string;
  readonly S3Key?: string;
}

export interface CreateCertificateAuthorityRequest {
  readonly CertificateAuthorityConfiguration: CertificateAuthorityConfiguration;
  readonly RevocationConfiguration?: RevocationConfiguration;
  readonly CertificateAuthorityType: string;
  readonly IdempotencyToken?: string;
  readonly KeyStorageSecurityStandard?: string;
  readonly Tags?: [];
}

export interface CreateCertificateAuthorityResponse {
  readonly CertificateAuthorityArn?: string;
}

export interface CreatePermissionRequest {
  readonly CertificateAuthorityArn: string;
  readonly Principal: string;
  readonly SourceAccount?: string;
  readonly Actions: [];
}

export interface CrlConfiguration {
  readonly Enabled: boolean;
  readonly ExpirationInDays?: number;
  readonly CustomCname?: string;
  readonly S3BucketName?: string;
  readonly S3ObjectAcl?: string;
}

export interface CsrExtensions {
  readonly KeyUsage?: KeyUsage;
  readonly SubjectInformationAccess?: [];
}

export interface DeleteCertificateAuthorityRequest {
  readonly CertificateAuthorityArn: string;
  readonly PermanentDeletionTimeInDays?: number;
}

export interface DeletePermissionRequest {
  readonly CertificateAuthorityArn: string;
  readonly Principal: string;
  readonly SourceAccount?: string;
}

export interface DeletePolicyRequest {
  readonly ResourceArn: string;
}

export interface DescribeCertificateAuthorityAuditReportRequest {
  readonly CertificateAuthorityArn: string;
  readonly AuditReportId: string;
}

export interface DescribeCertificateAuthorityAuditReportResponse {
  readonly AuditReportStatus?: string;
  readonly S3BucketName?: string;
  readonly S3Key?: string;
  readonly CreatedAt?: Date;
}

export interface DescribeCertificateAuthorityRequest {
  readonly CertificateAuthorityArn: string;
}

export interface DescribeCertificateAuthorityResponse {
  readonly CertificateAuthority?: CertificateAuthority;
}

export interface EdiPartyName {
  readonly PartyName: string;
  readonly NameAssigner?: string;
}

export interface ExtendedKeyUsage {
  readonly ExtendedKeyUsageType?: string;
  readonly ExtendedKeyUsageObjectIdentifier?: string;
}

export interface Extensions {
  readonly CertificatePolicies?: [];
  readonly ExtendedKeyUsage?: [];
  readonly KeyUsage?: KeyUsage;
  readonly SubjectAlternativeNames?: [];
}

export interface GeneralName {
  readonly OtherName?: OtherName;
  readonly Rfc822Name?: string;
  readonly DnsName?: string;
  readonly DirectoryName?: ASN1Subject;
  readonly EdiPartyName?: EdiPartyName;
  readonly UniformResourceIdentifier?: string;
  readonly IpAddress?: string;
  readonly RegisteredId?: string;
}

export interface GetCertificateAuthorityCertificateRequest {
  readonly CertificateAuthorityArn: string;
}

export interface GetCertificateAuthorityCertificateResponse {
  readonly Certificate?: string;
  readonly CertificateChain?: string;
}

export interface GetCertificateAuthorityCsrRequest {
  readonly CertificateAuthorityArn: string;
}

export interface GetCertificateAuthorityCsrResponse {
  readonly Csr?: string;
}

export interface GetCertificateRequest {
  readonly CertificateAuthorityArn: string;
  readonly CertificateArn: string;
}

export interface GetCertificateResponse {
  readonly Certificate?: string;
  readonly CertificateChain?: string;
}

export interface GetPolicyRequest {
  readonly ResourceArn: string;
}

export interface GetPolicyResponse {
  readonly Policy?: string;
}

export interface ImportCertificateAuthorityCertificateRequest {
  readonly CertificateAuthorityArn: string;
  readonly Certificate: unknown;
  readonly CertificateChain?: unknown;
}

export interface InvalidArgsException {
  readonly message?: string;
}

export interface InvalidArnException {
  readonly message?: string;
}

export interface InvalidNextTokenException {
  readonly message?: string;
}

export interface InvalidPolicyException {
  readonly message?: string;
}

export interface InvalidRequestException {
  readonly message?: string;
}

export interface InvalidStateException {
  readonly message?: string;
}

export interface InvalidTagException {
  readonly message?: string;
}

export interface IssueCertificateRequest {
  readonly ApiPassthrough?: ApiPassthrough;
  readonly CertificateAuthorityArn: string;
  readonly Csr: unknown;
  readonly SigningAlgorithm: string;
  readonly TemplateArn?: string;
  readonly Validity: Validity;
  readonly ValidityNotBefore?: Validity;
  readonly IdempotencyToken?: string;
}

export interface IssueCertificateResponse {
  readonly CertificateArn?: string;
}

export interface KeyUsage {
  readonly DigitalSignature?: boolean;
  readonly NonRepudiation?: boolean;
  readonly KeyEncipherment?: boolean;
  readonly DataEncipherment?: boolean;
  readonly KeyAgreement?: boolean;
  readonly KeyCertSign?: boolean;
  readonly CRLSign?: boolean;
  readonly EncipherOnly?: boolean;
  readonly DecipherOnly?: boolean;
}

export interface LimitExceededException {
  readonly message?: string;
}

export interface ListCertificateAuthoritiesRequest {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly ResourceOwner?: string;
}

export interface ListCertificateAuthoritiesResponse {
  readonly CertificateAuthorities?: [];
  readonly NextToken?: string;
}

export interface ListPermissionsRequest {
  readonly CertificateAuthorityArn: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListPermissionsResponse {
  readonly Permissions?: [];
  readonly NextToken?: string;
}

export interface ListTagsRequest {
  readonly CertificateAuthorityArn: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListTagsResponse {
  readonly Tags?: [];
  readonly NextToken?: string;
}

export interface LockoutPreventedException {
  readonly message?: string;
}

export interface MalformedCSRException {
  readonly message?: string;
}

export interface MalformedCertificateException {
  readonly message?: string;
}

export interface OcspConfiguration {
  readonly Enabled: boolean;
  readonly OcspCustomCname?: string;
}

export interface OtherName {
  readonly TypeId: string;
  readonly Value: string;
}

export interface Permission {
  readonly CertificateAuthorityArn?: string;
  readonly CreatedAt?: Date;
  readonly Principal?: string;
  readonly SourceAccount?: string;
  readonly Actions?: [];
  readonly Policy?: string;
}

export interface PermissionAlreadyExistsException {
  readonly message?: string;
}

export interface PolicyInformation {
  readonly CertPolicyId: string;
  readonly PolicyQualifiers?: [];
}

export interface PolicyQualifierInfo {
  readonly PolicyQualifierId: string;
  readonly Qualifier: Qualifier;
}

export interface PutPolicyRequest {
  readonly ResourceArn: string;
  readonly Policy: string;
}

export interface Qualifier {
  readonly CpsUri: string;
}

export interface RequestAlreadyProcessedException {
  readonly message?: string;
}

export interface RequestFailedException {
  readonly message?: string;
}

export interface RequestInProgressException {
  readonly message?: string;
}

export interface ResourceNotFoundException {
  readonly message?: string;
}

export interface RestoreCertificateAuthorityRequest {
  readonly CertificateAuthorityArn: string;
}

export interface RevocationConfiguration {
  readonly CrlConfiguration?: CrlConfiguration;
  readonly OcspConfiguration?: OcspConfiguration;
}

export interface RevokeCertificateRequest {
  readonly CertificateAuthorityArn: string;
  readonly CertificateSerial: string;
  readonly RevocationReason: string;
}

export interface Tag {
  readonly Key: string;
  readonly Value?: string;
}

export interface TagCertificateAuthorityRequest {
  readonly CertificateAuthorityArn: string;
  readonly Tags: [];
}

export interface TooManyTagsException {
  readonly message?: string;
}

export interface UntagCertificateAuthorityRequest {
  readonly CertificateAuthorityArn: string;
  readonly Tags: [];
}

export interface UpdateCertificateAuthorityRequest {
  readonly CertificateAuthorityArn: string;
  readonly RevocationConfiguration?: RevocationConfiguration;
  readonly Status?: string;
}

export interface Validity {
  readonly Value: number;
  readonly Type: string;
}


