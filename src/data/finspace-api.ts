/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CreateChangeset {
  readonly clientToken?: string;
  readonly datasetId: string;
  readonly changeType: string;
  readonly sourceParams: {[key: string]: any};
  readonly formatParams: {[key: string]: any};
}

export interface CreateDataView {
  readonly clientToken?: string;
  readonly datasetId: string;
  readonly autoUpdate?: boolean;
  readonly sortColumns?: [];
  readonly partitionColumns?: [];
  readonly asOfTimestamp?: number;
  readonly destinationTypeParams: DataViewDestinationTypeParams;
}

export interface CreateDataset {
  readonly clientToken?: string;
  readonly datasetTitle: string;
  readonly kind: string;
  readonly datasetDescription: string;
  readonly ownerInfo?: DatasetOwnerInfo;
  readonly permissionGroupParams: PermissionGroupParams;
  readonly alias: string;
  readonly schemaDefinition?: SchemaUnion;
}

export interface DeleteDataset {
  readonly clientToken?: string;
  readonly datasetId: string;
}

export interface GetChangeset {
  readonly datasetId: string;
  readonly changesetId: string;
}

export interface GetDataView {
  readonly dataViewId: string;
  readonly datasetId: string;
}

export interface GetDataset {
  readonly datasetId: string;
}

export interface GetProgrammaticAccessCredentials {
  readonly durationInMinutes?: number;
  readonly environmentId: string;
}

export interface GetWorkingLocation {
  readonly locationType?: string;
}

export interface ListChangesets {
  readonly datasetId: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListDataViews {
  readonly datasetId: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListDatasets {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface UpdateChangeset {
  readonly clientToken?: string;
  readonly datasetId: string;
  readonly changesetId: string;
  readonly sourceParams: {[key: string]: any};
  readonly formatParams: {[key: string]: any};
}

export interface UpdateDataset {
  readonly clientToken?: string;
  readonly datasetId: string;
  readonly datasetTitle: string;
  readonly kind: string;
  readonly datasetDescription?: string;
  readonly alias: string;
  readonly schemaDefinition?: SchemaUnion;
}

export interface AccessDeniedException {
  readonly message?: string;
}

export interface ChangesetErrorInfo {
  readonly errorMessage?: string;
  readonly errorCategory?: string;
}

export interface ChangesetSummary {
  readonly changesetId?: string;
  readonly changesetArn?: string;
  readonly datasetId?: string;
  readonly changeType?: string;
  readonly sourceParams?: {[key: string]: any};
  readonly formatParams?: {[key: string]: any};
  readonly createTime?: number;
  readonly status?: string;
  readonly errorInfo?: ChangesetErrorInfo;
  readonly activeUntilTimestamp?: number;
  readonly updatesChangesetId?: string;
  readonly updatedByChangesetId?: string;
}

export interface ColumnDefinition {
  readonly dataType?: string;
  readonly columnName?: string;
  readonly columnDescription?: string;
}

export interface ConflictException {
  readonly message?: string;
}

export interface CreateChangesetRequest {
  readonly clientToken?: string;
  readonly datasetId: string;
  readonly changeType: string;
  readonly sourceParams: {[key: string]: any};
  readonly formatParams: {[key: string]: any};
}

export interface CreateChangesetResponse {
  readonly datasetId?: string;
  readonly changesetId?: string;
}

export interface CreateDataViewRequest {
  readonly clientToken?: string;
  readonly datasetId: string;
  readonly autoUpdate?: boolean;
  readonly sortColumns?: [];
  readonly partitionColumns?: [];
  readonly asOfTimestamp?: number;
  readonly destinationTypeParams: DataViewDestinationTypeParams;
}

export interface CreateDataViewResponse {
  readonly datasetId?: string;
  readonly dataViewId?: string;
}

export interface CreateDatasetRequest {
  readonly clientToken?: string;
  readonly datasetTitle: string;
  readonly kind: string;
  readonly datasetDescription: string;
  readonly ownerInfo?: DatasetOwnerInfo;
  readonly permissionGroupParams: PermissionGroupParams;
  readonly alias: string;
  readonly schemaDefinition?: SchemaUnion;
}

export interface CreateDatasetResponse {
  readonly datasetId?: string;
}

export interface Credentials {
  readonly accessKeyId?: string;
  readonly secretAccessKey?: string;
  readonly sessionToken?: string;
}

export interface DataViewDestinationTypeParams {
  readonly destinationType: string;
}

export interface DataViewErrorInfo {
  readonly errorMessage?: string;
  readonly errorCategory?: string;
}

export interface DataViewSummary {
  readonly dataViewId?: string;
  readonly dataViewArn?: string;
  readonly datasetId?: string;
  readonly asOfTimestamp?: number;
  readonly partitionColumns?: [];
  readonly sortColumns?: [];
  readonly status?: string;
  readonly errorInfo?: DataViewErrorInfo;
  readonly destinationTypeProperties?: DataViewDestinationTypeParams;
  readonly autoUpdate?: boolean;
  readonly createTime?: number;
  readonly lastModifiedTime?: number;
}

export interface Dataset {
  readonly datasetId?: string;
  readonly datasetArn?: string;
  readonly datasetTitle?: string;
  readonly kind?: string;
  readonly datasetDescription?: string;
  readonly ownerInfo?: DatasetOwnerInfo;
  readonly createTime?: number;
  readonly lastModifiedTime?: number;
  readonly schemaDefinition?: SchemaUnion;
  readonly alias?: string;
}

export interface DatasetOwnerInfo {
  readonly name?: string;
  readonly phoneNumber?: string;
  readonly email?: string;
}

export interface DeleteDatasetRequest {
  readonly clientToken?: string;
  readonly datasetId: string;
}

export interface DeleteDatasetResponse {
  readonly datasetId?: string;
}

export interface GetChangesetRequest {
  readonly datasetId: string;
  readonly changesetId: string;
}

export interface GetChangesetResponse {
  readonly changesetId?: string;
  readonly changesetArn?: string;
  readonly datasetId?: string;
  readonly changeType?: string;
  readonly sourceParams?: {[key: string]: any};
  readonly formatParams?: {[key: string]: any};
  readonly createTime?: number;
  readonly status?: string;
  readonly errorInfo?: ChangesetErrorInfo;
  readonly activeUntilTimestamp?: number;
  readonly updatesChangesetId?: string;
  readonly updatedByChangesetId?: string;
}

export interface GetDataViewRequest {
  readonly dataViewId: string;
  readonly datasetId: string;
}

export interface GetDataViewResponse {
  readonly autoUpdate?: boolean;
  readonly partitionColumns?: [];
  readonly datasetId?: string;
  readonly asOfTimestamp?: number;
  readonly errorInfo?: DataViewErrorInfo;
  readonly lastModifiedTime?: number;
  readonly createTime?: number;
  readonly sortColumns?: [];
  readonly dataViewId?: string;
  readonly dataViewArn?: string;
  readonly destinationTypeParams?: DataViewDestinationTypeParams;
  readonly status?: string;
}

export interface GetDatasetRequest {
  readonly datasetId: string;
}

export interface GetDatasetResponse {
  readonly datasetId?: string;
  readonly datasetArn?: string;
  readonly datasetTitle?: string;
  readonly kind?: string;
  readonly datasetDescription?: string;
  readonly createTime?: number;
  readonly lastModifiedTime?: number;
  readonly schemaDefinition?: SchemaUnion;
  readonly alias?: string;
  readonly status?: string;
}

export interface GetProgrammaticAccessCredentialsRequest {
  readonly durationInMinutes?: number;
  readonly environmentId: string;
}

export interface GetProgrammaticAccessCredentialsResponse {
  readonly credentials?: Credentials;
  readonly durationInMinutes?: number;
}

export interface GetWorkingLocationRequest {
  readonly locationType?: string;
}

export interface GetWorkingLocationResponse {
  readonly s3Uri?: string;
  readonly s3Path?: string;
  readonly s3Bucket?: string;
}

export interface InternalServerException {
  readonly message?: string;
}

export interface LimitExceededException {
  readonly message?: string;
}

export interface ListChangesetsRequest {
  readonly datasetId: string;
  readonly maxResults?: number;
  readonly nextToken?: string;
}

export interface ListChangesetsResponse {
  readonly changesets?: [];
  readonly nextToken?: string;
}

export interface ListDataViewsRequest {
  readonly datasetId: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListDataViewsResponse {
  readonly nextToken?: string;
  readonly dataViews?: [];
}

export interface ListDatasetsRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListDatasetsResponse {
  readonly datasets?: [];
  readonly nextToken?: string;
}

export interface PermissionGroupParams {
  readonly permissionGroupId?: string;
  readonly datasetPermissions?: [];
}

export interface ResourceNotFoundException {
  readonly message?: string;
}

export interface ResourcePermission {
  readonly permission?: string;
}

export interface SchemaDefinition {
  readonly columns?: [];
  readonly primaryKeyColumns?: [];
}

export interface SchemaUnion {
  readonly tabularSchemaConfig?: SchemaDefinition;
}

export interface ThrottlingException {
}

export interface UpdateChangesetRequest {
  readonly clientToken?: string;
  readonly datasetId: string;
  readonly changesetId: string;
  readonly sourceParams: {[key: string]: any};
  readonly formatParams: {[key: string]: any};
}

export interface UpdateChangesetResponse {
  readonly changesetId?: string;
  readonly datasetId?: string;
}

export interface UpdateDatasetRequest {
  readonly clientToken?: string;
  readonly datasetId: string;
  readonly datasetTitle: string;
  readonly kind: string;
  readonly datasetDescription?: string;
  readonly alias: string;
  readonly schemaDefinition?: SchemaUnion;
}

export interface UpdateDatasetResponse {
  readonly datasetId?: string;
}

export interface ValidationException {
  readonly message?: string;
}


