/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CancelOrder {
  readonly OrderId: string;
}
export interface CreateOrder {
  readonly OutpostIdentifier: string;
  readonly LineItems: [];
  readonly PaymentOption: string;
  readonly PaymentTerm: string;
}
export interface CreateOutpost {
  readonly Name: string;
  readonly Description: string;
  readonly SiteId: string;
  readonly AvailabilityZone: string;
  readonly AvailabilityZoneId: string;
  readonly Tags: {[key: string]: any};
  readonly SupportedHardwareType: string;
}
export interface CreateSite {
  readonly Name: string;
  readonly Description: string;
  readonly Notes: string;
  readonly Tags: {[key: string]: any};
  readonly OperatingAddress: Address;
  readonly ShippingAddress: Address;
  readonly RackPhysicalProperties: RackPhysicalProperties;
}
export interface DeleteOutpost {
  readonly OutpostId: string;
}
export interface DeleteSite {
  readonly SiteId: string;
}
export interface GetCatalogItem {
  readonly CatalogItemId: string;
}
export interface GetOrder {
  readonly OrderId: string;
}
export interface GetOutpost {
  readonly OutpostId: string;
}
export interface GetOutpostInstanceTypes {
  readonly OutpostId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface GetSite {
  readonly SiteId: string;
}
export interface GetSiteAddress {
  readonly SiteId: string;
  readonly AddressType: string;
}
export interface ListCatalogItems {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly ItemClassFilter: [];
  readonly SupportedStorageFilter: [];
  readonly EC2FamilyFilter: [];
}
export interface ListOrders {
  readonly OutpostIdentifierFilter: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListOutposts {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly LifeCycleStatusFilter: [];
  readonly AvailabilityZoneFilter: [];
  readonly AvailabilityZoneIdFilter: [];
}
export interface ListSites {
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListTagsForResource {
  readonly ResourceArn: string;
}
export interface TagResource {
  readonly ResourceArn: string;
  readonly Tags: {[key: string]: any};
}
export interface UntagResource {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}
export interface UpdateOutpost {
  readonly OutpostId: string;
  readonly Name: string;
  readonly Description: string;
  readonly SupportedHardwareType: string;
}
export interface UpdateSite {
  readonly SiteId: string;
  readonly Name: string;
  readonly Description: string;
  readonly Notes: string;
}
export interface UpdateSiteAddress {
  readonly SiteId: string;
  readonly AddressType: string;
  readonly Address: Address;
}
export interface UpdateSiteRackPhysicalProperties {
  readonly SiteId: string;
  readonly PowerDrawKva: string;
  readonly PowerPhase: string;
  readonly PowerConnector: string;
  readonly PowerFeedDrop: string;
  readonly UplinkGbps: string;
  readonly UplinkCount: string;
  readonly FiberOpticCableType: string;
  readonly OpticalStandard: string;
  readonly MaximumSupportedWeightLbs: string;
}



interface AccessDeniedException {
  readonly Message: string;
}

interface Address {
  readonly ContactName: string;
  readonly ContactPhoneNumber: string;
  readonly AddressLine1: string;
  readonly AddressLine2: string;
  readonly AddressLine3: string;
  readonly City: string;
  readonly StateOrRegion: string;
  readonly DistrictOrCounty: string;
  readonly PostalCode: string;
  readonly CountryCode: string;
  readonly Municipality: string;
}

interface CancelOrderInput {
  readonly OrderId: string;
}

interface CancelOrderOutput {
}

interface CatalogItem {
  readonly CatalogItemId: string;
  readonly ItemStatus: string;
  readonly EC2Capacities: [];
  readonly PowerKva: unknown;
  readonly WeightLbs: number;
  readonly SupportedUplinkGbps: [];
  readonly SupportedStorage: [];
}

interface ConflictException {
  readonly Message: string;
  readonly ResourceId: string;
  readonly ResourceType: string;
}

interface CreateOrderInput {
  readonly OutpostIdentifier: string;
  readonly LineItems: [];
  readonly PaymentOption: string;
  readonly PaymentTerm: string;
}

interface CreateOrderOutput {
  readonly Order: Order;
}

interface CreateOutpostInput {
  readonly Name: string;
  readonly Description: string;
  readonly SiteId: string;
  readonly AvailabilityZone: string;
  readonly AvailabilityZoneId: string;
  readonly Tags: {[key: string]: any};
  readonly SupportedHardwareType: string;
}

interface CreateOutpostOutput {
  readonly Outpost: Outpost;
}

interface CreateSiteInput {
  readonly Name: string;
  readonly Description: string;
  readonly Notes: string;
  readonly Tags: {[key: string]: any};
  readonly OperatingAddress: Address;
  readonly ShippingAddress: Address;
  readonly RackPhysicalProperties: RackPhysicalProperties;
}

interface CreateSiteOutput {
  readonly Site: Site;
}

interface DeleteOutpostInput {
  readonly OutpostId: string;
}

interface DeleteOutpostOutput {
}

interface DeleteSiteInput {
  readonly SiteId: string;
}

interface DeleteSiteOutput {
}

interface EC2Capacity {
  readonly Family: string;
  readonly MaxSize: string;
  readonly Quantity: string;
}

interface GetCatalogItemInput {
  readonly CatalogItemId: string;
}

interface GetCatalogItemOutput {
  readonly CatalogItem: CatalogItem;
}

interface GetOrderInput {
  readonly OrderId: string;
}

interface GetOrderOutput {
  readonly Order: Order;
}

interface GetOutpostInput {
  readonly OutpostId: string;
}

interface GetOutpostInstanceTypesInput {
  readonly OutpostId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface GetOutpostInstanceTypesOutput {
  readonly InstanceTypes: [];
  readonly NextToken: string;
  readonly OutpostId: string;
  readonly OutpostArn: string;
}

interface GetOutpostOutput {
  readonly Outpost: Outpost;
}

interface GetSiteAddressInput {
  readonly SiteId: string;
  readonly AddressType: string;
}

interface GetSiteAddressOutput {
  readonly SiteId: string;
  readonly AddressType: string;
  readonly Address: Address;
}

interface GetSiteInput {
  readonly SiteId: string;
}

interface GetSiteOutput {
  readonly Site: Site;
}

interface InstanceTypeItem {
  readonly InstanceType: string;
}

interface InternalServerException {
  readonly Message: string;
}

interface LineItem {
  readonly CatalogItemId: string;
  readonly LineItemId: string;
  readonly Quantity: number;
  readonly Status: string;
}

interface LineItemRequest {
  readonly CatalogItemId: string;
  readonly Quantity: number;
}

interface ListCatalogItemsInput {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly ItemClassFilter: [];
  readonly SupportedStorageFilter: [];
  readonly EC2FamilyFilter: [];
}

interface ListCatalogItemsOutput {
  readonly CatalogItems: [];
  readonly NextToken: string;
}

interface ListOrdersInput {
  readonly OutpostIdentifierFilter: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListOrdersOutput {
  readonly Orders: [];
  readonly NextToken: string;
}

interface ListOutpostsInput {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly LifeCycleStatusFilter: [];
  readonly AvailabilityZoneFilter: [];
  readonly AvailabilityZoneIdFilter: [];
}

interface ListOutpostsOutput {
  readonly Outposts: [];
  readonly NextToken: string;
}

interface ListSitesInput {
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListSitesOutput {
  readonly Sites: [];
  readonly NextToken: string;
}

interface ListTagsForResourceRequest {
  readonly ResourceArn: string;
}

interface ListTagsForResourceResponse {
  readonly Tags: {[key: string]: any};
}

interface NotFoundException {
  readonly Message: string;
}

interface Order {
  readonly OutpostId: string;
  readonly OrderId: string;
  readonly Status: string;
  readonly LineItems: [];
  readonly PaymentOption: string;
  readonly OrderSubmissionDate: Date;
  readonly OrderFulfilledDate: Date;
}

interface OrderSummary {
  readonly OutpostId: string;
  readonly OrderId: string;
  readonly OrderType: string;
  readonly Status: string;
  readonly LineItemCountsByStatus: {[key: string]: any};
  readonly OrderSubmissionDate: Date;
  readonly OrderFulfilledDate: Date;
}

interface Outpost {
  readonly OutpostId: string;
  readonly OwnerId: string;
  readonly OutpostArn: string;
  readonly SiteId: string;
  readonly Name: string;
  readonly Description: string;
  readonly LifeCycleStatus: string;
  readonly AvailabilityZone: string;
  readonly AvailabilityZoneId: string;
  readonly Tags: {[key: string]: any};
  readonly SiteArn: string;
  readonly SupportedHardwareType: string;
}

interface RackPhysicalProperties {
  readonly PowerDrawKva: string;
  readonly PowerPhase: string;
  readonly PowerConnector: string;
  readonly PowerFeedDrop: string;
  readonly UplinkGbps: string;
  readonly UplinkCount: string;
  readonly FiberOpticCableType: string;
  readonly OpticalStandard: string;
  readonly MaximumSupportedWeightLbs: string;
}

interface ServiceQuotaExceededException {
  readonly Message: string;
}

interface Site {
  readonly SiteId: string;
  readonly AccountId: string;
  readonly Name: string;
  readonly Description: string;
  readonly Tags: {[key: string]: any};
  readonly SiteArn: string;
  readonly Notes: string;
  readonly OperatingAddressCountryCode: string;
  readonly OperatingAddressStateOrRegion: string;
  readonly OperatingAddressCity: string;
  readonly RackPhysicalProperties: RackPhysicalProperties;
}

interface TagResourceRequest {
  readonly ResourceArn: string;
  readonly Tags: {[key: string]: any};
}

interface TagResourceResponse {
}

interface UntagResourceRequest {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}

interface UntagResourceResponse {
}

interface UpdateOutpostInput {
  readonly OutpostId: string;
  readonly Name: string;
  readonly Description: string;
  readonly SupportedHardwareType: string;
}

interface UpdateOutpostOutput {
  readonly Outpost: Outpost;
}

interface UpdateSiteAddressInput {
  readonly SiteId: string;
  readonly AddressType: string;
  readonly Address: Address;
}

interface UpdateSiteAddressOutput {
  readonly AddressType: string;
  readonly Address: Address;
}

interface UpdateSiteInput {
  readonly SiteId: string;
  readonly Name: string;
  readonly Description: string;
  readonly Notes: string;
}

interface UpdateSiteOutput {
  readonly Site: Site;
}

interface UpdateSiteRackPhysicalPropertiesInput {
  readonly SiteId: string;
  readonly PowerDrawKva: string;
  readonly PowerPhase: string;
  readonly PowerConnector: string;
  readonly PowerFeedDrop: string;
  readonly UplinkGbps: string;
  readonly UplinkCount: string;
  readonly FiberOpticCableType: string;
  readonly OpticalStandard: string;
  readonly MaximumSupportedWeightLbs: string;
}

interface UpdateSiteRackPhysicalPropertiesOutput {
  readonly Site: Site;
}

interface ValidationException {
  readonly Message: string;
}

