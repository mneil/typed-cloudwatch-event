/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface SendCommand {
  readonly SessionToken?: string;
  readonly StartSession?: StartSessionRequest;
  readonly StartTransaction?: StartTransactionRequest;
  readonly EndSession?: EndSessionRequest;
  readonly CommitTransaction?: CommitTransactionRequest;
  readonly AbortTransaction?: AbortTransactionRequest;
  readonly ExecuteStatement?: ExecuteStatementRequest;
  readonly FetchPage?: FetchPageRequest;
}

export interface AbortTransactionRequest {
}

export interface AbortTransactionResult {
  readonly TimingInformation?: TimingInformation;
}

export interface BadRequestException {
  readonly Message?: string;
  readonly Code?: string;
}

export interface CapacityExceededException {
  readonly Message?: string;
}

export interface CommitTransactionRequest {
  readonly TransactionId: string;
  readonly CommitDigest: unknown;
}

export interface CommitTransactionResult {
  readonly TransactionId?: string;
  readonly CommitDigest?: unknown;
  readonly TimingInformation?: TimingInformation;
  readonly ConsumedIOs?: IOUsage;
}

export interface EndSessionRequest {
}

export interface EndSessionResult {
  readonly TimingInformation?: TimingInformation;
}

export interface ExecuteStatementRequest {
  readonly TransactionId: string;
  readonly Statement: string;
  readonly Parameters?: [];
}

export interface ExecuteStatementResult {
  readonly FirstPage?: Page;
  readonly TimingInformation?: TimingInformation;
  readonly ConsumedIOs?: IOUsage;
}

export interface FetchPageRequest {
  readonly TransactionId: string;
  readonly NextPageToken: string;
}

export interface FetchPageResult {
  readonly Page?: Page;
  readonly TimingInformation?: TimingInformation;
  readonly ConsumedIOs?: IOUsage;
}

export interface IOUsage {
  readonly ReadIOs?: number;
  readonly WriteIOs?: number;
}

export interface InvalidSessionException {
  readonly Message?: string;
  readonly Code?: string;
}

export interface LimitExceededException {
  readonly Message?: string;
}

export interface OccConflictException {
  readonly Message?: string;
}

export interface Page {
  readonly Values?: [];
  readonly NextPageToken?: string;
}

export interface RateExceededException {
  readonly Message?: string;
}

export interface SendCommandRequest {
  readonly SessionToken?: string;
  readonly StartSession?: StartSessionRequest;
  readonly StartTransaction?: StartTransactionRequest;
  readonly EndSession?: EndSessionRequest;
  readonly CommitTransaction?: CommitTransactionRequest;
  readonly AbortTransaction?: AbortTransactionRequest;
  readonly ExecuteStatement?: ExecuteStatementRequest;
  readonly FetchPage?: FetchPageRequest;
}

export interface SendCommandResult {
  readonly StartSession?: StartSessionResult;
  readonly StartTransaction?: StartTransactionResult;
  readonly EndSession?: EndSessionResult;
  readonly CommitTransaction?: CommitTransactionResult;
  readonly AbortTransaction?: AbortTransactionResult;
  readonly ExecuteStatement?: ExecuteStatementResult;
  readonly FetchPage?: FetchPageResult;
}

export interface StartSessionRequest {
  readonly LedgerName: string;
}

export interface StartSessionResult {
  readonly SessionToken?: string;
  readonly TimingInformation?: TimingInformation;
}

export interface StartTransactionRequest {
}

export interface StartTransactionResult {
  readonly TransactionId?: string;
  readonly TimingInformation?: TimingInformation;
}

export interface TimingInformation {
  readonly ProcessingTimeMilliseconds?: number;
}

export interface ValueHolder {
  readonly IonBinary?: unknown;
  readonly IonText?: string;
}


