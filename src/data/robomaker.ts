/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface BatchDeleteWorlds {
  readonly worlds: [];
}

export interface BatchDescribeSimulationJob {
  readonly jobs: [];
}

export interface CancelDeploymentJob {
  readonly job: string;
}

export interface CancelSimulationJob {
  readonly job: string;
}

export interface CancelSimulationJobBatch {
  readonly batch: string;
}

export interface CancelWorldExportJob {
  readonly job: string;
}

export interface CancelWorldGenerationJob {
  readonly job: string;
}

export interface CreateDeploymentJob {
  readonly deploymentConfig?: DeploymentConfig;
  readonly clientRequestToken: string;
  readonly fleet: string;
  readonly deploymentApplicationConfigs: [];
  readonly tags?: {[key: string]: any};
}

export interface CreateFleet {
  readonly name: string;
  readonly tags?: {[key: string]: any};
}

export interface CreateRobot {
  readonly name: string;
  readonly architecture: string;
  readonly greengrassGroupId: string;
  readonly tags?: {[key: string]: any};
}

export interface CreateRobotApplication {
  readonly name: string;
  readonly sources?: [];
  readonly robotSoftwareSuite: RobotSoftwareSuite;
  readonly tags?: {[key: string]: any};
  readonly environment?: Environment;
}

export interface CreateRobotApplicationVersion {
  readonly application: string;
  readonly currentRevisionId?: string;
  readonly s3Etags?: [];
  readonly imageDigest?: string;
}

export interface CreateSimulationApplication {
  readonly name: string;
  readonly sources?: [];
  readonly simulationSoftwareSuite: SimulationSoftwareSuite;
  readonly robotSoftwareSuite: RobotSoftwareSuite;
  readonly renderingEngine?: RenderingEngine;
  readonly tags?: {[key: string]: any};
  readonly environment?: Environment;
}

export interface CreateSimulationApplicationVersion {
  readonly application: string;
  readonly currentRevisionId?: string;
  readonly s3Etags?: [];
  readonly imageDigest?: string;
}

export interface CreateSimulationJob {
  readonly clientRequestToken?: string;
  readonly outputLocation?: OutputLocation;
  readonly loggingConfig?: LoggingConfig;
  readonly maxJobDurationInSeconds: number;
  readonly iamRole: string;
  readonly failureBehavior?: string;
  readonly robotApplications?: [];
  readonly simulationApplications?: [];
  readonly dataSources?: [];
  readonly tags?: {[key: string]: any};
  readonly vpcConfig?: VPCConfig;
  readonly compute?: Compute;
}

export interface CreateWorldExportJob {
  readonly clientRequestToken?: string;
  readonly worlds: [];
  readonly outputLocation: OutputLocation;
  readonly iamRole: string;
  readonly tags?: {[key: string]: any};
}

export interface CreateWorldGenerationJob {
  readonly clientRequestToken?: string;
  readonly template: string;
  readonly worldCount: WorldCount;
  readonly tags?: {[key: string]: any};
  readonly worldTags?: {[key: string]: any};
}

export interface CreateWorldTemplate {
  readonly clientRequestToken?: string;
  readonly name?: string;
  readonly templateBody?: string;
  readonly templateLocation?: TemplateLocation;
  readonly tags?: {[key: string]: any};
}

export interface DeleteFleet {
  readonly fleet: string;
}

export interface DeleteRobot {
  readonly robot: string;
}

export interface DeleteRobotApplication {
  readonly application: string;
  readonly applicationVersion?: string;
}

export interface DeleteSimulationApplication {
  readonly application: string;
  readonly applicationVersion?: string;
}

export interface DeleteWorldTemplate {
  readonly template: string;
}

export interface DeregisterRobot {
  readonly fleet: string;
  readonly robot: string;
}

export interface DescribeDeploymentJob {
  readonly job: string;
}

export interface DescribeFleet {
  readonly fleet: string;
}

export interface DescribeRobot {
  readonly robot: string;
}

export interface DescribeRobotApplication {
  readonly application: string;
  readonly applicationVersion?: string;
}

export interface DescribeSimulationApplication {
  readonly application: string;
  readonly applicationVersion?: string;
}

export interface DescribeSimulationJob {
  readonly job: string;
}

export interface DescribeSimulationJobBatch {
  readonly batch: string;
}

export interface DescribeWorld {
  readonly world: string;
}

export interface DescribeWorldExportJob {
  readonly job: string;
}

export interface DescribeWorldGenerationJob {
  readonly job: string;
}

export interface DescribeWorldTemplate {
  readonly template: string;
}

export interface GetWorldTemplateBody {
  readonly template?: string;
  readonly generationJob?: string;
}

export interface ListDeploymentJobs {
  readonly filters?: [];
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListFleets {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly filters?: [];
}

export interface ListRobotApplications {
  readonly versionQualifier?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly filters?: [];
}

export interface ListRobots {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly filters?: [];
}

export interface ListSimulationApplications {
  readonly versionQualifier?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly filters?: [];
}

export interface ListSimulationJobBatches {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly filters?: [];
}

export interface ListSimulationJobs {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly filters?: [];
}

export interface ListTagsForResource {
  readonly resourceArn: string;
}

export interface ListWorldExportJobs {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly filters?: [];
}

export interface ListWorldGenerationJobs {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly filters?: [];
}

export interface ListWorldTemplates {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListWorlds {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly filters?: [];
}

export interface RegisterRobot {
  readonly fleet: string;
  readonly robot: string;
}

export interface RestartSimulationJob {
  readonly job: string;
}

export interface StartSimulationJobBatch {
  readonly clientRequestToken?: string;
  readonly batchPolicy?: BatchPolicy;
  readonly createSimulationJobRequests: [];
  readonly tags?: {[key: string]: any};
}

export interface SyncDeploymentJob {
  readonly clientRequestToken: string;
  readonly fleet: string;
}

export interface TagResource {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

export interface UntagResource {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface UpdateRobotApplication {
  readonly application: string;
  readonly sources?: [];
  readonly robotSoftwareSuite: RobotSoftwareSuite;
  readonly currentRevisionId?: string;
  readonly environment?: Environment;
}

export interface UpdateSimulationApplication {
  readonly application: string;
  readonly sources?: [];
  readonly simulationSoftwareSuite: SimulationSoftwareSuite;
  readonly robotSoftwareSuite: RobotSoftwareSuite;
  readonly renderingEngine?: RenderingEngine;
  readonly currentRevisionId?: string;
  readonly environment?: Environment;
}

export interface UpdateWorldTemplate {
  readonly template: string;
  readonly name?: string;
  readonly templateBody?: string;
  readonly templateLocation?: TemplateLocation;
}

export interface BatchDeleteWorldsRequest {
  readonly worlds: [];
}

export interface BatchDeleteWorldsResponse {
  readonly unprocessedWorlds?: [];
}

export interface BatchDescribeSimulationJobRequest {
  readonly jobs: [];
}

export interface BatchDescribeSimulationJobResponse {
  readonly jobs?: [];
  readonly unprocessedJobs?: [];
}

export interface BatchPolicy {
  readonly timeoutInSeconds?: number;
  readonly maxConcurrency?: number;
}

export interface CancelDeploymentJobRequest {
  readonly job: string;
}

export interface CancelDeploymentJobResponse {
}

export interface CancelSimulationJobBatchRequest {
  readonly batch: string;
}

export interface CancelSimulationJobBatchResponse {
}

export interface CancelSimulationJobRequest {
  readonly job: string;
}

export interface CancelSimulationJobResponse {
}

export interface CancelWorldExportJobRequest {
  readonly job: string;
}

export interface CancelWorldExportJobResponse {
}

export interface CancelWorldGenerationJobRequest {
  readonly job: string;
}

export interface CancelWorldGenerationJobResponse {
}

export interface Compute {
  readonly simulationUnitLimit?: number;
  readonly computeType?: string;
  readonly gpuUnitLimit?: number;
}

export interface ComputeResponse {
  readonly simulationUnitLimit?: number;
  readonly computeType?: string;
  readonly gpuUnitLimit?: number;
}

export interface ConcurrentDeploymentException {
  readonly message?: string;
}

export interface CreateDeploymentJobRequest {
  readonly deploymentConfig?: DeploymentConfig;
  readonly clientRequestToken: string;
  readonly fleet: string;
  readonly deploymentApplicationConfigs: [];
  readonly tags?: {[key: string]: any};
}

export interface CreateDeploymentJobResponse {
  readonly arn?: string;
  readonly fleet?: string;
  readonly status?: string;
  readonly deploymentApplicationConfigs?: [];
  readonly failureReason?: string;
  readonly failureCode?: string;
  readonly createdAt?: Date;
  readonly deploymentConfig?: DeploymentConfig;
  readonly tags?: {[key: string]: any};
}

export interface CreateFleetRequest {
  readonly name: string;
  readonly tags?: {[key: string]: any};
}

export interface CreateFleetResponse {
  readonly arn?: string;
  readonly name?: string;
  readonly createdAt?: Date;
  readonly tags?: {[key: string]: any};
}

export interface CreateRobotApplicationRequest {
  readonly name: string;
  readonly sources?: [];
  readonly robotSoftwareSuite: RobotSoftwareSuite;
  readonly tags?: {[key: string]: any};
  readonly environment?: Environment;
}

export interface CreateRobotApplicationResponse {
  readonly arn?: string;
  readonly name?: string;
  readonly version?: string;
  readonly sources?: [];
  readonly robotSoftwareSuite?: RobotSoftwareSuite;
  readonly lastUpdatedAt?: Date;
  readonly revisionId?: string;
  readonly tags?: {[key: string]: any};
  readonly environment?: Environment;
}

export interface CreateRobotApplicationVersionRequest {
  readonly application: string;
  readonly currentRevisionId?: string;
  readonly s3Etags?: [];
  readonly imageDigest?: string;
}

export interface CreateRobotApplicationVersionResponse {
  readonly arn?: string;
  readonly name?: string;
  readonly version?: string;
  readonly sources?: [];
  readonly robotSoftwareSuite?: RobotSoftwareSuite;
  readonly lastUpdatedAt?: Date;
  readonly revisionId?: string;
  readonly environment?: Environment;
}

export interface CreateRobotRequest {
  readonly name: string;
  readonly architecture: string;
  readonly greengrassGroupId: string;
  readonly tags?: {[key: string]: any};
}

export interface CreateRobotResponse {
  readonly arn?: string;
  readonly name?: string;
  readonly createdAt?: Date;
  readonly greengrassGroupId?: string;
  readonly architecture?: string;
  readonly tags?: {[key: string]: any};
}

export interface CreateSimulationApplicationRequest {
  readonly name: string;
  readonly sources?: [];
  readonly simulationSoftwareSuite: SimulationSoftwareSuite;
  readonly robotSoftwareSuite: RobotSoftwareSuite;
  readonly renderingEngine?: RenderingEngine;
  readonly tags?: {[key: string]: any};
  readonly environment?: Environment;
}

export interface CreateSimulationApplicationResponse {
  readonly arn?: string;
  readonly name?: string;
  readonly version?: string;
  readonly sources?: [];
  readonly simulationSoftwareSuite?: SimulationSoftwareSuite;
  readonly robotSoftwareSuite?: RobotSoftwareSuite;
  readonly renderingEngine?: RenderingEngine;
  readonly lastUpdatedAt?: Date;
  readonly revisionId?: string;
  readonly tags?: {[key: string]: any};
  readonly environment?: Environment;
}

export interface CreateSimulationApplicationVersionRequest {
  readonly application: string;
  readonly currentRevisionId?: string;
  readonly s3Etags?: [];
  readonly imageDigest?: string;
}

export interface CreateSimulationApplicationVersionResponse {
  readonly arn?: string;
  readonly name?: string;
  readonly version?: string;
  readonly sources?: [];
  readonly simulationSoftwareSuite?: SimulationSoftwareSuite;
  readonly robotSoftwareSuite?: RobotSoftwareSuite;
  readonly renderingEngine?: RenderingEngine;
  readonly lastUpdatedAt?: Date;
  readonly revisionId?: string;
  readonly environment?: Environment;
}

export interface CreateSimulationJobRequest {
  readonly clientRequestToken?: string;
  readonly outputLocation?: OutputLocation;
  readonly loggingConfig?: LoggingConfig;
  readonly maxJobDurationInSeconds: number;
  readonly iamRole: string;
  readonly failureBehavior?: string;
  readonly robotApplications?: [];
  readonly simulationApplications?: [];
  readonly dataSources?: [];
  readonly tags?: {[key: string]: any};
  readonly vpcConfig?: VPCConfig;
  readonly compute?: Compute;
}

export interface CreateSimulationJobResponse {
  readonly arn?: string;
  readonly status?: string;
  readonly lastStartedAt?: Date;
  readonly lastUpdatedAt?: Date;
  readonly failureBehavior?: string;
  readonly failureCode?: string;
  readonly clientRequestToken?: string;
  readonly outputLocation?: OutputLocation;
  readonly loggingConfig?: LoggingConfig;
  readonly maxJobDurationInSeconds?: number;
  readonly simulationTimeMillis?: number;
  readonly iamRole?: string;
  readonly robotApplications?: [];
  readonly simulationApplications?: [];
  readonly dataSources?: [];
  readonly tags?: {[key: string]: any};
  readonly vpcConfig?: VPCConfigResponse;
  readonly compute?: ComputeResponse;
}

export interface CreateWorldExportJobRequest {
  readonly clientRequestToken?: string;
  readonly worlds: [];
  readonly outputLocation: OutputLocation;
  readonly iamRole: string;
  readonly tags?: {[key: string]: any};
}

export interface CreateWorldExportJobResponse {
  readonly arn?: string;
  readonly status?: string;
  readonly createdAt?: Date;
  readonly failureCode?: string;
  readonly clientRequestToken?: string;
  readonly outputLocation?: OutputLocation;
  readonly iamRole?: string;
  readonly tags?: {[key: string]: any};
}

export interface CreateWorldGenerationJobRequest {
  readonly clientRequestToken?: string;
  readonly template: string;
  readonly worldCount: WorldCount;
  readonly tags?: {[key: string]: any};
  readonly worldTags?: {[key: string]: any};
}

export interface CreateWorldGenerationJobResponse {
  readonly arn?: string;
  readonly status?: string;
  readonly createdAt?: Date;
  readonly failureCode?: string;
  readonly clientRequestToken?: string;
  readonly template?: string;
  readonly worldCount?: WorldCount;
  readonly tags?: {[key: string]: any};
  readonly worldTags?: {[key: string]: any};
}

export interface CreateWorldTemplateRequest {
  readonly clientRequestToken?: string;
  readonly name?: string;
  readonly templateBody?: string;
  readonly templateLocation?: TemplateLocation;
  readonly tags?: {[key: string]: any};
}

export interface CreateWorldTemplateResponse {
  readonly arn?: string;
  readonly clientRequestToken?: string;
  readonly createdAt?: Date;
  readonly name?: string;
  readonly tags?: {[key: string]: any};
}

export interface DataSource {
  readonly name?: string;
  readonly s3Bucket?: string;
  readonly s3Keys?: [];
  readonly type?: string;
  readonly destination?: string;
}

export interface DataSourceConfig {
  readonly name: string;
  readonly s3Bucket: string;
  readonly s3Keys: [];
  readonly type?: string;
  readonly destination?: string;
}

export interface DeleteFleetRequest {
  readonly fleet: string;
}

export interface DeleteFleetResponse {
}

export interface DeleteRobotApplicationRequest {
  readonly application: string;
  readonly applicationVersion?: string;
}

export interface DeleteRobotApplicationResponse {
}

export interface DeleteRobotRequest {
  readonly robot: string;
}

export interface DeleteRobotResponse {
}

export interface DeleteSimulationApplicationRequest {
  readonly application: string;
  readonly applicationVersion?: string;
}

export interface DeleteSimulationApplicationResponse {
}

export interface DeleteWorldTemplateRequest {
  readonly template: string;
}

export interface DeleteWorldTemplateResponse {
}

export interface DeploymentApplicationConfig {
  readonly application: string;
  readonly applicationVersion: string;
  readonly launchConfig: DeploymentLaunchConfig;
}

export interface DeploymentConfig {
  readonly concurrentDeploymentPercentage?: number;
  readonly failureThresholdPercentage?: number;
  readonly robotDeploymentTimeoutInSeconds?: number;
  readonly downloadConditionFile?: S3Object;
}

export interface DeploymentJob {
  readonly arn?: string;
  readonly fleet?: string;
  readonly status?: string;
  readonly deploymentApplicationConfigs?: [];
  readonly deploymentConfig?: DeploymentConfig;
  readonly failureReason?: string;
  readonly failureCode?: string;
  readonly createdAt?: Date;
}

export interface DeploymentLaunchConfig {
  readonly packageName: string;
  readonly preLaunchFile?: string;
  readonly launchFile: string;
  readonly postLaunchFile?: string;
  readonly environmentVariables?: {[key: string]: any};
}

export interface DeregisterRobotRequest {
  readonly fleet: string;
  readonly robot: string;
}

export interface DeregisterRobotResponse {
  readonly fleet?: string;
  readonly robot?: string;
}

export interface DescribeDeploymentJobRequest {
  readonly job: string;
}

export interface DescribeDeploymentJobResponse {
  readonly arn?: string;
  readonly fleet?: string;
  readonly status?: string;
  readonly deploymentConfig?: DeploymentConfig;
  readonly deploymentApplicationConfigs?: [];
  readonly failureReason?: string;
  readonly failureCode?: string;
  readonly createdAt?: Date;
  readonly robotDeploymentSummary?: [];
  readonly tags?: {[key: string]: any};
}

export interface DescribeFleetRequest {
  readonly fleet: string;
}

export interface DescribeFleetResponse {
  readonly name?: string;
  readonly arn?: string;
  readonly robots?: [];
  readonly createdAt?: Date;
  readonly lastDeploymentStatus?: string;
  readonly lastDeploymentJob?: string;
  readonly lastDeploymentTime?: Date;
  readonly tags?: {[key: string]: any};
}

export interface DescribeRobotApplicationRequest {
  readonly application: string;
  readonly applicationVersion?: string;
}

export interface DescribeRobotApplicationResponse {
  readonly arn?: string;
  readonly name?: string;
  readonly version?: string;
  readonly sources?: [];
  readonly robotSoftwareSuite?: RobotSoftwareSuite;
  readonly revisionId?: string;
  readonly lastUpdatedAt?: Date;
  readonly tags?: {[key: string]: any};
  readonly environment?: Environment;
  readonly imageDigest?: string;
}

export interface DescribeRobotRequest {
  readonly robot: string;
}

export interface DescribeRobotResponse {
  readonly arn?: string;
  readonly name?: string;
  readonly fleetArn?: string;
  readonly status?: string;
  readonly greengrassGroupId?: string;
  readonly createdAt?: Date;
  readonly architecture?: string;
  readonly lastDeploymentJob?: string;
  readonly lastDeploymentTime?: Date;
  readonly tags?: {[key: string]: any};
}

export interface DescribeSimulationApplicationRequest {
  readonly application: string;
  readonly applicationVersion?: string;
}

export interface DescribeSimulationApplicationResponse {
  readonly arn?: string;
  readonly name?: string;
  readonly version?: string;
  readonly sources?: [];
  readonly simulationSoftwareSuite?: SimulationSoftwareSuite;
  readonly robotSoftwareSuite?: RobotSoftwareSuite;
  readonly renderingEngine?: RenderingEngine;
  readonly revisionId?: string;
  readonly lastUpdatedAt?: Date;
  readonly tags?: {[key: string]: any};
  readonly environment?: Environment;
  readonly imageDigest?: string;
}

export interface DescribeSimulationJobBatchRequest {
  readonly batch: string;
}

export interface DescribeSimulationJobBatchResponse {
  readonly arn?: string;
  readonly status?: string;
  readonly lastUpdatedAt?: Date;
  readonly createdAt?: Date;
  readonly clientRequestToken?: string;
  readonly batchPolicy?: BatchPolicy;
  readonly failureCode?: string;
  readonly failureReason?: string;
  readonly failedRequests?: [];
  readonly pendingRequests?: [];
  readonly createdRequests?: [];
  readonly tags?: {[key: string]: any};
}

export interface DescribeSimulationJobRequest {
  readonly job: string;
}

export interface DescribeSimulationJobResponse {
  readonly arn?: string;
  readonly name?: string;
  readonly status?: string;
  readonly lastStartedAt?: Date;
  readonly lastUpdatedAt?: Date;
  readonly failureBehavior?: string;
  readonly failureCode?: string;
  readonly failureReason?: string;
  readonly clientRequestToken?: string;
  readonly outputLocation?: OutputLocation;
  readonly loggingConfig?: LoggingConfig;
  readonly maxJobDurationInSeconds?: number;
  readonly simulationTimeMillis?: number;
  readonly iamRole?: string;
  readonly robotApplications?: [];
  readonly simulationApplications?: [];
  readonly dataSources?: [];
  readonly tags?: {[key: string]: any};
  readonly vpcConfig?: VPCConfigResponse;
  readonly networkInterface?: NetworkInterface;
  readonly compute?: ComputeResponse;
}

export interface DescribeWorldExportJobRequest {
  readonly job: string;
}

export interface DescribeWorldExportJobResponse {
  readonly arn?: string;
  readonly status?: string;
  readonly createdAt?: Date;
  readonly failureCode?: string;
  readonly failureReason?: string;
  readonly clientRequestToken?: string;
  readonly worlds?: [];
  readonly outputLocation?: OutputLocation;
  readonly iamRole?: string;
  readonly tags?: {[key: string]: any};
}

export interface DescribeWorldGenerationJobRequest {
  readonly job: string;
}

export interface DescribeWorldGenerationJobResponse {
  readonly arn?: string;
  readonly status?: string;
  readonly createdAt?: Date;
  readonly failureCode?: string;
  readonly failureReason?: string;
  readonly clientRequestToken?: string;
  readonly template?: string;
  readonly worldCount?: WorldCount;
  readonly finishedWorldsSummary?: FinishedWorldsSummary;
  readonly tags?: {[key: string]: any};
  readonly worldTags?: {[key: string]: any};
}

export interface DescribeWorldRequest {
  readonly world: string;
}

export interface DescribeWorldResponse {
  readonly arn?: string;
  readonly generationJob?: string;
  readonly template?: string;
  readonly createdAt?: Date;
  readonly tags?: {[key: string]: any};
  readonly worldDescriptionBody?: string;
}

export interface DescribeWorldTemplateRequest {
  readonly template: string;
}

export interface DescribeWorldTemplateResponse {
  readonly arn?: string;
  readonly clientRequestToken?: string;
  readonly name?: string;
  readonly createdAt?: Date;
  readonly lastUpdatedAt?: Date;
  readonly tags?: {[key: string]: any};
  readonly version?: string;
}

export interface Environment {
  readonly uri?: string;
}

export interface FailedCreateSimulationJobRequest {
  readonly request?: SimulationJobRequest;
  readonly failureReason?: string;
  readonly failureCode?: string;
  readonly failedAt?: Date;
}

export interface FailureSummary {
  readonly totalFailureCount?: number;
  readonly failures?: [];
}

export interface Filter {
  readonly name?: string;
  readonly values?: [];
}

export interface FinishedWorldsSummary {
  readonly finishedCount?: number;
  readonly succeededWorlds?: [];
  readonly failureSummary?: FailureSummary;
}

export interface Fleet {
  readonly name?: string;
  readonly arn?: string;
  readonly createdAt?: Date;
  readonly lastDeploymentStatus?: string;
  readonly lastDeploymentJob?: string;
  readonly lastDeploymentTime?: Date;
}

export interface GetWorldTemplateBodyRequest {
  readonly template?: string;
  readonly generationJob?: string;
}

export interface GetWorldTemplateBodyResponse {
  readonly templateBody?: string;
}

export interface IdempotentParameterMismatchException {
  readonly message?: string;
}

export interface InternalServerException {
  readonly message?: string;
}

export interface InvalidParameterException {
  readonly message?: string;
}

export interface LaunchConfig {
  readonly packageName?: string;
  readonly launchFile?: string;
  readonly environmentVariables?: {[key: string]: any};
  readonly portForwardingConfig?: PortForwardingConfig;
  readonly streamUI?: boolean;
  readonly command?: [];
}

export interface LimitExceededException {
  readonly message?: string;
}

export interface ListDeploymentJobsRequest {
  readonly filters?: [];
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListDeploymentJobsResponse {
  readonly deploymentJobs?: [];
  readonly nextToken?: string;
}

export interface ListFleetsRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly filters?: [];
}

export interface ListFleetsResponse {
  readonly fleetDetails?: [];
  readonly nextToken?: string;
}

export interface ListRobotApplicationsRequest {
  readonly versionQualifier?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly filters?: [];
}

export interface ListRobotApplicationsResponse {
  readonly robotApplicationSummaries?: [];
  readonly nextToken?: string;
}

export interface ListRobotsRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly filters?: [];
}

export interface ListRobotsResponse {
  readonly robots?: [];
  readonly nextToken?: string;
}

export interface ListSimulationApplicationsRequest {
  readonly versionQualifier?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly filters?: [];
}

export interface ListSimulationApplicationsResponse {
  readonly simulationApplicationSummaries?: [];
  readonly nextToken?: string;
}

export interface ListSimulationJobBatchesRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly filters?: [];
}

export interface ListSimulationJobBatchesResponse {
  readonly simulationJobBatchSummaries?: [];
  readonly nextToken?: string;
}

export interface ListSimulationJobsRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly filters?: [];
}

export interface ListSimulationJobsResponse {
  readonly simulationJobSummaries: [];
  readonly nextToken?: string;
}

export interface ListTagsForResourceRequest {
  readonly resourceArn: string;
}

export interface ListTagsForResourceResponse {
  readonly tags?: {[key: string]: any};
}

export interface ListWorldExportJobsRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly filters?: [];
}

export interface ListWorldExportJobsResponse {
  readonly worldExportJobSummaries: [];
  readonly nextToken?: string;
}

export interface ListWorldGenerationJobsRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly filters?: [];
}

export interface ListWorldGenerationJobsResponse {
  readonly worldGenerationJobSummaries: [];
  readonly nextToken?: string;
}

export interface ListWorldTemplatesRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListWorldTemplatesResponse {
  readonly templateSummaries?: [];
  readonly nextToken?: string;
}

export interface ListWorldsRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly filters?: [];
}

export interface ListWorldsResponse {
  readonly worldSummaries?: [];
  readonly nextToken?: string;
}

export interface LoggingConfig {
  readonly recordAllRosTopics: boolean;
}

export interface NetworkInterface {
  readonly networkInterfaceId?: string;
  readonly privateIpAddress?: string;
  readonly publicIpAddress?: string;
}

export interface OutputLocation {
  readonly s3Bucket?: string;
  readonly s3Prefix?: string;
}

export interface PortForwardingConfig {
  readonly portMappings?: [];
}

export interface PortMapping {
  readonly jobPort: number;
  readonly applicationPort: number;
  readonly enableOnPublicIp?: boolean;
}

export interface ProgressDetail {
  readonly currentProgress?: string;
  readonly percentDone?: unknown;
  readonly estimatedTimeRemainingSeconds?: number;
  readonly targetResource?: string;
}

export interface RegisterRobotRequest {
  readonly fleet: string;
  readonly robot: string;
}

export interface RegisterRobotResponse {
  readonly fleet?: string;
  readonly robot?: string;
}

export interface RenderingEngine {
  readonly name?: string;
  readonly version?: string;
}

export interface ResourceAlreadyExistsException {
  readonly message?: string;
}

export interface ResourceNotFoundException {
  readonly message?: string;
}

export interface RestartSimulationJobRequest {
  readonly job: string;
}

export interface RestartSimulationJobResponse {
}

export interface Robot {
  readonly arn?: string;
  readonly name?: string;
  readonly fleetArn?: string;
  readonly status?: string;
  readonly greenGrassGroupId?: string;
  readonly createdAt?: Date;
  readonly architecture?: string;
  readonly lastDeploymentJob?: string;
  readonly lastDeploymentTime?: Date;
}

export interface RobotApplicationConfig {
  readonly application: string;
  readonly applicationVersion?: string;
  readonly launchConfig: LaunchConfig;
  readonly uploadConfigurations?: [];
  readonly useDefaultUploadConfigurations?: boolean;
  readonly tools?: [];
  readonly useDefaultTools?: boolean;
}

export interface RobotApplicationSummary {
  readonly name?: string;
  readonly arn?: string;
  readonly version?: string;
  readonly lastUpdatedAt?: Date;
  readonly robotSoftwareSuite?: RobotSoftwareSuite;
}

export interface RobotDeployment {
  readonly arn?: string;
  readonly deploymentStartTime?: Date;
  readonly deploymentFinishTime?: Date;
  readonly status?: string;
  readonly progressDetail?: ProgressDetail;
  readonly failureReason?: string;
  readonly failureCode?: string;
}

export interface RobotSoftwareSuite {
  readonly name?: string;
  readonly version?: string;
}

export interface S3KeyOutput {
  readonly s3Key?: string;
  readonly etag?: string;
}

export interface S3Object {
  readonly bucket: string;
  readonly key: string;
  readonly etag?: string;
}

export interface ServiceUnavailableException {
  readonly message?: string;
}

export interface SimulationApplicationConfig {
  readonly application: string;
  readonly applicationVersion?: string;
  readonly launchConfig: LaunchConfig;
  readonly uploadConfigurations?: [];
  readonly worldConfigs?: [];
  readonly useDefaultUploadConfigurations?: boolean;
  readonly tools?: [];
  readonly useDefaultTools?: boolean;
}

export interface SimulationApplicationSummary {
  readonly name?: string;
  readonly arn?: string;
  readonly version?: string;
  readonly lastUpdatedAt?: Date;
  readonly robotSoftwareSuite?: RobotSoftwareSuite;
  readonly simulationSoftwareSuite?: SimulationSoftwareSuite;
}

export interface SimulationJob {
  readonly arn?: string;
  readonly name?: string;
  readonly status?: string;
  readonly lastStartedAt?: Date;
  readonly lastUpdatedAt?: Date;
  readonly failureBehavior?: string;
  readonly failureCode?: string;
  readonly failureReason?: string;
  readonly clientRequestToken?: string;
  readonly outputLocation?: OutputLocation;
  readonly loggingConfig?: LoggingConfig;
  readonly maxJobDurationInSeconds?: number;
  readonly simulationTimeMillis?: number;
  readonly iamRole?: string;
  readonly robotApplications?: [];
  readonly simulationApplications?: [];
  readonly dataSources?: [];
  readonly tags?: {[key: string]: any};
  readonly vpcConfig?: VPCConfigResponse;
  readonly networkInterface?: NetworkInterface;
  readonly compute?: ComputeResponse;
}

export interface SimulationJobBatchSummary {
  readonly arn?: string;
  readonly lastUpdatedAt?: Date;
  readonly createdAt?: Date;
  readonly status?: string;
  readonly failedRequestCount?: number;
  readonly pendingRequestCount?: number;
  readonly createdRequestCount?: number;
}

export interface SimulationJobRequest {
  readonly outputLocation?: OutputLocation;
  readonly loggingConfig?: LoggingConfig;
  readonly maxJobDurationInSeconds: number;
  readonly iamRole?: string;
  readonly failureBehavior?: string;
  readonly useDefaultApplications?: boolean;
  readonly robotApplications?: [];
  readonly simulationApplications?: [];
  readonly dataSources?: [];
  readonly vpcConfig?: VPCConfig;
  readonly compute?: Compute;
  readonly tags?: {[key: string]: any};
}

export interface SimulationJobSummary {
  readonly arn?: string;
  readonly lastUpdatedAt?: Date;
  readonly name?: string;
  readonly status?: string;
  readonly simulationApplicationNames?: [];
  readonly robotApplicationNames?: [];
  readonly dataSourceNames?: [];
  readonly computeType?: string;
}

export interface SimulationSoftwareSuite {
  readonly name?: string;
  readonly version?: string;
}

export interface Source {
  readonly s3Bucket?: string;
  readonly s3Key?: string;
  readonly etag?: string;
  readonly architecture?: string;
}

export interface SourceConfig {
  readonly s3Bucket?: string;
  readonly s3Key?: string;
  readonly architecture?: string;
}

export interface StartSimulationJobBatchRequest {
  readonly clientRequestToken?: string;
  readonly batchPolicy?: BatchPolicy;
  readonly createSimulationJobRequests: [];
  readonly tags?: {[key: string]: any};
}

export interface StartSimulationJobBatchResponse {
  readonly arn?: string;
  readonly status?: string;
  readonly createdAt?: Date;
  readonly clientRequestToken?: string;
  readonly batchPolicy?: BatchPolicy;
  readonly failureCode?: string;
  readonly failureReason?: string;
  readonly failedRequests?: [];
  readonly pendingRequests?: [];
  readonly createdRequests?: [];
  readonly tags?: {[key: string]: any};
}

export interface SyncDeploymentJobRequest {
  readonly clientRequestToken: string;
  readonly fleet: string;
}

export interface SyncDeploymentJobResponse {
  readonly arn?: string;
  readonly fleet?: string;
  readonly status?: string;
  readonly deploymentConfig?: DeploymentConfig;
  readonly deploymentApplicationConfigs?: [];
  readonly failureReason?: string;
  readonly failureCode?: string;
  readonly createdAt?: Date;
}

export interface TagResourceRequest {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

export interface TagResourceResponse {
}

export interface TemplateLocation {
  readonly s3Bucket: string;
  readonly s3Key: string;
}

export interface TemplateSummary {
  readonly arn?: string;
  readonly createdAt?: Date;
  readonly lastUpdatedAt?: Date;
  readonly name?: string;
  readonly version?: string;
}

export interface ThrottlingException {
  readonly message?: string;
}

export interface Tool {
  readonly streamUI?: boolean;
  readonly name: string;
  readonly command: string;
  readonly streamOutputToCloudWatch?: boolean;
  readonly exitBehavior?: string;
}

export interface UntagResourceRequest {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

export interface UntagResourceResponse {
}

export interface UpdateRobotApplicationRequest {
  readonly application: string;
  readonly sources?: [];
  readonly robotSoftwareSuite: RobotSoftwareSuite;
  readonly currentRevisionId?: string;
  readonly environment?: Environment;
}

export interface UpdateRobotApplicationResponse {
  readonly arn?: string;
  readonly name?: string;
  readonly version?: string;
  readonly sources?: [];
  readonly robotSoftwareSuite?: RobotSoftwareSuite;
  readonly lastUpdatedAt?: Date;
  readonly revisionId?: string;
  readonly environment?: Environment;
}

export interface UpdateSimulationApplicationRequest {
  readonly application: string;
  readonly sources?: [];
  readonly simulationSoftwareSuite: SimulationSoftwareSuite;
  readonly robotSoftwareSuite: RobotSoftwareSuite;
  readonly renderingEngine?: RenderingEngine;
  readonly currentRevisionId?: string;
  readonly environment?: Environment;
}

export interface UpdateSimulationApplicationResponse {
  readonly arn?: string;
  readonly name?: string;
  readonly version?: string;
  readonly sources?: [];
  readonly simulationSoftwareSuite?: SimulationSoftwareSuite;
  readonly robotSoftwareSuite?: RobotSoftwareSuite;
  readonly renderingEngine?: RenderingEngine;
  readonly lastUpdatedAt?: Date;
  readonly revisionId?: string;
  readonly environment?: Environment;
}

export interface UpdateWorldTemplateRequest {
  readonly template: string;
  readonly name?: string;
  readonly templateBody?: string;
  readonly templateLocation?: TemplateLocation;
}

export interface UpdateWorldTemplateResponse {
  readonly arn?: string;
  readonly name?: string;
  readonly createdAt?: Date;
  readonly lastUpdatedAt?: Date;
}

export interface UploadConfiguration {
  readonly name: string;
  readonly path: string;
  readonly uploadBehavior: string;
}

export interface VPCConfig {
  readonly subnets: [];
  readonly securityGroups?: [];
  readonly assignPublicIp?: boolean;
}

export interface VPCConfigResponse {
  readonly subnets?: [];
  readonly securityGroups?: [];
  readonly vpcId?: string;
  readonly assignPublicIp?: boolean;
}

export interface WorldConfig {
  readonly world?: string;
}

export interface WorldCount {
  readonly floorplanCount?: number;
  readonly interiorCountPerFloorplan?: number;
}

export interface WorldExportJobSummary {
  readonly arn?: string;
  readonly status?: string;
  readonly createdAt?: Date;
  readonly worlds?: [];
}

export interface WorldFailure {
  readonly failureCode?: string;
  readonly sampleFailureReason?: string;
  readonly failureCount?: number;
}

export interface WorldGenerationJobSummary {
  readonly arn?: string;
  readonly template?: string;
  readonly createdAt?: Date;
  readonly status?: string;
  readonly worldCount?: WorldCount;
  readonly succeededWorldCount?: number;
  readonly failedWorldCount?: number;
}

export interface WorldSummary {
  readonly arn?: string;
  readonly createdAt?: Date;
  readonly generationJob?: string;
  readonly template?: string;
}


