/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AddTags {
  readonly ResourceId: string;
  readonly TagsList?: [];
}

export interface CreateTrail {
  readonly Name: string;
  readonly S3BucketName: string;
  readonly S3KeyPrefix?: string;
  readonly SnsTopicName?: string;
  readonly IncludeGlobalServiceEvents?: boolean;
  readonly IsMultiRegionTrail?: boolean;
  readonly EnableLogFileValidation?: boolean;
  readonly CloudWatchLogsLogGroupArn?: string;
  readonly CloudWatchLogsRoleArn?: string;
  readonly KmsKeyId?: string;
  readonly IsOrganizationTrail?: boolean;
  readonly TagsList?: [];
}

export interface DeleteTrail {
  readonly Name: string;
}

export interface DescribeTrails {
  readonly trailNameList?: [];
  readonly includeShadowTrails?: boolean;
}

export interface GetEventSelectors {
  readonly TrailName: string;
}

export interface GetInsightSelectors {
  readonly TrailName: string;
}

export interface GetTrail {
  readonly Name: string;
}

export interface GetTrailStatus {
  readonly Name: string;
}

export interface ListPublicKeys {
  readonly StartTime?: Date;
  readonly EndTime?: Date;
  readonly NextToken?: string;
}

export interface ListTags {
  readonly ResourceIdList: [];
  readonly NextToken?: string;
}

export interface ListTrails {
  readonly NextToken?: string;
}

export interface LookupEvents {
  readonly LookupAttributes?: [];
  readonly StartTime?: Date;
  readonly EndTime?: Date;
  readonly EventCategory?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface PutEventSelectors {
  readonly TrailName: string;
  readonly EventSelectors?: [];
  readonly AdvancedEventSelectors?: [];
}

export interface PutInsightSelectors {
  readonly TrailName: string;
  readonly InsightSelectors: [];
}

export interface RemoveTags {
  readonly ResourceId: string;
  readonly TagsList?: [];
}

export interface StartLogging {
  readonly Name: string;
}

export interface StopLogging {
  readonly Name: string;
}

export interface UpdateTrail {
  readonly Name: string;
  readonly S3BucketName?: string;
  readonly S3KeyPrefix?: string;
  readonly SnsTopicName?: string;
  readonly IncludeGlobalServiceEvents?: boolean;
  readonly IsMultiRegionTrail?: boolean;
  readonly EnableLogFileValidation?: boolean;
  readonly CloudWatchLogsLogGroupArn?: string;
  readonly CloudWatchLogsRoleArn?: string;
  readonly KmsKeyId?: string;
  readonly IsOrganizationTrail?: boolean;
}

export interface AddTagsRequest {
  readonly ResourceId: string;
  readonly TagsList?: [];
}

export interface AddTagsResponse {
}

export interface AdvancedEventSelector {
  readonly Name?: string;
  readonly FieldSelectors: [];
}

export interface AdvancedFieldSelector {
  readonly Field: string;
  readonly Equals?: [];
  readonly StartsWith?: [];
  readonly EndsWith?: [];
  readonly NotEquals?: [];
  readonly NotStartsWith?: [];
  readonly NotEndsWith?: [];
}

export interface CloudTrailARNInvalidException {
}

export interface CloudTrailAccessNotEnabledException {
}

export interface CloudTrailInvalidClientTokenIdException {
}

export interface CloudWatchLogsDeliveryUnavailableException {
}

export interface ConflictException {
}

export interface CreateTrailRequest {
  readonly Name: string;
  readonly S3BucketName: string;
  readonly S3KeyPrefix?: string;
  readonly SnsTopicName?: string;
  readonly IncludeGlobalServiceEvents?: boolean;
  readonly IsMultiRegionTrail?: boolean;
  readonly EnableLogFileValidation?: boolean;
  readonly CloudWatchLogsLogGroupArn?: string;
  readonly CloudWatchLogsRoleArn?: string;
  readonly KmsKeyId?: string;
  readonly IsOrganizationTrail?: boolean;
  readonly TagsList?: [];
}

export interface CreateTrailResponse {
  readonly Name?: string;
  readonly S3BucketName?: string;
  readonly S3KeyPrefix?: string;
  readonly SnsTopicName?: string;
  readonly SnsTopicARN?: string;
  readonly IncludeGlobalServiceEvents?: boolean;
  readonly IsMultiRegionTrail?: boolean;
  readonly TrailARN?: string;
  readonly LogFileValidationEnabled?: boolean;
  readonly CloudWatchLogsLogGroupArn?: string;
  readonly CloudWatchLogsRoleArn?: string;
  readonly KmsKeyId?: string;
  readonly IsOrganizationTrail?: boolean;
}

export interface DataResource {
  readonly Type?: string;
  readonly Values?: [];
}

export interface DeleteTrailRequest {
  readonly Name: string;
}

export interface DeleteTrailResponse {
}

export interface DescribeTrailsRequest {
  readonly trailNameList?: [];
  readonly includeShadowTrails?: boolean;
}

export interface DescribeTrailsResponse {
  readonly trailList?: [];
}

export interface Event {
  readonly EventId?: string;
  readonly EventName?: string;
  readonly ReadOnly?: string;
  readonly AccessKeyId?: string;
  readonly EventTime?: Date;
  readonly EventSource?: string;
  readonly Username?: string;
  readonly Resources?: [];
  readonly CloudTrailEvent?: string;
}

export interface EventSelector {
  readonly ReadWriteType?: string;
  readonly IncludeManagementEvents?: boolean;
  readonly DataResources?: [];
  readonly ExcludeManagementEventSources?: [];
}

export interface GetEventSelectorsRequest {
  readonly TrailName: string;
}

export interface GetEventSelectorsResponse {
  readonly TrailARN?: string;
  readonly EventSelectors?: [];
  readonly AdvancedEventSelectors?: [];
}

export interface GetInsightSelectorsRequest {
  readonly TrailName: string;
}

export interface GetInsightSelectorsResponse {
  readonly TrailARN?: string;
  readonly InsightSelectors?: [];
}

export interface GetTrailRequest {
  readonly Name: string;
}

export interface GetTrailResponse {
  readonly Trail?: Trail;
}

export interface GetTrailStatusRequest {
  readonly Name: string;
}

export interface GetTrailStatusResponse {
  readonly IsLogging?: boolean;
  readonly LatestDeliveryError?: string;
  readonly LatestNotificationError?: string;
  readonly LatestDeliveryTime?: Date;
  readonly LatestNotificationTime?: Date;
  readonly StartLoggingTime?: Date;
  readonly StopLoggingTime?: Date;
  readonly LatestCloudWatchLogsDeliveryError?: string;
  readonly LatestCloudWatchLogsDeliveryTime?: Date;
  readonly LatestDigestDeliveryTime?: Date;
  readonly LatestDigestDeliveryError?: string;
  readonly LatestDeliveryAttemptTime?: string;
  readonly LatestNotificationAttemptTime?: string;
  readonly LatestNotificationAttemptSucceeded?: string;
  readonly LatestDeliveryAttemptSucceeded?: string;
  readonly TimeLoggingStarted?: string;
  readonly TimeLoggingStopped?: string;
}

export interface InsightNotEnabledException {
}

export interface InsightSelector {
  readonly InsightType?: string;
}

export interface InsufficientDependencyServiceAccessPermissionException {
}

export interface InsufficientEncryptionPolicyException {
}

export interface InsufficientS3BucketPolicyException {
}

export interface InsufficientSnsTopicPolicyException {
}

export interface InvalidCloudWatchLogsLogGroupArnException {
}

export interface InvalidCloudWatchLogsRoleArnException {
}

export interface InvalidEventCategoryException {
}

export interface InvalidEventSelectorsException {
}

export interface InvalidHomeRegionException {
}

export interface InvalidInsightSelectorsException {
}

export interface InvalidKmsKeyIdException {
}

export interface InvalidLookupAttributesException {
}

export interface InvalidMaxResultsException {
}

export interface InvalidNextTokenException {
}

export interface InvalidParameterCombinationException {
}

export interface InvalidS3BucketNameException {
}

export interface InvalidS3PrefixException {
}

export interface InvalidSnsTopicNameException {
}

export interface InvalidTagParameterException {
}

export interface InvalidTimeRangeException {
}

export interface InvalidTokenException {
}

export interface InvalidTrailNameException {
}

export interface KmsException {
}

export interface KmsKeyDisabledException {
}

export interface KmsKeyNotFoundException {
}

export interface ListPublicKeysRequest {
  readonly StartTime?: Date;
  readonly EndTime?: Date;
  readonly NextToken?: string;
}

export interface ListPublicKeysResponse {
  readonly PublicKeyList?: [];
  readonly NextToken?: string;
}

export interface ListTagsRequest {
  readonly ResourceIdList: [];
  readonly NextToken?: string;
}

export interface ListTagsResponse {
  readonly ResourceTagList?: [];
  readonly NextToken?: string;
}

export interface ListTrailsRequest {
  readonly NextToken?: string;
}

export interface ListTrailsResponse {
  readonly Trails?: [];
  readonly NextToken?: string;
}

export interface LookupAttribute {
  readonly AttributeKey: string;
  readonly AttributeValue: string;
}

export interface LookupEventsRequest {
  readonly LookupAttributes?: [];
  readonly StartTime?: Date;
  readonly EndTime?: Date;
  readonly EventCategory?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface LookupEventsResponse {
  readonly Events?: [];
  readonly NextToken?: string;
}

export interface MaximumNumberOfTrailsExceededException {
}

export interface NotOrganizationMasterAccountException {
}

export interface OperationNotPermittedException {
}

export interface OrganizationNotInAllFeaturesModeException {
}

export interface OrganizationsNotInUseException {
}

export interface PublicKey {
  readonly Value?: unknown;
  readonly ValidityStartTime?: Date;
  readonly ValidityEndTime?: Date;
  readonly Fingerprint?: string;
}

export interface PutEventSelectorsRequest {
  readonly TrailName: string;
  readonly EventSelectors?: [];
  readonly AdvancedEventSelectors?: [];
}

export interface PutEventSelectorsResponse {
  readonly TrailARN?: string;
  readonly EventSelectors?: [];
  readonly AdvancedEventSelectors?: [];
}

export interface PutInsightSelectorsRequest {
  readonly TrailName: string;
  readonly InsightSelectors: [];
}

export interface PutInsightSelectorsResponse {
  readonly TrailARN?: string;
  readonly InsightSelectors?: [];
}

export interface RemoveTagsRequest {
  readonly ResourceId: string;
  readonly TagsList?: [];
}

export interface RemoveTagsResponse {
}

export interface Resource {
  readonly ResourceType?: string;
  readonly ResourceName?: string;
}

export interface ResourceNotFoundException {
}

export interface ResourceTag {
  readonly ResourceId?: string;
  readonly TagsList?: [];
}

export interface ResourceTypeNotSupportedException {
}

export interface S3BucketDoesNotExistException {
}

export interface StartLoggingRequest {
  readonly Name: string;
}

export interface StartLoggingResponse {
}

export interface StopLoggingRequest {
  readonly Name: string;
}

export interface StopLoggingResponse {
}

export interface Tag {
  readonly Key: string;
  readonly Value?: string;
}

export interface TagsLimitExceededException {
}

export interface Trail {
  readonly Name?: string;
  readonly S3BucketName?: string;
  readonly S3KeyPrefix?: string;
  readonly SnsTopicName?: string;
  readonly SnsTopicARN?: string;
  readonly IncludeGlobalServiceEvents?: boolean;
  readonly IsMultiRegionTrail?: boolean;
  readonly HomeRegion?: string;
  readonly TrailARN?: string;
  readonly LogFileValidationEnabled?: boolean;
  readonly CloudWatchLogsLogGroupArn?: string;
  readonly CloudWatchLogsRoleArn?: string;
  readonly KmsKeyId?: string;
  readonly HasCustomEventSelectors?: boolean;
  readonly HasInsightSelectors?: boolean;
  readonly IsOrganizationTrail?: boolean;
}

export interface TrailAlreadyExistsException {
}

export interface TrailInfo {
  readonly TrailARN?: string;
  readonly Name?: string;
  readonly HomeRegion?: string;
}

export interface TrailNotFoundException {
}

export interface TrailNotProvidedException {
}

export interface UnsupportedOperationException {
}

export interface UpdateTrailRequest {
  readonly Name: string;
  readonly S3BucketName?: string;
  readonly S3KeyPrefix?: string;
  readonly SnsTopicName?: string;
  readonly IncludeGlobalServiceEvents?: boolean;
  readonly IsMultiRegionTrail?: boolean;
  readonly EnableLogFileValidation?: boolean;
  readonly CloudWatchLogsLogGroupArn?: string;
  readonly CloudWatchLogsRoleArn?: string;
  readonly KmsKeyId?: string;
  readonly IsOrganizationTrail?: boolean;
}

export interface UpdateTrailResponse {
  readonly Name?: string;
  readonly S3BucketName?: string;
  readonly S3KeyPrefix?: string;
  readonly SnsTopicName?: string;
  readonly SnsTopicARN?: string;
  readonly IncludeGlobalServiceEvents?: boolean;
  readonly IsMultiRegionTrail?: boolean;
  readonly TrailARN?: string;
  readonly LogFileValidationEnabled?: boolean;
  readonly CloudWatchLogsLogGroupArn?: string;
  readonly CloudWatchLogsRoleArn?: string;
  readonly KmsKeyId?: string;
  readonly IsOrganizationTrail?: boolean;
}


