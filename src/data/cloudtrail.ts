/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AddTags {
  readonly ResourceId: string;
  readonly TagsList: [];
}
export interface CreateTrail {
  readonly Name: string;
  readonly S3BucketName: string;
  readonly S3KeyPrefix: string;
  readonly SnsTopicName: string;
  readonly IncludeGlobalServiceEvents: boolean;
  readonly IsMultiRegionTrail: boolean;
  readonly EnableLogFileValidation: boolean;
  readonly CloudWatchLogsLogGroupArn: string;
  readonly CloudWatchLogsRoleArn: string;
  readonly KmsKeyId: string;
  readonly IsOrganizationTrail: boolean;
  readonly TagsList: [];
}
export interface DeleteTrail {
  readonly Name: string;
}
export interface DescribeTrails {
  readonly trailNameList: [];
  readonly includeShadowTrails: boolean;
}
export interface GetEventSelectors {
  readonly TrailName: string;
}
export interface GetInsightSelectors {
  readonly TrailName: string;
}
export interface GetTrail {
  readonly Name: string;
}
export interface GetTrailStatus {
  readonly Name: string;
}
export interface ListPublicKeys {
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly NextToken: string;
}
export interface ListTags {
  readonly ResourceIdList: [];
  readonly NextToken: string;
}
export interface ListTrails {
  readonly NextToken: string;
}
export interface LookupEvents {
  readonly LookupAttributes: [];
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly EventCategory: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface PutEventSelectors {
  readonly TrailName: string;
  readonly EventSelectors: [];
  readonly AdvancedEventSelectors: [];
}
export interface PutInsightSelectors {
  readonly TrailName: string;
  readonly InsightSelectors: [];
}
export interface RemoveTags {
  readonly ResourceId: string;
  readonly TagsList: [];
}
export interface StartLogging {
  readonly Name: string;
}
export interface StopLogging {
  readonly Name: string;
}
export interface UpdateTrail {
  readonly Name: string;
  readonly S3BucketName: string;
  readonly S3KeyPrefix: string;
  readonly SnsTopicName: string;
  readonly IncludeGlobalServiceEvents: boolean;
  readonly IsMultiRegionTrail: boolean;
  readonly EnableLogFileValidation: boolean;
  readonly CloudWatchLogsLogGroupArn: string;
  readonly CloudWatchLogsRoleArn: string;
  readonly KmsKeyId: string;
  readonly IsOrganizationTrail: boolean;
}



interface AddTagsRequest {
  readonly ResourceId: string;
  readonly TagsList: [];
}

interface AddTagsResponse {
}

interface AdvancedEventSelector {
  readonly Name: string;
  readonly FieldSelectors: [];
}

interface AdvancedFieldSelector {
  readonly Field: string;
  readonly Equals: [];
  readonly StartsWith: [];
  readonly EndsWith: [];
  readonly NotEquals: [];
  readonly NotStartsWith: [];
  readonly NotEndsWith: [];
}

interface CloudTrailARNInvalidException {
}

interface CloudTrailAccessNotEnabledException {
}

interface CloudTrailInvalidClientTokenIdException {
}

interface CloudWatchLogsDeliveryUnavailableException {
}

interface ConflictException {
}

interface CreateTrailRequest {
  readonly Name: string;
  readonly S3BucketName: string;
  readonly S3KeyPrefix: string;
  readonly SnsTopicName: string;
  readonly IncludeGlobalServiceEvents: boolean;
  readonly IsMultiRegionTrail: boolean;
  readonly EnableLogFileValidation: boolean;
  readonly CloudWatchLogsLogGroupArn: string;
  readonly CloudWatchLogsRoleArn: string;
  readonly KmsKeyId: string;
  readonly IsOrganizationTrail: boolean;
  readonly TagsList: [];
}

interface CreateTrailResponse {
  readonly Name: string;
  readonly S3BucketName: string;
  readonly S3KeyPrefix: string;
  readonly SnsTopicName: string;
  readonly SnsTopicARN: string;
  readonly IncludeGlobalServiceEvents: boolean;
  readonly IsMultiRegionTrail: boolean;
  readonly TrailARN: string;
  readonly LogFileValidationEnabled: boolean;
  readonly CloudWatchLogsLogGroupArn: string;
  readonly CloudWatchLogsRoleArn: string;
  readonly KmsKeyId: string;
  readonly IsOrganizationTrail: boolean;
}

interface DataResource {
  readonly Type: string;
  readonly Values: [];
}

interface DeleteTrailRequest {
  readonly Name: string;
}

interface DeleteTrailResponse {
}

interface DescribeTrailsRequest {
  readonly trailNameList: [];
  readonly includeShadowTrails: boolean;
}

interface DescribeTrailsResponse {
  readonly trailList: [];
}

interface Event {
  readonly EventId: string;
  readonly EventName: string;
  readonly ReadOnly: string;
  readonly AccessKeyId: string;
  readonly EventTime: Date;
  readonly EventSource: string;
  readonly Username: string;
  readonly Resources: [];
  readonly CloudTrailEvent: string;
}

interface EventSelector {
  readonly ReadWriteType: string;
  readonly IncludeManagementEvents: boolean;
  readonly DataResources: [];
  readonly ExcludeManagementEventSources: [];
}

interface GetEventSelectorsRequest {
  readonly TrailName: string;
}

interface GetEventSelectorsResponse {
  readonly TrailARN: string;
  readonly EventSelectors: [];
  readonly AdvancedEventSelectors: [];
}

interface GetInsightSelectorsRequest {
  readonly TrailName: string;
}

interface GetInsightSelectorsResponse {
  readonly TrailARN: string;
  readonly InsightSelectors: [];
}

interface GetTrailRequest {
  readonly Name: string;
}

interface GetTrailResponse {
  readonly Trail: Trail;
}

interface GetTrailStatusRequest {
  readonly Name: string;
}

interface GetTrailStatusResponse {
  readonly IsLogging: boolean;
  readonly LatestDeliveryError: string;
  readonly LatestNotificationError: string;
  readonly LatestDeliveryTime: Date;
  readonly LatestNotificationTime: Date;
  readonly StartLoggingTime: Date;
  readonly StopLoggingTime: Date;
  readonly LatestCloudWatchLogsDeliveryError: string;
  readonly LatestCloudWatchLogsDeliveryTime: Date;
  readonly LatestDigestDeliveryTime: Date;
  readonly LatestDigestDeliveryError: string;
  readonly LatestDeliveryAttemptTime: string;
  readonly LatestNotificationAttemptTime: string;
  readonly LatestNotificationAttemptSucceeded: string;
  readonly LatestDeliveryAttemptSucceeded: string;
  readonly TimeLoggingStarted: string;
  readonly TimeLoggingStopped: string;
}

interface InsightNotEnabledException {
}

interface InsightSelector {
  readonly InsightType: string;
}

interface InsufficientDependencyServiceAccessPermissionException {
}

interface InsufficientEncryptionPolicyException {
}

interface InsufficientS3BucketPolicyException {
}

interface InsufficientSnsTopicPolicyException {
}

interface InvalidCloudWatchLogsLogGroupArnException {
}

interface InvalidCloudWatchLogsRoleArnException {
}

interface InvalidEventCategoryException {
}

interface InvalidEventSelectorsException {
}

interface InvalidHomeRegionException {
}

interface InvalidInsightSelectorsException {
}

interface InvalidKmsKeyIdException {
}

interface InvalidLookupAttributesException {
}

interface InvalidMaxResultsException {
}

interface InvalidNextTokenException {
}

interface InvalidParameterCombinationException {
}

interface InvalidS3BucketNameException {
}

interface InvalidS3PrefixException {
}

interface InvalidSnsTopicNameException {
}

interface InvalidTagParameterException {
}

interface InvalidTimeRangeException {
}

interface InvalidTokenException {
}

interface InvalidTrailNameException {
}

interface KmsException {
}

interface KmsKeyDisabledException {
}

interface KmsKeyNotFoundException {
}

interface ListPublicKeysRequest {
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly NextToken: string;
}

interface ListPublicKeysResponse {
  readonly PublicKeyList: [];
  readonly NextToken: string;
}

interface ListTagsRequest {
  readonly ResourceIdList: [];
  readonly NextToken: string;
}

interface ListTagsResponse {
  readonly ResourceTagList: [];
  readonly NextToken: string;
}

interface ListTrailsRequest {
  readonly NextToken: string;
}

interface ListTrailsResponse {
  readonly Trails: [];
  readonly NextToken: string;
}

interface LookupAttribute {
  readonly AttributeKey: string;
  readonly AttributeValue: string;
}

interface LookupEventsRequest {
  readonly LookupAttributes: [];
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly EventCategory: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface LookupEventsResponse {
  readonly Events: [];
  readonly NextToken: string;
}

interface MaximumNumberOfTrailsExceededException {
}

interface NotOrganizationMasterAccountException {
}

interface OperationNotPermittedException {
}

interface OrganizationNotInAllFeaturesModeException {
}

interface OrganizationsNotInUseException {
}

interface PublicKey {
  readonly Value: unknown;
  readonly ValidityStartTime: Date;
  readonly ValidityEndTime: Date;
  readonly Fingerprint: string;
}

interface PutEventSelectorsRequest {
  readonly TrailName: string;
  readonly EventSelectors: [];
  readonly AdvancedEventSelectors: [];
}

interface PutEventSelectorsResponse {
  readonly TrailARN: string;
  readonly EventSelectors: [];
  readonly AdvancedEventSelectors: [];
}

interface PutInsightSelectorsRequest {
  readonly TrailName: string;
  readonly InsightSelectors: [];
}

interface PutInsightSelectorsResponse {
  readonly TrailARN: string;
  readonly InsightSelectors: [];
}

interface RemoveTagsRequest {
  readonly ResourceId: string;
  readonly TagsList: [];
}

interface RemoveTagsResponse {
}

interface Resource {
  readonly ResourceType: string;
  readonly ResourceName: string;
}

interface ResourceNotFoundException {
}

interface ResourceTag {
  readonly ResourceId: string;
  readonly TagsList: [];
}

interface ResourceTypeNotSupportedException {
}

interface S3BucketDoesNotExistException {
}

interface StartLoggingRequest {
  readonly Name: string;
}

interface StartLoggingResponse {
}

interface StopLoggingRequest {
  readonly Name: string;
}

interface StopLoggingResponse {
}

interface Tag {
  readonly Key: string;
  readonly Value: string;
}

interface TagsLimitExceededException {
}

interface Trail {
  readonly Name: string;
  readonly S3BucketName: string;
  readonly S3KeyPrefix: string;
  readonly SnsTopicName: string;
  readonly SnsTopicARN: string;
  readonly IncludeGlobalServiceEvents: boolean;
  readonly IsMultiRegionTrail: boolean;
  readonly HomeRegion: string;
  readonly TrailARN: string;
  readonly LogFileValidationEnabled: boolean;
  readonly CloudWatchLogsLogGroupArn: string;
  readonly CloudWatchLogsRoleArn: string;
  readonly KmsKeyId: string;
  readonly HasCustomEventSelectors: boolean;
  readonly HasInsightSelectors: boolean;
  readonly IsOrganizationTrail: boolean;
}

interface TrailAlreadyExistsException {
}

interface TrailInfo {
  readonly TrailARN: string;
  readonly Name: string;
  readonly HomeRegion: string;
}

interface TrailNotFoundException {
}

interface TrailNotProvidedException {
}

interface UnsupportedOperationException {
}

interface UpdateTrailRequest {
  readonly Name: string;
  readonly S3BucketName: string;
  readonly S3KeyPrefix: string;
  readonly SnsTopicName: string;
  readonly IncludeGlobalServiceEvents: boolean;
  readonly IsMultiRegionTrail: boolean;
  readonly EnableLogFileValidation: boolean;
  readonly CloudWatchLogsLogGroupArn: string;
  readonly CloudWatchLogsRoleArn: string;
  readonly KmsKeyId: string;
  readonly IsOrganizationTrail: boolean;
}

interface UpdateTrailResponse {
  readonly Name: string;
  readonly S3BucketName: string;
  readonly S3KeyPrefix: string;
  readonly SnsTopicName: string;
  readonly SnsTopicARN: string;
  readonly IncludeGlobalServiceEvents: boolean;
  readonly IsMultiRegionTrail: boolean;
  readonly TrailARN: string;
  readonly LogFileValidationEnabled: boolean;
  readonly CloudWatchLogsLogGroupArn: string;
  readonly CloudWatchLogsRoleArn: string;
  readonly KmsKeyId: string;
  readonly IsOrganizationTrail: boolean;
}

