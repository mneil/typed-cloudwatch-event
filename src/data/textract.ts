/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AnalyzeDocument {
  readonly Document: Document;
  readonly FeatureTypes: [];
  readonly HumanLoopConfig?: HumanLoopConfig;
}

export interface AnalyzeExpense {
  readonly Document: Document;
}

export interface AnalyzeID {
  readonly DocumentPages: [];
}

export interface DetectDocumentText {
  readonly Document: Document;
}

export interface GetDocumentAnalysis {
  readonly JobId: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetDocumentTextDetection {
  readonly JobId: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetExpenseAnalysis {
  readonly JobId: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface StartDocumentAnalysis {
  readonly DocumentLocation: DocumentLocation;
  readonly FeatureTypes: [];
  readonly ClientRequestToken?: string;
  readonly JobTag?: string;
  readonly NotificationChannel?: NotificationChannel;
  readonly OutputConfig?: OutputConfig;
  readonly KMSKeyId?: string;
}

export interface StartDocumentTextDetection {
  readonly DocumentLocation: DocumentLocation;
  readonly ClientRequestToken?: string;
  readonly JobTag?: string;
  readonly NotificationChannel?: NotificationChannel;
  readonly OutputConfig?: OutputConfig;
  readonly KMSKeyId?: string;
}

export interface StartExpenseAnalysis {
  readonly DocumentLocation: DocumentLocation;
  readonly ClientRequestToken?: string;
  readonly JobTag?: string;
  readonly NotificationChannel?: NotificationChannel;
  readonly OutputConfig?: OutputConfig;
  readonly KMSKeyId?: string;
}

export interface AccessDeniedException {
}

export interface AnalyzeDocumentRequest {
  readonly Document: Document;
  readonly FeatureTypes: [];
  readonly HumanLoopConfig?: HumanLoopConfig;
}

export interface AnalyzeDocumentResponse {
  readonly DocumentMetadata?: DocumentMetadata;
  readonly Blocks?: [];
  readonly HumanLoopActivationOutput?: HumanLoopActivationOutput;
  readonly AnalyzeDocumentModelVersion?: string;
}

export interface AnalyzeExpenseRequest {
  readonly Document: Document;
}

export interface AnalyzeExpenseResponse {
  readonly DocumentMetadata?: DocumentMetadata;
  readonly ExpenseDocuments?: [];
}

export interface AnalyzeIDDetections {
  readonly Text: string;
  readonly NormalizedValue?: NormalizedValue;
  readonly Confidence?: unknown;
}

export interface AnalyzeIDRequest {
  readonly DocumentPages: [];
}

export interface AnalyzeIDResponse {
  readonly IdentityDocuments?: [];
  readonly DocumentMetadata?: DocumentMetadata;
  readonly AnalyzeIDModelVersion?: string;
}

export interface BadDocumentException {
}

export interface Block {
  readonly BlockType?: string;
  readonly Confidence?: unknown;
  readonly Text?: string;
  readonly TextType?: string;
  readonly RowIndex?: number;
  readonly ColumnIndex?: number;
  readonly RowSpan?: number;
  readonly ColumnSpan?: number;
  readonly Geometry?: Geometry;
  readonly Id?: string;
  readonly Relationships?: [];
  readonly EntityTypes?: [];
  readonly SelectionStatus?: string;
  readonly Page?: number;
}

export interface BoundingBox {
  readonly Width?: unknown;
  readonly Height?: unknown;
  readonly Left?: unknown;
  readonly Top?: unknown;
}

export interface DetectDocumentTextRequest {
  readonly Document: Document;
}

export interface DetectDocumentTextResponse {
  readonly DocumentMetadata?: DocumentMetadata;
  readonly Blocks?: [];
  readonly DetectDocumentTextModelVersion?: string;
}

export interface Document {
  readonly Bytes?: unknown;
  readonly S3Object?: S3Object;
}

export interface DocumentLocation {
  readonly S3Object?: S3Object;
}

export interface DocumentMetadata {
  readonly Pages?: number;
}

export interface DocumentTooLargeException {
}

export interface ExpenseDetection {
  readonly Text?: string;
  readonly Geometry?: Geometry;
  readonly Confidence?: unknown;
}

export interface ExpenseDocument {
  readonly ExpenseIndex?: number;
  readonly SummaryFields?: [];
  readonly LineItemGroups?: [];
}

export interface ExpenseField {
  readonly Type?: ExpenseType;
  readonly LabelDetection?: ExpenseDetection;
  readonly ValueDetection?: ExpenseDetection;
  readonly PageNumber?: number;
}

export interface ExpenseType {
  readonly Text?: string;
  readonly Confidence?: unknown;
}

export interface Geometry {
  readonly BoundingBox?: BoundingBox;
  readonly Polygon?: [];
}

export interface GetDocumentAnalysisRequest {
  readonly JobId: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetDocumentAnalysisResponse {
  readonly DocumentMetadata?: DocumentMetadata;
  readonly JobStatus?: string;
  readonly NextToken?: string;
  readonly Blocks?: [];
  readonly Warnings?: [];
  readonly StatusMessage?: string;
  readonly AnalyzeDocumentModelVersion?: string;
}

export interface GetDocumentTextDetectionRequest {
  readonly JobId: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetDocumentTextDetectionResponse {
  readonly DocumentMetadata?: DocumentMetadata;
  readonly JobStatus?: string;
  readonly NextToken?: string;
  readonly Blocks?: [];
  readonly Warnings?: [];
  readonly StatusMessage?: string;
  readonly DetectDocumentTextModelVersion?: string;
}

export interface GetExpenseAnalysisRequest {
  readonly JobId: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetExpenseAnalysisResponse {
  readonly DocumentMetadata?: DocumentMetadata;
  readonly JobStatus?: string;
  readonly NextToken?: string;
  readonly ExpenseDocuments?: [];
  readonly Warnings?: [];
  readonly StatusMessage?: string;
  readonly AnalyzeExpenseModelVersion?: string;
}

export interface HumanLoopActivationOutput {
  readonly HumanLoopArn?: string;
  readonly HumanLoopActivationReasons?: [];
  readonly HumanLoopActivationConditionsEvaluationResults?: string;
}

export interface HumanLoopConfig {
  readonly HumanLoopName: string;
  readonly FlowDefinitionArn: string;
  readonly DataAttributes?: HumanLoopDataAttributes;
}

export interface HumanLoopDataAttributes {
  readonly ContentClassifiers?: [];
}

export interface HumanLoopQuotaExceededException {
  readonly ResourceType?: string;
  readonly QuotaCode?: string;
  readonly ServiceCode?: string;
}

export interface IdempotentParameterMismatchException {
}

export interface IdentityDocument {
  readonly DocumentIndex?: number;
  readonly IdentityDocumentFields?: [];
}

export interface IdentityDocumentField {
  readonly Type?: AnalyzeIDDetections;
  readonly ValueDetection?: AnalyzeIDDetections;
}

export interface InternalServerError {
}

export interface InvalidJobIdException {
}

export interface InvalidKMSKeyException {
}

export interface InvalidParameterException {
}

export interface InvalidS3ObjectException {
}

export interface LimitExceededException {
}

export interface LineItemFields {
  readonly LineItemExpenseFields?: [];
}

export interface LineItemGroup {
  readonly LineItemGroupIndex?: number;
  readonly LineItems?: [];
}

export interface NormalizedValue {
  readonly Value?: string;
  readonly ValueType?: string;
}

export interface NotificationChannel {
  readonly SNSTopicArn: string;
  readonly RoleArn: string;
}

export interface OutputConfig {
  readonly S3Bucket: string;
  readonly S3Prefix?: string;
}

export interface Point {
  readonly X?: unknown;
  readonly Y?: unknown;
}

export interface ProvisionedThroughputExceededException {
}

export interface Relationship {
  readonly Type?: string;
  readonly Ids?: [];
}

export interface S3Object {
  readonly Bucket?: string;
  readonly Name?: string;
  readonly Version?: string;
}

export interface StartDocumentAnalysisRequest {
  readonly DocumentLocation: DocumentLocation;
  readonly FeatureTypes: [];
  readonly ClientRequestToken?: string;
  readonly JobTag?: string;
  readonly NotificationChannel?: NotificationChannel;
  readonly OutputConfig?: OutputConfig;
  readonly KMSKeyId?: string;
}

export interface StartDocumentAnalysisResponse {
  readonly JobId?: string;
}

export interface StartDocumentTextDetectionRequest {
  readonly DocumentLocation: DocumentLocation;
  readonly ClientRequestToken?: string;
  readonly JobTag?: string;
  readonly NotificationChannel?: NotificationChannel;
  readonly OutputConfig?: OutputConfig;
  readonly KMSKeyId?: string;
}

export interface StartDocumentTextDetectionResponse {
  readonly JobId?: string;
}

export interface StartExpenseAnalysisRequest {
  readonly DocumentLocation: DocumentLocation;
  readonly ClientRequestToken?: string;
  readonly JobTag?: string;
  readonly NotificationChannel?: NotificationChannel;
  readonly OutputConfig?: OutputConfig;
  readonly KMSKeyId?: string;
}

export interface StartExpenseAnalysisResponse {
  readonly JobId?: string;
}

export interface ThrottlingException {
}

export interface UnsupportedDocumentException {
}

export interface Warning {
  readonly ErrorCode?: string;
  readonly Pages?: [];
}


