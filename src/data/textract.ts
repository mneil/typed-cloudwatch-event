/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AnalyzeDocument {
  readonly Document: Document;
  readonly FeatureTypes: [];
  readonly HumanLoopConfig?: HumanLoopConfig;
}
export interface AnalyzeExpense {
  readonly Document: Document;
}
export interface AnalyzeID {
  readonly DocumentPages: [];
}
export interface DetectDocumentText {
  readonly Document: Document;
}
export interface GetDocumentAnalysis {
  readonly JobId: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface GetDocumentTextDetection {
  readonly JobId: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface GetExpenseAnalysis {
  readonly JobId: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface StartDocumentAnalysis {
  readonly DocumentLocation: DocumentLocation;
  readonly FeatureTypes: [];
  readonly ClientRequestToken?: string;
  readonly JobTag?: string;
  readonly NotificationChannel?: NotificationChannel;
  readonly OutputConfig?: OutputConfig;
  readonly KMSKeyId?: string;
}
export interface StartDocumentTextDetection {
  readonly DocumentLocation: DocumentLocation;
  readonly ClientRequestToken?: string;
  readonly JobTag?: string;
  readonly NotificationChannel?: NotificationChannel;
  readonly OutputConfig?: OutputConfig;
  readonly KMSKeyId?: string;
}
export interface StartExpenseAnalysis {
  readonly DocumentLocation: DocumentLocation;
  readonly ClientRequestToken?: string;
  readonly JobTag?: string;
  readonly NotificationChannel?: NotificationChannel;
  readonly OutputConfig?: OutputConfig;
  readonly KMSKeyId?: string;
}



interface AccessDeniedException {
}

interface AnalyzeDocumentRequest {
  readonly Document: Document;
  readonly FeatureTypes: [];
  readonly HumanLoopConfig: HumanLoopConfig;
}

interface AnalyzeDocumentResponse {
  readonly DocumentMetadata: DocumentMetadata;
  readonly Blocks: [];
  readonly HumanLoopActivationOutput: HumanLoopActivationOutput;
  readonly AnalyzeDocumentModelVersion: string;
}

interface AnalyzeExpenseRequest {
  readonly Document: Document;
}

interface AnalyzeExpenseResponse {
  readonly DocumentMetadata: DocumentMetadata;
  readonly ExpenseDocuments: [];
}

interface AnalyzeIDDetections {
  readonly Text: string;
  readonly NormalizedValue: NormalizedValue;
  readonly Confidence: unknown;
}

interface AnalyzeIDRequest {
  readonly DocumentPages: [];
}

interface AnalyzeIDResponse {
  readonly IdentityDocuments: [];
  readonly DocumentMetadata: DocumentMetadata;
  readonly AnalyzeIDModelVersion: string;
}

interface BadDocumentException {
}

interface Block {
  readonly BlockType: string;
  readonly Confidence: unknown;
  readonly Text: string;
  readonly TextType: string;
  readonly RowIndex: number;
  readonly ColumnIndex: number;
  readonly RowSpan: number;
  readonly ColumnSpan: number;
  readonly Geometry: Geometry;
  readonly Id: string;
  readonly Relationships: [];
  readonly EntityTypes: [];
  readonly SelectionStatus: string;
  readonly Page: number;
}

interface BoundingBox {
  readonly Width: unknown;
  readonly Height: unknown;
  readonly Left: unknown;
  readonly Top: unknown;
}

interface DetectDocumentTextRequest {
  readonly Document: Document;
}

interface DetectDocumentTextResponse {
  readonly DocumentMetadata: DocumentMetadata;
  readonly Blocks: [];
  readonly DetectDocumentTextModelVersion: string;
}

interface Document {
  readonly Bytes: unknown;
  readonly S3Object: S3Object;
}

interface DocumentLocation {
  readonly S3Object: S3Object;
}

interface DocumentMetadata {
  readonly Pages: number;
}

interface DocumentTooLargeException {
}

interface ExpenseDetection {
  readonly Text: string;
  readonly Geometry: Geometry;
  readonly Confidence: unknown;
}

interface ExpenseDocument {
  readonly ExpenseIndex: number;
  readonly SummaryFields: [];
  readonly LineItemGroups: [];
}

interface ExpenseField {
  readonly Type: ExpenseType;
  readonly LabelDetection: ExpenseDetection;
  readonly ValueDetection: ExpenseDetection;
  readonly PageNumber: number;
}

interface ExpenseType {
  readonly Text: string;
  readonly Confidence: unknown;
}

interface Geometry {
  readonly BoundingBox: BoundingBox;
  readonly Polygon: [];
}

interface GetDocumentAnalysisRequest {
  readonly JobId: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface GetDocumentAnalysisResponse {
  readonly DocumentMetadata: DocumentMetadata;
  readonly JobStatus: string;
  readonly NextToken: string;
  readonly Blocks: [];
  readonly Warnings: [];
  readonly StatusMessage: string;
  readonly AnalyzeDocumentModelVersion: string;
}

interface GetDocumentTextDetectionRequest {
  readonly JobId: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface GetDocumentTextDetectionResponse {
  readonly DocumentMetadata: DocumentMetadata;
  readonly JobStatus: string;
  readonly NextToken: string;
  readonly Blocks: [];
  readonly Warnings: [];
  readonly StatusMessage: string;
  readonly DetectDocumentTextModelVersion: string;
}

interface GetExpenseAnalysisRequest {
  readonly JobId: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface GetExpenseAnalysisResponse {
  readonly DocumentMetadata: DocumentMetadata;
  readonly JobStatus: string;
  readonly NextToken: string;
  readonly ExpenseDocuments: [];
  readonly Warnings: [];
  readonly StatusMessage: string;
  readonly AnalyzeExpenseModelVersion: string;
}

interface HumanLoopActivationOutput {
  readonly HumanLoopArn: string;
  readonly HumanLoopActivationReasons: [];
  readonly HumanLoopActivationConditionsEvaluationResults: string;
}

interface HumanLoopConfig {
  readonly HumanLoopName: string;
  readonly FlowDefinitionArn: string;
  readonly DataAttributes: HumanLoopDataAttributes;
}

interface HumanLoopDataAttributes {
  readonly ContentClassifiers: [];
}

interface HumanLoopQuotaExceededException {
  readonly ResourceType: string;
  readonly QuotaCode: string;
  readonly ServiceCode: string;
}

interface IdempotentParameterMismatchException {
}

interface IdentityDocument {
  readonly DocumentIndex: number;
  readonly IdentityDocumentFields: [];
}

interface IdentityDocumentField {
  readonly Type: AnalyzeIDDetections;
  readonly ValueDetection: AnalyzeIDDetections;
}

interface InternalServerError {
}

interface InvalidJobIdException {
}

interface InvalidKMSKeyException {
}

interface InvalidParameterException {
}

interface InvalidS3ObjectException {
}

interface LimitExceededException {
}

interface LineItemFields {
  readonly LineItemExpenseFields: [];
}

interface LineItemGroup {
  readonly LineItemGroupIndex: number;
  readonly LineItems: [];
}

interface NormalizedValue {
  readonly Value: string;
  readonly ValueType: string;
}

interface NotificationChannel {
  readonly SNSTopicArn: string;
  readonly RoleArn: string;
}

interface OutputConfig {
  readonly S3Bucket: string;
  readonly S3Prefix: string;
}

interface Point {
  readonly X: unknown;
  readonly Y: unknown;
}

interface ProvisionedThroughputExceededException {
}

interface Relationship {
  readonly Type: string;
  readonly Ids: [];
}

interface S3Object {
  readonly Bucket: string;
  readonly Name: string;
  readonly Version: string;
}

interface StartDocumentAnalysisRequest {
  readonly DocumentLocation: DocumentLocation;
  readonly FeatureTypes: [];
  readonly ClientRequestToken: string;
  readonly JobTag: string;
  readonly NotificationChannel: NotificationChannel;
  readonly OutputConfig: OutputConfig;
  readonly KMSKeyId: string;
}

interface StartDocumentAnalysisResponse {
  readonly JobId: string;
}

interface StartDocumentTextDetectionRequest {
  readonly DocumentLocation: DocumentLocation;
  readonly ClientRequestToken: string;
  readonly JobTag: string;
  readonly NotificationChannel: NotificationChannel;
  readonly OutputConfig: OutputConfig;
  readonly KMSKeyId: string;
}

interface StartDocumentTextDetectionResponse {
  readonly JobId: string;
}

interface StartExpenseAnalysisRequest {
  readonly DocumentLocation: DocumentLocation;
  readonly ClientRequestToken: string;
  readonly JobTag: string;
  readonly NotificationChannel: NotificationChannel;
  readonly OutputConfig: OutputConfig;
  readonly KMSKeyId: string;
}

interface StartExpenseAnalysisResponse {
  readonly JobId: string;
}

interface ThrottlingException {
}

interface UnsupportedDocumentException {
}

interface Warning {
  readonly ErrorCode: string;
  readonly Pages: [];
}

