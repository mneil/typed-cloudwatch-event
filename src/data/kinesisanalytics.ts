/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AddApplicationCloudWatchLoggingOption {
  readonly ApplicationName: string;
  readonly CurrentApplicationVersionId: number;
  readonly CloudWatchLoggingOption: CloudWatchLoggingOption;
}

export interface AddApplicationInput {
  readonly ApplicationName: string;
  readonly CurrentApplicationVersionId: number;
  readonly Input: Input;
}

export interface AddApplicationInputProcessingConfiguration {
  readonly ApplicationName: string;
  readonly CurrentApplicationVersionId: number;
  readonly InputId: string;
  readonly InputProcessingConfiguration: InputProcessingConfiguration;
}

export interface AddApplicationOutput {
  readonly ApplicationName: string;
  readonly CurrentApplicationVersionId: number;
  readonly Output: Output;
}

export interface AddApplicationReferenceDataSource {
  readonly ApplicationName: string;
  readonly CurrentApplicationVersionId: number;
  readonly ReferenceDataSource: ReferenceDataSource;
}

export interface CreateApplication {
  readonly ApplicationName: string;
  readonly ApplicationDescription?: string;
  readonly Inputs?: [];
  readonly Outputs?: [];
  readonly CloudWatchLoggingOptions?: [];
  readonly ApplicationCode?: string;
  readonly Tags?: [];
}

export interface DeleteApplication {
  readonly ApplicationName: string;
  readonly CreateTimestamp: Date;
}

export interface DeleteApplicationCloudWatchLoggingOption {
  readonly ApplicationName: string;
  readonly CurrentApplicationVersionId: number;
  readonly CloudWatchLoggingOptionId: string;
}

export interface DeleteApplicationInputProcessingConfiguration {
  readonly ApplicationName: string;
  readonly CurrentApplicationVersionId: number;
  readonly InputId: string;
}

export interface DeleteApplicationOutput {
  readonly ApplicationName: string;
  readonly CurrentApplicationVersionId: number;
  readonly OutputId: string;
}

export interface DeleteApplicationReferenceDataSource {
  readonly ApplicationName: string;
  readonly CurrentApplicationVersionId: number;
  readonly ReferenceId: string;
}

export interface DescribeApplication {
  readonly ApplicationName: string;
}

export interface DiscoverInputSchema {
  readonly ResourceARN?: string;
  readonly RoleARN?: string;
  readonly InputStartingPositionConfiguration?: InputStartingPositionConfiguration;
  readonly S3Configuration?: S3Configuration;
  readonly InputProcessingConfiguration?: InputProcessingConfiguration;
}

export interface ListApplications {
  readonly Limit?: number;
  readonly ExclusiveStartApplicationName?: string;
}

export interface ListTagsForResource {
  readonly ResourceARN: string;
}

export interface StartApplication {
  readonly ApplicationName: string;
  readonly InputConfigurations: [];
}

export interface StopApplication {
  readonly ApplicationName: string;
}

export interface TagResource {
  readonly ResourceARN: string;
  readonly Tags: [];
}

export interface UntagResource {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}

export interface UpdateApplication {
  readonly ApplicationName: string;
  readonly CurrentApplicationVersionId: number;
  readonly ApplicationUpdate: ApplicationUpdate;
}

export interface AddApplicationCloudWatchLoggingOptionRequest {
  readonly ApplicationName: string;
  readonly CurrentApplicationVersionId: number;
  readonly CloudWatchLoggingOption: CloudWatchLoggingOption;
}

export interface AddApplicationCloudWatchLoggingOptionResponse {
}

export interface AddApplicationInputProcessingConfigurationRequest {
  readonly ApplicationName: string;
  readonly CurrentApplicationVersionId: number;
  readonly InputId: string;
  readonly InputProcessingConfiguration: InputProcessingConfiguration;
}

export interface AddApplicationInputProcessingConfigurationResponse {
}

export interface AddApplicationInputRequest {
  readonly ApplicationName: string;
  readonly CurrentApplicationVersionId: number;
  readonly Input: Input;
}

export interface AddApplicationInputResponse {
}

export interface AddApplicationOutputRequest {
  readonly ApplicationName: string;
  readonly CurrentApplicationVersionId: number;
  readonly Output: Output;
}

export interface AddApplicationOutputResponse {
}

export interface AddApplicationReferenceDataSourceRequest {
  readonly ApplicationName: string;
  readonly CurrentApplicationVersionId: number;
  readonly ReferenceDataSource: ReferenceDataSource;
}

export interface AddApplicationReferenceDataSourceResponse {
}

export interface ApplicationDetail {
  readonly ApplicationName: string;
  readonly ApplicationDescription?: string;
  readonly ApplicationARN: string;
  readonly ApplicationStatus: string;
  readonly CreateTimestamp?: Date;
  readonly LastUpdateTimestamp?: Date;
  readonly InputDescriptions?: [];
  readonly OutputDescriptions?: [];
  readonly ReferenceDataSourceDescriptions?: [];
  readonly CloudWatchLoggingOptionDescriptions?: [];
  readonly ApplicationCode?: string;
  readonly ApplicationVersionId: number;
}

export interface ApplicationSummary {
  readonly ApplicationName: string;
  readonly ApplicationARN: string;
  readonly ApplicationStatus: string;
}

export interface ApplicationUpdate {
  readonly InputUpdates?: [];
  readonly ApplicationCodeUpdate?: string;
  readonly OutputUpdates?: [];
  readonly ReferenceDataSourceUpdates?: [];
  readonly CloudWatchLoggingOptionUpdates?: [];
}

export interface CSVMappingParameters {
  readonly RecordRowDelimiter: string;
  readonly RecordColumnDelimiter: string;
}

export interface CloudWatchLoggingOption {
  readonly LogStreamARN: string;
  readonly RoleARN: string;
}

export interface CloudWatchLoggingOptionDescription {
  readonly CloudWatchLoggingOptionId?: string;
  readonly LogStreamARN: string;
  readonly RoleARN: string;
}

export interface CloudWatchLoggingOptionUpdate {
  readonly CloudWatchLoggingOptionId: string;
  readonly LogStreamARNUpdate?: string;
  readonly RoleARNUpdate?: string;
}

export interface CodeValidationException {
  readonly message?: string;
}

export interface ConcurrentModificationException {
  readonly message?: string;
}

export interface CreateApplicationRequest {
  readonly ApplicationName: string;
  readonly ApplicationDescription?: string;
  readonly Inputs?: [];
  readonly Outputs?: [];
  readonly CloudWatchLoggingOptions?: [];
  readonly ApplicationCode?: string;
  readonly Tags?: [];
}

export interface CreateApplicationResponse {
  readonly ApplicationSummary: ApplicationSummary;
}

export interface DeleteApplicationCloudWatchLoggingOptionRequest {
  readonly ApplicationName: string;
  readonly CurrentApplicationVersionId: number;
  readonly CloudWatchLoggingOptionId: string;
}

export interface DeleteApplicationCloudWatchLoggingOptionResponse {
}

export interface DeleteApplicationInputProcessingConfigurationRequest {
  readonly ApplicationName: string;
  readonly CurrentApplicationVersionId: number;
  readonly InputId: string;
}

export interface DeleteApplicationInputProcessingConfigurationResponse {
}

export interface DeleteApplicationOutputRequest {
  readonly ApplicationName: string;
  readonly CurrentApplicationVersionId: number;
  readonly OutputId: string;
}

export interface DeleteApplicationOutputResponse {
}

export interface DeleteApplicationReferenceDataSourceRequest {
  readonly ApplicationName: string;
  readonly CurrentApplicationVersionId: number;
  readonly ReferenceId: string;
}

export interface DeleteApplicationReferenceDataSourceResponse {
}

export interface DeleteApplicationRequest {
  readonly ApplicationName: string;
  readonly CreateTimestamp: Date;
}

export interface DeleteApplicationResponse {
}

export interface DescribeApplicationRequest {
  readonly ApplicationName: string;
}

export interface DescribeApplicationResponse {
  readonly ApplicationDetail: ApplicationDetail;
}

export interface DestinationSchema {
  readonly RecordFormatType: string;
}

export interface DiscoverInputSchemaRequest {
  readonly ResourceARN?: string;
  readonly RoleARN?: string;
  readonly InputStartingPositionConfiguration?: InputStartingPositionConfiguration;
  readonly S3Configuration?: S3Configuration;
  readonly InputProcessingConfiguration?: InputProcessingConfiguration;
}

export interface DiscoverInputSchemaResponse {
  readonly InputSchema?: SourceSchema;
  readonly ParsedInputRecords?: [];
  readonly ProcessedInputRecords?: [];
  readonly RawInputRecords?: [];
}

export interface Input {
  readonly NamePrefix: string;
  readonly InputProcessingConfiguration?: InputProcessingConfiguration;
  readonly KinesisStreamsInput?: KinesisStreamsInput;
  readonly KinesisFirehoseInput?: KinesisFirehoseInput;
  readonly InputParallelism?: InputParallelism;
  readonly InputSchema: SourceSchema;
}

export interface InputConfiguration {
  readonly Id: string;
  readonly InputStartingPositionConfiguration: InputStartingPositionConfiguration;
}

export interface InputDescription {
  readonly InputId?: string;
  readonly NamePrefix?: string;
  readonly InAppStreamNames?: [];
  readonly InputProcessingConfigurationDescription?: InputProcessingConfigurationDescription;
  readonly KinesisStreamsInputDescription?: KinesisStreamsInputDescription;
  readonly KinesisFirehoseInputDescription?: KinesisFirehoseInputDescription;
  readonly InputSchema?: SourceSchema;
  readonly InputParallelism?: InputParallelism;
  readonly InputStartingPositionConfiguration?: InputStartingPositionConfiguration;
}

export interface InputLambdaProcessor {
  readonly ResourceARN: string;
  readonly RoleARN: string;
}

export interface InputLambdaProcessorDescription {
  readonly ResourceARN?: string;
  readonly RoleARN?: string;
}

export interface InputLambdaProcessorUpdate {
  readonly ResourceARNUpdate?: string;
  readonly RoleARNUpdate?: string;
}

export interface InputParallelism {
  readonly Count?: number;
}

export interface InputParallelismUpdate {
  readonly CountUpdate?: number;
}

export interface InputProcessingConfiguration {
  readonly InputLambdaProcessor: InputLambdaProcessor;
}

export interface InputProcessingConfigurationDescription {
  readonly InputLambdaProcessorDescription?: InputLambdaProcessorDescription;
}

export interface InputProcessingConfigurationUpdate {
  readonly InputLambdaProcessorUpdate: InputLambdaProcessorUpdate;
}

export interface InputSchemaUpdate {
  readonly RecordFormatUpdate?: RecordFormat;
  readonly RecordEncodingUpdate?: string;
  readonly RecordColumnUpdates?: [];
}

export interface InputStartingPositionConfiguration {
  readonly InputStartingPosition?: string;
}

export interface InputUpdate {
  readonly InputId: string;
  readonly NamePrefixUpdate?: string;
  readonly InputProcessingConfigurationUpdate?: InputProcessingConfigurationUpdate;
  readonly KinesisStreamsInputUpdate?: KinesisStreamsInputUpdate;
  readonly KinesisFirehoseInputUpdate?: KinesisFirehoseInputUpdate;
  readonly InputSchemaUpdate?: InputSchemaUpdate;
  readonly InputParallelismUpdate?: InputParallelismUpdate;
}

export interface InvalidApplicationConfigurationException {
  readonly message?: string;
}

export interface InvalidArgumentException {
  readonly message?: string;
}

export interface JSONMappingParameters {
  readonly RecordRowPath: string;
}

export interface KinesisFirehoseInput {
  readonly ResourceARN: string;
  readonly RoleARN: string;
}

export interface KinesisFirehoseInputDescription {
  readonly ResourceARN?: string;
  readonly RoleARN?: string;
}

export interface KinesisFirehoseInputUpdate {
  readonly ResourceARNUpdate?: string;
  readonly RoleARNUpdate?: string;
}

export interface KinesisFirehoseOutput {
  readonly ResourceARN: string;
  readonly RoleARN: string;
}

export interface KinesisFirehoseOutputDescription {
  readonly ResourceARN?: string;
  readonly RoleARN?: string;
}

export interface KinesisFirehoseOutputUpdate {
  readonly ResourceARNUpdate?: string;
  readonly RoleARNUpdate?: string;
}

export interface KinesisStreamsInput {
  readonly ResourceARN: string;
  readonly RoleARN: string;
}

export interface KinesisStreamsInputDescription {
  readonly ResourceARN?: string;
  readonly RoleARN?: string;
}

export interface KinesisStreamsInputUpdate {
  readonly ResourceARNUpdate?: string;
  readonly RoleARNUpdate?: string;
}

export interface KinesisStreamsOutput {
  readonly ResourceARN: string;
  readonly RoleARN: string;
}

export interface KinesisStreamsOutputDescription {
  readonly ResourceARN?: string;
  readonly RoleARN?: string;
}

export interface KinesisStreamsOutputUpdate {
  readonly ResourceARNUpdate?: string;
  readonly RoleARNUpdate?: string;
}

export interface LambdaOutput {
  readonly ResourceARN: string;
  readonly RoleARN: string;
}

export interface LambdaOutputDescription {
  readonly ResourceARN?: string;
  readonly RoleARN?: string;
}

export interface LambdaOutputUpdate {
  readonly ResourceARNUpdate?: string;
  readonly RoleARNUpdate?: string;
}

export interface LimitExceededException {
  readonly message?: string;
}

export interface ListApplicationsRequest {
  readonly Limit?: number;
  readonly ExclusiveStartApplicationName?: string;
}

export interface ListApplicationsResponse {
  readonly ApplicationSummaries: [];
  readonly HasMoreApplications: boolean;
}

export interface ListTagsForResourceRequest {
  readonly ResourceARN: string;
}

export interface ListTagsForResourceResponse {
  readonly Tags?: [];
}

export interface MappingParameters {
  readonly JSONMappingParameters?: JSONMappingParameters;
  readonly CSVMappingParameters?: CSVMappingParameters;
}

export interface Output {
  readonly Name: string;
  readonly KinesisStreamsOutput?: KinesisStreamsOutput;
  readonly KinesisFirehoseOutput?: KinesisFirehoseOutput;
  readonly LambdaOutput?: LambdaOutput;
  readonly DestinationSchema: DestinationSchema;
}

export interface OutputDescription {
  readonly OutputId?: string;
  readonly Name?: string;
  readonly KinesisStreamsOutputDescription?: KinesisStreamsOutputDescription;
  readonly KinesisFirehoseOutputDescription?: KinesisFirehoseOutputDescription;
  readonly LambdaOutputDescription?: LambdaOutputDescription;
  readonly DestinationSchema?: DestinationSchema;
}

export interface OutputUpdate {
  readonly OutputId: string;
  readonly NameUpdate?: string;
  readonly KinesisStreamsOutputUpdate?: KinesisStreamsOutputUpdate;
  readonly KinesisFirehoseOutputUpdate?: KinesisFirehoseOutputUpdate;
  readonly LambdaOutputUpdate?: LambdaOutputUpdate;
  readonly DestinationSchemaUpdate?: DestinationSchema;
}

export interface RecordColumn {
  readonly Name: string;
  readonly Mapping?: string;
  readonly SqlType: string;
}

export interface RecordFormat {
  readonly RecordFormatType: string;
  readonly MappingParameters?: MappingParameters;
}

export interface ReferenceDataSource {
  readonly TableName: string;
  readonly S3ReferenceDataSource?: S3ReferenceDataSource;
  readonly ReferenceSchema: SourceSchema;
}

export interface ReferenceDataSourceDescription {
  readonly ReferenceId: string;
  readonly TableName: string;
  readonly S3ReferenceDataSourceDescription: S3ReferenceDataSourceDescription;
  readonly ReferenceSchema?: SourceSchema;
}

export interface ReferenceDataSourceUpdate {
  readonly ReferenceId: string;
  readonly TableNameUpdate?: string;
  readonly S3ReferenceDataSourceUpdate?: S3ReferenceDataSourceUpdate;
  readonly ReferenceSchemaUpdate?: SourceSchema;
}

export interface ResourceInUseException {
  readonly message?: string;
}

export interface ResourceNotFoundException {
  readonly message?: string;
}

export interface ResourceProvisionedThroughputExceededException {
  readonly message?: string;
}

export interface S3Configuration {
  readonly RoleARN: string;
  readonly BucketARN: string;
  readonly FileKey: string;
}

export interface S3ReferenceDataSource {
  readonly BucketARN: string;
  readonly FileKey: string;
  readonly ReferenceRoleARN: string;
}

export interface S3ReferenceDataSourceDescription {
  readonly BucketARN: string;
  readonly FileKey: string;
  readonly ReferenceRoleARN: string;
}

export interface S3ReferenceDataSourceUpdate {
  readonly BucketARNUpdate?: string;
  readonly FileKeyUpdate?: string;
  readonly ReferenceRoleARNUpdate?: string;
}

export interface ServiceUnavailableException {
  readonly message?: string;
}

export interface SourceSchema {
  readonly RecordFormat: RecordFormat;
  readonly RecordEncoding?: string;
  readonly RecordColumns: [];
}

export interface StartApplicationRequest {
  readonly ApplicationName: string;
  readonly InputConfigurations: [];
}

export interface StartApplicationResponse {
}

export interface StopApplicationRequest {
  readonly ApplicationName: string;
}

export interface StopApplicationResponse {
}

export interface Tag {
  readonly Key: string;
  readonly Value?: string;
}

export interface TagResourceRequest {
  readonly ResourceARN: string;
  readonly Tags: [];
}

export interface TagResourceResponse {
}

export interface TooManyTagsException {
  readonly message?: string;
}

export interface UnableToDetectSchemaException {
  readonly message?: string;
  readonly RawInputRecords?: [];
  readonly ProcessedInputRecords?: [];
}

export interface UnsupportedOperationException {
  readonly message?: string;
}

export interface UntagResourceRequest {
  readonly ResourceARN: string;
  readonly TagKeys: [];
}

export interface UntagResourceResponse {
}

export interface UpdateApplicationRequest {
  readonly ApplicationName: string;
  readonly CurrentApplicationVersionId: number;
  readonly ApplicationUpdate: ApplicationUpdate;
}

export interface UpdateApplicationResponse {
}


