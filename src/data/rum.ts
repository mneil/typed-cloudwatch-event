/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CreateAppMonitor {
  readonly AppMonitorConfiguration: AppMonitorConfiguration;
  readonly CwLogEnabled: boolean;
  readonly Domain: string;
  readonly Name: string;
  readonly Tags: {[key: string]: any};
}
export interface DeleteAppMonitor {
  readonly Name: string;
}
export interface GetAppMonitor {
  readonly Name: string;
}
export interface GetAppMonitorData {
  readonly Filters: [];
  readonly MaxResults: number;
  readonly Name: string;
  readonly NextToken: string;
  readonly TimeRange: TimeRange;
}
export interface ListAppMonitors {
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface ListTagsForResource {
  readonly ResourceArn: string;
}
export interface PutRumEvents {
  readonly AppMonitorDetails: AppMonitorDetails;
  readonly BatchId: string;
  readonly Id: string;
  readonly RumEvents: [];
  readonly UserDetails: UserDetails;
}
export interface TagResource {
  readonly ResourceArn: string;
  readonly Tags: {[key: string]: any};
}
export interface UntagResource {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}
export interface UpdateAppMonitor {
  readonly AppMonitorConfiguration: AppMonitorConfiguration;
  readonly CwLogEnabled: boolean;
  readonly Domain: string;
  readonly Name: string;
}



interface AccessDeniedException {
  readonly message: string;
}

interface AppMonitor {
  readonly AppMonitorConfiguration: AppMonitorConfiguration;
  readonly Created: string;
  readonly DataStorage: DataStorage;
  readonly Domain: string;
  readonly Id: string;
  readonly LastModified: string;
  readonly Name: string;
  readonly State: string;
  readonly Tags: {[key: string]: any};
}

interface AppMonitorConfiguration {
  readonly AllowCookies: boolean;
  readonly EnableXRay: boolean;
  readonly ExcludedPages: [];
  readonly FavoritePages: [];
  readonly GuestRoleArn: string;
  readonly IdentityPoolId: string;
  readonly IncludedPages: [];
  readonly SessionSampleRate: unknown;
  readonly Telemetries: [];
}

interface AppMonitorDetails {
  readonly id: string;
  readonly name: string;
  readonly version: string;
}

interface AppMonitorSummary {
  readonly Created: string;
  readonly Id: string;
  readonly LastModified: string;
  readonly Name: string;
  readonly State: string;
}

interface ConflictException {
  readonly message: string;
  readonly resourceName: string;
  readonly resourceType: string;
}

interface CreateAppMonitorRequest {
  readonly AppMonitorConfiguration: AppMonitorConfiguration;
  readonly CwLogEnabled: boolean;
  readonly Domain: string;
  readonly Name: string;
  readonly Tags: {[key: string]: any};
}

interface CreateAppMonitorResponse {
  readonly Id: string;
}

interface CwLog {
  readonly CwLogEnabled: boolean;
  readonly CwLogGroup: string;
}

interface DataStorage {
  readonly CwLog: CwLog;
}

interface DeleteAppMonitorRequest {
  readonly Name: string;
}

interface DeleteAppMonitorResponse {
}

interface GetAppMonitorDataRequest {
  readonly Filters: [];
  readonly MaxResults: number;
  readonly Name: string;
  readonly NextToken: string;
  readonly TimeRange: TimeRange;
}

interface GetAppMonitorDataResponse {
  readonly Events: [];
  readonly NextToken: string;
}

interface GetAppMonitorRequest {
  readonly Name: string;
}

interface GetAppMonitorResponse {
  readonly AppMonitor: AppMonitor;
}

interface InternalServerException {
  readonly message: string;
  readonly retryAfterSeconds: number;
}

interface ListAppMonitorsRequest {
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListAppMonitorsResponse {
  readonly AppMonitorSummaries: [];
  readonly NextToken: string;
}

interface ListTagsForResourceRequest {
  readonly ResourceArn: string;
}

interface ListTagsForResourceResponse {
  readonly ResourceArn: string;
  readonly Tags: {[key: string]: any};
}

interface PutRumEventsRequest {
  readonly AppMonitorDetails: AppMonitorDetails;
  readonly BatchId: string;
  readonly Id: string;
  readonly RumEvents: [];
  readonly UserDetails: UserDetails;
}

interface PutRumEventsResponse {
}

interface QueryFilter {
  readonly Name: string;
  readonly Values: [];
}

interface ResourceNotFoundException {
  readonly message: string;
  readonly resourceName: string;
  readonly resourceType: string;
}

interface RumEvent {
  readonly details: string;
  readonly id: string;
  readonly metadata: string;
  readonly timestamp: Date;
  readonly type: string;
}

interface ServiceQuotaExceededException {
  readonly message: string;
}

interface TagResourceRequest {
  readonly ResourceArn: string;
  readonly Tags: {[key: string]: any};
}

interface TagResourceResponse {
}

interface ThrottlingException {
  readonly message: string;
  readonly quotaCode: string;
  readonly retryAfterSeconds: number;
  readonly serviceCode: string;
}

interface TimeRange {
  readonly After: number;
  readonly Before: number;
}

interface UntagResourceRequest {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}

interface UntagResourceResponse {
}

interface UpdateAppMonitorRequest {
  readonly AppMonitorConfiguration: AppMonitorConfiguration;
  readonly CwLogEnabled: boolean;
  readonly Domain: string;
  readonly Name: string;
}

interface UpdateAppMonitorResponse {
}

interface UserDetails {
  readonly sessionId: string;
  readonly userId: string;
}

interface ValidationException {
  readonly message: string;
}

