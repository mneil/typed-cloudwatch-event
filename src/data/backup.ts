/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CreateBackupPlan {
  readonly BackupPlan: BackupPlanInput;
  readonly BackupPlanTags?: {[key: string]: any};
  readonly CreatorRequestId?: string;
}
export interface CreateBackupSelection {
  readonly BackupPlanId: string;
  readonly BackupSelection: BackupSelection;
  readonly CreatorRequestId?: string;
}
export interface CreateBackupVault {
  readonly BackupVaultName: string;
  readonly BackupVaultTags?: {[key: string]: any};
  readonly EncryptionKeyArn?: string;
  readonly CreatorRequestId?: string;
}
export interface CreateFramework {
  readonly FrameworkName: string;
  readonly FrameworkDescription?: string;
  readonly FrameworkControls: [];
  readonly IdempotencyToken?: string;
  readonly FrameworkTags?: {[key: string]: any};
}
export interface CreateReportPlan {
  readonly ReportPlanName: string;
  readonly ReportPlanDescription?: string;
  readonly ReportDeliveryChannel: ReportDeliveryChannel;
  readonly ReportSetting: ReportSetting;
  readonly ReportPlanTags?: {[key: string]: any};
  readonly IdempotencyToken?: string;
}
export interface DeleteBackupPlan {
  readonly BackupPlanId: string;
}
export interface DeleteBackupSelection {
  readonly BackupPlanId: string;
  readonly SelectionId: string;
}
export interface DeleteBackupVault {
  readonly BackupVaultName: string;
}
export interface DeleteBackupVaultAccessPolicy {
  readonly BackupVaultName: string;
}
export interface DeleteBackupVaultLockConfiguration {
  readonly BackupVaultName: string;
}
export interface DeleteBackupVaultNotifications {
  readonly BackupVaultName: string;
}
export interface DeleteFramework {
  readonly FrameworkName: string;
}
export interface DeleteRecoveryPoint {
  readonly BackupVaultName: string;
  readonly RecoveryPointArn: string;
}
export interface DeleteReportPlan {
  readonly ReportPlanName: string;
}
export interface DescribeBackupJob {
  readonly BackupJobId: string;
}
export interface DescribeBackupVault {
  readonly BackupVaultName: string;
}
export interface DescribeCopyJob {
  readonly CopyJobId: string;
}
export interface DescribeFramework {
  readonly FrameworkName: string;
}
export interface DescribeGlobalSettings {
}
export interface DescribeProtectedResource {
  readonly ResourceArn: string;
}
export interface DescribeRecoveryPoint {
  readonly BackupVaultName: string;
  readonly RecoveryPointArn: string;
}
export interface DescribeRegionSettings {
}
export interface DescribeReportJob {
  readonly ReportJobId: string;
}
export interface DescribeReportPlan {
  readonly ReportPlanName: string;
}
export interface DescribeRestoreJob {
  readonly RestoreJobId: string;
}
export interface DisassociateRecoveryPoint {
  readonly BackupVaultName: string;
  readonly RecoveryPointArn: string;
}
export interface ExportBackupPlanTemplate {
  readonly BackupPlanId: string;
}
export interface GetBackupPlan {
  readonly BackupPlanId: string;
  readonly VersionId?: string;
}
export interface GetBackupPlanFromJSON {
  readonly BackupPlanTemplateJson: string;
}
export interface GetBackupPlanFromTemplate {
  readonly BackupPlanTemplateId: string;
}
export interface GetBackupSelection {
  readonly BackupPlanId: string;
  readonly SelectionId: string;
}
export interface GetBackupVaultAccessPolicy {
  readonly BackupVaultName: string;
}
export interface GetBackupVaultNotifications {
  readonly BackupVaultName: string;
}
export interface GetRecoveryPointRestoreMetadata {
  readonly BackupVaultName: string;
  readonly RecoveryPointArn: string;
}
export interface ListBackupJobs {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly ByResourceArn?: string;
  readonly ByState?: string;
  readonly ByBackupVaultName?: string;
  readonly ByCreatedBefore?: Date;
  readonly ByCreatedAfter?: Date;
  readonly ByResourceType?: string;
  readonly ByAccountId?: string;
}
export interface ListBackupPlanTemplates {
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface ListBackupPlanVersions {
  readonly BackupPlanId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface ListBackupPlans {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly IncludeDeleted?: boolean;
}
export interface ListBackupSelections {
  readonly BackupPlanId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface ListBackupVaults {
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface ListCopyJobs {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly ByResourceArn?: string;
  readonly ByState?: string;
  readonly ByCreatedBefore?: Date;
  readonly ByCreatedAfter?: Date;
  readonly ByResourceType?: string;
  readonly ByDestinationVaultArn?: string;
  readonly ByAccountId?: string;
}
export interface ListFrameworks {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface ListProtectedResources {
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface ListRecoveryPointsByBackupVault {
  readonly BackupVaultName: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly ByResourceArn?: string;
  readonly ByResourceType?: string;
  readonly ByBackupPlanId?: string;
  readonly ByCreatedBefore?: Date;
  readonly ByCreatedAfter?: Date;
}
export interface ListRecoveryPointsByResource {
  readonly ResourceArn: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface ListReportJobs {
  readonly ByReportPlanName?: string;
  readonly ByCreationBefore?: Date;
  readonly ByCreationAfter?: Date;
  readonly ByStatus?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface ListReportPlans {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}
export interface ListRestoreJobs {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly ByAccountId?: string;
  readonly ByCreatedBefore?: Date;
  readonly ByCreatedAfter?: Date;
  readonly ByStatus?: string;
}
export interface ListTags {
  readonly ResourceArn: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}
export interface PutBackupVaultAccessPolicy {
  readonly BackupVaultName: string;
  readonly Policy?: string;
}
export interface PutBackupVaultLockConfiguration {
  readonly BackupVaultName: string;
  readonly MinRetentionDays?: number;
  readonly MaxRetentionDays?: number;
  readonly ChangeableForDays?: number;
}
export interface PutBackupVaultNotifications {
  readonly BackupVaultName: string;
  readonly SNSTopicArn: string;
  readonly BackupVaultEvents: [];
}
export interface StartBackupJob {
  readonly BackupVaultName: string;
  readonly ResourceArn: string;
  readonly IamRoleArn: string;
  readonly IdempotencyToken?: string;
  readonly StartWindowMinutes?: number;
  readonly CompleteWindowMinutes?: number;
  readonly Lifecycle?: Lifecycle;
  readonly RecoveryPointTags?: {[key: string]: any};
  readonly BackupOptions?: {[key: string]: any};
}
export interface StartCopyJob {
  readonly RecoveryPointArn: string;
  readonly SourceBackupVaultName: string;
  readonly DestinationBackupVaultArn: string;
  readonly IamRoleArn: string;
  readonly IdempotencyToken?: string;
  readonly Lifecycle?: Lifecycle;
}
export interface StartReportJob {
  readonly ReportPlanName: string;
  readonly IdempotencyToken?: string;
}
export interface StartRestoreJob {
  readonly RecoveryPointArn: string;
  readonly Metadata: {[key: string]: any};
  readonly IamRoleArn: string;
  readonly IdempotencyToken?: string;
  readonly ResourceType?: string;
}
export interface StopBackupJob {
  readonly BackupJobId: string;
}
export interface TagResource {
  readonly ResourceArn: string;
  readonly Tags: {[key: string]: any};
}
export interface UntagResource {
  readonly ResourceArn: string;
  readonly TagKeyList: [];
}
export interface UpdateBackupPlan {
  readonly BackupPlanId: string;
  readonly BackupPlan: BackupPlanInput;
}
export interface UpdateFramework {
  readonly FrameworkName: string;
  readonly FrameworkDescription?: string;
  readonly FrameworkControls?: [];
  readonly IdempotencyToken?: string;
}
export interface UpdateGlobalSettings {
  readonly GlobalSettings?: {[key: string]: any};
}
export interface UpdateRecoveryPointLifecycle {
  readonly BackupVaultName: string;
  readonly RecoveryPointArn: string;
  readonly Lifecycle?: Lifecycle;
}
export interface UpdateRegionSettings {
  readonly ResourceTypeOptInPreference?: {[key: string]: any};
  readonly ResourceTypeManagementPreference?: {[key: string]: any};
}
export interface UpdateReportPlan {
  readonly ReportPlanName: string;
  readonly ReportPlanDescription?: string;
  readonly ReportDeliveryChannel?: ReportDeliveryChannel;
  readonly ReportSetting?: ReportSetting;
  readonly IdempotencyToken?: string;
}



interface AdvancedBackupSetting {
  readonly ResourceType: string;
  readonly BackupOptions: {[key: string]: any};
}

interface AlreadyExistsException {
  readonly Code: string;
  readonly Message: string;
  readonly CreatorRequestId: string;
  readonly Arn: string;
  readonly Type: string;
  readonly Context: string;
}

interface BackupJob {
  readonly AccountId: string;
  readonly BackupJobId: string;
  readonly BackupVaultName: string;
  readonly BackupVaultArn: string;
  readonly RecoveryPointArn: string;
  readonly ResourceArn: string;
  readonly CreationDate: Date;
  readonly CompletionDate: Date;
  readonly State: string;
  readonly StatusMessage: string;
  readonly PercentDone: string;
  readonly BackupSizeInBytes: number;
  readonly IamRoleArn: string;
  readonly CreatedBy: RecoveryPointCreator;
  readonly ExpectedCompletionDate: Date;
  readonly StartBy: Date;
  readonly ResourceType: string;
  readonly BytesTransferred: number;
  readonly BackupOptions: {[key: string]: any};
  readonly BackupType: string;
}

interface BackupPlan {
  readonly BackupPlanName: string;
  readonly Rules: [];
  readonly AdvancedBackupSettings: [];
}

interface BackupPlanInput {
  readonly BackupPlanName: string;
  readonly Rules: [];
  readonly AdvancedBackupSettings: [];
}

interface BackupPlanTemplatesListMember {
  readonly BackupPlanTemplateId: string;
  readonly BackupPlanTemplateName: string;
}

interface BackupPlansListMember {
  readonly BackupPlanArn: string;
  readonly BackupPlanId: string;
  readonly CreationDate: Date;
  readonly DeletionDate: Date;
  readonly VersionId: string;
  readonly BackupPlanName: string;
  readonly CreatorRequestId: string;
  readonly LastExecutionDate: Date;
  readonly AdvancedBackupSettings: [];
}

interface BackupRule {
  readonly RuleName: string;
  readonly TargetBackupVaultName: string;
  readonly ScheduleExpression: string;
  readonly StartWindowMinutes: number;
  readonly CompletionWindowMinutes: number;
  readonly Lifecycle: Lifecycle;
  readonly RecoveryPointTags: {[key: string]: any};
  readonly RuleId: string;
  readonly CopyActions: [];
  readonly EnableContinuousBackup: boolean;
}

interface BackupRuleInput {
  readonly RuleName: string;
  readonly TargetBackupVaultName: string;
  readonly ScheduleExpression: string;
  readonly StartWindowMinutes: number;
  readonly CompletionWindowMinutes: number;
  readonly Lifecycle: Lifecycle;
  readonly RecoveryPointTags: {[key: string]: any};
  readonly CopyActions: [];
  readonly EnableContinuousBackup: boolean;
}

interface BackupSelection {
  readonly SelectionName: string;
  readonly IamRoleArn: string;
  readonly Resources: [];
  readonly ListOfTags: [];
  readonly NotResources: [];
  readonly Conditions: Conditions;
}

interface BackupSelectionsListMember {
  readonly SelectionId: string;
  readonly SelectionName: string;
  readonly BackupPlanId: string;
  readonly CreationDate: Date;
  readonly CreatorRequestId: string;
  readonly IamRoleArn: string;
}

interface BackupVaultListMember {
  readonly BackupVaultName: string;
  readonly BackupVaultArn: string;
  readonly CreationDate: Date;
  readonly EncryptionKeyArn: string;
  readonly CreatorRequestId: string;
  readonly NumberOfRecoveryPoints: number;
  readonly Locked: boolean;
  readonly MinRetentionDays: number;
  readonly MaxRetentionDays: number;
  readonly LockDate: Date;
}

interface CalculatedLifecycle {
  readonly MoveToColdStorageAt: Date;
  readonly DeleteAt: Date;
}

interface Condition {
  readonly ConditionType: string;
  readonly ConditionKey: string;
  readonly ConditionValue: string;
}

interface ConditionParameter {
  readonly ConditionKey: string;
  readonly ConditionValue: string;
}

interface Conditions {
  readonly StringEquals: [];
  readonly StringNotEquals: [];
  readonly StringLike: [];
  readonly StringNotLike: [];
}

interface ConflictException {
  readonly Code: string;
  readonly Message: string;
  readonly Type: string;
  readonly Context: string;
}

interface ControlInputParameter {
  readonly ParameterName: string;
  readonly ParameterValue: string;
}

interface ControlScope {
  readonly ComplianceResourceIds: [];
  readonly ComplianceResourceTypes: [];
  readonly Tags: {[key: string]: any};
}

interface CopyAction {
  readonly Lifecycle: Lifecycle;
  readonly DestinationBackupVaultArn: string;
}

interface CopyJob {
  readonly AccountId: string;
  readonly CopyJobId: string;
  readonly SourceBackupVaultArn: string;
  readonly SourceRecoveryPointArn: string;
  readonly DestinationBackupVaultArn: string;
  readonly DestinationRecoveryPointArn: string;
  readonly ResourceArn: string;
  readonly CreationDate: Date;
  readonly CompletionDate: Date;
  readonly State: string;
  readonly StatusMessage: string;
  readonly BackupSizeInBytes: number;
  readonly IamRoleArn: string;
  readonly CreatedBy: RecoveryPointCreator;
  readonly ResourceType: string;
}

interface CreateBackupPlanInput {
  readonly BackupPlan: BackupPlanInput;
  readonly BackupPlanTags: {[key: string]: any};
  readonly CreatorRequestId: string;
}

interface CreateBackupPlanOutput {
  readonly BackupPlanId: string;
  readonly BackupPlanArn: string;
  readonly CreationDate: Date;
  readonly VersionId: string;
  readonly AdvancedBackupSettings: [];
}

interface CreateBackupSelectionInput {
  readonly BackupPlanId: string;
  readonly BackupSelection: BackupSelection;
  readonly CreatorRequestId: string;
}

interface CreateBackupSelectionOutput {
  readonly SelectionId: string;
  readonly BackupPlanId: string;
  readonly CreationDate: Date;
}

interface CreateBackupVaultInput {
  readonly BackupVaultName: string;
  readonly BackupVaultTags: {[key: string]: any};
  readonly EncryptionKeyArn: string;
  readonly CreatorRequestId: string;
}

interface CreateBackupVaultOutput {
  readonly BackupVaultName: string;
  readonly BackupVaultArn: string;
  readonly CreationDate: Date;
}

interface CreateFrameworkInput {
  readonly FrameworkName: string;
  readonly FrameworkDescription: string;
  readonly FrameworkControls: [];
  readonly IdempotencyToken: string;
  readonly FrameworkTags: {[key: string]: any};
}

interface CreateFrameworkOutput {
  readonly FrameworkName: string;
  readonly FrameworkArn: string;
}

interface CreateReportPlanInput {
  readonly ReportPlanName: string;
  readonly ReportPlanDescription: string;
  readonly ReportDeliveryChannel: ReportDeliveryChannel;
  readonly ReportSetting: ReportSetting;
  readonly ReportPlanTags: {[key: string]: any};
  readonly IdempotencyToken: string;
}

interface CreateReportPlanOutput {
  readonly ReportPlanName: string;
  readonly ReportPlanArn: string;
  readonly CreationTime: Date;
}

interface DeleteBackupPlanInput {
  readonly BackupPlanId: string;
}

interface DeleteBackupPlanOutput {
  readonly BackupPlanId: string;
  readonly BackupPlanArn: string;
  readonly DeletionDate: Date;
  readonly VersionId: string;
}

interface DeleteBackupSelectionInput {
  readonly BackupPlanId: string;
  readonly SelectionId: string;
}

interface DeleteBackupVaultAccessPolicyInput {
  readonly BackupVaultName: string;
}

interface DeleteBackupVaultInput {
  readonly BackupVaultName: string;
}

interface DeleteBackupVaultLockConfigurationInput {
  readonly BackupVaultName: string;
}

interface DeleteBackupVaultNotificationsInput {
  readonly BackupVaultName: string;
}

interface DeleteFrameworkInput {
  readonly FrameworkName: string;
}

interface DeleteRecoveryPointInput {
  readonly BackupVaultName: string;
  readonly RecoveryPointArn: string;
}

interface DeleteReportPlanInput {
  readonly ReportPlanName: string;
}

interface DependencyFailureException {
  readonly Code: string;
  readonly Message: string;
  readonly Type: string;
  readonly Context: string;
}

interface DescribeBackupJobInput {
  readonly BackupJobId: string;
}

interface DescribeBackupJobOutput {
  readonly AccountId: string;
  readonly BackupJobId: string;
  readonly BackupVaultName: string;
  readonly BackupVaultArn: string;
  readonly RecoveryPointArn: string;
  readonly ResourceArn: string;
  readonly CreationDate: Date;
  readonly CompletionDate: Date;
  readonly State: string;
  readonly StatusMessage: string;
  readonly PercentDone: string;
  readonly BackupSizeInBytes: number;
  readonly IamRoleArn: string;
  readonly CreatedBy: RecoveryPointCreator;
  readonly ResourceType: string;
  readonly BytesTransferred: number;
  readonly ExpectedCompletionDate: Date;
  readonly StartBy: Date;
  readonly BackupOptions: {[key: string]: any};
  readonly BackupType: string;
}

interface DescribeBackupVaultInput {
  readonly BackupVaultName: string;
}

interface DescribeBackupVaultOutput {
  readonly BackupVaultName: string;
  readonly BackupVaultArn: string;
  readonly EncryptionKeyArn: string;
  readonly CreationDate: Date;
  readonly CreatorRequestId: string;
  readonly NumberOfRecoveryPoints: number;
  readonly Locked: boolean;
  readonly MinRetentionDays: number;
  readonly MaxRetentionDays: number;
  readonly LockDate: Date;
}

interface DescribeCopyJobInput {
  readonly CopyJobId: string;
}

interface DescribeCopyJobOutput {
  readonly CopyJob: CopyJob;
}

interface DescribeFrameworkInput {
  readonly FrameworkName: string;
}

interface DescribeFrameworkOutput {
  readonly FrameworkName: string;
  readonly FrameworkArn: string;
  readonly FrameworkDescription: string;
  readonly FrameworkControls: [];
  readonly CreationTime: Date;
  readonly DeploymentStatus: string;
  readonly FrameworkStatus: string;
  readonly IdempotencyToken: string;
}

interface DescribeGlobalSettingsInput {
}

interface DescribeGlobalSettingsOutput {
  readonly GlobalSettings: {[key: string]: any};
  readonly LastUpdateTime: Date;
}

interface DescribeProtectedResourceInput {
  readonly ResourceArn: string;
}

interface DescribeProtectedResourceOutput {
  readonly ResourceArn: string;
  readonly ResourceType: string;
  readonly LastBackupTime: Date;
}

interface DescribeRecoveryPointInput {
  readonly BackupVaultName: string;
  readonly RecoveryPointArn: string;
}

interface DescribeRecoveryPointOutput {
  readonly RecoveryPointArn: string;
  readonly BackupVaultName: string;
  readonly BackupVaultArn: string;
  readonly SourceBackupVaultArn: string;
  readonly ResourceArn: string;
  readonly ResourceType: string;
  readonly CreatedBy: RecoveryPointCreator;
  readonly IamRoleArn: string;
  readonly Status: string;
  readonly StatusMessage: string;
  readonly CreationDate: Date;
  readonly CompletionDate: Date;
  readonly BackupSizeInBytes: number;
  readonly CalculatedLifecycle: CalculatedLifecycle;
  readonly Lifecycle: Lifecycle;
  readonly EncryptionKeyArn: string;
  readonly IsEncrypted: boolean;
  readonly StorageClass: string;
  readonly LastRestoreTime: Date;
}

interface DescribeRegionSettingsInput {
}

interface DescribeRegionSettingsOutput {
  readonly ResourceTypeOptInPreference: {[key: string]: any};
  readonly ResourceTypeManagementPreference: {[key: string]: any};
}

interface DescribeReportJobInput {
  readonly ReportJobId: string;
}

interface DescribeReportJobOutput {
  readonly ReportJob: ReportJob;
}

interface DescribeReportPlanInput {
  readonly ReportPlanName: string;
}

interface DescribeReportPlanOutput {
  readonly ReportPlan: ReportPlan;
}

interface DescribeRestoreJobInput {
  readonly RestoreJobId: string;
}

interface DescribeRestoreJobOutput {
  readonly AccountId: string;
  readonly RestoreJobId: string;
  readonly RecoveryPointArn: string;
  readonly CreationDate: Date;
  readonly CompletionDate: Date;
  readonly Status: string;
  readonly StatusMessage: string;
  readonly PercentDone: string;
  readonly BackupSizeInBytes: number;
  readonly IamRoleArn: string;
  readonly ExpectedCompletionTimeMinutes: number;
  readonly CreatedResourceArn: string;
  readonly ResourceType: string;
}

interface DisassociateRecoveryPointInput {
  readonly BackupVaultName: string;
  readonly RecoveryPointArn: string;
}

interface ExportBackupPlanTemplateInput {
  readonly BackupPlanId: string;
}

interface ExportBackupPlanTemplateOutput {
  readonly BackupPlanTemplateJson: string;
}

interface Framework {
  readonly FrameworkName: string;
  readonly FrameworkArn: string;
  readonly FrameworkDescription: string;
  readonly NumberOfControls: number;
  readonly CreationTime: Date;
  readonly DeploymentStatus: string;
}

interface FrameworkControl {
  readonly ControlName: string;
  readonly ControlInputParameters: [];
  readonly ControlScope: ControlScope;
}

interface GetBackupPlanFromJSONInput {
  readonly BackupPlanTemplateJson: string;
}

interface GetBackupPlanFromJSONOutput {
  readonly BackupPlan: BackupPlan;
}

interface GetBackupPlanFromTemplateInput {
  readonly BackupPlanTemplateId: string;
}

interface GetBackupPlanFromTemplateOutput {
  readonly BackupPlanDocument: BackupPlan;
}

interface GetBackupPlanInput {
  readonly BackupPlanId: string;
  readonly VersionId: string;
}

interface GetBackupPlanOutput {
  readonly BackupPlan: BackupPlan;
  readonly BackupPlanId: string;
  readonly BackupPlanArn: string;
  readonly VersionId: string;
  readonly CreatorRequestId: string;
  readonly CreationDate: Date;
  readonly DeletionDate: Date;
  readonly LastExecutionDate: Date;
  readonly AdvancedBackupSettings: [];
}

interface GetBackupSelectionInput {
  readonly BackupPlanId: string;
  readonly SelectionId: string;
}

interface GetBackupSelectionOutput {
  readonly BackupSelection: BackupSelection;
  readonly SelectionId: string;
  readonly BackupPlanId: string;
  readonly CreationDate: Date;
  readonly CreatorRequestId: string;
}

interface GetBackupVaultAccessPolicyInput {
  readonly BackupVaultName: string;
}

interface GetBackupVaultAccessPolicyOutput {
  readonly BackupVaultName: string;
  readonly BackupVaultArn: string;
  readonly Policy: string;
}

interface GetBackupVaultNotificationsInput {
  readonly BackupVaultName: string;
}

interface GetBackupVaultNotificationsOutput {
  readonly BackupVaultName: string;
  readonly BackupVaultArn: string;
  readonly SNSTopicArn: string;
  readonly BackupVaultEvents: [];
}

interface GetRecoveryPointRestoreMetadataInput {
  readonly BackupVaultName: string;
  readonly RecoveryPointArn: string;
}

interface GetRecoveryPointRestoreMetadataOutput {
  readonly BackupVaultArn: string;
  readonly RecoveryPointArn: string;
  readonly RestoreMetadata: {[key: string]: any};
}

interface GetSupportedResourceTypesOutput {
  readonly ResourceTypes: [];
}

interface InvalidParameterValueException {
  readonly Code: string;
  readonly Message: string;
  readonly Type: string;
  readonly Context: string;
}

interface InvalidRequestException {
  readonly Code: string;
  readonly Message: string;
  readonly Type: string;
  readonly Context: string;
}

interface InvalidResourceStateException {
  readonly Code: string;
  readonly Message: string;
  readonly Type: string;
  readonly Context: string;
}

interface Lifecycle {
  readonly MoveToColdStorageAfterDays: number;
  readonly DeleteAfterDays: number;
}

interface LimitExceededException {
  readonly Code: string;
  readonly Message: string;
  readonly Type: string;
  readonly Context: string;
}

interface ListBackupJobsInput {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly ByResourceArn: string;
  readonly ByState: string;
  readonly ByBackupVaultName: string;
  readonly ByCreatedBefore: Date;
  readonly ByCreatedAfter: Date;
  readonly ByResourceType: string;
  readonly ByAccountId: string;
}

interface ListBackupJobsOutput {
  readonly BackupJobs: [];
  readonly NextToken: string;
}

interface ListBackupPlanTemplatesInput {
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListBackupPlanTemplatesOutput {
  readonly NextToken: string;
  readonly BackupPlanTemplatesList: [];
}

interface ListBackupPlanVersionsInput {
  readonly BackupPlanId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListBackupPlanVersionsOutput {
  readonly NextToken: string;
  readonly BackupPlanVersionsList: [];
}

interface ListBackupPlansInput {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly IncludeDeleted: boolean;
}

interface ListBackupPlansOutput {
  readonly NextToken: string;
  readonly BackupPlansList: [];
}

interface ListBackupSelectionsInput {
  readonly BackupPlanId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListBackupSelectionsOutput {
  readonly NextToken: string;
  readonly BackupSelectionsList: [];
}

interface ListBackupVaultsInput {
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListBackupVaultsOutput {
  readonly BackupVaultList: [];
  readonly NextToken: string;
}

interface ListCopyJobsInput {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly ByResourceArn: string;
  readonly ByState: string;
  readonly ByCreatedBefore: Date;
  readonly ByCreatedAfter: Date;
  readonly ByResourceType: string;
  readonly ByDestinationVaultArn: string;
  readonly ByAccountId: string;
}

interface ListCopyJobsOutput {
  readonly CopyJobs: [];
  readonly NextToken: string;
}

interface ListFrameworksInput {
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListFrameworksOutput {
  readonly Frameworks: [];
  readonly NextToken: string;
}

interface ListProtectedResourcesInput {
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListProtectedResourcesOutput {
  readonly Results: [];
  readonly NextToken: string;
}

interface ListRecoveryPointsByBackupVaultInput {
  readonly BackupVaultName: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly ByResourceArn: string;
  readonly ByResourceType: string;
  readonly ByBackupPlanId: string;
  readonly ByCreatedBefore: Date;
  readonly ByCreatedAfter: Date;
}

interface ListRecoveryPointsByBackupVaultOutput {
  readonly NextToken: string;
  readonly RecoveryPoints: [];
}

interface ListRecoveryPointsByResourceInput {
  readonly ResourceArn: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListRecoveryPointsByResourceOutput {
  readonly NextToken: string;
  readonly RecoveryPoints: [];
}

interface ListReportJobsInput {
  readonly ByReportPlanName: string;
  readonly ByCreationBefore: Date;
  readonly ByCreationAfter: Date;
  readonly ByStatus: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListReportJobsOutput {
  readonly ReportJobs: [];
  readonly NextToken: string;
}

interface ListReportPlansInput {
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListReportPlansOutput {
  readonly ReportPlans: [];
  readonly NextToken: string;
}

interface ListRestoreJobsInput {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly ByAccountId: string;
  readonly ByCreatedBefore: Date;
  readonly ByCreatedAfter: Date;
  readonly ByStatus: string;
}

interface ListRestoreJobsOutput {
  readonly RestoreJobs: [];
  readonly NextToken: string;
}

interface ListTagsInput {
  readonly ResourceArn: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListTagsOutput {
  readonly NextToken: string;
  readonly Tags: {[key: string]: any};
}

interface MissingParameterValueException {
  readonly Code: string;
  readonly Message: string;
  readonly Type: string;
  readonly Context: string;
}

interface ProtectedResource {
  readonly ResourceArn: string;
  readonly ResourceType: string;
  readonly LastBackupTime: Date;
}

interface PutBackupVaultAccessPolicyInput {
  readonly BackupVaultName: string;
  readonly Policy: string;
}

interface PutBackupVaultLockConfigurationInput {
  readonly BackupVaultName: string;
  readonly MinRetentionDays: number;
  readonly MaxRetentionDays: number;
  readonly ChangeableForDays: number;
}

interface PutBackupVaultNotificationsInput {
  readonly BackupVaultName: string;
  readonly SNSTopicArn: string;
  readonly BackupVaultEvents: [];
}

interface RecoveryPointByBackupVault {
  readonly RecoveryPointArn: string;
  readonly BackupVaultName: string;
  readonly BackupVaultArn: string;
  readonly SourceBackupVaultArn: string;
  readonly ResourceArn: string;
  readonly ResourceType: string;
  readonly CreatedBy: RecoveryPointCreator;
  readonly IamRoleArn: string;
  readonly Status: string;
  readonly StatusMessage: string;
  readonly CreationDate: Date;
  readonly CompletionDate: Date;
  readonly BackupSizeInBytes: number;
  readonly CalculatedLifecycle: CalculatedLifecycle;
  readonly Lifecycle: Lifecycle;
  readonly EncryptionKeyArn: string;
  readonly IsEncrypted: boolean;
  readonly LastRestoreTime: Date;
}

interface RecoveryPointByResource {
  readonly RecoveryPointArn: string;
  readonly CreationDate: Date;
  readonly Status: string;
  readonly StatusMessage: string;
  readonly EncryptionKeyArn: string;
  readonly BackupSizeBytes: number;
  readonly BackupVaultName: string;
}

interface RecoveryPointCreator {
  readonly BackupPlanId: string;
  readonly BackupPlanArn: string;
  readonly BackupPlanVersion: string;
  readonly BackupRuleId: string;
}

interface ReportDeliveryChannel {
  readonly S3BucketName: string;
  readonly S3KeyPrefix: string;
  readonly Formats: [];
}

interface ReportDestination {
  readonly S3BucketName: string;
  readonly S3Keys: [];
}

interface ReportJob {
  readonly ReportJobId: string;
  readonly ReportPlanArn: string;
  readonly ReportTemplate: string;
  readonly CreationTime: Date;
  readonly CompletionTime: Date;
  readonly Status: string;
  readonly StatusMessage: string;
  readonly ReportDestination: ReportDestination;
}

interface ReportPlan {
  readonly ReportPlanArn: string;
  readonly ReportPlanName: string;
  readonly ReportPlanDescription: string;
  readonly ReportSetting: ReportSetting;
  readonly ReportDeliveryChannel: ReportDeliveryChannel;
  readonly DeploymentStatus: string;
  readonly CreationTime: Date;
  readonly LastAttemptedExecutionTime: Date;
  readonly LastSuccessfulExecutionTime: Date;
}

interface ReportSetting {
  readonly ReportTemplate: string;
  readonly FrameworkArns: [];
  readonly NumberOfFrameworks: number;
}

interface ResourceNotFoundException {
  readonly Code: string;
  readonly Message: string;
  readonly Type: string;
  readonly Context: string;
}

interface RestoreJobsListMember {
  readonly AccountId: string;
  readonly RestoreJobId: string;
  readonly RecoveryPointArn: string;
  readonly CreationDate: Date;
  readonly CompletionDate: Date;
  readonly Status: string;
  readonly StatusMessage: string;
  readonly PercentDone: string;
  readonly BackupSizeInBytes: number;
  readonly IamRoleArn: string;
  readonly ExpectedCompletionTimeMinutes: number;
  readonly CreatedResourceArn: string;
  readonly ResourceType: string;
}

interface ServiceUnavailableException {
  readonly Code: string;
  readonly Message: string;
  readonly Type: string;
  readonly Context: string;
}

interface StartBackupJobInput {
  readonly BackupVaultName: string;
  readonly ResourceArn: string;
  readonly IamRoleArn: string;
  readonly IdempotencyToken: string;
  readonly StartWindowMinutes: number;
  readonly CompleteWindowMinutes: number;
  readonly Lifecycle: Lifecycle;
  readonly RecoveryPointTags: {[key: string]: any};
  readonly BackupOptions: {[key: string]: any};
}

interface StartBackupJobOutput {
  readonly BackupJobId: string;
  readonly RecoveryPointArn: string;
  readonly CreationDate: Date;
}

interface StartCopyJobInput {
  readonly RecoveryPointArn: string;
  readonly SourceBackupVaultName: string;
  readonly DestinationBackupVaultArn: string;
  readonly IamRoleArn: string;
  readonly IdempotencyToken: string;
  readonly Lifecycle: Lifecycle;
}

interface StartCopyJobOutput {
  readonly CopyJobId: string;
  readonly CreationDate: Date;
}

interface StartReportJobInput {
  readonly ReportPlanName: string;
  readonly IdempotencyToken: string;
}

interface StartReportJobOutput {
  readonly ReportJobId: string;
}

interface StartRestoreJobInput {
  readonly RecoveryPointArn: string;
  readonly Metadata: {[key: string]: any};
  readonly IamRoleArn: string;
  readonly IdempotencyToken: string;
  readonly ResourceType: string;
}

interface StartRestoreJobOutput {
  readonly RestoreJobId: string;
}

interface StopBackupJobInput {
  readonly BackupJobId: string;
}

interface TagResourceInput {
  readonly ResourceArn: string;
  readonly Tags: {[key: string]: any};
}

interface UntagResourceInput {
  readonly ResourceArn: string;
  readonly TagKeyList: [];
}

interface UpdateBackupPlanInput {
  readonly BackupPlanId: string;
  readonly BackupPlan: BackupPlanInput;
}

interface UpdateBackupPlanOutput {
  readonly BackupPlanId: string;
  readonly BackupPlanArn: string;
  readonly CreationDate: Date;
  readonly VersionId: string;
  readonly AdvancedBackupSettings: [];
}

interface UpdateFrameworkInput {
  readonly FrameworkName: string;
  readonly FrameworkDescription: string;
  readonly FrameworkControls: [];
  readonly IdempotencyToken: string;
}

interface UpdateFrameworkOutput {
  readonly FrameworkName: string;
  readonly FrameworkArn: string;
  readonly CreationTime: Date;
}

interface UpdateGlobalSettingsInput {
  readonly GlobalSettings: {[key: string]: any};
}

interface UpdateRecoveryPointLifecycleInput {
  readonly BackupVaultName: string;
  readonly RecoveryPointArn: string;
  readonly Lifecycle: Lifecycle;
}

interface UpdateRecoveryPointLifecycleOutput {
  readonly BackupVaultArn: string;
  readonly RecoveryPointArn: string;
  readonly Lifecycle: Lifecycle;
  readonly CalculatedLifecycle: CalculatedLifecycle;
}

interface UpdateRegionSettingsInput {
  readonly ResourceTypeOptInPreference: {[key: string]: any};
  readonly ResourceTypeManagementPreference: {[key: string]: any};
}

interface UpdateReportPlanInput {
  readonly ReportPlanName: string;
  readonly ReportPlanDescription: string;
  readonly ReportDeliveryChannel: ReportDeliveryChannel;
  readonly ReportSetting: ReportSetting;
  readonly IdempotencyToken: string;
}

interface UpdateReportPlanOutput {
  readonly ReportPlanName: string;
  readonly ReportPlanArn: string;
  readonly CreationTime: Date;
}

