/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AssociateApprovedOrigin {
  readonly InstanceId: string;
  readonly Origin: string;
}
export interface AssociateBot {
  readonly InstanceId: string;
  readonly LexBot: LexBot;
  readonly LexV2Bot: LexV2Bot;
}
export interface AssociateInstanceStorageConfig {
  readonly InstanceId: string;
  readonly ResourceType: string;
  readonly StorageConfig: InstanceStorageConfig;
}
export interface AssociateLambdaFunction {
  readonly InstanceId: string;
  readonly FunctionArn: string;
}
export interface AssociateLexBot {
  readonly InstanceId: string;
  readonly LexBot: LexBot;
}
export interface AssociateQueueQuickConnects {
  readonly InstanceId: string;
  readonly QueueId: string;
  readonly QuickConnectIds: [];
}
export interface AssociateRoutingProfileQueues {
  readonly InstanceId: string;
  readonly RoutingProfileId: string;
  readonly QueueConfigs: [];
}
export interface AssociateSecurityKey {
  readonly InstanceId: string;
  readonly Key: string;
}
export interface CreateAgentStatus {
  readonly InstanceId: string;
  readonly Name: string;
  readonly Description: string;
  readonly State: string;
  readonly DisplayOrder: number;
  readonly Tags: {[key: string]: any};
}
export interface CreateContactFlow {
  readonly InstanceId: string;
  readonly Name: string;
  readonly Type: string;
  readonly Description: string;
  readonly Content: string;
  readonly Tags: {[key: string]: any};
}
export interface CreateContactFlowModule {
  readonly InstanceId: string;
  readonly Name: string;
  readonly Description: string;
  readonly Content: string;
  readonly Tags: {[key: string]: any};
  readonly ClientToken: string;
}
export interface CreateHoursOfOperation {
  readonly InstanceId: string;
  readonly Name: string;
  readonly Description: string;
  readonly TimeZone: string;
  readonly Config: [];
  readonly Tags: {[key: string]: any};
}
export interface CreateInstance {
  readonly ClientToken: string;
  readonly IdentityManagementType: string;
  readonly InstanceAlias: string;
  readonly DirectoryId: string;
  readonly InboundCallsEnabled: boolean;
  readonly OutboundCallsEnabled: boolean;
}
export interface CreateIntegrationAssociation {
  readonly InstanceId: string;
  readonly IntegrationType: string;
  readonly IntegrationArn: string;
  readonly SourceApplicationUrl: string;
  readonly SourceApplicationName: string;
  readonly SourceType: string;
  readonly Tags: {[key: string]: any};
}
export interface CreateQueue {
  readonly InstanceId: string;
  readonly Name: string;
  readonly Description: string;
  readonly OutboundCallerConfig: OutboundCallerConfig;
  readonly HoursOfOperationId: string;
  readonly MaxContacts: number;
  readonly QuickConnectIds: [];
  readonly Tags: {[key: string]: any};
}
export interface CreateQuickConnect {
  readonly InstanceId: string;
  readonly Name: string;
  readonly Description: string;
  readonly QuickConnectConfig: QuickConnectConfig;
  readonly Tags: {[key: string]: any};
}
export interface CreateRoutingProfile {
  readonly InstanceId: string;
  readonly Name: string;
  readonly Description: string;
  readonly DefaultOutboundQueueId: string;
  readonly QueueConfigs: [];
  readonly MediaConcurrencies: [];
  readonly Tags: {[key: string]: any};
}
export interface CreateSecurityProfile {
  readonly SecurityProfileName: string;
  readonly Description: string;
  readonly Permissions: [];
  readonly InstanceId: string;
  readonly Tags: {[key: string]: any};
}
export interface CreateUseCase {
  readonly InstanceId: string;
  readonly IntegrationAssociationId: string;
  readonly UseCaseType: string;
  readonly Tags: {[key: string]: any};
}
export interface CreateUser {
  readonly Username: string;
  readonly Password: string;
  readonly IdentityInfo: UserIdentityInfo;
  readonly PhoneConfig: UserPhoneConfig;
  readonly DirectoryUserId: string;
  readonly SecurityProfileIds: [];
  readonly RoutingProfileId: string;
  readonly HierarchyGroupId: string;
  readonly InstanceId: string;
  readonly Tags: {[key: string]: any};
}
export interface CreateUserHierarchyGroup {
  readonly Name: string;
  readonly ParentGroupId: string;
  readonly InstanceId: string;
}
export interface DeleteContactFlow {
  readonly InstanceId: string;
  readonly ContactFlowId: string;
}
export interface DeleteContactFlowModule {
  readonly InstanceId: string;
  readonly ContactFlowModuleId: string;
}
export interface DeleteHoursOfOperation {
  readonly InstanceId: string;
  readonly HoursOfOperationId: string;
}
export interface DeleteInstance {
  readonly InstanceId: string;
}
export interface DeleteIntegrationAssociation {
  readonly InstanceId: string;
  readonly IntegrationAssociationId: string;
}
export interface DeleteQuickConnect {
  readonly InstanceId: string;
  readonly QuickConnectId: string;
}
export interface DeleteSecurityProfile {
  readonly InstanceId: string;
  readonly SecurityProfileId: string;
}
export interface DeleteUseCase {
  readonly InstanceId: string;
  readonly IntegrationAssociationId: string;
  readonly UseCaseId: string;
}
export interface DeleteUser {
  readonly InstanceId: string;
  readonly UserId: string;
}
export interface DeleteUserHierarchyGroup {
  readonly HierarchyGroupId: string;
  readonly InstanceId: string;
}
export interface DescribeAgentStatus {
  readonly InstanceId: string;
  readonly AgentStatusId: string;
}
export interface DescribeContact {
  readonly InstanceId: string;
  readonly ContactId: string;
}
export interface DescribeContactFlow {
  readonly InstanceId: string;
  readonly ContactFlowId: string;
}
export interface DescribeContactFlowModule {
  readonly InstanceId: string;
  readonly ContactFlowModuleId: string;
}
export interface DescribeHoursOfOperation {
  readonly InstanceId: string;
  readonly HoursOfOperationId: string;
}
export interface DescribeInstance {
  readonly InstanceId: string;
}
export interface DescribeInstanceAttribute {
  readonly InstanceId: string;
  readonly AttributeType: string;
}
export interface DescribeInstanceStorageConfig {
  readonly InstanceId: string;
  readonly AssociationId: string;
  readonly ResourceType: string;
}
export interface DescribeQueue {
  readonly InstanceId: string;
  readonly QueueId: string;
}
export interface DescribeQuickConnect {
  readonly InstanceId: string;
  readonly QuickConnectId: string;
}
export interface DescribeRoutingProfile {
  readonly InstanceId: string;
  readonly RoutingProfileId: string;
}
export interface DescribeSecurityProfile {
  readonly SecurityProfileId: string;
  readonly InstanceId: string;
}
export interface DescribeUser {
  readonly UserId: string;
  readonly InstanceId: string;
}
export interface DescribeUserHierarchyGroup {
  readonly HierarchyGroupId: string;
  readonly InstanceId: string;
}
export interface DescribeUserHierarchyStructure {
  readonly InstanceId: string;
}
export interface DisassociateApprovedOrigin {
  readonly InstanceId: string;
  readonly Origin: string;
}
export interface DisassociateBot {
  readonly InstanceId: string;
  readonly LexBot: LexBot;
  readonly LexV2Bot: LexV2Bot;
}
export interface DisassociateInstanceStorageConfig {
  readonly InstanceId: string;
  readonly AssociationId: string;
  readonly ResourceType: string;
}
export interface DisassociateLambdaFunction {
  readonly InstanceId: string;
  readonly FunctionArn: string;
}
export interface DisassociateLexBot {
  readonly InstanceId: string;
  readonly BotName: string;
  readonly LexRegion: string;
}
export interface DisassociateQueueQuickConnects {
  readonly InstanceId: string;
  readonly QueueId: string;
  readonly QuickConnectIds: [];
}
export interface DisassociateRoutingProfileQueues {
  readonly InstanceId: string;
  readonly RoutingProfileId: string;
  readonly QueueReferences: [];
}
export interface DisassociateSecurityKey {
  readonly InstanceId: string;
  readonly AssociationId: string;
}
export interface GetContactAttributes {
  readonly InstanceId: string;
  readonly InitialContactId: string;
}
export interface GetCurrentMetricData {
  readonly InstanceId: string;
  readonly Filters: Filters;
  readonly Groupings: [];
  readonly CurrentMetrics: [];
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface GetFederationToken {
  readonly InstanceId: string;
}
export interface GetMetricData {
  readonly InstanceId: string;
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly Filters: Filters;
  readonly Groupings: [];
  readonly HistoricalMetrics: [];
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListAgentStatuses {
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly AgentStatusTypes: [];
}
export interface ListApprovedOrigins {
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListBots {
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly LexVersion: string;
}
export interface ListContactFlowModules {
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly ContactFlowModuleState: string;
}
export interface ListContactFlows {
  readonly InstanceId: string;
  readonly ContactFlowTypes: [];
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListContactReferences {
  readonly InstanceId: string;
  readonly ContactId: string;
  readonly ReferenceTypes: [];
  readonly NextToken: string;
}
export interface ListHoursOfOperations {
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListInstanceAttributes {
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListInstanceStorageConfigs {
  readonly InstanceId: string;
  readonly ResourceType: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListInstances {
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListIntegrationAssociations {
  readonly InstanceId: string;
  readonly IntegrationType: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListLambdaFunctions {
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListLexBots {
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListPhoneNumbers {
  readonly InstanceId: string;
  readonly PhoneNumberTypes: [];
  readonly PhoneNumberCountryCodes: [];
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListPrompts {
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListQueueQuickConnects {
  readonly InstanceId: string;
  readonly QueueId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListQueues {
  readonly InstanceId: string;
  readonly QueueTypes: [];
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListQuickConnects {
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly QuickConnectTypes: [];
}
export interface ListRoutingProfileQueues {
  readonly InstanceId: string;
  readonly RoutingProfileId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListRoutingProfiles {
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListSecurityKeys {
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListSecurityProfilePermissions {
  readonly SecurityProfileId: string;
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListSecurityProfiles {
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListTagsForResource {
  readonly resourceArn: string;
}
export interface ListUseCases {
  readonly InstanceId: string;
  readonly IntegrationAssociationId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListUserHierarchyGroups {
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ListUsers {
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ResumeContactRecording {
  readonly InstanceId: string;
  readonly ContactId: string;
  readonly InitialContactId: string;
}
export interface StartChatContact {
  readonly InstanceId: string;
  readonly ContactFlowId: string;
  readonly Attributes: {[key: string]: any};
  readonly ParticipantDetails: ParticipantDetails;
  readonly InitialMessage: ChatMessage;
  readonly ClientToken: string;
}
export interface StartContactRecording {
  readonly InstanceId: string;
  readonly ContactId: string;
  readonly InitialContactId: string;
  readonly VoiceRecordingConfiguration: VoiceRecordingConfiguration;
}
export interface StartContactStreaming {
  readonly InstanceId: string;
  readonly ContactId: string;
  readonly ChatStreamingConfiguration: ChatStreamingConfiguration;
  readonly ClientToken: string;
}
export interface StartOutboundVoiceContact {
  readonly DestinationPhoneNumber: string;
  readonly ContactFlowId: string;
  readonly InstanceId: string;
  readonly ClientToken: string;
  readonly SourcePhoneNumber: string;
  readonly QueueId: string;
  readonly Attributes: {[key: string]: any};
  readonly AnswerMachineDetectionConfig: AnswerMachineDetectionConfig;
  readonly CampaignId: string;
  readonly TrafficType: string;
}
export interface StartTaskContact {
  readonly InstanceId: string;
  readonly PreviousContactId: string;
  readonly ContactFlowId: string;
  readonly Attributes: {[key: string]: any};
  readonly Name: string;
  readonly References: {[key: string]: any};
  readonly Description: string;
  readonly ClientToken: string;
  readonly ScheduledTime: Date;
}
export interface StopContact {
  readonly ContactId: string;
  readonly InstanceId: string;
}
export interface StopContactRecording {
  readonly InstanceId: string;
  readonly ContactId: string;
  readonly InitialContactId: string;
}
export interface StopContactStreaming {
  readonly InstanceId: string;
  readonly ContactId: string;
  readonly StreamingId: string;
}
export interface SuspendContactRecording {
  readonly InstanceId: string;
  readonly ContactId: string;
  readonly InitialContactId: string;
}
export interface TagResource {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}
export interface UntagResource {
  readonly resourceArn: string;
  readonly tagKeys: [];
}
export interface UpdateAgentStatus {
  readonly InstanceId: string;
  readonly AgentStatusId: string;
  readonly Name: string;
  readonly Description: string;
  readonly State: string;
  readonly DisplayOrder: number;
  readonly ResetOrderNumber: boolean;
}
export interface UpdateContact {
  readonly InstanceId: string;
  readonly ContactId: string;
  readonly Name: string;
  readonly Description: string;
  readonly References: {[key: string]: any};
}
export interface UpdateContactAttributes {
  readonly InitialContactId: string;
  readonly InstanceId: string;
  readonly Attributes: {[key: string]: any};
}
export interface UpdateContactFlowContent {
  readonly InstanceId: string;
  readonly ContactFlowId: string;
  readonly Content: string;
}
export interface UpdateContactFlowMetadata {
  readonly InstanceId: string;
  readonly ContactFlowId: string;
  readonly Name: string;
  readonly Description: string;
  readonly ContactFlowState: string;
}
export interface UpdateContactFlowModuleContent {
  readonly InstanceId: string;
  readonly ContactFlowModuleId: string;
  readonly Content: string;
}
export interface UpdateContactFlowModuleMetadata {
  readonly InstanceId: string;
  readonly ContactFlowModuleId: string;
  readonly Name: string;
  readonly Description: string;
  readonly State: string;
}
export interface UpdateContactFlowName {
  readonly InstanceId: string;
  readonly ContactFlowId: string;
  readonly Name: string;
  readonly Description: string;
}
export interface UpdateContactSchedule {
  readonly InstanceId: string;
  readonly ContactId: string;
  readonly ScheduledTime: Date;
}
export interface UpdateHoursOfOperation {
  readonly InstanceId: string;
  readonly HoursOfOperationId: string;
  readonly Name: string;
  readonly Description: string;
  readonly TimeZone: string;
  readonly Config: [];
}
export interface UpdateInstanceAttribute {
  readonly InstanceId: string;
  readonly AttributeType: string;
  readonly Value: string;
}
export interface UpdateInstanceStorageConfig {
  readonly InstanceId: string;
  readonly AssociationId: string;
  readonly ResourceType: string;
  readonly StorageConfig: InstanceStorageConfig;
}
export interface UpdateQueueHoursOfOperation {
  readonly InstanceId: string;
  readonly QueueId: string;
  readonly HoursOfOperationId: string;
}
export interface UpdateQueueMaxContacts {
  readonly InstanceId: string;
  readonly QueueId: string;
  readonly MaxContacts: number;
}
export interface UpdateQueueName {
  readonly InstanceId: string;
  readonly QueueId: string;
  readonly Name: string;
  readonly Description: string;
}
export interface UpdateQueueOutboundCallerConfig {
  readonly InstanceId: string;
  readonly QueueId: string;
  readonly OutboundCallerConfig: OutboundCallerConfig;
}
export interface UpdateQueueStatus {
  readonly InstanceId: string;
  readonly QueueId: string;
  readonly Status: string;
}
export interface UpdateQuickConnectConfig {
  readonly InstanceId: string;
  readonly QuickConnectId: string;
  readonly QuickConnectConfig: QuickConnectConfig;
}
export interface UpdateQuickConnectName {
  readonly InstanceId: string;
  readonly QuickConnectId: string;
  readonly Name: string;
  readonly Description: string;
}
export interface UpdateRoutingProfileConcurrency {
  readonly InstanceId: string;
  readonly RoutingProfileId: string;
  readonly MediaConcurrencies: [];
}
export interface UpdateRoutingProfileDefaultOutboundQueue {
  readonly InstanceId: string;
  readonly RoutingProfileId: string;
  readonly DefaultOutboundQueueId: string;
}
export interface UpdateRoutingProfileName {
  readonly InstanceId: string;
  readonly RoutingProfileId: string;
  readonly Name: string;
  readonly Description: string;
}
export interface UpdateRoutingProfileQueues {
  readonly InstanceId: string;
  readonly RoutingProfileId: string;
  readonly QueueConfigs: [];
}
export interface UpdateSecurityProfile {
  readonly Description: string;
  readonly Permissions: [];
  readonly SecurityProfileId: string;
  readonly InstanceId: string;
}
export interface UpdateUserHierarchy {
  readonly HierarchyGroupId: string;
  readonly UserId: string;
  readonly InstanceId: string;
}
export interface UpdateUserHierarchyGroupName {
  readonly Name: string;
  readonly HierarchyGroupId: string;
  readonly InstanceId: string;
}
export interface UpdateUserHierarchyStructure {
  readonly HierarchyStructure: HierarchyStructureUpdate;
  readonly InstanceId: string;
}
export interface UpdateUserIdentityInfo {
  readonly IdentityInfo: UserIdentityInfo;
  readonly UserId: string;
  readonly InstanceId: string;
}
export interface UpdateUserPhoneConfig {
  readonly PhoneConfig: UserPhoneConfig;
  readonly UserId: string;
  readonly InstanceId: string;
}
export interface UpdateUserRoutingProfile {
  readonly RoutingProfileId: string;
  readonly UserId: string;
  readonly InstanceId: string;
}
export interface UpdateUserSecurityProfiles {
  readonly SecurityProfileIds: [];
  readonly UserId: string;
  readonly InstanceId: string;
}



interface AccessDeniedException {
  readonly Message: string;
}

interface AgentInfo {
  readonly Id: string;
  readonly ConnectedToAgentTimestamp: Date;
}

interface AgentStatus {
  readonly AgentStatusARN: string;
  readonly AgentStatusId: string;
  readonly Name: string;
  readonly Description: string;
  readonly Type: string;
  readonly DisplayOrder: number;
  readonly State: string;
  readonly Tags: {[key: string]: any};
}

interface AgentStatusSummary {
  readonly Id: string;
  readonly Arn: string;
  readonly Name: string;
  readonly Type: string;
}

interface AnswerMachineDetectionConfig {
  readonly EnableAnswerMachineDetection: boolean;
  readonly AwaitAnswerMachinePrompt: boolean;
}

interface AssociateApprovedOriginRequest {
  readonly InstanceId: string;
  readonly Origin: string;
}

interface AssociateBotRequest {
  readonly InstanceId: string;
  readonly LexBot: LexBot;
  readonly LexV2Bot: LexV2Bot;
}

interface AssociateInstanceStorageConfigRequest {
  readonly InstanceId: string;
  readonly ResourceType: string;
  readonly StorageConfig: InstanceStorageConfig;
}

interface AssociateInstanceStorageConfigResponse {
  readonly AssociationId: string;
}

interface AssociateLambdaFunctionRequest {
  readonly InstanceId: string;
  readonly FunctionArn: string;
}

interface AssociateLexBotRequest {
  readonly InstanceId: string;
  readonly LexBot: LexBot;
}

interface AssociateQueueQuickConnectsRequest {
  readonly InstanceId: string;
  readonly QueueId: string;
  readonly QuickConnectIds: [];
}

interface AssociateRoutingProfileQueuesRequest {
  readonly InstanceId: string;
  readonly RoutingProfileId: string;
  readonly QueueConfigs: [];
}

interface AssociateSecurityKeyRequest {
  readonly InstanceId: string;
  readonly Key: string;
}

interface AssociateSecurityKeyResponse {
  readonly AssociationId: string;
}

interface AttachmentReference {
  readonly Name: string;
  readonly Value: string;
  readonly Status: string;
}

interface Attribute {
  readonly AttributeType: string;
  readonly Value: string;
}

interface ChatMessage {
  readonly ContentType: string;
  readonly Content: string;
}

interface ChatStreamingConfiguration {
  readonly StreamingEndpointArn: string;
}

interface Contact {
  readonly Arn: string;
  readonly Id: string;
  readonly InitialContactId: string;
  readonly PreviousContactId: string;
  readonly InitiationMethod: string;
  readonly Name: string;
  readonly Description: string;
  readonly Channel: string;
  readonly QueueInfo: QueueInfo;
  readonly AgentInfo: AgentInfo;
  readonly InitiationTimestamp: Date;
  readonly DisconnectTimestamp: Date;
  readonly LastUpdateTimestamp: Date;
  readonly ScheduledTimestamp: Date;
}

interface ContactFlow {
  readonly Arn: string;
  readonly Id: string;
  readonly Name: string;
  readonly Type: string;
  readonly State: string;
  readonly Description: string;
  readonly Content: string;
  readonly Tags: {[key: string]: any};
}

interface ContactFlowModule {
  readonly Arn: string;
  readonly Id: string;
  readonly Name: string;
  readonly Content: string;
  readonly Description: string;
  readonly State: string;
  readonly Status: string;
  readonly Tags: {[key: string]: any};
}

interface ContactFlowModuleSummary {
  readonly Id: string;
  readonly Arn: string;
  readonly Name: string;
  readonly State: string;
}

interface ContactFlowNotPublishedException {
  readonly Message: string;
}

interface ContactFlowSummary {
  readonly Id: string;
  readonly Arn: string;
  readonly Name: string;
  readonly ContactFlowType: string;
  readonly ContactFlowState: string;
}

interface ContactNotFoundException {
  readonly Message: string;
}

interface CreateAgentStatusRequest {
  readonly InstanceId: string;
  readonly Name: string;
  readonly Description: string;
  readonly State: string;
  readonly DisplayOrder: number;
  readonly Tags: {[key: string]: any};
}

interface CreateAgentStatusResponse {
  readonly AgentStatusARN: string;
  readonly AgentStatusId: string;
}

interface CreateContactFlowModuleRequest {
  readonly InstanceId: string;
  readonly Name: string;
  readonly Description: string;
  readonly Content: string;
  readonly Tags: {[key: string]: any};
  readonly ClientToken: string;
}

interface CreateContactFlowModuleResponse {
  readonly Id: string;
  readonly Arn: string;
}

interface CreateContactFlowRequest {
  readonly InstanceId: string;
  readonly Name: string;
  readonly Type: string;
  readonly Description: string;
  readonly Content: string;
  readonly Tags: {[key: string]: any};
}

interface CreateContactFlowResponse {
  readonly ContactFlowId: string;
  readonly ContactFlowArn: string;
}

interface CreateHoursOfOperationRequest {
  readonly InstanceId: string;
  readonly Name: string;
  readonly Description: string;
  readonly TimeZone: string;
  readonly Config: [];
  readonly Tags: {[key: string]: any};
}

interface CreateHoursOfOperationResponse {
  readonly HoursOfOperationId: string;
  readonly HoursOfOperationArn: string;
}

interface CreateInstanceRequest {
  readonly ClientToken: string;
  readonly IdentityManagementType: string;
  readonly InstanceAlias: string;
  readonly DirectoryId: string;
  readonly InboundCallsEnabled: boolean;
  readonly OutboundCallsEnabled: boolean;
}

interface CreateInstanceResponse {
  readonly Id: string;
  readonly Arn: string;
}

interface CreateIntegrationAssociationRequest {
  readonly InstanceId: string;
  readonly IntegrationType: string;
  readonly IntegrationArn: string;
  readonly SourceApplicationUrl: string;
  readonly SourceApplicationName: string;
  readonly SourceType: string;
  readonly Tags: {[key: string]: any};
}

interface CreateIntegrationAssociationResponse {
  readonly IntegrationAssociationId: string;
  readonly IntegrationAssociationArn: string;
}

interface CreateQueueRequest {
  readonly InstanceId: string;
  readonly Name: string;
  readonly Description: string;
  readonly OutboundCallerConfig: OutboundCallerConfig;
  readonly HoursOfOperationId: string;
  readonly MaxContacts: number;
  readonly QuickConnectIds: [];
  readonly Tags: {[key: string]: any};
}

interface CreateQueueResponse {
  readonly QueueArn: string;
  readonly QueueId: string;
}

interface CreateQuickConnectRequest {
  readonly InstanceId: string;
  readonly Name: string;
  readonly Description: string;
  readonly QuickConnectConfig: QuickConnectConfig;
  readonly Tags: {[key: string]: any};
}

interface CreateQuickConnectResponse {
  readonly QuickConnectARN: string;
  readonly QuickConnectId: string;
}

interface CreateRoutingProfileRequest {
  readonly InstanceId: string;
  readonly Name: string;
  readonly Description: string;
  readonly DefaultOutboundQueueId: string;
  readonly QueueConfigs: [];
  readonly MediaConcurrencies: [];
  readonly Tags: {[key: string]: any};
}

interface CreateRoutingProfileResponse {
  readonly RoutingProfileArn: string;
  readonly RoutingProfileId: string;
}

interface CreateSecurityProfileRequest {
  readonly SecurityProfileName: string;
  readonly Description: string;
  readonly Permissions: [];
  readonly InstanceId: string;
  readonly Tags: {[key: string]: any};
}

interface CreateSecurityProfileResponse {
  readonly SecurityProfileId: string;
  readonly SecurityProfileArn: string;
}

interface CreateUseCaseRequest {
  readonly InstanceId: string;
  readonly IntegrationAssociationId: string;
  readonly UseCaseType: string;
  readonly Tags: {[key: string]: any};
}

interface CreateUseCaseResponse {
  readonly UseCaseId: string;
  readonly UseCaseArn: string;
}

interface CreateUserHierarchyGroupRequest {
  readonly Name: string;
  readonly ParentGroupId: string;
  readonly InstanceId: string;
}

interface CreateUserHierarchyGroupResponse {
  readonly HierarchyGroupId: string;
  readonly HierarchyGroupArn: string;
}

interface CreateUserRequest {
  readonly Username: string;
  readonly Password: string;
  readonly IdentityInfo: UserIdentityInfo;
  readonly PhoneConfig: UserPhoneConfig;
  readonly DirectoryUserId: string;
  readonly SecurityProfileIds: [];
  readonly RoutingProfileId: string;
  readonly HierarchyGroupId: string;
  readonly InstanceId: string;
  readonly Tags: {[key: string]: any};
}

interface CreateUserResponse {
  readonly UserId: string;
  readonly UserArn: string;
}

interface Credentials {
  readonly AccessToken: string;
  readonly AccessTokenExpiration: Date;
  readonly RefreshToken: string;
  readonly RefreshTokenExpiration: Date;
}

interface CurrentMetric {
  readonly Name: string;
  readonly Unit: string;
}

interface CurrentMetricData {
  readonly Metric: CurrentMetric;
  readonly Value: unknown;
}

interface CurrentMetricResult {
  readonly Dimensions: Dimensions;
  readonly Collections: [];
}

interface DeleteContactFlowModuleRequest {
  readonly InstanceId: string;
  readonly ContactFlowModuleId: string;
}

interface DeleteContactFlowModuleResponse {
}

interface DeleteContactFlowRequest {
  readonly InstanceId: string;
  readonly ContactFlowId: string;
}

interface DeleteHoursOfOperationRequest {
  readonly InstanceId: string;
  readonly HoursOfOperationId: string;
}

interface DeleteInstanceRequest {
  readonly InstanceId: string;
}

interface DeleteIntegrationAssociationRequest {
  readonly InstanceId: string;
  readonly IntegrationAssociationId: string;
}

interface DeleteQuickConnectRequest {
  readonly InstanceId: string;
  readonly QuickConnectId: string;
}

interface DeleteSecurityProfileRequest {
  readonly InstanceId: string;
  readonly SecurityProfileId: string;
}

interface DeleteUseCaseRequest {
  readonly InstanceId: string;
  readonly IntegrationAssociationId: string;
  readonly UseCaseId: string;
}

interface DeleteUserHierarchyGroupRequest {
  readonly HierarchyGroupId: string;
  readonly InstanceId: string;
}

interface DeleteUserRequest {
  readonly InstanceId: string;
  readonly UserId: string;
}

interface DescribeAgentStatusRequest {
  readonly InstanceId: string;
  readonly AgentStatusId: string;
}

interface DescribeAgentStatusResponse {
  readonly AgentStatus: AgentStatus;
}

interface DescribeContactFlowModuleRequest {
  readonly InstanceId: string;
  readonly ContactFlowModuleId: string;
}

interface DescribeContactFlowModuleResponse {
  readonly ContactFlowModule: ContactFlowModule;
}

interface DescribeContactFlowRequest {
  readonly InstanceId: string;
  readonly ContactFlowId: string;
}

interface DescribeContactFlowResponse {
  readonly ContactFlow: ContactFlow;
}

interface DescribeContactRequest {
  readonly InstanceId: string;
  readonly ContactId: string;
}

interface DescribeContactResponse {
  readonly Contact: Contact;
}

interface DescribeHoursOfOperationRequest {
  readonly InstanceId: string;
  readonly HoursOfOperationId: string;
}

interface DescribeHoursOfOperationResponse {
  readonly HoursOfOperation: HoursOfOperation;
}

interface DescribeInstanceAttributeRequest {
  readonly InstanceId: string;
  readonly AttributeType: string;
}

interface DescribeInstanceAttributeResponse {
  readonly Attribute: Attribute;
}

interface DescribeInstanceRequest {
  readonly InstanceId: string;
}

interface DescribeInstanceResponse {
  readonly Instance: Instance;
}

interface DescribeInstanceStorageConfigRequest {
  readonly InstanceId: string;
  readonly AssociationId: string;
  readonly ResourceType: string;
}

interface DescribeInstanceStorageConfigResponse {
  readonly StorageConfig: InstanceStorageConfig;
}

interface DescribeQueueRequest {
  readonly InstanceId: string;
  readonly QueueId: string;
}

interface DescribeQueueResponse {
  readonly Queue: Queue;
}

interface DescribeQuickConnectRequest {
  readonly InstanceId: string;
  readonly QuickConnectId: string;
}

interface DescribeQuickConnectResponse {
  readonly QuickConnect: QuickConnect;
}

interface DescribeRoutingProfileRequest {
  readonly InstanceId: string;
  readonly RoutingProfileId: string;
}

interface DescribeRoutingProfileResponse {
  readonly RoutingProfile: RoutingProfile;
}

interface DescribeSecurityProfileRequest {
  readonly SecurityProfileId: string;
  readonly InstanceId: string;
}

interface DescribeSecurityProfileResponse {
  readonly SecurityProfile: SecurityProfile;
}

interface DescribeUserHierarchyGroupRequest {
  readonly HierarchyGroupId: string;
  readonly InstanceId: string;
}

interface DescribeUserHierarchyGroupResponse {
  readonly HierarchyGroup: HierarchyGroup;
}

interface DescribeUserHierarchyStructureRequest {
  readonly InstanceId: string;
}

interface DescribeUserHierarchyStructureResponse {
  readonly HierarchyStructure: HierarchyStructure;
}

interface DescribeUserRequest {
  readonly UserId: string;
  readonly InstanceId: string;
}

interface DescribeUserResponse {
  readonly User: User;
}

interface DestinationNotAllowedException {
  readonly Message: string;
}

interface Dimensions {
  readonly Queue: QueueReference;
  readonly Channel: string;
}

interface DisassociateApprovedOriginRequest {
  readonly InstanceId: string;
  readonly Origin: string;
}

interface DisassociateBotRequest {
  readonly InstanceId: string;
  readonly LexBot: LexBot;
  readonly LexV2Bot: LexV2Bot;
}

interface DisassociateInstanceStorageConfigRequest {
  readonly InstanceId: string;
  readonly AssociationId: string;
  readonly ResourceType: string;
}

interface DisassociateLambdaFunctionRequest {
  readonly InstanceId: string;
  readonly FunctionArn: string;
}

interface DisassociateLexBotRequest {
  readonly InstanceId: string;
  readonly BotName: string;
  readonly LexRegion: string;
}

interface DisassociateQueueQuickConnectsRequest {
  readonly InstanceId: string;
  readonly QueueId: string;
  readonly QuickConnectIds: [];
}

interface DisassociateRoutingProfileQueuesRequest {
  readonly InstanceId: string;
  readonly RoutingProfileId: string;
  readonly QueueReferences: [];
}

interface DisassociateSecurityKeyRequest {
  readonly InstanceId: string;
  readonly AssociationId: string;
}

interface DuplicateResourceException {
  readonly Message: string;
}

interface EncryptionConfig {
  readonly EncryptionType: string;
  readonly KeyId: string;
}

interface Filters {
  readonly Queues: [];
  readonly Channels: [];
}

interface GetContactAttributesRequest {
  readonly InstanceId: string;
  readonly InitialContactId: string;
}

interface GetContactAttributesResponse {
  readonly Attributes: {[key: string]: any};
}

interface GetCurrentMetricDataRequest {
  readonly InstanceId: string;
  readonly Filters: Filters;
  readonly Groupings: [];
  readonly CurrentMetrics: [];
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface GetCurrentMetricDataResponse {
  readonly NextToken: string;
  readonly MetricResults: [];
  readonly DataSnapshotTime: Date;
}

interface GetFederationTokenRequest {
  readonly InstanceId: string;
}

interface GetFederationTokenResponse {
  readonly Credentials: Credentials;
}

interface GetMetricDataRequest {
  readonly InstanceId: string;
  readonly StartTime: Date;
  readonly EndTime: Date;
  readonly Filters: Filters;
  readonly Groupings: [];
  readonly HistoricalMetrics: [];
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface GetMetricDataResponse {
  readonly NextToken: string;
  readonly MetricResults: [];
}

interface HierarchyGroup {
  readonly Id: string;
  readonly Arn: string;
  readonly Name: string;
  readonly LevelId: string;
  readonly HierarchyPath: HierarchyPath;
}

interface HierarchyGroupSummary {
  readonly Id: string;
  readonly Arn: string;
  readonly Name: string;
}

interface HierarchyLevel {
  readonly Id: string;
  readonly Arn: string;
  readonly Name: string;
}

interface HierarchyLevelUpdate {
  readonly Name: string;
}

interface HierarchyPath {
  readonly LevelOne: HierarchyGroupSummary;
  readonly LevelTwo: HierarchyGroupSummary;
  readonly LevelThree: HierarchyGroupSummary;
  readonly LevelFour: HierarchyGroupSummary;
  readonly LevelFive: HierarchyGroupSummary;
}

interface HierarchyStructure {
  readonly LevelOne: HierarchyLevel;
  readonly LevelTwo: HierarchyLevel;
  readonly LevelThree: HierarchyLevel;
  readonly LevelFour: HierarchyLevel;
  readonly LevelFive: HierarchyLevel;
}

interface HierarchyStructureUpdate {
  readonly LevelOne: HierarchyLevelUpdate;
  readonly LevelTwo: HierarchyLevelUpdate;
  readonly LevelThree: HierarchyLevelUpdate;
  readonly LevelFour: HierarchyLevelUpdate;
  readonly LevelFive: HierarchyLevelUpdate;
}

interface HistoricalMetric {
  readonly Name: string;
  readonly Threshold: Threshold;
  readonly Statistic: string;
  readonly Unit: string;
}

interface HistoricalMetricData {
  readonly Metric: HistoricalMetric;
  readonly Value: unknown;
}

interface HistoricalMetricResult {
  readonly Dimensions: Dimensions;
  readonly Collections: [];
}

interface HoursOfOperation {
  readonly HoursOfOperationId: string;
  readonly HoursOfOperationArn: string;
  readonly Name: string;
  readonly Description: string;
  readonly TimeZone: string;
  readonly Config: [];
  readonly Tags: {[key: string]: any};
}

interface HoursOfOperationConfig {
  readonly Day: string;
  readonly StartTime: HoursOfOperationTimeSlice;
  readonly EndTime: HoursOfOperationTimeSlice;
}

interface HoursOfOperationSummary {
  readonly Id: string;
  readonly Arn: string;
  readonly Name: string;
}

interface HoursOfOperationTimeSlice {
  readonly Hours: number;
  readonly Minutes: number;
}

interface IdempotencyException {
  readonly Message: string;
}

interface Instance {
  readonly Id: string;
  readonly Arn: string;
  readonly IdentityManagementType: string;
  readonly InstanceAlias: string;
  readonly CreatedTime: Date;
  readonly ServiceRole: string;
  readonly InstanceStatus: string;
  readonly StatusReason: InstanceStatusReason;
  readonly InboundCallsEnabled: boolean;
  readonly OutboundCallsEnabled: boolean;
}

interface InstanceStatusReason {
  readonly Message: string;
}

interface InstanceStorageConfig {
  readonly AssociationId: string;
  readonly StorageType: string;
  readonly S3Config: S3Config;
  readonly KinesisVideoStreamConfig: KinesisVideoStreamConfig;
  readonly KinesisStreamConfig: KinesisStreamConfig;
  readonly KinesisFirehoseConfig: KinesisFirehoseConfig;
}

interface InstanceSummary {
  readonly Id: string;
  readonly Arn: string;
  readonly IdentityManagementType: string;
  readonly InstanceAlias: string;
  readonly CreatedTime: Date;
  readonly ServiceRole: string;
  readonly InstanceStatus: string;
  readonly InboundCallsEnabled: boolean;
  readonly OutboundCallsEnabled: boolean;
}

interface IntegrationAssociationSummary {
  readonly IntegrationAssociationId: string;
  readonly IntegrationAssociationArn: string;
  readonly InstanceId: string;
  readonly IntegrationType: string;
  readonly IntegrationArn: string;
  readonly SourceApplicationUrl: string;
  readonly SourceApplicationName: string;
  readonly SourceType: string;
}

interface InternalServiceException {
  readonly Message: string;
}

interface InvalidContactFlowException {
  readonly problems: [];
}

interface InvalidContactFlowModuleException {
  readonly Problems: [];
}

interface InvalidParameterException {
  readonly Message: string;
}

interface InvalidRequestException {
  readonly Message: string;
}

interface KinesisFirehoseConfig {
  readonly FirehoseArn: string;
}

interface KinesisStreamConfig {
  readonly StreamArn: string;
}

interface KinesisVideoStreamConfig {
  readonly Prefix: string;
  readonly RetentionPeriodHours: number;
  readonly EncryptionConfig: EncryptionConfig;
}

interface LexBot {
  readonly Name: string;
  readonly LexRegion: string;
}

interface LexBotConfig {
  readonly LexBot: LexBot;
  readonly LexV2Bot: LexV2Bot;
}

interface LexV2Bot {
  readonly AliasArn: string;
}

interface LimitExceededException {
  readonly Message: string;
}

interface ListAgentStatusRequest {
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly AgentStatusTypes: [];
}

interface ListAgentStatusResponse {
  readonly NextToken: string;
  readonly AgentStatusSummaryList: [];
}

interface ListApprovedOriginsRequest {
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListApprovedOriginsResponse {
  readonly Origins: [];
  readonly NextToken: string;
}

interface ListBotsRequest {
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly LexVersion: string;
}

interface ListBotsResponse {
  readonly LexBots: [];
  readonly NextToken: string;
}

interface ListContactFlowModulesRequest {
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly ContactFlowModuleState: string;
}

interface ListContactFlowModulesResponse {
  readonly ContactFlowModulesSummaryList: [];
  readonly NextToken: string;
}

interface ListContactFlowsRequest {
  readonly InstanceId: string;
  readonly ContactFlowTypes: [];
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListContactFlowsResponse {
  readonly ContactFlowSummaryList: [];
  readonly NextToken: string;
}

interface ListContactReferencesRequest {
  readonly InstanceId: string;
  readonly ContactId: string;
  readonly ReferenceTypes: [];
  readonly NextToken: string;
}

interface ListContactReferencesResponse {
  readonly ReferenceSummaryList: [];
  readonly NextToken: string;
}

interface ListHoursOfOperationsRequest {
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListHoursOfOperationsResponse {
  readonly HoursOfOperationSummaryList: [];
  readonly NextToken: string;
}

interface ListInstanceAttributesRequest {
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListInstanceAttributesResponse {
  readonly Attributes: [];
  readonly NextToken: string;
}

interface ListInstanceStorageConfigsRequest {
  readonly InstanceId: string;
  readonly ResourceType: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListInstanceStorageConfigsResponse {
  readonly StorageConfigs: [];
  readonly NextToken: string;
}

interface ListInstancesRequest {
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListInstancesResponse {
  readonly InstanceSummaryList: [];
  readonly NextToken: string;
}

interface ListIntegrationAssociationsRequest {
  readonly InstanceId: string;
  readonly IntegrationType: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListIntegrationAssociationsResponse {
  readonly IntegrationAssociationSummaryList: [];
  readonly NextToken: string;
}

interface ListLambdaFunctionsRequest {
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListLambdaFunctionsResponse {
  readonly LambdaFunctions: [];
  readonly NextToken: string;
}

interface ListLexBotsRequest {
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListLexBotsResponse {
  readonly LexBots: [];
  readonly NextToken: string;
}

interface ListPhoneNumbersRequest {
  readonly InstanceId: string;
  readonly PhoneNumberTypes: [];
  readonly PhoneNumberCountryCodes: [];
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListPhoneNumbersResponse {
  readonly PhoneNumberSummaryList: [];
  readonly NextToken: string;
}

interface ListPromptsRequest {
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListPromptsResponse {
  readonly PromptSummaryList: [];
  readonly NextToken: string;
}

interface ListQueueQuickConnectsRequest {
  readonly InstanceId: string;
  readonly QueueId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListQueueQuickConnectsResponse {
  readonly NextToken: string;
  readonly QuickConnectSummaryList: [];
}

interface ListQueuesRequest {
  readonly InstanceId: string;
  readonly QueueTypes: [];
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListQueuesResponse {
  readonly QueueSummaryList: [];
  readonly NextToken: string;
}

interface ListQuickConnectsRequest {
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly QuickConnectTypes: [];
}

interface ListQuickConnectsResponse {
  readonly QuickConnectSummaryList: [];
  readonly NextToken: string;
}

interface ListRoutingProfileQueuesRequest {
  readonly InstanceId: string;
  readonly RoutingProfileId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListRoutingProfileQueuesResponse {
  readonly NextToken: string;
  readonly RoutingProfileQueueConfigSummaryList: [];
}

interface ListRoutingProfilesRequest {
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListRoutingProfilesResponse {
  readonly RoutingProfileSummaryList: [];
  readonly NextToken: string;
}

interface ListSecurityKeysRequest {
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListSecurityKeysResponse {
  readonly SecurityKeys: [];
  readonly NextToken: string;
}

interface ListSecurityProfilePermissionsRequest {
  readonly SecurityProfileId: string;
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListSecurityProfilePermissionsResponse {
  readonly Permissions: [];
  readonly NextToken: string;
}

interface ListSecurityProfilesRequest {
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListSecurityProfilesResponse {
  readonly SecurityProfileSummaryList: [];
  readonly NextToken: string;
}

interface ListTagsForResourceRequest {
  readonly resourceArn: string;
}

interface ListTagsForResourceResponse {
  readonly tags: {[key: string]: any};
}

interface ListUseCasesRequest {
  readonly InstanceId: string;
  readonly IntegrationAssociationId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListUseCasesResponse {
  readonly UseCaseSummaryList: [];
  readonly NextToken: string;
}

interface ListUserHierarchyGroupsRequest {
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListUserHierarchyGroupsResponse {
  readonly UserHierarchyGroupSummaryList: [];
  readonly NextToken: string;
}

interface ListUsersRequest {
  readonly InstanceId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListUsersResponse {
  readonly UserSummaryList: [];
  readonly NextToken: string;
}

interface MediaConcurrency {
  readonly Channel: string;
  readonly Concurrency: number;
}

interface OutboundCallerConfig {
  readonly OutboundCallerIdName: string;
  readonly OutboundCallerIdNumberId: string;
  readonly OutboundFlowId: string;
}

interface OutboundContactNotPermittedException {
  readonly Message: string;
}

interface ParticipantDetails {
  readonly DisplayName: string;
}

interface PhoneNumberQuickConnectConfig {
  readonly PhoneNumber: string;
}

interface PhoneNumberSummary {
  readonly Id: string;
  readonly Arn: string;
  readonly PhoneNumber: string;
  readonly PhoneNumberType: string;
  readonly PhoneNumberCountryCode: string;
}

interface ProblemDetail {
  readonly message: string;
}

interface PromptSummary {
  readonly Id: string;
  readonly Arn: string;
  readonly Name: string;
}

interface Queue {
  readonly Name: string;
  readonly QueueArn: string;
  readonly QueueId: string;
  readonly Description: string;
  readonly OutboundCallerConfig: OutboundCallerConfig;
  readonly HoursOfOperationId: string;
  readonly MaxContacts: number;
  readonly Status: string;
  readonly Tags: {[key: string]: any};
}

interface QueueInfo {
  readonly Id: string;
  readonly EnqueueTimestamp: Date;
}

interface QueueQuickConnectConfig {
  readonly QueueId: string;
  readonly ContactFlowId: string;
}

interface QueueReference {
  readonly Id: string;
  readonly Arn: string;
}

interface QueueSummary {
  readonly Id: string;
  readonly Arn: string;
  readonly Name: string;
  readonly QueueType: string;
}

interface QuickConnect {
  readonly QuickConnectARN: string;
  readonly QuickConnectId: string;
  readonly Name: string;
  readonly Description: string;
  readonly QuickConnectConfig: QuickConnectConfig;
  readonly Tags: {[key: string]: any};
}

interface QuickConnectConfig {
  readonly QuickConnectType: string;
  readonly UserConfig: UserQuickConnectConfig;
  readonly QueueConfig: QueueQuickConnectConfig;
  readonly PhoneConfig: PhoneNumberQuickConnectConfig;
}

interface QuickConnectSummary {
  readonly Id: string;
  readonly Arn: string;
  readonly Name: string;
  readonly QuickConnectType: string;
}

interface Reference {
  readonly Value: string;
  readonly Type: string;
}

interface ReferenceSummary {
  readonly Url: UrlReference;
  readonly Attachment: AttachmentReference;
}

interface ResourceConflictException {
  readonly Message: string;
}

interface ResourceInUseException {
  readonly Message: string;
  readonly ResourceType: string;
  readonly ResourceId: string;
}

interface ResourceNotFoundException {
  readonly Message: string;
}

interface ResumeContactRecordingRequest {
  readonly InstanceId: string;
  readonly ContactId: string;
  readonly InitialContactId: string;
}

interface ResumeContactRecordingResponse {
}

interface RoutingProfile {
  readonly InstanceId: string;
  readonly Name: string;
  readonly RoutingProfileArn: string;
  readonly RoutingProfileId: string;
  readonly Description: string;
  readonly MediaConcurrencies: [];
  readonly DefaultOutboundQueueId: string;
  readonly Tags: {[key: string]: any};
}

interface RoutingProfileQueueConfig {
  readonly QueueReference: RoutingProfileQueueReference;
  readonly Priority: number;
  readonly Delay: number;
}

interface RoutingProfileQueueConfigSummary {
  readonly QueueId: string;
  readonly QueueArn: string;
  readonly QueueName: string;
  readonly Priority: number;
  readonly Delay: number;
  readonly Channel: string;
}

interface RoutingProfileQueueReference {
  readonly QueueId: string;
  readonly Channel: string;
}

interface RoutingProfileSummary {
  readonly Id: string;
  readonly Arn: string;
  readonly Name: string;
}

interface S3Config {
  readonly BucketName: string;
  readonly BucketPrefix: string;
  readonly EncryptionConfig: EncryptionConfig;
}

interface SecurityKey {
  readonly AssociationId: string;
  readonly Key: string;
  readonly CreationTime: Date;
}

interface SecurityProfile {
  readonly Id: string;
  readonly OrganizationResourceId: string;
  readonly Arn: string;
  readonly SecurityProfileName: string;
  readonly Description: string;
  readonly Tags: {[key: string]: any};
}

interface SecurityProfileSummary {
  readonly Id: string;
  readonly Arn: string;
  readonly Name: string;
}

interface ServiceQuotaExceededException {
  readonly Message: string;
}

interface StartChatContactRequest {
  readonly InstanceId: string;
  readonly ContactFlowId: string;
  readonly Attributes: {[key: string]: any};
  readonly ParticipantDetails: ParticipantDetails;
  readonly InitialMessage: ChatMessage;
  readonly ClientToken: string;
}

interface StartChatContactResponse {
  readonly ContactId: string;
  readonly ParticipantId: string;
  readonly ParticipantToken: string;
}

interface StartContactRecordingRequest {
  readonly InstanceId: string;
  readonly ContactId: string;
  readonly InitialContactId: string;
  readonly VoiceRecordingConfiguration: VoiceRecordingConfiguration;
}

interface StartContactRecordingResponse {
}

interface StartContactStreamingRequest {
  readonly InstanceId: string;
  readonly ContactId: string;
  readonly ChatStreamingConfiguration: ChatStreamingConfiguration;
  readonly ClientToken: string;
}

interface StartContactStreamingResponse {
  readonly StreamingId: string;
}

interface StartOutboundVoiceContactRequest {
  readonly DestinationPhoneNumber: string;
  readonly ContactFlowId: string;
  readonly InstanceId: string;
  readonly ClientToken: string;
  readonly SourcePhoneNumber: string;
  readonly QueueId: string;
  readonly Attributes: {[key: string]: any};
  readonly AnswerMachineDetectionConfig: AnswerMachineDetectionConfig;
  readonly CampaignId: string;
  readonly TrafficType: string;
}

interface StartOutboundVoiceContactResponse {
  readonly ContactId: string;
}

interface StartTaskContactRequest {
  readonly InstanceId: string;
  readonly PreviousContactId: string;
  readonly ContactFlowId: string;
  readonly Attributes: {[key: string]: any};
  readonly Name: string;
  readonly References: {[key: string]: any};
  readonly Description: string;
  readonly ClientToken: string;
  readonly ScheduledTime: Date;
}

interface StartTaskContactResponse {
  readonly ContactId: string;
}

interface StopContactRecordingRequest {
  readonly InstanceId: string;
  readonly ContactId: string;
  readonly InitialContactId: string;
}

interface StopContactRecordingResponse {
}

interface StopContactRequest {
  readonly ContactId: string;
  readonly InstanceId: string;
}

interface StopContactResponse {
}

interface StopContactStreamingRequest {
  readonly InstanceId: string;
  readonly ContactId: string;
  readonly StreamingId: string;
}

interface StopContactStreamingResponse {
}

interface SuspendContactRecordingRequest {
  readonly InstanceId: string;
  readonly ContactId: string;
  readonly InitialContactId: string;
}

interface SuspendContactRecordingResponse {
}

interface TagResourceRequest {
  readonly resourceArn: string;
  readonly tags: {[key: string]: any};
}

interface Threshold {
  readonly Comparison: string;
  readonly ThresholdValue: unknown;
}

interface ThrottlingException {
  readonly Message: string;
}

interface UntagResourceRequest {
  readonly resourceArn: string;
  readonly tagKeys: [];
}

interface UpdateAgentStatusRequest {
  readonly InstanceId: string;
  readonly AgentStatusId: string;
  readonly Name: string;
  readonly Description: string;
  readonly State: string;
  readonly DisplayOrder: number;
  readonly ResetOrderNumber: boolean;
}

interface UpdateContactAttributesRequest {
  readonly InitialContactId: string;
  readonly InstanceId: string;
  readonly Attributes: {[key: string]: any};
}

interface UpdateContactAttributesResponse {
}

interface UpdateContactFlowContentRequest {
  readonly InstanceId: string;
  readonly ContactFlowId: string;
  readonly Content: string;
}

interface UpdateContactFlowMetadataRequest {
  readonly InstanceId: string;
  readonly ContactFlowId: string;
  readonly Name: string;
  readonly Description: string;
  readonly ContactFlowState: string;
}

interface UpdateContactFlowModuleContentRequest {
  readonly InstanceId: string;
  readonly ContactFlowModuleId: string;
  readonly Content: string;
}

interface UpdateContactFlowModuleContentResponse {
}

interface UpdateContactFlowModuleMetadataRequest {
  readonly InstanceId: string;
  readonly ContactFlowModuleId: string;
  readonly Name: string;
  readonly Description: string;
  readonly State: string;
}

interface UpdateContactFlowModuleMetadataResponse {
}

interface UpdateContactFlowNameRequest {
  readonly InstanceId: string;
  readonly ContactFlowId: string;
  readonly Name: string;
  readonly Description: string;
}

interface UpdateContactRequest {
  readonly InstanceId: string;
  readonly ContactId: string;
  readonly Name: string;
  readonly Description: string;
  readonly References: {[key: string]: any};
}

interface UpdateContactResponse {
}

interface UpdateContactScheduleRequest {
  readonly InstanceId: string;
  readonly ContactId: string;
  readonly ScheduledTime: Date;
}

interface UpdateContactScheduleResponse {
}

interface UpdateHoursOfOperationRequest {
  readonly InstanceId: string;
  readonly HoursOfOperationId: string;
  readonly Name: string;
  readonly Description: string;
  readonly TimeZone: string;
  readonly Config: [];
}

interface UpdateInstanceAttributeRequest {
  readonly InstanceId: string;
  readonly AttributeType: string;
  readonly Value: string;
}

interface UpdateInstanceStorageConfigRequest {
  readonly InstanceId: string;
  readonly AssociationId: string;
  readonly ResourceType: string;
  readonly StorageConfig: InstanceStorageConfig;
}

interface UpdateQueueHoursOfOperationRequest {
  readonly InstanceId: string;
  readonly QueueId: string;
  readonly HoursOfOperationId: string;
}

interface UpdateQueueMaxContactsRequest {
  readonly InstanceId: string;
  readonly QueueId: string;
  readonly MaxContacts: number;
}

interface UpdateQueueNameRequest {
  readonly InstanceId: string;
  readonly QueueId: string;
  readonly Name: string;
  readonly Description: string;
}

interface UpdateQueueOutboundCallerConfigRequest {
  readonly InstanceId: string;
  readonly QueueId: string;
  readonly OutboundCallerConfig: OutboundCallerConfig;
}

interface UpdateQueueStatusRequest {
  readonly InstanceId: string;
  readonly QueueId: string;
  readonly Status: string;
}

interface UpdateQuickConnectConfigRequest {
  readonly InstanceId: string;
  readonly QuickConnectId: string;
  readonly QuickConnectConfig: QuickConnectConfig;
}

interface UpdateQuickConnectNameRequest {
  readonly InstanceId: string;
  readonly QuickConnectId: string;
  readonly Name: string;
  readonly Description: string;
}

interface UpdateRoutingProfileConcurrencyRequest {
  readonly InstanceId: string;
  readonly RoutingProfileId: string;
  readonly MediaConcurrencies: [];
}

interface UpdateRoutingProfileDefaultOutboundQueueRequest {
  readonly InstanceId: string;
  readonly RoutingProfileId: string;
  readonly DefaultOutboundQueueId: string;
}

interface UpdateRoutingProfileNameRequest {
  readonly InstanceId: string;
  readonly RoutingProfileId: string;
  readonly Name: string;
  readonly Description: string;
}

interface UpdateRoutingProfileQueuesRequest {
  readonly InstanceId: string;
  readonly RoutingProfileId: string;
  readonly QueueConfigs: [];
}

interface UpdateSecurityProfileRequest {
  readonly Description: string;
  readonly Permissions: [];
  readonly SecurityProfileId: string;
  readonly InstanceId: string;
}

interface UpdateUserHierarchyGroupNameRequest {
  readonly Name: string;
  readonly HierarchyGroupId: string;
  readonly InstanceId: string;
}

interface UpdateUserHierarchyRequest {
  readonly HierarchyGroupId: string;
  readonly UserId: string;
  readonly InstanceId: string;
}

interface UpdateUserHierarchyStructureRequest {
  readonly HierarchyStructure: HierarchyStructureUpdate;
  readonly InstanceId: string;
}

interface UpdateUserIdentityInfoRequest {
  readonly IdentityInfo: UserIdentityInfo;
  readonly UserId: string;
  readonly InstanceId: string;
}

interface UpdateUserPhoneConfigRequest {
  readonly PhoneConfig: UserPhoneConfig;
  readonly UserId: string;
  readonly InstanceId: string;
}

interface UpdateUserRoutingProfileRequest {
  readonly RoutingProfileId: string;
  readonly UserId: string;
  readonly InstanceId: string;
}

interface UpdateUserSecurityProfilesRequest {
  readonly SecurityProfileIds: [];
  readonly UserId: string;
  readonly InstanceId: string;
}

interface UrlReference {
  readonly Name: string;
  readonly Value: string;
}

interface UseCase {
  readonly UseCaseId: string;
  readonly UseCaseArn: string;
  readonly UseCaseType: string;
}

interface User {
  readonly Id: string;
  readonly Arn: string;
  readonly Username: string;
  readonly IdentityInfo: UserIdentityInfo;
  readonly PhoneConfig: UserPhoneConfig;
  readonly DirectoryUserId: string;
  readonly SecurityProfileIds: [];
  readonly RoutingProfileId: string;
  readonly HierarchyGroupId: string;
  readonly Tags: {[key: string]: any};
}

interface UserIdentityInfo {
  readonly FirstName: string;
  readonly LastName: string;
  readonly Email: string;
}

interface UserNotFoundException {
  readonly Message: string;
}

interface UserPhoneConfig {
  readonly PhoneType: string;
  readonly AutoAccept: boolean;
  readonly AfterContactWorkTimeLimit: number;
  readonly DeskPhoneNumber: string;
}

interface UserQuickConnectConfig {
  readonly UserId: string;
  readonly ContactFlowId: string;
}

interface UserSummary {
  readonly Id: string;
  readonly Arn: string;
  readonly Username: string;
}

interface VoiceRecordingConfiguration {
  readonly VoiceRecordingTrack: string;
}

