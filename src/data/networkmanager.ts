/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AcceptAttachment {
  readonly AttachmentId: string;
}
export interface AssociateConnectPeer {
  readonly GlobalNetworkId: string;
  readonly ConnectPeerId: string;
  readonly DeviceId: string;
  readonly LinkId: string;
}
export interface AssociateCustomerGateway {
  readonly CustomerGatewayArn: string;
  readonly GlobalNetworkId: string;
  readonly DeviceId: string;
  readonly LinkId: string;
}
export interface AssociateLink {
  readonly GlobalNetworkId: string;
  readonly DeviceId: string;
  readonly LinkId: string;
}
export interface AssociateTransitGatewayConnectPeer {
  readonly GlobalNetworkId: string;
  readonly TransitGatewayConnectPeerArn: string;
  readonly DeviceId: string;
  readonly LinkId: string;
}
export interface CreateConnectAttachment {
  readonly CoreNetworkId: string;
  readonly EdgeLocation: string;
  readonly TransportAttachmentId: string;
  readonly Options: ConnectAttachmentOptions;
  readonly Tags: [];
  readonly ClientToken: string;
}
export interface CreateConnectPeer {
  readonly ConnectAttachmentId: string;
  readonly CoreNetworkAddress: string;
  readonly PeerAddress: string;
  readonly BgpOptions: BgpOptions;
  readonly InsideCidrBlocks: [];
  readonly Tags: [];
  readonly ClientToken: string;
}
export interface CreateConnection {
  readonly GlobalNetworkId: string;
  readonly DeviceId: string;
  readonly ConnectedDeviceId: string;
  readonly LinkId: string;
  readonly ConnectedLinkId: string;
  readonly Description: string;
  readonly Tags: [];
}
export interface CreateCoreNetwork {
  readonly GlobalNetworkId: string;
  readonly Description: string;
  readonly Tags: [];
  readonly PolicyDocument: string;
  readonly ClientToken: string;
}
export interface CreateDevice {
  readonly GlobalNetworkId: string;
  readonly AWSLocation: AWSLocation;
  readonly Description: string;
  readonly Type: string;
  readonly Vendor: string;
  readonly Model: string;
  readonly SerialNumber: string;
  readonly Location: Location;
  readonly SiteId: string;
  readonly Tags: [];
}
export interface CreateGlobalNetwork {
  readonly Description: string;
  readonly Tags: [];
}
export interface CreateLink {
  readonly GlobalNetworkId: string;
  readonly Description: string;
  readonly Type: string;
  readonly Bandwidth: Bandwidth;
  readonly Provider: string;
  readonly SiteId: string;
  readonly Tags: [];
}
export interface CreateSite {
  readonly GlobalNetworkId: string;
  readonly Description: string;
  readonly Location: Location;
  readonly Tags: [];
}
export interface CreateSiteToSiteVpnAttachment {
  readonly CoreNetworkId: string;
  readonly VpnConnectionArn: string;
  readonly Tags: [];
  readonly ClientToken: string;
}
export interface CreateVpcAttachment {
  readonly CoreNetworkId: string;
  readonly VpcArn: string;
  readonly SubnetArns: [];
  readonly Options: VpcOptions;
  readonly Tags: [];
  readonly ClientToken: string;
}
export interface DeleteAttachment {
  readonly AttachmentId: string;
}
export interface DeleteConnectPeer {
  readonly ConnectPeerId: string;
}
export interface DeleteConnection {
  readonly GlobalNetworkId: string;
  readonly ConnectionId: string;
}
export interface DeleteCoreNetwork {
  readonly CoreNetworkId: string;
}
export interface DeleteCoreNetworkPolicyVersion {
  readonly CoreNetworkId: string;
  readonly PolicyVersionId: number;
}
export interface DeleteDevice {
  readonly GlobalNetworkId: string;
  readonly DeviceId: string;
}
export interface DeleteGlobalNetwork {
  readonly GlobalNetworkId: string;
}
export interface DeleteLink {
  readonly GlobalNetworkId: string;
  readonly LinkId: string;
}
export interface DeleteResourcePolicy {
  readonly ResourceArn: string;
}
export interface DeleteSite {
  readonly GlobalNetworkId: string;
  readonly SiteId: string;
}
export interface DeregisterTransitGateway {
  readonly GlobalNetworkId: string;
  readonly TransitGatewayArn: string;
}
export interface DescribeGlobalNetworks {
  readonly GlobalNetworkIds: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface DisassociateConnectPeer {
  readonly GlobalNetworkId: string;
  readonly ConnectPeerId: string;
}
export interface DisassociateCustomerGateway {
  readonly GlobalNetworkId: string;
  readonly CustomerGatewayArn: string;
}
export interface DisassociateLink {
  readonly GlobalNetworkId: string;
  readonly DeviceId: string;
  readonly LinkId: string;
}
export interface DisassociateTransitGatewayConnectPeer {
  readonly GlobalNetworkId: string;
  readonly TransitGatewayConnectPeerArn: string;
}
export interface ExecuteCoreNetworkChangeSet {
  readonly CoreNetworkId: string;
  readonly PolicyVersionId: number;
}
export interface GetConnectAttachment {
  readonly AttachmentId: string;
}
export interface GetConnectPeer {
  readonly ConnectPeerId: string;
}
export interface GetConnectPeerAssociations {
  readonly GlobalNetworkId: string;
  readonly ConnectPeerIds: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface GetConnections {
  readonly GlobalNetworkId: string;
  readonly ConnectionIds: [];
  readonly DeviceId: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface GetCoreNetwork {
  readonly CoreNetworkId: string;
}
export interface GetCoreNetworkChangeSet {
  readonly CoreNetworkId: string;
  readonly PolicyVersionId: number;
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface GetCoreNetworkPolicy {
  readonly CoreNetworkId: string;
  readonly PolicyVersionId: number;
  readonly Alias: string;
}
export interface GetCustomerGatewayAssociations {
  readonly GlobalNetworkId: string;
  readonly CustomerGatewayArns: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface GetDevices {
  readonly GlobalNetworkId: string;
  readonly DeviceIds: [];
  readonly SiteId: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface GetLinkAssociations {
  readonly GlobalNetworkId: string;
  readonly DeviceId: string;
  readonly LinkId: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface GetLinks {
  readonly GlobalNetworkId: string;
  readonly LinkIds: [];
  readonly SiteId: string;
  readonly Type: string;
  readonly Provider: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface GetNetworkResourceCounts {
  readonly GlobalNetworkId: string;
  readonly ResourceType: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface GetNetworkResourceRelationships {
  readonly GlobalNetworkId: string;
  readonly CoreNetworkId: string;
  readonly RegisteredGatewayArn: string;
  readonly AwsRegion: string;
  readonly AccountId: string;
  readonly ResourceType: string;
  readonly ResourceArn: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface GetNetworkResources {
  readonly GlobalNetworkId: string;
  readonly CoreNetworkId: string;
  readonly RegisteredGatewayArn: string;
  readonly AwsRegion: string;
  readonly AccountId: string;
  readonly ResourceType: string;
  readonly ResourceArn: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface GetNetworkRoutes {
  readonly GlobalNetworkId: string;
  readonly RouteTableIdentifier: RouteTableIdentifier;
  readonly ExactCidrMatches: [];
  readonly LongestPrefixMatches: [];
  readonly SubnetOfMatches: [];
  readonly SupernetOfMatches: [];
  readonly PrefixListIds: [];
  readonly States: [];
  readonly Types: [];
  readonly DestinationFilters: {[key: string]: any};
}
export interface GetNetworkTelemetry {
  readonly GlobalNetworkId: string;
  readonly CoreNetworkId: string;
  readonly RegisteredGatewayArn: string;
  readonly AwsRegion: string;
  readonly AccountId: string;
  readonly ResourceType: string;
  readonly ResourceArn: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface GetResourcePolicy {
  readonly ResourceArn: string;
}
export interface GetRouteAnalysis {
  readonly GlobalNetworkId: string;
  readonly RouteAnalysisId: string;
}
export interface GetSiteToSiteVpnAttachment {
  readonly AttachmentId: string;
}
export interface GetSites {
  readonly GlobalNetworkId: string;
  readonly SiteIds: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface GetTransitGatewayConnectPeerAssociations {
  readonly GlobalNetworkId: string;
  readonly TransitGatewayConnectPeerArns: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface GetTransitGatewayRegistrations {
  readonly GlobalNetworkId: string;
  readonly TransitGatewayArns: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface GetVpcAttachment {
  readonly AttachmentId: string;
}
export interface ListAttachments {
  readonly CoreNetworkId: string;
  readonly AttachmentType: string;
  readonly EdgeLocation: string;
  readonly State: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface ListConnectPeers {
  readonly CoreNetworkId: string;
  readonly ConnectAttachmentId: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface ListCoreNetworkPolicyVersions {
  readonly CoreNetworkId: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface ListCoreNetworks {
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface ListTagsForResource {
  readonly ResourceArn: string;
}
export interface PutCoreNetworkPolicy {
  readonly CoreNetworkId: string;
  readonly PolicyDocument: string;
  readonly Description: string;
  readonly LatestVersionId: number;
  readonly ClientToken: string;
}
export interface PutResourcePolicy {
  readonly PolicyDocument: string;
  readonly ResourceArn: string;
}
export interface RegisterTransitGateway {
  readonly GlobalNetworkId: string;
  readonly TransitGatewayArn: string;
}
export interface RejectAttachment {
  readonly AttachmentId: string;
}
export interface RestoreCoreNetworkPolicyVersion {
  readonly CoreNetworkId: string;
  readonly PolicyVersionId: number;
}
export interface StartRouteAnalysis {
  readonly GlobalNetworkId: string;
  readonly Source: RouteAnalysisEndpointOptionsSpecification;
  readonly Destination: RouteAnalysisEndpointOptionsSpecification;
  readonly IncludeReturnPath: boolean;
  readonly UseMiddleboxes: boolean;
}
export interface TagResource {
  readonly ResourceArn: string;
  readonly Tags: [];
}
export interface UntagResource {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}
export interface UpdateConnection {
  readonly GlobalNetworkId: string;
  readonly ConnectionId: string;
  readonly LinkId: string;
  readonly ConnectedLinkId: string;
  readonly Description: string;
}
export interface UpdateCoreNetwork {
  readonly CoreNetworkId: string;
  readonly Description: string;
}
export interface UpdateDevice {
  readonly GlobalNetworkId: string;
  readonly DeviceId: string;
  readonly AWSLocation: AWSLocation;
  readonly Description: string;
  readonly Type: string;
  readonly Vendor: string;
  readonly Model: string;
  readonly SerialNumber: string;
  readonly Location: Location;
  readonly SiteId: string;
}
export interface UpdateGlobalNetwork {
  readonly GlobalNetworkId: string;
  readonly Description: string;
}
export interface UpdateLink {
  readonly GlobalNetworkId: string;
  readonly LinkId: string;
  readonly Description: string;
  readonly Type: string;
  readonly Bandwidth: Bandwidth;
  readonly Provider: string;
}
export interface UpdateNetworkResourceMetadata {
  readonly GlobalNetworkId: string;
  readonly ResourceArn: string;
  readonly Metadata: {[key: string]: any};
}
export interface UpdateSite {
  readonly GlobalNetworkId: string;
  readonly SiteId: string;
  readonly Description: string;
  readonly Location: Location;
}
export interface UpdateVpcAttachment {
  readonly AttachmentId: string;
  readonly AddSubnetArns: [];
  readonly RemoveSubnetArns: [];
  readonly Options: VpcOptions;
}



interface AWSLocation {
  readonly Zone: string;
  readonly SubnetArn: string;
}

interface AcceptAttachmentRequest {
  readonly AttachmentId: string;
}

interface AcceptAttachmentResponse {
  readonly Attachment: Attachment;
}

interface AccessDeniedException {
  readonly Message: string;
}

interface AssociateConnectPeerRequest {
  readonly GlobalNetworkId: string;
  readonly ConnectPeerId: string;
  readonly DeviceId: string;
  readonly LinkId: string;
}

interface AssociateConnectPeerResponse {
  readonly ConnectPeerAssociation: ConnectPeerAssociation;
}

interface AssociateCustomerGatewayRequest {
  readonly CustomerGatewayArn: string;
  readonly GlobalNetworkId: string;
  readonly DeviceId: string;
  readonly LinkId: string;
}

interface AssociateCustomerGatewayResponse {
  readonly CustomerGatewayAssociation: CustomerGatewayAssociation;
}

interface AssociateLinkRequest {
  readonly GlobalNetworkId: string;
  readonly DeviceId: string;
  readonly LinkId: string;
}

interface AssociateLinkResponse {
  readonly LinkAssociation: LinkAssociation;
}

interface AssociateTransitGatewayConnectPeerRequest {
  readonly GlobalNetworkId: string;
  readonly TransitGatewayConnectPeerArn: string;
  readonly DeviceId: string;
  readonly LinkId: string;
}

interface AssociateTransitGatewayConnectPeerResponse {
  readonly TransitGatewayConnectPeerAssociation: TransitGatewayConnectPeerAssociation;
}

interface Attachment {
  readonly CoreNetworkId: string;
  readonly CoreNetworkArn: string;
  readonly AttachmentId: string;
  readonly OwnerAccountId: string;
  readonly AttachmentType: string;
  readonly State: string;
  readonly EdgeLocation: string;
  readonly ResourceArn: string;
  readonly AttachmentPolicyRuleNumber: number;
  readonly SegmentName: string;
  readonly Tags: [];
  readonly ProposedSegmentChange: ProposedSegmentChange;
  readonly CreatedAt: Date;
  readonly UpdatedAt: Date;
}

interface Bandwidth {
  readonly UploadSpeed: number;
  readonly DownloadSpeed: number;
}

interface BgpOptions {
  readonly PeerAsn: number;
}

interface ConflictException {
  readonly Message: string;
  readonly ResourceId: string;
  readonly ResourceType: string;
}

interface ConnectAttachment {
  readonly Attachment: Attachment;
  readonly TransportAttachmentId: string;
  readonly Options: ConnectAttachmentOptions;
}

interface ConnectAttachmentOptions {
  readonly Protocol: string;
}

interface ConnectPeer {
  readonly CoreNetworkId: string;
  readonly ConnectAttachmentId: string;
  readonly ConnectPeerId: string;
  readonly EdgeLocation: string;
  readonly State: string;
  readonly CreatedAt: Date;
  readonly Configuration: ConnectPeerConfiguration;
  readonly Tags: [];
}

interface ConnectPeerAssociation {
  readonly ConnectPeerId: string;
  readonly GlobalNetworkId: string;
  readonly DeviceId: string;
  readonly LinkId: string;
  readonly State: string;
}

interface ConnectPeerBgpConfiguration {
  readonly CoreNetworkAsn: number;
  readonly PeerAsn: number;
  readonly CoreNetworkAddress: string;
  readonly PeerAddress: string;
}

interface ConnectPeerConfiguration {
  readonly CoreNetworkAddress: string;
  readonly PeerAddress: string;
  readonly InsideCidrBlocks: [];
  readonly Protocol: string;
  readonly BgpConfigurations: [];
}

interface ConnectPeerSummary {
  readonly CoreNetworkId: string;
  readonly ConnectAttachmentId: string;
  readonly ConnectPeerId: string;
  readonly EdgeLocation: string;
  readonly ConnectPeerState: string;
  readonly CreatedAt: Date;
  readonly Tags: [];
}

interface Connection {
  readonly ConnectionId: string;
  readonly ConnectionArn: string;
  readonly GlobalNetworkId: string;
  readonly DeviceId: string;
  readonly ConnectedDeviceId: string;
  readonly LinkId: string;
  readonly ConnectedLinkId: string;
  readonly Description: string;
  readonly CreatedAt: Date;
  readonly State: string;
  readonly Tags: [];
}

interface ConnectionHealth {
  readonly Type: string;
  readonly Status: string;
  readonly Timestamp: Date;
}

interface CoreNetwork {
  readonly GlobalNetworkId: string;
  readonly CoreNetworkId: string;
  readonly CoreNetworkArn: string;
  readonly Description: string;
  readonly CreatedAt: Date;
  readonly State: string;
  readonly Segments: [];
  readonly Edges: [];
  readonly Tags: [];
}

interface CoreNetworkChange {
  readonly Type: string;
  readonly Action: string;
  readonly Identifier: string;
  readonly PreviousValues: CoreNetworkChangeValues;
  readonly NewValues: CoreNetworkChangeValues;
}

interface CoreNetworkChangeValues {
  readonly SegmentName: string;
  readonly EdgeLocations: [];
  readonly Asn: number;
  readonly Cidr: string;
  readonly DestinationIdentifier: string;
  readonly InsideCidrBlocks: [];
  readonly SharedSegments: [];
}

interface CoreNetworkEdge {
  readonly EdgeLocation: string;
  readonly Asn: number;
  readonly InsideCidrBlocks: [];
}

interface CoreNetworkPolicy {
  readonly CoreNetworkId: string;
  readonly PolicyVersionId: number;
  readonly Alias: string;
  readonly Description: string;
  readonly CreatedAt: Date;
  readonly ChangeSetState: string;
  readonly PolicyErrors: [];
  readonly PolicyDocument: string;
}

interface CoreNetworkPolicyError {
  readonly ErrorCode: string;
  readonly Message: string;
  readonly Path: string;
}

interface CoreNetworkPolicyException {
  readonly Message: string;
  readonly Errors: [];
}

interface CoreNetworkPolicyVersion {
  readonly CoreNetworkId: string;
  readonly PolicyVersionId: number;
  readonly Alias: string;
  readonly Description: string;
  readonly CreatedAt: Date;
  readonly ChangeSetState: string;
}

interface CoreNetworkSegment {
  readonly Name: string;
  readonly EdgeLocations: [];
  readonly SharedSegments: [];
}

interface CoreNetworkSegmentEdgeIdentifier {
  readonly CoreNetworkId: string;
  readonly SegmentName: string;
  readonly EdgeLocation: string;
}

interface CoreNetworkSummary {
  readonly CoreNetworkId: string;
  readonly CoreNetworkArn: string;
  readonly GlobalNetworkId: string;
  readonly OwnerAccountId: string;
  readonly State: string;
  readonly Description: string;
  readonly Tags: [];
}

interface CreateConnectAttachmentRequest {
  readonly CoreNetworkId: string;
  readonly EdgeLocation: string;
  readonly TransportAttachmentId: string;
  readonly Options: ConnectAttachmentOptions;
  readonly Tags: [];
  readonly ClientToken: string;
}

interface CreateConnectAttachmentResponse {
  readonly ConnectAttachment: ConnectAttachment;
}

interface CreateConnectPeerRequest {
  readonly ConnectAttachmentId: string;
  readonly CoreNetworkAddress: string;
  readonly PeerAddress: string;
  readonly BgpOptions: BgpOptions;
  readonly InsideCidrBlocks: [];
  readonly Tags: [];
  readonly ClientToken: string;
}

interface CreateConnectPeerResponse {
  readonly ConnectPeer: ConnectPeer;
}

interface CreateConnectionRequest {
  readonly GlobalNetworkId: string;
  readonly DeviceId: string;
  readonly ConnectedDeviceId: string;
  readonly LinkId: string;
  readonly ConnectedLinkId: string;
  readonly Description: string;
  readonly Tags: [];
}

interface CreateConnectionResponse {
  readonly Connection: Connection;
}

interface CreateCoreNetworkRequest {
  readonly GlobalNetworkId: string;
  readonly Description: string;
  readonly Tags: [];
  readonly PolicyDocument: string;
  readonly ClientToken: string;
}

interface CreateCoreNetworkResponse {
  readonly CoreNetwork: CoreNetwork;
}

interface CreateDeviceRequest {
  readonly GlobalNetworkId: string;
  readonly AWSLocation: AWSLocation;
  readonly Description: string;
  readonly Type: string;
  readonly Vendor: string;
  readonly Model: string;
  readonly SerialNumber: string;
  readonly Location: Location;
  readonly SiteId: string;
  readonly Tags: [];
}

interface CreateDeviceResponse {
  readonly Device: Device;
}

interface CreateGlobalNetworkRequest {
  readonly Description: string;
  readonly Tags: [];
}

interface CreateGlobalNetworkResponse {
  readonly GlobalNetwork: GlobalNetwork;
}

interface CreateLinkRequest {
  readonly GlobalNetworkId: string;
  readonly Description: string;
  readonly Type: string;
  readonly Bandwidth: Bandwidth;
  readonly Provider: string;
  readonly SiteId: string;
  readonly Tags: [];
}

interface CreateLinkResponse {
  readonly Link: Link;
}

interface CreateSiteRequest {
  readonly GlobalNetworkId: string;
  readonly Description: string;
  readonly Location: Location;
  readonly Tags: [];
}

interface CreateSiteResponse {
  readonly Site: Site;
}

interface CreateSiteToSiteVpnAttachmentRequest {
  readonly CoreNetworkId: string;
  readonly VpnConnectionArn: string;
  readonly Tags: [];
  readonly ClientToken: string;
}

interface CreateSiteToSiteVpnAttachmentResponse {
  readonly SiteToSiteVpnAttachment: SiteToSiteVpnAttachment;
}

interface CreateVpcAttachmentRequest {
  readonly CoreNetworkId: string;
  readonly VpcArn: string;
  readonly SubnetArns: [];
  readonly Options: VpcOptions;
  readonly Tags: [];
  readonly ClientToken: string;
}

interface CreateVpcAttachmentResponse {
  readonly VpcAttachment: VpcAttachment;
}

interface CustomerGatewayAssociation {
  readonly CustomerGatewayArn: string;
  readonly GlobalNetworkId: string;
  readonly DeviceId: string;
  readonly LinkId: string;
  readonly State: string;
}

interface DeleteAttachmentRequest {
  readonly AttachmentId: string;
}

interface DeleteAttachmentResponse {
  readonly Attachment: Attachment;
}

interface DeleteConnectPeerRequest {
  readonly ConnectPeerId: string;
}

interface DeleteConnectPeerResponse {
  readonly ConnectPeer: ConnectPeer;
}

interface DeleteConnectionRequest {
  readonly GlobalNetworkId: string;
  readonly ConnectionId: string;
}

interface DeleteConnectionResponse {
  readonly Connection: Connection;
}

interface DeleteCoreNetworkPolicyVersionRequest {
  readonly CoreNetworkId: string;
  readonly PolicyVersionId: number;
}

interface DeleteCoreNetworkPolicyVersionResponse {
  readonly CoreNetworkPolicy: CoreNetworkPolicy;
}

interface DeleteCoreNetworkRequest {
  readonly CoreNetworkId: string;
}

interface DeleteCoreNetworkResponse {
  readonly CoreNetwork: CoreNetwork;
}

interface DeleteDeviceRequest {
  readonly GlobalNetworkId: string;
  readonly DeviceId: string;
}

interface DeleteDeviceResponse {
  readonly Device: Device;
}

interface DeleteGlobalNetworkRequest {
  readonly GlobalNetworkId: string;
}

interface DeleteGlobalNetworkResponse {
  readonly GlobalNetwork: GlobalNetwork;
}

interface DeleteLinkRequest {
  readonly GlobalNetworkId: string;
  readonly LinkId: string;
}

interface DeleteLinkResponse {
  readonly Link: Link;
}

interface DeleteResourcePolicyRequest {
  readonly ResourceArn: string;
}

interface DeleteResourcePolicyResponse {
}

interface DeleteSiteRequest {
  readonly GlobalNetworkId: string;
  readonly SiteId: string;
}

interface DeleteSiteResponse {
  readonly Site: Site;
}

interface DeregisterTransitGatewayRequest {
  readonly GlobalNetworkId: string;
  readonly TransitGatewayArn: string;
}

interface DeregisterTransitGatewayResponse {
  readonly TransitGatewayRegistration: TransitGatewayRegistration;
}

interface DescribeGlobalNetworksRequest {
  readonly GlobalNetworkIds: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface DescribeGlobalNetworksResponse {
  readonly GlobalNetworks: [];
  readonly NextToken: string;
}

interface Device {
  readonly DeviceId: string;
  readonly DeviceArn: string;
  readonly GlobalNetworkId: string;
  readonly AWSLocation: AWSLocation;
  readonly Description: string;
  readonly Type: string;
  readonly Vendor: string;
  readonly Model: string;
  readonly SerialNumber: string;
  readonly Location: Location;
  readonly SiteId: string;
  readonly CreatedAt: Date;
  readonly State: string;
  readonly Tags: [];
}

interface DisassociateConnectPeerRequest {
  readonly GlobalNetworkId: string;
  readonly ConnectPeerId: string;
}

interface DisassociateConnectPeerResponse {
  readonly ConnectPeerAssociation: ConnectPeerAssociation;
}

interface DisassociateCustomerGatewayRequest {
  readonly GlobalNetworkId: string;
  readonly CustomerGatewayArn: string;
}

interface DisassociateCustomerGatewayResponse {
  readonly CustomerGatewayAssociation: CustomerGatewayAssociation;
}

interface DisassociateLinkRequest {
  readonly GlobalNetworkId: string;
  readonly DeviceId: string;
  readonly LinkId: string;
}

interface DisassociateLinkResponse {
  readonly LinkAssociation: LinkAssociation;
}

interface DisassociateTransitGatewayConnectPeerRequest {
  readonly GlobalNetworkId: string;
  readonly TransitGatewayConnectPeerArn: string;
}

interface DisassociateTransitGatewayConnectPeerResponse {
  readonly TransitGatewayConnectPeerAssociation: TransitGatewayConnectPeerAssociation;
}

interface ExecuteCoreNetworkChangeSetRequest {
  readonly CoreNetworkId: string;
  readonly PolicyVersionId: number;
}

interface ExecuteCoreNetworkChangeSetResponse {
}

interface GetConnectAttachmentRequest {
  readonly AttachmentId: string;
}

interface GetConnectAttachmentResponse {
  readonly ConnectAttachment: ConnectAttachment;
}

interface GetConnectPeerAssociationsRequest {
  readonly GlobalNetworkId: string;
  readonly ConnectPeerIds: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface GetConnectPeerAssociationsResponse {
  readonly ConnectPeerAssociations: [];
  readonly NextToken: string;
}

interface GetConnectPeerRequest {
  readonly ConnectPeerId: string;
}

interface GetConnectPeerResponse {
  readonly ConnectPeer: ConnectPeer;
}

interface GetConnectionsRequest {
  readonly GlobalNetworkId: string;
  readonly ConnectionIds: [];
  readonly DeviceId: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface GetConnectionsResponse {
  readonly Connections: [];
  readonly NextToken: string;
}

interface GetCoreNetworkChangeSetRequest {
  readonly CoreNetworkId: string;
  readonly PolicyVersionId: number;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface GetCoreNetworkChangeSetResponse {
  readonly CoreNetworkChanges: [];
  readonly NextToken: string;
}

interface GetCoreNetworkPolicyRequest {
  readonly CoreNetworkId: string;
  readonly PolicyVersionId: number;
  readonly Alias: string;
}

interface GetCoreNetworkPolicyResponse {
  readonly CoreNetworkPolicy: CoreNetworkPolicy;
}

interface GetCoreNetworkRequest {
  readonly CoreNetworkId: string;
}

interface GetCoreNetworkResponse {
  readonly CoreNetwork: CoreNetwork;
}

interface GetCustomerGatewayAssociationsRequest {
  readonly GlobalNetworkId: string;
  readonly CustomerGatewayArns: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface GetCustomerGatewayAssociationsResponse {
  readonly CustomerGatewayAssociations: [];
  readonly NextToken: string;
}

interface GetDevicesRequest {
  readonly GlobalNetworkId: string;
  readonly DeviceIds: [];
  readonly SiteId: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface GetDevicesResponse {
  readonly Devices: [];
  readonly NextToken: string;
}

interface GetLinkAssociationsRequest {
  readonly GlobalNetworkId: string;
  readonly DeviceId: string;
  readonly LinkId: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface GetLinkAssociationsResponse {
  readonly LinkAssociations: [];
  readonly NextToken: string;
}

interface GetLinksRequest {
  readonly GlobalNetworkId: string;
  readonly LinkIds: [];
  readonly SiteId: string;
  readonly Type: string;
  readonly Provider: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface GetLinksResponse {
  readonly Links: [];
  readonly NextToken: string;
}

interface GetNetworkResourceCountsRequest {
  readonly GlobalNetworkId: string;
  readonly ResourceType: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface GetNetworkResourceCountsResponse {
  readonly NetworkResourceCounts: [];
  readonly NextToken: string;
}

interface GetNetworkResourceRelationshipsRequest {
  readonly GlobalNetworkId: string;
  readonly CoreNetworkId: string;
  readonly RegisteredGatewayArn: string;
  readonly AwsRegion: string;
  readonly AccountId: string;
  readonly ResourceType: string;
  readonly ResourceArn: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface GetNetworkResourceRelationshipsResponse {
  readonly Relationships: [];
  readonly NextToken: string;
}

interface GetNetworkResourcesRequest {
  readonly GlobalNetworkId: string;
  readonly CoreNetworkId: string;
  readonly RegisteredGatewayArn: string;
  readonly AwsRegion: string;
  readonly AccountId: string;
  readonly ResourceType: string;
  readonly ResourceArn: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface GetNetworkResourcesResponse {
  readonly NetworkResources: [];
  readonly NextToken: string;
}

interface GetNetworkRoutesRequest {
  readonly GlobalNetworkId: string;
  readonly RouteTableIdentifier: RouteTableIdentifier;
  readonly ExactCidrMatches: [];
  readonly LongestPrefixMatches: [];
  readonly SubnetOfMatches: [];
  readonly SupernetOfMatches: [];
  readonly PrefixListIds: [];
  readonly States: [];
  readonly Types: [];
  readonly DestinationFilters: {[key: string]: any};
}

interface GetNetworkRoutesResponse {
  readonly RouteTableArn: string;
  readonly CoreNetworkSegmentEdge: CoreNetworkSegmentEdgeIdentifier;
  readonly RouteTableType: string;
  readonly RouteTableTimestamp: Date;
  readonly NetworkRoutes: [];
}

interface GetNetworkTelemetryRequest {
  readonly GlobalNetworkId: string;
  readonly CoreNetworkId: string;
  readonly RegisteredGatewayArn: string;
  readonly AwsRegion: string;
  readonly AccountId: string;
  readonly ResourceType: string;
  readonly ResourceArn: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface GetNetworkTelemetryResponse {
  readonly NetworkTelemetry: [];
  readonly NextToken: string;
}

interface GetResourcePolicyRequest {
  readonly ResourceArn: string;
}

interface GetResourcePolicyResponse {
  readonly PolicyDocument: string;
}

interface GetRouteAnalysisRequest {
  readonly GlobalNetworkId: string;
  readonly RouteAnalysisId: string;
}

interface GetRouteAnalysisResponse {
  readonly RouteAnalysis: RouteAnalysis;
}

interface GetSiteToSiteVpnAttachmentRequest {
  readonly AttachmentId: string;
}

interface GetSiteToSiteVpnAttachmentResponse {
  readonly SiteToSiteVpnAttachment: SiteToSiteVpnAttachment;
}

interface GetSitesRequest {
  readonly GlobalNetworkId: string;
  readonly SiteIds: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface GetSitesResponse {
  readonly Sites: [];
  readonly NextToken: string;
}

interface GetTransitGatewayConnectPeerAssociationsRequest {
  readonly GlobalNetworkId: string;
  readonly TransitGatewayConnectPeerArns: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface GetTransitGatewayConnectPeerAssociationsResponse {
  readonly TransitGatewayConnectPeerAssociations: [];
  readonly NextToken: string;
}

interface GetTransitGatewayRegistrationsRequest {
  readonly GlobalNetworkId: string;
  readonly TransitGatewayArns: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface GetTransitGatewayRegistrationsResponse {
  readonly TransitGatewayRegistrations: [];
  readonly NextToken: string;
}

interface GetVpcAttachmentRequest {
  readonly AttachmentId: string;
}

interface GetVpcAttachmentResponse {
  readonly VpcAttachment: VpcAttachment;
}

interface GlobalNetwork {
  readonly GlobalNetworkId: string;
  readonly GlobalNetworkArn: string;
  readonly Description: string;
  readonly CreatedAt: Date;
  readonly State: string;
  readonly Tags: [];
}

interface InternalServerException {
  readonly Message: string;
  readonly RetryAfterSeconds: number;
}

interface Link {
  readonly LinkId: string;
  readonly LinkArn: string;
  readonly GlobalNetworkId: string;
  readonly SiteId: string;
  readonly Description: string;
  readonly Type: string;
  readonly Bandwidth: Bandwidth;
  readonly Provider: string;
  readonly CreatedAt: Date;
  readonly State: string;
  readonly Tags: [];
}

interface LinkAssociation {
  readonly GlobalNetworkId: string;
  readonly DeviceId: string;
  readonly LinkId: string;
  readonly LinkAssociationState: string;
}

interface ListAttachmentsRequest {
  readonly CoreNetworkId: string;
  readonly AttachmentType: string;
  readonly EdgeLocation: string;
  readonly State: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListAttachmentsResponse {
  readonly Attachments: [];
  readonly NextToken: string;
}

interface ListConnectPeersRequest {
  readonly CoreNetworkId: string;
  readonly ConnectAttachmentId: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListConnectPeersResponse {
  readonly ConnectPeers: [];
  readonly NextToken: string;
}

interface ListCoreNetworkPolicyVersionsRequest {
  readonly CoreNetworkId: string;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListCoreNetworkPolicyVersionsResponse {
  readonly CoreNetworkPolicyVersions: [];
  readonly NextToken: string;
}

interface ListCoreNetworksRequest {
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListCoreNetworksResponse {
  readonly CoreNetworks: [];
  readonly NextToken: string;
}

interface ListTagsForResourceRequest {
  readonly ResourceArn: string;
}

interface ListTagsForResourceResponse {
  readonly TagList: [];
}

interface Location {
  readonly Address: string;
  readonly Latitude: string;
  readonly Longitude: string;
}

interface NetworkResource {
  readonly RegisteredGatewayArn: string;
  readonly CoreNetworkId: string;
  readonly AwsRegion: string;
  readonly AccountId: string;
  readonly ResourceType: string;
  readonly ResourceId: string;
  readonly ResourceArn: string;
  readonly Definition: string;
  readonly DefinitionTimestamp: Date;
  readonly Tags: [];
  readonly Metadata: {[key: string]: any};
}

interface NetworkResourceCount {
  readonly ResourceType: string;
  readonly Count: number;
}

interface NetworkResourceSummary {
  readonly RegisteredGatewayArn: string;
  readonly ResourceArn: string;
  readonly ResourceType: string;
  readonly Definition: string;
  readonly NameTag: string;
  readonly IsMiddlebox: boolean;
}

interface NetworkRoute {
  readonly DestinationCidrBlock: string;
  readonly Destinations: [];
  readonly PrefixListId: string;
  readonly State: string;
  readonly Type: string;
}

interface NetworkRouteDestination {
  readonly CoreNetworkAttachmentId: string;
  readonly TransitGatewayAttachmentId: string;
  readonly SegmentName: string;
  readonly EdgeLocation: string;
  readonly ResourceType: string;
  readonly ResourceId: string;
}

interface NetworkTelemetry {
  readonly RegisteredGatewayArn: string;
  readonly CoreNetworkId: string;
  readonly AwsRegion: string;
  readonly AccountId: string;
  readonly ResourceType: string;
  readonly ResourceId: string;
  readonly ResourceArn: string;
  readonly Address: string;
  readonly Health: ConnectionHealth;
}

interface PathComponent {
  readonly Sequence: number;
  readonly Resource: NetworkResourceSummary;
  readonly DestinationCidrBlock: string;
}

interface ProposedSegmentChange {
  readonly Tags: [];
  readonly AttachmentPolicyRuleNumber: number;
  readonly SegmentName: string;
}

interface PutCoreNetworkPolicyRequest {
  readonly CoreNetworkId: string;
  readonly PolicyDocument: string;
  readonly Description: string;
  readonly LatestVersionId: number;
  readonly ClientToken: string;
}

interface PutCoreNetworkPolicyResponse {
  readonly CoreNetworkPolicy: CoreNetworkPolicy;
}

interface PutResourcePolicyRequest {
  readonly PolicyDocument: string;
  readonly ResourceArn: string;
}

interface PutResourcePolicyResponse {
}

interface RegisterTransitGatewayRequest {
  readonly GlobalNetworkId: string;
  readonly TransitGatewayArn: string;
}

interface RegisterTransitGatewayResponse {
  readonly TransitGatewayRegistration: TransitGatewayRegistration;
}

interface RejectAttachmentRequest {
  readonly AttachmentId: string;
}

interface RejectAttachmentResponse {
  readonly Attachment: Attachment;
}

interface Relationship {
  readonly From: string;
  readonly To: string;
}

interface ResourceNotFoundException {
  readonly Message: string;
  readonly ResourceId: string;
  readonly ResourceType: string;
  readonly Context: {[key: string]: any};
}

interface RestoreCoreNetworkPolicyVersionRequest {
  readonly CoreNetworkId: string;
  readonly PolicyVersionId: number;
}

interface RestoreCoreNetworkPolicyVersionResponse {
  readonly CoreNetworkPolicy: CoreNetworkPolicy;
}

interface RouteAnalysis {
  readonly GlobalNetworkId: string;
  readonly OwnerAccountId: string;
  readonly RouteAnalysisId: string;
  readonly StartTimestamp: Date;
  readonly Status: string;
  readonly Source: RouteAnalysisEndpointOptions;
  readonly Destination: RouteAnalysisEndpointOptions;
  readonly IncludeReturnPath: boolean;
  readonly UseMiddleboxes: boolean;
  readonly ForwardPath: RouteAnalysisPath;
  readonly ReturnPath: RouteAnalysisPath;
}

interface RouteAnalysisCompletion {
  readonly ResultCode: string;
  readonly ReasonCode: string;
  readonly ReasonContext: {[key: string]: any};
}

interface RouteAnalysisEndpointOptions {
  readonly TransitGatewayAttachmentArn: string;
  readonly TransitGatewayArn: string;
  readonly IpAddress: string;
}

interface RouteAnalysisEndpointOptionsSpecification {
  readonly TransitGatewayAttachmentArn: string;
  readonly IpAddress: string;
}

interface RouteAnalysisPath {
  readonly CompletionStatus: RouteAnalysisCompletion;
  readonly Path: [];
}

interface RouteTableIdentifier {
  readonly TransitGatewayRouteTableArn: string;
  readonly CoreNetworkSegmentEdge: CoreNetworkSegmentEdgeIdentifier;
}

interface ServiceQuotaExceededException {
  readonly Message: string;
  readonly ResourceId: string;
  readonly ResourceType: string;
  readonly LimitCode: string;
  readonly ServiceCode: string;
}

interface Site {
  readonly SiteId: string;
  readonly SiteArn: string;
  readonly GlobalNetworkId: string;
  readonly Description: string;
  readonly Location: Location;
  readonly CreatedAt: Date;
  readonly State: string;
  readonly Tags: [];
}

interface SiteToSiteVpnAttachment {
  readonly Attachment: Attachment;
  readonly VpnConnectionArn: string;
}

interface StartRouteAnalysisRequest {
  readonly GlobalNetworkId: string;
  readonly Source: RouteAnalysisEndpointOptionsSpecification;
  readonly Destination: RouteAnalysisEndpointOptionsSpecification;
  readonly IncludeReturnPath: boolean;
  readonly UseMiddleboxes: boolean;
}

interface StartRouteAnalysisResponse {
  readonly RouteAnalysis: RouteAnalysis;
}

interface Tag {
  readonly Key: string;
  readonly Value: string;
}

interface TagResourceRequest {
  readonly ResourceArn: string;
  readonly Tags: [];
}

interface TagResourceResponse {
}

interface ThrottlingException {
  readonly Message: string;
  readonly RetryAfterSeconds: number;
}

interface TransitGatewayConnectPeerAssociation {
  readonly TransitGatewayConnectPeerArn: string;
  readonly GlobalNetworkId: string;
  readonly DeviceId: string;
  readonly LinkId: string;
  readonly State: string;
}

interface TransitGatewayRegistration {
  readonly GlobalNetworkId: string;
  readonly TransitGatewayArn: string;
  readonly State: TransitGatewayRegistrationStateReason;
}

interface TransitGatewayRegistrationStateReason {
  readonly Code: string;
  readonly Message: string;
}

interface UntagResourceRequest {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}

interface UntagResourceResponse {
}

interface UpdateConnectionRequest {
  readonly GlobalNetworkId: string;
  readonly ConnectionId: string;
  readonly LinkId: string;
  readonly ConnectedLinkId: string;
  readonly Description: string;
}

interface UpdateConnectionResponse {
  readonly Connection: Connection;
}

interface UpdateCoreNetworkRequest {
  readonly CoreNetworkId: string;
  readonly Description: string;
}

interface UpdateCoreNetworkResponse {
  readonly CoreNetwork: CoreNetwork;
}

interface UpdateDeviceRequest {
  readonly GlobalNetworkId: string;
  readonly DeviceId: string;
  readonly AWSLocation: AWSLocation;
  readonly Description: string;
  readonly Type: string;
  readonly Vendor: string;
  readonly Model: string;
  readonly SerialNumber: string;
  readonly Location: Location;
  readonly SiteId: string;
}

interface UpdateDeviceResponse {
  readonly Device: Device;
}

interface UpdateGlobalNetworkRequest {
  readonly GlobalNetworkId: string;
  readonly Description: string;
}

interface UpdateGlobalNetworkResponse {
  readonly GlobalNetwork: GlobalNetwork;
}

interface UpdateLinkRequest {
  readonly GlobalNetworkId: string;
  readonly LinkId: string;
  readonly Description: string;
  readonly Type: string;
  readonly Bandwidth: Bandwidth;
  readonly Provider: string;
}

interface UpdateLinkResponse {
  readonly Link: Link;
}

interface UpdateNetworkResourceMetadataRequest {
  readonly GlobalNetworkId: string;
  readonly ResourceArn: string;
  readonly Metadata: {[key: string]: any};
}

interface UpdateNetworkResourceMetadataResponse {
  readonly ResourceArn: string;
  readonly Metadata: {[key: string]: any};
}

interface UpdateSiteRequest {
  readonly GlobalNetworkId: string;
  readonly SiteId: string;
  readonly Description: string;
  readonly Location: Location;
}

interface UpdateSiteResponse {
  readonly Site: Site;
}

interface UpdateVpcAttachmentRequest {
  readonly AttachmentId: string;
  readonly AddSubnetArns: [];
  readonly RemoveSubnetArns: [];
  readonly Options: VpcOptions;
}

interface UpdateVpcAttachmentResponse {
  readonly VpcAttachment: VpcAttachment;
}

interface ValidationException {
  readonly Message: string;
  readonly Reason: string;
  readonly Fields: [];
}

interface ValidationExceptionField {
  readonly Name: string;
  readonly Message: string;
}

interface VpcAttachment {
  readonly Attachment: Attachment;
  readonly SubnetArns: [];
  readonly Options: VpcOptions;
}

interface VpcOptions {
  readonly Ipv6Support: boolean;
}

