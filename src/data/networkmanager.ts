/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface AcceptAttachment {
  readonly AttachmentId: string;
}

export interface AssociateConnectPeer {
  readonly GlobalNetworkId: string;
  readonly ConnectPeerId: string;
  readonly DeviceId: string;
  readonly LinkId?: string;
}

export interface AssociateCustomerGateway {
  readonly CustomerGatewayArn: string;
  readonly GlobalNetworkId: string;
  readonly DeviceId: string;
  readonly LinkId?: string;
}

export interface AssociateLink {
  readonly GlobalNetworkId: string;
  readonly DeviceId: string;
  readonly LinkId: string;
}

export interface AssociateTransitGatewayConnectPeer {
  readonly GlobalNetworkId: string;
  readonly TransitGatewayConnectPeerArn: string;
  readonly DeviceId: string;
  readonly LinkId?: string;
}

export interface CreateConnectAttachment {
  readonly CoreNetworkId: string;
  readonly EdgeLocation: string;
  readonly TransportAttachmentId: string;
  readonly Options: ConnectAttachmentOptions;
  readonly Tags?: [];
  readonly ClientToken?: string;
}

export interface CreateConnectPeer {
  readonly ConnectAttachmentId: string;
  readonly CoreNetworkAddress?: string;
  readonly PeerAddress: string;
  readonly BgpOptions?: BgpOptions;
  readonly InsideCidrBlocks: [];
  readonly Tags?: [];
  readonly ClientToken?: string;
}

export interface CreateConnection {
  readonly GlobalNetworkId: string;
  readonly DeviceId: string;
  readonly ConnectedDeviceId: string;
  readonly LinkId?: string;
  readonly ConnectedLinkId?: string;
  readonly Description?: string;
  readonly Tags?: [];
}

export interface CreateCoreNetwork {
  readonly GlobalNetworkId: string;
  readonly Description?: string;
  readonly Tags?: [];
  readonly PolicyDocument?: string;
  readonly ClientToken?: string;
}

export interface CreateDevice {
  readonly GlobalNetworkId: string;
  readonly AWSLocation?: AWSLocation;
  readonly Description?: string;
  readonly Type?: string;
  readonly Vendor?: string;
  readonly Model?: string;
  readonly SerialNumber?: string;
  readonly Location?: Location;
  readonly SiteId?: string;
  readonly Tags?: [];
}

export interface CreateGlobalNetwork {
  readonly Description?: string;
  readonly Tags?: [];
}

export interface CreateLink {
  readonly GlobalNetworkId: string;
  readonly Description?: string;
  readonly Type?: string;
  readonly Bandwidth: Bandwidth;
  readonly Provider?: string;
  readonly SiteId: string;
  readonly Tags?: [];
}

export interface CreateSite {
  readonly GlobalNetworkId: string;
  readonly Description?: string;
  readonly Location?: Location;
  readonly Tags?: [];
}

export interface CreateSiteToSiteVpnAttachment {
  readonly CoreNetworkId: string;
  readonly VpnConnectionArn: string;
  readonly Tags?: [];
  readonly ClientToken?: string;
}

export interface CreateVpcAttachment {
  readonly CoreNetworkId: string;
  readonly VpcArn: string;
  readonly SubnetArns: [];
  readonly Options?: VpcOptions;
  readonly Tags?: [];
  readonly ClientToken?: string;
}

export interface DeleteAttachment {
  readonly AttachmentId: string;
}

export interface DeleteConnectPeer {
  readonly ConnectPeerId: string;
}

export interface DeleteConnection {
  readonly GlobalNetworkId: string;
  readonly ConnectionId: string;
}

export interface DeleteCoreNetwork {
  readonly CoreNetworkId: string;
}

export interface DeleteCoreNetworkPolicyVersion {
  readonly CoreNetworkId: string;
  readonly PolicyVersionId: number;
}

export interface DeleteDevice {
  readonly GlobalNetworkId: string;
  readonly DeviceId: string;
}

export interface DeleteGlobalNetwork {
  readonly GlobalNetworkId: string;
}

export interface DeleteLink {
  readonly GlobalNetworkId: string;
  readonly LinkId: string;
}

export interface DeleteResourcePolicy {
  readonly ResourceArn: string;
}

export interface DeleteSite {
  readonly GlobalNetworkId: string;
  readonly SiteId: string;
}

export interface DeregisterTransitGateway {
  readonly GlobalNetworkId: string;
  readonly TransitGatewayArn: string;
}

export interface DescribeGlobalNetworks {
  readonly GlobalNetworkIds?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface DisassociateConnectPeer {
  readonly GlobalNetworkId: string;
  readonly ConnectPeerId: string;
}

export interface DisassociateCustomerGateway {
  readonly GlobalNetworkId: string;
  readonly CustomerGatewayArn: string;
}

export interface DisassociateLink {
  readonly GlobalNetworkId: string;
  readonly DeviceId: string;
  readonly LinkId: string;
}

export interface DisassociateTransitGatewayConnectPeer {
  readonly GlobalNetworkId: string;
  readonly TransitGatewayConnectPeerArn: string;
}

export interface ExecuteCoreNetworkChangeSet {
  readonly CoreNetworkId: string;
  readonly PolicyVersionId: number;
}

export interface GetConnectAttachment {
  readonly AttachmentId: string;
}

export interface GetConnectPeer {
  readonly ConnectPeerId: string;
}

export interface GetConnectPeerAssociations {
  readonly GlobalNetworkId: string;
  readonly ConnectPeerIds?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetConnections {
  readonly GlobalNetworkId: string;
  readonly ConnectionIds?: [];
  readonly DeviceId?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetCoreNetwork {
  readonly CoreNetworkId: string;
}

export interface GetCoreNetworkChangeSet {
  readonly CoreNetworkId: string;
  readonly PolicyVersionId: number;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetCoreNetworkPolicy {
  readonly CoreNetworkId: string;
  readonly PolicyVersionId?: number;
  readonly Alias?: string;
}

export interface GetCustomerGatewayAssociations {
  readonly GlobalNetworkId: string;
  readonly CustomerGatewayArns?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetDevices {
  readonly GlobalNetworkId: string;
  readonly DeviceIds?: [];
  readonly SiteId?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetLinkAssociations {
  readonly GlobalNetworkId: string;
  readonly DeviceId?: string;
  readonly LinkId?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetLinks {
  readonly GlobalNetworkId: string;
  readonly LinkIds?: [];
  readonly SiteId?: string;
  readonly Type?: string;
  readonly Provider?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetNetworkResourceCounts {
  readonly GlobalNetworkId: string;
  readonly ResourceType?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetNetworkResourceRelationships {
  readonly GlobalNetworkId: string;
  readonly CoreNetworkId?: string;
  readonly RegisteredGatewayArn?: string;
  readonly AwsRegion?: string;
  readonly AccountId?: string;
  readonly ResourceType?: string;
  readonly ResourceArn?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetNetworkResources {
  readonly GlobalNetworkId: string;
  readonly CoreNetworkId?: string;
  readonly RegisteredGatewayArn?: string;
  readonly AwsRegion?: string;
  readonly AccountId?: string;
  readonly ResourceType?: string;
  readonly ResourceArn?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetNetworkRoutes {
  readonly GlobalNetworkId: string;
  readonly RouteTableIdentifier: RouteTableIdentifier;
  readonly ExactCidrMatches?: [];
  readonly LongestPrefixMatches?: [];
  readonly SubnetOfMatches?: [];
  readonly SupernetOfMatches?: [];
  readonly PrefixListIds?: [];
  readonly States?: [];
  readonly Types?: [];
  readonly DestinationFilters?: {[key: string]: any};
}

export interface GetNetworkTelemetry {
  readonly GlobalNetworkId: string;
  readonly CoreNetworkId?: string;
  readonly RegisteredGatewayArn?: string;
  readonly AwsRegion?: string;
  readonly AccountId?: string;
  readonly ResourceType?: string;
  readonly ResourceArn?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetResourcePolicy {
  readonly ResourceArn: string;
}

export interface GetRouteAnalysis {
  readonly GlobalNetworkId: string;
  readonly RouteAnalysisId: string;
}

export interface GetSiteToSiteVpnAttachment {
  readonly AttachmentId: string;
}

export interface GetSites {
  readonly GlobalNetworkId: string;
  readonly SiteIds?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetTransitGatewayConnectPeerAssociations {
  readonly GlobalNetworkId: string;
  readonly TransitGatewayConnectPeerArns?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetTransitGatewayRegistrations {
  readonly GlobalNetworkId: string;
  readonly TransitGatewayArns?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetVpcAttachment {
  readonly AttachmentId: string;
}

export interface ListAttachments {
  readonly CoreNetworkId?: string;
  readonly AttachmentType?: string;
  readonly EdgeLocation?: string;
  readonly State?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListConnectPeers {
  readonly CoreNetworkId?: string;
  readonly ConnectAttachmentId?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListCoreNetworkPolicyVersions {
  readonly CoreNetworkId: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListCoreNetworks {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListTagsForResource {
  readonly ResourceArn: string;
}

export interface PutCoreNetworkPolicy {
  readonly CoreNetworkId: string;
  readonly PolicyDocument: string;
  readonly Description?: string;
  readonly LatestVersionId?: number;
  readonly ClientToken?: string;
}

export interface PutResourcePolicy {
  readonly PolicyDocument: string;
  readonly ResourceArn: string;
}

export interface RegisterTransitGateway {
  readonly GlobalNetworkId: string;
  readonly TransitGatewayArn: string;
}

export interface RejectAttachment {
  readonly AttachmentId: string;
}

export interface RestoreCoreNetworkPolicyVersion {
  readonly CoreNetworkId: string;
  readonly PolicyVersionId: number;
}

export interface StartRouteAnalysis {
  readonly GlobalNetworkId: string;
  readonly Source: RouteAnalysisEndpointOptionsSpecification;
  readonly Destination: RouteAnalysisEndpointOptionsSpecification;
  readonly IncludeReturnPath?: boolean;
  readonly UseMiddleboxes?: boolean;
}

export interface TagResource {
  readonly ResourceArn: string;
  readonly Tags: [];
}

export interface UntagResource {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}

export interface UpdateConnection {
  readonly GlobalNetworkId: string;
  readonly ConnectionId: string;
  readonly LinkId?: string;
  readonly ConnectedLinkId?: string;
  readonly Description?: string;
}

export interface UpdateCoreNetwork {
  readonly CoreNetworkId: string;
  readonly Description?: string;
}

export interface UpdateDevice {
  readonly GlobalNetworkId: string;
  readonly DeviceId: string;
  readonly AWSLocation?: AWSLocation;
  readonly Description?: string;
  readonly Type?: string;
  readonly Vendor?: string;
  readonly Model?: string;
  readonly SerialNumber?: string;
  readonly Location?: Location;
  readonly SiteId?: string;
}

export interface UpdateGlobalNetwork {
  readonly GlobalNetworkId: string;
  readonly Description?: string;
}

export interface UpdateLink {
  readonly GlobalNetworkId: string;
  readonly LinkId: string;
  readonly Description?: string;
  readonly Type?: string;
  readonly Bandwidth?: Bandwidth;
  readonly Provider?: string;
}

export interface UpdateNetworkResourceMetadata {
  readonly GlobalNetworkId: string;
  readonly ResourceArn: string;
  readonly Metadata: {[key: string]: any};
}

export interface UpdateSite {
  readonly GlobalNetworkId: string;
  readonly SiteId: string;
  readonly Description?: string;
  readonly Location?: Location;
}

export interface UpdateVpcAttachment {
  readonly AttachmentId: string;
  readonly AddSubnetArns?: [];
  readonly RemoveSubnetArns?: [];
  readonly Options?: VpcOptions;
}

export interface AWSLocation {
  readonly Zone?: string;
  readonly SubnetArn?: string;
}

export interface AcceptAttachmentRequest {
  readonly AttachmentId: string;
}

export interface AcceptAttachmentResponse {
  readonly Attachment?: Attachment;
}

export interface AccessDeniedException {
  readonly Message: string;
}

export interface AssociateConnectPeerRequest {
  readonly GlobalNetworkId: string;
  readonly ConnectPeerId: string;
  readonly DeviceId: string;
  readonly LinkId?: string;
}

export interface AssociateConnectPeerResponse {
  readonly ConnectPeerAssociation?: ConnectPeerAssociation;
}

export interface AssociateCustomerGatewayRequest {
  readonly CustomerGatewayArn: string;
  readonly GlobalNetworkId: string;
  readonly DeviceId: string;
  readonly LinkId?: string;
}

export interface AssociateCustomerGatewayResponse {
  readonly CustomerGatewayAssociation?: CustomerGatewayAssociation;
}

export interface AssociateLinkRequest {
  readonly GlobalNetworkId: string;
  readonly DeviceId: string;
  readonly LinkId: string;
}

export interface AssociateLinkResponse {
  readonly LinkAssociation?: LinkAssociation;
}

export interface AssociateTransitGatewayConnectPeerRequest {
  readonly GlobalNetworkId: string;
  readonly TransitGatewayConnectPeerArn: string;
  readonly DeviceId: string;
  readonly LinkId?: string;
}

export interface AssociateTransitGatewayConnectPeerResponse {
  readonly TransitGatewayConnectPeerAssociation?: TransitGatewayConnectPeerAssociation;
}

export interface Attachment {
  readonly CoreNetworkId?: string;
  readonly CoreNetworkArn?: string;
  readonly AttachmentId?: string;
  readonly OwnerAccountId?: string;
  readonly AttachmentType?: string;
  readonly State?: string;
  readonly EdgeLocation?: string;
  readonly ResourceArn?: string;
  readonly AttachmentPolicyRuleNumber?: number;
  readonly SegmentName?: string;
  readonly Tags?: [];
  readonly ProposedSegmentChange?: ProposedSegmentChange;
  readonly CreatedAt?: Date;
  readonly UpdatedAt?: Date;
}

export interface Bandwidth {
  readonly UploadSpeed?: number;
  readonly DownloadSpeed?: number;
}

export interface BgpOptions {
  readonly PeerAsn?: number;
}

export interface ConflictException {
  readonly Message: string;
  readonly ResourceId: string;
  readonly ResourceType: string;
}

export interface ConnectAttachment {
  readonly Attachment?: Attachment;
  readonly TransportAttachmentId?: string;
  readonly Options?: ConnectAttachmentOptions;
}

export interface ConnectAttachmentOptions {
  readonly Protocol?: string;
}

export interface ConnectPeer {
  readonly CoreNetworkId?: string;
  readonly ConnectAttachmentId?: string;
  readonly ConnectPeerId?: string;
  readonly EdgeLocation?: string;
  readonly State?: string;
  readonly CreatedAt?: Date;
  readonly Configuration?: ConnectPeerConfiguration;
  readonly Tags?: [];
}

export interface ConnectPeerAssociation {
  readonly ConnectPeerId?: string;
  readonly GlobalNetworkId?: string;
  readonly DeviceId?: string;
  readonly LinkId?: string;
  readonly State?: string;
}

export interface ConnectPeerBgpConfiguration {
  readonly CoreNetworkAsn?: number;
  readonly PeerAsn?: number;
  readonly CoreNetworkAddress?: string;
  readonly PeerAddress?: string;
}

export interface ConnectPeerConfiguration {
  readonly CoreNetworkAddress?: string;
  readonly PeerAddress?: string;
  readonly InsideCidrBlocks?: [];
  readonly Protocol?: string;
  readonly BgpConfigurations?: [];
}

export interface ConnectPeerSummary {
  readonly CoreNetworkId?: string;
  readonly ConnectAttachmentId?: string;
  readonly ConnectPeerId?: string;
  readonly EdgeLocation?: string;
  readonly ConnectPeerState?: string;
  readonly CreatedAt?: Date;
  readonly Tags?: [];
}

export interface Connection {
  readonly ConnectionId?: string;
  readonly ConnectionArn?: string;
  readonly GlobalNetworkId?: string;
  readonly DeviceId?: string;
  readonly ConnectedDeviceId?: string;
  readonly LinkId?: string;
  readonly ConnectedLinkId?: string;
  readonly Description?: string;
  readonly CreatedAt?: Date;
  readonly State?: string;
  readonly Tags?: [];
}

export interface ConnectionHealth {
  readonly Type?: string;
  readonly Status?: string;
  readonly Timestamp?: Date;
}

export interface CoreNetwork {
  readonly GlobalNetworkId?: string;
  readonly CoreNetworkId?: string;
  readonly CoreNetworkArn?: string;
  readonly Description?: string;
  readonly CreatedAt?: Date;
  readonly State?: string;
  readonly Segments?: [];
  readonly Edges?: [];
  readonly Tags?: [];
}

export interface CoreNetworkChange {
  readonly Type?: string;
  readonly Action?: string;
  readonly Identifier?: string;
  readonly PreviousValues?: CoreNetworkChangeValues;
  readonly NewValues?: CoreNetworkChangeValues;
}

export interface CoreNetworkChangeValues {
  readonly SegmentName?: string;
  readonly EdgeLocations?: [];
  readonly Asn?: number;
  readonly Cidr?: string;
  readonly DestinationIdentifier?: string;
  readonly InsideCidrBlocks?: [];
  readonly SharedSegments?: [];
}

export interface CoreNetworkEdge {
  readonly EdgeLocation?: string;
  readonly Asn?: number;
  readonly InsideCidrBlocks?: [];
}

export interface CoreNetworkPolicy {
  readonly CoreNetworkId?: string;
  readonly PolicyVersionId?: number;
  readonly Alias?: string;
  readonly Description?: string;
  readonly CreatedAt?: Date;
  readonly ChangeSetState?: string;
  readonly PolicyErrors?: [];
  readonly PolicyDocument?: string;
}

export interface CoreNetworkPolicyError {
  readonly ErrorCode: string;
  readonly Message: string;
  readonly Path?: string;
}

export interface CoreNetworkPolicyException {
  readonly Message: string;
  readonly Errors?: [];
}

export interface CoreNetworkPolicyVersion {
  readonly CoreNetworkId?: string;
  readonly PolicyVersionId?: number;
  readonly Alias?: string;
  readonly Description?: string;
  readonly CreatedAt?: Date;
  readonly ChangeSetState?: string;
}

export interface CoreNetworkSegment {
  readonly Name?: string;
  readonly EdgeLocations?: [];
  readonly SharedSegments?: [];
}

export interface CoreNetworkSegmentEdgeIdentifier {
  readonly CoreNetworkId?: string;
  readonly SegmentName?: string;
  readonly EdgeLocation?: string;
}

export interface CoreNetworkSummary {
  readonly CoreNetworkId?: string;
  readonly CoreNetworkArn?: string;
  readonly GlobalNetworkId?: string;
  readonly OwnerAccountId?: string;
  readonly State?: string;
  readonly Description?: string;
  readonly Tags?: [];
}

export interface CreateConnectAttachmentRequest {
  readonly CoreNetworkId: string;
  readonly EdgeLocation: string;
  readonly TransportAttachmentId: string;
  readonly Options: ConnectAttachmentOptions;
  readonly Tags?: [];
  readonly ClientToken?: string;
}

export interface CreateConnectAttachmentResponse {
  readonly ConnectAttachment?: ConnectAttachment;
}

export interface CreateConnectPeerRequest {
  readonly ConnectAttachmentId: string;
  readonly CoreNetworkAddress?: string;
  readonly PeerAddress: string;
  readonly BgpOptions?: BgpOptions;
  readonly InsideCidrBlocks: [];
  readonly Tags?: [];
  readonly ClientToken?: string;
}

export interface CreateConnectPeerResponse {
  readonly ConnectPeer?: ConnectPeer;
}

export interface CreateConnectionRequest {
  readonly GlobalNetworkId: string;
  readonly DeviceId: string;
  readonly ConnectedDeviceId: string;
  readonly LinkId?: string;
  readonly ConnectedLinkId?: string;
  readonly Description?: string;
  readonly Tags?: [];
}

export interface CreateConnectionResponse {
  readonly Connection?: Connection;
}

export interface CreateCoreNetworkRequest {
  readonly GlobalNetworkId: string;
  readonly Description?: string;
  readonly Tags?: [];
  readonly PolicyDocument?: string;
  readonly ClientToken?: string;
}

export interface CreateCoreNetworkResponse {
  readonly CoreNetwork?: CoreNetwork;
}

export interface CreateDeviceRequest {
  readonly GlobalNetworkId: string;
  readonly AWSLocation?: AWSLocation;
  readonly Description?: string;
  readonly Type?: string;
  readonly Vendor?: string;
  readonly Model?: string;
  readonly SerialNumber?: string;
  readonly Location?: Location;
  readonly SiteId?: string;
  readonly Tags?: [];
}

export interface CreateDeviceResponse {
  readonly Device?: Device;
}

export interface CreateGlobalNetworkRequest {
  readonly Description?: string;
  readonly Tags?: [];
}

export interface CreateGlobalNetworkResponse {
  readonly GlobalNetwork?: GlobalNetwork;
}

export interface CreateLinkRequest {
  readonly GlobalNetworkId: string;
  readonly Description?: string;
  readonly Type?: string;
  readonly Bandwidth: Bandwidth;
  readonly Provider?: string;
  readonly SiteId: string;
  readonly Tags?: [];
}

export interface CreateLinkResponse {
  readonly Link?: Link;
}

export interface CreateSiteRequest {
  readonly GlobalNetworkId: string;
  readonly Description?: string;
  readonly Location?: Location;
  readonly Tags?: [];
}

export interface CreateSiteResponse {
  readonly Site?: Site;
}

export interface CreateSiteToSiteVpnAttachmentRequest {
  readonly CoreNetworkId: string;
  readonly VpnConnectionArn: string;
  readonly Tags?: [];
  readonly ClientToken?: string;
}

export interface CreateSiteToSiteVpnAttachmentResponse {
  readonly SiteToSiteVpnAttachment?: SiteToSiteVpnAttachment;
}

export interface CreateVpcAttachmentRequest {
  readonly CoreNetworkId: string;
  readonly VpcArn: string;
  readonly SubnetArns: [];
  readonly Options?: VpcOptions;
  readonly Tags?: [];
  readonly ClientToken?: string;
}

export interface CreateVpcAttachmentResponse {
  readonly VpcAttachment?: VpcAttachment;
}

export interface CustomerGatewayAssociation {
  readonly CustomerGatewayArn?: string;
  readonly GlobalNetworkId?: string;
  readonly DeviceId?: string;
  readonly LinkId?: string;
  readonly State?: string;
}

export interface DeleteAttachmentRequest {
  readonly AttachmentId: string;
}

export interface DeleteAttachmentResponse {
  readonly Attachment?: Attachment;
}

export interface DeleteConnectPeerRequest {
  readonly ConnectPeerId: string;
}

export interface DeleteConnectPeerResponse {
  readonly ConnectPeer?: ConnectPeer;
}

export interface DeleteConnectionRequest {
  readonly GlobalNetworkId: string;
  readonly ConnectionId: string;
}

export interface DeleteConnectionResponse {
  readonly Connection?: Connection;
}

export interface DeleteCoreNetworkPolicyVersionRequest {
  readonly CoreNetworkId: string;
  readonly PolicyVersionId: number;
}

export interface DeleteCoreNetworkPolicyVersionResponse {
  readonly CoreNetworkPolicy?: CoreNetworkPolicy;
}

export interface DeleteCoreNetworkRequest {
  readonly CoreNetworkId: string;
}

export interface DeleteCoreNetworkResponse {
  readonly CoreNetwork?: CoreNetwork;
}

export interface DeleteDeviceRequest {
  readonly GlobalNetworkId: string;
  readonly DeviceId: string;
}

export interface DeleteDeviceResponse {
  readonly Device?: Device;
}

export interface DeleteGlobalNetworkRequest {
  readonly GlobalNetworkId: string;
}

export interface DeleteGlobalNetworkResponse {
  readonly GlobalNetwork?: GlobalNetwork;
}

export interface DeleteLinkRequest {
  readonly GlobalNetworkId: string;
  readonly LinkId: string;
}

export interface DeleteLinkResponse {
  readonly Link?: Link;
}

export interface DeleteResourcePolicyRequest {
  readonly ResourceArn: string;
}

export interface DeleteResourcePolicyResponse {
}

export interface DeleteSiteRequest {
  readonly GlobalNetworkId: string;
  readonly SiteId: string;
}

export interface DeleteSiteResponse {
  readonly Site?: Site;
}

export interface DeregisterTransitGatewayRequest {
  readonly GlobalNetworkId: string;
  readonly TransitGatewayArn: string;
}

export interface DeregisterTransitGatewayResponse {
  readonly TransitGatewayRegistration?: TransitGatewayRegistration;
}

export interface DescribeGlobalNetworksRequest {
  readonly GlobalNetworkIds?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface DescribeGlobalNetworksResponse {
  readonly GlobalNetworks?: [];
  readonly NextToken?: string;
}

export interface Device {
  readonly DeviceId?: string;
  readonly DeviceArn?: string;
  readonly GlobalNetworkId?: string;
  readonly AWSLocation?: AWSLocation;
  readonly Description?: string;
  readonly Type?: string;
  readonly Vendor?: string;
  readonly Model?: string;
  readonly SerialNumber?: string;
  readonly Location?: Location;
  readonly SiteId?: string;
  readonly CreatedAt?: Date;
  readonly State?: string;
  readonly Tags?: [];
}

export interface DisassociateConnectPeerRequest {
  readonly GlobalNetworkId: string;
  readonly ConnectPeerId: string;
}

export interface DisassociateConnectPeerResponse {
  readonly ConnectPeerAssociation?: ConnectPeerAssociation;
}

export interface DisassociateCustomerGatewayRequest {
  readonly GlobalNetworkId: string;
  readonly CustomerGatewayArn: string;
}

export interface DisassociateCustomerGatewayResponse {
  readonly CustomerGatewayAssociation?: CustomerGatewayAssociation;
}

export interface DisassociateLinkRequest {
  readonly GlobalNetworkId: string;
  readonly DeviceId: string;
  readonly LinkId: string;
}

export interface DisassociateLinkResponse {
  readonly LinkAssociation?: LinkAssociation;
}

export interface DisassociateTransitGatewayConnectPeerRequest {
  readonly GlobalNetworkId: string;
  readonly TransitGatewayConnectPeerArn: string;
}

export interface DisassociateTransitGatewayConnectPeerResponse {
  readonly TransitGatewayConnectPeerAssociation?: TransitGatewayConnectPeerAssociation;
}

export interface ExecuteCoreNetworkChangeSetRequest {
  readonly CoreNetworkId: string;
  readonly PolicyVersionId: number;
}

export interface ExecuteCoreNetworkChangeSetResponse {
}

export interface GetConnectAttachmentRequest {
  readonly AttachmentId: string;
}

export interface GetConnectAttachmentResponse {
  readonly ConnectAttachment?: ConnectAttachment;
}

export interface GetConnectPeerAssociationsRequest {
  readonly GlobalNetworkId: string;
  readonly ConnectPeerIds?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetConnectPeerAssociationsResponse {
  readonly ConnectPeerAssociations?: [];
  readonly NextToken?: string;
}

export interface GetConnectPeerRequest {
  readonly ConnectPeerId: string;
}

export interface GetConnectPeerResponse {
  readonly ConnectPeer?: ConnectPeer;
}

export interface GetConnectionsRequest {
  readonly GlobalNetworkId: string;
  readonly ConnectionIds?: [];
  readonly DeviceId?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetConnectionsResponse {
  readonly Connections?: [];
  readonly NextToken?: string;
}

export interface GetCoreNetworkChangeSetRequest {
  readonly CoreNetworkId: string;
  readonly PolicyVersionId: number;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetCoreNetworkChangeSetResponse {
  readonly CoreNetworkChanges?: [];
  readonly NextToken?: string;
}

export interface GetCoreNetworkPolicyRequest {
  readonly CoreNetworkId: string;
  readonly PolicyVersionId?: number;
  readonly Alias?: string;
}

export interface GetCoreNetworkPolicyResponse {
  readonly CoreNetworkPolicy?: CoreNetworkPolicy;
}

export interface GetCoreNetworkRequest {
  readonly CoreNetworkId: string;
}

export interface GetCoreNetworkResponse {
  readonly CoreNetwork?: CoreNetwork;
}

export interface GetCustomerGatewayAssociationsRequest {
  readonly GlobalNetworkId: string;
  readonly CustomerGatewayArns?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetCustomerGatewayAssociationsResponse {
  readonly CustomerGatewayAssociations?: [];
  readonly NextToken?: string;
}

export interface GetDevicesRequest {
  readonly GlobalNetworkId: string;
  readonly DeviceIds?: [];
  readonly SiteId?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetDevicesResponse {
  readonly Devices?: [];
  readonly NextToken?: string;
}

export interface GetLinkAssociationsRequest {
  readonly GlobalNetworkId: string;
  readonly DeviceId?: string;
  readonly LinkId?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetLinkAssociationsResponse {
  readonly LinkAssociations?: [];
  readonly NextToken?: string;
}

export interface GetLinksRequest {
  readonly GlobalNetworkId: string;
  readonly LinkIds?: [];
  readonly SiteId?: string;
  readonly Type?: string;
  readonly Provider?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetLinksResponse {
  readonly Links?: [];
  readonly NextToken?: string;
}

export interface GetNetworkResourceCountsRequest {
  readonly GlobalNetworkId: string;
  readonly ResourceType?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetNetworkResourceCountsResponse {
  readonly NetworkResourceCounts?: [];
  readonly NextToken?: string;
}

export interface GetNetworkResourceRelationshipsRequest {
  readonly GlobalNetworkId: string;
  readonly CoreNetworkId?: string;
  readonly RegisteredGatewayArn?: string;
  readonly AwsRegion?: string;
  readonly AccountId?: string;
  readonly ResourceType?: string;
  readonly ResourceArn?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetNetworkResourceRelationshipsResponse {
  readonly Relationships?: [];
  readonly NextToken?: string;
}

export interface GetNetworkResourcesRequest {
  readonly GlobalNetworkId: string;
  readonly CoreNetworkId?: string;
  readonly RegisteredGatewayArn?: string;
  readonly AwsRegion?: string;
  readonly AccountId?: string;
  readonly ResourceType?: string;
  readonly ResourceArn?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetNetworkResourcesResponse {
  readonly NetworkResources?: [];
  readonly NextToken?: string;
}

export interface GetNetworkRoutesRequest {
  readonly GlobalNetworkId: string;
  readonly RouteTableIdentifier: RouteTableIdentifier;
  readonly ExactCidrMatches?: [];
  readonly LongestPrefixMatches?: [];
  readonly SubnetOfMatches?: [];
  readonly SupernetOfMatches?: [];
  readonly PrefixListIds?: [];
  readonly States?: [];
  readonly Types?: [];
  readonly DestinationFilters?: {[key: string]: any};
}

export interface GetNetworkRoutesResponse {
  readonly RouteTableArn?: string;
  readonly CoreNetworkSegmentEdge?: CoreNetworkSegmentEdgeIdentifier;
  readonly RouteTableType?: string;
  readonly RouteTableTimestamp?: Date;
  readonly NetworkRoutes?: [];
}

export interface GetNetworkTelemetryRequest {
  readonly GlobalNetworkId: string;
  readonly CoreNetworkId?: string;
  readonly RegisteredGatewayArn?: string;
  readonly AwsRegion?: string;
  readonly AccountId?: string;
  readonly ResourceType?: string;
  readonly ResourceArn?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetNetworkTelemetryResponse {
  readonly NetworkTelemetry?: [];
  readonly NextToken?: string;
}

export interface GetResourcePolicyRequest {
  readonly ResourceArn: string;
}

export interface GetResourcePolicyResponse {
  readonly PolicyDocument?: string;
}

export interface GetRouteAnalysisRequest {
  readonly GlobalNetworkId: string;
  readonly RouteAnalysisId: string;
}

export interface GetRouteAnalysisResponse {
  readonly RouteAnalysis?: RouteAnalysis;
}

export interface GetSiteToSiteVpnAttachmentRequest {
  readonly AttachmentId: string;
}

export interface GetSiteToSiteVpnAttachmentResponse {
  readonly SiteToSiteVpnAttachment?: SiteToSiteVpnAttachment;
}

export interface GetSitesRequest {
  readonly GlobalNetworkId: string;
  readonly SiteIds?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetSitesResponse {
  readonly Sites?: [];
  readonly NextToken?: string;
}

export interface GetTransitGatewayConnectPeerAssociationsRequest {
  readonly GlobalNetworkId: string;
  readonly TransitGatewayConnectPeerArns?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetTransitGatewayConnectPeerAssociationsResponse {
  readonly TransitGatewayConnectPeerAssociations?: [];
  readonly NextToken?: string;
}

export interface GetTransitGatewayRegistrationsRequest {
  readonly GlobalNetworkId: string;
  readonly TransitGatewayArns?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetTransitGatewayRegistrationsResponse {
  readonly TransitGatewayRegistrations?: [];
  readonly NextToken?: string;
}

export interface GetVpcAttachmentRequest {
  readonly AttachmentId: string;
}

export interface GetVpcAttachmentResponse {
  readonly VpcAttachment?: VpcAttachment;
}

export interface GlobalNetwork {
  readonly GlobalNetworkId?: string;
  readonly GlobalNetworkArn?: string;
  readonly Description?: string;
  readonly CreatedAt?: Date;
  readonly State?: string;
  readonly Tags?: [];
}

export interface InternalServerException {
  readonly Message: string;
  readonly RetryAfterSeconds?: number;
}

export interface Link {
  readonly LinkId?: string;
  readonly LinkArn?: string;
  readonly GlobalNetworkId?: string;
  readonly SiteId?: string;
  readonly Description?: string;
  readonly Type?: string;
  readonly Bandwidth?: Bandwidth;
  readonly Provider?: string;
  readonly CreatedAt?: Date;
  readonly State?: string;
  readonly Tags?: [];
}

export interface LinkAssociation {
  readonly GlobalNetworkId?: string;
  readonly DeviceId?: string;
  readonly LinkId?: string;
  readonly LinkAssociationState?: string;
}

export interface ListAttachmentsRequest {
  readonly CoreNetworkId?: string;
  readonly AttachmentType?: string;
  readonly EdgeLocation?: string;
  readonly State?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListAttachmentsResponse {
  readonly Attachments?: [];
  readonly NextToken?: string;
}

export interface ListConnectPeersRequest {
  readonly CoreNetworkId?: string;
  readonly ConnectAttachmentId?: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListConnectPeersResponse {
  readonly ConnectPeers?: [];
  readonly NextToken?: string;
}

export interface ListCoreNetworkPolicyVersionsRequest {
  readonly CoreNetworkId: string;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListCoreNetworkPolicyVersionsResponse {
  readonly CoreNetworkPolicyVersions?: [];
  readonly NextToken?: string;
}

export interface ListCoreNetworksRequest {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListCoreNetworksResponse {
  readonly CoreNetworks?: [];
  readonly NextToken?: string;
}

export interface ListTagsForResourceRequest {
  readonly ResourceArn: string;
}

export interface ListTagsForResourceResponse {
  readonly TagList?: [];
}

export interface Location {
  readonly Address?: string;
  readonly Latitude?: string;
  readonly Longitude?: string;
}

export interface NetworkResource {
  readonly RegisteredGatewayArn?: string;
  readonly CoreNetworkId?: string;
  readonly AwsRegion?: string;
  readonly AccountId?: string;
  readonly ResourceType?: string;
  readonly ResourceId?: string;
  readonly ResourceArn?: string;
  readonly Definition?: string;
  readonly DefinitionTimestamp?: Date;
  readonly Tags?: [];
  readonly Metadata?: {[key: string]: any};
}

export interface NetworkResourceCount {
  readonly ResourceType?: string;
  readonly Count?: number;
}

export interface NetworkResourceSummary {
  readonly RegisteredGatewayArn?: string;
  readonly ResourceArn?: string;
  readonly ResourceType?: string;
  readonly Definition?: string;
  readonly NameTag?: string;
  readonly IsMiddlebox?: boolean;
}

export interface NetworkRoute {
  readonly DestinationCidrBlock?: string;
  readonly Destinations?: [];
  readonly PrefixListId?: string;
  readonly State?: string;
  readonly Type?: string;
}

export interface NetworkRouteDestination {
  readonly CoreNetworkAttachmentId?: string;
  readonly TransitGatewayAttachmentId?: string;
  readonly SegmentName?: string;
  readonly EdgeLocation?: string;
  readonly ResourceType?: string;
  readonly ResourceId?: string;
}

export interface NetworkTelemetry {
  readonly RegisteredGatewayArn?: string;
  readonly CoreNetworkId?: string;
  readonly AwsRegion?: string;
  readonly AccountId?: string;
  readonly ResourceType?: string;
  readonly ResourceId?: string;
  readonly ResourceArn?: string;
  readonly Address?: string;
  readonly Health?: ConnectionHealth;
}

export interface PathComponent {
  readonly Sequence?: number;
  readonly Resource?: NetworkResourceSummary;
  readonly DestinationCidrBlock?: string;
}

export interface ProposedSegmentChange {
  readonly Tags?: [];
  readonly AttachmentPolicyRuleNumber?: number;
  readonly SegmentName?: string;
}

export interface PutCoreNetworkPolicyRequest {
  readonly CoreNetworkId: string;
  readonly PolicyDocument: string;
  readonly Description?: string;
  readonly LatestVersionId?: number;
  readonly ClientToken?: string;
}

export interface PutCoreNetworkPolicyResponse {
  readonly CoreNetworkPolicy?: CoreNetworkPolicy;
}

export interface PutResourcePolicyRequest {
  readonly PolicyDocument: string;
  readonly ResourceArn: string;
}

export interface PutResourcePolicyResponse {
}

export interface RegisterTransitGatewayRequest {
  readonly GlobalNetworkId: string;
  readonly TransitGatewayArn: string;
}

export interface RegisterTransitGatewayResponse {
  readonly TransitGatewayRegistration?: TransitGatewayRegistration;
}

export interface RejectAttachmentRequest {
  readonly AttachmentId: string;
}

export interface RejectAttachmentResponse {
  readonly Attachment?: Attachment;
}

export interface Relationship {
  readonly From?: string;
  readonly To?: string;
}

export interface ResourceNotFoundException {
  readonly Message: string;
  readonly ResourceId: string;
  readonly ResourceType: string;
  readonly Context?: {[key: string]: any};
}

export interface RestoreCoreNetworkPolicyVersionRequest {
  readonly CoreNetworkId: string;
  readonly PolicyVersionId: number;
}

export interface RestoreCoreNetworkPolicyVersionResponse {
  readonly CoreNetworkPolicy?: CoreNetworkPolicy;
}

export interface RouteAnalysis {
  readonly GlobalNetworkId?: string;
  readonly OwnerAccountId?: string;
  readonly RouteAnalysisId?: string;
  readonly StartTimestamp?: Date;
  readonly Status?: string;
  readonly Source?: RouteAnalysisEndpointOptions;
  readonly Destination?: RouteAnalysisEndpointOptions;
  readonly IncludeReturnPath?: boolean;
  readonly UseMiddleboxes?: boolean;
  readonly ForwardPath?: RouteAnalysisPath;
  readonly ReturnPath?: RouteAnalysisPath;
}

export interface RouteAnalysisCompletion {
  readonly ResultCode?: string;
  readonly ReasonCode?: string;
  readonly ReasonContext?: {[key: string]: any};
}

export interface RouteAnalysisEndpointOptions {
  readonly TransitGatewayAttachmentArn?: string;
  readonly TransitGatewayArn?: string;
  readonly IpAddress?: string;
}

export interface RouteAnalysisEndpointOptionsSpecification {
  readonly TransitGatewayAttachmentArn?: string;
  readonly IpAddress?: string;
}

export interface RouteAnalysisPath {
  readonly CompletionStatus?: RouteAnalysisCompletion;
  readonly Path?: [];
}

export interface RouteTableIdentifier {
  readonly TransitGatewayRouteTableArn?: string;
  readonly CoreNetworkSegmentEdge?: CoreNetworkSegmentEdgeIdentifier;
}

export interface ServiceQuotaExceededException {
  readonly Message: string;
  readonly ResourceId?: string;
  readonly ResourceType?: string;
  readonly LimitCode: string;
  readonly ServiceCode: string;
}

export interface Site {
  readonly SiteId?: string;
  readonly SiteArn?: string;
  readonly GlobalNetworkId?: string;
  readonly Description?: string;
  readonly Location?: Location;
  readonly CreatedAt?: Date;
  readonly State?: string;
  readonly Tags?: [];
}

export interface SiteToSiteVpnAttachment {
  readonly Attachment?: Attachment;
  readonly VpnConnectionArn?: string;
}

export interface StartRouteAnalysisRequest {
  readonly GlobalNetworkId: string;
  readonly Source: RouteAnalysisEndpointOptionsSpecification;
  readonly Destination: RouteAnalysisEndpointOptionsSpecification;
  readonly IncludeReturnPath?: boolean;
  readonly UseMiddleboxes?: boolean;
}

export interface StartRouteAnalysisResponse {
  readonly RouteAnalysis?: RouteAnalysis;
}

export interface Tag {
  readonly Key?: string;
  readonly Value?: string;
}

export interface TagResourceRequest {
  readonly ResourceArn: string;
  readonly Tags: [];
}

export interface TagResourceResponse {
}

export interface ThrottlingException {
  readonly Message: string;
  readonly RetryAfterSeconds?: number;
}

export interface TransitGatewayConnectPeerAssociation {
  readonly TransitGatewayConnectPeerArn?: string;
  readonly GlobalNetworkId?: string;
  readonly DeviceId?: string;
  readonly LinkId?: string;
  readonly State?: string;
}

export interface TransitGatewayRegistration {
  readonly GlobalNetworkId?: string;
  readonly TransitGatewayArn?: string;
  readonly State?: TransitGatewayRegistrationStateReason;
}

export interface TransitGatewayRegistrationStateReason {
  readonly Code?: string;
  readonly Message?: string;
}

export interface UntagResourceRequest {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}

export interface UntagResourceResponse {
}

export interface UpdateConnectionRequest {
  readonly GlobalNetworkId: string;
  readonly ConnectionId: string;
  readonly LinkId?: string;
  readonly ConnectedLinkId?: string;
  readonly Description?: string;
}

export interface UpdateConnectionResponse {
  readonly Connection?: Connection;
}

export interface UpdateCoreNetworkRequest {
  readonly CoreNetworkId: string;
  readonly Description?: string;
}

export interface UpdateCoreNetworkResponse {
  readonly CoreNetwork?: CoreNetwork;
}

export interface UpdateDeviceRequest {
  readonly GlobalNetworkId: string;
  readonly DeviceId: string;
  readonly AWSLocation?: AWSLocation;
  readonly Description?: string;
  readonly Type?: string;
  readonly Vendor?: string;
  readonly Model?: string;
  readonly SerialNumber?: string;
  readonly Location?: Location;
  readonly SiteId?: string;
}

export interface UpdateDeviceResponse {
  readonly Device?: Device;
}

export interface UpdateGlobalNetworkRequest {
  readonly GlobalNetworkId: string;
  readonly Description?: string;
}

export interface UpdateGlobalNetworkResponse {
  readonly GlobalNetwork?: GlobalNetwork;
}

export interface UpdateLinkRequest {
  readonly GlobalNetworkId: string;
  readonly LinkId: string;
  readonly Description?: string;
  readonly Type?: string;
  readonly Bandwidth?: Bandwidth;
  readonly Provider?: string;
}

export interface UpdateLinkResponse {
  readonly Link?: Link;
}

export interface UpdateNetworkResourceMetadataRequest {
  readonly GlobalNetworkId: string;
  readonly ResourceArn: string;
  readonly Metadata: {[key: string]: any};
}

export interface UpdateNetworkResourceMetadataResponse {
  readonly ResourceArn?: string;
  readonly Metadata?: {[key: string]: any};
}

export interface UpdateSiteRequest {
  readonly GlobalNetworkId: string;
  readonly SiteId: string;
  readonly Description?: string;
  readonly Location?: Location;
}

export interface UpdateSiteResponse {
  readonly Site?: Site;
}

export interface UpdateVpcAttachmentRequest {
  readonly AttachmentId: string;
  readonly AddSubnetArns?: [];
  readonly RemoveSubnetArns?: [];
  readonly Options?: VpcOptions;
}

export interface UpdateVpcAttachmentResponse {
  readonly VpcAttachment?: VpcAttachment;
}

export interface ValidationException {
  readonly Message: string;
  readonly Reason?: string;
  readonly Fields?: [];
}

export interface ValidationExceptionField {
  readonly Name: string;
  readonly Message: string;
}

export interface VpcAttachment {
  readonly Attachment?: Attachment;
  readonly SubnetArns?: [];
  readonly Options?: VpcOptions;
}

export interface VpcOptions {
  readonly Ipv6Support?: boolean;
}


