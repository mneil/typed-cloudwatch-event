/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface BatchCreatePartition {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionInputList: [];
}

export interface BatchDeleteConnection {
  readonly CatalogId?: string;
  readonly ConnectionNameList: [];
}

export interface BatchDeletePartition {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionsToDelete: [];
}

export interface BatchDeleteTable {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TablesToDelete: [];
  readonly TransactionId?: string;
}

export interface BatchDeleteTableVersion {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly VersionIds: [];
}

export interface BatchGetBlueprints {
  readonly Names: [];
  readonly IncludeBlueprint?: boolean;
  readonly IncludeParameterSpec?: boolean;
}

export interface BatchGetCrawlers {
  readonly CrawlerNames: [];
}

export interface BatchGetDevEndpoints {
  readonly DevEndpointNames: [];
}

export interface BatchGetJobs {
  readonly JobNames: [];
}

export interface BatchGetPartition {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionsToGet: [];
}

export interface BatchGetTriggers {
  readonly TriggerNames: [];
}

export interface BatchGetWorkflows {
  readonly Names: [];
  readonly IncludeGraph?: boolean;
}

export interface BatchStopJobRun {
  readonly JobName: string;
  readonly JobRunIds: [];
}

export interface BatchUpdatePartition {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly Entries: [];
}

export interface CancelMLTaskRun {
  readonly TransformId: string;
  readonly TaskRunId: string;
}

export interface CheckSchemaVersionValidity {
  readonly DataFormat: string;
  readonly SchemaDefinition: string;
}

export interface CreateBlueprint {
  readonly Name: string;
  readonly Description?: string;
  readonly BlueprintLocation: string;
  readonly Tags?: {[key: string]: any};
}

export interface CreateClassifier {
  readonly GrokClassifier?: CreateGrokClassifierRequest;
  readonly XMLClassifier?: CreateXMLClassifierRequest;
  readonly JsonClassifier?: CreateJsonClassifierRequest;
  readonly CsvClassifier?: CreateCsvClassifierRequest;
}

export interface CreateConnection {
  readonly CatalogId?: string;
  readonly ConnectionInput: ConnectionInput;
  readonly Tags?: {[key: string]: any};
}

export interface CreateCrawler {
  readonly Name: string;
  readonly Role: string;
  readonly DatabaseName?: string;
  readonly Description?: string;
  readonly Targets: CrawlerTargets;
  readonly Schedule?: string;
  readonly Classifiers?: [];
  readonly TablePrefix?: string;
  readonly SchemaChangePolicy?: SchemaChangePolicy;
  readonly RecrawlPolicy?: RecrawlPolicy;
  readonly LineageConfiguration?: LineageConfiguration;
  readonly Configuration?: string;
  readonly CrawlerSecurityConfiguration?: string;
  readonly Tags?: {[key: string]: any};
}

export interface CreateDatabase {
  readonly CatalogId?: string;
  readonly DatabaseInput: DatabaseInput;
}

export interface CreateDevEndpoint {
  readonly EndpointName: string;
  readonly RoleArn: string;
  readonly SecurityGroupIds?: [];
  readonly SubnetId?: string;
  readonly PublicKey?: string;
  readonly PublicKeys?: [];
  readonly NumberOfNodes?: number;
  readonly WorkerType?: string;
  readonly GlueVersion?: string;
  readonly NumberOfWorkers?: number;
  readonly ExtraPythonLibsS3Path?: string;
  readonly ExtraJarsS3Path?: string;
  readonly SecurityConfiguration?: string;
  readonly Tags?: {[key: string]: any};
  readonly Arguments?: {[key: string]: any};
}

export interface CreateJob {
  readonly Name: string;
  readonly Description?: string;
  readonly LogUri?: string;
  readonly Role: string;
  readonly ExecutionProperty?: ExecutionProperty;
  readonly Command: JobCommand;
  readonly DefaultArguments?: {[key: string]: any};
  readonly NonOverridableArguments?: {[key: string]: any};
  readonly Connections?: ConnectionsList;
  readonly MaxRetries?: number;
  readonly AllocatedCapacity?: number;
  readonly Timeout?: number;
  readonly MaxCapacity?: unknown;
  readonly SecurityConfiguration?: string;
  readonly Tags?: {[key: string]: any};
  readonly NotificationProperty?: NotificationProperty;
  readonly GlueVersion?: string;
  readonly NumberOfWorkers?: number;
  readonly WorkerType?: string;
}

export interface CreateMLTransform {
  readonly Name: string;
  readonly Description?: string;
  readonly InputRecordTables: [];
  readonly Parameters: TransformParameters;
  readonly Role: string;
  readonly GlueVersion?: string;
  readonly MaxCapacity?: unknown;
  readonly WorkerType?: string;
  readonly NumberOfWorkers?: number;
  readonly Timeout?: number;
  readonly MaxRetries?: number;
  readonly Tags?: {[key: string]: any};
  readonly TransformEncryption?: TransformEncryption;
}

export interface CreatePartition {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionInput: PartitionInput;
}

export interface CreatePartitionIndex {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionIndex: PartitionIndex;
}

export interface CreateRegistry {
  readonly RegistryName: string;
  readonly Description?: string;
  readonly Tags?: {[key: string]: any};
}

export interface CreateSchema {
  readonly RegistryId?: RegistryId;
  readonly SchemaName: string;
  readonly DataFormat: string;
  readonly Compatibility?: string;
  readonly Description?: string;
  readonly Tags?: {[key: string]: any};
  readonly SchemaDefinition?: string;
}

export interface CreateScript {
  readonly DagNodes?: [];
  readonly DagEdges?: [];
  readonly Language?: string;
}

export interface CreateSecurityConfiguration {
  readonly Name: string;
  readonly EncryptionConfiguration: EncryptionConfiguration;
}

export interface CreateTable {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableInput: TableInput;
  readonly PartitionIndexes?: [];
  readonly TransactionId?: string;
}

export interface CreateTrigger {
  readonly Name: string;
  readonly WorkflowName?: string;
  readonly Type: string;
  readonly Schedule?: string;
  readonly Predicate?: Predicate;
  readonly Actions: [];
  readonly Description?: string;
  readonly StartOnCreation?: boolean;
  readonly Tags?: {[key: string]: any};
  readonly EventBatchingCondition?: EventBatchingCondition;
}

export interface CreateUserDefinedFunction {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly FunctionInput: UserDefinedFunctionInput;
}

export interface CreateWorkflow {
  readonly Name: string;
  readonly Description?: string;
  readonly DefaultRunProperties?: {[key: string]: any};
  readonly Tags?: {[key: string]: any};
  readonly MaxConcurrentRuns?: number;
}

export interface DeleteBlueprint {
  readonly Name: string;
}

export interface DeleteClassifier {
  readonly Name: string;
}

export interface DeleteColumnStatisticsForPartition {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionValues: [];
  readonly ColumnName: string;
}

export interface DeleteColumnStatisticsForTable {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly ColumnName: string;
}

export interface DeleteConnection {
  readonly CatalogId?: string;
  readonly ConnectionName: string;
}

export interface DeleteCrawler {
  readonly Name: string;
}

export interface DeleteDatabase {
  readonly CatalogId?: string;
  readonly Name: string;
}

export interface DeleteDevEndpoint {
  readonly EndpointName: string;
}

export interface DeleteJob {
  readonly JobName: string;
}

export interface DeleteMLTransform {
  readonly TransformId: string;
}

export interface DeletePartition {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionValues: [];
}

export interface DeletePartitionIndex {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly IndexName: string;
}

export interface DeleteRegistry {
  readonly RegistryId: RegistryId;
}

export interface DeleteResourcePolicy {
  readonly PolicyHashCondition?: string;
  readonly ResourceArn?: string;
}

export interface DeleteSchema {
  readonly SchemaId: SchemaId;
}

export interface DeleteSchemaVersions {
  readonly SchemaId: SchemaId;
  readonly Versions: string;
}

export interface DeleteSecurityConfiguration {
  readonly Name: string;
}

export interface DeleteTable {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly Name: string;
  readonly TransactionId?: string;
}

export interface DeleteTableVersion {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly VersionId: string;
}

export interface DeleteTrigger {
  readonly Name: string;
}

export interface DeleteUserDefinedFunction {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly FunctionName: string;
}

export interface DeleteWorkflow {
  readonly Name: string;
}

export interface GetBlueprint {
  readonly Name: string;
  readonly IncludeBlueprint?: boolean;
  readonly IncludeParameterSpec?: boolean;
}

export interface GetBlueprintRun {
  readonly BlueprintName: string;
  readonly RunId: string;
}

export interface GetBlueprintRuns {
  readonly BlueprintName: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface GetCatalogImportStatus {
  readonly CatalogId?: string;
}

export interface GetClassifier {
  readonly Name: string;
}

export interface GetClassifiers {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetColumnStatisticsForPartition {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionValues: [];
  readonly ColumnNames: [];
}

export interface GetColumnStatisticsForTable {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly ColumnNames: [];
}

export interface GetConnection {
  readonly CatalogId?: string;
  readonly Name: string;
  readonly HidePassword?: boolean;
}

export interface GetConnections {
  readonly CatalogId?: string;
  readonly Filter?: GetConnectionsFilter;
  readonly HidePassword?: boolean;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface GetCrawler {
  readonly Name: string;
}

export interface GetCrawlerMetrics {
  readonly CrawlerNameList?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetCrawlers {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetDataCatalogEncryptionSettings {
  readonly CatalogId?: string;
}

export interface GetDatabase {
  readonly CatalogId?: string;
  readonly Name: string;
}

export interface GetDatabases {
  readonly CatalogId?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly ResourceShareType?: string;
}

export interface GetDataflowGraph {
  readonly PythonScript?: string;
}

export interface GetDevEndpoint {
  readonly EndpointName: string;
}

export interface GetDevEndpoints {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetJob {
  readonly JobName: string;
}

export interface GetJobBookmark {
  readonly JobName: string;
  readonly RunId?: string;
}

export interface GetJobRun {
  readonly JobName: string;
  readonly RunId: string;
  readonly PredecessorsIncluded?: boolean;
}

export interface GetJobRuns {
  readonly JobName: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface GetJobs {
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface GetMLTaskRun {
  readonly TransformId: string;
  readonly TaskRunId: string;
}

export interface GetMLTaskRuns {
  readonly TransformId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly Filter?: TaskRunFilterCriteria;
  readonly Sort?: TaskRunSortCriteria;
}

export interface GetMLTransform {
  readonly TransformId: string;
}

export interface GetMLTransforms {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly Filter?: TransformFilterCriteria;
  readonly Sort?: TransformSortCriteria;
}

export interface GetMapping {
  readonly Source: CatalogEntry;
  readonly Sinks?: [];
  readonly Location?: Location;
}

export interface GetPartition {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionValues: [];
}

export interface GetPartitionIndexes {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly NextToken?: string;
}

export interface GetPartitions {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly Expression?: string;
  readonly NextToken?: string;
  readonly Segment?: Segment;
  readonly MaxResults?: number;
  readonly ExcludeColumnSchema?: boolean;
  readonly TransactionId?: string;
  readonly QueryAsOfTime?: Date;
}

export interface GetPlan {
  readonly Mapping: [];
  readonly Source: CatalogEntry;
  readonly Sinks?: [];
  readonly Location?: Location;
  readonly Language?: string;
  readonly AdditionalPlanOptionsMap?: {[key: string]: any};
}

export interface GetRegistry {
  readonly RegistryId: RegistryId;
}

export interface GetResourcePolicies {
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface GetResourcePolicy {
  readonly ResourceArn?: string;
}

export interface GetSchema {
  readonly SchemaId: SchemaId;
}

export interface GetSchemaByDefinition {
  readonly SchemaId: SchemaId;
  readonly SchemaDefinition: string;
}

export interface GetSchemaVersion {
  readonly SchemaId?: SchemaId;
  readonly SchemaVersionId?: string;
  readonly SchemaVersionNumber?: SchemaVersionNumber;
}

export interface GetSchemaVersionsDiff {
  readonly SchemaId: SchemaId;
  readonly FirstSchemaVersionNumber: SchemaVersionNumber;
  readonly SecondSchemaVersionNumber: SchemaVersionNumber;
  readonly SchemaDiffType: string;
}

export interface GetSecurityConfiguration {
  readonly Name: string;
}

export interface GetSecurityConfigurations {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetTable {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly Name: string;
  readonly TransactionId?: string;
  readonly QueryAsOfTime?: Date;
}

export interface GetTableVersion {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly VersionId?: string;
}

export interface GetTableVersions {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface GetTables {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly Expression?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly TransactionId?: string;
  readonly QueryAsOfTime?: Date;
}

export interface GetTags {
  readonly ResourceArn: string;
}

export interface GetTrigger {
  readonly Name: string;
}

export interface GetTriggers {
  readonly NextToken?: string;
  readonly DependentJobName?: string;
  readonly MaxResults?: number;
}

export interface GetUserDefinedFunction {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly FunctionName: string;
}

export interface GetUserDefinedFunctions {
  readonly CatalogId?: string;
  readonly DatabaseName?: string;
  readonly Pattern: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface GetWorkflow {
  readonly Name: string;
  readonly IncludeGraph?: boolean;
}

export interface GetWorkflowRun {
  readonly Name: string;
  readonly RunId: string;
  readonly IncludeGraph?: boolean;
}

export interface GetWorkflowRunProperties {
  readonly Name: string;
  readonly RunId: string;
}

export interface GetWorkflowRuns {
  readonly Name: string;
  readonly IncludeGraph?: boolean;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ImportCatalogToGlue {
  readonly CatalogId?: string;
}

export interface ListBlueprints {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly Tags?: {[key: string]: any};
}

export interface ListCrawlers {
  readonly MaxResults?: number;
  readonly NextToken?: string;
  readonly Tags?: {[key: string]: any};
}

export interface ListDevEndpoints {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly Tags?: {[key: string]: any};
}

export interface ListJobs {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly Tags?: {[key: string]: any};
}

export interface ListMLTransforms {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly Filter?: TransformFilterCriteria;
  readonly Sort?: TransformSortCriteria;
  readonly Tags?: {[key: string]: any};
}

export interface ListRegistries {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListSchemaVersions {
  readonly SchemaId: SchemaId;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListSchemas {
  readonly RegistryId?: RegistryId;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListTriggers {
  readonly NextToken?: string;
  readonly DependentJobName?: string;
  readonly MaxResults?: number;
  readonly Tags?: {[key: string]: any};
}

export interface ListWorkflows {
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface PutDataCatalogEncryptionSettings {
  readonly CatalogId?: string;
  readonly DataCatalogEncryptionSettings: DataCatalogEncryptionSettings;
}

export interface PutResourcePolicy {
  readonly PolicyInJson: string;
  readonly ResourceArn?: string;
  readonly PolicyHashCondition?: string;
  readonly PolicyExistsCondition?: string;
  readonly EnableHybrid?: string;
}

export interface PutSchemaVersionMetadata {
  readonly SchemaId?: SchemaId;
  readonly SchemaVersionNumber?: SchemaVersionNumber;
  readonly SchemaVersionId?: string;
  readonly MetadataKeyValue: MetadataKeyValuePair;
}

export interface PutWorkflowRunProperties {
  readonly Name: string;
  readonly RunId: string;
  readonly RunProperties: {[key: string]: any};
}

export interface QuerySchemaVersionMetadata {
  readonly SchemaId?: SchemaId;
  readonly SchemaVersionNumber?: SchemaVersionNumber;
  readonly SchemaVersionId?: string;
  readonly MetadataList?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface RegisterSchemaVersion {
  readonly SchemaId: SchemaId;
  readonly SchemaDefinition: string;
}

export interface RemoveSchemaVersionMetadata {
  readonly SchemaId?: SchemaId;
  readonly SchemaVersionNumber?: SchemaVersionNumber;
  readonly SchemaVersionId?: string;
  readonly MetadataKeyValue: MetadataKeyValuePair;
}

export interface ResetJobBookmark {
  readonly JobName: string;
  readonly RunId?: string;
}

export interface ResumeWorkflowRun {
  readonly Name: string;
  readonly RunId: string;
  readonly NodeIds: [];
}

export interface SearchTables {
  readonly CatalogId?: string;
  readonly NextToken?: string;
  readonly Filters?: [];
  readonly SearchText?: string;
  readonly SortCriteria?: [];
  readonly MaxResults?: number;
  readonly ResourceShareType?: string;
}

export interface StartBlueprintRun {
  readonly BlueprintName: string;
  readonly Parameters?: string;
  readonly RoleArn: string;
}

export interface StartCrawler {
  readonly Name: string;
}

export interface StartCrawlerSchedule {
  readonly CrawlerName: string;
}

export interface StartExportLabelsTaskRun {
  readonly TransformId: string;
  readonly OutputS3Path: string;
}

export interface StartImportLabelsTaskRun {
  readonly TransformId: string;
  readonly InputS3Path: string;
  readonly ReplaceAllLabels?: boolean;
}

export interface StartJobRun {
  readonly JobName: string;
  readonly JobRunId?: string;
  readonly Arguments?: {[key: string]: any};
  readonly AllocatedCapacity?: number;
  readonly Timeout?: number;
  readonly MaxCapacity?: unknown;
  readonly SecurityConfiguration?: string;
  readonly NotificationProperty?: NotificationProperty;
  readonly WorkerType?: string;
  readonly NumberOfWorkers?: number;
}

export interface StartMLEvaluationTaskRun {
  readonly TransformId: string;
}

export interface StartMLLabelingSetGenerationTaskRun {
  readonly TransformId: string;
  readonly OutputS3Path: string;
}

export interface StartTrigger {
  readonly Name: string;
}

export interface StartWorkflowRun {
  readonly Name: string;
}

export interface StopCrawler {
  readonly Name: string;
}

export interface StopCrawlerSchedule {
  readonly CrawlerName: string;
}

export interface StopTrigger {
  readonly Name: string;
}

export interface StopWorkflowRun {
  readonly Name: string;
  readonly RunId: string;
}

export interface TagResource {
  readonly ResourceArn: string;
  readonly TagsToAdd: {[key: string]: any};
}

export interface UntagResource {
  readonly ResourceArn: string;
  readonly TagsToRemove: [];
}

export interface UpdateBlueprint {
  readonly Name: string;
  readonly Description?: string;
  readonly BlueprintLocation: string;
}

export interface UpdateClassifier {
  readonly GrokClassifier?: UpdateGrokClassifierRequest;
  readonly XMLClassifier?: UpdateXMLClassifierRequest;
  readonly JsonClassifier?: UpdateJsonClassifierRequest;
  readonly CsvClassifier?: UpdateCsvClassifierRequest;
}

export interface UpdateColumnStatisticsForPartition {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionValues: [];
  readonly ColumnStatisticsList: [];
}

export interface UpdateColumnStatisticsForTable {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly ColumnStatisticsList: [];
}

export interface UpdateConnection {
  readonly CatalogId?: string;
  readonly Name: string;
  readonly ConnectionInput: ConnectionInput;
}

export interface UpdateCrawler {
  readonly Name: string;
  readonly Role?: string;
  readonly DatabaseName?: string;
  readonly Description?: string;
  readonly Targets?: CrawlerTargets;
  readonly Schedule?: string;
  readonly Classifiers?: [];
  readonly TablePrefix?: string;
  readonly SchemaChangePolicy?: SchemaChangePolicy;
  readonly RecrawlPolicy?: RecrawlPolicy;
  readonly LineageConfiguration?: LineageConfiguration;
  readonly Configuration?: string;
  readonly CrawlerSecurityConfiguration?: string;
}

export interface UpdateCrawlerSchedule {
  readonly CrawlerName: string;
  readonly Schedule?: string;
}

export interface UpdateDatabase {
  readonly CatalogId?: string;
  readonly Name: string;
  readonly DatabaseInput: DatabaseInput;
}

export interface UpdateDevEndpoint {
  readonly EndpointName: string;
  readonly PublicKey?: string;
  readonly AddPublicKeys?: [];
  readonly DeletePublicKeys?: [];
  readonly CustomLibraries?: DevEndpointCustomLibraries;
  readonly UpdateEtlLibraries?: boolean;
  readonly DeleteArguments?: [];
  readonly AddArguments?: {[key: string]: any};
}

export interface UpdateJob {
  readonly JobName: string;
  readonly JobUpdate: JobUpdate;
}

export interface UpdateMLTransform {
  readonly TransformId: string;
  readonly Name?: string;
  readonly Description?: string;
  readonly Parameters?: TransformParameters;
  readonly Role?: string;
  readonly GlueVersion?: string;
  readonly MaxCapacity?: unknown;
  readonly WorkerType?: string;
  readonly NumberOfWorkers?: number;
  readonly Timeout?: number;
  readonly MaxRetries?: number;
}

export interface UpdatePartition {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionValueList: [];
  readonly PartitionInput: PartitionInput;
}

export interface UpdateRegistry {
  readonly RegistryId: RegistryId;
  readonly Description: string;
}

export interface UpdateSchema {
  readonly SchemaId: SchemaId;
  readonly SchemaVersionNumber?: SchemaVersionNumber;
  readonly Compatibility?: string;
  readonly Description?: string;
}

export interface UpdateTable {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableInput: TableInput;
  readonly SkipArchive?: boolean;
  readonly TransactionId?: string;
}

export interface UpdateTrigger {
  readonly Name: string;
  readonly TriggerUpdate: TriggerUpdate;
}

export interface UpdateUserDefinedFunction {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly FunctionName: string;
  readonly FunctionInput: UserDefinedFunctionInput;
}

export interface UpdateWorkflow {
  readonly Name: string;
  readonly Description?: string;
  readonly DefaultRunProperties?: {[key: string]: any};
  readonly MaxConcurrentRuns?: number;
}

export interface AccessDeniedException {
  readonly Message?: string;
}

export interface Action {
  readonly JobName?: string;
  readonly Arguments?: {[key: string]: any};
  readonly Timeout?: number;
  readonly SecurityConfiguration?: string;
  readonly NotificationProperty?: NotificationProperty;
  readonly CrawlerName?: string;
}

export interface AlreadyExistsException {
  readonly Message?: string;
}

export interface BackfillError {
  readonly Code?: string;
  readonly Partitions?: [];
}

export interface BatchCreatePartitionRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionInputList: [];
}

export interface BatchCreatePartitionResponse {
  readonly Errors?: [];
}

export interface BatchDeleteConnectionRequest {
  readonly CatalogId?: string;
  readonly ConnectionNameList: [];
}

export interface BatchDeleteConnectionResponse {
  readonly Succeeded?: [];
  readonly Errors?: {[key: string]: any};
}

export interface BatchDeletePartitionRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionsToDelete: [];
}

export interface BatchDeletePartitionResponse {
  readonly Errors?: [];
}

export interface BatchDeleteTableRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TablesToDelete: [];
  readonly TransactionId?: string;
}

export interface BatchDeleteTableResponse {
  readonly Errors?: [];
}

export interface BatchDeleteTableVersionRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly VersionIds: [];
}

export interface BatchDeleteTableVersionResponse {
  readonly Errors?: [];
}

export interface BatchGetBlueprintsRequest {
  readonly Names: [];
  readonly IncludeBlueprint?: boolean;
  readonly IncludeParameterSpec?: boolean;
}

export interface BatchGetBlueprintsResponse {
  readonly Blueprints?: [];
  readonly MissingBlueprints?: [];
}

export interface BatchGetCrawlersRequest {
  readonly CrawlerNames: [];
}

export interface BatchGetCrawlersResponse {
  readonly Crawlers?: [];
  readonly CrawlersNotFound?: [];
}

export interface BatchGetDevEndpointsRequest {
  readonly DevEndpointNames: [];
}

export interface BatchGetDevEndpointsResponse {
  readonly DevEndpoints?: [];
  readonly DevEndpointsNotFound?: [];
}

export interface BatchGetJobsRequest {
  readonly JobNames: [];
}

export interface BatchGetJobsResponse {
  readonly Jobs?: [];
  readonly JobsNotFound?: [];
}

export interface BatchGetPartitionRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionsToGet: [];
}

export interface BatchGetPartitionResponse {
  readonly Partitions?: [];
  readonly UnprocessedKeys?: [];
}

export interface BatchGetTriggersRequest {
  readonly TriggerNames: [];
}

export interface BatchGetTriggersResponse {
  readonly Triggers?: [];
  readonly TriggersNotFound?: [];
}

export interface BatchGetWorkflowsRequest {
  readonly Names: [];
  readonly IncludeGraph?: boolean;
}

export interface BatchGetWorkflowsResponse {
  readonly Workflows?: [];
  readonly MissingWorkflows?: [];
}

export interface BatchStopJobRunError {
  readonly JobName?: string;
  readonly JobRunId?: string;
  readonly ErrorDetail?: ErrorDetail;
}

export interface BatchStopJobRunRequest {
  readonly JobName: string;
  readonly JobRunIds: [];
}

export interface BatchStopJobRunResponse {
  readonly SuccessfulSubmissions?: [];
  readonly Errors?: [];
}

export interface BatchStopJobRunSuccessfulSubmission {
  readonly JobName?: string;
  readonly JobRunId?: string;
}

export interface BatchUpdatePartitionFailureEntry {
  readonly PartitionValueList?: [];
  readonly ErrorDetail?: ErrorDetail;
}

export interface BatchUpdatePartitionRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly Entries: [];
}

export interface BatchUpdatePartitionRequestEntry {
  readonly PartitionValueList: [];
  readonly PartitionInput: PartitionInput;
}

export interface BatchUpdatePartitionResponse {
  readonly Errors?: [];
}

export interface BinaryColumnStatisticsData {
  readonly MaximumLength: number;
  readonly AverageLength: unknown;
  readonly NumberOfNulls: number;
}

export interface Blueprint {
  readonly Name?: string;
  readonly Description?: string;
  readonly CreatedOn?: Date;
  readonly LastModifiedOn?: Date;
  readonly ParameterSpec?: string;
  readonly BlueprintLocation?: string;
  readonly BlueprintServiceLocation?: string;
  readonly Status?: string;
  readonly ErrorMessage?: string;
  readonly LastActiveDefinition?: LastActiveDefinition;
}

export interface BlueprintDetails {
  readonly BlueprintName?: string;
  readonly RunId?: string;
}

export interface BlueprintRun {
  readonly BlueprintName?: string;
  readonly RunId?: string;
  readonly WorkflowName?: string;
  readonly State?: string;
  readonly StartedOn?: Date;
  readonly CompletedOn?: Date;
  readonly ErrorMessage?: string;
  readonly RollbackErrorMessage?: string;
  readonly Parameters?: string;
  readonly RoleArn?: string;
}

export interface BooleanColumnStatisticsData {
  readonly NumberOfTrues: number;
  readonly NumberOfFalses: number;
  readonly NumberOfNulls: number;
}

export interface CancelMLTaskRunRequest {
  readonly TransformId: string;
  readonly TaskRunId: string;
}

export interface CancelMLTaskRunResponse {
  readonly TransformId?: string;
  readonly TaskRunId?: string;
  readonly Status?: string;
}

export interface CatalogEntry {
  readonly DatabaseName: string;
  readonly TableName: string;
}

export interface CatalogImportStatus {
  readonly ImportCompleted?: boolean;
  readonly ImportTime?: Date;
  readonly ImportedBy?: string;
}

export interface CatalogTarget {
  readonly DatabaseName: string;
  readonly Tables: [];
}

export interface CheckSchemaVersionValidityInput {
  readonly DataFormat: string;
  readonly SchemaDefinition: string;
}

export interface CheckSchemaVersionValidityResponse {
  readonly Valid?: boolean;
  readonly Error?: string;
}

export interface Classifier {
  readonly GrokClassifier?: GrokClassifier;
  readonly XMLClassifier?: XMLClassifier;
  readonly JsonClassifier?: JsonClassifier;
  readonly CsvClassifier?: CsvClassifier;
}

export interface CloudWatchEncryption {
  readonly CloudWatchEncryptionMode?: string;
  readonly KmsKeyArn?: string;
}

export interface CodeGenEdge {
  readonly Source: string;
  readonly Target: string;
  readonly TargetParameter?: string;
}

export interface CodeGenNode {
  readonly Id: string;
  readonly NodeType: string;
  readonly Args: [];
  readonly LineNumber?: number;
}

export interface CodeGenNodeArg {
  readonly Name: string;
  readonly Value: string;
  readonly Param?: boolean;
}

export interface Column {
  readonly Name: string;
  readonly Type?: string;
  readonly Comment?: string;
  readonly Parameters?: {[key: string]: any};
}

export interface ColumnError {
  readonly ColumnName?: string;
  readonly Error?: ErrorDetail;
}

export interface ColumnImportance {
  readonly ColumnName?: string;
  readonly Importance?: unknown;
}

export interface ColumnStatistics {
  readonly ColumnName: string;
  readonly ColumnType: string;
  readonly AnalyzedTime: Date;
  readonly StatisticsData: ColumnStatisticsData;
}

export interface ColumnStatisticsData {
  readonly Type: string;
  readonly BooleanColumnStatisticsData?: BooleanColumnStatisticsData;
  readonly DateColumnStatisticsData?: DateColumnStatisticsData;
  readonly DecimalColumnStatisticsData?: DecimalColumnStatisticsData;
  readonly DoubleColumnStatisticsData?: DoubleColumnStatisticsData;
  readonly LongColumnStatisticsData?: LongColumnStatisticsData;
  readonly StringColumnStatisticsData?: StringColumnStatisticsData;
  readonly BinaryColumnStatisticsData?: BinaryColumnStatisticsData;
}

export interface ColumnStatisticsError {
  readonly ColumnStatistics?: ColumnStatistics;
  readonly Error?: ErrorDetail;
}

export interface ConcurrentModificationException {
  readonly Message?: string;
}

export interface ConcurrentRunsExceededException {
  readonly Message?: string;
}

export interface Condition {
  readonly LogicalOperator?: string;
  readonly JobName?: string;
  readonly State?: string;
  readonly CrawlerName?: string;
  readonly CrawlState?: string;
}

export interface ConditionCheckFailureException {
  readonly Message?: string;
}

export interface ConflictException {
  readonly Message?: string;
}

export interface ConfusionMatrix {
  readonly NumTruePositives?: number;
  readonly NumFalsePositives?: number;
  readonly NumTrueNegatives?: number;
  readonly NumFalseNegatives?: number;
}

export interface Connection {
  readonly Name?: string;
  readonly Description?: string;
  readonly ConnectionType?: string;
  readonly MatchCriteria?: [];
  readonly ConnectionProperties?: {[key: string]: any};
  readonly PhysicalConnectionRequirements?: PhysicalConnectionRequirements;
  readonly CreationTime?: Date;
  readonly LastUpdatedTime?: Date;
  readonly LastUpdatedBy?: string;
}

export interface ConnectionInput {
  readonly Name: string;
  readonly Description?: string;
  readonly ConnectionType: string;
  readonly MatchCriteria?: [];
  readonly ConnectionProperties: {[key: string]: any};
  readonly PhysicalConnectionRequirements?: PhysicalConnectionRequirements;
}

export interface ConnectionPasswordEncryption {
  readonly ReturnConnectionPasswordEncrypted: boolean;
  readonly AwsKmsKeyId?: string;
}

export interface ConnectionsList {
  readonly Connections?: [];
}

export interface Crawl {
  readonly State?: string;
  readonly StartedOn?: Date;
  readonly CompletedOn?: Date;
  readonly ErrorMessage?: string;
  readonly LogGroup?: string;
  readonly LogStream?: string;
}

export interface Crawler {
  readonly Name?: string;
  readonly Role?: string;
  readonly Targets?: CrawlerTargets;
  readonly DatabaseName?: string;
  readonly Description?: string;
  readonly Classifiers?: [];
  readonly RecrawlPolicy?: RecrawlPolicy;
  readonly SchemaChangePolicy?: SchemaChangePolicy;
  readonly LineageConfiguration?: LineageConfiguration;
  readonly State?: string;
  readonly TablePrefix?: string;
  readonly Schedule?: Schedule;
  readonly CrawlElapsedTime?: number;
  readonly CreationTime?: Date;
  readonly LastUpdated?: Date;
  readonly LastCrawl?: LastCrawlInfo;
  readonly Version?: number;
  readonly Configuration?: string;
  readonly CrawlerSecurityConfiguration?: string;
}

export interface CrawlerMetrics {
  readonly CrawlerName?: string;
  readonly TimeLeftSeconds?: unknown;
  readonly StillEstimating?: boolean;
  readonly LastRuntimeSeconds?: unknown;
  readonly MedianRuntimeSeconds?: unknown;
  readonly TablesCreated?: number;
  readonly TablesUpdated?: number;
  readonly TablesDeleted?: number;
}

export interface CrawlerNodeDetails {
  readonly Crawls?: [];
}

export interface CrawlerNotRunningException {
  readonly Message?: string;
}

export interface CrawlerRunningException {
  readonly Message?: string;
}

export interface CrawlerStoppingException {
  readonly Message?: string;
}

export interface CrawlerTargets {
  readonly S3Targets?: [];
  readonly JdbcTargets?: [];
  readonly MongoDBTargets?: [];
  readonly DynamoDBTargets?: [];
  readonly CatalogTargets?: [];
}

export interface CreateBlueprintRequest {
  readonly Name: string;
  readonly Description?: string;
  readonly BlueprintLocation: string;
  readonly Tags?: {[key: string]: any};
}

export interface CreateBlueprintResponse {
  readonly Name?: string;
}

export interface CreateClassifierRequest {
  readonly GrokClassifier?: CreateGrokClassifierRequest;
  readonly XMLClassifier?: CreateXMLClassifierRequest;
  readonly JsonClassifier?: CreateJsonClassifierRequest;
  readonly CsvClassifier?: CreateCsvClassifierRequest;
}

export interface CreateClassifierResponse {
}

export interface CreateConnectionRequest {
  readonly CatalogId?: string;
  readonly ConnectionInput: ConnectionInput;
  readonly Tags?: {[key: string]: any};
}

export interface CreateConnectionResponse {
}

export interface CreateCrawlerRequest {
  readonly Name: string;
  readonly Role: string;
  readonly DatabaseName?: string;
  readonly Description?: string;
  readonly Targets: CrawlerTargets;
  readonly Schedule?: string;
  readonly Classifiers?: [];
  readonly TablePrefix?: string;
  readonly SchemaChangePolicy?: SchemaChangePolicy;
  readonly RecrawlPolicy?: RecrawlPolicy;
  readonly LineageConfiguration?: LineageConfiguration;
  readonly Configuration?: string;
  readonly CrawlerSecurityConfiguration?: string;
  readonly Tags?: {[key: string]: any};
}

export interface CreateCrawlerResponse {
}

export interface CreateCsvClassifierRequest {
  readonly Name: string;
  readonly Delimiter?: string;
  readonly QuoteSymbol?: string;
  readonly ContainsHeader?: string;
  readonly Header?: [];
  readonly DisableValueTrimming?: boolean;
  readonly AllowSingleColumn?: boolean;
}

export interface CreateDatabaseRequest {
  readonly CatalogId?: string;
  readonly DatabaseInput: DatabaseInput;
}

export interface CreateDatabaseResponse {
}

export interface CreateDevEndpointRequest {
  readonly EndpointName: string;
  readonly RoleArn: string;
  readonly SecurityGroupIds?: [];
  readonly SubnetId?: string;
  readonly PublicKey?: string;
  readonly PublicKeys?: [];
  readonly NumberOfNodes?: number;
  readonly WorkerType?: string;
  readonly GlueVersion?: string;
  readonly NumberOfWorkers?: number;
  readonly ExtraPythonLibsS3Path?: string;
  readonly ExtraJarsS3Path?: string;
  readonly SecurityConfiguration?: string;
  readonly Tags?: {[key: string]: any};
  readonly Arguments?: {[key: string]: any};
}

export interface CreateDevEndpointResponse {
  readonly EndpointName?: string;
  readonly Status?: string;
  readonly SecurityGroupIds?: [];
  readonly SubnetId?: string;
  readonly RoleArn?: string;
  readonly YarnEndpointAddress?: string;
  readonly ZeppelinRemoteSparkInterpreterPort?: number;
  readonly NumberOfNodes?: number;
  readonly WorkerType?: string;
  readonly GlueVersion?: string;
  readonly NumberOfWorkers?: number;
  readonly AvailabilityZone?: string;
  readonly VpcId?: string;
  readonly ExtraPythonLibsS3Path?: string;
  readonly ExtraJarsS3Path?: string;
  readonly FailureReason?: string;
  readonly SecurityConfiguration?: string;
  readonly CreatedTimestamp?: Date;
  readonly Arguments?: {[key: string]: any};
}

export interface CreateGrokClassifierRequest {
  readonly Classification: string;
  readonly Name: string;
  readonly GrokPattern: string;
  readonly CustomPatterns?: string;
}

export interface CreateJobRequest {
  readonly Name: string;
  readonly Description?: string;
  readonly LogUri?: string;
  readonly Role: string;
  readonly ExecutionProperty?: ExecutionProperty;
  readonly Command: JobCommand;
  readonly DefaultArguments?: {[key: string]: any};
  readonly NonOverridableArguments?: {[key: string]: any};
  readonly Connections?: ConnectionsList;
  readonly MaxRetries?: number;
  readonly AllocatedCapacity?: number;
  readonly Timeout?: number;
  readonly MaxCapacity?: unknown;
  readonly SecurityConfiguration?: string;
  readonly Tags?: {[key: string]: any};
  readonly NotificationProperty?: NotificationProperty;
  readonly GlueVersion?: string;
  readonly NumberOfWorkers?: number;
  readonly WorkerType?: string;
}

export interface CreateJobResponse {
  readonly Name?: string;
}

export interface CreateJsonClassifierRequest {
  readonly Name: string;
  readonly JsonPath: string;
}

export interface CreateMLTransformRequest {
  readonly Name: string;
  readonly Description?: string;
  readonly InputRecordTables: [];
  readonly Parameters: TransformParameters;
  readonly Role: string;
  readonly GlueVersion?: string;
  readonly MaxCapacity?: unknown;
  readonly WorkerType?: string;
  readonly NumberOfWorkers?: number;
  readonly Timeout?: number;
  readonly MaxRetries?: number;
  readonly Tags?: {[key: string]: any};
  readonly TransformEncryption?: TransformEncryption;
}

export interface CreateMLTransformResponse {
  readonly TransformId?: string;
}

export interface CreatePartitionIndexRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionIndex: PartitionIndex;
}

export interface CreatePartitionIndexResponse {
}

export interface CreatePartitionRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionInput: PartitionInput;
}

export interface CreatePartitionResponse {
}

export interface CreateRegistryInput {
  readonly RegistryName: string;
  readonly Description?: string;
  readonly Tags?: {[key: string]: any};
}

export interface CreateRegistryResponse {
  readonly RegistryArn?: string;
  readonly RegistryName?: string;
  readonly Description?: string;
  readonly Tags?: {[key: string]: any};
}

export interface CreateSchemaInput {
  readonly RegistryId?: RegistryId;
  readonly SchemaName: string;
  readonly DataFormat: string;
  readonly Compatibility?: string;
  readonly Description?: string;
  readonly Tags?: {[key: string]: any};
  readonly SchemaDefinition?: string;
}

export interface CreateSchemaResponse {
  readonly RegistryName?: string;
  readonly RegistryArn?: string;
  readonly SchemaName?: string;
  readonly SchemaArn?: string;
  readonly Description?: string;
  readonly DataFormat?: string;
  readonly Compatibility?: string;
  readonly SchemaCheckpoint?: number;
  readonly LatestSchemaVersion?: number;
  readonly NextSchemaVersion?: number;
  readonly SchemaStatus?: string;
  readonly Tags?: {[key: string]: any};
  readonly SchemaVersionId?: string;
  readonly SchemaVersionStatus?: string;
}

export interface CreateScriptRequest {
  readonly DagNodes?: [];
  readonly DagEdges?: [];
  readonly Language?: string;
}

export interface CreateScriptResponse {
  readonly PythonScript?: string;
  readonly ScalaCode?: string;
}

export interface CreateSecurityConfigurationRequest {
  readonly Name: string;
  readonly EncryptionConfiguration: EncryptionConfiguration;
}

export interface CreateSecurityConfigurationResponse {
  readonly Name?: string;
  readonly CreatedTimestamp?: Date;
}

export interface CreateTableRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableInput: TableInput;
  readonly PartitionIndexes?: [];
  readonly TransactionId?: string;
}

export interface CreateTableResponse {
}

export interface CreateTriggerRequest {
  readonly Name: string;
  readonly WorkflowName?: string;
  readonly Type: string;
  readonly Schedule?: string;
  readonly Predicate?: Predicate;
  readonly Actions: [];
  readonly Description?: string;
  readonly StartOnCreation?: boolean;
  readonly Tags?: {[key: string]: any};
  readonly EventBatchingCondition?: EventBatchingCondition;
}

export interface CreateTriggerResponse {
  readonly Name?: string;
}

export interface CreateUserDefinedFunctionRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly FunctionInput: UserDefinedFunctionInput;
}

export interface CreateUserDefinedFunctionResponse {
}

export interface CreateWorkflowRequest {
  readonly Name: string;
  readonly Description?: string;
  readonly DefaultRunProperties?: {[key: string]: any};
  readonly Tags?: {[key: string]: any};
  readonly MaxConcurrentRuns?: number;
}

export interface CreateWorkflowResponse {
  readonly Name?: string;
}

export interface CreateXMLClassifierRequest {
  readonly Classification: string;
  readonly Name: string;
  readonly RowTag?: string;
}

export interface CsvClassifier {
  readonly Name: string;
  readonly CreationTime?: Date;
  readonly LastUpdated?: Date;
  readonly Version?: number;
  readonly Delimiter?: string;
  readonly QuoteSymbol?: string;
  readonly ContainsHeader?: string;
  readonly Header?: [];
  readonly DisableValueTrimming?: boolean;
  readonly AllowSingleColumn?: boolean;
}

export interface DataCatalogEncryptionSettings {
  readonly EncryptionAtRest?: EncryptionAtRest;
  readonly ConnectionPasswordEncryption?: ConnectionPasswordEncryption;
}

export interface DataLakePrincipal {
  readonly DataLakePrincipalIdentifier?: string;
}

export interface Database {
  readonly Name: string;
  readonly Description?: string;
  readonly LocationUri?: string;
  readonly Parameters?: {[key: string]: any};
  readonly CreateTime?: Date;
  readonly CreateTableDefaultPermissions?: [];
  readonly TargetDatabase?: DatabaseIdentifier;
  readonly CatalogId?: string;
}

export interface DatabaseIdentifier {
  readonly CatalogId?: string;
  readonly DatabaseName?: string;
}

export interface DatabaseInput {
  readonly Name: string;
  readonly Description?: string;
  readonly LocationUri?: string;
  readonly Parameters?: {[key: string]: any};
  readonly CreateTableDefaultPermissions?: [];
  readonly TargetDatabase?: DatabaseIdentifier;
}

export interface DateColumnStatisticsData {
  readonly MinimumValue?: Date;
  readonly MaximumValue?: Date;
  readonly NumberOfNulls: number;
  readonly NumberOfDistinctValues: number;
}

export interface DecimalColumnStatisticsData {
  readonly MinimumValue?: DecimalNumber;
  readonly MaximumValue?: DecimalNumber;
  readonly NumberOfNulls: number;
  readonly NumberOfDistinctValues: number;
}

export interface DecimalNumber {
  readonly UnscaledValue: unknown;
  readonly Scale: number;
}

export interface DeleteBlueprintRequest {
  readonly Name: string;
}

export interface DeleteBlueprintResponse {
  readonly Name?: string;
}

export interface DeleteClassifierRequest {
  readonly Name: string;
}

export interface DeleteClassifierResponse {
}

export interface DeleteColumnStatisticsForPartitionRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionValues: [];
  readonly ColumnName: string;
}

export interface DeleteColumnStatisticsForPartitionResponse {
}

export interface DeleteColumnStatisticsForTableRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly ColumnName: string;
}

export interface DeleteColumnStatisticsForTableResponse {
}

export interface DeleteConnectionRequest {
  readonly CatalogId?: string;
  readonly ConnectionName: string;
}

export interface DeleteConnectionResponse {
}

export interface DeleteCrawlerRequest {
  readonly Name: string;
}

export interface DeleteCrawlerResponse {
}

export interface DeleteDatabaseRequest {
  readonly CatalogId?: string;
  readonly Name: string;
}

export interface DeleteDatabaseResponse {
}

export interface DeleteDevEndpointRequest {
  readonly EndpointName: string;
}

export interface DeleteDevEndpointResponse {
}

export interface DeleteJobRequest {
  readonly JobName: string;
}

export interface DeleteJobResponse {
  readonly JobName?: string;
}

export interface DeleteMLTransformRequest {
  readonly TransformId: string;
}

export interface DeleteMLTransformResponse {
  readonly TransformId?: string;
}

export interface DeletePartitionIndexRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly IndexName: string;
}

export interface DeletePartitionIndexResponse {
}

export interface DeletePartitionRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionValues: [];
}

export interface DeletePartitionResponse {
}

export interface DeleteRegistryInput {
  readonly RegistryId: RegistryId;
}

export interface DeleteRegistryResponse {
  readonly RegistryName?: string;
  readonly RegistryArn?: string;
  readonly Status?: string;
}

export interface DeleteResourcePolicyRequest {
  readonly PolicyHashCondition?: string;
  readonly ResourceArn?: string;
}

export interface DeleteResourcePolicyResponse {
}

export interface DeleteSchemaInput {
  readonly SchemaId: SchemaId;
}

export interface DeleteSchemaResponse {
  readonly SchemaArn?: string;
  readonly SchemaName?: string;
  readonly Status?: string;
}

export interface DeleteSchemaVersionsInput {
  readonly SchemaId: SchemaId;
  readonly Versions: string;
}

export interface DeleteSchemaVersionsResponse {
  readonly SchemaVersionErrors?: [];
}

export interface DeleteSecurityConfigurationRequest {
  readonly Name: string;
}

export interface DeleteSecurityConfigurationResponse {
}

export interface DeleteTableRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly Name: string;
  readonly TransactionId?: string;
}

export interface DeleteTableResponse {
}

export interface DeleteTableVersionRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly VersionId: string;
}

export interface DeleteTableVersionResponse {
}

export interface DeleteTriggerRequest {
  readonly Name: string;
}

export interface DeleteTriggerResponse {
  readonly Name?: string;
}

export interface DeleteUserDefinedFunctionRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly FunctionName: string;
}

export interface DeleteUserDefinedFunctionResponse {
}

export interface DeleteWorkflowRequest {
  readonly Name: string;
}

export interface DeleteWorkflowResponse {
  readonly Name?: string;
}

export interface DevEndpoint {
  readonly EndpointName?: string;
  readonly RoleArn?: string;
  readonly SecurityGroupIds?: [];
  readonly SubnetId?: string;
  readonly YarnEndpointAddress?: string;
  readonly PrivateAddress?: string;
  readonly ZeppelinRemoteSparkInterpreterPort?: number;
  readonly PublicAddress?: string;
  readonly Status?: string;
  readonly WorkerType?: string;
  readonly GlueVersion?: string;
  readonly NumberOfWorkers?: number;
  readonly NumberOfNodes?: number;
  readonly AvailabilityZone?: string;
  readonly VpcId?: string;
  readonly ExtraPythonLibsS3Path?: string;
  readonly ExtraJarsS3Path?: string;
  readonly FailureReason?: string;
  readonly LastUpdateStatus?: string;
  readonly CreatedTimestamp?: Date;
  readonly LastModifiedTimestamp?: Date;
  readonly PublicKey?: string;
  readonly PublicKeys?: [];
  readonly SecurityConfiguration?: string;
  readonly Arguments?: {[key: string]: any};
}

export interface DevEndpointCustomLibraries {
  readonly ExtraPythonLibsS3Path?: string;
  readonly ExtraJarsS3Path?: string;
}

export interface DoubleColumnStatisticsData {
  readonly MinimumValue?: unknown;
  readonly MaximumValue?: unknown;
  readonly NumberOfNulls: number;
  readonly NumberOfDistinctValues: number;
}

export interface DynamoDBTarget {
  readonly Path?: string;
  readonly scanAll?: boolean;
  readonly scanRate?: unknown;
}

export interface Edge {
  readonly SourceId?: string;
  readonly DestinationId?: string;
}

export interface EncryptionAtRest {
  readonly CatalogEncryptionMode: string;
  readonly SseAwsKmsKeyId?: string;
}

export interface EncryptionConfiguration {
  readonly S3Encryption?: [];
  readonly CloudWatchEncryption?: CloudWatchEncryption;
  readonly JobBookmarksEncryption?: JobBookmarksEncryption;
}

export interface EntityNotFoundException {
  readonly Message?: string;
}

export interface ErrorDetail {
  readonly ErrorCode?: string;
  readonly ErrorMessage?: string;
}

export interface ErrorDetails {
  readonly ErrorCode?: string;
  readonly ErrorMessage?: string;
}

export interface EvaluationMetrics {
  readonly TransformType: string;
  readonly FindMatchesMetrics?: FindMatchesMetrics;
}

export interface EventBatchingCondition {
  readonly BatchSize: number;
  readonly BatchWindow?: number;
}

export interface ExecutionProperty {
  readonly MaxConcurrentRuns?: number;
}

export interface ExportLabelsTaskRunProperties {
  readonly OutputS3Path?: string;
}

export interface FindMatchesMetrics {
  readonly AreaUnderPRCurve?: unknown;
  readonly Precision?: unknown;
  readonly Recall?: unknown;
  readonly F1?: unknown;
  readonly ConfusionMatrix?: ConfusionMatrix;
  readonly ColumnImportances?: [];
}

export interface FindMatchesParameters {
  readonly PrimaryKeyColumnName?: string;
  readonly PrecisionRecallTradeoff?: unknown;
  readonly AccuracyCostTradeoff?: unknown;
  readonly EnforceProvidedLabels?: boolean;
}

export interface FindMatchesTaskRunProperties {
  readonly JobId?: string;
  readonly JobName?: string;
  readonly JobRunId?: string;
}

export interface GetBlueprintRequest {
  readonly Name: string;
  readonly IncludeBlueprint?: boolean;
  readonly IncludeParameterSpec?: boolean;
}

export interface GetBlueprintResponse {
  readonly Blueprint?: Blueprint;
}

export interface GetBlueprintRunRequest {
  readonly BlueprintName: string;
  readonly RunId: string;
}

export interface GetBlueprintRunResponse {
  readonly BlueprintRun?: BlueprintRun;
}

export interface GetBlueprintRunsRequest {
  readonly BlueprintName: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface GetBlueprintRunsResponse {
  readonly BlueprintRuns?: [];
  readonly NextToken?: string;
}

export interface GetCatalogImportStatusRequest {
  readonly CatalogId?: string;
}

export interface GetCatalogImportStatusResponse {
  readonly ImportStatus?: CatalogImportStatus;
}

export interface GetClassifierRequest {
  readonly Name: string;
}

export interface GetClassifierResponse {
  readonly Classifier?: Classifier;
}

export interface GetClassifiersRequest {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetClassifiersResponse {
  readonly Classifiers?: [];
  readonly NextToken?: string;
}

export interface GetColumnStatisticsForPartitionRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionValues: [];
  readonly ColumnNames: [];
}

export interface GetColumnStatisticsForPartitionResponse {
  readonly ColumnStatisticsList?: [];
  readonly Errors?: [];
}

export interface GetColumnStatisticsForTableRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly ColumnNames: [];
}

export interface GetColumnStatisticsForTableResponse {
  readonly ColumnStatisticsList?: [];
  readonly Errors?: [];
}

export interface GetConnectionRequest {
  readonly CatalogId?: string;
  readonly Name: string;
  readonly HidePassword?: boolean;
}

export interface GetConnectionResponse {
  readonly Connection?: Connection;
}

export interface GetConnectionsFilter {
  readonly MatchCriteria?: [];
  readonly ConnectionType?: string;
}

export interface GetConnectionsRequest {
  readonly CatalogId?: string;
  readonly Filter?: GetConnectionsFilter;
  readonly HidePassword?: boolean;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface GetConnectionsResponse {
  readonly ConnectionList?: [];
  readonly NextToken?: string;
}

export interface GetCrawlerMetricsRequest {
  readonly CrawlerNameList?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetCrawlerMetricsResponse {
  readonly CrawlerMetricsList?: [];
  readonly NextToken?: string;
}

export interface GetCrawlerRequest {
  readonly Name: string;
}

export interface GetCrawlerResponse {
  readonly Crawler?: Crawler;
}

export interface GetCrawlersRequest {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetCrawlersResponse {
  readonly Crawlers?: [];
  readonly NextToken?: string;
}

export interface GetDataCatalogEncryptionSettingsRequest {
  readonly CatalogId?: string;
}

export interface GetDataCatalogEncryptionSettingsResponse {
  readonly DataCatalogEncryptionSettings?: DataCatalogEncryptionSettings;
}

export interface GetDatabaseRequest {
  readonly CatalogId?: string;
  readonly Name: string;
}

export interface GetDatabaseResponse {
  readonly Database?: Database;
}

export interface GetDatabasesRequest {
  readonly CatalogId?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly ResourceShareType?: string;
}

export interface GetDatabasesResponse {
  readonly DatabaseList: [];
  readonly NextToken?: string;
}

export interface GetDataflowGraphRequest {
  readonly PythonScript?: string;
}

export interface GetDataflowGraphResponse {
  readonly DagNodes?: [];
  readonly DagEdges?: [];
}

export interface GetDevEndpointRequest {
  readonly EndpointName: string;
}

export interface GetDevEndpointResponse {
  readonly DevEndpoint?: DevEndpoint;
}

export interface GetDevEndpointsRequest {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetDevEndpointsResponse {
  readonly DevEndpoints?: [];
  readonly NextToken?: string;
}

export interface GetJobBookmarkRequest {
  readonly JobName: string;
  readonly RunId?: string;
}

export interface GetJobBookmarkResponse {
  readonly JobBookmarkEntry?: JobBookmarkEntry;
}

export interface GetJobRequest {
  readonly JobName: string;
}

export interface GetJobResponse {
  readonly Job?: Job;
}

export interface GetJobRunRequest {
  readonly JobName: string;
  readonly RunId: string;
  readonly PredecessorsIncluded?: boolean;
}

export interface GetJobRunResponse {
  readonly JobRun?: JobRun;
}

export interface GetJobRunsRequest {
  readonly JobName: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface GetJobRunsResponse {
  readonly JobRuns?: [];
  readonly NextToken?: string;
}

export interface GetJobsRequest {
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface GetJobsResponse {
  readonly Jobs?: [];
  readonly NextToken?: string;
}

export interface GetMLTaskRunRequest {
  readonly TransformId: string;
  readonly TaskRunId: string;
}

export interface GetMLTaskRunResponse {
  readonly TransformId?: string;
  readonly TaskRunId?: string;
  readonly Status?: string;
  readonly LogGroupName?: string;
  readonly Properties?: TaskRunProperties;
  readonly ErrorString?: string;
  readonly StartedOn?: Date;
  readonly LastModifiedOn?: Date;
  readonly CompletedOn?: Date;
  readonly ExecutionTime?: number;
}

export interface GetMLTaskRunsRequest {
  readonly TransformId: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly Filter?: TaskRunFilterCriteria;
  readonly Sort?: TaskRunSortCriteria;
}

export interface GetMLTaskRunsResponse {
  readonly TaskRuns?: [];
  readonly NextToken?: string;
}

export interface GetMLTransformRequest {
  readonly TransformId: string;
}

export interface GetMLTransformResponse {
  readonly TransformId?: string;
  readonly Name?: string;
  readonly Description?: string;
  readonly Status?: string;
  readonly CreatedOn?: Date;
  readonly LastModifiedOn?: Date;
  readonly InputRecordTables?: [];
  readonly Parameters?: TransformParameters;
  readonly EvaluationMetrics?: EvaluationMetrics;
  readonly LabelCount?: number;
  readonly Schema?: [];
  readonly Role?: string;
  readonly GlueVersion?: string;
  readonly MaxCapacity?: unknown;
  readonly WorkerType?: string;
  readonly NumberOfWorkers?: number;
  readonly Timeout?: number;
  readonly MaxRetries?: number;
  readonly TransformEncryption?: TransformEncryption;
}

export interface GetMLTransformsRequest {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly Filter?: TransformFilterCriteria;
  readonly Sort?: TransformSortCriteria;
}

export interface GetMLTransformsResponse {
  readonly Transforms: [];
  readonly NextToken?: string;
}

export interface GetMappingRequest {
  readonly Source: CatalogEntry;
  readonly Sinks?: [];
  readonly Location?: Location;
}

export interface GetMappingResponse {
  readonly Mapping: [];
}

export interface GetPartitionIndexesRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly NextToken?: string;
}

export interface GetPartitionIndexesResponse {
  readonly PartitionIndexDescriptorList?: [];
  readonly NextToken?: string;
}

export interface GetPartitionRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionValues: [];
}

export interface GetPartitionResponse {
  readonly Partition?: Partition;
}

export interface GetPartitionsRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly Expression?: string;
  readonly NextToken?: string;
  readonly Segment?: Segment;
  readonly MaxResults?: number;
  readonly ExcludeColumnSchema?: boolean;
  readonly TransactionId?: string;
  readonly QueryAsOfTime?: Date;
}

export interface GetPartitionsResponse {
  readonly Partitions?: [];
  readonly NextToken?: string;
}

export interface GetPlanRequest {
  readonly Mapping: [];
  readonly Source: CatalogEntry;
  readonly Sinks?: [];
  readonly Location?: Location;
  readonly Language?: string;
  readonly AdditionalPlanOptionsMap?: {[key: string]: any};
}

export interface GetPlanResponse {
  readonly PythonScript?: string;
  readonly ScalaCode?: string;
}

export interface GetRegistryInput {
  readonly RegistryId: RegistryId;
}

export interface GetRegistryResponse {
  readonly RegistryName?: string;
  readonly RegistryArn?: string;
  readonly Description?: string;
  readonly Status?: string;
  readonly CreatedTime?: string;
  readonly UpdatedTime?: string;
}

export interface GetResourcePoliciesRequest {
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface GetResourcePoliciesResponse {
  readonly GetResourcePoliciesResponseList?: [];
  readonly NextToken?: string;
}

export interface GetResourcePolicyRequest {
  readonly ResourceArn?: string;
}

export interface GetResourcePolicyResponse {
  readonly PolicyInJson?: string;
  readonly PolicyHash?: string;
  readonly CreateTime?: Date;
  readonly UpdateTime?: Date;
}

export interface GetSchemaByDefinitionInput {
  readonly SchemaId: SchemaId;
  readonly SchemaDefinition: string;
}

export interface GetSchemaByDefinitionResponse {
  readonly SchemaVersionId?: string;
  readonly SchemaArn?: string;
  readonly DataFormat?: string;
  readonly Status?: string;
  readonly CreatedTime?: string;
}

export interface GetSchemaInput {
  readonly SchemaId: SchemaId;
}

export interface GetSchemaResponse {
  readonly RegistryName?: string;
  readonly RegistryArn?: string;
  readonly SchemaName?: string;
  readonly SchemaArn?: string;
  readonly Description?: string;
  readonly DataFormat?: string;
  readonly Compatibility?: string;
  readonly SchemaCheckpoint?: number;
  readonly LatestSchemaVersion?: number;
  readonly NextSchemaVersion?: number;
  readonly SchemaStatus?: string;
  readonly CreatedTime?: string;
  readonly UpdatedTime?: string;
}

export interface GetSchemaVersionInput {
  readonly SchemaId?: SchemaId;
  readonly SchemaVersionId?: string;
  readonly SchemaVersionNumber?: SchemaVersionNumber;
}

export interface GetSchemaVersionResponse {
  readonly SchemaVersionId?: string;
  readonly SchemaDefinition?: string;
  readonly DataFormat?: string;
  readonly SchemaArn?: string;
  readonly VersionNumber?: number;
  readonly Status?: string;
  readonly CreatedTime?: string;
}

export interface GetSchemaVersionsDiffInput {
  readonly SchemaId: SchemaId;
  readonly FirstSchemaVersionNumber: SchemaVersionNumber;
  readonly SecondSchemaVersionNumber: SchemaVersionNumber;
  readonly SchemaDiffType: string;
}

export interface GetSchemaVersionsDiffResponse {
  readonly Diff?: string;
}

export interface GetSecurityConfigurationRequest {
  readonly Name: string;
}

export interface GetSecurityConfigurationResponse {
  readonly SecurityConfiguration?: SecurityConfiguration;
}

export interface GetSecurityConfigurationsRequest {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface GetSecurityConfigurationsResponse {
  readonly SecurityConfigurations?: [];
  readonly NextToken?: string;
}

export interface GetTableRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly Name: string;
  readonly TransactionId?: string;
  readonly QueryAsOfTime?: Date;
}

export interface GetTableResponse {
  readonly Table?: Table;
}

export interface GetTableVersionRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly VersionId?: string;
}

export interface GetTableVersionResponse {
  readonly TableVersion?: TableVersion;
}

export interface GetTableVersionsRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface GetTableVersionsResponse {
  readonly TableVersions?: [];
  readonly NextToken?: string;
}

export interface GetTablesRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly Expression?: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly TransactionId?: string;
  readonly QueryAsOfTime?: Date;
}

export interface GetTablesResponse {
  readonly TableList?: [];
  readonly NextToken?: string;
}

export interface GetTagsRequest {
  readonly ResourceArn: string;
}

export interface GetTagsResponse {
  readonly Tags?: {[key: string]: any};
}

export interface GetTriggerRequest {
  readonly Name: string;
}

export interface GetTriggerResponse {
  readonly Trigger?: Trigger;
}

export interface GetTriggersRequest {
  readonly NextToken?: string;
  readonly DependentJobName?: string;
  readonly MaxResults?: number;
}

export interface GetTriggersResponse {
  readonly Triggers?: [];
  readonly NextToken?: string;
}

export interface GetUserDefinedFunctionRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly FunctionName: string;
}

export interface GetUserDefinedFunctionResponse {
  readonly UserDefinedFunction?: UserDefinedFunction;
}

export interface GetUserDefinedFunctionsRequest {
  readonly CatalogId?: string;
  readonly DatabaseName?: string;
  readonly Pattern: string;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface GetUserDefinedFunctionsResponse {
  readonly UserDefinedFunctions?: [];
  readonly NextToken?: string;
}

export interface GetWorkflowRequest {
  readonly Name: string;
  readonly IncludeGraph?: boolean;
}

export interface GetWorkflowResponse {
  readonly Workflow?: Workflow;
}

export interface GetWorkflowRunPropertiesRequest {
  readonly Name: string;
  readonly RunId: string;
}

export interface GetWorkflowRunPropertiesResponse {
  readonly RunProperties?: {[key: string]: any};
}

export interface GetWorkflowRunRequest {
  readonly Name: string;
  readonly RunId: string;
  readonly IncludeGraph?: boolean;
}

export interface GetWorkflowRunResponse {
  readonly Run?: WorkflowRun;
}

export interface GetWorkflowRunsRequest {
  readonly Name: string;
  readonly IncludeGraph?: boolean;
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface GetWorkflowRunsResponse {
  readonly Runs?: [];
  readonly NextToken?: string;
}

export interface GlueEncryptionException {
  readonly Message?: string;
}

export interface GluePolicy {
  readonly PolicyInJson?: string;
  readonly PolicyHash?: string;
  readonly CreateTime?: Date;
  readonly UpdateTime?: Date;
}

export interface GlueTable {
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly CatalogId?: string;
  readonly ConnectionName?: string;
}

export interface GrokClassifier {
  readonly Name: string;
  readonly Classification: string;
  readonly CreationTime?: Date;
  readonly LastUpdated?: Date;
  readonly Version?: number;
  readonly GrokPattern: string;
  readonly CustomPatterns?: string;
}

export interface IdempotentParameterMismatchException {
  readonly Message?: string;
}

export interface IllegalBlueprintStateException {
  readonly Message?: string;
}

export interface IllegalWorkflowStateException {
  readonly Message?: string;
}

export interface ImportCatalogToGlueRequest {
  readonly CatalogId?: string;
}

export interface ImportCatalogToGlueResponse {
}

export interface ImportLabelsTaskRunProperties {
  readonly InputS3Path?: string;
  readonly Replace?: boolean;
}

export interface InternalServiceException {
  readonly Message?: string;
}

export interface InvalidInputException {
  readonly Message?: string;
}

export interface InvalidStateException {
  readonly Message?: string;
}

export interface JdbcTarget {
  readonly ConnectionName?: string;
  readonly Path?: string;
  readonly Exclusions?: [];
}

export interface Job {
  readonly Name?: string;
  readonly Description?: string;
  readonly LogUri?: string;
  readonly Role?: string;
  readonly CreatedOn?: Date;
  readonly LastModifiedOn?: Date;
  readonly ExecutionProperty?: ExecutionProperty;
  readonly Command?: JobCommand;
  readonly DefaultArguments?: {[key: string]: any};
  readonly NonOverridableArguments?: {[key: string]: any};
  readonly Connections?: ConnectionsList;
  readonly MaxRetries?: number;
  readonly AllocatedCapacity?: number;
  readonly Timeout?: number;
  readonly MaxCapacity?: unknown;
  readonly WorkerType?: string;
  readonly NumberOfWorkers?: number;
  readonly SecurityConfiguration?: string;
  readonly NotificationProperty?: NotificationProperty;
  readonly GlueVersion?: string;
}

export interface JobBookmarkEntry {
  readonly JobName?: string;
  readonly Version?: number;
  readonly Run?: number;
  readonly Attempt?: number;
  readonly PreviousRunId?: string;
  readonly RunId?: string;
  readonly JobBookmark?: string;
}

export interface JobBookmarksEncryption {
  readonly JobBookmarksEncryptionMode?: string;
  readonly KmsKeyArn?: string;
}

export interface JobCommand {
  readonly Name?: string;
  readonly ScriptLocation?: string;
  readonly PythonVersion?: string;
}

export interface JobNodeDetails {
  readonly JobRuns?: [];
}

export interface JobRun {
  readonly Id?: string;
  readonly Attempt?: number;
  readonly PreviousRunId?: string;
  readonly TriggerName?: string;
  readonly JobName?: string;
  readonly StartedOn?: Date;
  readonly LastModifiedOn?: Date;
  readonly CompletedOn?: Date;
  readonly JobRunState?: string;
  readonly Arguments?: {[key: string]: any};
  readonly ErrorMessage?: string;
  readonly PredecessorRuns?: [];
  readonly AllocatedCapacity?: number;
  readonly ExecutionTime?: number;
  readonly Timeout?: number;
  readonly MaxCapacity?: unknown;
  readonly WorkerType?: string;
  readonly NumberOfWorkers?: number;
  readonly SecurityConfiguration?: string;
  readonly LogGroupName?: string;
  readonly NotificationProperty?: NotificationProperty;
  readonly GlueVersion?: string;
}

export interface JobUpdate {
  readonly Description?: string;
  readonly LogUri?: string;
  readonly Role?: string;
  readonly ExecutionProperty?: ExecutionProperty;
  readonly Command?: JobCommand;
  readonly DefaultArguments?: {[key: string]: any};
  readonly NonOverridableArguments?: {[key: string]: any};
  readonly Connections?: ConnectionsList;
  readonly MaxRetries?: number;
  readonly AllocatedCapacity?: number;
  readonly Timeout?: number;
  readonly MaxCapacity?: unknown;
  readonly WorkerType?: string;
  readonly NumberOfWorkers?: number;
  readonly SecurityConfiguration?: string;
  readonly NotificationProperty?: NotificationProperty;
  readonly GlueVersion?: string;
}

export interface JsonClassifier {
  readonly Name: string;
  readonly CreationTime?: Date;
  readonly LastUpdated?: Date;
  readonly Version?: number;
  readonly JsonPath: string;
}

export interface KeySchemaElement {
  readonly Name: string;
  readonly Type: string;
}

export interface LabelingSetGenerationTaskRunProperties {
  readonly OutputS3Path?: string;
}

export interface LastActiveDefinition {
  readonly Description?: string;
  readonly LastModifiedOn?: Date;
  readonly ParameterSpec?: string;
  readonly BlueprintLocation?: string;
  readonly BlueprintServiceLocation?: string;
}

export interface LastCrawlInfo {
  readonly Status?: string;
  readonly ErrorMessage?: string;
  readonly LogGroup?: string;
  readonly LogStream?: string;
  readonly MessagePrefix?: string;
  readonly StartTime?: Date;
}

export interface LineageConfiguration {
  readonly CrawlerLineageSettings?: string;
}

export interface ListBlueprintsRequest {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly Tags?: {[key: string]: any};
}

export interface ListBlueprintsResponse {
  readonly Blueprints?: [];
  readonly NextToken?: string;
}

export interface ListCrawlersRequest {
  readonly MaxResults?: number;
  readonly NextToken?: string;
  readonly Tags?: {[key: string]: any};
}

export interface ListCrawlersResponse {
  readonly CrawlerNames?: [];
  readonly NextToken?: string;
}

export interface ListDevEndpointsRequest {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly Tags?: {[key: string]: any};
}

export interface ListDevEndpointsResponse {
  readonly DevEndpointNames?: [];
  readonly NextToken?: string;
}

export interface ListJobsRequest {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly Tags?: {[key: string]: any};
}

export interface ListJobsResponse {
  readonly JobNames?: [];
  readonly NextToken?: string;
}

export interface ListMLTransformsRequest {
  readonly NextToken?: string;
  readonly MaxResults?: number;
  readonly Filter?: TransformFilterCriteria;
  readonly Sort?: TransformSortCriteria;
  readonly Tags?: {[key: string]: any};
}

export interface ListMLTransformsResponse {
  readonly TransformIds: [];
  readonly NextToken?: string;
}

export interface ListRegistriesInput {
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListRegistriesResponse {
  readonly Registries?: [];
  readonly NextToken?: string;
}

export interface ListSchemaVersionsInput {
  readonly SchemaId: SchemaId;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListSchemaVersionsResponse {
  readonly Schemas?: [];
  readonly NextToken?: string;
}

export interface ListSchemasInput {
  readonly RegistryId?: RegistryId;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface ListSchemasResponse {
  readonly Schemas?: [];
  readonly NextToken?: string;
}

export interface ListTriggersRequest {
  readonly NextToken?: string;
  readonly DependentJobName?: string;
  readonly MaxResults?: number;
  readonly Tags?: {[key: string]: any};
}

export interface ListTriggersResponse {
  readonly TriggerNames?: [];
  readonly NextToken?: string;
}

export interface ListWorkflowsRequest {
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListWorkflowsResponse {
  readonly Workflows?: [];
  readonly NextToken?: string;
}

export interface Location {
  readonly Jdbc?: [];
  readonly S3?: [];
  readonly DynamoDB?: [];
}

export interface LongColumnStatisticsData {
  readonly MinimumValue?: number;
  readonly MaximumValue?: number;
  readonly NumberOfNulls: number;
  readonly NumberOfDistinctValues: number;
}

export interface MLTransform {
  readonly TransformId?: string;
  readonly Name?: string;
  readonly Description?: string;
  readonly Status?: string;
  readonly CreatedOn?: Date;
  readonly LastModifiedOn?: Date;
  readonly InputRecordTables?: [];
  readonly Parameters?: TransformParameters;
  readonly EvaluationMetrics?: EvaluationMetrics;
  readonly LabelCount?: number;
  readonly Schema?: [];
  readonly Role?: string;
  readonly GlueVersion?: string;
  readonly MaxCapacity?: unknown;
  readonly WorkerType?: string;
  readonly NumberOfWorkers?: number;
  readonly Timeout?: number;
  readonly MaxRetries?: number;
  readonly TransformEncryption?: TransformEncryption;
}

export interface MLTransformNotReadyException {
  readonly Message?: string;
}

export interface MLUserDataEncryption {
  readonly MlUserDataEncryptionMode: string;
  readonly KmsKeyId?: string;
}

export interface MappingEntry {
  readonly SourceTable?: string;
  readonly SourcePath?: string;
  readonly SourceType?: string;
  readonly TargetTable?: string;
  readonly TargetPath?: string;
  readonly TargetType?: string;
}

export interface MetadataInfo {
  readonly MetadataValue?: string;
  readonly CreatedTime?: string;
  readonly OtherMetadataValueList?: [];
}

export interface MetadataKeyValuePair {
  readonly MetadataKey?: string;
  readonly MetadataValue?: string;
}

export interface MongoDBTarget {
  readonly ConnectionName?: string;
  readonly Path?: string;
  readonly ScanAll?: boolean;
}

export interface NoScheduleException {
  readonly Message?: string;
}

export interface Node {
  readonly Type?: string;
  readonly Name?: string;
  readonly UniqueId?: string;
  readonly TriggerDetails?: TriggerNodeDetails;
  readonly JobDetails?: JobNodeDetails;
  readonly CrawlerDetails?: CrawlerNodeDetails;
}

export interface NotificationProperty {
  readonly NotifyDelayAfter?: number;
}

export interface OperationTimeoutException {
  readonly Message?: string;
}

export interface Order {
  readonly Column: string;
  readonly SortOrder: number;
}

export interface OtherMetadataValueListItem {
  readonly MetadataValue?: string;
  readonly CreatedTime?: string;
}

export interface Partition {
  readonly Values?: [];
  readonly DatabaseName?: string;
  readonly TableName?: string;
  readonly CreationTime?: Date;
  readonly LastAccessTime?: Date;
  readonly StorageDescriptor?: StorageDescriptor;
  readonly Parameters?: {[key: string]: any};
  readonly LastAnalyzedTime?: Date;
  readonly CatalogId?: string;
}

export interface PartitionError {
  readonly PartitionValues?: [];
  readonly ErrorDetail?: ErrorDetail;
}

export interface PartitionIndex {
  readonly Keys: [];
  readonly IndexName: string;
}

export interface PartitionIndexDescriptor {
  readonly IndexName: string;
  readonly Keys: [];
  readonly IndexStatus: string;
  readonly BackfillErrors?: [];
}

export interface PartitionInput {
  readonly Values?: [];
  readonly LastAccessTime?: Date;
  readonly StorageDescriptor?: StorageDescriptor;
  readonly Parameters?: {[key: string]: any};
  readonly LastAnalyzedTime?: Date;
}

export interface PartitionValueList {
  readonly Values: [];
}

export interface PhysicalConnectionRequirements {
  readonly SubnetId?: string;
  readonly SecurityGroupIdList?: [];
  readonly AvailabilityZone?: string;
}

export interface Predecessor {
  readonly JobName?: string;
  readonly RunId?: string;
}

export interface Predicate {
  readonly Logical?: string;
  readonly Conditions?: [];
}

export interface PrincipalPermissions {
  readonly Principal?: DataLakePrincipal;
  readonly Permissions?: [];
}

export interface PropertyPredicate {
  readonly Key?: string;
  readonly Value?: string;
  readonly Comparator?: string;
}

export interface PutDataCatalogEncryptionSettingsRequest {
  readonly CatalogId?: string;
  readonly DataCatalogEncryptionSettings: DataCatalogEncryptionSettings;
}

export interface PutDataCatalogEncryptionSettingsResponse {
}

export interface PutResourcePolicyRequest {
  readonly PolicyInJson: string;
  readonly ResourceArn?: string;
  readonly PolicyHashCondition?: string;
  readonly PolicyExistsCondition?: string;
  readonly EnableHybrid?: string;
}

export interface PutResourcePolicyResponse {
  readonly PolicyHash?: string;
}

export interface PutSchemaVersionMetadataInput {
  readonly SchemaId?: SchemaId;
  readonly SchemaVersionNumber?: SchemaVersionNumber;
  readonly SchemaVersionId?: string;
  readonly MetadataKeyValue: MetadataKeyValuePair;
}

export interface PutSchemaVersionMetadataResponse {
  readonly SchemaArn?: string;
  readonly SchemaName?: string;
  readonly RegistryName?: string;
  readonly LatestVersion?: boolean;
  readonly VersionNumber?: number;
  readonly SchemaVersionId?: string;
  readonly MetadataKey?: string;
  readonly MetadataValue?: string;
}

export interface PutWorkflowRunPropertiesRequest {
  readonly Name: string;
  readonly RunId: string;
  readonly RunProperties: {[key: string]: any};
}

export interface PutWorkflowRunPropertiesResponse {
}

export interface QuerySchemaVersionMetadataInput {
  readonly SchemaId?: SchemaId;
  readonly SchemaVersionNumber?: SchemaVersionNumber;
  readonly SchemaVersionId?: string;
  readonly MetadataList?: [];
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface QuerySchemaVersionMetadataResponse {
  readonly MetadataInfoMap?: {[key: string]: any};
  readonly SchemaVersionId?: string;
  readonly NextToken?: string;
}

export interface RecrawlPolicy {
  readonly RecrawlBehavior?: string;
}

export interface RegisterSchemaVersionInput {
  readonly SchemaId: SchemaId;
  readonly SchemaDefinition: string;
}

export interface RegisterSchemaVersionResponse {
  readonly SchemaVersionId?: string;
  readonly VersionNumber?: number;
  readonly Status?: string;
}

export interface RegistryId {
  readonly RegistryName?: string;
  readonly RegistryArn?: string;
}

export interface RegistryListItem {
  readonly RegistryName?: string;
  readonly RegistryArn?: string;
  readonly Description?: string;
  readonly Status?: string;
  readonly CreatedTime?: string;
  readonly UpdatedTime?: string;
}

export interface RemoveSchemaVersionMetadataInput {
  readonly SchemaId?: SchemaId;
  readonly SchemaVersionNumber?: SchemaVersionNumber;
  readonly SchemaVersionId?: string;
  readonly MetadataKeyValue: MetadataKeyValuePair;
}

export interface RemoveSchemaVersionMetadataResponse {
  readonly SchemaArn?: string;
  readonly SchemaName?: string;
  readonly RegistryName?: string;
  readonly LatestVersion?: boolean;
  readonly VersionNumber?: number;
  readonly SchemaVersionId?: string;
  readonly MetadataKey?: string;
  readonly MetadataValue?: string;
}

export interface ResetJobBookmarkRequest {
  readonly JobName: string;
  readonly RunId?: string;
}

export interface ResetJobBookmarkResponse {
  readonly JobBookmarkEntry?: JobBookmarkEntry;
}

export interface ResourceNotReadyException {
  readonly Message?: string;
}

export interface ResourceNumberLimitExceededException {
  readonly Message?: string;
}

export interface ResourceUri {
  readonly ResourceType?: string;
  readonly Uri?: string;
}

export interface ResumeWorkflowRunRequest {
  readonly Name: string;
  readonly RunId: string;
  readonly NodeIds: [];
}

export interface ResumeWorkflowRunResponse {
  readonly RunId?: string;
  readonly NodeIds?: [];
}

export interface S3Encryption {
  readonly S3EncryptionMode?: string;
  readonly KmsKeyArn?: string;
}

export interface S3Target {
  readonly Path?: string;
  readonly Exclusions?: [];
  readonly ConnectionName?: string;
  readonly SampleSize?: number;
  readonly EventQueueArn?: string;
  readonly DlqEventQueueArn?: string;
}

export interface Schedule {
  readonly ScheduleExpression?: string;
  readonly State?: string;
}

export interface SchedulerNotRunningException {
  readonly Message?: string;
}

export interface SchedulerRunningException {
  readonly Message?: string;
}

export interface SchedulerTransitioningException {
  readonly Message?: string;
}

export interface SchemaChangePolicy {
  readonly UpdateBehavior?: string;
  readonly DeleteBehavior?: string;
}

export interface SchemaColumn {
  readonly Name?: string;
  readonly DataType?: string;
}

export interface SchemaId {
  readonly SchemaArn?: string;
  readonly SchemaName?: string;
  readonly RegistryName?: string;
}

export interface SchemaListItem {
  readonly RegistryName?: string;
  readonly SchemaName?: string;
  readonly SchemaArn?: string;
  readonly Description?: string;
  readonly SchemaStatus?: string;
  readonly CreatedTime?: string;
  readonly UpdatedTime?: string;
}

export interface SchemaReference {
  readonly SchemaId?: SchemaId;
  readonly SchemaVersionId?: string;
  readonly SchemaVersionNumber?: number;
}

export interface SchemaVersionErrorItem {
  readonly VersionNumber?: number;
  readonly ErrorDetails?: ErrorDetails;
}

export interface SchemaVersionListItem {
  readonly SchemaArn?: string;
  readonly SchemaVersionId?: string;
  readonly VersionNumber?: number;
  readonly Status?: string;
  readonly CreatedTime?: string;
}

export interface SchemaVersionNumber {
  readonly LatestVersion?: boolean;
  readonly VersionNumber?: number;
}

export interface SearchTablesRequest {
  readonly CatalogId?: string;
  readonly NextToken?: string;
  readonly Filters?: [];
  readonly SearchText?: string;
  readonly SortCriteria?: [];
  readonly MaxResults?: number;
  readonly ResourceShareType?: string;
}

export interface SearchTablesResponse {
  readonly NextToken?: string;
  readonly TableList?: [];
}

export interface SecurityConfiguration {
  readonly Name?: string;
  readonly CreatedTimeStamp?: Date;
  readonly EncryptionConfiguration?: EncryptionConfiguration;
}

export interface Segment {
  readonly SegmentNumber: number;
  readonly TotalSegments: number;
}

export interface SerDeInfo {
  readonly Name?: string;
  readonly SerializationLibrary?: string;
  readonly Parameters?: {[key: string]: any};
}

export interface SkewedInfo {
  readonly SkewedColumnNames?: [];
  readonly SkewedColumnValues?: [];
  readonly SkewedColumnValueLocationMaps?: {[key: string]: any};
}

export interface SortCriterion {
  readonly FieldName?: string;
  readonly Sort?: string;
}

export interface StartBlueprintRunRequest {
  readonly BlueprintName: string;
  readonly Parameters?: string;
  readonly RoleArn: string;
}

export interface StartBlueprintRunResponse {
  readonly RunId?: string;
}

export interface StartCrawlerRequest {
  readonly Name: string;
}

export interface StartCrawlerResponse {
}

export interface StartCrawlerScheduleRequest {
  readonly CrawlerName: string;
}

export interface StartCrawlerScheduleResponse {
}

export interface StartExportLabelsTaskRunRequest {
  readonly TransformId: string;
  readonly OutputS3Path: string;
}

export interface StartExportLabelsTaskRunResponse {
  readonly TaskRunId?: string;
}

export interface StartImportLabelsTaskRunRequest {
  readonly TransformId: string;
  readonly InputS3Path: string;
  readonly ReplaceAllLabels?: boolean;
}

export interface StartImportLabelsTaskRunResponse {
  readonly TaskRunId?: string;
}

export interface StartJobRunRequest {
  readonly JobName: string;
  readonly JobRunId?: string;
  readonly Arguments?: {[key: string]: any};
  readonly AllocatedCapacity?: number;
  readonly Timeout?: number;
  readonly MaxCapacity?: unknown;
  readonly SecurityConfiguration?: string;
  readonly NotificationProperty?: NotificationProperty;
  readonly WorkerType?: string;
  readonly NumberOfWorkers?: number;
}

export interface StartJobRunResponse {
  readonly JobRunId?: string;
}

export interface StartMLEvaluationTaskRunRequest {
  readonly TransformId: string;
}

export interface StartMLEvaluationTaskRunResponse {
  readonly TaskRunId?: string;
}

export interface StartMLLabelingSetGenerationTaskRunRequest {
  readonly TransformId: string;
  readonly OutputS3Path: string;
}

export interface StartMLLabelingSetGenerationTaskRunResponse {
  readonly TaskRunId?: string;
}

export interface StartTriggerRequest {
  readonly Name: string;
}

export interface StartTriggerResponse {
  readonly Name?: string;
}

export interface StartWorkflowRunRequest {
  readonly Name: string;
}

export interface StartWorkflowRunResponse {
  readonly RunId?: string;
}

export interface StartingEventBatchCondition {
  readonly BatchSize?: number;
  readonly BatchWindow?: number;
}

export interface StopCrawlerRequest {
  readonly Name: string;
}

export interface StopCrawlerResponse {
}

export interface StopCrawlerScheduleRequest {
  readonly CrawlerName: string;
}

export interface StopCrawlerScheduleResponse {
}

export interface StopTriggerRequest {
  readonly Name: string;
}

export interface StopTriggerResponse {
  readonly Name?: string;
}

export interface StopWorkflowRunRequest {
  readonly Name: string;
  readonly RunId: string;
}

export interface StopWorkflowRunResponse {
}

export interface StorageDescriptor {
  readonly Columns?: [];
  readonly Location?: string;
  readonly InputFormat?: string;
  readonly OutputFormat?: string;
  readonly Compressed?: boolean;
  readonly NumberOfBuckets?: number;
  readonly SerdeInfo?: SerDeInfo;
  readonly BucketColumns?: [];
  readonly SortColumns?: [];
  readonly Parameters?: {[key: string]: any};
  readonly SkewedInfo?: SkewedInfo;
  readonly StoredAsSubDirectories?: boolean;
  readonly SchemaReference?: SchemaReference;
}

export interface StringColumnStatisticsData {
  readonly MaximumLength: number;
  readonly AverageLength: unknown;
  readonly NumberOfNulls: number;
  readonly NumberOfDistinctValues: number;
}

export interface Table {
  readonly Name: string;
  readonly DatabaseName?: string;
  readonly Description?: string;
  readonly Owner?: string;
  readonly CreateTime?: Date;
  readonly UpdateTime?: Date;
  readonly LastAccessTime?: Date;
  readonly LastAnalyzedTime?: Date;
  readonly Retention?: number;
  readonly StorageDescriptor?: StorageDescriptor;
  readonly PartitionKeys?: [];
  readonly ViewOriginalText?: string;
  readonly ViewExpandedText?: string;
  readonly TableType?: string;
  readonly Parameters?: {[key: string]: any};
  readonly CreatedBy?: string;
  readonly IsRegisteredWithLakeFormation?: boolean;
  readonly TargetTable?: TableIdentifier;
  readonly CatalogId?: string;
}

export interface TableError {
  readonly TableName?: string;
  readonly ErrorDetail?: ErrorDetail;
}

export interface TableIdentifier {
  readonly CatalogId?: string;
  readonly DatabaseName?: string;
  readonly Name?: string;
}

export interface TableInput {
  readonly Name: string;
  readonly Description?: string;
  readonly Owner?: string;
  readonly LastAccessTime?: Date;
  readonly LastAnalyzedTime?: Date;
  readonly Retention?: number;
  readonly StorageDescriptor?: StorageDescriptor;
  readonly PartitionKeys?: [];
  readonly ViewOriginalText?: string;
  readonly ViewExpandedText?: string;
  readonly TableType?: string;
  readonly Parameters?: {[key: string]: any};
  readonly TargetTable?: TableIdentifier;
}

export interface TableVersion {
  readonly Table?: Table;
  readonly VersionId?: string;
}

export interface TableVersionError {
  readonly TableName?: string;
  readonly VersionId?: string;
  readonly ErrorDetail?: ErrorDetail;
}

export interface TagResourceRequest {
  readonly ResourceArn: string;
  readonly TagsToAdd: {[key: string]: any};
}

export interface TagResourceResponse {
}

export interface TaskRun {
  readonly TransformId?: string;
  readonly TaskRunId?: string;
  readonly Status?: string;
  readonly LogGroupName?: string;
  readonly Properties?: TaskRunProperties;
  readonly ErrorString?: string;
  readonly StartedOn?: Date;
  readonly LastModifiedOn?: Date;
  readonly CompletedOn?: Date;
  readonly ExecutionTime?: number;
}

export interface TaskRunFilterCriteria {
  readonly TaskRunType?: string;
  readonly Status?: string;
  readonly StartedBefore?: Date;
  readonly StartedAfter?: Date;
}

export interface TaskRunProperties {
  readonly TaskType?: string;
  readonly ImportLabelsTaskRunProperties?: ImportLabelsTaskRunProperties;
  readonly ExportLabelsTaskRunProperties?: ExportLabelsTaskRunProperties;
  readonly LabelingSetGenerationTaskRunProperties?: LabelingSetGenerationTaskRunProperties;
  readonly FindMatchesTaskRunProperties?: FindMatchesTaskRunProperties;
}

export interface TaskRunSortCriteria {
  readonly Column: string;
  readonly SortDirection: string;
}

export interface TransformEncryption {
  readonly MlUserDataEncryption?: MLUserDataEncryption;
  readonly TaskRunSecurityConfigurationName?: string;
}

export interface TransformFilterCriteria {
  readonly Name?: string;
  readonly TransformType?: string;
  readonly Status?: string;
  readonly GlueVersion?: string;
  readonly CreatedBefore?: Date;
  readonly CreatedAfter?: Date;
  readonly LastModifiedBefore?: Date;
  readonly LastModifiedAfter?: Date;
  readonly Schema?: [];
}

export interface TransformParameters {
  readonly TransformType: string;
  readonly FindMatchesParameters?: FindMatchesParameters;
}

export interface TransformSortCriteria {
  readonly Column: string;
  readonly SortDirection: string;
}

export interface Trigger {
  readonly Name?: string;
  readonly WorkflowName?: string;
  readonly Id?: string;
  readonly Type?: string;
  readonly State?: string;
  readonly Description?: string;
  readonly Schedule?: string;
  readonly Actions?: [];
  readonly Predicate?: Predicate;
  readonly EventBatchingCondition?: EventBatchingCondition;
}

export interface TriggerNodeDetails {
  readonly Trigger?: Trigger;
}

export interface TriggerUpdate {
  readonly Name?: string;
  readonly Description?: string;
  readonly Schedule?: string;
  readonly Actions?: [];
  readonly Predicate?: Predicate;
  readonly EventBatchingCondition?: EventBatchingCondition;
}

export interface UntagResourceRequest {
  readonly ResourceArn: string;
  readonly TagsToRemove: [];
}

export interface UntagResourceResponse {
}

export interface UpdateBlueprintRequest {
  readonly Name: string;
  readonly Description?: string;
  readonly BlueprintLocation: string;
}

export interface UpdateBlueprintResponse {
  readonly Name?: string;
}

export interface UpdateClassifierRequest {
  readonly GrokClassifier?: UpdateGrokClassifierRequest;
  readonly XMLClassifier?: UpdateXMLClassifierRequest;
  readonly JsonClassifier?: UpdateJsonClassifierRequest;
  readonly CsvClassifier?: UpdateCsvClassifierRequest;
}

export interface UpdateClassifierResponse {
}

export interface UpdateColumnStatisticsForPartitionRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionValues: [];
  readonly ColumnStatisticsList: [];
}

export interface UpdateColumnStatisticsForPartitionResponse {
  readonly Errors?: [];
}

export interface UpdateColumnStatisticsForTableRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly ColumnStatisticsList: [];
}

export interface UpdateColumnStatisticsForTableResponse {
  readonly Errors?: [];
}

export interface UpdateConnectionRequest {
  readonly CatalogId?: string;
  readonly Name: string;
  readonly ConnectionInput: ConnectionInput;
}

export interface UpdateConnectionResponse {
}

export interface UpdateCrawlerRequest {
  readonly Name: string;
  readonly Role?: string;
  readonly DatabaseName?: string;
  readonly Description?: string;
  readonly Targets?: CrawlerTargets;
  readonly Schedule?: string;
  readonly Classifiers?: [];
  readonly TablePrefix?: string;
  readonly SchemaChangePolicy?: SchemaChangePolicy;
  readonly RecrawlPolicy?: RecrawlPolicy;
  readonly LineageConfiguration?: LineageConfiguration;
  readonly Configuration?: string;
  readonly CrawlerSecurityConfiguration?: string;
}

export interface UpdateCrawlerResponse {
}

export interface UpdateCrawlerScheduleRequest {
  readonly CrawlerName: string;
  readonly Schedule?: string;
}

export interface UpdateCrawlerScheduleResponse {
}

export interface UpdateCsvClassifierRequest {
  readonly Name: string;
  readonly Delimiter?: string;
  readonly QuoteSymbol?: string;
  readonly ContainsHeader?: string;
  readonly Header?: [];
  readonly DisableValueTrimming?: boolean;
  readonly AllowSingleColumn?: boolean;
}

export interface UpdateDatabaseRequest {
  readonly CatalogId?: string;
  readonly Name: string;
  readonly DatabaseInput: DatabaseInput;
}

export interface UpdateDatabaseResponse {
}

export interface UpdateDevEndpointRequest {
  readonly EndpointName: string;
  readonly PublicKey?: string;
  readonly AddPublicKeys?: [];
  readonly DeletePublicKeys?: [];
  readonly CustomLibraries?: DevEndpointCustomLibraries;
  readonly UpdateEtlLibraries?: boolean;
  readonly DeleteArguments?: [];
  readonly AddArguments?: {[key: string]: any};
}

export interface UpdateDevEndpointResponse {
}

export interface UpdateGrokClassifierRequest {
  readonly Name: string;
  readonly Classification?: string;
  readonly GrokPattern?: string;
  readonly CustomPatterns?: string;
}

export interface UpdateJobRequest {
  readonly JobName: string;
  readonly JobUpdate: JobUpdate;
}

export interface UpdateJobResponse {
  readonly JobName?: string;
}

export interface UpdateJsonClassifierRequest {
  readonly Name: string;
  readonly JsonPath?: string;
}

export interface UpdateMLTransformRequest {
  readonly TransformId: string;
  readonly Name?: string;
  readonly Description?: string;
  readonly Parameters?: TransformParameters;
  readonly Role?: string;
  readonly GlueVersion?: string;
  readonly MaxCapacity?: unknown;
  readonly WorkerType?: string;
  readonly NumberOfWorkers?: number;
  readonly Timeout?: number;
  readonly MaxRetries?: number;
}

export interface UpdateMLTransformResponse {
  readonly TransformId?: string;
}

export interface UpdatePartitionRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionValueList: [];
  readonly PartitionInput: PartitionInput;
}

export interface UpdatePartitionResponse {
}

export interface UpdateRegistryInput {
  readonly RegistryId: RegistryId;
  readonly Description: string;
}

export interface UpdateRegistryResponse {
  readonly RegistryName?: string;
  readonly RegistryArn?: string;
}

export interface UpdateSchemaInput {
  readonly SchemaId: SchemaId;
  readonly SchemaVersionNumber?: SchemaVersionNumber;
  readonly Compatibility?: string;
  readonly Description?: string;
}

export interface UpdateSchemaResponse {
  readonly SchemaArn?: string;
  readonly SchemaName?: string;
  readonly RegistryName?: string;
}

export interface UpdateTableRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly TableInput: TableInput;
  readonly SkipArchive?: boolean;
  readonly TransactionId?: string;
}

export interface UpdateTableResponse {
}

export interface UpdateTriggerRequest {
  readonly Name: string;
  readonly TriggerUpdate: TriggerUpdate;
}

export interface UpdateTriggerResponse {
  readonly Trigger?: Trigger;
}

export interface UpdateUserDefinedFunctionRequest {
  readonly CatalogId?: string;
  readonly DatabaseName: string;
  readonly FunctionName: string;
  readonly FunctionInput: UserDefinedFunctionInput;
}

export interface UpdateUserDefinedFunctionResponse {
}

export interface UpdateWorkflowRequest {
  readonly Name: string;
  readonly Description?: string;
  readonly DefaultRunProperties?: {[key: string]: any};
  readonly MaxConcurrentRuns?: number;
}

export interface UpdateWorkflowResponse {
  readonly Name?: string;
}

export interface UpdateXMLClassifierRequest {
  readonly Name: string;
  readonly Classification?: string;
  readonly RowTag?: string;
}

export interface UserDefinedFunction {
  readonly FunctionName?: string;
  readonly DatabaseName?: string;
  readonly ClassName?: string;
  readonly OwnerName?: string;
  readonly OwnerType?: string;
  readonly CreateTime?: Date;
  readonly ResourceUris?: [];
  readonly CatalogId?: string;
}

export interface UserDefinedFunctionInput {
  readonly FunctionName?: string;
  readonly ClassName?: string;
  readonly OwnerName?: string;
  readonly OwnerType?: string;
  readonly ResourceUris?: [];
}

export interface ValidationException {
  readonly Message?: string;
}

export interface VersionMismatchException {
  readonly Message?: string;
}

export interface Workflow {
  readonly Name?: string;
  readonly Description?: string;
  readonly DefaultRunProperties?: {[key: string]: any};
  readonly CreatedOn?: Date;
  readonly LastModifiedOn?: Date;
  readonly LastRun?: WorkflowRun;
  readonly Graph?: WorkflowGraph;
  readonly MaxConcurrentRuns?: number;
  readonly BlueprintDetails?: BlueprintDetails;
}

export interface WorkflowGraph {
  readonly Nodes?: [];
  readonly Edges?: [];
}

export interface WorkflowRun {
  readonly Name?: string;
  readonly WorkflowRunId?: string;
  readonly PreviousRunId?: string;
  readonly WorkflowRunProperties?: {[key: string]: any};
  readonly StartedOn?: Date;
  readonly CompletedOn?: Date;
  readonly Status?: string;
  readonly ErrorMessage?: string;
  readonly Statistics?: WorkflowRunStatistics;
  readonly Graph?: WorkflowGraph;
  readonly StartingEventBatchCondition?: StartingEventBatchCondition;
}

export interface WorkflowRunStatistics {
  readonly TotalActions?: number;
  readonly TimeoutActions?: number;
  readonly FailedActions?: number;
  readonly StoppedActions?: number;
  readonly SucceededActions?: number;
  readonly RunningActions?: number;
}

export interface XMLClassifier {
  readonly Name: string;
  readonly Classification: string;
  readonly CreationTime?: Date;
  readonly LastUpdated?: Date;
  readonly Version?: number;
  readonly RowTag?: string;
}


