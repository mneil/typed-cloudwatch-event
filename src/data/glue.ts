/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface BatchCreatePartition {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionInputList: [];
}
export interface BatchDeleteConnection {
  readonly CatalogId: string;
  readonly ConnectionNameList: [];
}
export interface BatchDeletePartition {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionsToDelete: [];
}
export interface BatchDeleteTable {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TablesToDelete: [];
  readonly TransactionId: string;
}
export interface BatchDeleteTableVersion {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly VersionIds: [];
}
export interface BatchGetBlueprints {
  readonly Names: [];
  readonly IncludeBlueprint: boolean;
  readonly IncludeParameterSpec: boolean;
}
export interface BatchGetCrawlers {
  readonly CrawlerNames: [];
}
export interface BatchGetDevEndpoints {
  readonly DevEndpointNames: [];
}
export interface BatchGetJobs {
  readonly JobNames: [];
}
export interface BatchGetPartition {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionsToGet: [];
}
export interface BatchGetTriggers {
  readonly TriggerNames: [];
}
export interface BatchGetWorkflows {
  readonly Names: [];
  readonly IncludeGraph: boolean;
}
export interface BatchStopJobRun {
  readonly JobName: string;
  readonly JobRunIds: [];
}
export interface BatchUpdatePartition {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly Entries: [];
}
export interface CancelMLTaskRun {
  readonly TransformId: string;
  readonly TaskRunId: string;
}
export interface CheckSchemaVersionValidity {
  readonly DataFormat: string;
  readonly SchemaDefinition: string;
}
export interface CreateBlueprint {
  readonly Name: string;
  readonly Description: string;
  readonly BlueprintLocation: string;
  readonly Tags: {[key: string]: any};
}
export interface CreateClassifier {
  readonly GrokClassifier: CreateGrokClassifierRequest;
  readonly XMLClassifier: CreateXMLClassifierRequest;
  readonly JsonClassifier: CreateJsonClassifierRequest;
  readonly CsvClassifier: CreateCsvClassifierRequest;
}
export interface CreateConnection {
  readonly CatalogId: string;
  readonly ConnectionInput: ConnectionInput;
  readonly Tags: {[key: string]: any};
}
export interface CreateCrawler {
  readonly Name: string;
  readonly Role: string;
  readonly DatabaseName: string;
  readonly Description: string;
  readonly Targets: CrawlerTargets;
  readonly Schedule: string;
  readonly Classifiers: [];
  readonly TablePrefix: string;
  readonly SchemaChangePolicy: SchemaChangePolicy;
  readonly RecrawlPolicy: RecrawlPolicy;
  readonly LineageConfiguration: LineageConfiguration;
  readonly Configuration: string;
  readonly CrawlerSecurityConfiguration: string;
  readonly Tags: {[key: string]: any};
}
export interface CreateDatabase {
  readonly CatalogId: string;
  readonly DatabaseInput: DatabaseInput;
}
export interface CreateDevEndpoint {
  readonly EndpointName: string;
  readonly RoleArn: string;
  readonly SecurityGroupIds: [];
  readonly SubnetId: string;
  readonly PublicKey: string;
  readonly PublicKeys: [];
  readonly NumberOfNodes: number;
  readonly WorkerType: string;
  readonly GlueVersion: string;
  readonly NumberOfWorkers: number;
  readonly ExtraPythonLibsS3Path: string;
  readonly ExtraJarsS3Path: string;
  readonly SecurityConfiguration: string;
  readonly Tags: {[key: string]: any};
  readonly Arguments: {[key: string]: any};
}
export interface CreateJob {
  readonly Name: string;
  readonly Description: string;
  readonly LogUri: string;
  readonly Role: string;
  readonly ExecutionProperty: ExecutionProperty;
  readonly Command: JobCommand;
  readonly DefaultArguments: {[key: string]: any};
  readonly NonOverridableArguments: {[key: string]: any};
  readonly Connections: ConnectionsList;
  readonly MaxRetries: number;
  readonly AllocatedCapacity: number;
  readonly Timeout: number;
  readonly MaxCapacity: unknown;
  readonly SecurityConfiguration: string;
  readonly Tags: {[key: string]: any};
  readonly NotificationProperty: NotificationProperty;
  readonly GlueVersion: string;
  readonly NumberOfWorkers: number;
  readonly WorkerType: string;
}
export interface CreateMLTransform {
  readonly Name: string;
  readonly Description: string;
  readonly InputRecordTables: [];
  readonly Parameters: TransformParameters;
  readonly Role: string;
  readonly GlueVersion: string;
  readonly MaxCapacity: unknown;
  readonly WorkerType: string;
  readonly NumberOfWorkers: number;
  readonly Timeout: number;
  readonly MaxRetries: number;
  readonly Tags: {[key: string]: any};
  readonly TransformEncryption: TransformEncryption;
}
export interface CreatePartition {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionInput: PartitionInput;
}
export interface CreatePartitionIndex {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionIndex: PartitionIndex;
}
export interface CreateRegistry {
  readonly RegistryName: string;
  readonly Description: string;
  readonly Tags: {[key: string]: any};
}
export interface CreateSchema {
  readonly RegistryId: RegistryId;
  readonly SchemaName: string;
  readonly DataFormat: string;
  readonly Compatibility: string;
  readonly Description: string;
  readonly Tags: {[key: string]: any};
  readonly SchemaDefinition: string;
}
export interface CreateScript {
  readonly DagNodes: [];
  readonly DagEdges: [];
  readonly Language: string;
}
export interface CreateSecurityConfiguration {
  readonly Name: string;
  readonly EncryptionConfiguration: EncryptionConfiguration;
}
export interface CreateTable {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableInput: TableInput;
  readonly PartitionIndexes: [];
  readonly TransactionId: string;
}
export interface CreateTrigger {
  readonly Name: string;
  readonly WorkflowName: string;
  readonly Type: string;
  readonly Schedule: string;
  readonly Predicate: Predicate;
  readonly Actions: [];
  readonly Description: string;
  readonly StartOnCreation: boolean;
  readonly Tags: {[key: string]: any};
  readonly EventBatchingCondition: EventBatchingCondition;
}
export interface CreateUserDefinedFunction {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly FunctionInput: UserDefinedFunctionInput;
}
export interface CreateWorkflow {
  readonly Name: string;
  readonly Description: string;
  readonly DefaultRunProperties: {[key: string]: any};
  readonly Tags: {[key: string]: any};
  readonly MaxConcurrentRuns: number;
}
export interface DeleteBlueprint {
  readonly Name: string;
}
export interface DeleteClassifier {
  readonly Name: string;
}
export interface DeleteColumnStatisticsForPartition {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionValues: [];
  readonly ColumnName: string;
}
export interface DeleteColumnStatisticsForTable {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly ColumnName: string;
}
export interface DeleteConnection {
  readonly CatalogId: string;
  readonly ConnectionName: string;
}
export interface DeleteCrawler {
  readonly Name: string;
}
export interface DeleteDatabase {
  readonly CatalogId: string;
  readonly Name: string;
}
export interface DeleteDevEndpoint {
  readonly EndpointName: string;
}
export interface DeleteJob {
  readonly JobName: string;
}
export interface DeleteMLTransform {
  readonly TransformId: string;
}
export interface DeletePartition {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionValues: [];
}
export interface DeletePartitionIndex {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly IndexName: string;
}
export interface DeleteRegistry {
  readonly RegistryId: RegistryId;
}
export interface DeleteResourcePolicy {
  readonly PolicyHashCondition: string;
  readonly ResourceArn: string;
}
export interface DeleteSchema {
  readonly SchemaId: SchemaId;
}
export interface DeleteSchemaVersions {
  readonly SchemaId: SchemaId;
  readonly Versions: string;
}
export interface DeleteSecurityConfiguration {
  readonly Name: string;
}
export interface DeleteTable {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly Name: string;
  readonly TransactionId: string;
}
export interface DeleteTableVersion {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly VersionId: string;
}
export interface DeleteTrigger {
  readonly Name: string;
}
export interface DeleteUserDefinedFunction {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly FunctionName: string;
}
export interface DeleteWorkflow {
  readonly Name: string;
}
export interface GetBlueprint {
  readonly Name: string;
  readonly IncludeBlueprint: boolean;
  readonly IncludeParameterSpec: boolean;
}
export interface GetBlueprintRun {
  readonly BlueprintName: string;
  readonly RunId: string;
}
export interface GetBlueprintRuns {
  readonly BlueprintName: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface GetCatalogImportStatus {
  readonly CatalogId: string;
}
export interface GetClassifier {
  readonly Name: string;
}
export interface GetClassifiers {
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface GetColumnStatisticsForPartition {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionValues: [];
  readonly ColumnNames: [];
}
export interface GetColumnStatisticsForTable {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly ColumnNames: [];
}
export interface GetConnection {
  readonly CatalogId: string;
  readonly Name: string;
  readonly HidePassword: boolean;
}
export interface GetConnections {
  readonly CatalogId: string;
  readonly Filter: GetConnectionsFilter;
  readonly HidePassword: boolean;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface GetCrawler {
  readonly Name: string;
}
export interface GetCrawlerMetrics {
  readonly CrawlerNameList: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface GetCrawlers {
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface GetDataCatalogEncryptionSettings {
  readonly CatalogId: string;
}
export interface GetDatabase {
  readonly CatalogId: string;
  readonly Name: string;
}
export interface GetDatabases {
  readonly CatalogId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly ResourceShareType: string;
}
export interface GetDataflowGraph {
  readonly PythonScript: string;
}
export interface GetDevEndpoint {
  readonly EndpointName: string;
}
export interface GetDevEndpoints {
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface GetJob {
  readonly JobName: string;
}
export interface GetJobBookmark {
  readonly JobName: string;
  readonly RunId: string;
}
export interface GetJobRun {
  readonly JobName: string;
  readonly RunId: string;
  readonly PredecessorsIncluded: boolean;
}
export interface GetJobRuns {
  readonly JobName: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface GetJobs {
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface GetMLTaskRun {
  readonly TransformId: string;
  readonly TaskRunId: string;
}
export interface GetMLTaskRuns {
  readonly TransformId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly Filter: TaskRunFilterCriteria;
  readonly Sort: TaskRunSortCriteria;
}
export interface GetMLTransform {
  readonly TransformId: string;
}
export interface GetMLTransforms {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly Filter: TransformFilterCriteria;
  readonly Sort: TransformSortCriteria;
}
export interface GetMapping {
  readonly Source: CatalogEntry;
  readonly Sinks: [];
  readonly Location: Location;
}
export interface GetPartition {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionValues: [];
}
export interface GetPartitionIndexes {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly NextToken: string;
}
export interface GetPartitions {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly Expression: string;
  readonly NextToken: string;
  readonly Segment: Segment;
  readonly MaxResults: number;
  readonly ExcludeColumnSchema: boolean;
  readonly TransactionId: string;
  readonly QueryAsOfTime: Date;
}
export interface GetPlan {
  readonly Mapping: [];
  readonly Source: CatalogEntry;
  readonly Sinks: [];
  readonly Location: Location;
  readonly Language: string;
  readonly AdditionalPlanOptionsMap: {[key: string]: any};
}
export interface GetRegistry {
  readonly RegistryId: RegistryId;
}
export interface GetResourcePolicies {
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface GetResourcePolicy {
  readonly ResourceArn: string;
}
export interface GetSchema {
  readonly SchemaId: SchemaId;
}
export interface GetSchemaByDefinition {
  readonly SchemaId: SchemaId;
  readonly SchemaDefinition: string;
}
export interface GetSchemaVersion {
  readonly SchemaId: SchemaId;
  readonly SchemaVersionId: string;
  readonly SchemaVersionNumber: SchemaVersionNumber;
}
export interface GetSchemaVersionsDiff {
  readonly SchemaId: SchemaId;
  readonly FirstSchemaVersionNumber: SchemaVersionNumber;
  readonly SecondSchemaVersionNumber: SchemaVersionNumber;
  readonly SchemaDiffType: string;
}
export interface GetSecurityConfiguration {
  readonly Name: string;
}
export interface GetSecurityConfigurations {
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface GetTable {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly Name: string;
  readonly TransactionId: string;
  readonly QueryAsOfTime: Date;
}
export interface GetTableVersion {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly VersionId: string;
}
export interface GetTableVersions {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface GetTables {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly Expression: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly TransactionId: string;
  readonly QueryAsOfTime: Date;
}
export interface GetTags {
  readonly ResourceArn: string;
}
export interface GetTrigger {
  readonly Name: string;
}
export interface GetTriggers {
  readonly NextToken: string;
  readonly DependentJobName: string;
  readonly MaxResults: number;
}
export interface GetUserDefinedFunction {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly FunctionName: string;
}
export interface GetUserDefinedFunctions {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly Pattern: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface GetWorkflow {
  readonly Name: string;
  readonly IncludeGraph: boolean;
}
export interface GetWorkflowRun {
  readonly Name: string;
  readonly RunId: string;
  readonly IncludeGraph: boolean;
}
export interface GetWorkflowRunProperties {
  readonly Name: string;
  readonly RunId: string;
}
export interface GetWorkflowRuns {
  readonly Name: string;
  readonly IncludeGraph: boolean;
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface ImportCatalogToGlue {
  readonly CatalogId: string;
}
export interface ListBlueprints {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly Tags: {[key: string]: any};
}
export interface ListCrawlers {
  readonly MaxResults: number;
  readonly NextToken: string;
  readonly Tags: {[key: string]: any};
}
export interface ListDevEndpoints {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly Tags: {[key: string]: any};
}
export interface ListJobs {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly Tags: {[key: string]: any};
}
export interface ListMLTransforms {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly Filter: TransformFilterCriteria;
  readonly Sort: TransformSortCriteria;
  readonly Tags: {[key: string]: any};
}
export interface ListRegistries {
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface ListSchemaVersions {
  readonly SchemaId: SchemaId;
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface ListSchemas {
  readonly RegistryId: RegistryId;
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface ListTriggers {
  readonly NextToken: string;
  readonly DependentJobName: string;
  readonly MaxResults: number;
  readonly Tags: {[key: string]: any};
}
export interface ListWorkflows {
  readonly NextToken: string;
  readonly MaxResults: number;
}
export interface PutDataCatalogEncryptionSettings {
  readonly CatalogId: string;
  readonly DataCatalogEncryptionSettings: DataCatalogEncryptionSettings;
}
export interface PutResourcePolicy {
  readonly PolicyInJson: string;
  readonly ResourceArn: string;
  readonly PolicyHashCondition: string;
  readonly PolicyExistsCondition: string;
  readonly EnableHybrid: string;
}
export interface PutSchemaVersionMetadata {
  readonly SchemaId: SchemaId;
  readonly SchemaVersionNumber: SchemaVersionNumber;
  readonly SchemaVersionId: string;
  readonly MetadataKeyValue: MetadataKeyValuePair;
}
export interface PutWorkflowRunProperties {
  readonly Name: string;
  readonly RunId: string;
  readonly RunProperties: {[key: string]: any};
}
export interface QuerySchemaVersionMetadata {
  readonly SchemaId: SchemaId;
  readonly SchemaVersionNumber: SchemaVersionNumber;
  readonly SchemaVersionId: string;
  readonly MetadataList: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}
export interface RegisterSchemaVersion {
  readonly SchemaId: SchemaId;
  readonly SchemaDefinition: string;
}
export interface RemoveSchemaVersionMetadata {
  readonly SchemaId: SchemaId;
  readonly SchemaVersionNumber: SchemaVersionNumber;
  readonly SchemaVersionId: string;
  readonly MetadataKeyValue: MetadataKeyValuePair;
}
export interface ResetJobBookmark {
  readonly JobName: string;
  readonly RunId: string;
}
export interface ResumeWorkflowRun {
  readonly Name: string;
  readonly RunId: string;
  readonly NodeIds: [];
}
export interface SearchTables {
  readonly CatalogId: string;
  readonly NextToken: string;
  readonly Filters: [];
  readonly SearchText: string;
  readonly SortCriteria: [];
  readonly MaxResults: number;
  readonly ResourceShareType: string;
}
export interface StartBlueprintRun {
  readonly BlueprintName: string;
  readonly Parameters: string;
  readonly RoleArn: string;
}
export interface StartCrawler {
  readonly Name: string;
}
export interface StartCrawlerSchedule {
  readonly CrawlerName: string;
}
export interface StartExportLabelsTaskRun {
  readonly TransformId: string;
  readonly OutputS3Path: string;
}
export interface StartImportLabelsTaskRun {
  readonly TransformId: string;
  readonly InputS3Path: string;
  readonly ReplaceAllLabels: boolean;
}
export interface StartJobRun {
  readonly JobName: string;
  readonly JobRunId: string;
  readonly Arguments: {[key: string]: any};
  readonly AllocatedCapacity: number;
  readonly Timeout: number;
  readonly MaxCapacity: unknown;
  readonly SecurityConfiguration: string;
  readonly NotificationProperty: NotificationProperty;
  readonly WorkerType: string;
  readonly NumberOfWorkers: number;
}
export interface StartMLEvaluationTaskRun {
  readonly TransformId: string;
}
export interface StartMLLabelingSetGenerationTaskRun {
  readonly TransformId: string;
  readonly OutputS3Path: string;
}
export interface StartTrigger {
  readonly Name: string;
}
export interface StartWorkflowRun {
  readonly Name: string;
}
export interface StopCrawler {
  readonly Name: string;
}
export interface StopCrawlerSchedule {
  readonly CrawlerName: string;
}
export interface StopTrigger {
  readonly Name: string;
}
export interface StopWorkflowRun {
  readonly Name: string;
  readonly RunId: string;
}
export interface TagResource {
  readonly ResourceArn: string;
  readonly TagsToAdd: {[key: string]: any};
}
export interface UntagResource {
  readonly ResourceArn: string;
  readonly TagsToRemove: [];
}
export interface UpdateBlueprint {
  readonly Name: string;
  readonly Description: string;
  readonly BlueprintLocation: string;
}
export interface UpdateClassifier {
  readonly GrokClassifier: UpdateGrokClassifierRequest;
  readonly XMLClassifier: UpdateXMLClassifierRequest;
  readonly JsonClassifier: UpdateJsonClassifierRequest;
  readonly CsvClassifier: UpdateCsvClassifierRequest;
}
export interface UpdateColumnStatisticsForPartition {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionValues: [];
  readonly ColumnStatisticsList: [];
}
export interface UpdateColumnStatisticsForTable {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly ColumnStatisticsList: [];
}
export interface UpdateConnection {
  readonly CatalogId: string;
  readonly Name: string;
  readonly ConnectionInput: ConnectionInput;
}
export interface UpdateCrawler {
  readonly Name: string;
  readonly Role: string;
  readonly DatabaseName: string;
  readonly Description: string;
  readonly Targets: CrawlerTargets;
  readonly Schedule: string;
  readonly Classifiers: [];
  readonly TablePrefix: string;
  readonly SchemaChangePolicy: SchemaChangePolicy;
  readonly RecrawlPolicy: RecrawlPolicy;
  readonly LineageConfiguration: LineageConfiguration;
  readonly Configuration: string;
  readonly CrawlerSecurityConfiguration: string;
}
export interface UpdateCrawlerSchedule {
  readonly CrawlerName: string;
  readonly Schedule: string;
}
export interface UpdateDatabase {
  readonly CatalogId: string;
  readonly Name: string;
  readonly DatabaseInput: DatabaseInput;
}
export interface UpdateDevEndpoint {
  readonly EndpointName: string;
  readonly PublicKey: string;
  readonly AddPublicKeys: [];
  readonly DeletePublicKeys: [];
  readonly CustomLibraries: DevEndpointCustomLibraries;
  readonly UpdateEtlLibraries: boolean;
  readonly DeleteArguments: [];
  readonly AddArguments: {[key: string]: any};
}
export interface UpdateJob {
  readonly JobName: string;
  readonly JobUpdate: JobUpdate;
}
export interface UpdateMLTransform {
  readonly TransformId: string;
  readonly Name: string;
  readonly Description: string;
  readonly Parameters: TransformParameters;
  readonly Role: string;
  readonly GlueVersion: string;
  readonly MaxCapacity: unknown;
  readonly WorkerType: string;
  readonly NumberOfWorkers: number;
  readonly Timeout: number;
  readonly MaxRetries: number;
}
export interface UpdatePartition {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionValueList: [];
  readonly PartitionInput: PartitionInput;
}
export interface UpdateRegistry {
  readonly RegistryId: RegistryId;
  readonly Description: string;
}
export interface UpdateSchema {
  readonly SchemaId: SchemaId;
  readonly SchemaVersionNumber: SchemaVersionNumber;
  readonly Compatibility: string;
  readonly Description: string;
}
export interface UpdateTable {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableInput: TableInput;
  readonly SkipArchive: boolean;
  readonly TransactionId: string;
}
export interface UpdateTrigger {
  readonly Name: string;
  readonly TriggerUpdate: TriggerUpdate;
}
export interface UpdateUserDefinedFunction {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly FunctionName: string;
  readonly FunctionInput: UserDefinedFunctionInput;
}
export interface UpdateWorkflow {
  readonly Name: string;
  readonly Description: string;
  readonly DefaultRunProperties: {[key: string]: any};
  readonly MaxConcurrentRuns: number;
}



interface AccessDeniedException {
  readonly Message: string;
}

interface Action {
  readonly JobName: string;
  readonly Arguments: {[key: string]: any};
  readonly Timeout: number;
  readonly SecurityConfiguration: string;
  readonly NotificationProperty: NotificationProperty;
  readonly CrawlerName: string;
}

interface AlreadyExistsException {
  readonly Message: string;
}

interface BackfillError {
  readonly Code: string;
  readonly Partitions: [];
}

interface BatchCreatePartitionRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionInputList: [];
}

interface BatchCreatePartitionResponse {
  readonly Errors: [];
}

interface BatchDeleteConnectionRequest {
  readonly CatalogId: string;
  readonly ConnectionNameList: [];
}

interface BatchDeleteConnectionResponse {
  readonly Succeeded: [];
  readonly Errors: {[key: string]: any};
}

interface BatchDeletePartitionRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionsToDelete: [];
}

interface BatchDeletePartitionResponse {
  readonly Errors: [];
}

interface BatchDeleteTableRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TablesToDelete: [];
  readonly TransactionId: string;
}

interface BatchDeleteTableResponse {
  readonly Errors: [];
}

interface BatchDeleteTableVersionRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly VersionIds: [];
}

interface BatchDeleteTableVersionResponse {
  readonly Errors: [];
}

interface BatchGetBlueprintsRequest {
  readonly Names: [];
  readonly IncludeBlueprint: boolean;
  readonly IncludeParameterSpec: boolean;
}

interface BatchGetBlueprintsResponse {
  readonly Blueprints: [];
  readonly MissingBlueprints: [];
}

interface BatchGetCrawlersRequest {
  readonly CrawlerNames: [];
}

interface BatchGetCrawlersResponse {
  readonly Crawlers: [];
  readonly CrawlersNotFound: [];
}

interface BatchGetDevEndpointsRequest {
  readonly DevEndpointNames: [];
}

interface BatchGetDevEndpointsResponse {
  readonly DevEndpoints: [];
  readonly DevEndpointsNotFound: [];
}

interface BatchGetJobsRequest {
  readonly JobNames: [];
}

interface BatchGetJobsResponse {
  readonly Jobs: [];
  readonly JobsNotFound: [];
}

interface BatchGetPartitionRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionsToGet: [];
}

interface BatchGetPartitionResponse {
  readonly Partitions: [];
  readonly UnprocessedKeys: [];
}

interface BatchGetTriggersRequest {
  readonly TriggerNames: [];
}

interface BatchGetTriggersResponse {
  readonly Triggers: [];
  readonly TriggersNotFound: [];
}

interface BatchGetWorkflowsRequest {
  readonly Names: [];
  readonly IncludeGraph: boolean;
}

interface BatchGetWorkflowsResponse {
  readonly Workflows: [];
  readonly MissingWorkflows: [];
}

interface BatchStopJobRunError {
  readonly JobName: string;
  readonly JobRunId: string;
  readonly ErrorDetail: ErrorDetail;
}

interface BatchStopJobRunRequest {
  readonly JobName: string;
  readonly JobRunIds: [];
}

interface BatchStopJobRunResponse {
  readonly SuccessfulSubmissions: [];
  readonly Errors: [];
}

interface BatchStopJobRunSuccessfulSubmission {
  readonly JobName: string;
  readonly JobRunId: string;
}

interface BatchUpdatePartitionFailureEntry {
  readonly PartitionValueList: [];
  readonly ErrorDetail: ErrorDetail;
}

interface BatchUpdatePartitionRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly Entries: [];
}

interface BatchUpdatePartitionRequestEntry {
  readonly PartitionValueList: [];
  readonly PartitionInput: PartitionInput;
}

interface BatchUpdatePartitionResponse {
  readonly Errors: [];
}

interface BinaryColumnStatisticsData {
  readonly MaximumLength: number;
  readonly AverageLength: unknown;
  readonly NumberOfNulls: number;
}

interface Blueprint {
  readonly Name: string;
  readonly Description: string;
  readonly CreatedOn: Date;
  readonly LastModifiedOn: Date;
  readonly ParameterSpec: string;
  readonly BlueprintLocation: string;
  readonly BlueprintServiceLocation: string;
  readonly Status: string;
  readonly ErrorMessage: string;
  readonly LastActiveDefinition: LastActiveDefinition;
}

interface BlueprintDetails {
  readonly BlueprintName: string;
  readonly RunId: string;
}

interface BlueprintRun {
  readonly BlueprintName: string;
  readonly RunId: string;
  readonly WorkflowName: string;
  readonly State: string;
  readonly StartedOn: Date;
  readonly CompletedOn: Date;
  readonly ErrorMessage: string;
  readonly RollbackErrorMessage: string;
  readonly Parameters: string;
  readonly RoleArn: string;
}

interface BooleanColumnStatisticsData {
  readonly NumberOfTrues: number;
  readonly NumberOfFalses: number;
  readonly NumberOfNulls: number;
}

interface CancelMLTaskRunRequest {
  readonly TransformId: string;
  readonly TaskRunId: string;
}

interface CancelMLTaskRunResponse {
  readonly TransformId: string;
  readonly TaskRunId: string;
  readonly Status: string;
}

interface CatalogEntry {
  readonly DatabaseName: string;
  readonly TableName: string;
}

interface CatalogImportStatus {
  readonly ImportCompleted: boolean;
  readonly ImportTime: Date;
  readonly ImportedBy: string;
}

interface CatalogTarget {
  readonly DatabaseName: string;
  readonly Tables: [];
}

interface CheckSchemaVersionValidityInput {
  readonly DataFormat: string;
  readonly SchemaDefinition: string;
}

interface CheckSchemaVersionValidityResponse {
  readonly Valid: boolean;
  readonly Error: string;
}

interface Classifier {
  readonly GrokClassifier: GrokClassifier;
  readonly XMLClassifier: XMLClassifier;
  readonly JsonClassifier: JsonClassifier;
  readonly CsvClassifier: CsvClassifier;
}

interface CloudWatchEncryption {
  readonly CloudWatchEncryptionMode: string;
  readonly KmsKeyArn: string;
}

interface CodeGenEdge {
  readonly Source: string;
  readonly Target: string;
  readonly TargetParameter: string;
}

interface CodeGenNode {
  readonly Id: string;
  readonly NodeType: string;
  readonly Args: [];
  readonly LineNumber: number;
}

interface CodeGenNodeArg {
  readonly Name: string;
  readonly Value: string;
  readonly Param: boolean;
}

interface Column {
  readonly Name: string;
  readonly Type: string;
  readonly Comment: string;
  readonly Parameters: {[key: string]: any};
}

interface ColumnError {
  readonly ColumnName: string;
  readonly Error: ErrorDetail;
}

interface ColumnImportance {
  readonly ColumnName: string;
  readonly Importance: unknown;
}

interface ColumnStatistics {
  readonly ColumnName: string;
  readonly ColumnType: string;
  readonly AnalyzedTime: Date;
  readonly StatisticsData: ColumnStatisticsData;
}

interface ColumnStatisticsData {
  readonly Type: string;
  readonly BooleanColumnStatisticsData: BooleanColumnStatisticsData;
  readonly DateColumnStatisticsData: DateColumnStatisticsData;
  readonly DecimalColumnStatisticsData: DecimalColumnStatisticsData;
  readonly DoubleColumnStatisticsData: DoubleColumnStatisticsData;
  readonly LongColumnStatisticsData: LongColumnStatisticsData;
  readonly StringColumnStatisticsData: StringColumnStatisticsData;
  readonly BinaryColumnStatisticsData: BinaryColumnStatisticsData;
}

interface ColumnStatisticsError {
  readonly ColumnStatistics: ColumnStatistics;
  readonly Error: ErrorDetail;
}

interface ConcurrentModificationException {
  readonly Message: string;
}

interface ConcurrentRunsExceededException {
  readonly Message: string;
}

interface Condition {
  readonly LogicalOperator: string;
  readonly JobName: string;
  readonly State: string;
  readonly CrawlerName: string;
  readonly CrawlState: string;
}

interface ConditionCheckFailureException {
  readonly Message: string;
}

interface ConflictException {
  readonly Message: string;
}

interface ConfusionMatrix {
  readonly NumTruePositives: number;
  readonly NumFalsePositives: number;
  readonly NumTrueNegatives: number;
  readonly NumFalseNegatives: number;
}

interface Connection {
  readonly Name: string;
  readonly Description: string;
  readonly ConnectionType: string;
  readonly MatchCriteria: [];
  readonly ConnectionProperties: {[key: string]: any};
  readonly PhysicalConnectionRequirements: PhysicalConnectionRequirements;
  readonly CreationTime: Date;
  readonly LastUpdatedTime: Date;
  readonly LastUpdatedBy: string;
}

interface ConnectionInput {
  readonly Name: string;
  readonly Description: string;
  readonly ConnectionType: string;
  readonly MatchCriteria: [];
  readonly ConnectionProperties: {[key: string]: any};
  readonly PhysicalConnectionRequirements: PhysicalConnectionRequirements;
}

interface ConnectionPasswordEncryption {
  readonly ReturnConnectionPasswordEncrypted: boolean;
  readonly AwsKmsKeyId: string;
}

interface ConnectionsList {
  readonly Connections: [];
}

interface Crawl {
  readonly State: string;
  readonly StartedOn: Date;
  readonly CompletedOn: Date;
  readonly ErrorMessage: string;
  readonly LogGroup: string;
  readonly LogStream: string;
}

interface Crawler {
  readonly Name: string;
  readonly Role: string;
  readonly Targets: CrawlerTargets;
  readonly DatabaseName: string;
  readonly Description: string;
  readonly Classifiers: [];
  readonly RecrawlPolicy: RecrawlPolicy;
  readonly SchemaChangePolicy: SchemaChangePolicy;
  readonly LineageConfiguration: LineageConfiguration;
  readonly State: string;
  readonly TablePrefix: string;
  readonly Schedule: Schedule;
  readonly CrawlElapsedTime: number;
  readonly CreationTime: Date;
  readonly LastUpdated: Date;
  readonly LastCrawl: LastCrawlInfo;
  readonly Version: number;
  readonly Configuration: string;
  readonly CrawlerSecurityConfiguration: string;
}

interface CrawlerMetrics {
  readonly CrawlerName: string;
  readonly TimeLeftSeconds: unknown;
  readonly StillEstimating: boolean;
  readonly LastRuntimeSeconds: unknown;
  readonly MedianRuntimeSeconds: unknown;
  readonly TablesCreated: number;
  readonly TablesUpdated: number;
  readonly TablesDeleted: number;
}

interface CrawlerNodeDetails {
  readonly Crawls: [];
}

interface CrawlerNotRunningException {
  readonly Message: string;
}

interface CrawlerRunningException {
  readonly Message: string;
}

interface CrawlerStoppingException {
  readonly Message: string;
}

interface CrawlerTargets {
  readonly S3Targets: [];
  readonly JdbcTargets: [];
  readonly MongoDBTargets: [];
  readonly DynamoDBTargets: [];
  readonly CatalogTargets: [];
}

interface CreateBlueprintRequest {
  readonly Name: string;
  readonly Description: string;
  readonly BlueprintLocation: string;
  readonly Tags: {[key: string]: any};
}

interface CreateBlueprintResponse {
  readonly Name: string;
}

interface CreateClassifierRequest {
  readonly GrokClassifier: CreateGrokClassifierRequest;
  readonly XMLClassifier: CreateXMLClassifierRequest;
  readonly JsonClassifier: CreateJsonClassifierRequest;
  readonly CsvClassifier: CreateCsvClassifierRequest;
}

interface CreateClassifierResponse {
}

interface CreateConnectionRequest {
  readonly CatalogId: string;
  readonly ConnectionInput: ConnectionInput;
  readonly Tags: {[key: string]: any};
}

interface CreateConnectionResponse {
}

interface CreateCrawlerRequest {
  readonly Name: string;
  readonly Role: string;
  readonly DatabaseName: string;
  readonly Description: string;
  readonly Targets: CrawlerTargets;
  readonly Schedule: string;
  readonly Classifiers: [];
  readonly TablePrefix: string;
  readonly SchemaChangePolicy: SchemaChangePolicy;
  readonly RecrawlPolicy: RecrawlPolicy;
  readonly LineageConfiguration: LineageConfiguration;
  readonly Configuration: string;
  readonly CrawlerSecurityConfiguration: string;
  readonly Tags: {[key: string]: any};
}

interface CreateCrawlerResponse {
}

interface CreateCsvClassifierRequest {
  readonly Name: string;
  readonly Delimiter: string;
  readonly QuoteSymbol: string;
  readonly ContainsHeader: string;
  readonly Header: [];
  readonly DisableValueTrimming: boolean;
  readonly AllowSingleColumn: boolean;
}

interface CreateDatabaseRequest {
  readonly CatalogId: string;
  readonly DatabaseInput: DatabaseInput;
}

interface CreateDatabaseResponse {
}

interface CreateDevEndpointRequest {
  readonly EndpointName: string;
  readonly RoleArn: string;
  readonly SecurityGroupIds: [];
  readonly SubnetId: string;
  readonly PublicKey: string;
  readonly PublicKeys: [];
  readonly NumberOfNodes: number;
  readonly WorkerType: string;
  readonly GlueVersion: string;
  readonly NumberOfWorkers: number;
  readonly ExtraPythonLibsS3Path: string;
  readonly ExtraJarsS3Path: string;
  readonly SecurityConfiguration: string;
  readonly Tags: {[key: string]: any};
  readonly Arguments: {[key: string]: any};
}

interface CreateDevEndpointResponse {
  readonly EndpointName: string;
  readonly Status: string;
  readonly SecurityGroupIds: [];
  readonly SubnetId: string;
  readonly RoleArn: string;
  readonly YarnEndpointAddress: string;
  readonly ZeppelinRemoteSparkInterpreterPort: number;
  readonly NumberOfNodes: number;
  readonly WorkerType: string;
  readonly GlueVersion: string;
  readonly NumberOfWorkers: number;
  readonly AvailabilityZone: string;
  readonly VpcId: string;
  readonly ExtraPythonLibsS3Path: string;
  readonly ExtraJarsS3Path: string;
  readonly FailureReason: string;
  readonly SecurityConfiguration: string;
  readonly CreatedTimestamp: Date;
  readonly Arguments: {[key: string]: any};
}

interface CreateGrokClassifierRequest {
  readonly Classification: string;
  readonly Name: string;
  readonly GrokPattern: string;
  readonly CustomPatterns: string;
}

interface CreateJobRequest {
  readonly Name: string;
  readonly Description: string;
  readonly LogUri: string;
  readonly Role: string;
  readonly ExecutionProperty: ExecutionProperty;
  readonly Command: JobCommand;
  readonly DefaultArguments: {[key: string]: any};
  readonly NonOverridableArguments: {[key: string]: any};
  readonly Connections: ConnectionsList;
  readonly MaxRetries: number;
  readonly AllocatedCapacity: number;
  readonly Timeout: number;
  readonly MaxCapacity: unknown;
  readonly SecurityConfiguration: string;
  readonly Tags: {[key: string]: any};
  readonly NotificationProperty: NotificationProperty;
  readonly GlueVersion: string;
  readonly NumberOfWorkers: number;
  readonly WorkerType: string;
}

interface CreateJobResponse {
  readonly Name: string;
}

interface CreateJsonClassifierRequest {
  readonly Name: string;
  readonly JsonPath: string;
}

interface CreateMLTransformRequest {
  readonly Name: string;
  readonly Description: string;
  readonly InputRecordTables: [];
  readonly Parameters: TransformParameters;
  readonly Role: string;
  readonly GlueVersion: string;
  readonly MaxCapacity: unknown;
  readonly WorkerType: string;
  readonly NumberOfWorkers: number;
  readonly Timeout: number;
  readonly MaxRetries: number;
  readonly Tags: {[key: string]: any};
  readonly TransformEncryption: TransformEncryption;
}

interface CreateMLTransformResponse {
  readonly TransformId: string;
}

interface CreatePartitionIndexRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionIndex: PartitionIndex;
}

interface CreatePartitionIndexResponse {
}

interface CreatePartitionRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionInput: PartitionInput;
}

interface CreatePartitionResponse {
}

interface CreateRegistryInput {
  readonly RegistryName: string;
  readonly Description: string;
  readonly Tags: {[key: string]: any};
}

interface CreateRegistryResponse {
  readonly RegistryArn: string;
  readonly RegistryName: string;
  readonly Description: string;
  readonly Tags: {[key: string]: any};
}

interface CreateSchemaInput {
  readonly RegistryId: RegistryId;
  readonly SchemaName: string;
  readonly DataFormat: string;
  readonly Compatibility: string;
  readonly Description: string;
  readonly Tags: {[key: string]: any};
  readonly SchemaDefinition: string;
}

interface CreateSchemaResponse {
  readonly RegistryName: string;
  readonly RegistryArn: string;
  readonly SchemaName: string;
  readonly SchemaArn: string;
  readonly Description: string;
  readonly DataFormat: string;
  readonly Compatibility: string;
  readonly SchemaCheckpoint: number;
  readonly LatestSchemaVersion: number;
  readonly NextSchemaVersion: number;
  readonly SchemaStatus: string;
  readonly Tags: {[key: string]: any};
  readonly SchemaVersionId: string;
  readonly SchemaVersionStatus: string;
}

interface CreateScriptRequest {
  readonly DagNodes: [];
  readonly DagEdges: [];
  readonly Language: string;
}

interface CreateScriptResponse {
  readonly PythonScript: string;
  readonly ScalaCode: string;
}

interface CreateSecurityConfigurationRequest {
  readonly Name: string;
  readonly EncryptionConfiguration: EncryptionConfiguration;
}

interface CreateSecurityConfigurationResponse {
  readonly Name: string;
  readonly CreatedTimestamp: Date;
}

interface CreateTableRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableInput: TableInput;
  readonly PartitionIndexes: [];
  readonly TransactionId: string;
}

interface CreateTableResponse {
}

interface CreateTriggerRequest {
  readonly Name: string;
  readonly WorkflowName: string;
  readonly Type: string;
  readonly Schedule: string;
  readonly Predicate: Predicate;
  readonly Actions: [];
  readonly Description: string;
  readonly StartOnCreation: boolean;
  readonly Tags: {[key: string]: any};
  readonly EventBatchingCondition: EventBatchingCondition;
}

interface CreateTriggerResponse {
  readonly Name: string;
}

interface CreateUserDefinedFunctionRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly FunctionInput: UserDefinedFunctionInput;
}

interface CreateUserDefinedFunctionResponse {
}

interface CreateWorkflowRequest {
  readonly Name: string;
  readonly Description: string;
  readonly DefaultRunProperties: {[key: string]: any};
  readonly Tags: {[key: string]: any};
  readonly MaxConcurrentRuns: number;
}

interface CreateWorkflowResponse {
  readonly Name: string;
}

interface CreateXMLClassifierRequest {
  readonly Classification: string;
  readonly Name: string;
  readonly RowTag: string;
}

interface CsvClassifier {
  readonly Name: string;
  readonly CreationTime: Date;
  readonly LastUpdated: Date;
  readonly Version: number;
  readonly Delimiter: string;
  readonly QuoteSymbol: string;
  readonly ContainsHeader: string;
  readonly Header: [];
  readonly DisableValueTrimming: boolean;
  readonly AllowSingleColumn: boolean;
}

interface DataCatalogEncryptionSettings {
  readonly EncryptionAtRest: EncryptionAtRest;
  readonly ConnectionPasswordEncryption: ConnectionPasswordEncryption;
}

interface DataLakePrincipal {
  readonly DataLakePrincipalIdentifier: string;
}

interface Database {
  readonly Name: string;
  readonly Description: string;
  readonly LocationUri: string;
  readonly Parameters: {[key: string]: any};
  readonly CreateTime: Date;
  readonly CreateTableDefaultPermissions: [];
  readonly TargetDatabase: DatabaseIdentifier;
  readonly CatalogId: string;
}

interface DatabaseIdentifier {
  readonly CatalogId: string;
  readonly DatabaseName: string;
}

interface DatabaseInput {
  readonly Name: string;
  readonly Description: string;
  readonly LocationUri: string;
  readonly Parameters: {[key: string]: any};
  readonly CreateTableDefaultPermissions: [];
  readonly TargetDatabase: DatabaseIdentifier;
}

interface DateColumnStatisticsData {
  readonly MinimumValue: Date;
  readonly MaximumValue: Date;
  readonly NumberOfNulls: number;
  readonly NumberOfDistinctValues: number;
}

interface DecimalColumnStatisticsData {
  readonly MinimumValue: DecimalNumber;
  readonly MaximumValue: DecimalNumber;
  readonly NumberOfNulls: number;
  readonly NumberOfDistinctValues: number;
}

interface DecimalNumber {
  readonly UnscaledValue: unknown;
  readonly Scale: number;
}

interface DeleteBlueprintRequest {
  readonly Name: string;
}

interface DeleteBlueprintResponse {
  readonly Name: string;
}

interface DeleteClassifierRequest {
  readonly Name: string;
}

interface DeleteClassifierResponse {
}

interface DeleteColumnStatisticsForPartitionRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionValues: [];
  readonly ColumnName: string;
}

interface DeleteColumnStatisticsForPartitionResponse {
}

interface DeleteColumnStatisticsForTableRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly ColumnName: string;
}

interface DeleteColumnStatisticsForTableResponse {
}

interface DeleteConnectionRequest {
  readonly CatalogId: string;
  readonly ConnectionName: string;
}

interface DeleteConnectionResponse {
}

interface DeleteCrawlerRequest {
  readonly Name: string;
}

interface DeleteCrawlerResponse {
}

interface DeleteDatabaseRequest {
  readonly CatalogId: string;
  readonly Name: string;
}

interface DeleteDatabaseResponse {
}

interface DeleteDevEndpointRequest {
  readonly EndpointName: string;
}

interface DeleteDevEndpointResponse {
}

interface DeleteJobRequest {
  readonly JobName: string;
}

interface DeleteJobResponse {
  readonly JobName: string;
}

interface DeleteMLTransformRequest {
  readonly TransformId: string;
}

interface DeleteMLTransformResponse {
  readonly TransformId: string;
}

interface DeletePartitionIndexRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly IndexName: string;
}

interface DeletePartitionIndexResponse {
}

interface DeletePartitionRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionValues: [];
}

interface DeletePartitionResponse {
}

interface DeleteRegistryInput {
  readonly RegistryId: RegistryId;
}

interface DeleteRegistryResponse {
  readonly RegistryName: string;
  readonly RegistryArn: string;
  readonly Status: string;
}

interface DeleteResourcePolicyRequest {
  readonly PolicyHashCondition: string;
  readonly ResourceArn: string;
}

interface DeleteResourcePolicyResponse {
}

interface DeleteSchemaInput {
  readonly SchemaId: SchemaId;
}

interface DeleteSchemaResponse {
  readonly SchemaArn: string;
  readonly SchemaName: string;
  readonly Status: string;
}

interface DeleteSchemaVersionsInput {
  readonly SchemaId: SchemaId;
  readonly Versions: string;
}

interface DeleteSchemaVersionsResponse {
  readonly SchemaVersionErrors: [];
}

interface DeleteSecurityConfigurationRequest {
  readonly Name: string;
}

interface DeleteSecurityConfigurationResponse {
}

interface DeleteTableRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly Name: string;
  readonly TransactionId: string;
}

interface DeleteTableResponse {
}

interface DeleteTableVersionRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly VersionId: string;
}

interface DeleteTableVersionResponse {
}

interface DeleteTriggerRequest {
  readonly Name: string;
}

interface DeleteTriggerResponse {
  readonly Name: string;
}

interface DeleteUserDefinedFunctionRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly FunctionName: string;
}

interface DeleteUserDefinedFunctionResponse {
}

interface DeleteWorkflowRequest {
  readonly Name: string;
}

interface DeleteWorkflowResponse {
  readonly Name: string;
}

interface DevEndpoint {
  readonly EndpointName: string;
  readonly RoleArn: string;
  readonly SecurityGroupIds: [];
  readonly SubnetId: string;
  readonly YarnEndpointAddress: string;
  readonly PrivateAddress: string;
  readonly ZeppelinRemoteSparkInterpreterPort: number;
  readonly PublicAddress: string;
  readonly Status: string;
  readonly WorkerType: string;
  readonly GlueVersion: string;
  readonly NumberOfWorkers: number;
  readonly NumberOfNodes: number;
  readonly AvailabilityZone: string;
  readonly VpcId: string;
  readonly ExtraPythonLibsS3Path: string;
  readonly ExtraJarsS3Path: string;
  readonly FailureReason: string;
  readonly LastUpdateStatus: string;
  readonly CreatedTimestamp: Date;
  readonly LastModifiedTimestamp: Date;
  readonly PublicKey: string;
  readonly PublicKeys: [];
  readonly SecurityConfiguration: string;
  readonly Arguments: {[key: string]: any};
}

interface DevEndpointCustomLibraries {
  readonly ExtraPythonLibsS3Path: string;
  readonly ExtraJarsS3Path: string;
}

interface DoubleColumnStatisticsData {
  readonly MinimumValue: unknown;
  readonly MaximumValue: unknown;
  readonly NumberOfNulls: number;
  readonly NumberOfDistinctValues: number;
}

interface DynamoDBTarget {
  readonly Path: string;
  readonly scanAll: boolean;
  readonly scanRate: unknown;
}

interface Edge {
  readonly SourceId: string;
  readonly DestinationId: string;
}

interface EncryptionAtRest {
  readonly CatalogEncryptionMode: string;
  readonly SseAwsKmsKeyId: string;
}

interface EncryptionConfiguration {
  readonly S3Encryption: [];
  readonly CloudWatchEncryption: CloudWatchEncryption;
  readonly JobBookmarksEncryption: JobBookmarksEncryption;
}

interface EntityNotFoundException {
  readonly Message: string;
}

interface ErrorDetail {
  readonly ErrorCode: string;
  readonly ErrorMessage: string;
}

interface ErrorDetails {
  readonly ErrorCode: string;
  readonly ErrorMessage: string;
}

interface EvaluationMetrics {
  readonly TransformType: string;
  readonly FindMatchesMetrics: FindMatchesMetrics;
}

interface EventBatchingCondition {
  readonly BatchSize: number;
  readonly BatchWindow: number;
}

interface ExecutionProperty {
  readonly MaxConcurrentRuns: number;
}

interface ExportLabelsTaskRunProperties {
  readonly OutputS3Path: string;
}

interface FindMatchesMetrics {
  readonly AreaUnderPRCurve: unknown;
  readonly Precision: unknown;
  readonly Recall: unknown;
  readonly F1: unknown;
  readonly ConfusionMatrix: ConfusionMatrix;
  readonly ColumnImportances: [];
}

interface FindMatchesParameters {
  readonly PrimaryKeyColumnName: string;
  readonly PrecisionRecallTradeoff: unknown;
  readonly AccuracyCostTradeoff: unknown;
  readonly EnforceProvidedLabels: boolean;
}

interface FindMatchesTaskRunProperties {
  readonly JobId: string;
  readonly JobName: string;
  readonly JobRunId: string;
}

interface GetBlueprintRequest {
  readonly Name: string;
  readonly IncludeBlueprint: boolean;
  readonly IncludeParameterSpec: boolean;
}

interface GetBlueprintResponse {
  readonly Blueprint: Blueprint;
}

interface GetBlueprintRunRequest {
  readonly BlueprintName: string;
  readonly RunId: string;
}

interface GetBlueprintRunResponse {
  readonly BlueprintRun: BlueprintRun;
}

interface GetBlueprintRunsRequest {
  readonly BlueprintName: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface GetBlueprintRunsResponse {
  readonly BlueprintRuns: [];
  readonly NextToken: string;
}

interface GetCatalogImportStatusRequest {
  readonly CatalogId: string;
}

interface GetCatalogImportStatusResponse {
  readonly ImportStatus: CatalogImportStatus;
}

interface GetClassifierRequest {
  readonly Name: string;
}

interface GetClassifierResponse {
  readonly Classifier: Classifier;
}

interface GetClassifiersRequest {
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface GetClassifiersResponse {
  readonly Classifiers: [];
  readonly NextToken: string;
}

interface GetColumnStatisticsForPartitionRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionValues: [];
  readonly ColumnNames: [];
}

interface GetColumnStatisticsForPartitionResponse {
  readonly ColumnStatisticsList: [];
  readonly Errors: [];
}

interface GetColumnStatisticsForTableRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly ColumnNames: [];
}

interface GetColumnStatisticsForTableResponse {
  readonly ColumnStatisticsList: [];
  readonly Errors: [];
}

interface GetConnectionRequest {
  readonly CatalogId: string;
  readonly Name: string;
  readonly HidePassword: boolean;
}

interface GetConnectionResponse {
  readonly Connection: Connection;
}

interface GetConnectionsFilter {
  readonly MatchCriteria: [];
  readonly ConnectionType: string;
}

interface GetConnectionsRequest {
  readonly CatalogId: string;
  readonly Filter: GetConnectionsFilter;
  readonly HidePassword: boolean;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface GetConnectionsResponse {
  readonly ConnectionList: [];
  readonly NextToken: string;
}

interface GetCrawlerMetricsRequest {
  readonly CrawlerNameList: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface GetCrawlerMetricsResponse {
  readonly CrawlerMetricsList: [];
  readonly NextToken: string;
}

interface GetCrawlerRequest {
  readonly Name: string;
}

interface GetCrawlerResponse {
  readonly Crawler: Crawler;
}

interface GetCrawlersRequest {
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface GetCrawlersResponse {
  readonly Crawlers: [];
  readonly NextToken: string;
}

interface GetDataCatalogEncryptionSettingsRequest {
  readonly CatalogId: string;
}

interface GetDataCatalogEncryptionSettingsResponse {
  readonly DataCatalogEncryptionSettings: DataCatalogEncryptionSettings;
}

interface GetDatabaseRequest {
  readonly CatalogId: string;
  readonly Name: string;
}

interface GetDatabaseResponse {
  readonly Database: Database;
}

interface GetDatabasesRequest {
  readonly CatalogId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly ResourceShareType: string;
}

interface GetDatabasesResponse {
  readonly DatabaseList: [];
  readonly NextToken: string;
}

interface GetDataflowGraphRequest {
  readonly PythonScript: string;
}

interface GetDataflowGraphResponse {
  readonly DagNodes: [];
  readonly DagEdges: [];
}

interface GetDevEndpointRequest {
  readonly EndpointName: string;
}

interface GetDevEndpointResponse {
  readonly DevEndpoint: DevEndpoint;
}

interface GetDevEndpointsRequest {
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface GetDevEndpointsResponse {
  readonly DevEndpoints: [];
  readonly NextToken: string;
}

interface GetJobBookmarkRequest {
  readonly JobName: string;
  readonly RunId: string;
}

interface GetJobBookmarkResponse {
  readonly JobBookmarkEntry: JobBookmarkEntry;
}

interface GetJobRequest {
  readonly JobName: string;
}

interface GetJobResponse {
  readonly Job: Job;
}

interface GetJobRunRequest {
  readonly JobName: string;
  readonly RunId: string;
  readonly PredecessorsIncluded: boolean;
}

interface GetJobRunResponse {
  readonly JobRun: JobRun;
}

interface GetJobRunsRequest {
  readonly JobName: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface GetJobRunsResponse {
  readonly JobRuns: [];
  readonly NextToken: string;
}

interface GetJobsRequest {
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface GetJobsResponse {
  readonly Jobs: [];
  readonly NextToken: string;
}

interface GetMLTaskRunRequest {
  readonly TransformId: string;
  readonly TaskRunId: string;
}

interface GetMLTaskRunResponse {
  readonly TransformId: string;
  readonly TaskRunId: string;
  readonly Status: string;
  readonly LogGroupName: string;
  readonly Properties: TaskRunProperties;
  readonly ErrorString: string;
  readonly StartedOn: Date;
  readonly LastModifiedOn: Date;
  readonly CompletedOn: Date;
  readonly ExecutionTime: number;
}

interface GetMLTaskRunsRequest {
  readonly TransformId: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly Filter: TaskRunFilterCriteria;
  readonly Sort: TaskRunSortCriteria;
}

interface GetMLTaskRunsResponse {
  readonly TaskRuns: [];
  readonly NextToken: string;
}

interface GetMLTransformRequest {
  readonly TransformId: string;
}

interface GetMLTransformResponse {
  readonly TransformId: string;
  readonly Name: string;
  readonly Description: string;
  readonly Status: string;
  readonly CreatedOn: Date;
  readonly LastModifiedOn: Date;
  readonly InputRecordTables: [];
  readonly Parameters: TransformParameters;
  readonly EvaluationMetrics: EvaluationMetrics;
  readonly LabelCount: number;
  readonly Schema: [];
  readonly Role: string;
  readonly GlueVersion: string;
  readonly MaxCapacity: unknown;
  readonly WorkerType: string;
  readonly NumberOfWorkers: number;
  readonly Timeout: number;
  readonly MaxRetries: number;
  readonly TransformEncryption: TransformEncryption;
}

interface GetMLTransformsRequest {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly Filter: TransformFilterCriteria;
  readonly Sort: TransformSortCriteria;
}

interface GetMLTransformsResponse {
  readonly Transforms: [];
  readonly NextToken: string;
}

interface GetMappingRequest {
  readonly Source: CatalogEntry;
  readonly Sinks: [];
  readonly Location: Location;
}

interface GetMappingResponse {
  readonly Mapping: [];
}

interface GetPartitionIndexesRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly NextToken: string;
}

interface GetPartitionIndexesResponse {
  readonly PartitionIndexDescriptorList: [];
  readonly NextToken: string;
}

interface GetPartitionRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionValues: [];
}

interface GetPartitionResponse {
  readonly Partition: Partition;
}

interface GetPartitionsRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly Expression: string;
  readonly NextToken: string;
  readonly Segment: Segment;
  readonly MaxResults: number;
  readonly ExcludeColumnSchema: boolean;
  readonly TransactionId: string;
  readonly QueryAsOfTime: Date;
}

interface GetPartitionsResponse {
  readonly Partitions: [];
  readonly NextToken: string;
}

interface GetPlanRequest {
  readonly Mapping: [];
  readonly Source: CatalogEntry;
  readonly Sinks: [];
  readonly Location: Location;
  readonly Language: string;
  readonly AdditionalPlanOptionsMap: {[key: string]: any};
}

interface GetPlanResponse {
  readonly PythonScript: string;
  readonly ScalaCode: string;
}

interface GetRegistryInput {
  readonly RegistryId: RegistryId;
}

interface GetRegistryResponse {
  readonly RegistryName: string;
  readonly RegistryArn: string;
  readonly Description: string;
  readonly Status: string;
  readonly CreatedTime: string;
  readonly UpdatedTime: string;
}

interface GetResourcePoliciesRequest {
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface GetResourcePoliciesResponse {
  readonly GetResourcePoliciesResponseList: [];
  readonly NextToken: string;
}

interface GetResourcePolicyRequest {
  readonly ResourceArn: string;
}

interface GetResourcePolicyResponse {
  readonly PolicyInJson: string;
  readonly PolicyHash: string;
  readonly CreateTime: Date;
  readonly UpdateTime: Date;
}

interface GetSchemaByDefinitionInput {
  readonly SchemaId: SchemaId;
  readonly SchemaDefinition: string;
}

interface GetSchemaByDefinitionResponse {
  readonly SchemaVersionId: string;
  readonly SchemaArn: string;
  readonly DataFormat: string;
  readonly Status: string;
  readonly CreatedTime: string;
}

interface GetSchemaInput {
  readonly SchemaId: SchemaId;
}

interface GetSchemaResponse {
  readonly RegistryName: string;
  readonly RegistryArn: string;
  readonly SchemaName: string;
  readonly SchemaArn: string;
  readonly Description: string;
  readonly DataFormat: string;
  readonly Compatibility: string;
  readonly SchemaCheckpoint: number;
  readonly LatestSchemaVersion: number;
  readonly NextSchemaVersion: number;
  readonly SchemaStatus: string;
  readonly CreatedTime: string;
  readonly UpdatedTime: string;
}

interface GetSchemaVersionInput {
  readonly SchemaId: SchemaId;
  readonly SchemaVersionId: string;
  readonly SchemaVersionNumber: SchemaVersionNumber;
}

interface GetSchemaVersionResponse {
  readonly SchemaVersionId: string;
  readonly SchemaDefinition: string;
  readonly DataFormat: string;
  readonly SchemaArn: string;
  readonly VersionNumber: number;
  readonly Status: string;
  readonly CreatedTime: string;
}

interface GetSchemaVersionsDiffInput {
  readonly SchemaId: SchemaId;
  readonly FirstSchemaVersionNumber: SchemaVersionNumber;
  readonly SecondSchemaVersionNumber: SchemaVersionNumber;
  readonly SchemaDiffType: string;
}

interface GetSchemaVersionsDiffResponse {
  readonly Diff: string;
}

interface GetSecurityConfigurationRequest {
  readonly Name: string;
}

interface GetSecurityConfigurationResponse {
  readonly SecurityConfiguration: SecurityConfiguration;
}

interface GetSecurityConfigurationsRequest {
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface GetSecurityConfigurationsResponse {
  readonly SecurityConfigurations: [];
  readonly NextToken: string;
}

interface GetTableRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly Name: string;
  readonly TransactionId: string;
  readonly QueryAsOfTime: Date;
}

interface GetTableResponse {
  readonly Table: Table;
}

interface GetTableVersionRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly VersionId: string;
}

interface GetTableVersionResponse {
  readonly TableVersion: TableVersion;
}

interface GetTableVersionsRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface GetTableVersionsResponse {
  readonly TableVersions: [];
  readonly NextToken: string;
}

interface GetTablesRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly Expression: string;
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly TransactionId: string;
  readonly QueryAsOfTime: Date;
}

interface GetTablesResponse {
  readonly TableList: [];
  readonly NextToken: string;
}

interface GetTagsRequest {
  readonly ResourceArn: string;
}

interface GetTagsResponse {
  readonly Tags: {[key: string]: any};
}

interface GetTriggerRequest {
  readonly Name: string;
}

interface GetTriggerResponse {
  readonly Trigger: Trigger;
}

interface GetTriggersRequest {
  readonly NextToken: string;
  readonly DependentJobName: string;
  readonly MaxResults: number;
}

interface GetTriggersResponse {
  readonly Triggers: [];
  readonly NextToken: string;
}

interface GetUserDefinedFunctionRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly FunctionName: string;
}

interface GetUserDefinedFunctionResponse {
  readonly UserDefinedFunction: UserDefinedFunction;
}

interface GetUserDefinedFunctionsRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly Pattern: string;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface GetUserDefinedFunctionsResponse {
  readonly UserDefinedFunctions: [];
  readonly NextToken: string;
}

interface GetWorkflowRequest {
  readonly Name: string;
  readonly IncludeGraph: boolean;
}

interface GetWorkflowResponse {
  readonly Workflow: Workflow;
}

interface GetWorkflowRunPropertiesRequest {
  readonly Name: string;
  readonly RunId: string;
}

interface GetWorkflowRunPropertiesResponse {
  readonly RunProperties: {[key: string]: any};
}

interface GetWorkflowRunRequest {
  readonly Name: string;
  readonly RunId: string;
  readonly IncludeGraph: boolean;
}

interface GetWorkflowRunResponse {
  readonly Run: WorkflowRun;
}

interface GetWorkflowRunsRequest {
  readonly Name: string;
  readonly IncludeGraph: boolean;
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface GetWorkflowRunsResponse {
  readonly Runs: [];
  readonly NextToken: string;
}

interface GlueEncryptionException {
  readonly Message: string;
}

interface GluePolicy {
  readonly PolicyInJson: string;
  readonly PolicyHash: string;
  readonly CreateTime: Date;
  readonly UpdateTime: Date;
}

interface GlueTable {
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly CatalogId: string;
  readonly ConnectionName: string;
}

interface GrokClassifier {
  readonly Name: string;
  readonly Classification: string;
  readonly CreationTime: Date;
  readonly LastUpdated: Date;
  readonly Version: number;
  readonly GrokPattern: string;
  readonly CustomPatterns: string;
}

interface IdempotentParameterMismatchException {
  readonly Message: string;
}

interface IllegalBlueprintStateException {
  readonly Message: string;
}

interface IllegalWorkflowStateException {
  readonly Message: string;
}

interface ImportCatalogToGlueRequest {
  readonly CatalogId: string;
}

interface ImportCatalogToGlueResponse {
}

interface ImportLabelsTaskRunProperties {
  readonly InputS3Path: string;
  readonly Replace: boolean;
}

interface InternalServiceException {
  readonly Message: string;
}

interface InvalidInputException {
  readonly Message: string;
}

interface InvalidStateException {
  readonly Message: string;
}

interface JdbcTarget {
  readonly ConnectionName: string;
  readonly Path: string;
  readonly Exclusions: [];
}

interface Job {
  readonly Name: string;
  readonly Description: string;
  readonly LogUri: string;
  readonly Role: string;
  readonly CreatedOn: Date;
  readonly LastModifiedOn: Date;
  readonly ExecutionProperty: ExecutionProperty;
  readonly Command: JobCommand;
  readonly DefaultArguments: {[key: string]: any};
  readonly NonOverridableArguments: {[key: string]: any};
  readonly Connections: ConnectionsList;
  readonly MaxRetries: number;
  readonly AllocatedCapacity: number;
  readonly Timeout: number;
  readonly MaxCapacity: unknown;
  readonly WorkerType: string;
  readonly NumberOfWorkers: number;
  readonly SecurityConfiguration: string;
  readonly NotificationProperty: NotificationProperty;
  readonly GlueVersion: string;
}

interface JobBookmarkEntry {
  readonly JobName: string;
  readonly Version: number;
  readonly Run: number;
  readonly Attempt: number;
  readonly PreviousRunId: string;
  readonly RunId: string;
  readonly JobBookmark: string;
}

interface JobBookmarksEncryption {
  readonly JobBookmarksEncryptionMode: string;
  readonly KmsKeyArn: string;
}

interface JobCommand {
  readonly Name: string;
  readonly ScriptLocation: string;
  readonly PythonVersion: string;
}

interface JobNodeDetails {
  readonly JobRuns: [];
}

interface JobRun {
  readonly Id: string;
  readonly Attempt: number;
  readonly PreviousRunId: string;
  readonly TriggerName: string;
  readonly JobName: string;
  readonly StartedOn: Date;
  readonly LastModifiedOn: Date;
  readonly CompletedOn: Date;
  readonly JobRunState: string;
  readonly Arguments: {[key: string]: any};
  readonly ErrorMessage: string;
  readonly PredecessorRuns: [];
  readonly AllocatedCapacity: number;
  readonly ExecutionTime: number;
  readonly Timeout: number;
  readonly MaxCapacity: unknown;
  readonly WorkerType: string;
  readonly NumberOfWorkers: number;
  readonly SecurityConfiguration: string;
  readonly LogGroupName: string;
  readonly NotificationProperty: NotificationProperty;
  readonly GlueVersion: string;
}

interface JobUpdate {
  readonly Description: string;
  readonly LogUri: string;
  readonly Role: string;
  readonly ExecutionProperty: ExecutionProperty;
  readonly Command: JobCommand;
  readonly DefaultArguments: {[key: string]: any};
  readonly NonOverridableArguments: {[key: string]: any};
  readonly Connections: ConnectionsList;
  readonly MaxRetries: number;
  readonly AllocatedCapacity: number;
  readonly Timeout: number;
  readonly MaxCapacity: unknown;
  readonly WorkerType: string;
  readonly NumberOfWorkers: number;
  readonly SecurityConfiguration: string;
  readonly NotificationProperty: NotificationProperty;
  readonly GlueVersion: string;
}

interface JsonClassifier {
  readonly Name: string;
  readonly CreationTime: Date;
  readonly LastUpdated: Date;
  readonly Version: number;
  readonly JsonPath: string;
}

interface KeySchemaElement {
  readonly Name: string;
  readonly Type: string;
}

interface LabelingSetGenerationTaskRunProperties {
  readonly OutputS3Path: string;
}

interface LastActiveDefinition {
  readonly Description: string;
  readonly LastModifiedOn: Date;
  readonly ParameterSpec: string;
  readonly BlueprintLocation: string;
  readonly BlueprintServiceLocation: string;
}

interface LastCrawlInfo {
  readonly Status: string;
  readonly ErrorMessage: string;
  readonly LogGroup: string;
  readonly LogStream: string;
  readonly MessagePrefix: string;
  readonly StartTime: Date;
}

interface LineageConfiguration {
  readonly CrawlerLineageSettings: string;
}

interface ListBlueprintsRequest {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly Tags: {[key: string]: any};
}

interface ListBlueprintsResponse {
  readonly Blueprints: [];
  readonly NextToken: string;
}

interface ListCrawlersRequest {
  readonly MaxResults: number;
  readonly NextToken: string;
  readonly Tags: {[key: string]: any};
}

interface ListCrawlersResponse {
  readonly CrawlerNames: [];
  readonly NextToken: string;
}

interface ListDevEndpointsRequest {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly Tags: {[key: string]: any};
}

interface ListDevEndpointsResponse {
  readonly DevEndpointNames: [];
  readonly NextToken: string;
}

interface ListJobsRequest {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly Tags: {[key: string]: any};
}

interface ListJobsResponse {
  readonly JobNames: [];
  readonly NextToken: string;
}

interface ListMLTransformsRequest {
  readonly NextToken: string;
  readonly MaxResults: number;
  readonly Filter: TransformFilterCriteria;
  readonly Sort: TransformSortCriteria;
  readonly Tags: {[key: string]: any};
}

interface ListMLTransformsResponse {
  readonly TransformIds: [];
  readonly NextToken: string;
}

interface ListRegistriesInput {
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListRegistriesResponse {
  readonly Registries: [];
  readonly NextToken: string;
}

interface ListSchemaVersionsInput {
  readonly SchemaId: SchemaId;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListSchemaVersionsResponse {
  readonly Schemas: [];
  readonly NextToken: string;
}

interface ListSchemasInput {
  readonly RegistryId: RegistryId;
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface ListSchemasResponse {
  readonly Schemas: [];
  readonly NextToken: string;
}

interface ListTriggersRequest {
  readonly NextToken: string;
  readonly DependentJobName: string;
  readonly MaxResults: number;
  readonly Tags: {[key: string]: any};
}

interface ListTriggersResponse {
  readonly TriggerNames: [];
  readonly NextToken: string;
}

interface ListWorkflowsRequest {
  readonly NextToken: string;
  readonly MaxResults: number;
}

interface ListWorkflowsResponse {
  readonly Workflows: [];
  readonly NextToken: string;
}

interface Location {
  readonly Jdbc: [];
  readonly S3: [];
  readonly DynamoDB: [];
}

interface LongColumnStatisticsData {
  readonly MinimumValue: number;
  readonly MaximumValue: number;
  readonly NumberOfNulls: number;
  readonly NumberOfDistinctValues: number;
}

interface MLTransform {
  readonly TransformId: string;
  readonly Name: string;
  readonly Description: string;
  readonly Status: string;
  readonly CreatedOn: Date;
  readonly LastModifiedOn: Date;
  readonly InputRecordTables: [];
  readonly Parameters: TransformParameters;
  readonly EvaluationMetrics: EvaluationMetrics;
  readonly LabelCount: number;
  readonly Schema: [];
  readonly Role: string;
  readonly GlueVersion: string;
  readonly MaxCapacity: unknown;
  readonly WorkerType: string;
  readonly NumberOfWorkers: number;
  readonly Timeout: number;
  readonly MaxRetries: number;
  readonly TransformEncryption: TransformEncryption;
}

interface MLTransformNotReadyException {
  readonly Message: string;
}

interface MLUserDataEncryption {
  readonly MlUserDataEncryptionMode: string;
  readonly KmsKeyId: string;
}

interface MappingEntry {
  readonly SourceTable: string;
  readonly SourcePath: string;
  readonly SourceType: string;
  readonly TargetTable: string;
  readonly TargetPath: string;
  readonly TargetType: string;
}

interface MetadataInfo {
  readonly MetadataValue: string;
  readonly CreatedTime: string;
  readonly OtherMetadataValueList: [];
}

interface MetadataKeyValuePair {
  readonly MetadataKey: string;
  readonly MetadataValue: string;
}

interface MongoDBTarget {
  readonly ConnectionName: string;
  readonly Path: string;
  readonly ScanAll: boolean;
}

interface NoScheduleException {
  readonly Message: string;
}

interface Node {
  readonly Type: string;
  readonly Name: string;
  readonly UniqueId: string;
  readonly TriggerDetails: TriggerNodeDetails;
  readonly JobDetails: JobNodeDetails;
  readonly CrawlerDetails: CrawlerNodeDetails;
}

interface NotificationProperty {
  readonly NotifyDelayAfter: number;
}

interface OperationTimeoutException {
  readonly Message: string;
}

interface Order {
  readonly Column: string;
  readonly SortOrder: number;
}

interface OtherMetadataValueListItem {
  readonly MetadataValue: string;
  readonly CreatedTime: string;
}

interface Partition {
  readonly Values: [];
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly CreationTime: Date;
  readonly LastAccessTime: Date;
  readonly StorageDescriptor: StorageDescriptor;
  readonly Parameters: {[key: string]: any};
  readonly LastAnalyzedTime: Date;
  readonly CatalogId: string;
}

interface PartitionError {
  readonly PartitionValues: [];
  readonly ErrorDetail: ErrorDetail;
}

interface PartitionIndex {
  readonly Keys: [];
  readonly IndexName: string;
}

interface PartitionIndexDescriptor {
  readonly IndexName: string;
  readonly Keys: [];
  readonly IndexStatus: string;
  readonly BackfillErrors: [];
}

interface PartitionInput {
  readonly Values: [];
  readonly LastAccessTime: Date;
  readonly StorageDescriptor: StorageDescriptor;
  readonly Parameters: {[key: string]: any};
  readonly LastAnalyzedTime: Date;
}

interface PartitionValueList {
  readonly Values: [];
}

interface PhysicalConnectionRequirements {
  readonly SubnetId: string;
  readonly SecurityGroupIdList: [];
  readonly AvailabilityZone: string;
}

interface Predecessor {
  readonly JobName: string;
  readonly RunId: string;
}

interface Predicate {
  readonly Logical: string;
  readonly Conditions: [];
}

interface PrincipalPermissions {
  readonly Principal: DataLakePrincipal;
  readonly Permissions: [];
}

interface PropertyPredicate {
  readonly Key: string;
  readonly Value: string;
  readonly Comparator: string;
}

interface PutDataCatalogEncryptionSettingsRequest {
  readonly CatalogId: string;
  readonly DataCatalogEncryptionSettings: DataCatalogEncryptionSettings;
}

interface PutDataCatalogEncryptionSettingsResponse {
}

interface PutResourcePolicyRequest {
  readonly PolicyInJson: string;
  readonly ResourceArn: string;
  readonly PolicyHashCondition: string;
  readonly PolicyExistsCondition: string;
  readonly EnableHybrid: string;
}

interface PutResourcePolicyResponse {
  readonly PolicyHash: string;
}

interface PutSchemaVersionMetadataInput {
  readonly SchemaId: SchemaId;
  readonly SchemaVersionNumber: SchemaVersionNumber;
  readonly SchemaVersionId: string;
  readonly MetadataKeyValue: MetadataKeyValuePair;
}

interface PutSchemaVersionMetadataResponse {
  readonly SchemaArn: string;
  readonly SchemaName: string;
  readonly RegistryName: string;
  readonly LatestVersion: boolean;
  readonly VersionNumber: number;
  readonly SchemaVersionId: string;
  readonly MetadataKey: string;
  readonly MetadataValue: string;
}

interface PutWorkflowRunPropertiesRequest {
  readonly Name: string;
  readonly RunId: string;
  readonly RunProperties: {[key: string]: any};
}

interface PutWorkflowRunPropertiesResponse {
}

interface QuerySchemaVersionMetadataInput {
  readonly SchemaId: SchemaId;
  readonly SchemaVersionNumber: SchemaVersionNumber;
  readonly SchemaVersionId: string;
  readonly MetadataList: [];
  readonly MaxResults: number;
  readonly NextToken: string;
}

interface QuerySchemaVersionMetadataResponse {
  readonly MetadataInfoMap: {[key: string]: any};
  readonly SchemaVersionId: string;
  readonly NextToken: string;
}

interface RecrawlPolicy {
  readonly RecrawlBehavior: string;
}

interface RegisterSchemaVersionInput {
  readonly SchemaId: SchemaId;
  readonly SchemaDefinition: string;
}

interface RegisterSchemaVersionResponse {
  readonly SchemaVersionId: string;
  readonly VersionNumber: number;
  readonly Status: string;
}

interface RegistryId {
  readonly RegistryName: string;
  readonly RegistryArn: string;
}

interface RegistryListItem {
  readonly RegistryName: string;
  readonly RegistryArn: string;
  readonly Description: string;
  readonly Status: string;
  readonly CreatedTime: string;
  readonly UpdatedTime: string;
}

interface RemoveSchemaVersionMetadataInput {
  readonly SchemaId: SchemaId;
  readonly SchemaVersionNumber: SchemaVersionNumber;
  readonly SchemaVersionId: string;
  readonly MetadataKeyValue: MetadataKeyValuePair;
}

interface RemoveSchemaVersionMetadataResponse {
  readonly SchemaArn: string;
  readonly SchemaName: string;
  readonly RegistryName: string;
  readonly LatestVersion: boolean;
  readonly VersionNumber: number;
  readonly SchemaVersionId: string;
  readonly MetadataKey: string;
  readonly MetadataValue: string;
}

interface ResetJobBookmarkRequest {
  readonly JobName: string;
  readonly RunId: string;
}

interface ResetJobBookmarkResponse {
  readonly JobBookmarkEntry: JobBookmarkEntry;
}

interface ResourceNotReadyException {
  readonly Message: string;
}

interface ResourceNumberLimitExceededException {
  readonly Message: string;
}

interface ResourceUri {
  readonly ResourceType: string;
  readonly Uri: string;
}

interface ResumeWorkflowRunRequest {
  readonly Name: string;
  readonly RunId: string;
  readonly NodeIds: [];
}

interface ResumeWorkflowRunResponse {
  readonly RunId: string;
  readonly NodeIds: [];
}

interface S3Encryption {
  readonly S3EncryptionMode: string;
  readonly KmsKeyArn: string;
}

interface S3Target {
  readonly Path: string;
  readonly Exclusions: [];
  readonly ConnectionName: string;
  readonly SampleSize: number;
  readonly EventQueueArn: string;
  readonly DlqEventQueueArn: string;
}

interface Schedule {
  readonly ScheduleExpression: string;
  readonly State: string;
}

interface SchedulerNotRunningException {
  readonly Message: string;
}

interface SchedulerRunningException {
  readonly Message: string;
}

interface SchedulerTransitioningException {
  readonly Message: string;
}

interface SchemaChangePolicy {
  readonly UpdateBehavior: string;
  readonly DeleteBehavior: string;
}

interface SchemaColumn {
  readonly Name: string;
  readonly DataType: string;
}

interface SchemaId {
  readonly SchemaArn: string;
  readonly SchemaName: string;
  readonly RegistryName: string;
}

interface SchemaListItem {
  readonly RegistryName: string;
  readonly SchemaName: string;
  readonly SchemaArn: string;
  readonly Description: string;
  readonly SchemaStatus: string;
  readonly CreatedTime: string;
  readonly UpdatedTime: string;
}

interface SchemaReference {
  readonly SchemaId: SchemaId;
  readonly SchemaVersionId: string;
  readonly SchemaVersionNumber: number;
}

interface SchemaVersionErrorItem {
  readonly VersionNumber: number;
  readonly ErrorDetails: ErrorDetails;
}

interface SchemaVersionListItem {
  readonly SchemaArn: string;
  readonly SchemaVersionId: string;
  readonly VersionNumber: number;
  readonly Status: string;
  readonly CreatedTime: string;
}

interface SchemaVersionNumber {
  readonly LatestVersion: boolean;
  readonly VersionNumber: number;
}

interface SearchTablesRequest {
  readonly CatalogId: string;
  readonly NextToken: string;
  readonly Filters: [];
  readonly SearchText: string;
  readonly SortCriteria: [];
  readonly MaxResults: number;
  readonly ResourceShareType: string;
}

interface SearchTablesResponse {
  readonly NextToken: string;
  readonly TableList: [];
}

interface SecurityConfiguration {
  readonly Name: string;
  readonly CreatedTimeStamp: Date;
  readonly EncryptionConfiguration: EncryptionConfiguration;
}

interface Segment {
  readonly SegmentNumber: number;
  readonly TotalSegments: number;
}

interface SerDeInfo {
  readonly Name: string;
  readonly SerializationLibrary: string;
  readonly Parameters: {[key: string]: any};
}

interface SkewedInfo {
  readonly SkewedColumnNames: [];
  readonly SkewedColumnValues: [];
  readonly SkewedColumnValueLocationMaps: {[key: string]: any};
}

interface SortCriterion {
  readonly FieldName: string;
  readonly Sort: string;
}

interface StartBlueprintRunRequest {
  readonly BlueprintName: string;
  readonly Parameters: string;
  readonly RoleArn: string;
}

interface StartBlueprintRunResponse {
  readonly RunId: string;
}

interface StartCrawlerRequest {
  readonly Name: string;
}

interface StartCrawlerResponse {
}

interface StartCrawlerScheduleRequest {
  readonly CrawlerName: string;
}

interface StartCrawlerScheduleResponse {
}

interface StartExportLabelsTaskRunRequest {
  readonly TransformId: string;
  readonly OutputS3Path: string;
}

interface StartExportLabelsTaskRunResponse {
  readonly TaskRunId: string;
}

interface StartImportLabelsTaskRunRequest {
  readonly TransformId: string;
  readonly InputS3Path: string;
  readonly ReplaceAllLabels: boolean;
}

interface StartImportLabelsTaskRunResponse {
  readonly TaskRunId: string;
}

interface StartJobRunRequest {
  readonly JobName: string;
  readonly JobRunId: string;
  readonly Arguments: {[key: string]: any};
  readonly AllocatedCapacity: number;
  readonly Timeout: number;
  readonly MaxCapacity: unknown;
  readonly SecurityConfiguration: string;
  readonly NotificationProperty: NotificationProperty;
  readonly WorkerType: string;
  readonly NumberOfWorkers: number;
}

interface StartJobRunResponse {
  readonly JobRunId: string;
}

interface StartMLEvaluationTaskRunRequest {
  readonly TransformId: string;
}

interface StartMLEvaluationTaskRunResponse {
  readonly TaskRunId: string;
}

interface StartMLLabelingSetGenerationTaskRunRequest {
  readonly TransformId: string;
  readonly OutputS3Path: string;
}

interface StartMLLabelingSetGenerationTaskRunResponse {
  readonly TaskRunId: string;
}

interface StartTriggerRequest {
  readonly Name: string;
}

interface StartTriggerResponse {
  readonly Name: string;
}

interface StartWorkflowRunRequest {
  readonly Name: string;
}

interface StartWorkflowRunResponse {
  readonly RunId: string;
}

interface StartingEventBatchCondition {
  readonly BatchSize: number;
  readonly BatchWindow: number;
}

interface StopCrawlerRequest {
  readonly Name: string;
}

interface StopCrawlerResponse {
}

interface StopCrawlerScheduleRequest {
  readonly CrawlerName: string;
}

interface StopCrawlerScheduleResponse {
}

interface StopTriggerRequest {
  readonly Name: string;
}

interface StopTriggerResponse {
  readonly Name: string;
}

interface StopWorkflowRunRequest {
  readonly Name: string;
  readonly RunId: string;
}

interface StopWorkflowRunResponse {
}

interface StorageDescriptor {
  readonly Columns: [];
  readonly Location: string;
  readonly InputFormat: string;
  readonly OutputFormat: string;
  readonly Compressed: boolean;
  readonly NumberOfBuckets: number;
  readonly SerdeInfo: SerDeInfo;
  readonly BucketColumns: [];
  readonly SortColumns: [];
  readonly Parameters: {[key: string]: any};
  readonly SkewedInfo: SkewedInfo;
  readonly StoredAsSubDirectories: boolean;
  readonly SchemaReference: SchemaReference;
}

interface StringColumnStatisticsData {
  readonly MaximumLength: number;
  readonly AverageLength: unknown;
  readonly NumberOfNulls: number;
  readonly NumberOfDistinctValues: number;
}

interface Table {
  readonly Name: string;
  readonly DatabaseName: string;
  readonly Description: string;
  readonly Owner: string;
  readonly CreateTime: Date;
  readonly UpdateTime: Date;
  readonly LastAccessTime: Date;
  readonly LastAnalyzedTime: Date;
  readonly Retention: number;
  readonly StorageDescriptor: StorageDescriptor;
  readonly PartitionKeys: [];
  readonly ViewOriginalText: string;
  readonly ViewExpandedText: string;
  readonly TableType: string;
  readonly Parameters: {[key: string]: any};
  readonly CreatedBy: string;
  readonly IsRegisteredWithLakeFormation: boolean;
  readonly TargetTable: TableIdentifier;
  readonly CatalogId: string;
}

interface TableError {
  readonly TableName: string;
  readonly ErrorDetail: ErrorDetail;
}

interface TableIdentifier {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly Name: string;
}

interface TableInput {
  readonly Name: string;
  readonly Description: string;
  readonly Owner: string;
  readonly LastAccessTime: Date;
  readonly LastAnalyzedTime: Date;
  readonly Retention: number;
  readonly StorageDescriptor: StorageDescriptor;
  readonly PartitionKeys: [];
  readonly ViewOriginalText: string;
  readonly ViewExpandedText: string;
  readonly TableType: string;
  readonly Parameters: {[key: string]: any};
  readonly TargetTable: TableIdentifier;
}

interface TableVersion {
  readonly Table: Table;
  readonly VersionId: string;
}

interface TableVersionError {
  readonly TableName: string;
  readonly VersionId: string;
  readonly ErrorDetail: ErrorDetail;
}

interface TagResourceRequest {
  readonly ResourceArn: string;
  readonly TagsToAdd: {[key: string]: any};
}

interface TagResourceResponse {
}

interface TaskRun {
  readonly TransformId: string;
  readonly TaskRunId: string;
  readonly Status: string;
  readonly LogGroupName: string;
  readonly Properties: TaskRunProperties;
  readonly ErrorString: string;
  readonly StartedOn: Date;
  readonly LastModifiedOn: Date;
  readonly CompletedOn: Date;
  readonly ExecutionTime: number;
}

interface TaskRunFilterCriteria {
  readonly TaskRunType: string;
  readonly Status: string;
  readonly StartedBefore: Date;
  readonly StartedAfter: Date;
}

interface TaskRunProperties {
  readonly TaskType: string;
  readonly ImportLabelsTaskRunProperties: ImportLabelsTaskRunProperties;
  readonly ExportLabelsTaskRunProperties: ExportLabelsTaskRunProperties;
  readonly LabelingSetGenerationTaskRunProperties: LabelingSetGenerationTaskRunProperties;
  readonly FindMatchesTaskRunProperties: FindMatchesTaskRunProperties;
}

interface TaskRunSortCriteria {
  readonly Column: string;
  readonly SortDirection: string;
}

interface TransformEncryption {
  readonly MlUserDataEncryption: MLUserDataEncryption;
  readonly TaskRunSecurityConfigurationName: string;
}

interface TransformFilterCriteria {
  readonly Name: string;
  readonly TransformType: string;
  readonly Status: string;
  readonly GlueVersion: string;
  readonly CreatedBefore: Date;
  readonly CreatedAfter: Date;
  readonly LastModifiedBefore: Date;
  readonly LastModifiedAfter: Date;
  readonly Schema: [];
}

interface TransformParameters {
  readonly TransformType: string;
  readonly FindMatchesParameters: FindMatchesParameters;
}

interface TransformSortCriteria {
  readonly Column: string;
  readonly SortDirection: string;
}

interface Trigger {
  readonly Name: string;
  readonly WorkflowName: string;
  readonly Id: string;
  readonly Type: string;
  readonly State: string;
  readonly Description: string;
  readonly Schedule: string;
  readonly Actions: [];
  readonly Predicate: Predicate;
  readonly EventBatchingCondition: EventBatchingCondition;
}

interface TriggerNodeDetails {
  readonly Trigger: Trigger;
}

interface TriggerUpdate {
  readonly Name: string;
  readonly Description: string;
  readonly Schedule: string;
  readonly Actions: [];
  readonly Predicate: Predicate;
  readonly EventBatchingCondition: EventBatchingCondition;
}

interface UntagResourceRequest {
  readonly ResourceArn: string;
  readonly TagsToRemove: [];
}

interface UntagResourceResponse {
}

interface UpdateBlueprintRequest {
  readonly Name: string;
  readonly Description: string;
  readonly BlueprintLocation: string;
}

interface UpdateBlueprintResponse {
  readonly Name: string;
}

interface UpdateClassifierRequest {
  readonly GrokClassifier: UpdateGrokClassifierRequest;
  readonly XMLClassifier: UpdateXMLClassifierRequest;
  readonly JsonClassifier: UpdateJsonClassifierRequest;
  readonly CsvClassifier: UpdateCsvClassifierRequest;
}

interface UpdateClassifierResponse {
}

interface UpdateColumnStatisticsForPartitionRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionValues: [];
  readonly ColumnStatisticsList: [];
}

interface UpdateColumnStatisticsForPartitionResponse {
  readonly Errors: [];
}

interface UpdateColumnStatisticsForTableRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly ColumnStatisticsList: [];
}

interface UpdateColumnStatisticsForTableResponse {
  readonly Errors: [];
}

interface UpdateConnectionRequest {
  readonly CatalogId: string;
  readonly Name: string;
  readonly ConnectionInput: ConnectionInput;
}

interface UpdateConnectionResponse {
}

interface UpdateCrawlerRequest {
  readonly Name: string;
  readonly Role: string;
  readonly DatabaseName: string;
  readonly Description: string;
  readonly Targets: CrawlerTargets;
  readonly Schedule: string;
  readonly Classifiers: [];
  readonly TablePrefix: string;
  readonly SchemaChangePolicy: SchemaChangePolicy;
  readonly RecrawlPolicy: RecrawlPolicy;
  readonly LineageConfiguration: LineageConfiguration;
  readonly Configuration: string;
  readonly CrawlerSecurityConfiguration: string;
}

interface UpdateCrawlerResponse {
}

interface UpdateCrawlerScheduleRequest {
  readonly CrawlerName: string;
  readonly Schedule: string;
}

interface UpdateCrawlerScheduleResponse {
}

interface UpdateCsvClassifierRequest {
  readonly Name: string;
  readonly Delimiter: string;
  readonly QuoteSymbol: string;
  readonly ContainsHeader: string;
  readonly Header: [];
  readonly DisableValueTrimming: boolean;
  readonly AllowSingleColumn: boolean;
}

interface UpdateDatabaseRequest {
  readonly CatalogId: string;
  readonly Name: string;
  readonly DatabaseInput: DatabaseInput;
}

interface UpdateDatabaseResponse {
}

interface UpdateDevEndpointRequest {
  readonly EndpointName: string;
  readonly PublicKey: string;
  readonly AddPublicKeys: [];
  readonly DeletePublicKeys: [];
  readonly CustomLibraries: DevEndpointCustomLibraries;
  readonly UpdateEtlLibraries: boolean;
  readonly DeleteArguments: [];
  readonly AddArguments: {[key: string]: any};
}

interface UpdateDevEndpointResponse {
}

interface UpdateGrokClassifierRequest {
  readonly Name: string;
  readonly Classification: string;
  readonly GrokPattern: string;
  readonly CustomPatterns: string;
}

interface UpdateJobRequest {
  readonly JobName: string;
  readonly JobUpdate: JobUpdate;
}

interface UpdateJobResponse {
  readonly JobName: string;
}

interface UpdateJsonClassifierRequest {
  readonly Name: string;
  readonly JsonPath: string;
}

interface UpdateMLTransformRequest {
  readonly TransformId: string;
  readonly Name: string;
  readonly Description: string;
  readonly Parameters: TransformParameters;
  readonly Role: string;
  readonly GlueVersion: string;
  readonly MaxCapacity: unknown;
  readonly WorkerType: string;
  readonly NumberOfWorkers: number;
  readonly Timeout: number;
  readonly MaxRetries: number;
}

interface UpdateMLTransformResponse {
  readonly TransformId: string;
}

interface UpdatePartitionRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableName: string;
  readonly PartitionValueList: [];
  readonly PartitionInput: PartitionInput;
}

interface UpdatePartitionResponse {
}

interface UpdateRegistryInput {
  readonly RegistryId: RegistryId;
  readonly Description: string;
}

interface UpdateRegistryResponse {
  readonly RegistryName: string;
  readonly RegistryArn: string;
}

interface UpdateSchemaInput {
  readonly SchemaId: SchemaId;
  readonly SchemaVersionNumber: SchemaVersionNumber;
  readonly Compatibility: string;
  readonly Description: string;
}

interface UpdateSchemaResponse {
  readonly SchemaArn: string;
  readonly SchemaName: string;
  readonly RegistryName: string;
}

interface UpdateTableRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly TableInput: TableInput;
  readonly SkipArchive: boolean;
  readonly TransactionId: string;
}

interface UpdateTableResponse {
}

interface UpdateTriggerRequest {
  readonly Name: string;
  readonly TriggerUpdate: TriggerUpdate;
}

interface UpdateTriggerResponse {
  readonly Trigger: Trigger;
}

interface UpdateUserDefinedFunctionRequest {
  readonly CatalogId: string;
  readonly DatabaseName: string;
  readonly FunctionName: string;
  readonly FunctionInput: UserDefinedFunctionInput;
}

interface UpdateUserDefinedFunctionResponse {
}

interface UpdateWorkflowRequest {
  readonly Name: string;
  readonly Description: string;
  readonly DefaultRunProperties: {[key: string]: any};
  readonly MaxConcurrentRuns: number;
}

interface UpdateWorkflowResponse {
  readonly Name: string;
}

interface UpdateXMLClassifierRequest {
  readonly Name: string;
  readonly Classification: string;
  readonly RowTag: string;
}

interface UserDefinedFunction {
  readonly FunctionName: string;
  readonly DatabaseName: string;
  readonly ClassName: string;
  readonly OwnerName: string;
  readonly OwnerType: string;
  readonly CreateTime: Date;
  readonly ResourceUris: [];
  readonly CatalogId: string;
}

interface UserDefinedFunctionInput {
  readonly FunctionName: string;
  readonly ClassName: string;
  readonly OwnerName: string;
  readonly OwnerType: string;
  readonly ResourceUris: [];
}

interface ValidationException {
  readonly Message: string;
}

interface VersionMismatchException {
  readonly Message: string;
}

interface Workflow {
  readonly Name: string;
  readonly Description: string;
  readonly DefaultRunProperties: {[key: string]: any};
  readonly CreatedOn: Date;
  readonly LastModifiedOn: Date;
  readonly LastRun: WorkflowRun;
  readonly Graph: WorkflowGraph;
  readonly MaxConcurrentRuns: number;
  readonly BlueprintDetails: BlueprintDetails;
}

interface WorkflowGraph {
  readonly Nodes: [];
  readonly Edges: [];
}

interface WorkflowRun {
  readonly Name: string;
  readonly WorkflowRunId: string;
  readonly PreviousRunId: string;
  readonly WorkflowRunProperties: {[key: string]: any};
  readonly StartedOn: Date;
  readonly CompletedOn: Date;
  readonly Status: string;
  readonly ErrorMessage: string;
  readonly Statistics: WorkflowRunStatistics;
  readonly Graph: WorkflowGraph;
  readonly StartingEventBatchCondition: StartingEventBatchCondition;
}

interface WorkflowRunStatistics {
  readonly TotalActions: number;
  readonly TimeoutActions: number;
  readonly FailedActions: number;
  readonly StoppedActions: number;
  readonly SucceededActions: number;
  readonly RunningActions: number;
}

interface XMLClassifier {
  readonly Name: string;
  readonly Classification: string;
  readonly CreationTime: Date;
  readonly LastUpdated: Date;
  readonly Version: number;
  readonly RowTag: string;
}

