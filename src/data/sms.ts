/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface CreateApp {
  readonly name?: string;
  readonly description?: string;
  readonly roleName?: string;
  readonly clientToken?: string;
  readonly serverGroups?: [];
  readonly tags?: [];
}

export interface CreateReplicationJob {
  readonly serverId: string;
  readonly seedReplicationTime: Date;
  readonly frequency?: number;
  readonly runOnce?: boolean;
  readonly licenseType?: string;
  readonly roleName?: string;
  readonly description?: string;
  readonly numberOfRecentAmisToKeep?: number;
  readonly encrypted?: boolean;
  readonly kmsKeyId?: string;
}

export interface DeleteApp {
  readonly appId?: string;
  readonly forceStopAppReplication?: boolean;
  readonly forceTerminateApp?: boolean;
}

export interface DeleteAppLaunchConfiguration {
  readonly appId?: string;
}

export interface DeleteAppReplicationConfiguration {
  readonly appId?: string;
}

export interface DeleteAppValidationConfiguration {
  readonly appId: string;
}

export interface DeleteReplicationJob {
  readonly replicationJobId: string;
}

export interface DeleteServerCatalog {
}

export interface DisassociateConnector {
  readonly connectorId: string;
}

export interface GenerateChangeSet {
  readonly appId?: string;
  readonly changesetFormat?: string;
}

export interface GenerateTemplate {
  readonly appId?: string;
  readonly templateFormat?: string;
}

export interface GetApp {
  readonly appId?: string;
}

export interface GetAppLaunchConfiguration {
  readonly appId?: string;
}

export interface GetAppReplicationConfiguration {
  readonly appId?: string;
}

export interface GetAppValidationConfiguration {
  readonly appId: string;
}

export interface GetAppValidationOutput {
  readonly appId: string;
}

export interface GetConnectors {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface GetReplicationJobs {
  readonly replicationJobId?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface GetReplicationRuns {
  readonly replicationJobId: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface GetServers {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly vmServerAddressList?: [];
}

export interface ImportAppCatalog {
  readonly roleName?: string;
}

export interface ImportServerCatalog {
}

export interface LaunchApp {
  readonly appId?: string;
}

export interface ListApps {
  readonly appIds?: [];
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface NotifyAppValidationOutput {
  readonly appId: string;
  readonly notificationContext?: NotificationContext;
}

export interface PutAppLaunchConfiguration {
  readonly appId?: string;
  readonly roleName?: string;
  readonly autoLaunch?: boolean;
  readonly serverGroupLaunchConfigurations?: [];
}

export interface PutAppReplicationConfiguration {
  readonly appId?: string;
  readonly serverGroupReplicationConfigurations?: [];
}

export interface PutAppValidationConfiguration {
  readonly appId: string;
  readonly appValidationConfigurations?: [];
  readonly serverGroupValidationConfigurations?: [];
}

export interface StartAppReplication {
  readonly appId?: string;
}

export interface StartOnDemandAppReplication {
  readonly appId: string;
  readonly description?: string;
}

export interface StartOnDemandReplicationRun {
  readonly replicationJobId: string;
  readonly description?: string;
}

export interface StopAppReplication {
  readonly appId?: string;
}

export interface TerminateApp {
  readonly appId?: string;
}

export interface UpdateApp {
  readonly appId?: string;
  readonly name?: string;
  readonly description?: string;
  readonly roleName?: string;
  readonly serverGroups?: [];
  readonly tags?: [];
}

export interface UpdateReplicationJob {
  readonly replicationJobId: string;
  readonly frequency?: number;
  readonly nextReplicationRunStartTime?: Date;
  readonly licenseType?: string;
  readonly roleName?: string;
  readonly description?: string;
  readonly numberOfRecentAmisToKeep?: number;
  readonly encrypted?: boolean;
  readonly kmsKeyId?: string;
}

export interface AppSummary {
  readonly appId?: string;
  readonly importedAppId?: string;
  readonly name?: string;
  readonly description?: string;
  readonly status?: string;
  readonly statusMessage?: string;
  readonly replicationConfigurationStatus?: string;
  readonly replicationStatus?: string;
  readonly replicationStatusMessage?: string;
  readonly latestReplicationTime?: Date;
  readonly launchConfigurationStatus?: string;
  readonly launchStatus?: string;
  readonly launchStatusMessage?: string;
  readonly launchDetails?: LaunchDetails;
  readonly creationTime?: Date;
  readonly lastModified?: Date;
  readonly roleName?: string;
  readonly totalServerGroups?: number;
  readonly totalServers?: number;
}

export interface AppValidationConfiguration {
  readonly validationId?: string;
  readonly name?: string;
  readonly appValidationStrategy?: string;
  readonly ssmValidationParameters?: SSMValidationParameters;
}

export interface AppValidationOutput {
  readonly ssmOutput?: SSMOutput;
}

export interface Connector {
  readonly connectorId?: string;
  readonly version?: string;
  readonly status?: string;
  readonly capabilityList?: [];
  readonly vmManagerName?: string;
  readonly vmManagerType?: string;
  readonly vmManagerId?: string;
  readonly ipAddress?: string;
  readonly macAddress?: string;
  readonly associatedOn?: Date;
}

export interface CreateAppRequest {
  readonly name?: string;
  readonly description?: string;
  readonly roleName?: string;
  readonly clientToken?: string;
  readonly serverGroups?: [];
  readonly tags?: [];
}

export interface CreateAppResponse {
  readonly appSummary?: AppSummary;
  readonly serverGroups?: [];
  readonly tags?: [];
}

export interface CreateReplicationJobRequest {
  readonly serverId: string;
  readonly seedReplicationTime: Date;
  readonly frequency?: number;
  readonly runOnce?: boolean;
  readonly licenseType?: string;
  readonly roleName?: string;
  readonly description?: string;
  readonly numberOfRecentAmisToKeep?: number;
  readonly encrypted?: boolean;
  readonly kmsKeyId?: string;
}

export interface CreateReplicationJobResponse {
  readonly replicationJobId?: string;
}

export interface DeleteAppLaunchConfigurationRequest {
  readonly appId?: string;
}

export interface DeleteAppLaunchConfigurationResponse {
}

export interface DeleteAppReplicationConfigurationRequest {
  readonly appId?: string;
}

export interface DeleteAppReplicationConfigurationResponse {
}

export interface DeleteAppRequest {
  readonly appId?: string;
  readonly forceStopAppReplication?: boolean;
  readonly forceTerminateApp?: boolean;
}

export interface DeleteAppResponse {
}

export interface DeleteAppValidationConfigurationRequest {
  readonly appId: string;
}

export interface DeleteAppValidationConfigurationResponse {
}

export interface DeleteReplicationJobRequest {
  readonly replicationJobId: string;
}

export interface DeleteReplicationJobResponse {
}

export interface DeleteServerCatalogRequest {
}

export interface DeleteServerCatalogResponse {
}

export interface DisassociateConnectorRequest {
  readonly connectorId: string;
}

export interface DisassociateConnectorResponse {
}

export interface DryRunOperationException {
  readonly message?: string;
}

export interface GenerateChangeSetRequest {
  readonly appId?: string;
  readonly changesetFormat?: string;
}

export interface GenerateChangeSetResponse {
  readonly s3Location?: S3Location;
}

export interface GenerateTemplateRequest {
  readonly appId?: string;
  readonly templateFormat?: string;
}

export interface GenerateTemplateResponse {
  readonly s3Location?: S3Location;
}

export interface GetAppLaunchConfigurationRequest {
  readonly appId?: string;
}

export interface GetAppLaunchConfigurationResponse {
  readonly appId?: string;
  readonly roleName?: string;
  readonly autoLaunch?: boolean;
  readonly serverGroupLaunchConfigurations?: [];
}

export interface GetAppReplicationConfigurationRequest {
  readonly appId?: string;
}

export interface GetAppReplicationConfigurationResponse {
  readonly serverGroupReplicationConfigurations?: [];
}

export interface GetAppRequest {
  readonly appId?: string;
}

export interface GetAppResponse {
  readonly appSummary?: AppSummary;
  readonly serverGroups?: [];
  readonly tags?: [];
}

export interface GetAppValidationConfigurationRequest {
  readonly appId: string;
}

export interface GetAppValidationConfigurationResponse {
  readonly appValidationConfigurations?: [];
  readonly serverGroupValidationConfigurations?: [];
}

export interface GetAppValidationOutputRequest {
  readonly appId: string;
}

export interface GetAppValidationOutputResponse {
  readonly validationOutputList?: [];
}

export interface GetConnectorsRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface GetConnectorsResponse {
  readonly connectorList?: [];
  readonly nextToken?: string;
}

export interface GetReplicationJobsRequest {
  readonly replicationJobId?: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface GetReplicationJobsResponse {
  readonly replicationJobList?: [];
  readonly nextToken?: string;
}

export interface GetReplicationRunsRequest {
  readonly replicationJobId: string;
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface GetReplicationRunsResponse {
  readonly replicationJob?: ReplicationJob;
  readonly replicationRunList?: [];
  readonly nextToken?: string;
}

export interface GetServersRequest {
  readonly nextToken?: string;
  readonly maxResults?: number;
  readonly vmServerAddressList?: [];
}

export interface GetServersResponse {
  readonly lastModifiedOn?: Date;
  readonly serverCatalogStatus?: string;
  readonly serverList?: [];
  readonly nextToken?: string;
}

export interface ImportAppCatalogRequest {
  readonly roleName?: string;
}

export interface ImportAppCatalogResponse {
}

export interface ImportServerCatalogRequest {
}

export interface ImportServerCatalogResponse {
}

export interface InternalError {
  readonly message?: string;
}

export interface InvalidParameterException {
  readonly message?: string;
}

export interface LaunchAppRequest {
  readonly appId?: string;
}

export interface LaunchAppResponse {
}

export interface LaunchDetails {
  readonly latestLaunchTime?: Date;
  readonly stackName?: string;
  readonly stackId?: string;
}

export interface ListAppsRequest {
  readonly appIds?: [];
  readonly nextToken?: string;
  readonly maxResults?: number;
}

export interface ListAppsResponse {
  readonly apps?: [];
  readonly nextToken?: string;
}

export interface MissingRequiredParameterException {
  readonly message?: string;
}

export interface NoConnectorsAvailableException {
  readonly message?: string;
}

export interface NotificationContext {
  readonly validationId?: string;
  readonly status?: string;
  readonly statusMessage?: string;
}

export interface NotifyAppValidationOutputRequest {
  readonly appId: string;
  readonly notificationContext?: NotificationContext;
}

export interface NotifyAppValidationOutputResponse {
}

export interface OperationNotPermittedException {
  readonly message?: string;
}

export interface PutAppLaunchConfigurationRequest {
  readonly appId?: string;
  readonly roleName?: string;
  readonly autoLaunch?: boolean;
  readonly serverGroupLaunchConfigurations?: [];
}

export interface PutAppLaunchConfigurationResponse {
}

export interface PutAppReplicationConfigurationRequest {
  readonly appId?: string;
  readonly serverGroupReplicationConfigurations?: [];
}

export interface PutAppReplicationConfigurationResponse {
}

export interface PutAppValidationConfigurationRequest {
  readonly appId: string;
  readonly appValidationConfigurations?: [];
  readonly serverGroupValidationConfigurations?: [];
}

export interface PutAppValidationConfigurationResponse {
}

export interface ReplicationJob {
  readonly replicationJobId?: string;
  readonly serverId?: string;
  readonly serverType?: string;
  readonly vmServer?: VmServer;
  readonly seedReplicationTime?: Date;
  readonly frequency?: number;
  readonly runOnce?: boolean;
  readonly nextReplicationRunStartTime?: Date;
  readonly licenseType?: string;
  readonly roleName?: string;
  readonly latestAmiId?: string;
  readonly state?: string;
  readonly statusMessage?: string;
  readonly description?: string;
  readonly numberOfRecentAmisToKeep?: number;
  readonly encrypted?: boolean;
  readonly kmsKeyId?: string;
  readonly replicationRunList?: [];
}

export interface ReplicationJobAlreadyExistsException {
  readonly message?: string;
}

export interface ReplicationJobNotFoundException {
  readonly message?: string;
}

export interface ReplicationRun {
  readonly replicationRunId?: string;
  readonly state?: string;
  readonly type?: string;
  readonly stageDetails?: ReplicationRunStageDetails;
  readonly statusMessage?: string;
  readonly amiId?: string;
  readonly scheduledStartTime?: Date;
  readonly completedTime?: Date;
  readonly description?: string;
  readonly encrypted?: boolean;
  readonly kmsKeyId?: string;
}

export interface ReplicationRunLimitExceededException {
  readonly message?: string;
}

export interface ReplicationRunStageDetails {
  readonly stage?: string;
  readonly stageProgress?: string;
}

export interface S3Location {
  readonly bucket?: string;
  readonly key?: string;
}

export interface SSMOutput {
  readonly s3Location?: S3Location;
}

export interface SSMValidationParameters {
  readonly source?: Source;
  readonly instanceId?: string;
  readonly scriptType?: string;
  readonly command?: string;
  readonly executionTimeoutSeconds?: number;
  readonly outputS3BucketName?: string;
}

export interface Server {
  readonly serverId?: string;
  readonly serverType?: string;
  readonly vmServer?: VmServer;
  readonly replicationJobId?: string;
  readonly replicationJobTerminated?: boolean;
}

export interface ServerCannotBeReplicatedException {
  readonly message?: string;
}

export interface ServerGroup {
  readonly serverGroupId?: string;
  readonly name?: string;
  readonly serverList?: [];
}

export interface ServerGroupLaunchConfiguration {
  readonly serverGroupId?: string;
  readonly launchOrder?: number;
  readonly serverLaunchConfigurations?: [];
}

export interface ServerGroupReplicationConfiguration {
  readonly serverGroupId?: string;
  readonly serverReplicationConfigurations?: [];
}

export interface ServerGroupValidationConfiguration {
  readonly serverGroupId?: string;
  readonly serverValidationConfigurations?: [];
}

export interface ServerLaunchConfiguration {
  readonly server?: Server;
  readonly logicalId?: string;
  readonly vpc?: string;
  readonly subnet?: string;
  readonly securityGroup?: string;
  readonly ec2KeyName?: string;
  readonly userData?: UserData;
  readonly instanceType?: string;
  readonly associatePublicIpAddress?: boolean;
  readonly iamInstanceProfileName?: string;
  readonly configureScript?: S3Location;
  readonly configureScriptType?: string;
}

export interface ServerReplicationConfiguration {
  readonly server?: Server;
  readonly serverReplicationParameters?: ServerReplicationParameters;
}

export interface ServerReplicationParameters {
  readonly seedTime?: Date;
  readonly frequency?: number;
  readonly runOnce?: boolean;
  readonly licenseType?: string;
  readonly numberOfRecentAmisToKeep?: number;
  readonly encrypted?: boolean;
  readonly kmsKeyId?: string;
}

export interface ServerValidationConfiguration {
  readonly server?: Server;
  readonly validationId?: string;
  readonly name?: string;
  readonly serverValidationStrategy?: string;
  readonly userDataValidationParameters?: UserDataValidationParameters;
}

export interface ServerValidationOutput {
  readonly server?: Server;
}

export interface Source {
  readonly s3Location?: S3Location;
}

export interface StartAppReplicationRequest {
  readonly appId?: string;
}

export interface StartAppReplicationResponse {
}

export interface StartOnDemandAppReplicationRequest {
  readonly appId: string;
  readonly description?: string;
}

export interface StartOnDemandAppReplicationResponse {
}

export interface StartOnDemandReplicationRunRequest {
  readonly replicationJobId: string;
  readonly description?: string;
}

export interface StartOnDemandReplicationRunResponse {
  readonly replicationRunId?: string;
}

export interface StopAppReplicationRequest {
  readonly appId?: string;
}

export interface StopAppReplicationResponse {
}

export interface Tag {
  readonly key?: string;
  readonly value?: string;
}

export interface TemporarilyUnavailableException {
}

export interface TerminateAppRequest {
  readonly appId?: string;
}

export interface TerminateAppResponse {
}

export interface UnauthorizedOperationException {
  readonly message?: string;
}

export interface UpdateAppRequest {
  readonly appId?: string;
  readonly name?: string;
  readonly description?: string;
  readonly roleName?: string;
  readonly serverGroups?: [];
  readonly tags?: [];
}

export interface UpdateAppResponse {
  readonly appSummary?: AppSummary;
  readonly serverGroups?: [];
  readonly tags?: [];
}

export interface UpdateReplicationJobRequest {
  readonly replicationJobId: string;
  readonly frequency?: number;
  readonly nextReplicationRunStartTime?: Date;
  readonly licenseType?: string;
  readonly roleName?: string;
  readonly description?: string;
  readonly numberOfRecentAmisToKeep?: number;
  readonly encrypted?: boolean;
  readonly kmsKeyId?: string;
}

export interface UpdateReplicationJobResponse {
}

export interface UserData {
  readonly s3Location?: S3Location;
}

export interface UserDataValidationParameters {
  readonly source?: Source;
  readonly scriptType?: string;
}

export interface ValidationOutput {
  readonly validationId?: string;
  readonly name?: string;
  readonly status?: string;
  readonly statusMessage?: string;
  readonly latestValidationTime?: Date;
  readonly appValidationOutput?: AppValidationOutput;
  readonly serverValidationOutput?: ServerValidationOutput;
}

export interface VmServer {
  readonly vmServerAddress?: VmServerAddress;
  readonly vmName?: string;
  readonly vmManagerName?: string;
  readonly vmManagerType?: string;
  readonly vmPath?: string;
}

export interface VmServerAddress {
  readonly vmManagerId?: string;
  readonly vmId?: string;
}


