/**
 * STOP. This file is autogenerated. DO NOT EDIT by hand
 */
export interface BatchGetAggregateResourceConfig {
  readonly ConfigurationAggregatorName: string;
  readonly ResourceIdentifiers: [];
}

export interface BatchGetResourceConfig {
  readonly resourceKeys: [];
}

export interface DeleteAggregationAuthorization {
  readonly AuthorizedAccountId: string;
  readonly AuthorizedAwsRegion: string;
}

export interface DeleteConfigRule {
  readonly ConfigRuleName: string;
}

export interface DeleteConfigurationAggregator {
  readonly ConfigurationAggregatorName: string;
}

export interface DeleteConfigurationRecorder {
  readonly ConfigurationRecorderName: string;
}

export interface DeleteConformancePack {
  readonly ConformancePackName: string;
}

export interface DeleteDeliveryChannel {
  readonly DeliveryChannelName: string;
}

export interface DeleteEvaluationResults {
  readonly ConfigRuleName: string;
}

export interface DeleteOrganizationConfigRule {
  readonly OrganizationConfigRuleName: string;
}

export interface DeleteOrganizationConformancePack {
  readonly OrganizationConformancePackName: string;
}

export interface DeletePendingAggregationRequest {
  readonly RequesterAccountId: string;
  readonly RequesterAwsRegion: string;
}

export interface DeleteRemediationConfiguration {
  readonly ConfigRuleName: string;
  readonly ResourceType?: string;
}

export interface DeleteRemediationExceptions {
  readonly ConfigRuleName: string;
  readonly ResourceKeys: [];
}

export interface DeleteResourceConfig {
  readonly ResourceType: string;
  readonly ResourceId: string;
}

export interface DeleteRetentionConfiguration {
  readonly RetentionConfigurationName: string;
}

export interface DeleteStoredQuery {
  readonly QueryName: string;
}

export interface DeliverConfigSnapshot {
  readonly deliveryChannelName: string;
}

export interface DescribeAggregateComplianceByConfigRules {
  readonly ConfigurationAggregatorName: string;
  readonly Filters?: ConfigRuleComplianceFilters;
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeAggregateComplianceByConformancePacks {
  readonly ConfigurationAggregatorName: string;
  readonly Filters?: AggregateConformancePackComplianceFilters;
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeAggregationAuthorizations {
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeComplianceByConfigRule {
  readonly ConfigRuleNames?: [];
  readonly ComplianceTypes?: [];
  readonly NextToken?: string;
}

export interface DescribeComplianceByResource {
  readonly ResourceType?: string;
  readonly ResourceId?: string;
  readonly ComplianceTypes?: [];
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeConfigRuleEvaluationStatus {
  readonly ConfigRuleNames?: [];
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface DescribeConfigRules {
  readonly ConfigRuleNames?: [];
  readonly NextToken?: string;
}

export interface DescribeConfigurationAggregatorSourcesStatus {
  readonly ConfigurationAggregatorName: string;
  readonly UpdateStatus?: [];
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface DescribeConfigurationAggregators {
  readonly ConfigurationAggregatorNames?: [];
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface DescribeConfigurationRecorderStatus {
  readonly ConfigurationRecorderNames?: [];
}

export interface DescribeConfigurationRecorders {
  readonly ConfigurationRecorderNames?: [];
}

export interface DescribeConformancePackCompliance {
  readonly ConformancePackName: string;
  readonly Filters?: ConformancePackComplianceFilters;
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeConformancePackStatus {
  readonly ConformancePackNames?: [];
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeConformancePacks {
  readonly ConformancePackNames?: [];
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeDeliveryChannelStatus {
  readonly DeliveryChannelNames?: [];
}

export interface DescribeDeliveryChannels {
  readonly DeliveryChannelNames?: [];
}

export interface DescribeOrganizationConfigRuleStatuses {
  readonly OrganizationConfigRuleNames?: [];
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeOrganizationConfigRules {
  readonly OrganizationConfigRuleNames?: [];
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeOrganizationConformancePackStatuses {
  readonly OrganizationConformancePackNames?: [];
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeOrganizationConformancePacks {
  readonly OrganizationConformancePackNames?: [];
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribePendingAggregationRequests {
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeRemediationConfigurations {
  readonly ConfigRuleNames: [];
}

export interface DescribeRemediationExceptions {
  readonly ConfigRuleName: string;
  readonly ResourceKeys?: [];
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeRemediationExecutionStatus {
  readonly ConfigRuleName: string;
  readonly ResourceKeys?: [];
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeRetentionConfigurations {
  readonly RetentionConfigurationNames?: [];
  readonly NextToken?: string;
}

export interface GetAggregateComplianceDetailsByConfigRule {
  readonly ConfigurationAggregatorName: string;
  readonly ConfigRuleName: string;
  readonly AccountId: string;
  readonly AwsRegion: string;
  readonly ComplianceType?: string;
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface GetAggregateConfigRuleComplianceSummary {
  readonly ConfigurationAggregatorName: string;
  readonly Filters?: ConfigRuleComplianceSummaryFilters;
  readonly GroupByKey?: string;
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface GetAggregateConformancePackComplianceSummary {
  readonly ConfigurationAggregatorName: string;
  readonly Filters?: AggregateConformancePackComplianceSummaryFilters;
  readonly GroupByKey?: string;
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface GetAggregateDiscoveredResourceCounts {
  readonly ConfigurationAggregatorName: string;
  readonly Filters?: ResourceCountFilters;
  readonly GroupByKey?: string;
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface GetAggregateResourceConfig {
  readonly ConfigurationAggregatorName: string;
  readonly ResourceIdentifier: AggregateResourceIdentifier;
}

export interface GetComplianceDetailsByConfigRule {
  readonly ConfigRuleName: string;
  readonly ComplianceTypes?: [];
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface GetComplianceDetailsByResource {
  readonly ResourceType: string;
  readonly ResourceId: string;
  readonly ComplianceTypes?: [];
  readonly NextToken?: string;
}

export interface GetComplianceSummaryByResourceType {
  readonly ResourceTypes?: [];
}

export interface GetConformancePackComplianceDetails {
  readonly ConformancePackName: string;
  readonly Filters?: ConformancePackEvaluationFilters;
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface GetConformancePackComplianceSummary {
  readonly ConformancePackNames: [];
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface GetDiscoveredResourceCounts {
  readonly resourceTypes?: [];
  readonly limit?: number;
  readonly nextToken?: string;
}

export interface GetOrganizationConfigRuleDetailedStatus {
  readonly OrganizationConfigRuleName: string;
  readonly Filters?: StatusDetailFilters;
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface GetOrganizationConformancePackDetailedStatus {
  readonly OrganizationConformancePackName: string;
  readonly Filters?: OrganizationResourceDetailedStatusFilters;
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface GetResourceConfigHistory {
  readonly resourceType: string;
  readonly resourceId: string;
  readonly laterTime?: Date;
  readonly earlierTime?: Date;
  readonly chronologicalOrder?: string;
  readonly limit?: number;
  readonly nextToken?: string;
}

export interface GetStoredQuery {
  readonly QueryName: string;
}

export interface ListAggregateDiscoveredResources {
  readonly ConfigurationAggregatorName: string;
  readonly ResourceType: string;
  readonly Filters?: ResourceFilters;
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface ListDiscoveredResources {
  readonly resourceType: string;
  readonly resourceIds?: [];
  readonly resourceName?: string;
  readonly limit?: number;
  readonly includeDeletedResources?: boolean;
  readonly nextToken?: string;
}

export interface ListStoredQueries {
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListTagsForResource {
  readonly ResourceArn: string;
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface PutAggregationAuthorization {
  readonly AuthorizedAccountId: string;
  readonly AuthorizedAwsRegion: string;
  readonly Tags?: [];
}

export interface PutConfigRule {
  readonly ConfigRule: ConfigRule;
  readonly Tags?: [];
}

export interface PutConfigurationAggregator {
  readonly ConfigurationAggregatorName: string;
  readonly AccountAggregationSources?: [];
  readonly OrganizationAggregationSource?: OrganizationAggregationSource;
  readonly Tags?: [];
}

export interface PutConfigurationRecorder {
  readonly ConfigurationRecorder: ConfigurationRecorder;
}

export interface PutConformancePack {
  readonly ConformancePackName: string;
  readonly TemplateS3Uri?: string;
  readonly TemplateBody?: string;
  readonly DeliveryS3Bucket?: string;
  readonly DeliveryS3KeyPrefix?: string;
  readonly ConformancePackInputParameters?: [];
}

export interface PutDeliveryChannel {
  readonly DeliveryChannel: DeliveryChannel;
}

export interface PutEvaluations {
  readonly Evaluations?: [];
  readonly ResultToken: string;
  readonly TestMode?: boolean;
}

export interface PutExternalEvaluation {
  readonly ConfigRuleName: string;
  readonly ExternalEvaluation: ExternalEvaluation;
}

export interface PutOrganizationConfigRule {
  readonly OrganizationConfigRuleName: string;
  readonly OrganizationManagedRuleMetadata?: OrganizationManagedRuleMetadata;
  readonly OrganizationCustomRuleMetadata?: OrganizationCustomRuleMetadata;
  readonly ExcludedAccounts?: [];
}

export interface PutOrganizationConformancePack {
  readonly OrganizationConformancePackName: string;
  readonly TemplateS3Uri?: string;
  readonly TemplateBody?: string;
  readonly DeliveryS3Bucket?: string;
  readonly DeliveryS3KeyPrefix?: string;
  readonly ConformancePackInputParameters?: [];
  readonly ExcludedAccounts?: [];
}

export interface PutRemediationConfigurations {
  readonly RemediationConfigurations: [];
}

export interface PutRemediationExceptions {
  readonly ConfigRuleName: string;
  readonly ResourceKeys: [];
  readonly Message?: string;
  readonly ExpirationTime?: Date;
}

export interface PutResourceConfig {
  readonly ResourceType: string;
  readonly SchemaVersionId: string;
  readonly ResourceId: string;
  readonly ResourceName?: string;
  readonly Configuration: string;
  readonly Tags?: {[key: string]: any};
}

export interface PutRetentionConfiguration {
  readonly RetentionPeriodInDays: number;
}

export interface PutStoredQuery {
  readonly StoredQuery: StoredQuery;
  readonly Tags?: [];
}

export interface SelectAggregateResourceConfig {
  readonly Expression: string;
  readonly ConfigurationAggregatorName: string;
  readonly Limit?: number;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface SelectResourceConfig {
  readonly Expression: string;
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface StartConfigRulesEvaluation {
  readonly ConfigRuleNames?: [];
}

export interface StartConfigurationRecorder {
  readonly ConfigurationRecorderName: string;
}

export interface StartRemediationExecution {
  readonly ConfigRuleName: string;
  readonly ResourceKeys: [];
}

export interface StopConfigurationRecorder {
  readonly ConfigurationRecorderName: string;
}

export interface TagResource {
  readonly ResourceArn: string;
  readonly Tags: [];
}

export interface UntagResource {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}

export interface AccountAggregationSource {
  readonly AccountIds: [];
  readonly AllAwsRegions?: boolean;
  readonly AwsRegions?: [];
}

export interface AggregateComplianceByConfigRule {
  readonly ConfigRuleName?: string;
  readonly Compliance?: Compliance;
  readonly AccountId?: string;
  readonly AwsRegion?: string;
}

export interface AggregateComplianceByConformancePack {
  readonly ConformancePackName?: string;
  readonly Compliance?: AggregateConformancePackCompliance;
  readonly AccountId?: string;
  readonly AwsRegion?: string;
}

export interface AggregateComplianceCount {
  readonly GroupName?: string;
  readonly ComplianceSummary?: ComplianceSummary;
}

export interface AggregateConformancePackCompliance {
  readonly ComplianceType?: string;
  readonly CompliantRuleCount?: number;
  readonly NonCompliantRuleCount?: number;
  readonly TotalRuleCount?: number;
}

export interface AggregateConformancePackComplianceCount {
  readonly CompliantConformancePackCount?: number;
  readonly NonCompliantConformancePackCount?: number;
}

export interface AggregateConformancePackComplianceFilters {
  readonly ConformancePackName?: string;
  readonly ComplianceType?: string;
  readonly AccountId?: string;
  readonly AwsRegion?: string;
}

export interface AggregateConformancePackComplianceSummary {
  readonly ComplianceSummary?: AggregateConformancePackComplianceCount;
  readonly GroupName?: string;
}

export interface AggregateConformancePackComplianceSummaryFilters {
  readonly AccountId?: string;
  readonly AwsRegion?: string;
}

export interface AggregateEvaluationResult {
  readonly EvaluationResultIdentifier?: EvaluationResultIdentifier;
  readonly ComplianceType?: string;
  readonly ResultRecordedTime?: Date;
  readonly ConfigRuleInvokedTime?: Date;
  readonly Annotation?: string;
  readonly AccountId?: string;
  readonly AwsRegion?: string;
}

export interface AggregateResourceIdentifier {
  readonly SourceAccountId: string;
  readonly SourceRegion: string;
  readonly ResourceId: string;
  readonly ResourceType: string;
  readonly ResourceName?: string;
}

export interface AggregatedSourceStatus {
  readonly SourceId?: string;
  readonly SourceType?: string;
  readonly AwsRegion?: string;
  readonly LastUpdateStatus?: string;
  readonly LastUpdateTime?: Date;
  readonly LastErrorCode?: string;
  readonly LastErrorMessage?: string;
}

export interface AggregationAuthorization {
  readonly AggregationAuthorizationArn?: string;
  readonly AuthorizedAccountId?: string;
  readonly AuthorizedAwsRegion?: string;
  readonly CreationTime?: Date;
}

export interface BaseConfigurationItem {
  readonly version?: string;
  readonly accountId?: string;
  readonly configurationItemCaptureTime?: Date;
  readonly configurationItemStatus?: string;
  readonly configurationStateId?: string;
  readonly arn?: string;
  readonly resourceType?: string;
  readonly resourceId?: string;
  readonly resourceName?: string;
  readonly awsRegion?: string;
  readonly availabilityZone?: string;
  readonly resourceCreationTime?: Date;
  readonly configuration?: string;
  readonly supplementaryConfiguration?: {[key: string]: any};
}

export interface BatchGetAggregateResourceConfigRequest {
  readonly ConfigurationAggregatorName: string;
  readonly ResourceIdentifiers: [];
}

export interface BatchGetAggregateResourceConfigResponse {
  readonly BaseConfigurationItems?: [];
  readonly UnprocessedResourceIdentifiers?: [];
}

export interface BatchGetResourceConfigRequest {
  readonly resourceKeys: [];
}

export interface BatchGetResourceConfigResponse {
  readonly baseConfigurationItems?: [];
  readonly unprocessedResourceKeys?: [];
}

export interface Compliance {
  readonly ComplianceType?: string;
  readonly ComplianceContributorCount?: ComplianceContributorCount;
}

export interface ComplianceByConfigRule {
  readonly ConfigRuleName?: string;
  readonly Compliance?: Compliance;
}

export interface ComplianceByResource {
  readonly ResourceType?: string;
  readonly ResourceId?: string;
  readonly Compliance?: Compliance;
}

export interface ComplianceContributorCount {
  readonly CappedCount?: number;
  readonly CapExceeded?: boolean;
}

export interface ComplianceSummary {
  readonly CompliantResourceCount?: ComplianceContributorCount;
  readonly NonCompliantResourceCount?: ComplianceContributorCount;
  readonly ComplianceSummaryTimestamp?: Date;
}

export interface ComplianceSummaryByResourceType {
  readonly ResourceType?: string;
  readonly ComplianceSummary?: ComplianceSummary;
}

export interface ConfigExportDeliveryInfo {
  readonly lastStatus?: string;
  readonly lastErrorCode?: string;
  readonly lastErrorMessage?: string;
  readonly lastAttemptTime?: Date;
  readonly lastSuccessfulTime?: Date;
  readonly nextDeliveryTime?: Date;
}

export interface ConfigRule {
  readonly ConfigRuleName?: string;
  readonly ConfigRuleArn?: string;
  readonly ConfigRuleId?: string;
  readonly Description?: string;
  readonly Scope?: Scope;
  readonly Source: Source;
  readonly InputParameters?: string;
  readonly MaximumExecutionFrequency?: string;
  readonly ConfigRuleState?: string;
  readonly CreatedBy?: string;
}

export interface ConfigRuleComplianceFilters {
  readonly ConfigRuleName?: string;
  readonly ComplianceType?: string;
  readonly AccountId?: string;
  readonly AwsRegion?: string;
}

export interface ConfigRuleComplianceSummaryFilters {
  readonly AccountId?: string;
  readonly AwsRegion?: string;
}

export interface ConfigRuleEvaluationStatus {
  readonly ConfigRuleName?: string;
  readonly ConfigRuleArn?: string;
  readonly ConfigRuleId?: string;
  readonly LastSuccessfulInvocationTime?: Date;
  readonly LastFailedInvocationTime?: Date;
  readonly LastSuccessfulEvaluationTime?: Date;
  readonly LastFailedEvaluationTime?: Date;
  readonly FirstActivatedTime?: Date;
  readonly LastDeactivatedTime?: Date;
  readonly LastErrorCode?: string;
  readonly LastErrorMessage?: string;
  readonly FirstEvaluationStarted?: boolean;
}

export interface ConfigSnapshotDeliveryProperties {
  readonly deliveryFrequency?: string;
}

export interface ConfigStreamDeliveryInfo {
  readonly lastStatus?: string;
  readonly lastErrorCode?: string;
  readonly lastErrorMessage?: string;
  readonly lastStatusChangeTime?: Date;
}

export interface ConfigurationAggregator {
  readonly ConfigurationAggregatorName?: string;
  readonly ConfigurationAggregatorArn?: string;
  readonly AccountAggregationSources?: [];
  readonly OrganizationAggregationSource?: OrganizationAggregationSource;
  readonly CreationTime?: Date;
  readonly LastUpdatedTime?: Date;
  readonly CreatedBy?: string;
}

export interface ConfigurationItem {
  readonly version?: string;
  readonly accountId?: string;
  readonly configurationItemCaptureTime?: Date;
  readonly configurationItemStatus?: string;
  readonly configurationStateId?: string;
  readonly configurationItemMD5Hash?: string;
  readonly arn?: string;
  readonly resourceType?: string;
  readonly resourceId?: string;
  readonly resourceName?: string;
  readonly awsRegion?: string;
  readonly availabilityZone?: string;
  readonly resourceCreationTime?: Date;
  readonly tags?: {[key: string]: any};
  readonly relatedEvents?: [];
  readonly relationships?: [];
  readonly configuration?: string;
  readonly supplementaryConfiguration?: {[key: string]: any};
}

export interface ConfigurationRecorder {
  readonly name?: string;
  readonly roleARN?: string;
  readonly recordingGroup?: RecordingGroup;
}

export interface ConfigurationRecorderStatus {
  readonly name?: string;
  readonly lastStartTime?: Date;
  readonly lastStopTime?: Date;
  readonly recording?: boolean;
  readonly lastStatus?: string;
  readonly lastErrorCode?: string;
  readonly lastErrorMessage?: string;
  readonly lastStatusChangeTime?: Date;
}

export interface ConformancePackComplianceFilters {
  readonly ConfigRuleNames?: [];
  readonly ComplianceType?: string;
}

export interface ConformancePackComplianceSummary {
  readonly ConformancePackName: string;
  readonly ConformancePackComplianceStatus: string;
}

export interface ConformancePackDetail {
  readonly ConformancePackName: string;
  readonly ConformancePackArn: string;
  readonly ConformancePackId: string;
  readonly DeliveryS3Bucket?: string;
  readonly DeliveryS3KeyPrefix?: string;
  readonly ConformancePackInputParameters?: [];
  readonly LastUpdateRequestedTime?: Date;
  readonly CreatedBy?: string;
}

export interface ConformancePackEvaluationFilters {
  readonly ConfigRuleNames?: [];
  readonly ComplianceType?: string;
  readonly ResourceType?: string;
  readonly ResourceIds?: [];
}

export interface ConformancePackEvaluationResult {
  readonly ComplianceType: string;
  readonly EvaluationResultIdentifier: EvaluationResultIdentifier;
  readonly ConfigRuleInvokedTime: Date;
  readonly ResultRecordedTime: Date;
  readonly Annotation?: string;
}

export interface ConformancePackInputParameter {
  readonly ParameterName: string;
  readonly ParameterValue: string;
}

export interface ConformancePackRuleCompliance {
  readonly ConfigRuleName?: string;
  readonly ComplianceType?: string;
  readonly Controls?: [];
}

export interface ConformancePackStatusDetail {
  readonly ConformancePackName: string;
  readonly ConformancePackId: string;
  readonly ConformancePackArn: string;
  readonly ConformancePackState: string;
  readonly StackArn: string;
  readonly ConformancePackStatusReason?: string;
  readonly LastUpdateRequestedTime: Date;
  readonly LastUpdateCompletedTime?: Date;
}

export interface ConformancePackTemplateValidationException {
}

export interface DeleteAggregationAuthorizationRequest {
  readonly AuthorizedAccountId: string;
  readonly AuthorizedAwsRegion: string;
}

export interface DeleteConfigRuleRequest {
  readonly ConfigRuleName: string;
}

export interface DeleteConfigurationAggregatorRequest {
  readonly ConfigurationAggregatorName: string;
}

export interface DeleteConfigurationRecorderRequest {
  readonly ConfigurationRecorderName: string;
}

export interface DeleteConformancePackRequest {
  readonly ConformancePackName: string;
}

export interface DeleteDeliveryChannelRequest {
  readonly DeliveryChannelName: string;
}

export interface DeleteEvaluationResultsRequest {
  readonly ConfigRuleName: string;
}

export interface DeleteEvaluationResultsResponse {
}

export interface DeleteOrganizationConfigRuleRequest {
  readonly OrganizationConfigRuleName: string;
}

export interface DeleteOrganizationConformancePackRequest {
  readonly OrganizationConformancePackName: string;
}

export interface DeletePendingAggregationRequestRequest {
  readonly RequesterAccountId: string;
  readonly RequesterAwsRegion: string;
}

export interface DeleteRemediationConfigurationRequest {
  readonly ConfigRuleName: string;
  readonly ResourceType?: string;
}

export interface DeleteRemediationConfigurationResponse {
}

export interface DeleteRemediationExceptionsRequest {
  readonly ConfigRuleName: string;
  readonly ResourceKeys: [];
}

export interface DeleteRemediationExceptionsResponse {
  readonly FailedBatches?: [];
}

export interface DeleteResourceConfigRequest {
  readonly ResourceType: string;
  readonly ResourceId: string;
}

export interface DeleteRetentionConfigurationRequest {
  readonly RetentionConfigurationName: string;
}

export interface DeleteStoredQueryRequest {
  readonly QueryName: string;
}

export interface DeleteStoredQueryResponse {
}

export interface DeliverConfigSnapshotRequest {
  readonly deliveryChannelName: string;
}

export interface DeliverConfigSnapshotResponse {
  readonly configSnapshotId?: string;
}

export interface DeliveryChannel {
  readonly name?: string;
  readonly s3BucketName?: string;
  readonly s3KeyPrefix?: string;
  readonly s3KmsKeyArn?: string;
  readonly snsTopicARN?: string;
  readonly configSnapshotDeliveryProperties?: ConfigSnapshotDeliveryProperties;
}

export interface DeliveryChannelStatus {
  readonly name?: string;
  readonly configSnapshotDeliveryInfo?: ConfigExportDeliveryInfo;
  readonly configHistoryDeliveryInfo?: ConfigExportDeliveryInfo;
  readonly configStreamDeliveryInfo?: ConfigStreamDeliveryInfo;
}

export interface DescribeAggregateComplianceByConfigRulesRequest {
  readonly ConfigurationAggregatorName: string;
  readonly Filters?: ConfigRuleComplianceFilters;
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeAggregateComplianceByConfigRulesResponse {
  readonly AggregateComplianceByConfigRules?: [];
  readonly NextToken?: string;
}

export interface DescribeAggregateComplianceByConformancePacksRequest {
  readonly ConfigurationAggregatorName: string;
  readonly Filters?: AggregateConformancePackComplianceFilters;
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeAggregateComplianceByConformancePacksResponse {
  readonly AggregateComplianceByConformancePacks?: [];
  readonly NextToken?: string;
}

export interface DescribeAggregationAuthorizationsRequest {
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeAggregationAuthorizationsResponse {
  readonly AggregationAuthorizations?: [];
  readonly NextToken?: string;
}

export interface DescribeComplianceByConfigRuleRequest {
  readonly ConfigRuleNames?: [];
  readonly ComplianceTypes?: [];
  readonly NextToken?: string;
}

export interface DescribeComplianceByConfigRuleResponse {
  readonly ComplianceByConfigRules?: [];
  readonly NextToken?: string;
}

export interface DescribeComplianceByResourceRequest {
  readonly ResourceType?: string;
  readonly ResourceId?: string;
  readonly ComplianceTypes?: [];
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeComplianceByResourceResponse {
  readonly ComplianceByResources?: [];
  readonly NextToken?: string;
}

export interface DescribeConfigRuleEvaluationStatusRequest {
  readonly ConfigRuleNames?: [];
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface DescribeConfigRuleEvaluationStatusResponse {
  readonly ConfigRulesEvaluationStatus?: [];
  readonly NextToken?: string;
}

export interface DescribeConfigRulesRequest {
  readonly ConfigRuleNames?: [];
  readonly NextToken?: string;
}

export interface DescribeConfigRulesResponse {
  readonly ConfigRules?: [];
  readonly NextToken?: string;
}

export interface DescribeConfigurationAggregatorSourcesStatusRequest {
  readonly ConfigurationAggregatorName: string;
  readonly UpdateStatus?: [];
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface DescribeConfigurationAggregatorSourcesStatusResponse {
  readonly AggregatedSourceStatusList?: [];
  readonly NextToken?: string;
}

export interface DescribeConfigurationAggregatorsRequest {
  readonly ConfigurationAggregatorNames?: [];
  readonly NextToken?: string;
  readonly Limit?: number;
}

export interface DescribeConfigurationAggregatorsResponse {
  readonly ConfigurationAggregators?: [];
  readonly NextToken?: string;
}

export interface DescribeConfigurationRecorderStatusRequest {
  readonly ConfigurationRecorderNames?: [];
}

export interface DescribeConfigurationRecorderStatusResponse {
  readonly ConfigurationRecordersStatus?: [];
}

export interface DescribeConfigurationRecordersRequest {
  readonly ConfigurationRecorderNames?: [];
}

export interface DescribeConfigurationRecordersResponse {
  readonly ConfigurationRecorders?: [];
}

export interface DescribeConformancePackComplianceRequest {
  readonly ConformancePackName: string;
  readonly Filters?: ConformancePackComplianceFilters;
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeConformancePackComplianceResponse {
  readonly ConformancePackName: string;
  readonly ConformancePackRuleComplianceList: [];
  readonly NextToken?: string;
}

export interface DescribeConformancePackStatusRequest {
  readonly ConformancePackNames?: [];
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeConformancePackStatusResponse {
  readonly ConformancePackStatusDetails?: [];
  readonly NextToken?: string;
}

export interface DescribeConformancePacksRequest {
  readonly ConformancePackNames?: [];
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeConformancePacksResponse {
  readonly ConformancePackDetails?: [];
  readonly NextToken?: string;
}

export interface DescribeDeliveryChannelStatusRequest {
  readonly DeliveryChannelNames?: [];
}

export interface DescribeDeliveryChannelStatusResponse {
  readonly DeliveryChannelsStatus?: [];
}

export interface DescribeDeliveryChannelsRequest {
  readonly DeliveryChannelNames?: [];
}

export interface DescribeDeliveryChannelsResponse {
  readonly DeliveryChannels?: [];
}

export interface DescribeOrganizationConfigRuleStatusesRequest {
  readonly OrganizationConfigRuleNames?: [];
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeOrganizationConfigRuleStatusesResponse {
  readonly OrganizationConfigRuleStatuses?: [];
  readonly NextToken?: string;
}

export interface DescribeOrganizationConfigRulesRequest {
  readonly OrganizationConfigRuleNames?: [];
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeOrganizationConfigRulesResponse {
  readonly OrganizationConfigRules?: [];
  readonly NextToken?: string;
}

export interface DescribeOrganizationConformancePackStatusesRequest {
  readonly OrganizationConformancePackNames?: [];
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeOrganizationConformancePackStatusesResponse {
  readonly OrganizationConformancePackStatuses?: [];
  readonly NextToken?: string;
}

export interface DescribeOrganizationConformancePacksRequest {
  readonly OrganizationConformancePackNames?: [];
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeOrganizationConformancePacksResponse {
  readonly OrganizationConformancePacks?: [];
  readonly NextToken?: string;
}

export interface DescribePendingAggregationRequestsRequest {
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribePendingAggregationRequestsResponse {
  readonly PendingAggregationRequests?: [];
  readonly NextToken?: string;
}

export interface DescribeRemediationConfigurationsRequest {
  readonly ConfigRuleNames: [];
}

export interface DescribeRemediationConfigurationsResponse {
  readonly RemediationConfigurations?: [];
}

export interface DescribeRemediationExceptionsRequest {
  readonly ConfigRuleName: string;
  readonly ResourceKeys?: [];
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeRemediationExceptionsResponse {
  readonly RemediationExceptions?: [];
  readonly NextToken?: string;
}

export interface DescribeRemediationExecutionStatusRequest {
  readonly ConfigRuleName: string;
  readonly ResourceKeys?: [];
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface DescribeRemediationExecutionStatusResponse {
  readonly RemediationExecutionStatuses?: [];
  readonly NextToken?: string;
}

export interface DescribeRetentionConfigurationsRequest {
  readonly RetentionConfigurationNames?: [];
  readonly NextToken?: string;
}

export interface DescribeRetentionConfigurationsResponse {
  readonly RetentionConfigurations?: [];
  readonly NextToken?: string;
}

export interface Evaluation {
  readonly ComplianceResourceType: string;
  readonly ComplianceResourceId: string;
  readonly ComplianceType: string;
  readonly Annotation?: string;
  readonly OrderingTimestamp: Date;
}

export interface EvaluationResult {
  readonly EvaluationResultIdentifier?: EvaluationResultIdentifier;
  readonly ComplianceType?: string;
  readonly ResultRecordedTime?: Date;
  readonly ConfigRuleInvokedTime?: Date;
  readonly Annotation?: string;
  readonly ResultToken?: string;
}

export interface EvaluationResultIdentifier {
  readonly EvaluationResultQualifier?: EvaluationResultQualifier;
  readonly OrderingTimestamp?: Date;
}

export interface EvaluationResultQualifier {
  readonly ConfigRuleName?: string;
  readonly ResourceType?: string;
  readonly ResourceId?: string;
}

export interface ExecutionControls {
  readonly SsmControls?: SsmControls;
}

export interface ExternalEvaluation {
  readonly ComplianceResourceType: string;
  readonly ComplianceResourceId: string;
  readonly ComplianceType: string;
  readonly Annotation?: string;
  readonly OrderingTimestamp: Date;
}

export interface FailedDeleteRemediationExceptionsBatch {
  readonly FailureMessage?: string;
  readonly FailedItems?: [];
}

export interface FailedRemediationBatch {
  readonly FailureMessage?: string;
  readonly FailedItems?: [];
}

export interface FailedRemediationExceptionBatch {
  readonly FailureMessage?: string;
  readonly FailedItems?: [];
}

export interface FieldInfo {
  readonly Name?: string;
}

export interface GetAggregateComplianceDetailsByConfigRuleRequest {
  readonly ConfigurationAggregatorName: string;
  readonly ConfigRuleName: string;
  readonly AccountId: string;
  readonly AwsRegion: string;
  readonly ComplianceType?: string;
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface GetAggregateComplianceDetailsByConfigRuleResponse {
  readonly AggregateEvaluationResults?: [];
  readonly NextToken?: string;
}

export interface GetAggregateConfigRuleComplianceSummaryRequest {
  readonly ConfigurationAggregatorName: string;
  readonly Filters?: ConfigRuleComplianceSummaryFilters;
  readonly GroupByKey?: string;
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface GetAggregateConfigRuleComplianceSummaryResponse {
  readonly GroupByKey?: string;
  readonly AggregateComplianceCounts?: [];
  readonly NextToken?: string;
}

export interface GetAggregateConformancePackComplianceSummaryRequest {
  readonly ConfigurationAggregatorName: string;
  readonly Filters?: AggregateConformancePackComplianceSummaryFilters;
  readonly GroupByKey?: string;
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface GetAggregateConformancePackComplianceSummaryResponse {
  readonly AggregateConformancePackComplianceSummaries?: [];
  readonly GroupByKey?: string;
  readonly NextToken?: string;
}

export interface GetAggregateDiscoveredResourceCountsRequest {
  readonly ConfigurationAggregatorName: string;
  readonly Filters?: ResourceCountFilters;
  readonly GroupByKey?: string;
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface GetAggregateDiscoveredResourceCountsResponse {
  readonly TotalDiscoveredResources: number;
  readonly GroupByKey?: string;
  readonly GroupedResourceCounts?: [];
  readonly NextToken?: string;
}

export interface GetAggregateResourceConfigRequest {
  readonly ConfigurationAggregatorName: string;
  readonly ResourceIdentifier: AggregateResourceIdentifier;
}

export interface GetAggregateResourceConfigResponse {
  readonly ConfigurationItem?: ConfigurationItem;
}

export interface GetComplianceDetailsByConfigRuleRequest {
  readonly ConfigRuleName: string;
  readonly ComplianceTypes?: [];
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface GetComplianceDetailsByConfigRuleResponse {
  readonly EvaluationResults?: [];
  readonly NextToken?: string;
}

export interface GetComplianceDetailsByResourceRequest {
  readonly ResourceType: string;
  readonly ResourceId: string;
  readonly ComplianceTypes?: [];
  readonly NextToken?: string;
}

export interface GetComplianceDetailsByResourceResponse {
  readonly EvaluationResults?: [];
  readonly NextToken?: string;
}

export interface GetComplianceSummaryByConfigRuleResponse {
  readonly ComplianceSummary?: ComplianceSummary;
}

export interface GetComplianceSummaryByResourceTypeRequest {
  readonly ResourceTypes?: [];
}

export interface GetComplianceSummaryByResourceTypeResponse {
  readonly ComplianceSummariesByResourceType?: [];
}

export interface GetConformancePackComplianceDetailsRequest {
  readonly ConformancePackName: string;
  readonly Filters?: ConformancePackEvaluationFilters;
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface GetConformancePackComplianceDetailsResponse {
  readonly ConformancePackName: string;
  readonly ConformancePackRuleEvaluationResults?: [];
  readonly NextToken?: string;
}

export interface GetConformancePackComplianceSummaryRequest {
  readonly ConformancePackNames: [];
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface GetConformancePackComplianceSummaryResponse {
  readonly ConformancePackComplianceSummaryList?: [];
  readonly NextToken?: string;
}

export interface GetDiscoveredResourceCountsRequest {
  readonly resourceTypes?: [];
  readonly limit?: number;
  readonly nextToken?: string;
}

export interface GetDiscoveredResourceCountsResponse {
  readonly totalDiscoveredResources?: number;
  readonly resourceCounts?: [];
  readonly nextToken?: string;
}

export interface GetOrganizationConfigRuleDetailedStatusRequest {
  readonly OrganizationConfigRuleName: string;
  readonly Filters?: StatusDetailFilters;
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface GetOrganizationConfigRuleDetailedStatusResponse {
  readonly OrganizationConfigRuleDetailedStatus?: [];
  readonly NextToken?: string;
}

export interface GetOrganizationConformancePackDetailedStatusRequest {
  readonly OrganizationConformancePackName: string;
  readonly Filters?: OrganizationResourceDetailedStatusFilters;
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface GetOrganizationConformancePackDetailedStatusResponse {
  readonly OrganizationConformancePackDetailedStatuses?: [];
  readonly NextToken?: string;
}

export interface GetResourceConfigHistoryRequest {
  readonly resourceType: string;
  readonly resourceId: string;
  readonly laterTime?: Date;
  readonly earlierTime?: Date;
  readonly chronologicalOrder?: string;
  readonly limit?: number;
  readonly nextToken?: string;
}

export interface GetResourceConfigHistoryResponse {
  readonly configurationItems?: [];
  readonly nextToken?: string;
}

export interface GetStoredQueryRequest {
  readonly QueryName: string;
}

export interface GetStoredQueryResponse {
  readonly StoredQuery?: StoredQuery;
}

export interface GroupedResourceCount {
  readonly GroupName: string;
  readonly ResourceCount: number;
}

export interface InsufficientDeliveryPolicyException {
}

export interface InsufficientPermissionsException {
}

export interface InvalidConfigurationRecorderNameException {
}

export interface InvalidDeliveryChannelNameException {
}

export interface InvalidExpressionException {
}

export interface InvalidLimitException {
}

export interface InvalidNextTokenException {
}

export interface InvalidParameterValueException {
}

export interface InvalidRecordingGroupException {
}

export interface InvalidResultTokenException {
}

export interface InvalidRoleException {
}

export interface InvalidS3KeyPrefixException {
}

export interface InvalidS3KmsKeyArnException {
}

export interface InvalidSNSTopicARNException {
}

export interface InvalidTimeRangeException {
}

export interface LastDeliveryChannelDeleteFailedException {
}

export interface LimitExceededException {
}

export interface ListAggregateDiscoveredResourcesRequest {
  readonly ConfigurationAggregatorName: string;
  readonly ResourceType: string;
  readonly Filters?: ResourceFilters;
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface ListAggregateDiscoveredResourcesResponse {
  readonly ResourceIdentifiers?: [];
  readonly NextToken?: string;
}

export interface ListDiscoveredResourcesRequest {
  readonly resourceType: string;
  readonly resourceIds?: [];
  readonly resourceName?: string;
  readonly limit?: number;
  readonly includeDeletedResources?: boolean;
  readonly nextToken?: string;
}

export interface ListDiscoveredResourcesResponse {
  readonly resourceIdentifiers?: [];
  readonly nextToken?: string;
}

export interface ListStoredQueriesRequest {
  readonly NextToken?: string;
  readonly MaxResults?: number;
}

export interface ListStoredQueriesResponse {
  readonly StoredQueryMetadata?: [];
  readonly NextToken?: string;
}

export interface ListTagsForResourceRequest {
  readonly ResourceArn: string;
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface ListTagsForResourceResponse {
  readonly Tags?: [];
  readonly NextToken?: string;
}

export interface MaxActiveResourcesExceededException {
}

export interface MaxNumberOfConfigRulesExceededException {
}

export interface MaxNumberOfConfigurationRecordersExceededException {
}

export interface MaxNumberOfConformancePacksExceededException {
}

export interface MaxNumberOfDeliveryChannelsExceededException {
}

export interface MaxNumberOfOrganizationConfigRulesExceededException {
}

export interface MaxNumberOfOrganizationConformancePacksExceededException {
}

export interface MaxNumberOfRetentionConfigurationsExceededException {
}

export interface MemberAccountStatus {
  readonly AccountId: string;
  readonly ConfigRuleName: string;
  readonly MemberAccountRuleStatus: string;
  readonly ErrorCode?: string;
  readonly ErrorMessage?: string;
  readonly LastUpdateTime?: Date;
}

export interface NoAvailableConfigurationRecorderException {
}

export interface NoAvailableDeliveryChannelException {
}

export interface NoAvailableOrganizationException {
}

export interface NoRunningConfigurationRecorderException {
}

export interface NoSuchBucketException {
}

export interface NoSuchConfigRuleException {
}

export interface NoSuchConfigRuleInConformancePackException {
}

export interface NoSuchConfigurationAggregatorException {
}

export interface NoSuchConfigurationRecorderException {
}

export interface NoSuchConformancePackException {
}

export interface NoSuchDeliveryChannelException {
}

export interface NoSuchOrganizationConfigRuleException {
}

export interface NoSuchOrganizationConformancePackException {
}

export interface NoSuchRemediationConfigurationException {
}

export interface NoSuchRemediationExceptionException {
}

export interface NoSuchRetentionConfigurationException {
}

export interface OrganizationAccessDeniedException {
}

export interface OrganizationAggregationSource {
  readonly RoleArn: string;
  readonly AwsRegions?: [];
  readonly AllAwsRegions?: boolean;
}

export interface OrganizationAllFeaturesNotEnabledException {
}

export interface OrganizationConfigRule {
  readonly OrganizationConfigRuleName: string;
  readonly OrganizationConfigRuleArn: string;
  readonly OrganizationManagedRuleMetadata?: OrganizationManagedRuleMetadata;
  readonly OrganizationCustomRuleMetadata?: OrganizationCustomRuleMetadata;
  readonly ExcludedAccounts?: [];
  readonly LastUpdateTime?: Date;
}

export interface OrganizationConfigRuleStatus {
  readonly OrganizationConfigRuleName: string;
  readonly OrganizationRuleStatus: string;
  readonly ErrorCode?: string;
  readonly ErrorMessage?: string;
  readonly LastUpdateTime?: Date;
}

export interface OrganizationConformancePack {
  readonly OrganizationConformancePackName: string;
  readonly OrganizationConformancePackArn: string;
  readonly DeliveryS3Bucket?: string;
  readonly DeliveryS3KeyPrefix?: string;
  readonly ConformancePackInputParameters?: [];
  readonly ExcludedAccounts?: [];
  readonly LastUpdateTime: Date;
}

export interface OrganizationConformancePackDetailedStatus {
  readonly AccountId: string;
  readonly ConformancePackName: string;
  readonly Status: string;
  readonly ErrorCode?: string;
  readonly ErrorMessage?: string;
  readonly LastUpdateTime?: Date;
}

export interface OrganizationConformancePackStatus {
  readonly OrganizationConformancePackName: string;
  readonly Status: string;
  readonly ErrorCode?: string;
  readonly ErrorMessage?: string;
  readonly LastUpdateTime?: Date;
}

export interface OrganizationConformancePackTemplateValidationException {
}

export interface OrganizationCustomRuleMetadata {
  readonly Description?: string;
  readonly LambdaFunctionArn: string;
  readonly OrganizationConfigRuleTriggerTypes: [];
  readonly InputParameters?: string;
  readonly MaximumExecutionFrequency?: string;
  readonly ResourceTypesScope?: [];
  readonly ResourceIdScope?: string;
  readonly TagKeyScope?: string;
  readonly TagValueScope?: string;
}

export interface OrganizationManagedRuleMetadata {
  readonly Description?: string;
  readonly RuleIdentifier: string;
  readonly InputParameters?: string;
  readonly MaximumExecutionFrequency?: string;
  readonly ResourceTypesScope?: [];
  readonly ResourceIdScope?: string;
  readonly TagKeyScope?: string;
  readonly TagValueScope?: string;
}

export interface OrganizationResourceDetailedStatusFilters {
  readonly AccountId?: string;
  readonly Status?: string;
}

export interface OversizedConfigurationItemException {
}

export interface PendingAggregationRequest {
  readonly RequesterAccountId?: string;
  readonly RequesterAwsRegion?: string;
}

export interface PutAggregationAuthorizationRequest {
  readonly AuthorizedAccountId: string;
  readonly AuthorizedAwsRegion: string;
  readonly Tags?: [];
}

export interface PutAggregationAuthorizationResponse {
  readonly AggregationAuthorization?: AggregationAuthorization;
}

export interface PutConfigRuleRequest {
  readonly ConfigRule: ConfigRule;
  readonly Tags?: [];
}

export interface PutConfigurationAggregatorRequest {
  readonly ConfigurationAggregatorName: string;
  readonly AccountAggregationSources?: [];
  readonly OrganizationAggregationSource?: OrganizationAggregationSource;
  readonly Tags?: [];
}

export interface PutConfigurationAggregatorResponse {
  readonly ConfigurationAggregator?: ConfigurationAggregator;
}

export interface PutConfigurationRecorderRequest {
  readonly ConfigurationRecorder: ConfigurationRecorder;
}

export interface PutConformancePackRequest {
  readonly ConformancePackName: string;
  readonly TemplateS3Uri?: string;
  readonly TemplateBody?: string;
  readonly DeliveryS3Bucket?: string;
  readonly DeliveryS3KeyPrefix?: string;
  readonly ConformancePackInputParameters?: [];
}

export interface PutConformancePackResponse {
  readonly ConformancePackArn?: string;
}

export interface PutDeliveryChannelRequest {
  readonly DeliveryChannel: DeliveryChannel;
}

export interface PutEvaluationsRequest {
  readonly Evaluations?: [];
  readonly ResultToken: string;
  readonly TestMode?: boolean;
}

export interface PutEvaluationsResponse {
  readonly FailedEvaluations?: [];
}

export interface PutExternalEvaluationRequest {
  readonly ConfigRuleName: string;
  readonly ExternalEvaluation: ExternalEvaluation;
}

export interface PutExternalEvaluationResponse {
}

export interface PutOrganizationConfigRuleRequest {
  readonly OrganizationConfigRuleName: string;
  readonly OrganizationManagedRuleMetadata?: OrganizationManagedRuleMetadata;
  readonly OrganizationCustomRuleMetadata?: OrganizationCustomRuleMetadata;
  readonly ExcludedAccounts?: [];
}

export interface PutOrganizationConfigRuleResponse {
  readonly OrganizationConfigRuleArn?: string;
}

export interface PutOrganizationConformancePackRequest {
  readonly OrganizationConformancePackName: string;
  readonly TemplateS3Uri?: string;
  readonly TemplateBody?: string;
  readonly DeliveryS3Bucket?: string;
  readonly DeliveryS3KeyPrefix?: string;
  readonly ConformancePackInputParameters?: [];
  readonly ExcludedAccounts?: [];
}

export interface PutOrganizationConformancePackResponse {
  readonly OrganizationConformancePackArn?: string;
}

export interface PutRemediationConfigurationsRequest {
  readonly RemediationConfigurations: [];
}

export interface PutRemediationConfigurationsResponse {
  readonly FailedBatches?: [];
}

export interface PutRemediationExceptionsRequest {
  readonly ConfigRuleName: string;
  readonly ResourceKeys: [];
  readonly Message?: string;
  readonly ExpirationTime?: Date;
}

export interface PutRemediationExceptionsResponse {
  readonly FailedBatches?: [];
}

export interface PutResourceConfigRequest {
  readonly ResourceType: string;
  readonly SchemaVersionId: string;
  readonly ResourceId: string;
  readonly ResourceName?: string;
  readonly Configuration: string;
  readonly Tags?: {[key: string]: any};
}

export interface PutRetentionConfigurationRequest {
  readonly RetentionPeriodInDays: number;
}

export interface PutRetentionConfigurationResponse {
  readonly RetentionConfiguration?: RetentionConfiguration;
}

export interface PutStoredQueryRequest {
  readonly StoredQuery: StoredQuery;
  readonly Tags?: [];
}

export interface PutStoredQueryResponse {
  readonly QueryArn?: string;
}

export interface QueryInfo {
  readonly SelectFields?: [];
}

export interface RecordingGroup {
  readonly allSupported?: boolean;
  readonly includeGlobalResourceTypes?: boolean;
  readonly resourceTypes?: [];
}

export interface Relationship {
  readonly resourceType?: string;
  readonly resourceId?: string;
  readonly resourceName?: string;
  readonly relationshipName?: string;
}

export interface RemediationConfiguration {
  readonly ConfigRuleName: string;
  readonly TargetType: string;
  readonly TargetId: string;
  readonly TargetVersion?: string;
  readonly Parameters?: {[key: string]: any};
  readonly ResourceType?: string;
  readonly Automatic?: boolean;
  readonly ExecutionControls?: ExecutionControls;
  readonly MaximumAutomaticAttempts?: number;
  readonly RetryAttemptSeconds?: number;
  readonly Arn?: string;
  readonly CreatedByService?: string;
}

export interface RemediationException {
  readonly ConfigRuleName: string;
  readonly ResourceType: string;
  readonly ResourceId: string;
  readonly Message?: string;
  readonly ExpirationTime?: Date;
}

export interface RemediationExceptionResourceKey {
  readonly ResourceType?: string;
  readonly ResourceId?: string;
}

export interface RemediationExecutionStatus {
  readonly ResourceKey?: ResourceKey;
  readonly State?: string;
  readonly StepDetails?: [];
  readonly InvocationTime?: Date;
  readonly LastUpdatedTime?: Date;
}

export interface RemediationExecutionStep {
  readonly Name?: string;
  readonly State?: string;
  readonly ErrorMessage?: string;
  readonly StartTime?: Date;
  readonly StopTime?: Date;
}

export interface RemediationInProgressException {
}

export interface RemediationParameterValue {
  readonly ResourceValue?: ResourceValue;
  readonly StaticValue?: StaticValue;
}

export interface ResourceConcurrentModificationException {
  readonly message?: string;
}

export interface ResourceCount {
  readonly resourceType?: string;
  readonly count?: number;
}

export interface ResourceCountFilters {
  readonly ResourceType?: string;
  readonly AccountId?: string;
  readonly Region?: string;
}

export interface ResourceFilters {
  readonly AccountId?: string;
  readonly ResourceId?: string;
  readonly ResourceName?: string;
  readonly Region?: string;
}

export interface ResourceIdentifier {
  readonly resourceType?: string;
  readonly resourceId?: string;
  readonly resourceName?: string;
  readonly resourceDeletionTime?: Date;
}

export interface ResourceInUseException {
}

export interface ResourceKey {
  readonly resourceType: string;
  readonly resourceId: string;
}

export interface ResourceNotDiscoveredException {
}

export interface ResourceNotFoundException {
}

export interface ResourceValue {
  readonly Value: string;
}

export interface RetentionConfiguration {
  readonly Name: string;
  readonly RetentionPeriodInDays: number;
}

export interface Scope {
  readonly ComplianceResourceTypes?: [];
  readonly TagKey?: string;
  readonly TagValue?: string;
  readonly ComplianceResourceId?: string;
}

export interface SelectAggregateResourceConfigRequest {
  readonly Expression: string;
  readonly ConfigurationAggregatorName: string;
  readonly Limit?: number;
  readonly MaxResults?: number;
  readonly NextToken?: string;
}

export interface SelectAggregateResourceConfigResponse {
  readonly Results?: [];
  readonly QueryInfo?: QueryInfo;
  readonly NextToken?: string;
}

export interface SelectResourceConfigRequest {
  readonly Expression: string;
  readonly Limit?: number;
  readonly NextToken?: string;
}

export interface SelectResourceConfigResponse {
  readonly Results?: [];
  readonly QueryInfo?: QueryInfo;
  readonly NextToken?: string;
}

export interface Source {
  readonly Owner: string;
  readonly SourceIdentifier: string;
  readonly SourceDetails?: [];
}

export interface SourceDetail {
  readonly EventSource?: string;
  readonly MessageType?: string;
  readonly MaximumExecutionFrequency?: string;
}

export interface SsmControls {
  readonly ConcurrentExecutionRatePercentage?: number;
  readonly ErrorPercentage?: number;
}

export interface StartConfigRulesEvaluationRequest {
  readonly ConfigRuleNames?: [];
}

export interface StartConfigRulesEvaluationResponse {
}

export interface StartConfigurationRecorderRequest {
  readonly ConfigurationRecorderName: string;
}

export interface StartRemediationExecutionRequest {
  readonly ConfigRuleName: string;
  readonly ResourceKeys: [];
}

export interface StartRemediationExecutionResponse {
  readonly FailureMessage?: string;
  readonly FailedItems?: [];
}

export interface StaticValue {
  readonly Values: [];
}

export interface StatusDetailFilters {
  readonly AccountId?: string;
  readonly MemberAccountRuleStatus?: string;
}

export interface StopConfigurationRecorderRequest {
  readonly ConfigurationRecorderName: string;
}

export interface StoredQuery {
  readonly QueryId?: string;
  readonly QueryArn?: string;
  readonly QueryName: string;
  readonly Description?: string;
  readonly Expression?: string;
}

export interface StoredQueryMetadata {
  readonly QueryId: string;
  readonly QueryArn: string;
  readonly QueryName: string;
  readonly Description?: string;
}

export interface Tag {
  readonly Key?: string;
  readonly Value?: string;
}

export interface TagResourceRequest {
  readonly ResourceArn: string;
  readonly Tags: [];
}

export interface TooManyTagsException {
}

export interface UntagResourceRequest {
  readonly ResourceArn: string;
  readonly TagKeys: [];
}

export interface ValidationException {
}


